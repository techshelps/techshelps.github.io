<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Call Transfer</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_tspi_call_transfer"></a>Call Transfer</h3>
<p>
The Telephony SPI provides two mechanisms for call transfer: blind transfer and consultation transfer.
<ul>
<li>
<b>Blind transfer (or single-step transfer)</b> An existing call is transferred to a specified destination address in one phase using <a href="func1_2cky.htm"><b>TSPI_lineBlindTransfer</b></a>. This function transfers a call that was set up for transfer to another call.</li>
<li>
<b>Consultation transfer</b> The existing call is first prepared for transfer using <a href="func3_7u42.htm"><b>TSPI_lineSetupTransfer</b></a>. This places the existing call on consultation hold, and identifies the call as the target for the next transfer completion request. <b>TSPI_lineSetupTransfer</b> also allocates a consultation call that can be used to establish the consultation call with the party to be transferred to. The tapi32.dll can dial the extension of the destination party on the consultation call (using <a href="func1_7ep8.htm"><b>TSPI_lineDial</b></a>), or it can drop and deallocate the consultation call and instead activate an existing held call (using <a href="func3_0jtw.htm"><b>TSPI_lineUnhold</b></a>), if supported by the switch.</li>
</ul>
<p>
While the initial call is on consultation hold and the consultation call is active, tapi32.dll can toggle between these calls with <a href="func3_7wpw.htm"><b>TSPI_lineSwapHold</b></a>. It swaps the active call with the call currently on consultation hold.</p>
<p>
Finally, tapi32.dll completes the transfer in one of two ways using <b>TSPI_lineCompleteTransfer</b>:
<ul>
<li>
Transfer the call on transfer hold to the destination party. Both calls are cleared from the line; they transition to the <i>idle</i> state, but they remain valid.</li>
<li>
Enter a three-way conference. A new call handle is created to represent the conference and this handle is returned to tapi32.dll.</li>
</ul>
<p>&nbsp;</p></body>
</HTML>
