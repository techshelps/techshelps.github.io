<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>LINEFORWARDMODE_ Constants</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_tspi_lineforwardmode__constants"></a>LINEFORWARDMODE_ Constants</h1>
<p>
The LINEFORWARDMODE_ bit-flag constants describe the conditions under which calls to an address can be forwarded. 
<dl>
<dt>
LINEFORWARDMODE_UNCOND </dt>
<dd>
Forward all calls unconditionally irrespective of their origin. Use this value when unconditional forwarding for internal and external calls cannot be controlled separately. Unconditional forwarding overrides forwarding on busy and/or no-answer conditions. </dd>
<dt>
LINEFORWARDMODE_UNCONDINTERNAL </dt>
<dd>
Forward all internal calls unconditionally. Use this value when unconditional forwarding for internal and external calls can be controlled separately. </dd>
<dt>
LINEFORWARDMODE_UNCONDEXTERNAL </dt>
<dd>
Forward all external calls unconditionally. Use this value when unconditional forwarding for internal and external calls can be controlled separately. </dd>
<dt>
LINEFORWARDMODE_UNCONDSPECIFIC </dt>
<dd>
Forward all calls that originated at a specified address unconditionally (selective call forwarding). </dd>
<dt>
LINEFORWARDMODE_BUSY </dt>
<dd>
Forward all calls on busy, irrespective of their origin. Use this value when forwarding for internal and external calls on busy and no answer cannot be controlled separately. </dd>
<dt>
LINEFORWARDMODE_BUSYINTERNAL </dt>
<dd>
Forward all internal calls on busy. Use this value when forwarding for internal and external calls on busy and no answer can be controlled separately. </dd>
<dt>
LINEFORWARDMODE_BUSYEXTERNAL </dt>
<dd>
Forward all external calls on busy. Use this value when forwarding for internal and external calls on busy and no answer can be controlled separately. </dd>
<dt>
LINEFORWARDMODE_BUSYSPECIFIC </dt>
<dd>
Forward all calls that originated at a specified address on busy (selective call forwarding). </dd>
<dt>
LINEFORWARDMODE_NOANSW </dt>
<dd>
Forward all calls on no answer, irrespective of their origin. Use this value when call forwarding for internal and external calls on no answer cannot be controlled separately. </dd>
<dt>
LINEFORWARDMODE_NOANSWINTERNAL </dt>
<dd>
Forward all internal calls on no answer. Use this value when forwarding for internal and external calls on no answer can be controlled separately. </dd>
<dt>
LINEFORWARDMODE_NOANSWEXTERNAL </dt>
<dd>
Forward all external calls on no answer. Use this value when forwarding for internal and external calls on no answer can be controlled separately. </dd>
<dt>
LINEFORWARDMODE_NOANSWSPECIFIC </dt>
<dd>
Forward all calls that originated at a specified address on no answer (selective call forwarding). </dd>
<dt>
LINEFORWARDMODE_BUSYNA </dt>
<dd>
Forward all calls on busy/no answer irrespective of their origin. Use this value when forwarding for internal and external calls on busy and no answer cannot be controlled separately. </dd>
<dt>
LINEFORWARDMODE_BUSYNAINTERNAL </dt>
<dd>
Forward all internal calls on busy/no answer. Use this value when call forwarding on busy and no answer cannot be controlled separately for internal calls. </dd>
<dt>
LINEFORWARDMODE_BUSYNAEXTERNAL </dt>
<dd>
Forward all external calls on busy/no answer. Use this value when call forwarding on busy and no answer cannot be controlled separately for internal calls. </dd>
<dt>
LINEFORWARDMODE_BUSYNASPECIFIC </dt>
<dd>
Forward all calls that originated at a specified address on busy/no answer (selective call forwarding). 
</dd>
</dl>
<p>
Not extensible. All 32 bits are reserved.</p>
<p>
The bit flags defined by LINEFORWARDMODE_ are not orthogonal. Unconditional forwarding ignores any specific condition such as busy or no answer. If unconditional forwarding is not in effect, forwarding on busy and no answer can either be controlled separately or not. If controlled separately, the BUSY and NOANSW flags can be used separately. If not controlled separately, the flag BUSYNA must be used. Similarly, if forwarding of internal and external calls can be controlled separately, INTERNAL and EXTERNAL flags can be used separately, otherwise the combination is used.</p>
<p>
Address capabilities indicate for each address assigned to a line the forwarding mode(s) that are available. An application can use <b>TSPI_lineForward</b> to set forwarding conditions at the switch.</p>
<h4>See Also</h4>
<p>
<a href="messgs_53s5.htm">LINE_ADDRESSSTATE</a>, <a href="struc1_54du.htm"><b>LINEADDRESSCAPS</b></a>,  <a href="struc1_6inm.htm"><b>LINEADDRESSSTATUS</b></a>, <a href="struc2_1jsi.htm"><b>LINEFORWARD</b></a>, <a href="func1_61k4.htm"><b>TSPI_lineForward</b></a>, <a href="func1_16k3.htm"><b>TSPI_lineGetAddressCaps</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
