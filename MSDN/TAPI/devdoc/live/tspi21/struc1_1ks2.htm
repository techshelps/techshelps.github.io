<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>LINECALLINFO</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_tspi_linecallinfo_str"></a>LINECALLINFO</h1>
<p>
The <b>LINECALLINFO</b> structure contains information about a call. This information remains relatively fixed for the duration of the call and is obtained using <a href="func1_1shb.htm"><b>TSPI_lineGetCallInfo</b></a>. If a part of the structure does change, a <a href="messgs_0fvz.htm">LINE_CALLINFO</a> message is sent to the application indicating which information item has changed. Dynamically changing information about a call, such as call progress status, is available in the <a href="struc1_790y.htm"><b>LINECALLSTATUS</b></a> structure, returned with the function <a href="func2_6oj7.htm"><b>TSPI_lineGetCallStatus</b></a>.</p>
<pre><code>typedef struct linecallinfo_tag {
    DWORD  dwTotalSize;
    DWORD  dwNeededSize;
    DWORD  dwUsedSize;

    HLINE  hLine;
    DWORD  dwLineDeviceID;
    DWORD  dwAddressID;

    DWORD  dwBearerMode;
    DWORD  dwRate;
    DWORD  dwMediaMode;

    DWORD  dwAppSpecific;
    DWORD  dwCallID;
    DWORD  dwRelatedCallID;
    DWORD  dwCallParamFlags;
    DWORD  dwCallStates;

    DWORD  dwMonitorDigitModes;
    DWORD  dwMonitorMediaModes;
    LINEDIALPARAMS  DialParams;

    DWORD  dwOrigin;
    DWORD  dwReason;
    DWORD  dwCompletionID;
    DWORD  dwNumOwners;
    DWORD  dwNumMonitors;

    DWORD  dwCountryCode;
    DWORD  dwTrunk;

    DWORD  dwCallerIDFlags;
    DWORD  dwCallerIDSize;
    DWORD  dwCallerIDOffset;
    DWORD  dwCallerIDNameSize;
    DWORD  dwCallerIDNameOffset;

    DWORD  dwCalledIDFlags;
    DWORD  dwCalledIDSize;
    DWORD  dwCalledIDOffset;
    DWORD  dwCalledIDNameSize;
    DWORD  dwCalledIDNameOffset;

    DWORD  dwConnectedIDFlags;
    DWORD  dwConnectedIDSize;
    DWORD  dwConnectedIDOffset;
    DWORD  dwConnectedIDNameSize;
    DWORD  dwConnectedIDNameOffset;

    DWORD  dwRedirectionIDFlags;
    DWORD  dwRedirectionIDSize;
    DWORD  dwRedirectionIDOffset;
    DWORD  dwRedirectionIDNameSize;
    DWORD  dwRedirectionIDNameOffset;

    DWORD  dwRedirectingIDFlags;
    DWORD  dwRedirectingIDSize;
    DWORD  dwRedirectingIDOffset;
    DWORD  dwRedirectingIDNameSize;
    DWORD  dwRedirectingIDNameOffset;

    DWORD  dwAppNameSize;
    DWORD  dwAppNameOffset;

    DWORD  dwDisplayableAddressSize
    DWORD  dwDisplayableAddressOffset
 
    DWORD  dwCalledPartySize;
    DWORD  dwCalledPartyOffset;

    DWORD  dwCommentSize;
    DWORD  dwCommentOffset;

    DWORD  dwDisplaySize;
    DWORD  dwDisplayOffset;

    DWORD  dwUserUserInfoSize;
    DWORD  dwUserUserInfoOffset;

    DWORD  dwHighLevelCompSize;
    DWORD  dwHighLevelCompOffset;

    DWORD  dwLowLevelCompSize;
    DWORD  dwLowLevelCompOffset;

    DWORD  dwChargingInfoSize;
    DWORD  dwChargingInfoOffset;

    DWORD  dwTerminalModesSize;
    DWORD  dwTerminalModesOffset;

    DWORD  dwDevSpecificSize;
    DWORD  dwDevSpecificOffset;
} LINECALLINFO, FAR *LPLINECALLINFO;
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>dwTotalSize</b></dt>
<dd>
The total size in bytes allocated to this data structure.</dd>
<dt>
<b>dwNeededSize</b></dt>
<dd>
The size in bytes for this data structure that is needed to hold all returned information.</dd>
<dt>
<b>dwUsedSize</b></dt>
<dd>
The size in bytes of the portion of this data structure that contains useful information.</dd>
<dt>
<b>hLine</b></dt>
<dd>
Handle for the line device with which this call is associated.</dd>
<dt>
<b>dwLineDeviceID</b></dt>
<dd>
The device identifier of the line device with which this call is associated.</dd>
<dt>
<b>dwAddressID</b></dt>
<dd>
The address identifier of the address on the line on which this call exists.</dd>
<dt>
<b>dwBearerMode</b></dt>
<dd>
The current bearer mode of the call. This member uses the following LINEBEARERMODE_ constants: 
<dl>
<dt>
LINEBEARERMODE_VOICE </dt>
<dd>
Regular 3.1kHz analog voice grade bearer service. Bit integrity is not assured. Voice can support fax and modem media modes. </dd>
<dt>
LINEBEARERMODE_SPEECH </dt>
<dd>
Corresponds to G.711 speech transmission on the call. The network can use processing techniques such as analog transmission, echo cancellation and compression/decompression. Bit integrity is not assured. Speech is not intended to support fax and modem media modes. </dd>
<dt>
LINEBEARERMODE_MULTIUSE </dt>
<dd>
The multiuse mode defined by ISDN. </dd>
<dt>
LINEBEARERMODE_DATA </dt>
<dd>
The unrestricted data transfer on the call. The data rate is specified separately. </dd>
<dt>
LINEBEARERMODE_ALTSPEECHDATA </dt>
<dd>
The alternate transfer of speech or unrestricted data on the same call (ISDN). </dd>
<dt>
LINEBEARERMODE_NONCALLSIGNALING </dt>
<dd>
Corresponds to a non-call-associated signaling connection from the application to the service provider or switch (treated as a media stream by the Telephony API). </dd>
<dt>
LINEBEARERMODE_PASSTHROUGH </dt>
<dd>
When a call is active in LINEBEARERMODE_PASSTHROUGH, the service provider gives direct access to the attached hardware for control by the application. This mode is used primarily by applications desiring temporary direct control over asynchronous modems, accessed through the Win32 comm functions, for the purpose of configuring or using special features not otherwise supported by the service provider. </dd>
</dl>
</dd>
<dt>
<b>dwRate</b></dt>
<dd>
The rate of the call's data stream in bps (bits per second).</dd>
<dt>
<b>dwMediaMode</b></dt>
<dd>
The media mode of the information stream currently on the call, of type LINEMEDIAMODE_. This is the media mode as determined by the owner of the call, which is not necessarily the same as that of the last <a href="messgs_1nkx.htm">LINE_MONITORMEDIA</a> message. This member is not directly affected by LINE_MONITORMEDIA messages. Values are: 
<dl>
<dt>
LINEMEDIAMODE_UNKNOWN </dt>
<dd>
A media stream exists but its mode is not known. This corresponds to a call with an unclassified media type. In typical analog telephony environments, an inbound call's media mode may be unknown until after the call is answered and the media stream is filtered to make a determination. </dd>
<dt>
LINEMEDIAMODE_INTERACTIVEVOICE </dt>
<dd>
The presence of voice energy on the call and the call is treated as an interactive call with humans on both ends. </dd>
<dt>
LINEMEDIAMODE_AUTOMATEDVOICE </dt>
<dd>
The presence of voice energy on the call and the voice is locally handled by an automated application. </dd>
<dt>
LINEMEDIAMODE_DATAMODEM </dt>
<dd>
A data modem session on the call. </dd>
<dt>
LINEMEDIAMODE_G3FAX </dt>
<dd>
A group 3 fax is being sent or received over the call. </dd>
<dt>
LINEMEDIAMODE_TDD </dt>
<dd>
A TDD (Telephony Devices for the Deaf) session on the call. </dd>
<dt>
LINEMEDIAMODE_G4FAX </dt>
<dd>
A group 4 fax is being sent or received over the call. </dd>
<dt>
LINEMEDIAMODE_DIGITALDATA </dt>
<dd>
Digital data is being sent or received over the call. </dd>
<dt>
LINEMEDIAMODE_TELETEX </dt>
<dd>
A teletex session on the call. Teletex is one of the telematic services. </dd>
<dt>
LINEMEDIAMODE_VIDEOTEX </dt>
<dd>
A videotex session on the call. Videotex is one the telematic services. </dd>
<dt>
LINEMEDIAMODE_TELEX </dt>
<dd>
A telex session on the call. Telex is one the telematic services. </dd>
<dt>
LINEMEDIAMODE_MIXED </dt>
<dd>
A mixed session on the call. Mixed is one of the ISDN telematic services. </dd>
<dt>
LINEMEDIAMODE_ADSI </dt>
<dd>
An ADSI (Analog Display Services Interface) session on the call. </dd>
<dt>
LINEMEDIAMODE_VOICEVIEW </dt>
<dd>
The media mode of the call is VoiceView. </dd>
</dl>
</dd>
<dt>
<b>dwAppSpecific</b></dt>
<dd>
This member is uninterpreted by the API implementation and service provider. It can be set by any owner application of this call with <a href="func2_8uqr.htm"><b>TSPI_lineSetAppSpecific</b></a>.</dd>
<dt>
<b>dwCallID</b></dt>
<dd>
In some telephony environments, the switch or service provider can assign a unique identifier to each call. This allows the call to be tracked across transfers, forwards, or other events. The domain of these call identifiers and their scope is service-provider defined. The <b>dwCallID</b> member makes this unique identifier available to the applications.</dd>
<dt>
<b>dwRelatedCallID</b></dt>
<dd>
Telephony environments that use the call ID often may find it necessary to relate one call to another. The <b>dwRelatedCallID</b> member can be used by the service provider for this purpose.</dd>
<dt>
<b>dwCallParamFlags</b></dt>
<dd>
A collection of call-related parameters when the call is outbound. These are the same call parameters specified through <a href="func2_0r8s.htm"><b>TSPI_lineMakeCall</b></a>, of type LINECALLPARAMFLAGS_. Values are: 
<dl>
<dt>
LINECALLPARAMFLAGS_SECURE </dt>
<dd>
The call is currently secure. This flag is also updated if the call is later secured with <a href="func2_82r0.htm"><b>TSPI_lineSecureCall</b></a>. </dd>
<dt>
LINECALLPARAMFLAGS_IDLE </dt>
<dd>
The call started out using an idle call. </dd>
<dt>
LINECALLPARAMFLAGS_BLOCKID </dt>
<dd>
The originator identity is concealed (blocked caller ID presentation to the remote party). </dd>
<dt>
LINECALLPARAMFLAGS_ORIGOFFHOOK </dt>
<dd>
The originator's phone is automatically taken offhook. </dd>
<dt>
LINECALLPARAMFLAGS_DESTOFFHOOK </dt>
<dd>
The called party's phone is automatically taken offhook. </dd>
</dl>
</dd>
<dt>
<b>dwCallStates</b></dt>
<dd>
The call states for which the application can be notified on this call. This member uses the LINECALLSTATE_ constants listed below. The <b>dwCallStates</b> member is constant in <b>LINECALLINFO</b>. It describes the call states that can be reported during the lifetime of this call, and does not change depending on call state. (<b>LINECALLINFO</b> should be seen as a "call caps".) Values are: 
<dl>
<dt>
LINECALLSTATE_IDLE </dt>
<dd>
The call is idle; no call actually exists. </dd>
<dt>
LINECALLSTATE_OFFERING </dt>
<dd>
The call is being offered to the station, signaling the arrival of a new call. In some environments, a call in the <i>offering</i> state does not automatically alert the user; alerting is done by the switch instructing the line to ring. It does not affect any call states. </dd>
<dt>
LINECALLSTATE_ACCEPTED </dt>
<dd>
The call was offering and is accepted. This indicates to other (monitoring) applications that the current owner application has claimed responsibility for answering the call. In ISDN, this also initiates alerting to both parties. </dd>
<dt>
LINECALLSTATE_DIALTONE </dt>
<dd>
The call is receiving a dial tone from the switch, which means that the switch is ready to receive a dialed number. </dd>
<dt>
LINECALLSTATE_DIALING </dt>
<dd>
Destination address information (a phone number) is being sent to the switch over the call. Note that the operation <a href="func1_4m7n.htm"><b>TSPI_lineGenerateDigits</b></a> does not place the line into the <i>dialing</i> state. </dd>
<dt>
LINECALLSTATE_RINGBACK </dt>
<dd>
The call is receiving ringback from the called address. Ringback indicates that the other station has been reached and is being alerted. </dd>
<dt>
LINECALLSTATE_BUSY </dt>
<dd>
The call is receiving a busy tone. Busy tone indicates that the call cannot be completed because either a circuit (trunk) or the remote party's station are in use. </dd>
<dt>
LINECALLSTATE_SPECIALINFO </dt>
<dd>
Special information is sent by the network. Special information is typically sent when the destination cannot be reached. </dd>
<dt>
LINECALLSTATE_CONNECTED </dt>
<dd>
The call is established, the connection is made. Information is able to flow over the call between the originating address and the destination address. </dd>
<dt>
LINECALLSTATE_PROCEEDING </dt>
<dd>
Dialing is completed and the call is proceeding through the switch or telephone network. </dd>
<dt>
LINECALLSTATE_ONHOLD </dt>
<dd>
The call is on hold by the switch. </dd>
<dt>
LINECALLSTATE_CONFERENCED </dt>
<dd>
The call is currently a member of a multiparty conference call. </dd>
<dt>
LINECALLSTATE_ONHOLDPENDCONF </dt>
<dd>
The call is currently on hold while it is being added to a conference. </dd>
<dt>
LINECALLSTATE_ONHOLDPENDTRANSFER </dt>
<dd>
The call is currently on hold awaiting transfer to another number. </dd>
<dt>
LINECALLSTATE_DISCONNECTED </dt>
<dd>
The remote party has disconnected from the call. </dd>
<dt>
LINECALLSTATE_UNKNOWN </dt>
<dd>
The state of the call is not known. This can be due to limitations of the call progress detection implementation. </dd>
</dl>
</dd>
<dt>
<b>dwMonitorDigitModes</b></dt>
<dd>
The various digit modes for which monitoring is currently enabled. This member uses the following LINEDIGITMODE_ constants: 
<dl>
<dt>
LINEDIGITMODE_PULSE </dt>
<dd>
Use pulse/rotary for digit signaling. </dd>
<dt>
LINEDIGITMODE_DTMF </dt>
<dd>
Use DTMF tones for digit signaling. </dd>
<dt>
LINEDIGITMODE_DTMFEND </dt>
<dd>
Use DTMF tones for digit detection, and also detect the down edges. </dd>
</dl>
</dd>
<dt>
<b>dwMonitorMediaModes</b></dt>
<dd>
The various media modes for which monitoring is currently enabled. This member uses the following LINEMEDIAMODE_ constants: 
<dl>
<dt>
LINEMEDIAMODE_INTERACTIVEVOICE </dt>
<dd>
The presence of voice energy on the call and the call is treated as an interactive call with humans on both ends. </dd>
<dt>
LINEMEDIAMODE_AUTOMATEDVOICE </dt>
<dd>
The presence of voice energy on the call and the voice is locally handled by an automated application. </dd>
<dt>
LINEMEDIAMODE_DATAMODEM </dt>
<dd>
A data modem session on the call. </dd>
<dt>
LINEMEDIAMODE_G3FAX </dt>
<dd>
A group 3 fax is being sent or received over the call. </dd>
<dt>
LINEMEDIAMODE_TDD </dt>
<dd>
A TDD (Telephony Devices for the Deaf) session on the call. </dd>
<dt>
LINEMEDIAMODE_G4FAX </dt>
<dd>
A group 4 fax is being sent or received over the call. </dd>
<dt>
LINEMEDIAMODE_DIGITALDATA </dt>
<dd>
Digital data is being sent or received over the call. </dd>
<dt>
LINEMEDIAMODE_TELETEX </dt>
<dd>
A teletex session on the call. Teletex is one of the telematic services. </dd>
<dt>
LINEMEDIAMODE_VIDEOTEX </dt>
<dd>
A videotex session on the call. Videotex is one the telematic services. </dd>
<dt>
LINEMEDIAMODE_TELEX </dt>
<dd>
A telex session on the call. Telex is one the telematic services. </dd>
<dt>
LINEMEDIAMODE_MIXED </dt>
<dd>
A mixed session on the call. Mixed is one the ISDN telematic services. </dd>
<dt>
LINEMEDIAMODE_ADSI </dt>
<dd>
An ADSI (Analog Display Services Interface) session on the call. </dd>
<dt>
LINEMEDIAMODE_VOICEVIEW </dt>
<dd>
The media mode of the call is VoiceView. </dd>
</dl>
</dd>
<dt>
<b>DialParams</b></dt>
<dd>
The dialing parameters currently in effect on the call, of type <a href="struc2_2e0i.htm"><b>LINEDIALPARAMS</b></a>. Unless these parameters are set by either <a href="func2_0r8s.htm"><b>TSPI_lineMakeCall</b></a> or <a href="func2_0y7n.htm"><b>TSPI_lineSetCallParams</b></a>, their values are the same as the defaults used in <a href="struc2_0j1u.htm"><b>LINEDEVCAPS</b></a>.</dd>
<dt>
<b>dwOrigin</b></dt>
<dd>
Identifies where the call originated from. This member uses the following LINECALLORIGIN_ constants: 
<dl>
<dt>
LINECALLORIGIN_OUTBOUND </dt>
<dd>
The call is an outbound call. </dd>
<dt>
LINECALLORIGIN_INTERNAL </dt>
<dd>
The call is inbound and originated internally (on the same PBX, for example). </dd>
<dt>
LINECALLORIGIN_EXTERNAL </dt>
<dd>
The call is inbound and originated externally. </dd>
<dt>
LINECALLORIGIN_UNKNOWN </dt>
<dd>
The call is an inbound call, but its origin is currently unknown but can become known later. </dd>
<dt>
LINECALLORIGIN_UNAVAIL </dt>
<dd>
The call is an inbound call, and its origin is not available and cannot become known for this call. </dd>
</dl>
</dd>
<dt>
LINECALLORIGIN_CONFERENCE</dt>
<dd>
The call handle is for a conference call, that is, the application's connection to the conference bridge in the switch.</dd>
<dt>
<b>dwReason</b></dt>
<dd>
The reason why the call occurred. This member uses the following LINECALLREASON_ constants: 
<dl>
<dt>
LINECALLREASON_DIRECT </dt>
<dd>
This is a direct call. </dd>
<dt>
LINECALLREASON_FWDBUSY </dt>
<dd>
This call was forwarded from another extension that was busy at the time of the call. </dd>
<dt>
LINECALLREASON_FWDNOANSWER </dt>
<dd>
The call was forwarded from another extension that didn't answer the call after some number of rings. </dd>
<dt>
LINECALLREASON_FWDUNCOND </dt>
<dd>
The call was forwarded unconditionally from another number. </dd>
<dt>
LINECALLREASON_PICKUP </dt>
<dd>
The call was picked up from another extension. </dd>
<dt>
LINECALLREASON_UNPARK </dt>
<dd>
The call was retrieved as a parked call. </dd>
<dt>
LINECALLREASON_REDIRECT </dt>
<dd>
The call was redirected to this station. </dd>
<dt>
LINECALLREASON_CALLCOMPLETION </dt>
<dd>
The call was the result of a call completion request. </dd>
<dt>
LINECALLREASON_TRANSFER </dt>
<dd>
The call has been transferred from another number. Party identifier information can indicate who the caller is and where the call was transferred from. </dd>
<dt>
LINECALLREASON_REMINDER </dt>
<dd>
The call is a reminder (or recall) that the user has a call parked or on hold for potentially a long time. </dd>
<dt>
LINECALLREASON_UNKNOWN </dt>
<dd>
The reason for the call is currently unknown but can become known later. </dd>
<dt>
LINECALLREASON_UNAVAIL </dt>
<dd>
The reason for the call is unavailable and cannot become known later. </dd>
</dl>
</dd>
<dt>
<b>dwCompletionID</b></dt>
<dd>
The completion identifier for the incoming call if it is the result of a completion request that terminates. This identifier is meaningful only if <b>dwReason</b> is LINECALLREASON_CALLCOMPLETION.</dd>
<dt>
<b>dwNumOwners</b></dt>
<dd>
The number of application modules with different call handles with owner privilege for the call.</dd>
<dt>
<b>dwNumMonitors</b></dt>
<dd>
The number of application modules with different call handles with monitor privilege for the call.</dd>
<dt>
<b>dwCountryCode</b></dt>
<dd>
The country code of the destination party. Zero if unknown.</dd>
<dt>
<b>dwTrunk</b></dt>
<dd>
The number of the trunk over which the call is routed. This member is used for both inbound and outgoing calls, and should be set to 0xFFFFFFFF if it is unknown.</dd>
<dt>
<b>dwCallerIDFlags</b></dt>
<dd>
Determines the validity and content of the caller party identifier information. The caller is the originator of the call. This member uses the following LINECALLPARTYID_ constants: 
<dl>
<dt>
LINECALLPARTYID_BLOCKED </dt>
<dd>
Caller ID information for the call is blocked by the caller, but would otherwise be available. </dd>
<dt>
LINECALLPARTYID_OUTOFAREA </dt>
<dd>
Caller ID information for the call is not available because it is not propagated all the way by the network. </dd>
<dt>
LINECALLPARTYID_NAME </dt>
<dd>
The caller ID information for the call is the caller's name (from a table maintained inside the switch). It is provided in the caller ID name variably sized field. </dd>
<dt>
LINECALLPARTYID_ADDRESS </dt>
<dd>
The caller ID information for the call is the caller's number, and is provided in the caller ID variably sized field. </dd>
<dt>
LINECALLPARTYID_PARTIAL </dt>
<dd>
Caller ID information for the call is valid, but is limited to partial number information. </dd>
<dt>
LINECALLPARTYID_UNKNOWN </dt>
<dd>
Caller ID information is currently unknown, but it can become known later. </dd>
<dt>
LINECALLPARTYID_UNAVAIL </dt>
<dd>
Caller ID information is unavailable and cannot become known later. </dd>
</dl>
</dd>
<dt>
<b>dwCallerIDSize</b></dt>
<dt>
<b>dwCallerIDOffset</b></dt>
<dd>
The size in bytes and the offset in bytes from the beginning of this data structure of the variably sized field containing the caller party ID number information.</dd>
<dt>
<b>dwCallerIDNameSize</b></dt>
<dt>
<b>dwCallerIDNameOffset</b></dt>
<dd>
The size in bytes and the offset in bytes from the beginning of this data structure of the variably sized field containing the caller party ID name information.</dd>
<dt>
<b>dwCalledIDFlags</b></dt>
<dd>
Determines the validity and content of the called party ID information. The called party corresponds to the orignally addressed party. This member uses the following LINECALLPARTYID_ constants: 
<dl>
<dt>
LINECALLPARTYID_BLOCKED </dt>
<dd>
Called ID information for the call is blocked by the caller, but would otherwise be available. </dd>
<dt>
LINECALLPARTYID_OUTOFAREA </dt>
<dd>
Caller ID information for the call is not available as it is not propagated all the way by the network. </dd>
<dt>
LINECALLPARTYID_NAME </dt>
<dd>
The called ID information for the call is the caller's name (from a table maintained inside the switch). It is provided in the called ID name variably sized field. </dd>
<dt>
LINECALLPARTYID_ADDRESS </dt>
<dd>
The called ID information for the call is the caller's number, and is provided in the called ID variably sized field. </dd>
<dt>
LINECALLPARTYID_PARTIAL </dt>
<dd>
Called ID information for the call is valid, but is limited to partial number information. </dd>
<dt>
LINECALLPARTYID_UNKNOWN </dt>
<dd>
Called ID information is currently unknown but it can become known later. </dd>
<dt>
LINECALLPARTYID_UNAVAIL </dt>
<dd>
Called ID information is unavailable and cannot become known later. </dd>
</dl>
</dd>
<dt>
<b>dwCalledIDSize</b></dt>
<dt>
<b>dwCalledIDOffset</b></dt>
<dd>
The size in bytes and the offset in bytes from the beginning of this data structure of the variably sized field containing the called party ID number information.</dd>
<dt>
<b>dwCalledIDNameSize</b></dt>
<dt>
<b>dwCalledIDNameOffset</b></dt>
<dd>
The size in bytes and the offset in bytes from the beginning of this data structure of the variably sized field containing the called party ID name information.</dd>
<dt>
<b>dwConnectedFlags</b></dt>
<dd>
Determines the validity and content of the connected party ID information. The connected party is the party that was actually connected to. This can be different from the called party ID if the call was diverted. This member uses the following LINECALLPARTYID_ constants: 
<dl>
<dt>
LINECALLPARTYID_BLOCKED </dt>
<dd>
Connected party identifier information for the call is blocked by the caller, but would otherwise be available. </dd>
<dt>
LINECALLPARTYID_OUTOFAREA </dt>
<dd>
Connected identifier information for the call is not available as it is not propagated all the way by the network. </dd>
<dt>
LINECALLPARTYID_NAME </dt>
<dd>
The connected party identifier information for the call is the caller's name (from a table maintained inside the switch). It is provided in the connected identifier name variably sized field. </dd>
<dt>
LINECALLPARTYID_ADDRESS </dt>
<dd>
The connected party identifier information for the call is the caller's number, and is provided in the connected identifier variably sized field. </dd>
<dt>
LINECALLPARTYID_PARTIAL </dt>
<dd>
Connected party identifier information for the call is valid, but is limited to partial number information. </dd>
<dt>
LINECALLPARTYID_UNKNOWN </dt>
<dd>
Connected party identifier information is currently unknown, but can become known later. </dd>
<dt>
LINECALLPARTYID_UNAVAIL </dt>
<dd>
Connected party identifier information is unavailable and cannot become known later. </dd>
</dl>
</dd>
<dt>
<b>dwConnectedIDSize</b></dt>
<dt>
<b>dwConnectedIDOffset</b></dt>
<dd>
The size in bytes and the offset in bytes from the beginning of this data structure of the variably sized field containing the connected party identifier number information.</dd>
<dt>
<b>dwConnectedIDNameSize</b></dt>
<dt>
<b>dwConnectedIDNameOffset</b></dt>
<dd>
The size in bytes and the offset in bytes from the beginning of this data structure of the variably sized field containing the connected party identifier name information.</dd>
<dt>
<b>dwRedirectionIDFlags</b></dt>
<dd>
Determines the validity and content of the redirection party identifier information. The redirection party identifies to the calling user the number toward which diversion was invoked. This member uses the following LINECALLPARTYID_ constants: 
<dl>
<dt>
LINECALLPARTYID_BLOCKED </dt>
<dd>
Redirection party identifier information for the call is blocked by the caller, but would otherwise be available. </dd>
<dt>
LINECALLPARTYID_OUTOFAREA</dt>
<dd>
Redirection identifier information for the call is not available as it is not propagated all the way by the network. </dd>
<dt>
LINECALLPARTYID_NAME </dt>
<dd>
The redirection party identifier information for the call is the caller's name (from a table maintained inside the switch). It is provided in the redirection ID name variably sized field. </dd>
<dt>
LINECALLPARTYID_ADDRESS </dt>
<dd>
The redirection party identifier information for the call is the caller's number, and is provided in the redirection identifier variably sized field. </dd>
<dt>
LINECALLPARTYID_PARTIAL </dt>
<dd>
Redirection party identifier information for the call is valid, but is limited to partial number information. </dd>
<dt>
LINECALLPARTYID_UNKNOWN </dt>
<dd>
Redirection identifier information is currently unknown but it can become known later. </dd>
<dt>
LINECALLPARTYID_UNAVAIL </dt>
<dd>
Redirection identifier information is unavailable and cannot become known later. </dd>
</dl>
</dd>
<dt>
<b>dwRedirectionIDSize</b></dt>
<dt>
<b>dwRedirectionIDOffset</b></dt>
<dd>
The size in bytes and the offset in bytes from the beginning of this data structure of the variably sized field containing the redirection party identifier number information.</dd>
<dt>
<b>dwRedirectionIDNameSize</b></dt>
<dt>
<b>dwRedirectionIDNameOffset</b></dt>
<dd>
The size in bytes and the offset in bytes from the beginning of this data structure of the variably sized field containing the redirection party identifier name information.</dd>
<dt>
<b>dwRedirectingIDFlags</b></dt>
<dd>
Determines the validity and content of the redirecting party identifier information. The redirecting party identifies to the diverted-to user the party from which diversion was invoked. This member uses the following LINECALLPARTYID_ constants: 
<dl>
<dt>
LINECALLPARTYID_BLOCKED </dt>
<dd>
Redirecting party identifier information for the call is blocked by the caller, but would otherwise be available. </dd>
<dt>
LINECALLPARTYID_OUTOFAREA </dt>
<dd>
Redirecting identifier information for the call is not available because it is not propagated all the way by the network. </dd>
<dt>
LINECALLPARTYID_NAME </dt>
<dd>
The redirecting party identifier information for the call is the caller's name (from a table maintained inside the switch). It is provided in the redirecting identifier name variably sized field. </dd>
<dt>
LINECALLPARTYID_ADDRESS </dt>
<dd>
The redirecting party identifier information for the call is the caller's number, and is provided in the redirecting identifier variably sized field. </dd>
<dt>
LINECALLPARTYID_PARTIAL </dt>
<dd>
Redirecting party identifier information for the call is valid, but is limited to partial number information. </dd>
<dt>
LINECALLPARTYID_UNKNOWN </dt>
<dd>
Redirecting identifier information is currently unknown, but can become known later. </dd>
<dt>
LINECALLPARTYID_UNAVAIL </dt>
<dd>
Redirecting identifier information is unavailable and cannot become known later. </dd>
</dl>
</dd>
<dt>
<b>dwRedirectingIDSize</b></dt>
<dt>
<b>dwRedirectingIDOffset</b></dt>
<dd>
The size in bytes and the offset in bytes from the beginning of this data structure of the variably sized field containing the redirecting party identifier number information.</dd>
<dt>
<b>dwRedirectingIDNameSize</b></dt>
<dt>
<b>dwRedirectingIDNameOffset</b></dt>
<dd>
The size in bytes and the offset in bytes from the beginning of this data structure of the variably sized field containing the redirecting party identifier name information.</dd>
<dt>
<b>dwAppNameSize</b></dt>
<dt>
<b>dwAppNameOffset</b></dt>
<dd>
The size in bytes and the offset from the beginning of this data structure in bytes of the variably sized field holding the user-friendly application name of the application that first originated, accepted, or answered the call. This is the name that an application can specify with <b>lineInitialize</b>. If the application specifies no such name, the application's module name is used instead.</dd>
<dt>
<b>dwDisplayableAddressSize</b></dt>
<dt>
<b>dwDisplayableAddressOffset</b></dt>
<dd>
The displayable string is used for logging purposes. The information is obtained from <a href="struc1_8d82.htm"><b>LINECALLPARAMS</b></a> for functions that intiate calls. The TAPI function <b>lineTranslateAddress</b> returns appropriate information to be placed in this member in the <b>dwDisplayableAddressSize</b> and <b>dwDisplayableAddressOffset</b> members of the <b>LINETRANSLATEOUTPUT</b> structure.</dd>
<dt>
<b>dwCalledPartySize</b></dt>
<dt>
<b>dwCalledPartyOffset</b></dt>
<dd>
The size in bytes and the offset from the beginning of this data structure in bytes of the variably sized field holding a user-friendly description of the called party. This information can be specified with <a href="func2_0r8s.htm"><b>TSPI_lineMakeCall</b></a> and can be optionally specified with the <i>lpCallParams</i> parameter whenever a new call is established. It is useful for call logging purposes.</dd>
<dt>
<b>dwCommentSize</b></dt>
<dt>
<b>dwCommentOffset</b></dt>
<dd>
The size in bytes and the offset from the beginning of this data structure in bytes of the variably sized field holding a comment about the call provided by the application that originated the call using <b>TSPI_lineMakeCall</b>. This information can be optionally specified with the <i>lpCallParams</i> parameter whenever a new call is established.</dd>
<dt>
<b>dwDisplaySize</b></dt>
<dt>
<b>dwDisplayOffset</b></dt>
<dd>
The size in bytes and the offset from the beginning of this data structure in bytes of the variably sized field holding raw display information. Depending on the telephony environment, a service provider can extract functional information from this for presentation into a more functional way.</dd>
<dt>
<b>dwUserUserInfoSize</b></dt>
<dt>
<b>dwUserUserInfoOffset</b></dt>
<dd>
The size in bytes and the offset from the beginning of this data structure in bytes of the variably sized field holding user-user information.</dd>
<dt>
<b>dwHighLevelCompSize</b></dt>
<dt>
<b>dwHighLevelCompOffset</b></dt>
<dd>
The size in bytes and the offset from the beginning of this data structure in bytes of the variably sized field holding high-level compatibility information. The format of this information is specified by other standards (ISDN Q.931).</dd>
<dt>
<b>dwLowLevelCompSize</b></dt>
<dt>
<b>dwLowLevelCompOffset</b></dt>
<dd>
The size in bytes and the offset from the beginning of this data structure in bytes of the variably sized field holding low-level compatibility information. The format of this information is specified by other standards (ISDN Q.931).</dd>
<dt>
<b>dwChargingInfoSize</b></dt>
<dt>
<b>dwChargingInfoOffset</b></dt>
<dd>
The size in bytes and the offset from the beginning of this data structure in bytes of the variably sized field holding charging information. The format of this information is specified by other standards (ISDN Q.931).</dd>
<dt>
<b>dwTerminalModesSize</b></dt>
<dt>
<b>dwTerminalModesOffset</b></dt>
<dd>
The size in bytes and the offset in bytes from the beginning of this data structure of the variably sized device field containing an array with <b>DWORD</b>-sized entries, of type LINETERMMODE_. This array is indexed by terminal identifiers, in the range from zero to <b>dwNumTerminals</b> minus one. Each entry in the array specifies the current terminal modes for the corresponding terminal set with the <a href="func2_3hrg.htm"><b>TSPI_lineSetTerminal</b></a> function for this call's media stream. Values are: 
<dl>
<dt>
LINETERMMODE_BUTTONS </dt>
<dd>
Button press events sent from the terminal to the line. </dd>
<dt>
LINETERMMODE_LAMPS </dt>
<dd>
Lamp events sent from the line to the terminal. </dd>
<dt>
LINETERMMODE_DISPLAY </dt>
<dd>
Display information sent from the line to the terminal. </dd>
<dt>
LINETERMMODE_RINGER </dt>
<dd>
Ringer control information sent from the switch to the terminal. </dd>
<dt>
LINETERMMODE_HOOKSWITCH </dt>
<dd>
Hookswitch events sent between the terminal and the line. </dd>
<dt>
LINETERMMODE_MEDIATOLINE </dt>
<dd>
The unidirectional media stream from the terminal to the line associated with a call on the line. Use this value when routing of both unidirectional channels of a call's media stream can be controlled independently. </dd>
<dt>
LINETERMMODE_MEDIAFROMLINE </dt>
<dd>
The unidirectional media stream from the line to the terminal associated with a call on the line. Use this value when routing of both unidirectional channels of a call's media stream can be controlled independently. </dd>
<dt>
LINETERMMODE_MEDIABIDIRECT </dt>
<dd>
The bidirectional media stream associated with a call on the line and the terminal. Use this value when routing of both unidirectional channels of a call's media stream cannot be controlled independently. </dd>
</dl>
</dd>
<dt>
<b>dwDevSpecificSize</b></dt>
<dt>
<b>dwDevSpecificOffset</b></dt>
<dd>
The size in bytes and the offset from the beginning of this data structure in bytes of the variably sized field holding device-specific information.
</dd>
</dl>
<h4>Remarks</h4>
<p>
Device-specific extensions should use the <b>DevSpecific</b> (<b>dwDevSpecificSize</b> and <b>dwDevSpecificOffset</b>) variably sized area of this data structure.</p>
<p>
The <b>LINECALLINFO</b> data structure contains relatively fixed information about a call. This structure is returned with <a href="func1_1shb.htm"><b>TSPI_lineGetCallInfo</b></a>. When information items in this data structure have changed, a <a href="messgs_0fvz.htm">LINE_CALLINFO</a> message is sent to the application. A parameter to this message is the information item or field that changed.</p>
<p>
The <b>dwAppSpecific</b> member can be used by applications to tag calls by using <a href="func2_8uqr.htm"><b>TSPI_lineSetAppSpecific</b></a>. This member is uninterpreted by TAPI or service providers. It is initially set to zero.</p>
<h4>See Also</h4>
<p>
<a href="messgs_0fvz.htm">LINE_CALLINFO</a>, <a href="cnstant_9qib.htm">LINEBEARERMODE_ Constants</a>, <a href="cnstant_16r7.htm">LINECALLORIGIN_ Constants</a>,<b> </b><a href="cnstant_5kkz.htm">LINECALLPARAMFLAGS_ Constants</a>, <a href="cnstant_6hv7.htm">LINECALLPARTYID_ Constants</a>, <a href="cnstant_32b7.htm">LINECALLREASON_ Constants</a>, <a href="cnstant_08s3.htm">LINECALLSTATE_ Constants</a>, <a href="cnstant_8m7n.htm">LINEDIGITMODE_ Constants</a>, <a href="cnstant_4cxf.htm">LINEMEDIAMODE_ Constants</a>, <a href="cnstant_8j5f.htm">LINETERMMODE_ Constants</a>, <a href="func1_1shb.htm"><b>TSPI_lineGetCallInfo</b></a>, <a href="func2_8uqr.htm"><b>TSPI_lineSetAppSpecific</b></a></p>
<p>&nbsp;</p></body>
</HTML>
