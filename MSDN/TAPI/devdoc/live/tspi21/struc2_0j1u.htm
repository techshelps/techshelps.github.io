<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>LINEDEVCAPS</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_tspi_linedevcaps_str"></a>LINEDEVCAPS</h1>
<p>
The <b>LINEDEVCAPS</b> structure describes the capabilities of a line device.</p>
<pre><code>typedef struct linedevcaps_tag {
    DWORD  dwTotalSize;
    DWORD  dwNeededSize;
    DWORD  dwUsedSize;

    DWORD  dwProviderInfoSize;
    DWORD  dwProviderInfoOffset;

    DWORD  dwSwitchInfoSize;
    DWORD  dwSwitchInfoOffset;

    DWORD  dwPermanentLineID;
    DWORD  dwLineNameSize;
    DWORD  dwLineNameOffset;
    DWORD  dwStringFormat;
    DWORD  dwAddressModes;
    DWORD  dwNumAddresses;
    DWORD  dwBearerModes;
    DWORD  dwMaxRate;
    DWORD  dwMediaModes;

    DWORD  dwGenerateToneModes;
    DWORD  dwGenerateToneMaxNumFreq;
    DWORD  dwGenerateDigitModes;
    DWORD  dwMonitorToneMaxNumFreq;
    DWORD  dwMonitorToneMaxNumEntries;
    DWORD  dwMonitorDigitModes;
    DWORD  dwGatherDigitsMinTimeout;
    DWORD  dwGatherDigitsMaxTimeout;

    DWORD  dwMedCtlDigitMaxListSize;
    DWORD  dwMedCtlMediaMaxListSize;
    DWORD  dwMedCtlToneMaxListSize;
    DWORD  dwMedCtlCallStateMaxListSize;

    DWORD  dwDevCapFlags;
    DWORD  dwMaxNumActiveCalls;
    DWORD  dwAnswerMode;
    DWORD  dwRingModes;
    DWORD  dwLineStates;

    DWORD  dwUUIAcceptSize;
    DWORD  dwUUIAnswerSize;
    DWORD  dwUUIMakeCallSize;
    DWORD  dwUUIDropSize;
    DWORD  dwUUISendUserUserInfoSize;
    DWORD  dwUUICallInfoSize;

    LINEDIALPARAMS  MinDialParams;
    LINEDIALPARAMS  MaxDialParams;
    LINEDIALPARAMS  DefaultDialParams;

    DWORD  dwNumTerminals;
    DWORD  dwTerminalCapsSize;
    DWORD  dwTerminalCapsOffset;
    DWORD  dwTerminalTextEntrySize;
    DWORD  dwTerminalTextSize;
    DWORD  dwTerminalTextOffset;

    DWORD  dwDevSpecificSize;
    DWORD  dwDevSpecificOffset;

} LINEDEVCAPS, FAR *LPLINEDEVCAPS;
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>dwTotalSize</b></dt>
<dd>
The total size in bytes allocated to this data structure.</dd>
<dt>
<b>dwNeededSize</b></dt>
<dd>
The size in bytes for this data structure that is needed to hold the returned information.</dd>
<dt>
<b>dwUsedSize</b></dt>
<dd>
The size in bytes of the portion of this data structure that contains useful information.</dd>
<dt>
<b>dwProviderInfoSize</b></dt>
<dt>
<b>dwProviderInfoOffset</b></dt>
<dd>
The size in bytes and the offset in bytes from the beginning of this data structure of the variably sized field containing service provider information.
<p>
The <b>dwProviderInfoSize/Offset</b> member provides information about the provider hardware or software, such as the vendor name and version numbers of hardware or software. This information can be useful when a user needs to call customer service with problems regarding the provider.
</dd>
<dt>
<b>dwSwitchInfoSize</b></dt>
<dt>
<b>dwSwitchInfoOffset</b></dt>
<dd>
The size in bytes and the offset in bytes from the beginning of this data structure of the variably sized device field containing switch information.
<p>
The <b>dwSwitchInfoSize/Offset</b> member is intended to provide information about the switch to which the line device is connected, such as the switch manufacturer, the model name, the software version, and so on. This information can be useful when a user needs to call customer service with problems regarding the switch.
</dd>
<dt>
<b>dwPermanentLineID</b></dt>
<dd>
The permanent <b>DWORD</b> identifier by which the line device is known in the system's configuration. It is a permanent name for the line device. This permanent name (as opposed to <i>dwDevice ID</i>) does not change as lines are added and removed from the system. It can therefore be used to link line-specific information in the registry (or other files) in a way that is not affected by adding or removing other lines.</dd>
<dt>
<b>dwLineNameSize</b></dt>
<dt>
<b>dwLineNameOffset</b></dt>
<dd>
The size in bytes and the offset in bytes from the beginning of this data structure of the variably sized device field containing a user-configurable name for this line device. This name can be configured by the user when configuring the line device's service provider and is provided for the user's convenience.</dd>
<dt>
<b>dwStringFormat</b></dt>
<dd>
The string format used with this line device, of type STRINGFORMAT_. Values are: 
<dl>
<dt>
STRINGFORMAT_ASCII </dt>
<dd>
ASCII string format using one byte per character. </dd>
<dt>
STRINGFORMAT_DBCS </dt>
<dd>
DBCS string format using two bytes per character. </dd>
<dt>
STRINGFORMAT_UNICODE </dt>
<dd>
Unicode string format using two bytes per character. </dd>
</dl>
</dd>
<dt>
<b>dwAddressModes</b></dt>
<dd>
The mode by which the originating address is specified, of type LINEADDRESSMODE_. Values are: 
<dl>
<dt>
LINEADDRESSMODE_ADDRESSID </dt>
<dd>
The address is specified using a small integer in the range from 0 through <i>dwNumAddresses </i>minus one, where <i>dwNumAddresses</i> is the value in the line's device capabilities. </dd>
<dt>
LINEADDRESSMODE_DIALABLEADDR </dt>
<dd>
The address is specified through its phone number. </dd>
</dl>
</dd>
<dt>
<b>dwNumAddresses</b></dt>
<dd>
The number of addresses associated with this line device. Individual addresses are referred to by address identifiers. Address identifiers range from zero to one less than the value indicated by <b>dwNumAddresses</b>.</dd>
<dt>
<b>dwBearerModes</b></dt>
<dd>
Flag array that indicates the different bearer modes the address is able to support. This member uses the following LINEBEARERMODE_ constants: 
<dl>
<dt>
LINEBEARERMODE_VOICE </dt>
<dd>
A regular 3.1 kHz analog voice grade bearer service. Bit integrity is not assured. Voice can support fax and modem media modes. </dd>
<dt>
LINEBEARERMODE_SPEECH </dt>
<dd>
Corresponds to G.711 speech transmission on the call. The network can use processing techniques such as analog transmission, echo cancellation and compression/decompression. Bit integrity is not assured. Speech is not intended to support fax and modem media modes. </dd>
<dt>
LINEBEARERMODE_MULTIUSE </dt>
<dd>
The multiuse mode defined by ISDN. </dd>
<dt>
LINEBEARERMODE_DATA </dt>
<dd>
The unrestricted data transfer on the call. The data rate is specified separately. In particular, when LINEBEARERMODE_DATA is set, <b>dwMaxRate</b> indicates the maximum rate of digital transmission on the bearer channel. </dd>
<dt>
LINEBEARERMODE_ALTSPEECHDATA </dt>
<dd>
The alternate transfer of speech or unrestricted data on the same call (ISDN). </dd>
<dt>
LINEBEARERMODE_NONCALLSIGNALING </dt>
<dd>
Corresponds to a non-call-associated signaling connection from the application to the service provider or switch (treated as a "media stream" by the Telephony API). </dd>
<dt>
LINEBEARERMODE_PASSTHROUGH </dt>
<dd>
When a call is active in LINEBEARERMODE_PASSTHROUGH, the service provider gives direct access to the attached hardware for control by the application. This mode is used primarily by applications desiring temporary direct control over asynchronous modems, accessed through the Win32 comm functions, for the purpose of configuring or using special features not otherwise supported by the service provider. </dd>
</dl>
</dd>
<dt>
<b>dwMaxRate</b></dt>
<dd>
Contains the maximum data rate in bits per second for information exchange over the call. If LINEBEARERMODE_DATA is set in <b>dwBearerModes</b>, then <b>dwMaxRate</b> is set to the maximum rate of digital transmission on the bearer channel. If LINEBEARERMODE_DATA is not set, but LINEBEARERMODE_VOICE is set and <b>dwMediaModes</b> includes LINEMEDIAMODE_DATAMODEM, then <b>dwMaxRate</b> is set to the maximum synchronous bit rate of the modulated data signal, not including gains from error control or data compression, and not considering the impact of adaption to channel characteristics (e.g., a V.34 modem would say 28800, a V 32bis modem 14400, a V.32 modem 9600). The application must be careful to check to see that LINEBEARERMODE_DATA is not set, in order to avoid misinterpreting the <b>dwMaxRate</b> member (it is likely to be 64000 or higher if LINEBEARERMODE_DATA is set).</dd>
<dt>
<b>dwMediaModes</b></dt>
<dd>
Flag array that indicates the different media modes the address is able to support, of type LINEMEDIAMODE_. 
<dl>
<dt>
LINEMEDIAMODE_UNKNOWN </dt>
<dd>
A media stream exists but its mode is unknown. This corresponds to a call with an unclassified media type. In typical analog telephony environments, an inbound call's media mode may be unknown until after the call is answered and the media stream is filtered to make a determination. </dd>
<dt>
LINEMEDIAMODE_INTERACTIVEVOICE </dt>
<dd>
The presence of voice energy on the call and the call is treated as an interactive call with humans on both ends. </dd>
<dt>
LINEMEDIAMODE_AUTOMATEDVOICE </dt>
<dd>
The presence of voice energy on the call and the voice is locally handled by an automated application. </dd>
<dt>
LINEMEDIAMODE_DATAMODEM </dt>
<dd>
A data modem session on the call. </dd>
<dt>
LINEMEDIAMODE_G3FAX </dt>
<dd>
A group 3 fax is being sent or received over the call. </dd>
<dt>
LINEMEDIAMODE_TDD </dt>
<dd>
A TDD (Telephony Devices for the Deaf) session on the call. </dd>
<dt>
LINEMEDIAMODE_G4FAX </dt>
<dd>
A group 4 fax is being sent or received over the call. </dd>
<dt>
LINEMEDIAMODE_DIGITALDATA </dt>
<dd>
Digital data being transmitted over the call. </dd>
<dt>
LINEMEDIAMODE_TELETEX </dt>
<dd>
A teletex session on the call. Teletex is one of the telematic services. </dd>
<dt>
LINEMEDIAMODE_VIDEOTEX </dt>
<dd>
A videotex session on the call. Videotex is one the telematic services. </dd>
<dt>
LINEMEDIAMODE_TELEX </dt>
<dd>
A telex session on the call. Telex is one the telematic services. </dd>
<dt>
LINEMEDIAMODE_MIXED </dt>
<dd>
A mixed session on the call. Mixed is one the ISDN telematic services. </dd>
<dt>
LINEMEDIAMODE_ADSI </dt>
<dd>
An ADSI (Analog Display Services Interface) session on the call. </dd>
<dt>
LINEMEDIAMODE_VOICEVIEW </dt>
<dd>
The media mode of the call is VoiceView. </dd>
</dl>
</dd>
<dt>
<b>dwGenerateToneModes</b></dt>
<dd>
Specifies the different kinds of tones that can be generated on this line, of type LINETONEMODE_. Values are: 
<dl>
<dt>
LINETONEMODE_CUSTOM </dt>
<dd>
The tone is a custom tone, defined by the specified frequencies. </dd>
<dt>
LINETONEMODE_RINGBACK </dt>
<dd>
The tone to be generated is ringback tone. </dd>
<dt>
LINETONEMODE_BUSY </dt>
<dd>
The tone is a standard (station) busy tone. </dd>
<dt>
LINETONEMODE_BEEP </dt>
<dd>
The tone is a beep, as used to announce the beginning of a recording. </dd>
<dt>
LINETONEMODE_BILLING </dt>
<dd>
The tone is a billing information tone such as a credit card prompt tone. </dd>
</dl>
</dd>
<dt>
<b>dwGenerateToneMaxNumFreq</b></dt>
<dd>
Contains the maximum number of frequencies that can be specified in describing a general tone using the <a href="struc2_1182.htm"><b>LINEGENERATETONE</b></a> data structure when generating a tone using <a href="func1_9ftx.htm"><b>TSPI_lineGenerateTone</b></a>. A value of zero indicates that tone generation is not available.</dd>
<dt>
<b>dwGenerateDigitModes</b></dt>
<dd>
The digit modes than can be generated on this line, of type LINEDIGITMODE_. Values are: 
<dl>
<dt>
LINEDIGITMODE_PULSE </dt>
<dd>
Generate digits as pulse/rotary pulse sequences. </dd>
<dt>
LINEDIGITMODE_DTMF </dt>
<dd>
Generate digits as DTMF tones. </dd>
</dl>
</dd>
<dt>
<b>dwMonitorToneMaxNumFreq</b></dt>
<dd>
Contains the maximum number of frequencies that can be specified in describing a general tone using the <a href="struc2_178y.htm"><b>LINEMONITORTONE</b></a> data structure when monitoring a general tone using <a href="func2_4jar.htm"><b>TSPI_lineMonitorTones</b></a>. A value of zero indicates that tone monitor is not available.</dd>
<dt>
<b>dwMonitorToneMaxNumEntries</b></dt>
<dd>
Contains the maximum number of entries that can be specified in a tone list to <b>TSPI_lineMonitorTones</b>.</dd>
<dt>
<b>dwMonitorDigitModes</b></dt>
<dd>
The digit modes than can be detected on this line, of type LINEDIGITMODE_. Values are: 
<dl>
<dt>
LINEDIGITMODE_PULSE </dt>
<dd>
Detect digits as audible clicks that are the result of rotary pulse sequences. </dd>
<dt>
LINEDIGITMODE_DTMF </dt>
<dd>
Detect digits as DTMF tones. </dd>
<dt>
LINEDIGITMODE_DTMFEND </dt>
<dd>
Detect down edges of digits detected as DTMF tones. </dd>
</dl>
</dd>
<dt>
<b>dwGatherDigitsMinTimeout</b></dt>
<dt>
<b>dwGatherDigitsMaxTimeout</b></dt>
<dd>
Contain the minimum and maximum values in milliseconds that can be specified for both the first digit and interdigit timeout values used by <a href="func1_625v.htm"><b>TSPI_lineGatherDigits</b></a>. If both these members are zero, timeouts are not supported.</dd>
<dt>
<b>dwMedCtlDigitMaxListSize</b></dt>
<dt>
<b>dwMedCtlMediaMaxListSize</b></dt>
<dt>
<b>dwMedCtlToneMaxListSize</b></dt>
<dt>
<b>dwMedCtlCallStateMaxListSize</b></dt>
<dd>
Contain the maximum number of entries that can be specified in the digit list, the media list, the tone list, and the call state list parameters of <a href="func2_4h7w.htm"><b>TSPI_lineSetMediaControl</b></a>, respectively.</dd>
<dt>
<b>dwDevCapFlags</b></dt>
<dd>
Specifies various boolean device capabilities, of type LINEDEVCAPFLAGS_. Values are: 
<dl>
<dt>
LINEDEVCAPFLAGS_CROSSADDRCONF </dt>
<dd>
Specify whether calls on different addresses on this line can be conferenced. </dd>
<dt>
LINEDEVCAPFLAGS_HIGHLEVCOMP </dt>
<dd>
Specify whether high-level compatibility information elements are supported on this line. </dd>
<dt>
LINEDEVCAPFLAGS_LOWLEVCOMP </dt>
<dd>
Specify whether low-level compatibility information elements are supported on this line. </dd>
<dt>
LINEDEVCAPFLAGS_MEDIACONTROL </dt>
<dd>
Specify whether media control operations are available for calls at this line. </dd>
<dt>
LINEDEVCAPFLAGS_MULTIPLEADDR </dt>
<dd>
Specify whether <a href="func2_0r8s.htm"><b>TSPI_lineMakeCall</b></a> or <a href="func1_7ep8.htm"><b>TSPI_lineDial</b></a> are able to deal with multiple addresses at once (as for inverse multiplexing). </dd>
<dt>
LINEDEVCAPFLAGS_CLOSEDROP </dt>
<dd>
Specify whether the service provider drops (clears) active calls when all applications have closed the open line. If TRUE, the service provider drops all calls on the line when all applications have closed the line. If FALSE, the service provider keeps calls active. The service provider typically sets this to FALSE if some other device can keep the call alive, for example, if an analog line connects directly to the computer and phoneset in a party-line configuration, the offhook phone automatically keeps the call active even after the computer powers down. </dd>
<dt>
LINEDEVCAPFLAGS_DIALBILLING </dt>
<dd>
</dd>
<dt>
LINEDEVCAPFLAGS_DIALQUIET </dt>
<dd>
</dd>
<dt>
 LINEDEVCAPFLAGS_DIALDIALTONE </dt>
<dd>
These flags indicate whether the "$", "@", or "W" dialable string modifier is supported for a given line device. If the modifier is supported, it is TRUE ; otherwise, FALSE. The "?" (prompt user to continue dialing) is never supported by a line device. These flags allow an application to determine "up front" which modifiers can result in the generation of a <b>LINEERR</b>. The application can pre-scan dialable strings for unsupported characters, or pass the raw string from <b>lineTranslateAddress</b> directly to the provider as part of <b>lineMakeCall</b> (or <b>lineDial</b>) and let the function generate an error to tell it which unsupported modifier occurs first in the string. </dd>
</dl>
</dd>
<dt>
<b>dwMaxNumActiveCalls</b></dt>
<dd>
The maximum number of (minimum bandwidth) calls that can be active (connected) on the line at any one time. The actual number of active calls can be lower if higher bandwidth calls are established on the line.</dd>
<dt>
<b>dwAnswerMode</b></dt>
<dd>
The effect on the active call when answering another offering call on a line device, of type LINEANSWERMODE_. Values are: 
<dl>
<dt>
LINEANSWERMODE_NONE </dt>
<dd>
Answering another call on the same has no effect on the existing active call(s) on the line. </dd>
<dt>
LINEANSWERMODE_DROP </dt>
<dd>
The currently active call is automatically dropped. </dd>
<dt>
LINEANSWERMODE_HOLD </dt>
<dd>
The currently active call is automatically placed on hold. </dd>
</dl>
</dd>
<dt>
<b>dwRingModes</b></dt>
<dd>
Contains the number of different ring modes that can be reported in the <a href="messgs_58px.htm">LINE_LINEDEVSTATE</a> message with the <i>ringing</i> indication. Different ring modes range from one to <b>dwRingModes</b>. Zero indicates no ring.</dd>
<dt>
<b>dwLineStates</b></dt>
<dd>
Specifies the different line status components for which the application can be notified in a LINE_LINEDEVSTATE message on this line, of type LINEDEVSTATE_. Values are: 
<dl>
<dt>
LINEDEVSTATE_OTHER </dt>
<dd>
Device-status items other than those listed below have changed. </dd>
<dt>
LINEDEVSTATE_RINGING </dt>
<dd>
The switch tells the line to alert the user. This should be sent repeatedly in a <a href="messgs_58px.htm">LINE_LINEDEVSTATE</a> message, once for each ring cycle. On a POTS device, the service provider can send the message whenever the central office sends ring voltage. On digital devices such as ISDN, the service provider may need to synthesize the repetition of the message if the switch generates only one ring request. Each repetition of the message should show the ring count increasing, so that toll save functions work properly. </dd>
<dt>
LINEDEVSTATE_CONNECTED </dt>
<dd>
The line was previously disconnected and is now connected to TAPI. </dd>
<dt>
LINEDEVSTATE_DISCONNECTED </dt>
<dd>
This line was previously connected and is now disconnected from TAPI. </dd>
<dt>
LINEDEVSTATE_MSGWAITON </dt>
<dd>
The "message waiting" indicator is turned on. </dd>
<dt>
LINEDEVSTATE_MSGWAITOFF </dt>
<dd>
The "message waiting" indicator is turned off. </dd>
<dt>
LINEDEVSTATE_INSERVICE </dt>
<dd>
The line is connected to TAPI. This happens when TAPI is first activated, or when the line wire is physically plugged in and in service at the switch while TAPI is active. </dd>
<dt>
LINEDEVSTATE_OUTOFSERVICE</dt>
<dd>
The line is out of service at the switch or is physically disconnected. TAPI cannot be used to operate on the line device. </dd>
<dt>
LINEDEVSTATE_MAINTENANCE </dt>
<dd>
Maintenance is being performed on the line at the switch. TAPI cannot be used to operate on the line device. </dd>
<dt>
LINEDEVSTATE_OPEN </dt>
<dd>
The line has been opened. </dd>
<dt>
LINEDEVSTATE_CLOSE </dt>
<dd>
The line has been closed. </dd>
<dt>
LINEDEVSTATE_NUMCALLS </dt>
<dd>
The number of calls on the line device has changed. </dd>
<dt>
LINEDEVSTATE_NUMCOMPLETIONS </dt>
<dd>
The number of outstanding call completions on the line device has changed. </dd>
<dt>
LINEDEVSTATE_TERMINALS </dt>
<dd>
The terminal settings have changed. </dd>
<dt>
LINEDEVSTATE_ROAMMODE </dt>
<dd>
The roam mode of the line device has changed. </dd>
<dt>
LINEDEVSTATE_BATTERY </dt>
<dd>
The battery level has changed significantly (cellular). </dd>
<dt>
LINEDEVSTATE_SIGNAL </dt>
<dd>
The signal level has changed significantly (cellular). </dd>
<dt>
LINEDEVSTATE_DEVSPECIFIC </dt>
<dd>
The line's device-specific information has changed. </dd>
<dt>
LINEDEVSTATE_REINIT </dt>
<dd>
Items have changed in the configuration of line devices. To become aware of these changes (such as for the appearance of new line devices) the application reinitializes its use of TAPI. The <i>hDevice</i> parameter is left NULL for this state change as it applies to any of the lines in the system. </dd>
<dt>
LINEDEVSTATE_LOCK </dt>
<dd>
The locked status of the line device has changed. </dd>
<dt>
LINEDEVSTATE_REMOVED </dt>
<dd>
The device is being removed from the system by the service provider (most likely through user action, through a control panel or similar utility). A <a href="messgs_58px.htm">LINE_LINEDEVSTATE</a> message with this value is normally immediately followed by a <a href="messgs_7nhh.htm">LINE_CLOSE</a> message on the device. Subsequent attempts to access the device prior to TAPI being reinitialized result in LINEERR_NODEVICE being returned to the application. If a service provider sends a LINE_LINEDEVSTATE message containing this value to TAPI, TAPI passes it to applications that have negotiated this or a subsequent API version; applications negotiating a previous API version do not receive any notification. </dd>
</dl>
</dd>
<dt>
<b>dwUUIAcceptSize</b></dt>
<dd>
The maximum size of user-user information that can be sent during a call accept.</dd>
<dt>
<b>dwUUIAnswerSize</b></dt>
<dd>
The maximum size of user-user information that can be sent during a call answer.</dd>
<dt>
<b>dwUUIMakeCallSize</b></dt>
<dd>
The maximum size of user-user information that can be sent during a make call.</dd>
<dt>
<b>dwUUIDropSize</b></dt>
<dd>
The maximum size of user-user information that can be sent during a call drop.</dd>
<dt>
<b>dwUUISendUserUserInfoSize</b></dt>
<dd>
The maximum size of user-user information that can be sent separately at any time during a call with <a href="func2_2o6n.htm"><b>TSPI_lineSendUserUserInfo</b></a>.</dd>
<dt>
<b>dwUUICallInfoSize</b></dt>
<dd>
The maximum size of user-user information that can be received in the <a href="struc1_1ks2.htm"><b>LINECALLINFO</b></a> structure.</dd>
<dt>
<b>MinDialParams</b></dt>
<dt>
<b>MaxDialParams</b></dt>
<dd>
Contain the minimum and maximum values for the dial parameters in milliseconds that can be set for calls on this line. Dialing parameters can be set to values in this range. The granularity of the actual settings are service-provider specific.</dd>
<dt>
<b>DefaultDialParams</b></dt>
<dd>
Contains the default dial parameters used for calls on this line. These parameter values can be overridden on a per-call basis.</dd>
<dt>
<b>dwNumTerminals</b></dt>
<dd>
The number of terminals that can be set for this line device, its addresses, or its calls. Individual terminals are referred to by terminal identifiers, and range from zero to one less than the value indicated by <b>dwNumTerminals</b>.</dd>
<dt>
<b>dwTerminalCapsSize</b></dt>
<dt>
<b>dwTerminalCapsOffset</b></dt>
<dd>
The size in bytes and the offset in bytes from the beginning of this data structure of the variably sized device field containing an array with entries of type <a href="struc2_55gy.htm"><b>LINETERMCAPS</b></a>. This array is indexed by terminal identifiers, in the range from zero to <b>dwNumTerminals</b> minus one. Each entry in the array specifies the terminal device capabilities of the corresponding terminal.</dd>
<dt>
<b>dwTerminalTextEntrySize</b></dt>
<dd>
The size in bytes of each of the terminal text descriptions pointed at by <b>dwTerminalTextSize/Offset</b>.</dd>
<dt>
<b>dwTerminalTextSize</b></dt>
<dt>
<b>dwTerminalTextOffset</b></dt>
<dd>
The size in bytes and the offset from the beginning of this data structure in bytes of the variably sized field containing descriptive text about each of the line's available terminals. Each message is <b>dwTerminalTextEntrySize</b> bytes long. The string format of these textual descriptions is indicated by <b>dwStringFormat</b> in the line's device capabilities.</dd>
<dt>
<b>dwDevSpecificSize</b></dt>
<dt>
<b>dwDevSpecificOffset</b></dt>
<dd>
The size in bytes and the offset in bytes from the beginning of this data structure of the variably sized device-specific field.
</dd>
</dl>
<h4>Remarks</h4>
<p>
Device-specific extensions should use the <b>DevSpecific</b> (<b>dwDevSpecificSize</b> and <b>dwDevSpecificOffset</b>) variably sized area of this data structure.</p>
<h4>See Also</h4>
<p>
<a href="cnstant_61rn.htm">LINEADDRESSSHARING_ Constants</a>, <a href="cnstant_9qib.htm">LINEBEARERMODE_ Constants</a>, <a href="cnstant_8m7n.htm">LINEDIGITMODE_ Constants</a>,<b> </b><a href="cnstant_8j5f.htm">LINETERMMODE_ Constants</a>, <a href="struc2_1182.htm"><b>LINEGENERATETONE</b></a>, <a href="messgs_7nhh.htm">LINE_CLOSE</a>, <a href="messgs_58px.htm">LINE_LINEDEVSTATE</a>, <a href="func2_5lo3.htm"><b>TSPI_lineGetDevCaps</b></a></p>
<p>&nbsp;</p></body>
</HTML>
