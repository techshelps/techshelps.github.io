<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>LINEADDRESSCAPS</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_tspi_lineaddresscaps_str"></a>LINEADDRESSCAPS</h1>
<p>
The <b>LINEADDRESSCAPS</b> structure describes the capabilities of a specified address.</p>
<pre><code>typedef struct lineaddresscaps_tag {
    DWORD  dwTotalSize;
    DWORD  dwNeededSize;
    DWORD  dwUsedSize;

    DWORD  dwLineDeviceID;

    DWORD  dwAddressSize;
    DWORD  dwAddressOffset;

    DWORD  dwDevSpecificSize;
    DWORD  dwDevSpecificOffset;

    DWORD  dwAddressSharing;
    DWORD  dwAddressStates;
    DWORD  dwCallInfoStates;
    DWORD  dwCallerIDFlags;
    DWORD  dwCalledIDFlags;
    DWORD  dwConnectedIDFlags;
    DWORD  dwRedirectionIDFlags;
    DWORD  dwRedirectingIDFlags;
    DWORD  dwCallStates;
    DWORD  dwDialToneModes;
    DWORD  dwBusyModes;
    DWORD  dwSpecialInfo;
    DWORD  dwDisconnectModes;

    DWORD  dwMaxNumActiveCalls;
    DWORD  dwMaxNumOnHoldCalls;
    DWORD  dwMaxNumOnHoldPendingCalls;
    DWORD  dwMaxNumConference;
    DWORD  dwMaxNumTransConf;

    DWORD  dwAddrCapFlags;
    DWORD  dwCallFeatures;
    DWORD  dwRemoveFromConfCaps;
    DWORD  dwRemoveFromConfState;
    DWORD  dwTransferModes;
    DWORD  dwParkModes;

    DWORD  dwForwardModes;
    DWORD  dwMaxForwardEntries;
    DWORD  dwMaxSpecificEntries;
    DWORD  dwMinFwdNumRings;
    DWORD  dwMaxFwdNumRings;

    DWORD  dwMaxCallCompletions;
    DWORD  dwCallCompletionConds;
    DWORD  dwCallCompletionModes;
    DWORD  dwNumCompletionMessages;
    DWORD  dwCompletionMsgTextEntrySize;
    DWORD  dwCompletionMsgTextSize;
    DWORD  dwCompletionMsgTextOffset;
} LINEADDRESSCAPS, FAR *LPLINEADDRESSCAPS;
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>dwTotalSize</b></dt>
<dd>
The total size in bytes allocated to this data structure.</dd>
<dt>
<b>dwNeededSize</b></dt>
<dd>
The size in bytes for this data structure that is needed to hold all the returned information.</dd>
<dt>
<b>dwUsedSize</b></dt>
<dd>
The size in bytes of the portion of this data structure that contains useful information.</dd>
<dt>
<b>dwLineDeviceID</b></dt>
<dd>
The device identifier of the line device with which this address is associated.</dd>
<dt>
<b>dwAddressSize</b></dt>
<dt>
<b>dwAddressOffset</b></dt>
<dd>
The size in bytes and the offset from the beginning of this data structure in bytes of the variably sized address field.</dd>
<dt>
<b>dwDevSpecificSize</b></dt>
<dt>
<b>dwDevSpecificOffset</b></dt>
<dd>
The size in bytes and the offset in bytes from the beginning of this data structure of the variably sized device-specific field.</dd>
<dt>
<b>dwAddressSharing</b></dt>
<dd>
The sharing mode of the address. This member uses the following LINEADDRESSSHARING_ constants: 
<dl>
<dt>
LINEADDRESSSHARING_PRIVATE </dt>
<dd>
An address with <i>private</i> sharing mode is only assigned to a single line or station. </dd>
<dt>
LINEADDRESSSHARING_BRIDGEDEXCL </dt>
<dd>
An address with a <i>bridged-exclusive</i> sharing mode is assigned to one or more other lines or stations. The <i>exclusive</i> portion refers to the fact that only one of the bridged parties can be connected with a remote party at any given time. </dd>
<dt>
LINEADDRESSSHARING_BRIDGEDNEW </dt>
<dd>
An address with a <i>bridged-new</i> sharing mode is assigned to one or more other lines or stations. The <i>new</i> portion refers to the fact that activities by the different bridged parties result in the creation of new calls on the address. </dd>
<dt>
LINEADDRESSSHARING_BRIDGEDSHARED </dt>
<dd>
An address with a <i>bridged-shared</i> sharing mode is also assigned to one or more other lines or stations. The <i>shared</i> portion refers to the fact that if one of the bridged parties is connected with a remote party, the remaining bridged parties can share in the conversation (as in a conference) by activating that call appearance. </dd>
<dt>
LINEADDRESSSHARING_MONITORED </dt>
<dd>
An address with a monitored address mode simply monitors the status of that address. The status is either <i>idle</i> or <i>in use</i>. The <a href="messgs_53s5.htm">LINE_ADDRESSSTATE</a> message notifies the application about these changes. </dd>
</dl>
</dd>
<dt>
<b>dwAddressStates</b></dt>
<dd>
Contains the address state changes for which the application can be notified in the LINE_ADDRESSSTATE callback message. This member uses the following LINEADDRESSSTATE_ constants: 
<dl>
<dt>
LINEADDRESSSTATE_OTHER </dt>
<dd>
Address-status items other than those listed below have changed. </dd>
<dt>
LINEADDRESSSTATE_DEVSPECIFIC </dt>
<dd>
The device-specific item of the address status has changed. </dd>
<dt>
LINEADDRESSSTATE_INUSEZERO </dt>
<dd>
The address has changed to idle (it is now in use by zero stations). </dd>
<dt>
LINEADDRESSSTATE_INUSEONE </dt>
<dd>
The address has changed from being idle or from being in use by many bridged stations to being in use by just one station. </dd>
<dt>
LINEADDRESSSTATE_INUSEMANY </dt>
<dd>
The monitored or bridged address has changed from being in use by one station to being in use by more than one station. </dd>
<dt>
LINEADDRESSSTATE_NUMCALLS </dt>
<dd>
The number of calls on the address has changed. This is the result of events such as a new inbound call, an outbound call on the address, or a call changing its hold status. </dd>
<dt>
LINEADDRESSSTATE_FORWARD </dt>
<dd>
The forwarding status of the address has changed, including the number of rings for determining a no-answer condition. The application checks the address status to determine details about the address's current forwarding status. </dd>
<dt>
LINEADDRESSSTATE_TERMINALS </dt>
<dd>
The terminal settings for the address have changed. </dd>
</dl>
</dd>
<dt>
<b>dwCallInfoStates</b></dt>
<dd>
Describes the call info elements that are meaningful for all calls on this address, and uses the LINECALLINFOSTATE_ constants. An application can get notified about changes in some of these states in <a href="messgs_0fvz.htm">LINE_CALLINFO</a> messages. This member uses the following LINECALLINFOSTATE_ constants: 
<dl>
<dt>
LINECALLINFOSTATE_OTHER </dt>
<dd>
Call information items other than those listed below have changed. </dd>
<dt>
LINECALLINFOSTATE_DEVSPECIFIC </dt>
<dd>
The device-specific field of the call-information record. </dd>
<dt>
LINECALLINFOSTATE_BEARERMODE </dt>
<dd>
The bearer mode field of the call-information record. </dd>
<dt>
LINECALLINFOSTATE_RATE </dt>
<dd>
The rate field of the call-information record. </dd>
<dt>
LINECALLINFOSTATE_MEDIAMODE </dt>
<dd>
The media mode field of the call-information record. </dd>
<dt>
LINECALLINFOSTATE_APPSPECIFIC </dt>
<dd>
The application-specific field of the call-information record. </dd>
<dt>
LINECALLINFOSTATE_CALLID </dt>
<dd>
The call identifier field of the call-information record. </dd>
<dt>
LINECALLINFOSTATE_RELATEDCALLID </dt>
<dd>
The related call identifier field of the call-information record. </dd>
<dt>
LINECALLINFOSTATE_ORIGIN </dt>
<dd>
The origin field of the call-information record. </dd>
<dt>
LINECALLINFOSTATE_REASON </dt>
<dd>
The reason field of the call-information record. </dd>
<dt>
LINECALLINFOSTATE_COMPLETIONID </dt>
<dd>
The completion identifier field of the call-information record. </dd>
<dt>
LINECALLINFOSTATE_NUMOWNERINCR </dt>
<dd>
The number of owner field in the call-information record was increased. </dd>
<dt>
LINECALLINFOSTATE_NUMOWNERDECR </dt>
<dd>
The number of owner field in the call-information record was decreased. </dd>
<dt>
LINECALLINFOSTATE_NUMMONITORS </dt>
<dd>
The number of monitors field in the call-information record has changed. </dd>
<dt>
LINECALLINFOSTATE_TRUNK </dt>
<dd>
The trunk field of the call-information record. </dd>
<dt>
LINECALLINFOSTATE_CALLERID </dt>
<dd>
One of the callerID-related fields of the call-information record. </dd>
<dt>
LINECALLINFOSTATE_CALLEDID </dt>
<dd>
One of the calledID-related fields of the call-information record. </dd>
<dt>
LINECALLINFOSTATE_CONNECTEDID </dt>
<dd>
One of the connectedID-related fields of the call-information record. </dd>
<dt>
LINECALLINFOSTATE_REDIRECTIONID </dt>
<dd>
One of the redirectionID-related fields of the call-information record. </dd>
<dt>
LINECALLINFOSTATE_REDIRECTINGID </dt>
<dd>
One of the redirectingID-related fields of the call-information record. </dd>
<dt>
LINECALLINFOSTATE_DISPLAY </dt>
<dd>
The display field of the call-information record. </dd>
<dt>
LINECALLINFOSTATE_USERUSERINFO </dt>
<dd>
The user-user information of the call-information record. </dd>
<dt>
LINECALLINFOSTATE_HIGHLEVELCOMP </dt>
<dd>
The high-level compatibility field of the call-information record. </dd>
<dt>
LINECALLINFOSTATE_LOWLEVELCOMP </dt>
<dd>
The low-level compatibility field of the call-information record. </dd>
<dt>
LINECALLINFOSTATE_CHARGINGINFO </dt>
<dd>
The charging information of the call-information record. </dd>
<dt>
LINECALLINFOSTATE_TERMINAL </dt>
<dd>
The terminal mode information of the call-information record. </dd>
<dt>
LINECALLINFOSTATE_DIALPARAMS </dt>
<dd>
The dial parameters of the call-information record. </dd>
<dt>
LINECALLINFOSTATE_MONITORMODES </dt>
<dd>
One or more of the digit, tone, or media monitoring fields in the call-information record. </dd>
</dl>
</dd>
<dt>
<b>dwCallerIDFlags</b></dt>
<dt>
<b>dwCalledIDFlags</b></dt>
<dt>
<b>dwConnectedIDFlags</b></dt>
<dt>
<b>dwRedirectionIDFlags</b></dt>
<dt>
<b>dwRedirectingIDFlags</b></dt>
<dd>
These fields describe the various kinds of party identifier information that can be provided for calls on this address. This member uses the following LINECALLPARTYID_ constants: 
<dl>
<dt>
LINECALLPARTYID_BLOCKED </dt>
<dd>
Caller identifier information for the call is blocked by the caller, but would otherwise be available. </dd>
<dt>
LINECALLPARTYID_OUTOFAREA </dt>
<dd>
Caller identifier information for the call is not available as it is not propagated all the way by the network. </dd>
<dt>
LINECALLPARTYID_NAME </dt>
<dd>
The caller identifier information for the call is the caller's name (from a table maintained inside the switch). It is provided in the caller identifier name variably sized field. </dd>
<dt>
LINECALLPARTYID_ADDRESS </dt>
<dd>
The caller identifier information for the call is the caller's number, and is provided in the caller identifier variably sized field. </dd>
<dt>
LINECALLPARTYID_PARTIAL </dt>
<dd>
Caller identifier information for the call is valid, but is limited to partial number information. </dd>
<dt>
LINECALLPARTYID_UNKNOWN </dt>
<dd>
Caller identifier information is currently unknown, but it can become known later. </dd>
<dt>
LINECALLPARTYID_UNAVAIL </dt>
<dd>
Caller identifier information is unavailable and cannot become known later. </dd>
</dl>
</dd>
<dt>
<b>dwCallStates</b></dt>
<dd>
The various call states that can be reported for calls on this address. This member uses the following LINECALLSTATE_ constants: 
<dl>
<dt>
LINECALLSTATE_IDLE </dt>
<dd>
The call is <i>idle</i>; no call actually exists. </dd>
<dt>
LINECALLSTATE_OFFERING </dt>
<dd>
The call is being offered to the station, signaling the arrival of a new call. In some environments, a call in the <i>offering</i> state does not automatically alert the user; alerting is done by the switch instructing the line to ring. It does not affect any call states. </dd>
<dt>
LINECALLSTATE_ACCEPTED </dt>
<dd>
The call was offering and has been accepted. This indicates to other (monitoring) applications that the current owner application has claimed responsibility for answering the call. In ISDN, this also initiates alerting to both parties. </dd>
<dt>
LINECALLSTATE_DIALTONE </dt>
<dd>
The call is receiving a dial tone from the switch, which means that the switch is ready to receive a dialed number. </dd>
<dt>
LINECALLSTATE_DIALING </dt>
<dd>
Destination address information (a phone number) is being sent to the switch over the call. Note that the operation <a href="func1_4m7n.htm"><b>TSPI_lineGenerateDigits</b></a> does not place the line into the <i>dialing</i> state. </dd>
<dt>
LINECALLSTATE_RINGBACK </dt>
<dd>
The call is receiving ringback from the called address. Ringback indicates that the other station has been reached and is being alerted. </dd>
<dt>
LINECALLSTATE_BUSY </dt>
<dd>
The call is receiving a busy tone. Busy tone indicates that the call cannot be completed because either a circuit (trunk) or the remote party's station is in use. </dd>
<dt>
LINECALLSTATE_SPECIALINFO </dt>
<dd>
Special information is sent by the network. Special information is typically sent when the destination cannot be reached. </dd>
<dt>
LINECALLSTATE_CONNECTED </dt>
<dd>
The call has been established, the connection is made. Information is able to flow over the call between the originating address and the destination address. </dd>
<dt>
LINECALLSTATE_PROCEEDING </dt>
<dd>
Dialing has completed and the call is proceeding through the switch or telephone network. </dd>
<dt>
LINECALLSTATE_ONHOLD </dt>
<dd>
The call is on hold by the switch. </dd>
<dt>
LINECALLSTATE_CONFERENCED </dt>
<dd>
The call is currently a member of a multiparty conference call. </dd>
<dt>
LINECALLSTATE_ONHOLDPENDCONF </dt>
<dd>
The call is currently on hold while it is being added to a conference. </dd>
<dt>
LINECALLSTATE_ONHOLDPENDTRANSFER </dt>
<dd>
The call is currently on hold awaiting transfer to another number. </dd>
<dt>
LINECALLSTATE_DISCONNECTED </dt>
<dd>
The remote party has disconnected from the call. </dd>
<dt>
LINECALLSTATE_UNKNOWN </dt>
<dd>
The state of the call is not known. This can be due to limitations of the call progress detection implementation. </dd>
</dl>
</dd>
<dt>
<b>dwDialToneModes</b></dt>
<dd>
The various dial tone modes that can possibly be reported for calls made on this address. This member uses the following LINEDIALTONEMODE_ constants. This member is only meaningful if the <i>dialtone</i> call state can be reported. 
<dl>
<dt>
LINEDIALTONEMODE_NORMAL </dt>
<dd>
This is a normal dial tone that typically is a continuous tone. </dd>
<dt>
LINEDIALTONEMODE_SPECIAL </dt>
<dd>
This is a special dial tone indicating a certain condition is currently in effect. </dd>
<dt>
LINEDIALTONEMODE_INTERNAL </dt>
<dd>
This an internal dial tone, as within a PBX. </dd>
<dt>
LINEDIALTONEMODE_EXTERNAL </dt>
<dd>
This is an external (public network) dial tone. </dd>
<dt>
LINEDIALTONEMODE_UNKNOWN </dt>
<dd>
The dial tone mode is currently unknown, but can become known later. </dd>
<dt>
LINEDIALTONEMODE_UNAVAIL </dt>
<dd>
The dial tone mode is unavailable and cannot become known. </dd>
</dl>
</dd>
<dt>
<b>dwBusyModes</b></dt>
<dd>
The various busy modes that can possibly be reported for calls made on this address. This member uses the following LINEBUSYMODE_ constants. This member is only meaningful if the <i>busy</i> call state can be reported. 
<dl>
<dt>
LINEBUSYMODE_STATION </dt>
<dd>
The busy signal indicates that the called party's station is busy. This is usually signaled by means of a normal busy tone. </dd>
<dt>
LINEBUSYMODE_TRUNK </dt>
<dd>
The busy signal indicates that a trunk or circuit is busy. This is usually signaled by means of a long busy tone. </dd>
<dt>
LINEBUSYMODE_UNKNOWN </dt>
<dd>
The busy signal's specific mode is currently unknown, but can become known later. </dd>
<dt>
LINEBUSYMODE_UNAVAIL </dt>
<dd>
The busy signal's specific mode is unavailable and cannot become known. </dd>
</dl>
</dd>
<dt>
<b>dwSpecialInfo</b></dt>
<dd>
The various kinds of special information that can be reported for calls made on this address. It uses the following LINESPECIALINFO_ constants. This member is only meaningful if the <i>specialInfo</i> call state can be reported. 
<dl>
<dt>
LINESPECIALINFO_NOCIRCUIT </dt>
<dd>
This special information tone precedes a no-circuit or emergency announcement (trunk blockage category). </dd>
<dt>
LINESPECIALINFO_CUSTIRREG </dt>
<dd>
This special information tone precedes a vacant number, AIS, Centrex number change and nonworking station, access code not dialed or dialed in error, or manual intercept operator message (customer irregularity category). </dd>
<dt>
LINESPECIALINFO_REORDER </dt>
<dd>
This special information tone precedes a reorder announcement (equipment irregularity category). </dd>
<dt>
LINESPECIALINFO_UNKNOWN </dt>
<dd>
Specifics about the special information tone are currently unknown but can become known later. </dd>
<dt>
LINESPECIALINFO_UNAVAIL </dt>
<dd>
Specifics about the special information tone are unavailable, and cannot become known. </dd>
</dl>
</dd>
<dt>
<b>dwDisconnectModes</b></dt>
<dd>
The various disconnect modes that can possibly be reported for calls made on this address. This member uses the LINEDISCONNECTMODE_ constants listed below. This member is only meaningful if the <i>disconnected</i> call state can be reported. 
<dl>
<dt>
LINEDISCONNECTMODE_NORMAL </dt>
<dd>
A normal disconnect request by the remote party; the call is terminated normally. </dd>
<dt>
LINEDISCONNECTMODE_UNKNOWN </dt>
<dd>
The reason for the disconnect request is unknown. </dd>
<dt>
LINEDISCONNECTMODE_REJECT </dt>
<dd>
The remote user has rejected the call. </dd>
<dt>
LINEDISCONNECTMODE_PICKUP </dt>
<dd>
The call was picked up from elsewhere. </dd>
<dt>
LINEDISCONNECTMODE_FORWARDED </dt>
<dd>
The call was forwarded by the switch. </dd>
<dt>
LINEDISCONNECTMODE_BUSY </dt>
<dd>
The remote user's station is busy. </dd>
<dt>
LINEDISCONNECTMODE_NOANSWER </dt>
<dd>
The remote user's station does not answer. </dd>
<dt>
LINEDISCONNECTMODE_BADADDRESS </dt>
<dd>
The destination address in invalid. </dd>
<dt>
LINEDISCONNECTMODE_CONGESTION </dt>
<dd>
The network is congested. </dd>
<dt>
LINEDISCONNECTMODE_INCOMPATIBLE </dt>
<dd>
The remote user's station equipment is incompatible for the type of call requested. </dd>
<dt>
LINEDISCONNECTMODE_UNAVAIL </dt>
<dd>
The reason for the disconnect is unavailable and cannot become known later. </dd>
<dt>
LINEDISCONNECTMODE_NODIALTONE </dt>
<dd>
A dial tone was not detected within a service-provider defined timeout, at a point during dialing when one was expected (such as at a "W" in the dialable string). This can also occur without a service-provider defined timeout period or without a value specified in the <b>dwWaitForDialTone</b> member of the <a href="struc2_2e0i.htm"><b>LINEDIALPARAMS</b></a> structure. </dd>
</dl>
</dd>
<dt>
<b>dwMaxNumActiveCalls</b></dt>
<dd>
The maximum number of active call appearances that the address can handle. This number does not include calls on hold or on hold pending transfer or conference.</dd>
<dt>
<b>dwMaxNumOnHoldCalls</b></dt>
<dd>
The maximum number of call appearances at the address that can be on hold.</dd>
<dt>
<b>dwMaxNumOnHoldPendingCalls</b></dt>
<dd>
The maximum number of call appearances at the address that can be on hold pending transfer or conference.</dd>
<dt>
<b>dwMaxNumConference</b></dt>
<dd>
The maximum number of parties that can be conferenced in a single conference call on this address.</dd>
<dt>
<b>dwMaxNumTransConf</b></dt>
<dd>
The number of parties (including "self") that can be added in a conference call that is initiated as a generic consultation call using the <b>lineSetupTransfer </b>function.</dd>
<dt>
<b>dwAddrCapFlags</b></dt>
<dd>
A series of packed bit flags that describe a variety of address capabilities. This member uses the following LINEADDRCAPFLAGS_ constants: 
<dl>
<dt>
LINEADDRCAPFLAGS_FWDNUMRINGS </dt>
<dd>
Specify whether the number of rings for a no answer can be specified when forwarding calls on no answer. </dd>
<dt>
LINEADDRCAPFLAGS_PICKUPGROUPID </dt>
<dd>
Specify whether a group identifier is required for call pickup. </dd>
<dt>
LINEADDRCAPFLAGS_SECURE </dt>
<dd>
Specify whether calls on this address can be made secure at call setup time. </dd>
<dt>
LINEADDRCAPFLAGS_BLOCKIDDEFAULT </dt>
<dd>
Specify whether the network by default sends or blocks caller ID information when making a call on this address. If TRUE, identifier information is blocked by default; if FALSE, identifier information is transmitted by default. </dd>
<dt>
LINEADDRCAPFLAGS_BLOCKIDOVERRIDE </dt>
<dd>
Specify whether the default setting for sending or blocking of caller ID information can be overridden per call. If TRUE, override is possible; if FALSE, override is not possible. </dd>
<dt>
LINEADDRCAPFLAGS_DIALED </dt>
<dd>
Specify whether a destination address can be dialed on this address for making a call. TRUE if a destination address must be dialed; FALSE if the destination address is fixed (as with a "hot phone"). </dd>
<dt>
LINEADDRCAPFLAGS_ORIGOFFHOOK </dt>
<dd>
Specify whether the originating party's phone can automatically be taken offhook when making calls. </dd>
<dt>
LINEADDRCAPFLAGS_DESTOFFHOOK </dt>
<dd>
Specify whether the called party's phone can automatically be forced offhook when making calls. </dd>
<dt>
LINEADDRCAPFLAGS_FWDCONSULT </dt>
<dd>
Specify whether call forwarding involves the establishment of a consultation call. </dd>
<dt>
LINEADDRCAPFLAGS_SETUPCONFNULL </dt>
<dd>
Specify whether setting up a conference call starts out with an initial call (FALSE) or with no initial call (TRUE). </dd>
<dt>
LINEADDRCAPFLAGS_AUTORECONNECT </dt>
<dd>
Specify whether dropping a consultation call automatically reconnects to the call on consultation hold. TRUE if reconnect happens automatically, otherwise FALSE. </dd>
<dt>
LINEADDRCAPFLAGS_COMPLETIONID </dt>
<dd>
Specify whether the completion identifiers returned by <a href="func1_0m0c.htm"><b>TSPI_lineCompleteCall</b></a> are useful and unique. TRUE if useful; otherwise, FALSE. </dd>
<dt>
LINEADDRCAPFLAGS_TRANSFERHELD </dt>
<dd>
Specify whether a (hard) held call can be transferred. Often, only calls on consultation hold can be transferred. </dd>
<dt>
LINEADDRCAPFLAGS_TRANSFERMAKE </dt>
<dd>
Specify whether an entirely new call can be established for use as a consultation call on transfer. </dd>
<dt>
LINEADDRCAPFLAGS_CONFERENCEHELD </dt>
<dd>
Specify whether a (hard) held call can be conferenced to. Often, only calls on consultation hold can be added to as a conference call. </dd>
<dt>
LINEADDRCAPFLAGS_CONFERENCEMAKE </dt>
<dd>
Specify whether an entirely new call can be established for use as a consultation call (to add) on conference. </dd>
<dt>
LINEADDRCAPFLAGS_PARTIALDIAL </dt>
<dd>
Specify whether partial dialing is available. </dd>
<dt>
LINEADDRCAPFLAGS_FWDSTATUSVALID </dt>
<dd>
Specify whether the forwarding status in the <a href="struc1_6inm.htm"><b>LINEADDRESSSTATUS</b></a> structure for this address is valid. </dd>
<dt>
LINEADDRCAPFLAGS_FWDINTEXTADDR </dt>
<dd>
Specify whether internal and external calls can be forwarded to different forwarding addresses. This flag is only meaningful if forwarding of internal and external calls can be controlled separately. This flag is TRUE if internal and external calls can be forwarded to different destination addresses; otherwise, FALSE. </dd>
<dt>
LINEADDRCAPFLAGS_FWDBUSYNAADDR </dt>
<dd>
Specify whether call forwarding for busy and no answer can use different forwarding addresses. This flag is only meaningful if forwarding for busy and no answer can be controlled separately. This flag is TRUE if forwarding for busy and no answer can be use different destination addresses; othewise, FALSE. </dd>
<dt>
LINEADDRCAPFLAGS_ACCEPTTOALERT </dt>
<dd>
This flag is TRUE if an offering call must be accepted using <b>lineAccept</b> to start alerting the users at both ends of the call; Otherwise, it is FALSE. This flag is typically only used with ISDN. </dd>
<dt>
LINEADDRCAPFLAGS_CONFDROP </dt>
<dd>
This flag is TRUE if <b>lineDrop </b>of a conference call parent also has the side effect of dropping (disconnecting) the other parties involved in the conference call. It is FALSE if dropping a conference call still allows the other parties to talk among themselves. </dd>
<dt>
LINEADDRCAPFLAGS_PICKUPCALLWAIT </dt>
<dd>
This flag is TRUE if <b>linePickup</b> can be used to pick up a call detected by the user as a call-waiting call. Otherwise, it is FALSE. </dd>
</dl>
</dd>
<dt>
<b>dwCallFeatures</b></dt>
<dd>
The switching capabilities or features available for all calls on this address, of type <b>LINECALLFEATURE</b>. Invoking a supported feature requires the call to be in the proper state and the underlying line device to be opened in a compatible mode. A zero in a bit position indicates that the corresponding feature is never available; a one indicates that the corresponding feature may be available if the application has the right privileges to the call, and the call is in the appropriate state for the operation to be meaningful. This member allows an aplication to discover early on which call features can be and which can never be supported by the address.</dd>
<dt>
<b>dwRemoveFromConfCaps</b></dt>
<dd>
The address's capabilities for removing calls from a conference call. This member uses the following LINEREMOVEFROMCONF_ constants: 
<dl>
<dt>
LINEREMOVEFROMCONF_NONE </dt>
<dd>
Parties cannot be removed from the conference call. </dd>
<dt>
LINEREMOVEFROMCONF_LAST </dt>
<dd>
Only the most recently added party can be removed from the conference call. </dd>
<dt>
LINEREMOVEFROMCONF_ANY </dt>
<dd>
Any participating party can be removed from the conference call. </dd>
</dl>
</dd>
<dt>
<b>dwRemoveFromConfState</b></dt>
<dd>
This member is of the type <b>LINECALLSTATE</b>, and specifies the state of the call after it is removed from a conference call.</dd>
<dt>
<b>dwTransferModes</b></dt>
<dd>
The address's capabilities for resolving transfer requests. This member uses the following LINETRANSFERMODE_ constants: 
<dl>
<dt>
LINETRANSFERMODE_TRANSFER </dt>
<dd>
Resolve the initiated transfer by transferring the initial call to the consultation call. </dd>
<dt>
LINETRANSFERMODE_CONFERENCE </dt>
<dd>
Resolve the initiated transfer by conferencing all three parties into a three-way conference call. A conference call is created and returned to the application. </dd>
</dl>
</dd>
<dt>
<b>dwParkModes</b></dt>
<dd>
Specifies the different call park modes available at this address, and uses the following LINEPARKMODE_ constants: 
<dl>
<dt>
LINEPARKMODE_DIRECTED </dt>
<dd>
Specify directed call park. The address where the call is to be parked must be supplied to the switch. </dd>
<dt>
LINEPARKMODE_NONDIRECTED </dt>
<dd>
Specify nondirected call park. The address where the call is parked is selected by the switch and provided by the switch to the application. </dd>
</dl>
</dd>
<dt>
<b>dwForwardModes</b></dt>
<dd>
The different modes of forwarding available for this address. This member uses the following LINEFORWARDMODE_ constants: 
<dl>
<dt>
LINEFORWARDMODE_UNCOND </dt>
<dd>
Forward all calls unconditionally, irrespective of their origin. Use this value when unconditional forwarding for internal and external calls cannot be controlled separately. Unconditional forwarding overrides forwarding on busy and/or no-answer conditions. </dd>
<dt>
LINEFORWARDMODE_UNCONDINTERNAL </dt>
<dd>
Forward all internal calls unconditionally. Use this value when unconditional forwarding for internal and external calls can be controlled separately. </dd>
<dt>
LINEFORWARDMODE_UNCONDEXTERNAL </dt>
<dd>
Forward all external calls unconditionally. Use this value when unconditional forwarding for internal and external calls can be controlled separately. </dd>
<dt>
LINEFORWARDMODE_UNCONDSPECIFIC </dt>
<dd>
Forward all calls that originated at a specified address unconditionally (selective call forwarding). </dd>
<dt>
LINEFORWARDMODE_BUSY </dt>
<dd>
Forward all calls on busy, irrespective of their origin. Use this value when forwarding for internal and external calls on busy and no answer cannot be controlled separately. </dd>
<dt>
LINEFORWARDMODE_BUSYINTERNAL </dt>
<dd>
Forward all internal calls on busy. Use this value when forwarding for internal and external calls on busy and no answer can be controlled separately. </dd>
<dt>
LINEFORWARDMODE_BUSYEXTERNAL </dt>
<dd>
Forward all external calls on busy. Use this value when forwarding for internal and external calls on busy and no answer can be controlled separately. </dd>
<dt>
LINEFORWARDMODE_BUSYSPECIFIC </dt>
<dd>
Forward all calls that originated at a specified address on busy (selective call forwarding). </dd>
<dt>
LINEFORWARDMODE_NOANSW </dt>
<dd>
Forward all calls on no answer, irrespective of their origin. Use this value when call forwarding for internal and external calls on no answer cannot be controlled separately. </dd>
<dt>
LINEFORWARDMODE_NOANSWINTERNAL </dt>
<dd>
Forward all internal calls on no answer. Use this value when forwarding for internal and external calls on no answer can be controlled separately. </dd>
<dt>
LINEFORWARDMODE_NOANSWEXTERNAL </dt>
<dd>
Forward all external calls on no answer. Use this value when forwarding for internal and external calls on no answer can be controlled separately. </dd>
<dt>
LINEFORWARDMODE_NOANSWSPECIFIC </dt>
<dd>
Forward all calls that originated at a specified address on no answer (selective call forwarding). </dd>
<dt>
LINEFORWARDMODE_BUSYNA </dt>
<dd>
Forward all calls on busy/no answer irrespective of their origin. Use this value when forwarding for internal and external calls on busy and no answer cannot be controlled separately. </dd>
<dt>
LINEFORWARDMODE_BUSYNAINTERNAL </dt>
<dd>
Forward all internal calls on busy/no answer. Use this value when call forwarding on busy and no answer cannot be controlled separately for internal calls. </dd>
<dt>
LINEFORWARDMODE_BUSYNAEXTERNAL </dt>
<dd>
Forward all external calls on busy/no answer. Use this value when call forwarding on busy and no answer cannot be controlled separately for internal calls. </dd>
<dt>
LINEFORWARDMODE_BUSYNASPECIFIC </dt>
<dd>
Forward all calls that originated at a specified address on busy/no answer (selective call forwarding). </dd>
</dl>
</dd>
<dt>
<b>dwMaxForwardEntries</b></dt>
<dd>
The maximum number of entries that can be passed to <a href="func1_61k4.htm"><b>TSPI_lineForward</b></a> in the <i>lpForwardList</i> parameter.</dd>
<dt>
<b>dwMaxSpecificEntries</b></dt>
<dd>
The maximum number of entries in the <i>lpForwardList</i> parameter passed to <b>TSPI_lineForward</b> that can contain forwarding instructions based on a specific caller ID (selective call forwarding). This member is zero if selective call forwarding is not supported.</dd>
<dt>
<b>dwMinFwdNumRings</b></dt>
<dd>
The minimum number of rings that can be set to determine when a call is officially considered "no answer."</dd>
<dt>
<b>dwMaxFwdNumRings</b></dt>
<dd>
The maximum number of rings that can be set to determine when a call is officially considered "no answer." If this number of rings cannot be set, then <b>dwMinFwdNumRings</b> and <b>dwMaxNumRings</b> are equal.</dd>
<dt>
<b>dwMaxCallCompletions</b></dt>
<dd>
The maximum number of concurrent call completion requests that can be outstanding on this line device. Zero implies that call completion is not available.</dd>
<dt>
<b>dwCallCompletionCond</b></dt>
<dd>
The different call conditions under which call completion can be requested. This member uses the following LINECALLCOMPLCOND_ constants: 
<dl>
<dt>
LINECALLCOMPLCOND_BUSY </dt>
<dd>
Complete the call under the busy condition. </dd>
<dt>
LINECALLCOMPLCOND_NOANSWER </dt>
<dd>
Complete the call under the ringback, no-answer condition. </dd>
</dl>
</dd>
<dt>
<b>dwCallCompletionModes</b></dt>
<dd>
The way in which the call can be completed. This member uses the following LINECALLCOMPLMODE_ constants: 
<dl>
<dt>
LINECALLCOMPLMODE_CAMPON </dt>
<dd>
Queue the call until the call can be completed. </dd>
<dt>
LINECALLCOMPLMODE_CALLBACK </dt>
<dd>
Request the called station to return the call when it returns to idle. </dd>
<dt>
LINECALLCOMPLMODE_INTRUDE </dt>
<dd>
Add the application to the existing call at the called station if busy (barge in). </dd>
<dt>
LINECALLCOMPLMODE_MESSAGE </dt>
<dd>
Leave a short, predefined message for the called station (Leave Word Calling). A specific message can be identified<i>. </i></dd>
</dl>
</dd>
<dt>
<b>dwNumCompletionMessages</b></dt>
<dd>
The number of call completion messages from which a selection can be made when using the LINECALLCOMPLMODE_MESSAGE option. Individual messages are identified by values in the range 0 through <b>dwNumCompletionMessages</b> minus one.</dd>
<dt>
<b>dwCompletionMsgTextEntrySize</b></dt>
<dd>
The size in bytes of each of the call completion text descriptions pointed at by <b>dwCompletionMsgTextSize/Offset</b>.</dd>
<dt>
<b>dwCompletionMsgTextSize</b></dt>
<dt>
<b>dwCompletionMsgTextOffset</b></dt>
<dd>
The size in bytes and the offset from the beginning of this data structure in bytes of the variably sized field containing descriptive text about each of the call completion messages. Each message is <b>dwCompletionMsgTextEntrySize</b> bytes long. The string format of these textual descriptions is indicated by <b>dwStringFormat</b> in the line's device capabilities.
</dd>
</dl>
<h4>Remarks</h4>
<p>
Device-specific extensions should use the <b>DevSpecific</b> (<b>dwDevSpecificSize</b> and <b>dwDevSpecificOffset</b>) variably sized area of this data structure.</p>
<h4>See Also</h4>
<p>
<a href="cnstant_5uyb.htm">LINEADDRESSMODE_ Constants</a>, <a href="struc1_6inm.htm"><b>LINEADDRESSSTATUS</b></a>, <a href="cnstant_9qib.htm">LINEBEARERMODE_ Constants</a>, <a href="cnstant_4583.htm">LINECALLCOMPLCOND_ Constants</a>, <a href="cnstant_3ylv.htm">LINECALLCOMPLMODE_ Constants</a>, <a href="cnstant_6z8z.htm">LINECALLFEATURE_ Constants</a>, <a href="cnstant_16r7.htm">LINECALLORIGIN_ Constants</a>, <a href="struc2_2e0i.htm"><b>LINEDIALPARAMS</b></a>, <a href="cnstant_0icz.htm">LINEFORWARDMODE_ Constants</a>, <a href="cnstant_4cxf.htm">LINEMEDIAMODE_ Constants</a>,<b> </b><a href="cnstant_6ovn.htm">LINEPARKMODE_ Constants</a>, <a href="func1_0m0c.htm"><b>TSPI_lineCompleteCall</b></a>, <a href="func1_61k4.htm"><b>TSPI_lineForward</b></a>, <a href="func1_4m7n.htm"><b>TSPI_lineGenerateDigits</b></a>, <a href="func1_16k3.htm"><b>TSPI_lineGetAddressCaps</b></a></p>
<p>&nbsp;</p></body>
</HTML>
