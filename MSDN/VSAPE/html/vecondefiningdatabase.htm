<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Defining a Database</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="vecondefiningdatabase"></a>Defining a Database</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconDefiningDatabase_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconDefiningDatabase_T">
</object></p>
<p>
APE has the following two database options to select from.
<ul type=disc>
<li>
Microsoft Jet engine<br><br></li>
<li>
Microsoft<sup>®</sup> SQL Server™</li>
</ul>
<p>
Your choice of which database to test with depends on the data access requirements of your application. While the Jet engine is behind what are sometimes referred to as a personal databases, it can handle a moderate number of simultaneous users. If your application is small and does not require the benefits of a large-scale database, you might want to test (and ultimately implement) your application using Jet.</p>
<p>
If you are modeling an enterprise application that requires a robust, high-performance database, you should test using SQL Server. With the SQL Server test option, you can actually modify the APETEST database tables and queries to represent your application's final data access requirements.</p>
<p>
The default query statements that APE uses are stored in the ApeQuery table in the Apetest.mdb database. You can use Microsoft Access to change these queries or add some of your own. One useful idea is to add a simple query such as <code>exec myproc</code> and then create a stored procedure in SQL Server with the same name. In this way, you can execute an APE test that realistically runs your own custom stored procedure.</p>
<p class=indent>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;If you insert your own query into the ApeQuery table, be sure to use the Applications Service Options dialog box to select the query.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;For more information on installing the APETEST database for SQL Server, see <a href="vehowinstallingapplicationperformanceexplorer.htm">Installing Application Performance Explorer</a>.</p>
</BODY>
</HTML>
