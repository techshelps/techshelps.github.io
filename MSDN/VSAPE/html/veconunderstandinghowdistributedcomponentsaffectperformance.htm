<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Understanding How Distributed Components Affect Performance</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="veconunderstandinghowdistributedcomponentsaffectperformance"></a>Understanding How Distributed Components Affect Performance</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconUnderstandingHowDistributedComponentsAffectPerformance_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconUnderstandingHowDistributedComponentsAffectPerformance_T">
</object></p>
<p>
Distributed applications partition functionality into separate components that can be deployed on the network in a wide variety of physical configurations. The key performance issue for these distributed components is not tuning raw code execution, but determining the optimum network topology for a distributed solution.</p>
<p>
The first and most important question that you must answer in considering how best to take advantage of the potential for distributed computing — and whether a specific application task should in fact be remotely executed — is this: Is the overhead associated with the remote component worth the benefit?</p>
<p>
If you choose distributed component architecture for your enterprise application, then you must determine the appropriate component granularity and physical deployment. Granularity has to do with how objects and logical services are sized and grouped into physical components. Deployment considers where each component should be located in order to achieve the required performance.</p>
<p>
You can directly examine the performance effects of component granularity and deployment by exploring alternative design questions such as:
<ul type=disc>
<li>
Is it more efficient to package services in a single, large component or to break up functionality among many smaller components?<br><br></li>
<li>
Is it better to deploy a particular computation-intensive task on a remote server in order to take advantage of superior computing resources, or on the local desktop machine to minimize network traffic?<br><br></li>
<li>
What is the effect upon my design when adding more clients?<br><br></li>
<li>
Where are the bottlenecks of my solution during the worst network conditions?<br><br></li>
<li>
What is the effect of object pooling and recycling?<br><br></li>
<li>
Would queuing help when requests to a back-end server exceed its capacity? </li>
</ul>
<p>
With Application Performance Explorer you can answer these design performance questions by quickly setting up test cases with differing granularity and deployment options.</p>
<p>
At a detailed design level, the question of whether or not to use remote component deployment for a particular task requires consideration of the following general design parameters.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=37%><b>Design parameter</b></td>
<td class=label width=63%><b>Consideration</b></td>
</tr>
<tr valign=top>
<td width=37%>Task size</td>
<td width=63%>How big is the task being considered for remoting?</td>
</tr>
<tr valign=top>
<td width=37%>Request frequency</td>
<td width=63%>How often does the task need to be executed? This includes requests from all users, not just a single desktop machine.</td>
</tr>
<tr valign=top>
<td width=37%>Network bandwidth</td>
<td width=63%>What is the raw speed of the network cable, network interface card(s), network protocol, RPC, and drivers, as well as the collision/retry overhead caused by network traffic?</td>
</tr>
<tr valign=top>
<td width=37%>Data transfer requirements</td>
<td width=63%>How much data needs to be transferred to and from the task? In some cases this value may be negative because the location of the task on a remote server may actually reduce data transfer requirements to the desktop.</td>
</tr>
<tr valign=top>
<td width=37%>Desktop capacity</td>
<td width=63%>What is the raw bandwidth of the desktop system's CPU(s), memory, disk I/O, and other resources and devices that are needed to process the task?</td>
</tr>
<tr valign=top>
<td width=37%>Remote capacity</td>
<td width=63%>What is the raw bandwidth of the remote system's CPU(s), memory, disk I/O, and other resources and devices that are needed to process the task?</td>
</tr>
<tr valign=top>
<td width=37%>Desktop opportunity cost</td>
<td width=63%>What could the desktop machine be doing if it were not running the task?</td>
</tr>
<tr valign=top>
<td width=37%>Server opportunity cost</td>
<td width=63%>What could the server being doing if it were not running the task?</td>
</tr>
<tr valign=top>
<td width=37%>Desktop resource burden</td>
<td width=63%>What resource burdens do the operating system and other concurrent applications impose on the desktop system?</td>
</tr>
<tr valign=top>
<td width=37%>Shared resource burden</td>
<td width=63%>What resource burdens do the operating system and other concurrent applications impose on the shared system?</td>
</tr>
<tr valign=top>
<td width=37%>Application design and implementation</td>
<td width=63%>How efficiently are these factors considered in the design and implementation of an application?</td>
</tr>
<tr valign=top>
<td width=37%>Centralized administration</td>
<td width=63%>What is the benefit of administering or updating the task from a centralized location rather than each desktop?</td>
</tr>
</table><br>
<p>
From the design parameters listed above, it should be obvious that there is no simple quantitative answer to distributed component deployment. Because each target installation has a unique resource infrastructure that is not duplicated anywhere else, every application needs a different deployment design answer. No tool can answer all of these questions, but Application Performance Explorer can provide meaningful insights and measurable answers to many of these deployment and performance questions.</p>
</BODY>
</HTML>
