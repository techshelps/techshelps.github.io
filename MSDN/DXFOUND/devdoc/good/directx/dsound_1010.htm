<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DSBUFFERDESC</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_dx5_dsbufferdesc_dsound"></a>DSBUFFERDESC</h1>
<p>
The <b>DSBUFFERDESC</b> structure describes the necessary characteristics of a new DirectSoundBuffer object. This structure is used by the <a href="dsound_0604.htm"><b>IDirectSound::CreateSoundBuffer</b></a> method.</p>
<pre><code>typedef struct { 
    DWORD           dwSize; 
    DWORD           dwFlags; 
    DWORD           dwBufferBytes; 
    DWORD           dwReserved; 
    LPWAVEFORMATEX  lpwfxFormat; 
} DSBUFFERDESC, *LPDSBUFFERDESC; 
 
typedef const DSBUFFERDESC *LPCDSBUFFERDESC;
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>dwSize</b></dt>
</dl>
<p>
Size of the structure, in bytes. This member must be initialized before the structure is used.
<dl>
<dt>
<b>dwFlags</b></dt>
<dd>
Identifies the capabilities to include when creating a new DirectSoundBuffer object. Specify one or more of the following: 
<table cellspacing=4 cols=2>
<tr valign=top>
<td colspan=2 width=100%>DSBCAPS_CTRL3D </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>The buffer is either a primary buffer or a secondary buffer that uses 3-D control. </td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DSBCAPS_CTRLALL </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>The buffer must have all control capabilities. </td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DSBCAPS_CTRLDEFAULT </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>The buffer should have default control options. This is the same as specifying the DSBCAPS_CTRLPAN, DSBCAPS_CTRLVOLUME, and DSBCAPS_CTRLFREQUENCY flags. </td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DSBCAPS_CTRLFREQUENCY </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>The buffer must have frequency control capability. </td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DSBCAPS_CTRLPAN </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>The buffer must have pan control capability. </td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DSBCAPS_CTRLPOSITIONNOTIFY </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>The buffer must have position notification capability. </td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DSBCAPS_CTRLVOLUME </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>The buffer must have volume control capability. </td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DSBCAPS_GETCURRENTPOSITION2 </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>Indicates that <a href="dsound_6stg.htm"><b>IDirectSoundBuffer::GetCurrentPosition</b></a> should use the new behavior of the play cursor. In DirectSound in DirectX 1, the play cursor was significantly ahead of the actual playing sound on emulated sound cards; it was directly behind the write cursor. Now, if the DSBCAPS_GETCURRENTPOSITION2 flag is specified, the application can get a more accurate play position. If this flag is not specified, the old behavior is preserved for compatibility. Note that this flag affects only emulated sound cards; if a DirectSound driver is present, the play cursor is accurate for DirectSound in all versions of DirectX. </td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DSBCAPS_GLOBALFOCUS </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>The buffer is a global <a href="glossary_5583.htm#_dx5_sound_buffer_glos">sound buffer</a>. With this flag set, an application using DirectSound can continue to play its buffers if the user switches focus to another application, even if the new application uses DirectSound. The one exception is if you switch focus to a DirectSound application that uses the DSSCL_EXCLUSIVE or DSSCL_WRITEPRIMARY flag for its cooperative level. In this case, the global sounds from other applications will not be audible. </td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DSBCAPS_LOCHARDWARE </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>Forces the buffer to use hardware mixing, even if DSBCAPS_STATIC is not specified. If the device does not support hardware mixing or if the required hardware memory is not available, the call to the <a href="dsound_0604.htm"><b>IDirectSound::CreateSoundBuffer</b></a> method will fail. The application must ensure that a mixing channel will be available for this buffer; this condition is not guaranteed. </td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DSBCAPS_LOCSOFTWARE </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>Forces the buffer to be stored in software memory and use software mixing, even if DSBCAPS_STATIC is specified and hardware resources are available. </td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DSBCAPS_MUTE3DATMAXDISTANCE </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>The sound is to be reduced to silence at the maximum distance. The buffer will stop playing when the maximum distance is exceeded, so that processor time is not wasted.</td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DSBCAPS_PRIMARYBUFFER </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>Indicates that the buffer is a <a href="glossary_33qr.htm#_dx5_primary_sound_buffer_glos">primary sound buffer</a>. If this value is not specified, a <a href="glossary_5583.htm#_dx5_secondary_sound_buffer_glos">secondary sound buffer</a> will be created. </td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DSBCAPS_STATIC </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>Indicates that the buffer will be used for static sound data. Typically, these buffers are loaded once and played many times. These buffers are candidates for hardware memory. </td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DSBCAPS_STICKYFOCUS </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>Changes the focus behavior of the <a href="glossary_5583.htm#_dx5_sound_buffer_glos">sound buffer</a>. This flag can be specified in an <a href="dsound_0604.htm"><b>IDirectSound::CreateSoundBuffer</b></a> call. With this flag set, an application using DirectSound can continue to play its <a href="glossary_5583.htm#_dx5_sticky_focus_glos">sticky focus</a> buffers if the user switches to another application not using DirectSound. In this situation, the application's normal buffers are muted, but the <a href="glossary_5583.htm#_dx5_sticky_focus_glos">sticky focus</a> buffers are still audible. This is useful for nongame applications, such as movie playback (DirectShow), when the user wants to hear the soundtrack while typing in Microsoft Word or Microsoft Excel, for example. However, if the user switches to another DirectSound application, all <a href="glossary_5583.htm#_dx5_sound_buffer_glos">sound buffers</a>, both normal and <a href="glossary_5583.htm#_dx5_sticky_focus_glos">sticky focus</a>, in the previous application are muted. </td>
</tr>
</table><br>

</dd>
<dt>
<b>dwBufferBytes</b></dt>
<dd>
Size of the new buffer, in bytes. This value must be 0 when creating primary buffers. For secondary buffers, the minimum and maximum sizes allowed are specified by DSBSIZE_MIN and DSBSIZE_MAX, defined in Dsound.h.</dd>
<dt>
<b>dwReserved</b></dt>
<dd>
This value is reserved. Do not use.</dd>
<dt>
<b>lpwfxFormat</b></dt>
<dd>
Address of a structure specifying the waveform format for the buffer. This value must be NULL for primary buffers. The application can use <a href="dsound_96ck.htm"><b>IDirectSoundBuffer::SetFormat</b></a> to set the format of the primary buffer.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The DSBCAPS_LOCHARDWARE and DSBCAPS_LOCSOFTWARE flags used in the <b>dwFlags</b> member are optional and mutually exclusive. DSBCAPS_LOCHARDWARE forces the buffer to reside in memory located in the sound card. DSBCAPS_LOCSOFTWARE forces the buffer to reside in main system memory, if possible.</p>
<p>
These flags are also defined for the <b>dwFlags</b> member of the <a href="dsound_886c.htm"><b>DSBCAPS</b></a> structure, and when used there, the specified flag indicates the actual location of the DirectSoundBuffer object.</p>
<p>
When creating a primary buffer, applications must set the <b>dwBufferBytes</b> member to 0; DirectSound will determine the optimal buffer size for the particular sound device in use. To determine the size of a created primary buffer, call <a href="dsound_43xg.htm"><b>IDirectSoundBuffer::GetCaps</b></a>.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later. Available as a redistributable for Windows 95.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in dsound.h.</p>
<h4>See Also</h4>
<p>
<a href="dsound_0604.htm"><b>IDirectSound::CreateSoundBuffer</b></a></p>
<p>&nbsp;</p></body>
</HTML>
