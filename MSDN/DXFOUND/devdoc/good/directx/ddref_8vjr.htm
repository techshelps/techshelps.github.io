<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IDirectDrawSurface3::PageLock</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_dx5_idirectdrawsurface3_pagelock_ddraw"></a>IDirectDrawSurface3::PageLock</h1>
<p>
The <b>IDirectDrawSurface3::PageLock</b> method prevents a system-memory surface from being paged out while a blit operation using direct memory access (DMA) transfers to or from system memory is in progress.</p>
<pre><code><b>HRESULT PageLock(
  DWORD</b><i> dwFlags  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dwFlags</i></dt>
<dd>
This parameter is currently not used and must be set to 0.
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the method succeeds, the return value is DD_OK.</p>
<p>
If the method fails, the return value may be one of the following error values: </p>
<table cellspacing=4 cols=1>
<tr valign=top>
<td width=100%><a href="ddref_71rr.htm#_dx5_dderr_cantpagelock_ddraw">DDERR_CANTPAGELOCK</a> </td>
</tr>
<tr valign=top>
<td width=100%><a href="ddref_71rr.htm#_dx5_dderr_invalidobject_ddraw">DDERR_INVALIDOBJECT</a> </td>
</tr>
<tr valign=top>
<td width=100%><a href="ddref_71rr.htm#_dx5_dderr_invalidparams_ddraw">DDERR_INVALIDPARAMS</a> </td>
</tr>
<tr valign=top>
<td width=100%><a href="ddref_71rr.htm#_dx5_dderr_surfacelost_ddraw">DDERR_SURFACELOST</a> </td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
You must call this method to make use of DMA support. If you do not, the blit occurs using software emulation. For more information, see <a href="ddoverv_3jcn.htm">Using DMA</a>.</p>
<p>
The performance of the operating system could be negatively affected if too much memory is locked.</p>
<p>
A lock count is maintained for each surface and is incremented each time <b>IDirectDrawSurface3::PageLock</b> is called for that surface. The count is decremented when <a href="ddref_1lfb.htm"><b>IDirectDrawSurface3::PageUnlock</b></a> is called. When the count reaches 0, the memory is unlocked and can then be paged by the operating system.</p>
<p>
This method works only on system-memory surfaces; it will not page lock a display-memory surface or an emulated <a href="glossary_33qr.htm#_dx5_primary_surface_glos">primary surface</a>. If an application calls this method on a display memory surface, the method will do nothing except return DD_OK.</p>
<p>
This method was not implemented in the <b>IDirectDraw</b> interface.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later. Available as a redistributable for Windows 95.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in ddraw.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use ddraw.lib.</p>
<h4>See Also</h4>
<p>
<b>IDirectDrawSurface3::PageUnlock</b></p>
<p>&nbsp;</p></body>
</HTML>
