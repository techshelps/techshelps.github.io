<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Exploiting Hardware Features</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h4><a name="_dx5_exploiting_hardware_features_ddraw"></a>Exploiting Hardware Features</h4>
<p>
Video-port hardware often supports special features for adjusting color, shrinking or zooming images, handling VBI data, or skipping fields. The HAL provides information about these features by using flags in the <a href="ddref_5gdz.htm"><b>DDVIDEOPORTCAPS</b></a> structure. You retrieve the capabilities of a machine's video-port hardware by calling the <a href="ddref_72rb.htm"><b>IDDVideoPortContainer::EnumVideoPorts</b></a> method.</p>
<p>
To exploit these features for playback, you use the <a href="ddref_6uyf.htm"><b>IDirectDrawVideoPort::StartVideo</b></a> method, which uses a <a href="ddref_646v.htm"><b>DDVIDEOPORTINFO</b></a> structure to request that hardware features be used to modify image data before placing it in the frame buffer or for display. By setting values and flags in this structure, you can specify the source rectangle used with the overlay surface, indicate cropping regions, request hardware scaling, and set pixel formats.</p>
<p>
DirectDrawVideoPort objects do not emulate video-port hardware services.</p>
<p>&nbsp;</p></body>
</HTML>
