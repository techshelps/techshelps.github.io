<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Interface Method Names and Syntax</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_dx5_interface_method_names_and_syntax_dxintro"></a>Interface Method Names and Syntax</h2>
<p>
All COM interface methods described in this document are shown using C++ class names. This naming convention is used for consistency and to differentiate between methods used for different DirectX objects that use the same name, such as <b>QueryInterface</b>, <b>AddRef</b>, and <b>Release</b>. This does not imply that you can use these methods only with C++.</p>
<p>
In addition, the syntax provided for the methods uses C++ conventions for consistency. It does not include the <i>this</i> pointer to the interface. When programming in C, the pointer to the interface must be included in each method. The following example shows the C++ syntax for the <a href="ddref_748n.htm"><b>IDirectDraw2::GetCaps</b></a> method:</p>
<pre><code><b>HRESULT GetCaps(
  LPDDCAPS</b><i> lpDDDriverCaps</i><b>,  </b>
<b>  LPDDCAPS</b><i> lpDDHELCaps  </i>
<b>);</b>
 </code></pre>
<p>
The same example using C syntax looks like this:</p>
<pre><code><b>HRESULT GetCaps(
  LPDIRECTDRAW</b><i> lpDD</i><b>,    </b>
<b>  LPDDCAPS</b><i> lpDDDriverCaps</i><b>,  </b>
<b>  LPDDCAPS</b><i> lpDDHELCaps  </i>
<b>);</b>
 </code></pre>
<p>
The <i>lpDD</i> parameter is a pointer to the DirectDraw structure that represents the DirectDraw object.</p>
<p>&nbsp;</p></body>
</HTML>
