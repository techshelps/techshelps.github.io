<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Step 1: Creating the DirectInput Mouse Device</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_dx5_step_1_creating_the_directinput_mouse_device_dinput"></a>Step 1: Creating the DirectInput Mouse Device</h3>
<p>
After creating the DirectInput object, your application should retrieve a pointer to an <a href="dinput_2mus.htm"><b>IDirectInputDevice</b></a> interface, which will be used to perform most mouse-related tasks. To do this, call the <a href="dinput_4jw4.htm"><b>IDirectInput::CreateDevice</b></a> method.</p>
<p>
The <b>CreateDevice</b> method accepts three parameters.</p>
<p>
The first parameter is the globally unique identifier (GUID) for the device your application is creating. In this case, since the system mouse will be used, your application should pass the predefined global variable <i>GUID_SysMouse</i>.</p>
<p>
The second parameter is the address of a variable that will be initialized with a valid <b>IDirectInputDevice</b> interface pointer if the call succeeds. </p>
<p>
The third parameter specifies the address of the controlling object's <b>IUnknown</b> interface for use in COM aggregation. Your application probably won't be using aggregation, in which case the parameter will be NULL.</p>
<p>
The following sample from Scrawl.cpp attempts to retrieve a pointer to an <b>IDirectInputDevice</b> interface. If the call fails, an error message is displayed and FALSE is returned.</p>
<pre><code>// LPDIRECTINPUT    g_pdi;    // This has been initialized
LPDIRECTINPUTDEVICE g_pMouse; 
HRESULT             hr; 
 
hr = g_pdi-&gt;CreateDevice(GUID_SysMouse, &amp;g_pMouse, NULL);

if (FAILED(hr)) {
    Complain(hwnd, hr, "CreateDevice(SysMouse)");
    return FALSE;
}
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
