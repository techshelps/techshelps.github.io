<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Moving DirectX 3 Applications to DirectX 5</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_dx5_moving_directx_3_applications_to_directx_5_d3d"></a>Moving DirectX 3 Applications to DirectX 5</h3>
<p>
Although DirectX 3 applications will work unchanged in DirectX 5, DirectX 3 applications should be modified if the new DirectX 5 features are to be used. The main change required is use the new Direct3D device model described in <a href="imover_6l9g.htm">Objects and Interfaces</a>. Retrieve an <b>IDirect3D2 </b>interface from DirectDraw instead of <b>IDirect3D</b> and then use the <a href="d3dimref_0dus.htm"><b>IDirect3D2::CreateDevice</b></a><b> </b>method to create the device object. You can continue to use the <b>IDirect3DDevice</b> interface just as you did previously by calling the <b>IDirect3DDevice2::QueryInterface</b> method to retrieve the <b>IDirect3DDevice</b> interface. The only difference is that if you previously called <b>IDirect3DDevice::QueryInterface</b> to retrieve an <b>IDirectDrawSurface</b> interface, you should instead call <a href="d3dimref_5jj8.htm"><b>IDirect3DDevice2::GetRenderTarget</b></a>. </p>
<p>&nbsp;</p></body>
</HTML>
