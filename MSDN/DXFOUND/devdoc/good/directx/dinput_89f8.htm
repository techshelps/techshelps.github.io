<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DirectInputCreate</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_dx5_directinputcreate_dinput"></a>DirectInputCreate</h1>
<p>
The <b>DirectInputCreate</b> function creates a DirectInput object that supports the <i>IDirectInput</i> COM interface.</p>
<pre><code><b>HRESULT WINAPI DirectInputCreate(
  HINSTANCE</b><i> hinst</i><b>,                  </b>
<b>  DWORD</b><i> dwVersion</i><b>,                  </b>
<b>  LPDIRECTINPUT *</b><i> lplpDirectInput</i><b>,  </b>
<b>  LPUNKNOWN</b><i> punkOuter               </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hinst</i></dt>
<dd>
Instance handle to the application or DLL that is creating the DirectInput object. DirectInput uses this value to determine whether the application or DLL has been certified and to establish any special behaviors that may be necessary for backwards compatibility.
<p>
It is an error for a DLL to pass the handle of the parent application. For example, an ActiveX control embedded in a Web page that uses DirectInput must pass its own instance handle and not the handle of the web browser. This ensures that DirectInput recognizes the control and can enable any special behaviors that may be necessary.
</dd>
<dt>
<i>dwVersion</i></dt>
<dd>
Version number of DirectInput for which the application is designed. This value will normally be DIRECTINPUT_VERSION. Passing the version number of a previous version will cause DirectInput to emulate that version. For more information, see <a href="dinput_8gfo.htm">Designing for Previous Versions of DirectInput</a>.</dd>
<dt>
<i>lplpDirectInput</i></dt>
<dd>
Pointer to an address that will be initialized with a valid <b>IDirectInput</b> interface pointer if the call succeeds.</dd>
<dt>
<i>punkOuter</i></dt>
<dd>
Pointer to the address of the controlling object's <b>IUnknown</b> interface for COM aggregation, or NULL if the interface is not aggregated. Most callers will pass NULL. If aggregation is requested, the object returned in <i>*lplpDirectInput</i> will be a pointer to the <b>IUnknown</b> rather than an <b>IDirectInput</b> interface, as required by COM aggregation.
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is DI_OK.</p>
<p>
If the function fails, the return value may be one of the following error values:</p>
<table cellspacing=4 cols=1>
<tr valign=top>
<td width=100%><a href="dinput_7yk4.htm#_dx5_dierr_betadirectinputversion_dinput">DIERR_BETADIRECTINPUTVERSION</a> </td>
</tr>
<tr valign=top>
<td width=100%><a href="dinput_7yk4.htm#_dx5_dierr_invalidparam_dinput">DIERR_INVALIDPARAM</a> </td>
</tr>
<tr valign=top>
<td width=100%><a href="dinput_7yk4.htm#_dx5_dierr_olddirectinputversion_dinput">DIERR_OLDDIRECTINPUTVERSION</a> </td>
</tr>
<tr valign=top>
<td width=100%><a href="dinput_7yk4.htm#_dx5_dierr_outofmemory_dinput">DIERR_OUTOFMEMORY</a> </td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
Calling this function with <i>punkOuter</i> = NULL is equivalent to creating the object through <b>CoCreateInstance(</b><i>&amp;CLSID_DirectInput, punkOuter, CLSCTX_INPROC_SERVER, &amp;IID_IDirectInput, lplpDirectInput</i><b>), </b>then initializing it with <b>Initialize</b>.</p>
<p>
Calling this function with <i>punkOuter</i> != NULL is equivalent to creating the object through <b>CoCreateInstance(</b><i>&amp;CLSID_DirectInput, punkOuter, CLSCTX_INPROC_SERVER, &amp;IID_IUnknown, lplpDirectInput</i><b>)</b>. The aggregated object must be initialized manually.</p>
<p>
There are separate ANSI and Unicode versions of this service. The ANSI version creates an object that supports the <b>IDirectInputA</b> interface, whereas the Unicode version creates an object that supports the <b>IDirectInputW</b> interface. As with other system services that are sensitive to character set issues, macros in the header file map <b>DirectInputCreate</b> to the appropriate character set variation.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later. Available as a redistributable for Windows 95.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in dinput.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use dinput.lib.</p>
<p>&nbsp;</p></body>
</HTML>
