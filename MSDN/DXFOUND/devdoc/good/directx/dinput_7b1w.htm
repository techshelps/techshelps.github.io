<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Buffered Joystick Data</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h4><a name="_dx5_buffered_joystick_data_dinput"></a>Buffered Joystick Data</h4>
<p>
To retrieve buffered data from the joystick, you must first set the buffer size (see <a href="dinput_94tw.htm">Device Properties</a>) and declare an array of <a href="dinput_5cms.htm"><b>DIDEVICEOBJECTDATA</b></a> structures. The number of elements required in this array is the same as the buffer size. After acquiring the device, you can examine and flush the buffer anytime with the <a href="dinput_74ms.htm"><b>IDirectInputDevice:GetDeviceData</b></a> method.<b> </b>(See <a href="dinput_0p4k.htm">Buffered and Immediate Data</a>.)</p>
<p>
Each element in the <b>DIDEVICEOBJECTDATA</b> array represents a change in state for a single object on the joystick. For instance, a simple joystick contains four objects or input sources: x-axis, y-axis, button 0 and button 1. If the user presses button 0 and moves the stick diagonally, the array passed to <b>IDirectInputDevice::GetDeviceData</b> will have three elements filled in: an element for button 0 being pressed, an element for the change in the x-axis, and an element for the change in the y-axis.</p>
<p>
You can determine which object an element in the array refers to by checking the <b>dwOfs</b> member of the <b>DIDEVICEOBJECTDATA</b> structure against the following values:
<ul>
<li>
DIJOFS_X</li>
<li>
DIJOFS_Y</li>
<li>
DIJOFS_Z</li>
<li>
DIJOFS_Rx</li>
<li>
DIJOFS_Ry</li>
<li>
DIJOFS_Rz</li>
<li>
DIJOFS_BUTTON0 <i>to</i> DIJOFS_BUTTON31 <i>or</i> DIJOFS_BUTTON(<i>n</i>)</li>
<li>
DIJOFS_POV(<i>n</i>)</li>
<li>
DIJOFS_SLIDER(<i>n</i>)</li>
</ul>
<p>
Each of these values is equivalent to the offset of the data for the object in a <a href="dinput_414k.htm"><b>DIJOYSTATE</b></a> structure. For example, DIJOFS_BUTTON0 is equivalent to the offset of <b>rgbButtons[0]</b> in the <b>DIJOYSTATE</b> structure. You can use simple comparisons to determine which device object is associated with an item in the buffer. For example:</p>
<pre><code>DIDEVICEOBJECTDATA  *lpdidod; 
int                 n; 
. 
. 
. 
/* JoyBuffer is an array of DIDEVICEOBJECTDATA structures 
   that has been set by a call to GetDeviceData. 
   n is incremented in a loop that examines all filled elements 
   in the array. */ 
lpdidod = &amp;JoyBuffer[n]; 
if (( (int) lpdidod-&gt;dwOfs == DIJOFS_BUTTON0) 
   &amp;&amp; (lpdidod-&gt;dwData &amp; 0x80)) 
{ 
 ;  // do something in response to press of primary button 
} 
 </code></pre>
<p>
The data for the change of state of the device object is located in the <b>dwData</b> member of the <a href="dinput_5cms.htm"><b>DIDEVICEOBJECTDATA</b></a> structure. For axes, the coordinate value is returned in this member. For button objects, only the low byte of <b>dwData</b> is significant; the high bit of this byte is set if the button is pressed and clear if the button is released.</p>
<p>
For the other members, see <a href="dinput_79o4.htm">Time Stamps and Sequence Numbers</a>.</p>
<p>&nbsp;</p></body>
</HTML>
