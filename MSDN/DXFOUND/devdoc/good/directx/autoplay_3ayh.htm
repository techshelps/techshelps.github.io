<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Autorun.inf</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_dx5_autorun.inf_autoplay"></a>Autorun.inf</h2>
<p>
The Autorun.inf file is a text file located in the root directory of the CD on which your DirectX® application is shipped. This file contains the name of the startup program on the disc. This startup program runs automatically when the disc is inserted in the CD-ROM drive. The Autorun.inf file also contains the file name of the icon that you want to represent your application's CD in the Windows user interface. In addition, the Autorun.inf file can contain optional menu commands that you want added to the shortcut menu. These menu commands are displayed when the user right-clicks the CD-ROM icon.</p>
<p>
The following is an example of a minimal Autorun.inf file.</p>
<pre><code>[autorun] 
open=filename.exe 
icon=filename.ico 
 </code></pre>
<p>
The <b>[autorun]</b> section identifies the lines that follow it as AutoPlay commands. An <b>[autorun]</b> section is required in every Autorun.inf file. The <a href="autoplay_9ruh.htm"><b>open</b></a> command specifies the path and file name of the startup application. The <a href="autoplay_8xmh.htm"><b>icon</b></a> command specifies the file name that contains the icon.</p>
<p>
The Autorun.inf file also can contain architecture-specific sections for Windows NT 4.0 running on RISC processors. For each type of processor architecture, add a section to the Autorun.inf file that contains the file name of the startup application you want to run for that architecture. The following table lists the commands used for the architectures that AutoPlay supports.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=46%>Architecture</th>
<th align=left width=54%>Section Title</th>
</tr>
<tr valign=top>
<td width=46%>368 or higher</td>
<td width=54%>[autorun]</td>
</tr>
<tr valign=top>
<td width=46%>MIPS</td>
<td width=54%>[autorun.mips]</td>
</tr>
<tr valign=top>
<td width=46%>DEC Alpha</td>
<td width=54%>[autorun.alpha]</td>
</tr>
<tr valign=top>
<td width=46%>PowerPC</td>
<td width=54%>[autorun.ppc]</td>
</tr>
</table><br>
<p>
The following example shows how to create an Autorun.inf file that runs different startup applications depending on the computer architecture:</p>
<pre><code>[autorun] 
open=filename.exe 
icon=filename.ico 
 
[autorun.mips] 
open=filenam2.exe 
icon=filename.ico 
 
[autorun.alpha] 
open=filenam3.exe 
icon=filename.ico 
 
[autorun.ppc] 
open=filenam4.exe 
icon=filename.ico 
 </code></pre>
<p>
The shell checks for an architecture-specific section first. If it does not find one, it uses the information in the <b>[autorun]</b> section. After the shell finds a section, it ignores all the other sections, so each section must contain all the information for that architecture.</p>
<p>&nbsp;</p></body>
</HTML>
