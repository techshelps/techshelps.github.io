<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IDirect3DDevice2::BeginIndexed</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_dx5_idirect3ddevice2_beginindexed_d3d"></a>IDirect3DDevice2::BeginIndexed</h1>
<p>
The <b>IDirect3DDevice2::BeginIndexed</b> method defines the start of a primitive based on indexing into an array of vertices. This method fails if it is called after a call to the <a href="d3dimref_1ctg.htm"><b>IDirect3DDevice2::Begin</b></a> or <b>IDirect3DDevice2::BeginIndexed</b> method that has no corresponding call to <a href="d3dimref_3f38.htm"><b>IDirect3DDevice2::End</b></a>. The only method you can legally call between calls to <b>IDirect3DDevice2::BeginIndexed</b> and <b>IDirect3DDevice2::End</b> is <a href="d3dimref_5v38.htm"><b>IDirect3DDevice2::Index</b></a>.</p>
<pre><code><b>HRESULT BeginIndexed(
  D3DPRIMITIVETYPE</b><i> dptPrimitiveType</i><b>,  </b>
<b>  D3DVERTEXTYPE</b><i> dvtVertexType</i><b>,        </b>
<b>  LPVOID</b><i> lpvVertices</i><b>,                 </b>
<b>  DWORD</b><i> dwNumVertices</i><b>,                </b>
<b>  DWORD</b><i> dwFlags                       </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dptPrimitiveType</i></dt>
<dd>
Type of primitive to be rendered by this command. This must be one of the members of the <a href="d3dimref_1twk.htm"><b>D3DPRIMITIVETYPE</b></a> enumerated type. Note that the <b>D3DPT_POINTLIST</b> member of <b>D3DPRIMITIVETYPE</b> is not indexed. </dd>
<dt>
<i>dvtVertexType</i></dt>
<dd>
Indicates the types of the vertices used. This must be one of the members of the <a href="d3dimref_1z8k.htm"><b>D3DVERTEXTYPE</b></a> enumerated type.</dd>
<dt>
<i>lpvVertices</i></dt>
<dd>
Pointer to the list of vertices to be used in the primitive sequence.</dd>
<dt>
<i>dwNumVertices</i></dt>
<dd>
Number of vertices in the above array.</dd>
<dt>
<i>dwFlags</i></dt>
<dd>
One or more of the following flags defining how the primitive is drawn:
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=50%>D3DDP_DONOTCLIP</td>
<td width=50%>The application has already done the required clipping, so the system should not necessarily clip the primitives. (This flag is a hint; the system may clip the primitive even when this flag is specified, under some circumstances.) </td>
</tr>
<tr valign=top>
<td width=50%>D3DDP_DONOTUPDATEEXTENTS</td>
<td width=50%>Disables the updating of the screen rectangle affected by this rendering call. Using this flag can potentially help performance, but the extents returned by <a href="d3dimref_6qas.htm"><b>IDirect3DDevice2::GetClipStatus</b></a> will not have been updated to account for the data rendered by this call.</td>
</tr>
<tr valign=top>
<td width=50%>D3DDP_OUTOFORDER</td>
<td width=50%>A hint to the system that the primitives can be rendered out of order. Note that back-to-back calls to DrawPrimitive methods using this flag may cause triangles from the primitives to be interleaved. The DrawPrimitive methods that use this flag are <a href="d3dimref_1ctg.htm"><b>Begin</b></a>, <b>BeginIndexed</b>, <a href="d3dimref_4co4.htm"><b>DrawIndexedPrimitive</b></a>, and <a href="d3dimref_93tw.htm"><b>DrawPrimitive</b></a>.</td>
</tr>
<tr valign=top>
<td width=50%>D3DDP_WAIT</td>
<td width=50%>Causes the method to wait until the polygons have been rendered before it returns, instead of returning as soon as the polygons have been sent to the card. (On scene-capture cards, the method returns as soon as the card responds.)<p>
This flag is typically used for debugging. Applications should not attempt to use this flag to ensure that a scene is up-to-date before continuing.</p>
</td>
</tr>
</table><br>

</dd>
</dl>
<h4>Return Values</h4>
<p>
If the method succeeds, the return value is DD_OK.</p>
<p>
If the method fails, the return value may be one of the following values: </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=56%><a href="d3dimref_2rl0.htm#_dx5_d3derr_invalidramptexture_d3d">D3DERR_INVALIDRAMPTEXTURE</a></td>
<td width=44%>Ramp mode is being used and the texture handle in the current material does not match the current texture handle that is set as a render state. </td>
</tr>
<tr valign=top>
<td width=56%><a href="ddref_71rr.htm#_dx5_dderr_invalidparams_ddraw">DDERR_INVALIDPARAMS</a> </td>
<td width=44%>One of the arguments is invalid. </td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
This method was first introduced in the <b>IDirect3DDevice2 </b>interface.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later. Available as a redistributable for Windows 95.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in d3d.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use ddraw.lib.</p>
<h4>See Also</h4>
<p>
<a href="d3dimref_1ctg.htm"><b>IDirect3DDevice2::Begin</b></a>, <a href="d3dimref_3f38.htm"><b>IDirect3DDevice2::End</b></a>, <a href="d3dimref_5v38.htm"><b>IDirect3DDevice2::Index</b></a></p>
<p>&nbsp;</p></body>
</HTML>
