<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Step 1: Loading the Palette Entries</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_dx5_step_1_loading_the_palette_entries_ddraw"></a>Step 1: Loading the Palette Entries</h3>
<p>
The following code in DDEX5 loads the palette entries with the values in the lower half of the All.bmp file (the part of the bitmap that contains the red donuts):</p>
<pre><code>// First, set all colors as unused. 
for(i=0; i&lt;256; i++) 
{ 
    torusColors[i] = 0; 
} 
 
// Lock the surface and scan the lower part (the torus area), 
// and keep track of all the indexes found. 
ddsd.dwSize = sizeof(ddsd); 
while (lpDDSOne-&gt;Lock(NULL, &amp;ddsd, 0, NULL) == DDERR_WASSTILLDRAWING) 
    ; 
 
// Search through the torus frames and mark used colors. 
for(y=480; y&lt;480+384; y++) 
{ 
    for(x=0; x&lt;640; x++) 
    { 
        torusColors[((BYTE *)ddsd.lpSurface)[y*ddsd.lPitch+x]] = 1; 
    } 
} 
 
lpDDSOne-&gt;Unlock(NULL); 
 </code></pre>
<p>
The <i>torusColors</i> array is used as an indicator of the color index of the palette used in the lower half of the All.bmp file. Before it is used, all of the values in the <i>torusColors</i> array are reset to 0. The off-screen buffer is then locked in preparation for determining if a color index value is used.</p>
<p>
The <i>torusColors</i> array is set to start at row 480 and column 0 of the bitmap. The color index value in the array is determined by the byte of data at the location in memory where the bitmap surface is located. This location is determined by the <b>lpSurface</b> member of the <a href="ddref_8hbr.htm"><b>DDSURFACEDESC</b></a> structure, which is pointing to the memory location corresponding to row 480 and column 0 of the bitmap (y&nbsp;&times;&nbsp;<b>lPitch</b>&nbsp;+&nbsp;x). The location of the specific color index value is then set to 1. The y value (row) is multiplied by the <b>lPitch</b> value (found in the <b>DDSURFACEDESC</b> structure) to get the actual location of the pixel in linear memory.</p>
<p>
The color index values that are set in <i>torusColors</i> will be used later to determine which colors in the palette are rotated. Because there are no common colors between the background and the red donuts, only those colors associated with the red donuts are rotated. If you want to check whether this is true or not, just remove the "*ddsd.lPitch" from the array and see what happens when you recompile and run the program. (Without multiplying y&times;<b>lPitch</b>, the red donuts are never reached and only the colors found in the background are indexed and later rotated.) For more information about <a href="glossary_1777.htm#_dx5_width_glos">width</a> and <a href="glossary_33qr.htm#_dx5_pitch_glos">pitch</a>, see <a href="ddoverv_3nlj.htm">Width and Pitch</a>.</p>
<p>&nbsp;</p></body>
</HTML>
