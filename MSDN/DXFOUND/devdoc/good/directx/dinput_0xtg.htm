<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DIDATAFORMAT</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_dx5_didataformat_dinput"></a>DIDATAFORMAT</h1>
<p>
The <b>DIDATAFORMAT</b> structure carries information describing a device's data format. This structure is used with the <a href="dinput_0q0k.htm"><b>IDirectInputDevice::SetDataFormat</b></a> method.</p>
<pre><code>typedef struct { 
    DWORD dwSize; 
    DWORD dwObjSize; 
    DWORD dwFlags; 
    DWORD dwDataSize; 
    DWORD dwNumObjs; 
    LPDIOBJECTDATAFORMAT rgodf; 
} DIDATAFORMAT, *LPDIDATAFORMAT;
 
typedef const DIDATAFORMAT *LPCDIDATAFORMAT;
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>dwSize</b></dt>
<dd>
Size of this structure, in bytes.</dd>
<dt>
<b>dwObjSize</b></dt>
<dd>
Size of the <a href="dinput_8k38.htm"><b>DIOBJECTDATAFORMAT</b></a> structure, in bytes.</dd>
<dt>
<b>dwFlags</b></dt>
<dd>
Flags describing other attributes of the data format. This value can be one of the following: 
<table cellspacing=4 cols=2>
<tr valign=top>
<td colspan=2 width=100%>DIDF_ABSAXIS </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>The axes are in absolute mode. Setting this flag in the data format is equivalent to manually setting the axis mode property using the <a href="dinput_24vo.htm"><b>IDirectInputDevice::SetProperty</b></a> method. This may not be combined with DIDF_RELAXIS flag. </td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DIDF_RELAXIS </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>The axes are in relative mode. Setting this flag in the data format is equivalent to manually setting the axis mode property using the <a href="dinput_24vo.htm"><b>IDirectInputDevice::SetProperty</b></a> method. This may not be combined with the DIDF_ABSAXIS flag. </td>
</tr>
</table><br>

</dd>
<dt>
<b>dwDataSize</b></dt>
<dd>
Size of a data packet returned by the device, in bytes. This value must be a multiple of 4 and must exceed the largest offset value for an object's data within the data packet.</dd>
<dt>
<b>dwNumObjs</b></dt>
<dd>
Number of objects in the <b>rgodf</b> array.</dd>
<dt>
<b>rgodf</b></dt>
<dd>
Address to an array of <a href="dinput_8k38.htm"><b>DIOBJECTDATAFORMAT</b></a> structures. Each structure describes how one object's data should be reported in the device data. Typical errors include placing two pieces of information in the same location and placing one piece of information in more than one location.
</dd>
</dl>
<h4>Remarks</h4>
<p>
Applications do not typically need to create a <b>DIDATAFORMAT</b> structure. An application can use one of the predefined global data format variables, <i>c_dfDIMouse</i>, <i>c_dfDIKeyboard</i>, <i>c_dfDIJoystick</i>, or <i>c_dfDIJoystick2</i>.</p>
<p>
The following declarations set a data format that can be used by applications that need two axes (reported in absolute coordinates) and two buttons.</p>
<pre><code>// Suppose an application uses the following 
// structure to read device data. 
 
typedef struct MYDATA { 
    LONG  lX;                   // x-axis goes here 
    LONG  lY;                   // y-axis goes here 
    BYTE  bButtonA;             // One button goes here 
    BYTE  bButtonB;             // Another button goes here 
    BYTE  bPadding[2];          // Must be dword multiple in size 
} MYDATA; 
 
// Then it can use the following data format. 
 
DIOBJECTDATAFORMAT rgodf[ ] = { 
  { &amp;GUID_XAxis, FIELD_OFFSET(MYDATA, lX),
    DIDFT_AXIS | DIDFT_ANYINSTANCE, 0, }, 
  { &amp;GUID_YAxis, FIELD_OFFSET(MYDATA, lY), 
    DIDFT_AXIS | DIDFT_ANYINSTANCE, 0, }, 
  { &amp;GUID_Button, FIELD_OFFSET(MYDATA, bButtonA),
    DIDFT_BUTTON | DIDFT_ANYINSTANCE, 0, }, 
  { &amp;GUID_Button, FIELD_OFFSET(MYDATA, bButtonB), 
    DIDFT_BUTTON | DIDFT_ANYINSTANCE, 0, }, 
}; 
#define numObjects (sizeof(rgodf) / sizeof(rgodf[0])) 
 
DIDATAFORMAT df = { 
    sizeof(DIDATAFORMAT),       // this structure 
    sizeof(DIOBJECTDATAFORMAT), // size of object data format 
    DIDF_ABSAXIS,               // absolute axis coordinates 
    sizeof(MYDATA),             // device data size 
    numObjects,                 // number of objects 
    rgodf,                      // and here they are 
}; 
 </code></pre>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later. Available as a redistributable for Windows 95.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in dinput.h.</p>
<p>&nbsp;</p></body>
</HTML>
