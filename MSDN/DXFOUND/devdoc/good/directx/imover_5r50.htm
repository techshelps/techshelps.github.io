<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Devices</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_dx5_devices_d3d"></a>Devices</h2>
<p>
A Direct3D device can be thought of as a rendering target for Direct3D. It encapsulates and stores the rendering state. </p>
<p>
The Direct3D Immediate Mode device object supports two interfaces, <a href="d3dimref_9c4k.htm"><b>IDirect3DDevice</b></a> and <a href="d3dimref_1z1g.htm"><b>IDirect3DDevice2</b></a>. These two interfaces abstract two styles of programming in Direct3D Immediate Mode. <b>IDirect3DDevice</b> allows programming using <a href="glossary_8yb7.htm#_dx5_execute_buffer_glos">execute buffers</a>. <b>IDirect3DDevice2</b> is a more immediate interface that allows you to draw primitives directly. The interfaces share a few common methods that are useful in either programming style. These have been replicated in both the interfaces to reduce the need to call the <a href="dxintro_0pgv.htm"><b>QueryInterface</b></a> method between each interface.</p>
<p>
You can call the <a href="d3dimref_0dus.htm"><b>IDirect3D2::CreateDevice</b></a> method to create a Direct3D device object. This method retrieves an <b>IDirect3DDevice2</b> interface. The object, however supports both device interfaces; you can retrieve an <b>IDirect3DDevice </b>interface by calling the <a href="dxintro_0pgv.htm"><b>IDirect3DDevice2::QueryInterface</b></a> method.</p>
<p>
<img src="images/device2.gif" border=0></p>
<p>
When you create an <b>IDirect3DDevice2</b> interface, the Direct3D device object is a separate object from a DirectDraw surface object. The device object uses a DirectDraw surface as a rendering target. This behavior is different from <b>IDirect3DDevice</b>, in which Direct3D devices are simply interfaces to DirectDraw surfaces. Keeping devices as separate objects with independent lifetimes from DirectDraw surfaces allows a single 3-D device object to use different DirectDraw surfaces as render targets at different times (for information about this, see <a href="d3dimref_2isk.htm"><b>IDirect3DDevice2::SetRenderTarget</b></a>). For more information on backward compatibility and the differences between DirectX 3 and DirectX 5, see <a href="imover_9d0k.htm">Compatibility with DirectX 3</a>.</p>
<p>&nbsp;</p></body>
</HTML>
