<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>What's New in DirectX 5?</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_dx5_what_s_new_in_directx_5__dxintro"></a>What's New in DirectX 5?</h1>
<p>
DirectX 5 provides more services—and more avenues for innovation—than did DirectX 3. (Note that there is no "DirectX 4"—the numbering jumps from version 3 to version 5.) Although this Programmer's Reference contains additional functions and services, all the applications you wrote with previous DirectX APIs will compile and run successfully without changes.</p>
<p>
The purpose of this section is to help those of you who are familiar with DirectX 3 quickly identify several important areas of this Programmer's Reference that are significantly different. These differences are listed by component. </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<td colspan=2 width=100%>DirectDraw </td>
</tr>
<tr valign=top>
<td width=3%></td>
<td width=97%><b>(Windows 98 and Windows NT 5.0 only.)</b> DirectDraw supports multiple monitors on systems running Windows 98 and Windows NT 5.0. For more information, see <a href="ddoverv_8iwn.htm">Multiple Monitor Systems</a>.</td>
</tr>
<tr valign=top>
<td width=3%></td>
<td width=97%>DirectDraw has been extended with new video-port capabilities that allow applications to control the flow of data from a hardware video-port device to a DirectDraw surface in display memory. For an overview of the video-port extensions, see <a href="ddoverv_6unr.htm">Video Ports</a>. </td>
</tr>
<tr valign=top>
<td width=3%></td>
<td width=97%>Additionally, the DirectDraw HEL now exploits performance improvements made possible by the Pentium MMX processor. DirectDraw tests for the presence of an MMX processor the first time you create a surface in any process. On non-Pentium machines, this test can cause a benign first-chance exception ("Illegal Instruction") to be reported by the debugger. The exception will not affect your application's performance or stability.</td>
</tr>
<tr valign=top>
<td width=3%></td>
<td width=97%>DirectDraw now supports off-screen surfaces wider than the primary surface. You can create surfaces as wide as you need, permitting that the display hardware can support it.<p>
For more information, see <a href="ddoverv_8caf.htm">Creating Wide Surfaces</a>. </p>
</td>
</tr>
<tr valign=top>
<td width=3%></td>
<td width=97%>DirectDraw now supports the Advanced Graphics Port (AGP) architecture. On AGP-equipped systems, you can create surfaces in non-local video memory. The <a href="ddref_7mlz.htm"><b>DDSCAPS</b></a> structure now supports flags to differentiate between standard (local) video memory and AGP (non-local) video memory. The <a href="ddref_1a9j.htm"><b>DDCAPS</b></a> structure now contains members that carry information about blit operations using non-local video memory surfaces. For more information, see <a href="ddoverv_6kon.htm">Using Non-local Video Memory Surfaces</a>.</td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DirectSound </td>
</tr>
<tr valign=top>
<td width=3%></td>
<td width=97%>DirectSound includes a new interface, <a href="dsound_5mn8.htm"><b>IKsPropertySet</b></a>, that enables it to support extended services offered by sound cards and their associated drivers. For more information, see <a href="dsound_1aw4.htm">DirectSound Property Sets</a>.<p>
Also new is <b>DirectSoundCapture</b>, a COM-based wrapper for the Win32 <b>waveIn</b> functions that will be extended in the future to work directly with the drivers.</p>
</td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DirectPlay </td>
</tr>
<tr valign=top>
<td width=3%></td>
<td width=97%>DirectPlay includes a new interface, <b>IDirectPlay3</b>, that is exactly the same as <b>IDirectPlay2</b> with new methods. Similarly, <b>IDirectPlayLobby2</b> is an extended version of <b>IDirectPlayLobby</b>.<p>
New functionality in DirectPlay includes the ability for applications to suppress service provider dialogs by creating connection shortcuts, asynchronous <b>EnumSessions</b> to keep an up-to-date list of available sessions, implementation of the <b>SetSessionDesc</b> method, better support for password protected sessions, support for secure server connections and the ability to create multiple DirectPlay objects and to create them directly using <b>CoCreateInstance</b>. </p>
<p>
For more information about these new features, see <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dx5_what_s_new_dplay">
</object><a href=JavaScript:alink_1.Click()>What's New in DirectPlay?</a> </p>
</td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>Direct3D </td>
</tr>
<tr valign=top>
<td width=3%></td>
<td width=97%>Direct3D Immediate Mode now supports drawing primitives without having to work directly with execute buffers. For more information, see <a href="imover_4of8.htm">The DrawPrimitive Methods</a>. A set of extensions and helper functions has been implemented for C++ programmers; for more information, see <a href="d3dimref_4tno.htm">D3D_OVERLOADS</a>.<p>
Direct3D Retained Mode now support interpolators that enable you to blend colors, move objects smoothly between positions, morph meshes, and perform many other transformations. Retained Mode also supports progressive meshes that allow you to begin with a coarse mesh and increasingly refine it; this can help you take the level of detail into account and can help with progressive downloads from remote locations. For more information, see the <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dx5_idirect3drminterpolator_interface_d3drm">
</object><a href=JavaScript:alink_2.Click()>IDirect3DRMInterpolator<b> </b>Interface</a> and the <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dx5_idirect3drmprogressivemesh_interface_d3drm">
</object><a href=JavaScript:alink_3.Click()>IDirect3DRMProgressiveMesh<b> </b>Interface</a></p>
<p>
The Direct3D documentation has been updated for DirectX 5. The overview of Immediate Mode is more comprehensive, there is an <a href="imover_2g84.htm">Immediate-Mode tutorial</a>, and there is a description of the .X file format. </p>
</td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DirectInput </td>
</tr>
<tr valign=top>
<td width=3%></td>
<td width=97%><b>(Windows 98 and Windows NT 5.0 only.)</b> DirectInput supports input devices that use the Human Interface Device (HID) standard. For more information, see <a href="dinput_9ho4.htm">Human Interface Devices</a></td>
</tr>
<tr valign=top>
<td width=3%></td>
<td width=97%>DirectInput now provides COM interfaces for joysticks (a term that includes other input devices such as game pads and flight yokes) and for force feedback devices as well as for the mouse and keyboard. <p>
The DirectInput documentation has been expanded to include reference material for the new functionality as well as new overviews and tutorials.</p>
</td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DirectSetup </td>
</tr>
<tr valign=top>
<td width=3%></td>
<td width=97%>DirectSetup now includes greater user interface customization capabilities. This is provided through a callback function that is passed to DirectSetup before it begins installing DirectX components and drivers. The callback function communicates the current installation status to your application's setup program. You can use this information to display the status through a user interface that is customized for your program.<p>
In addition, DirectSetup now provides a way for multiplayer games that use DirectPlayLobby to remove their registration information from the registry.</p>
</td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>AutoPlay </td>
</tr>
<tr valign=top>
<td width=3%></td>
<td width=97%>No changes for DirectX 5. </td>
</tr>
</table><br>
<p>&nbsp;</p></body>
</HTML>
