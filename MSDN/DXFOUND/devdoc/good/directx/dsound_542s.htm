<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Capture Buffer Notification</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_dx5_capture_buffer_notification_dsound"></a>Capture Buffer Notification</h3>
<p>
You may want your application to be notified when the current read position reaches a certain point in the buffer, or when it reaches the end. The current read position is the point up to which it is safe to read data from the buffer. With the <a href="dsound_457o.htm"><b>IDirectSoundNotify::SetNotificationPositions</b></a> method you can set any number of points within the buffer where events are to be signaled.</p>
<p>
First you have to obtain a pointer to the <a href="dsound_55us.htm"><b>IDirectSoundNotify</b></a> interface. You can do this with the capture buffer's <a href="dxintro_0pgv.htm"><b>QueryInterface</b></a> method, as shown in the example under <a href="dsound_5jhg.htm">Play Buffer Notification</a>.</p>
<p>
Next create an event object with the Win32 <b>CreateEvent</b> function. You put the handle to this event in the <b>hEventNotify</b> member of a <a href="dsound_755w.htm"><b>DSBPOSITIONNOTIFY</b></a> structure, and in the <b>dwOffset</b> member of that structure you specify the offset within the buffer where you want the event to be signaled. Then you pass the address of the structure—or of an array of structures, if you want to set more than one notification position—to the <b>IDirectSoundNotify::SetNotificationPositions</b> method.</p>
<p>
The following example sets up three notification positions. One event will be signaled when the read position nears the halfway point in the buffer, another will be signaled when it nears the end of the buffer, and the third will be signaled when capture stops. </p>
<pre><code>#define cEvents  3

//  LPDIRECTSOUNDNOTIFY  lpDsNotify;
//    lpDsNotify was initialized with QueryInterface.
//  WAVEFORMATEX   wfx;  
//    wfx was initialized when the buffer was created.
HANDLE             rghEvent[cEvents] = {0};
DSBPOSITIONNOTIFY  rgdsbpn[cEvents];
HRESULT            hr;
int                i;

// create the events
for (i = 0; i &lt; cEvents; ++i)
{
    rghEvent[i] = CreateEvent(NULL, TRUE, FALSE, NULL);
    if (NULL == rghEvent[i])
    {
        hr = GetLastError();
        goto Error;
    }
}

// Set notification positions.
// Notify us when read position is halfway through the buffer, 
// assuming buffer holds one second of audio.
rgdsbpn[0].dwOffset = (wfx.nAvgBytesPerSec/2) -1;
rgdsbpn[0].hEventNotify = rghEvent[0];
// Notify us when capture is at the end of the buffer.
rgdsbpn[1].dwOffset = wfx.nAvgBytesPerSec - 1;
rgdsbpn[1].hEventNotify = rghEvent[1];
rgdsbpn[2].dwOffset = DSBPN_OFFSETSTOP;
rgdsbpn[2].hEventNotify = rghEvent[2];

hr = lpDsNotify-&gt;SetNotificationPositions(cEvents, rgdsbpn);
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
