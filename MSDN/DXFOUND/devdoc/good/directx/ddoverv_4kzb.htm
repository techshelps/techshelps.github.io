<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>What Are Surfaces?</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h4><a name="_dx5_what_are_surfaces__ddraw"></a>What Are Surfaces?</h4>
<p>
A surface, or DirectDrawSurface object, represents a linear area of display memory. A surface usually resides in the display memory of the display card, although surfaces can exist in system memory. Unless specifically instructed otherwise during the creation of the DirectDrawSurface object, DirectDraw object will put the DirectDrawSurface object wherever the best performance can be achieved given the requested capabilities. DirectDrawSurface objects can take advantage of specialized processors on display cards, not only to perform certain tasks faster, but to perform some tasks in parallel with the system CPU.</p>
<p>
Using the <a href="ddref_9ign.htm"><b>IDirectDraw2::CreateSurface</b></a> method, you can create a single surface object, <a href="glossary_0xbn.htm#_dx5_complex_surface_glos">complex surface</a>-flipping chains, or three-dimensional surfaces. The <b>CreateSurface</b> method creates the requested surface or flipping chain and retrieves a pointer to the <a href="glossary_33qr.htm#_dx5_primary_surface_glos">primary surface</a>'s <b>IDirectDrawSurface</b> interface through which the object exposes its functionality. If you want to work with a different iteration of the interface (such as <a href="ddref_8053.htm"><b>IDirectDrawSurface3</b></a>), you can query for it.</p>
<p>
The <b>IDirectDrawSurface3</b> interface enables you to indirectly access memory through blit methods, such as <a href="ddref_8nqv.htm"><b>IDirectDrawSurface3::BltFast</b></a>. The surface object can provide a device context to the display that you can use with GDI functions. Additionally, you can use <b>IDirectDrawSurface3</b> methods to directly access display memory. For example, you can use the <a href="ddref_201j.htm"><b>IDirectDrawSurface3::Lock</b></a> method to lock the display memory and retrieve the address corresponding to that surface. Addresses of display memory might point to visible frame buffer memory (primary surface) or to nonvisible buffers (off-screen or <a href="glossary_938z.htm#_dx5_overlay_surface_glos">overlay surfaces</a>). Nonvisible buffers usually reside in display memory, but can be created in system memory if required by hardware limitations or if DirectDraw is performing software emulation. In addition, the <b>IDirectDrawSurface3</b> interface extends other methods that you can use to set or retrieve palettes, or to work with specific types or surfaces, like flipping chains or overlays.</p>
<p>
From this illustration, you can see that all surface are created by a DirectDraw object and are often used closely with palettes. Although each surface object can be assigned a palette, palettes aren't required for anything but primary surfaces that use pixel formats of 8-bits in depth or less.</p>
<p>
<b><img src="images/palsurfs.gif" border=0></b></p>
<p>&nbsp;</p></body>
</HTML>
