<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DDVIDEOPORTCONNECT</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_dx5_ddvideoportconnect_ddraw"></a>DDVIDEOPORTCONNECT</h1>
<p>
The DDVIDEOPORTCONNECT structure describes a video port connection. This structure is used with the <a href="ddref_53xz.htm"><b>IDDVideoPortContainer::GetVideoPortConnectInfo</b></a> method.</p>
<pre><code>typedef struct _DDVIDEOPORTCONNECT{ 
    DWORD dwSize;           // Size of the DDVIDEOPORTCONNECT structure
    DWORD dwPortWidth;      // Width of the video port
    GUID  guidTypeID;       // Description of video port connection
    DWORD dwFlags;          // Connection flags
    DWORD dwReserved1;      // Reserved, set to zero.
} DDVIDEOPORTCONNECT,*LPDDVIDEOPORTCONNECT; 
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>dwSize</b></dt>
<dd>
Size of the structure, in bytes. This member must be initialized before use.</dd>
<dt>
<b>dwPortWidth</b></dt>
<dd>
Width of the video port. This value represents the number of physical pins on the video port, not the <a href="glossary_1777.htm#_dx5_width_glos">width</a> of a surface in memory. This member must always be set, even when the value in the <b>guidTypeID</b> member assumes a certain size.</dd>
<dt>
<b>guidTypeID</b></dt>
<dd>
A GUID that describes the sync characteristics of the video port. The following port types are predefined: 
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=45%>DDVPTYPE_E_HREFH_VREFH </td>
<td width=55%>External syncs where HREF is active high and VREF is active high. </td>
</tr>
<tr valign=top>
<td width=45%>DDVPTYPE_E_HREFH_VREFL </td>
<td width=55%>External syncs where HREF is active high and VREF is active low. </td>
</tr>
<tr valign=top>
<td width=45%>DDVPTYPE_E_HREFL_VREFH </td>
<td width=55%>External syncs where HREF is active low and VREF is active high. </td>
</tr>
<tr valign=top>
<td width=45%>DDVPTYPE_E_HREFL_VREFL </td>
<td width=55%>External syncs where HREF is active low and VREF is active low. </td>
</tr>
<tr valign=top>
<td width=45%>DDVPTYPE_CCIR656 </td>
<td width=55%>Sync information is embedded in the data stream according to the CCIR656 spec. </td>
</tr>
<tr valign=top>
<td width=45%>DDVPTYPE_BROOKTREE </td>
<td width=55%>Sync information is embedded in the data stream using the Brooktree definition. </td>
</tr>
<tr valign=top>
<td width=45%>DDVPTYPE_PHILIPS </td>
<td width=55%>Sync information is embedded in the data stream using the Philips definition. </td>
</tr>
</table><br>

</dd>
<dt>
<b>dwFlags</b></dt>
<dd>
Flags describing the capabilities of the video-port connection. This member can be set by DirectDraw when connection information is being retrieved or by the client when connection information is being set. This member can be a combination of the following flags.
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=55%>DDVPCONNECT_DOUBLECLOCK </td>
<td width=45%>Indicates that the video port either supports double-clocking data or should double-clock data. This flag is only valid with an external sync.</td>
</tr>
<tr valign=top>
<td width=55%>DDVPCONNECT_VACT </td>
<td width=45%>Indicates that the video port either supports using an external VACT signal or should use the external VACT signal. This flag is only valid with an external sync. </td>
</tr>
<tr valign=top>
<td width=55%>DDVPCONNECT_INVERTPOLARITY </td>
<td width=45%>Indicates that the video port is capable of inverting the field polarities or is to invert <a href="glossary_2ysz.htm#_dx5_field_glos">field</a> polarities. <p>
When a video port inverts field polarities, it treats even fields as odd fields and vice versa. </p>
</td>
</tr>
<tr valign=top>
<td width=55%>DDVPCONNECT_DISCARDSVREFDATA </td>
<td width=45%>The video port discards any data written during the VREF period, causing it to not be written to the frame buffer. This flag is read-only. </td>
</tr>
<tr valign=top>
<td width=55%>DDVPCONNECT_HALFLINE </td>
<td width=45%>The video port will write half lines into the frame buffer, sometimes causing the data to be displayed incorrectly. This flag is read-only.</td>
</tr>
<tr valign=top>
<td width=55%>DDVPCONNECT_INTERLACED </td>
<td width=45%>Indicates that the signal is interlaced. This flag is only used by the client when creating a video port object.</td>
</tr>
<tr valign=top>
<td width=55%>DDVPCONNECT_SHAREEVEN </td>
<td width=45%>The physical video port is shareable, and that this video port object will use the even fields. This flag is only used by the client when creating the video port object. </td>
</tr>
<tr valign=top>
<td width=55%>DDVPCONNECT_SHAREODD </td>
<td width=45%>The physical video port is shareable, and that this video port object will use the odd fields. This flag is only used by the client when creating the video port object.</td>
</tr>
</table><br>

</dd>
<dt>
<b>dwReserved1</b></dt>
<dd>
Reserved; set to zero.</dd>
</dl>
<h4>Remarks</h4>
<p>
This structure is used independently and as a member of the <a href="ddref_7v3r.htm"><b>DDVIDEOPORTDESC</b></a> structure.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later. Available as a redistributable for Windows 95.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in dvp.h.</p>
<p>&nbsp;</p></body>
</HTML>
