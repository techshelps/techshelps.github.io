<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Triple Buffering</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_dx5_triple_buffering_ddraw"></a>Triple Buffering</h3>
<p>
In some cases, that is, when the display adapter has enough memory, it may be possible to speed up the process of displaying your application by using triple buffering. Triple buffering uses one <a href="glossary_33qr.htm#_dx5_primary_surface_glos">primary surface</a> and two <a href="glossary_6wtv.htm#_dx5_back_buffer_glos">back buffers</a>. The following example shows how to initialize a triple-buffering scheme:</p>
<pre><code>// The lpDDSPrimary, lpDDSMiddle, and lpDDSBack are globally
// declared, uninitialized LPDIRECTDRAWSURFACE variables.

DDSURFACEDESC ddsd;
ZeroMemory (&amp;ddsd, sizeof(ddsd));

// Create the primary surface with two back buffers. 
ddsd.dwSize = sizeof(ddsd); 
ddsd.dwFlags = DDSD_CAPS | DDSD_BACKBUFFERCOUNT; 
ddsd.ddsCaps.dwCaps = DDSCAPS_PRIMARYSURFACE | 
    DDSCAPS_FLIP | DDSCAPS_COMPLEX; 
ddsd.dwBackBufferCount = 2; 
ddrval = lpDD-&gt;CreateSurface(&amp;ddsd, &amp;lpDDSPrimary, NULL); 

// If we successfully created the flipping chain, 
// retrieve pointers to the surfaces we need for 
// flipping and blitting.
if(ddrval == DD_OK) 
{ 
    // Get the surface directly attached to the primary (the back buffer). 
    ddsd.ddsCaps.dwCaps = DDSCAPS_BACKBUFFER; 
    ddrval = lpDDSPrimary-&gt;GetAttachedSurface(&amp;ddsd.ddsCaps, 
        &amp;lpDDSMiddle); 
    if(ddrval != DD_OK) ;
        // Display an error message here. 
} 
 </code></pre>
<p>
You do not need to keep track of all surfaces in a triple buffered flipping chain. The only surfaces you must keep pointers to are the primary surface and the back-buffer surface. You need a pointer to the primary surface in order to flip the surfaces in the flipping chain, and you need a pointer to the back buffer for blitting. For more information, see <a href="ddoverv_45vb.htm">Flipping Surfaces</a>.</p>
<p>
Triple buffering allows your application to continue blitting to the <a href="glossary_6wtv.htm#_dx5_back_buffer_glos">back buffer</a> even if a flip has not completed and the back buffer's blit has already finished. Performing a flip is not a synchronous event; one flip can take longer than another. Therefore, if your application uses only one back buffer, it may spend some time idling while waiting for the <a href="ddref_6v93.htm"><b>IDirectDrawSurface3::Flip</b></a> method to return with DD_OK.</p>
<p>&nbsp;</p></body>
</HTML>
