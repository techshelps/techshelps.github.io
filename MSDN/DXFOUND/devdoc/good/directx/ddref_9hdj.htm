<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IDirectDraw2::GetAvailableVidMem</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_dx5_idirectdraw2_getavailablevidmem_ddraw"></a>IDirectDraw2::GetAvailableVidMem</h1>
<p>
The <b>IDirectDraw2::GetAvailableVidMem</b> method retrieves the total amount of display memory available and the amount of display memory currently free for a given type of surface.</p>
<pre><code><b>HRESULT GetAvailableVidMem(
  LPDDSCAPS</b><i> lpDDSCaps</i><b>,  </b>
<b>  LPDWORD</b><i> lpdwTotal</i><b>,    </b>
<b>  LPDWORD</b><i> lpdwFree      </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpDDSCaps</i></dt>
<dd>
Address of a <a href="ddref_7mlz.htm"><b>DDSCAPS</b></a> structure that indicates the hardware capabilities of the proposed surface.</dd>
<dt>
<i>lpdwTotal</i></dt>
<dd>
Address of a variable that will be filled with the total amount of display memory available.</dd>
<dt>
<i>lpdwFree</i></dt>
<dd>
Address of a variable that will be filled with the amount of display memory currently free that can be allocated for a surface that matches the capabilities specified by the structure at <i>lpDDSCaps</i>.
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the method succeeds, the return value is DD_OK.</p>
<p>
If the method fails, the return value may be one of the following error values: </p>
<table cellspacing=4 cols=1>
<tr valign=top>
<td width=100%><a href="ddref_71rr.htm#_dx5_dderr_invalidcaps_ddraw">DDERR_INVALIDCAPS</a> </td>
</tr>
<tr valign=top>
<td width=100%><a href="ddref_71rr.htm#_dx5_dderr_invalidobject_ddraw">DDERR_INVALIDOBJECT</a> </td>
</tr>
<tr valign=top>
<td width=100%><a href="ddref_71rr.htm#_dx5_dderr_invalidparams_ddraw">DDERR_INVALIDPARAMS</a> </td>
</tr>
<tr valign=top>
<td width=100%><a href="ddref_71rr.htm#_dx5_dderr_nodirectdrawhw_ddraw">DDERR_NODIRECTDRAWHW</a> </td>
</tr>
</table><br>
<p>
If NULL is passed to either <i>lpdwTotal</i> or <i>lpdwFree</i>, the value for that parameter is not returned.</p>
<h4>Remarks</h4>
<p>
The following C++ example demonstrates using <b>IDirectDraw2::GetAvailableVidMem</b> to determine both the total and free display memory available for texture-map surfaces:</p>
<pre><code>
LPDIRECTDRAW2 lpDD2; 
DDSCAPS       ddsCaps; 
DWORD         dwTotal; 
DWORD         dwFree; 
 
ddres = lpDD-&gt;QueryInterface(IID_IDirectDraw2, &amp;lpDD2); 
if (FAILED(ddres)) 
. 
. 
. 
ddsCaps.dwCaps = DDSCAPS_TEXTURE; 
ddres = lpDD2-&gt;GetAvailableVidMem(&amp;ddsCaps, &amp;dwTotal, &amp;dwFree); 
if (FAILED(ddres)) 
. 
. 
. 
 </code></pre>
<p>
This method provides only a snapshot of the current display-memory state. The amount of free display memory is subject to change as surfaces are created and released. Therefore, you should use the free memory value only as an approximation. In addition, a particular display adapter card may make no distinction between two different memory types. For example, the adapter might use the same portion of display memory to store z-buffers and textures. So, allocating one type of surface (for example, a z-buffer) can affect the amount of display memory available for another type of surface (for example, textures). Therefore, it is best to first allocate an application's fixed resources (such as front and <a href="glossary_6wtv.htm#_dx5_back_buffer_glos">back buffers </a>, and z-buffers) before determining how much memory is available for dynamic use (such as <a href="glossary_95pv.htm#_dx5_texture_mapping_glos">texture mapping</a>).</p>
<p>
This method was not implemented in the <b>IDirectDraw</b> interface.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 4.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later. Available as a redistributable for Windows 95.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in ddraw.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use ddraw.lib.</p>
<p>&nbsp;</p></body>
</HTML>
