<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Function Prototypes</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_dx5_function_prototypes_d3d"></a>Function Prototypes</h3>
<pre><code>static void           ReportError(HWND hwnd, int nMessage, 
                                  HRESULT hRes); 
static void           FatalError(HWND hwnd, int nMessage, HRESULT hRes); 
 
static DWORD          BitDepthToFlags(DWORD dwBitDepth); 
static DWORD          FlagsToBitDepth(DWORD dwFlags); 
 
static void           SetPerspectiveProjection(LPD3DMATRIX lpd3dMatrix, 
                                             double      dHalfHeight, 
                                             double      dFrontClipping, 
                                             double      dBackClipping); 
static void           SetRotationAboutY(LPD3DMATRIX lpd3dMatrix, 
                                        double      dAngleOfRotation); 
 
static HRESULT        CreateDirect3D(HWND hwnd); 
static HRESULT        ReleaseDirect3D(void); 
 
static HRESULT        CreatePrimary(HWND hwnd); 
static HRESULT        RestorePrimary(void); 
static HRESULT        ReleasePrimary(void); 
 
static HRESULT WINAPI EnumDeviceCallback(LPGUID       lpGUID, 
                                      LPSTR           lpszDeviceDesc, 
                                      LPSTR           lpszDeviceName, 
                                      LPD3DDEVICEDESC lpd3dHWDeviceDesc, 
                                      LPD3DDEVICEDESC lpd3dSWDeviceDesc, 
                                      LPVOID          lpUserArg); 
static HRESULT        ChooseDevice(void); 
 
static HRESULT        CreateDevice(DWORD dwWidth, DWORD dwHeight); 
static HRESULT        RestoreDevice(void); 
static HRESULT        ReleaseDevice(void); 
 
static LRESULT        RestoreSurfaces(void); 
 
static HRESULT        FillExecuteBuffer(void); 
static HRESULT        CreateScene(void); 
static HRESULT        ReleaseScene(void); 
static HRESULT        AnimateScene(void); 
 
static HRESULT        UpdateViewport(void); 
 
static HRESULT        RenderScene(void); 
static HRESULT        DoFrame(void); 
static void           PaintSuspended(HWND hwnd, HDC hdc); 
 
static LRESULT        OnMove(HWND hwnd, int x, int y); 
static LRESULT        OnSize(HWND hwnd, int w, int h); 
static LRESULT        OnPaint(HWND hwnd, HDC hdc, LPPAINTSTRUCT lpps); 
static LRESULT        OnIdle(HWND hwnd); 
 
LRESULT CALLBACK      WndProc(HWND hwnd, UINT msg, 
                              WPARAM wParam, LPARAM lParam); 
int PASCAL            WinMain(HINSTANCE hInstance, 
                              HINSTANCE hPrevInstance, 
                              LPSTR lpszCommandLine, int cmdShow); 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
