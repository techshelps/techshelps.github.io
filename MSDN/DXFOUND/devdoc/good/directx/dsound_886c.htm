<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DSBCAPS</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_dx5_dsbcaps_dsound"></a>DSBCAPS</h1>
<p>
The <b>DSBCAPS</b> structure specifies the capabilities of a DirectSound buffer object, for use by the <a href="dsound_43xg.htm"><b>IDirectSoundBuffer::GetCaps</b></a> method.</p>
<pre><code>typedef struct { 
    DWORD dwSize; 
    DWORD dwFlags; 
    DWORD dwBufferBytes; 
    DWORD dwUnlockTransferRate; 
    DWORD dwPlayCpuOverhead; 
} DSBCAPS, *LPDSBCAPS; 
 
typedef const DSBCAPS *LPCDSBCAPS;
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>dwSize</b></dt>
</dl>
<p>
Size of the structure, in bytes. This member must be initialized before the structure is used.
<dl>
<dt>
<b>dwFlags</b></dt>
<dd>
Flags that specify buffer-object capabilities. 
<table cellspacing=4 cols=2>
<tr valign=top>
<td colspan=2 width=100%>DSBCAPS_CTRL3D </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>The buffer is either a primary buffer or a secondary buffer that uses 3-D control. To create a primary buffer, the <b>dwFlags</b> member of the <a href="dsound_1010.htm"><b>DSBUFFERDESC</b></a> structure should include the <b>DSBCAPS_PRIMARYBUFFER</b> flag.</td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DSBCAPS_CTRLFREQUENCY </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>The buffer must have frequency control capability. </td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DSBCAPS_CTRLPAN </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>The buffer must have pan control capability. </td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DSBCAPS_CTRLVOLUME </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>The buffer must have volume control capability. </td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DSBCAPS_GETCURRENTPOSITION2 </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>Indicates that <a href="dsound_6stg.htm"><b>IDirectSoundBuffer::GetCurrentPosition</b></a> should use the new behavior of the play cursor. In DirectSound in DirectX 1, the play cursor was significantly ahead of the actual playing sound on emulated sound cards; it was directly behind the write cursor. Now, if the DSBCAPS_GETCURRENTPOSITION2 flag is specified, the application can get a more accurate play position. If this flag is not specified, the old behavior is preserved for compatibility. Note that this flag affects only emulated sound cards; if a DirectSound driver is present, the play cursor is accurate for DirectSound in all versions of DirectX. </td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DSBCAPS_GLOBALFOCUS </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>The buffer is a global <a href="glossary_5583.htm#_dx5_sound_buffer_glos">sound buffer</a>. With this flag set, an application using DirectSound can continue to play its buffers if the user switches focus to another application, even if the new application uses DirectSound. The one exception is if you switch focus to a DirectSound application that uses the DSSCL_EXCLUSIVE or DSSCL_WRITEPRIMARY flag for its cooperative level. In this case, the global sounds from other applications will not be audible. </td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DSBCAPS_LOCHARDWARE </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>The buffer is in hardware memory and uses hardware mixing. </td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DSBCAPS_LOCSOFTWARE </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>The buffer is in software memory and uses software mixing. </td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DSBCAPS_MUTE3DATMAXDISTANCE </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>The sound is reduced to silence at the maximum distance. The buffer will stop playing when the maximum distance is exceeded, so that processor time is not wasted.</td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DSBCAPS_PRIMARYBUFFER </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>Indicates that the buffer is a <a href="glossary_33qr.htm#_dx5_primary_sound_buffer_glos">primary sound buffer</a>. If this value is not specified, a <a href="glossary_5583.htm#_dx5_secondary_sound_buffer_glos">secondary sound buffer</a> will be created. </td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DSBCAPS_STATIC </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>Indicates that the buffer will be used for static sound data. Typically, these buffers are loaded once and played many times. These buffers are candidates for hardware memory. </td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DSBCAPS_STICKYFOCUS </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>Changes the focus behavior of the <a href="glossary_5583.htm#_dx5_sound_buffer_glos">sound buffer</a>. This flag can be specified in an <a href="dsound_0604.htm"><b>IDirectSound::CreateSoundBuffer</b></a> call. With this flag set, an application using DirectSound can continue to play its <a href="glossary_5583.htm#_dx5_sticky_focus_glos">sticky focus</a> buffers if the user switches to another application not using DirectSound. In this situation, the application's normal buffers are muted, but the <a href="glossary_5583.htm#_dx5_sticky_focus_glos">sticky focus</a> buffers are still audible. This is useful for nongame applications, such as movie playback (DirectShow™), when the user wants to hear the soundtrack while typing in Microsoft Word or Microsoft Excel, for example. However, if the user switches to another DirectSound application, all <a href="glossary_5583.htm#_dx5_sound_buffer_glos">sound buffers</a>, both normal and <a href="glossary_5583.htm#_dx5_sticky_focus_glos">sticky focus</a>, in the previous application are muted. </td>
</tr>
</table><br>

</dd>
<dt>
<b>dwBufferBytes</b></dt>
<dd>
Size of this buffer, in bytes.</dd>
<dt>
<b>dwUnlockTransferRate</b></dt>
<dd>
Specifies the rate, in kilobytes per second, that data is transferred to the buffer memory when <a href="dsound_0nvo.htm"><b>IDirectSoundBuffer::Unlock</b></a> is called. High-performance applications can use this value to determine the time required for <b>IDirectSoundBuffer::Unlock</b> to execute. For software buffers located in system memory, the rate will be very high because no processing is required. For hardware buffers, the rate might be slower because the buffer might have to be downloaded to the sound card, which might have a limited transfer rate.</dd>
<dt>
<b>dwPlayCpuOverhead</b></dt>
<dd>
Specifies the processing overhead as a percentage of main processing cycles needed to mix this <a href="glossary_5583.htm#_dx5_sound_buffer_glos">sound buffer</a>. For hardware buffers, this member will be 0 because the mixing is performed by the sound device. For software buffers, this member depends on the buffer format and the speed of the system processor.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>DSBCAPS</b> structure contains information similar to that found in the <a href="dsound_1010.htm"><b>DSBUFFERDESC</b></a> structure passed to the <a href="dsound_0604.htm"><b>IDirectSound::CreateSoundBuffer</b></a> method, with some additional information. Additional information includes the location of the buffer (hardware or software) and some cost measures (such as the time to download the buffer if located in hardware, and the processing overhead to play the buffer if it is mixed in software).</p>
<p>
<b>Note</b>&nbsp;&nbsp;The <b>dwFlags</b> member of the <b>DSBCAPS</b> structure contains the same flags used by the <b>DSBUFFERDESC</b> structure. The only difference is that in the <b>DSBCAPS</b> structure, either the DSBCAPS_LOCHARDWARE or DSBCAPS_LOCSOFTWARE flag will be specified, according to the location of the buffer memory. In the <b>DSBUFFERDESC</b> structure, these flags are optional and are used to force the buffer to be located in either hardware or software.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 4.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later. Available as a redistributable for Windows 95.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in dsound.h.</p>
<h4>See Also</h4>
<p>
<a href="dsound_0604.htm"><b>IDirectSound::CreateSoundBuffer</b></a>, <a href="dsound_43xg.htm"><b>IDirectSoundBuffer::GetCaps</b></a></p>
<p>&nbsp;</p></body>
</HTML>
