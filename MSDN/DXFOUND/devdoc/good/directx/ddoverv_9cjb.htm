<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Step 1: Creating the Off-Screen Surfaces</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_dx5_step_1_creating_the_off_screen_surfaces_ddraw"></a>Step 1: Creating the Off-Screen Surfaces</h3>
<p>
The following code is added to the doInit sample function in DDEX3 to create the two off-screen buffers:</p>
<pre><code>// Create an offscreen bitmap. 
ddsd.dwFlags = DDSD_CAPS | DDSD_HEIGHT | DDSD_WIDTH; 
ddsd.ddsCaps.dwCaps = DDSCAPS_OFFSCREENPLAIN; 
ddsd.dwHeight = 480; 
ddsd.dwWidth = 640; 
ddrval = lpDD-&gt;CreateSurface(&amp;ddsd, &amp;lpDDSOne, NULL); 
if(ddrval != DD_OK) 
{ 
    return initFail(hwnd); 
} 
 
// Create another offscreen bitmap. 
ddrval = lpDD-&gt;CreateSurface(&amp;ddsd, &amp;lpDDSTwo, NULL); 
if(ddrval != DD_OK) 
{ 
    return initFail(hwnd); 
} 
 </code></pre>
<p>
The <b>dwFlags</b> member specifies that the application will use the <a href="ddref_7mlz.htm"><b>DDSCAPS</b></a> structure, and it will set the height and <a href="glossary_1777.htm#_dx5_width_glos">width</a> of the buffer. The surface will be an off-screen plain buffer, as indicated by the DDSCAPS_OFFSCREEN flag set in the <b>DDSCAPS</b> structure. The height and the width are set as 480 and 640, respectively, in the <a href="ddref_8hbr.htm"><b>DDSURFACEDESC</b></a> structure. The surface is then created by using the <a href="ddref_9ign.htm"><b>IDirectDraw2::CreateSurface</b></a> method.</p>
<p>
Because both of the off-screen plain buffers are the same size, the only requirement for creating the second buffer is to call <b>IDirectDraw2::CreateSurface</b> again with a different pointer name.</p>
<p>
You can also specifically request that the off-screen buffer be placed in system memory or display memory by setting either the DDSCAPS_SYSTEMMEMORY or DDSCAPS_VIDEOMEMORY capability in the <b>DDSCAPS</b> structure. By saving the bitmaps in display memory, you can increase the speed of the transfers between the <a href="glossary_938z.htm#_dx5_off_screen_surface_glos">off-screen surfaces</a> and the <a href="glossary_6wtv.htm#_dx5_back_buffer_glos">back buffer</a>. This will become more important when using bitmap animation. However, if you specify DDSCAPS_VIDEOMEMORY for the off-screen buffer and not enough display memory is available to hold the entire bitmap, a <a href="ddref_71rr.htm#_dx5_dderr_outofvideomemory_ddraw">DDERR_OUTOFVIDEOMEMORY</a> error value will be returned when you attempt to create the surface.</p>
<p>&nbsp;</p></body>
</HTML>
