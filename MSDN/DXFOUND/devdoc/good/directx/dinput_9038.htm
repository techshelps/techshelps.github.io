<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Step 3: Setting the Joystick Data Format</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_dx5_step_3_setting_the_joystick_data_format_dinput"></a>Step 3: Setting the Joystick Data Format</h3>
<p>
Now that the application has a pointer to a DirectInput device, it can call the <a href="dinput_2mus.htm"><b>IDirectInputDevice</b></a> methods to manipulate that device. The first step, which is an essential one, is to set the data format for the joystick. This step tells DirectInput how to format the input data.</p>
<p>
The Space Donuts sample performs this action inside the callback function introduced in the previous step.</p>
<pre><code>if (pdev-&gt;lpVtbl-&gt;SetDataFormat(pdev, &amp;c_dfDIJoystick) != DI_OK) 
   { 
      OutputDebugString("IDirectInputDevice::SetDataFormat FAILED\n"); 
      pdev-&gt;lpVtbl-&gt;Release(pdev); 
      return DIENUM_CONTINUE; 
   } 
 </code></pre>
<p>
The <i>pdev</i> variable is a pointer to the device interface created by <a href="dinput_4jw4.htm"><b>IDirectInput::CreateDevice</b></a>.</p>
<p>
The <a href="dinput_0q0k.htm"><b>IDirectInputDevice::SetDataFormat</b></a> method takes two parameters. The first is a this pointer to the calling instance of the interface and is unnecessary in C++. The second is a pointer to a <a href="dinput_0xtg.htm"><b>DIDATAFORMAT</b></a> structure containing information about how the data for the device is to be formatted. For the joystick, the predefined global variable <i>c_dfDIJoystick</i> can be used here.</p>
<p>
As in the previous step, the callback function returns DIENUM_CONTINUE if it fails to initialize the device. This flag instructs DirectInput to keep enumerating as long as there are devices to be enumerated.</p>
<p>&nbsp;</p></body>
</HTML>
