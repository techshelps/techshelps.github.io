<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Texture Size</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_dx5_texture_size_d3d"></a>Texture Size</h3>
<p>
Texture-mapping performance is heavily dependent on the speed of memory. There are a number of ways to maximize the cache performance of your application's textures.
<ul>
<li>
Keep the textures small; the smaller the textures are, the better chance they have of being maintained in the main CPU's secondary cache.</li>
<li>
Do not change the textures on a per-primitive basis. Try to keep polygons grouped in order of the textures they use.</li>
<li>
Use square textures whenever possible. Textures whose dimensions are 256&times;256 are the fastest. If your application uses four 128&times;128 textures, for example, try to ensure that they use the same palette and place them all into one 256&times;256 texture. This technique also reduces the amount of texture swapping. Of course, you should not use 256&times;256 textures unless your application requires that much texturing because, as already mentioned, textures should be kept as small as possible.</li>
</ul>
<p>&nbsp;</p></body>
</HTML>
