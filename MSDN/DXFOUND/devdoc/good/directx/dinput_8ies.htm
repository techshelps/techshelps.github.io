<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Buffered Keyboard Data</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h4><a name="_dx5_buffered_keyboard_data_dinput"></a>Buffered Keyboard Data</h4>
<p>
To retrieve buffered data from the keyboard, you must first set the buffer size (see <a href="dinput_94tw.htm">Device Properties</a>). This step is essential, because the default size of the buffer is zero. You then declare an array of <a href="dinput_5cms.htm"><b>DIDEVICEOBJECTDATA</b></a> structures with the same number of elements as the buffer size. </p>
<p>
After acquiring the keyboard device, you can examine and flush the buffer anytime by using the <a href="dinput_74ms.htm"><b>IDirectInputDevice::GetDeviceData</b></a> method. (See <a href="dinput_0p4k.htm">Buffered and Immediate Data</a>.)</p>
<p>
Each element in the <b>DIDEVICEOBJECTDATA</b> array represents a change in state for a single key; that is, a press or release. Because DirectInput gets the data directly from the keyboard, any settings for character repeat in Control Panel are ignored. This means that a keystroke is only counted once, no matter how long the key is held down.</p>
<p>
You can determine which key an element in the array refers to by checking the <b>dwOfs</b> member of the <b>DIDEVICEOBJECTDATA</b> structure against the DirectInput <a href="dinput_56t1.htm">Keyboard Device Constants</a>. (See also <a href="dinput_8v1w.htm">Interpreting Keyboard Data</a>.)</p>
<p>
The data for the change of state of the key is located in the <b>dwData</b> member of the <b>DIDEVICEOBJECTDATA</b> structure. Only the low byte of <b>dwData</b> is significant; the high bit of this byte is set if the key was pressed and clear if it was released. In other words, the key was pressed if (<b>dwData</b> &amp; 0x80) is non-zero.</p>
<p>&nbsp;</p></body>
</HTML>
