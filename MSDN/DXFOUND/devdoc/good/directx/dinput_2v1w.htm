<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Step 3: Setting the Mouse Behavior</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_dx5_step_3_setting_the_mouse_behavior_dinput"></a>Step 3: Setting the Mouse Behavior</h3>
<p>
Before it can gain access to the mouse, your application must set the mouse device's behavior using the <a href="dinput_9c1g.htm"><b>IDirectInputDevice::SetCooperativeLevel</b></a> method. This method accepts the handle to the window to be associated with the device. In Scrawl, the DISCL_EXCLUSIVE flag is included to ensure that this application is the only one that can have exclusive access to the device. This flag is combined with DISCL_FOREGROUND because Scrawl is not interested in what the mouse is doing when another application is in the foreground.</p>
<p>
The following code from Scrawl.cpp attempts to set the device's cooperative level. If this attempt fails, an error message is displayed and FALSE is returned.</p>
<pre><code>hr = g_pMouse-&gt;SetCooperativeLevel(hwnd,
               DISCL_EXCLUSIVE | DISCL_FOREGROUND);
 
if (FAILED(hr)) {
    Complain(hwnd, hr, "SetCooperativeLevel(SysMouse)");
    return FALSE;
}
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
