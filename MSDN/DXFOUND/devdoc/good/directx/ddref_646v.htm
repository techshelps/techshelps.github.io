<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DDVIDEOPORTINFO</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_dx5_ddvideoportinfo_ddraw"></a>DDVIDEOPORTINFO</h1>
<p>
The DDVIDEOPORTINFO structure describes the transfer of video data to a surface. This structure is used with the <a href="ddref_6uyf.htm"><b>IDirectDrawVideoPort::StartVideo</b></a> method.</p>
<pre><code>typedef struct _DDVIDEOPORTINFO{ 
    DWORD dwSize;            // Size of the structure.
    DWORD dwOriginX;         // Placement of the video data within the surface.
    DWORD dwOriginY;         // Placement of the video data within the surface.
    DWORD dwVPFlags;         // Video port options.
    RECT rCrop;              // Cropping rectangle (optional).
    DWORD dwPrescaleWidth;   // Pre-scaling/zooming in the X direction (optional).
    DWORD dwPrescaleHeight;  // Pre-scaling/zooming in the Y direction (optional).
    LPDDPIXELFORMAT lpddpfInputFormat;     // Video format written to the video port.
    LPDDPIXELFORMAT lpddpfVBIInputFormat;  // Input format of the VBI data.
    LPDDPIXELFORMAT lpddpfVBIOutputFormat; // Output format of the data.
    DWORD dwVBIHeight;        // Lines of data within the vertical blanking interval.
    DWORD dwReserved1;        // Reserved for future use - set to zero.
    DWORD dwReserved2;        // Reserved for future use - set to zero.
} DDVIDEOPORTINFO,*LPDDVIDEOPORTINFO; 
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>dwSize</b></dt>
<dd>
Size of this structure, in bytes. This member must be initialized before use.</dd>
<dt>
<b>dwOriginX </b>and<b> dwOriginY</b></dt>
<dd>
X and y coordinates for the origin of the video data in the surface.</dd>
<dt>
<b>dwVPFlags</b></dt>
<dd>
Video port options. 
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=44%>DDVP_AUTOFLIP </td>
<td width=56%>Perform automatic flipping. For more information, see <a href="ddoverv_116f.htm">Auto-flipping</a>.</td>
</tr>
<tr valign=top>
<td width=44%>DDVP_CONVERT </td>
<td width=56%>Perform conversion using the information in the <b>ddpfOutputFormat</b> member. </td>
</tr>
<tr valign=top>
<td width=44%>DDVP_CROP </td>
<td width=56%>Perform cropping using the rectangle specified by the <b>rCrop</b> member. </td>
</tr>
<tr valign=top>
<td width=44%>DDVP_IGNOREVBIXCROP </td>
<td width=56%>The video port should ignore left and right cropping coordinates when cropping oversampled VBI data. </td>
</tr>
<tr valign=top>
<td width=44%>DDVP_INTERLEAVE </td>
<td width=56%>Interlaced fields should be interleaved in memory.</td>
</tr>
<tr valign=top>
<td width=44%>DDVP_MIRRORLEFTRIGHT </td>
<td width=56%>Mirror image data from left to right as it is written into the frame buffer. </td>
</tr>
<tr valign=top>
<td width=44%>DDVP_MIRRORUPDOWN </td>
<td width=56%>Mirror image data from top to bottom as it is written into the frame buffer. </td>
</tr>
<tr valign=top>
<td width=44%>DDVP_OVERRIDEBOBWEAVE </td>
<td width=56%>Override automatic display method chosen by the driver, using only the display method set by the caller when creating the overlay surface. </td>
</tr>
<tr valign=top>
<td width=44%>DDVP_PRESCALE </td>
<td width=56%>Perform pre-scaling or pre-zooming based on the values in the <b>dwPrescaleHeight</b> and <b>dwPrescaleWidth</b> members. </td>
</tr>
<tr valign=top>
<td width=44%>DDVP_SKIPEVENFIELDS </td>
<td width=56%>Ignore input of <a href="glossary_8yb7.htm#_dx5_even_field_glos">even fields</a>. </td>
</tr>
<tr valign=top>
<td width=44%>DDVP_SKIPODDFIELDS </td>
<td width=56%>Ignore input of <a href="glossary_938z.htm#_dx5_odd_field_glos">odd fields</a>. </td>
</tr>
<tr valign=top>
<td width=44%>DDVP_SYNCMASTER </td>
<td width=56%>Indicates that the video port VREF should drive the graphics VREF, locking the refresh rate to the video port. </td>
</tr>
<tr valign=top>
<td width=44%>DDVP_VBICONVERT </td>
<td width=56%>The <b>ddpfVBIOutputFormat</b> member contains data that should be used to convert <a href="glossary_76pf.htm#_dx5_vbi_glos">VBI</a> data. </td>
</tr>
<tr valign=top>
<td width=44%>DDVP_VBINOSCALE </td>
<td width=56%>VBI data should not be scaled. </td>
</tr>
<tr valign=top>
<td width=44%>DDVP_VBINOINTERLEAVE </td>
<td width=56%>Interleaving can be disabled for data within the VBI. </td>
</tr>
</table><br>

</dd>
<dt>
<b>rCrop</b></dt>
<dd>
Cropping rectangle. This member is optional.</dd>
<dt>
<b>dwPrescaleWidth</b></dt>
<dd>
Pre-scaling or zooming in the x direction. This member is optional.</dd>
<dt>
<b>dwPrescaleHeight</b></dt>
<dd>
Pre-scaling or zooming in the y direction. This member is optional.</dd>
<dt>
<b>lpddpfInputFormat</b></dt>
<dd>
A <a href="ddref_5ulz.htm"><b>DDPIXELFORMAT</b></a> structure describing the pixel format to be written to the video port. This will often be identical to the surface's pixel format, but can differ if the video port is to perform conversion.</dd>
<dt>
<b>lpddpfVBIInputFormat</b> and <b>lpddpfVBIOutputFormat</b></dt>
<dd>
<b>DDPIXELFORMAT</b> structures describing the input and output pixel formats of the data within the vertical blanking interval.</dd>
<dt>
<b>dwVBIHeight</b></dt>
<dd>
The amount of data within the vertical blanking interval, in scan lines.</dd>
<dt>
<b>dwReserved1</b> and <b>dwReserved2</b></dt>
<dd>
Reserved; set to zero.</dd>
</dl>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later. Available as a redistributable for Windows 95.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in dvp.h.</p>
<p>&nbsp;</p></body>
</HTML>
