<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Enumeration of Sound Devices</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_dx5_enumeration_of_sound_devices_dsound"></a>Enumeration of Sound Devices</h3>
<p>
For an application that is simply going to play sounds through the user's preferred playback device, you need not enumerate the available devices. When you create the DirectSound object with NULL as the device identifier, the interface will automatically be associated with the default device if one is present. If no device driver is present, the call to the <a href="dsound_86ec.htm"><b>DirectSoundCreate</b></a> function will fail.</p>
<p>
However, if you are looking for a particular kind of device or need to work with two or more devices, you must get DirectSound to enumerate the devices available on the system. </p>
<p>
Enumeration serves three purposes:
<ul>
<li>
Reports what hardware is available</li>
<li>
Supplies a GUID for each device</li>
<li>
Allows you to initialize DirectSound for each device as it is enumerated</li>
</ul>
<p>
To enumerate devices you must first set up a callback function that will be called each time DirectSound finds a device. You can do anything you want within this function, and you can give it any name, but you must declare it in the same form as <a href="dsound_66ec.htm"><b>DSEnumCallback</b></a>, a prototype in this documentation. The callback function must return TRUE if enumeration is to continue, or FALSE otherwise (for instance, after finding a device with the capabilities you need).</p>
<p>
If you are working with more than one device—for example, a capture and a playback device—the callback function is a good place to create and initialize the DirectSound object for each device.</p>
<p>
The following example, extracted from Dsenum.c in the Dsshow sample, enumerates the available devices and adds information about each to a list in a combo box. Here is the callback function in its entirety:</p>
<pre><code>BOOL CALLBACK DSEnumProc(LPGUID lpGUID, 
                         LPCTSTR lpszDesc,
                         LPCTSTR lpszDrvName, 
                         LPVOID lpContext )
    {
    HWND   hCombo = *(HWND *)lpContext;
    LPGUID lpTemp = NULL;
 
    if( lpGUID != NULL )
        {
        if(( lpTemp = LocalAlloc( LPTR, sizeof(GUID))) == NULL )
        return( TRUE );
 
        memcpy( lpTemp, lpGUID, sizeof(GUID));
    }
 
    ComboBox_AddString( hCombo, lpszDesc );
    ComboBox_SetItemData( hCombo,
                ComboBox_FindString( hCombo, 0, lpszDesc ),
                lpTemp );
    return( TRUE );
    }
 </code></pre>
<p>
The enumeration is set in motion when the dialog containing the combo box is initialized: </p>
<pre><code>if (DirectSoundEnumerate((LPDSENUMCALLBACK)DSEnumProc, &amp;hCombo)
    != DS_OK )
    {
    EndDialog( hDlg, TRUE );
    return( TRUE );
    }
 </code></pre>
<p>
Note that the address of the handle to the combo box is passed into <b>DirectSoundEnumerate</b>, which in turn passes it to the callback function. This parameter can be any 32-bit value that you want to have access to within the callback.</p>
<p>&nbsp;</p></body>
</HTML>
