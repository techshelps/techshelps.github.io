<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Step 2: Determining the Application's Behavior</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_dx5_step_2_determining_the_application_s_behavior_ddraw"></a>Step 2: Determining the Application's Behavior</h3>
<p>
Before you can change the resolution of your display, you must at a minimum specify the DDSCL_EXCLUSIVE and DDSCL_FULLSCREEN flags in the <i>dwFlags</i> parameter of the <a href="ddref_3z5j.htm"><b>IDirectDraw2::SetCooperativeLevel</b></a> method. This gives your application complete control over the display device, and no other application will be able to share it. In addition, the DDSCL_FULLSCREEN flag sets the application in exclusive (full-screen) mode. Your application covers the entire desktop, and only your application can write to the screen. The desktop is still available, however. (To see the desktop in an application running in exclusive mode, start DDEX1 and press <small>alt</small> + <small>tab</small>.)</p>
<p>
The following example demonstrates the use of the <b>IDirectDraw2::SetCooperativeLevel</b> method:</p>
<pre><code>HRESULT      ddrval; 
LPDIRECTDRAW lpDD;     // Already created by DirectDrawCreate 
 
ddrval = lpDD-&gt;SetCooperativeLevel(hwnd, DDSCL_EXCLUSIVE | 
    DDSCL_FULLSCREEN); 
if(ddrval == DD_OK) 
{ 
    // Exclusive mode was successful. 
} 
else 
{ 
    // Exclusive mode was not successful. 
    // The application can still run, however. 
} 
 </code></pre>
<p>
If <b>IDirectDraw2::SetCooperativeLevel</b> does not return DD_OK, you can still run your application. The application will not be in exclusive mode, however, and it might not be capable of the performance your application requires. In this case, you might want to display a message that allows the user to decide whether or not to continue.</p>
<p>
One requirement for using <b>IDirectDraw2::SetCooperativeLevel</b> is that you must pass a handle of a window (<b>HWND</b>) to allow Windows to determine if your application terminates abnormally. For example, if a general protection (GP) fault occurs and GDI is flipped to the <a href="glossary_6wtv.htm#_dx5_back_buffer_glos">back buffer</a>, the user will not be able to return to the Windows screen. To prevent this from occurring, DirectDraw provides a process running in the background that traps messages that are sent to that window. DirectDraw uses these messages to determine when the application terminates. This feature imposes some restrictions, however. You have to specify the window handle that is retrieving messages for your application—that is, if you create another window, you must ensure that you specify the window that is active. Otherwise, you might experience problems, including unpredictable behavior from GDI, or no response when you press <small>alt</small>+<small>tab</small>.</p>
<p>&nbsp;</p></body>
</HTML>
