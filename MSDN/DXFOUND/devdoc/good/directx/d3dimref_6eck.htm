<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>D3DMATRIX</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_dx5_d3dmatrix_d3d"></a>D3DMATRIX</h1>
<p>
The <b>D3DMATRIX</b> structure describes a matrix for such methods as <a href="d3dimref_97hg.htm"><b>IDirect3DDevice::GetMatrix</b></a> and <a href="d3dimref_3yqs.htm"><b>IDirect3DDevice::SetMatrix</b></a>.</p>
<p>
C++ programmers can use an extended version of this structure that includes a parentheses ("()") operator. For more information, see <a href="d3dimref_32xw.htm"><b>D3DMATRIX (D3D_OVERLOADS)</b></a></p>
<pre><code>typedef struct _D3DMATRIX { 
    D3DVALUE _11, _12, _13, _14; 
    D3DVALUE _21, _22, _23, _24; 
    D3DVALUE _31, _32, _33, _34; 
    D3DVALUE _41, _42, _43, _44; 
} D3DMATRIX, *LPD3DMATRIX; 
 </code></pre>
<h4>Remarks</h4>
<p>
In Direct3D, the _34 element of a projection matrix cannot be a negative number. If your application needs to use a negative value in this location, it should scale the entire projection matrix by -1, instead.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 4.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later. Available as a redistributable for Windows 95.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in d3dtypes.h.</p>
<h4>See Also</h4>
<p>
<a href="d3dimref_97hg.htm"><b>IDirect3DDevice::GetMatrix</b></a>, <a href="d3dimref_3yqs.htm"><b>IDirect3DDevice::SetMatrix</b></a></p>
<p>&nbsp;</p></body>
</HTML>
