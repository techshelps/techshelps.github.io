<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating the Setup Program</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_dx5_creating_the_setup_program_dsetup"></a>Creating the Setup Program</h3>
<p>
The DirectX Programmer's Reference includes an example setup program that you can use as a model for your application's setup program. The setup program is called Dinstall, and it is located in the \Dxsdk\Sdk\Samples\Setup directory. It installs a sample DirectX application called Rockem. It also demonstrates one way to configure the <a href="dsetup_9vao.htm"><b>DirectXSetup</b></a> function.</p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To adapt the Dinstall.c program to your needs</h5>
<ol>
<li>
In an editor, open Dinstall.c.</li>
<li>
Search for the text "copy_list".</li>
<li>
Edit the list of files in this structure to contain the names of the files you want copied to the user's computer during installation.</li>
<li>
If necessary, modify Dinstall.c so that it installs files in subdirectories on the user's hard disk. Currently, Dinstall.c installs files only in the default directory. </li>
<li>
Search for two locations in Dinstall.c that contain the text "IDS_DISK_MSG".</li>
<li>
Add some code that checks whether there is enough free hard disk space to install your application on the user's computer. Dinstall.c does not currently check this.</li>
</ol>
<p>
The <i>lpszRootPath</i> parameter of <a href="dsetup_9vao.htm"><b>DirectXSetup</b></a> specifies the path to the Dsetup*.dll files (Dsetup.dll, Dsetup16.dll, and Dsetup32.dll) and the Directx directory on your distribution media. These dynamic-link libraries and this directory should be located in the same directory as the Dinstall executable after it is compiled, unless there is an overwhelming reason to do otherwise. If all these files and directories are located in the same directory, the value of the <i>lpszRootPath</i> parameter should be set to NULL. This ensures that if the path changes when the files are placed on a compact disc or floppy disks from the root of the application, the <b>DirectXSetup</b> function still works properly.</p>
<p>
For example, suppose Dinstall.exe, Dsetup*.dll, and the Directx directory are located in an application directory called D:\Funstuff during the testing phase. Then, when you burn the files on a compact disc, suppose you put them in the root. If the <i>lpszRootPath</i> parameter is set to "\FUNSTUFF", the setup program (Dinstall.exe) will not function from the compact disc. However, if the <i>lpszRootPath</i> parameter is set to NULL, the setup program will function in both cases, because the path to Dsetup*.dll, and the Directx directory are still in the current directory.</p>
<p>
If you decide to place the Dsetup*.dll files and the Directx directory somewhere other than in the directory that contains Dinstall.exe, you must pass the appropriate parameters to <a href="dsetup_9vao.htm"><b>DirectXSetup</b></a> and load Dsetup.dll correctly. The <i>lpszRootPath</i> parameter of <b>DirectXSetup</b> should contain the full path to Dsetup.dll. In addition, you need to use the <b>LoadLibrary</b> and <b>GetProcAddress</b> Win32 functions in your setup program to locate Dsetup.dll.</p>
<p>
The content of the <b>Setup</b> dialog box is determined by data supplied in the Dinstall.rc resource file. </p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To display your application's name and graphics</h5>
<ol>
<li>
In an editor, open Dinstall.rc.</li>
<li>
Search for all occurrences of "Rockem" and change them to the name of your application.</li>
<li>
The graphics that are displayed in the <b>Setup</b> and <b>Reboot</b> dialog boxes are called Signon.bmp and Reboot.bmp in the resource file. Either rename your bitmap files these names, or change the names in the resource file to match the names of your bitmaps.</li>
<li>
The icon for the Dinstall executable is called Setup.ico in the resource file, and it is specified by SETUP_ICON. Either set the name of your icon file to Setup.ico, or change the name in the resource file to match the name of your icon file.</li>
<li>
If appropriate for your application, change the default directory in which your application is installed. To do this, search for "IDS_DEFAULT_GAME_DIR" (it is located in two places in the resource file) and change the path of the default directory.</li>
</ol>
<p>
After you have modified the Dinstall.c and Dinstall.rc files to fit your application's needs, compile them into the Dinstall.exe executable file. You can rename this executable file to anything you want (Setup.exe, for example).</p>
<p>&nbsp;</p></body>
</HTML>
