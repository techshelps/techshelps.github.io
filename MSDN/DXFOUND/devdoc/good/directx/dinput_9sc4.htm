<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IDirectInputDevice2::SendDeviceData</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_dx5_idirectinputdevice2_senddevicedata_dinput"></a>IDirectInputDevice2::SendDeviceData</h1>
<p>
The <b>IDirectInputDevice2::SendDeviceData</b> method sends data to a device that accepts output. The device must be in an acquired state.</p>
<pre><code><b>HRESULT SendDeviceData(
  DWORD</b> <i>cbObjectData</i>, 
  <b>LPCDIDEVICEOBJECTDATA</b> <i>rgdod</i>, 
  <b>LPDWORD</b> <i>pdwInOut</i>, 
  <b>DWORD</b> <i>fl</i>  
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>cbObjectData</i></dt>
<dd>
Size in bytes of a single <a href="dinput_5cms.htm"><b>DIDEVICEOBJECTDATA</b></a> structure.</dd>
<dt>
<i>rgdod</i></dt>
<dd>
Array of <b>DIDEVICEOBJECTDATA</b> structures containing the data to send to the device. It must consist of *<i>pdwInOut</i> elements.
<p>
The <b>dwOfs</b> field of each <b>DIDEVICEOBJECTDATA</b> structure must contain the device object identifier (as obtained from the <b>dwType</b> field of the <a href="dinput_26yc.htm"><b>DIDEVICEOBJECTINSTANCE</b></a> structure) for the device object to which the data is directed. The <b>dwTimeStamp</b> and <b>dwSequence</b> members must be zero.
</dd>
<dt>
<i>pdwInOut</i></dt>
<dd>
On entry, the variable pointed to by this parameter contains the number of elements in the array pointed to by <i>rgdod</i>. On exit, it contains the number of elements actually sent to the device.</dd>
<dt>
<i>fl</i></dt>
<dd>
Flags controlling the manner in which data is sent. This may be zero or the following value:
<table cellspacing=4 cols=2>
<tr valign=top>
<td colspan=2 width=100%>DISDD_CONTINUE</td>
</tr>
<tr valign=top>
<td width=13%></td>
<td width=87%>The device data sent will be overlaid on the previously sent device data.See Remarks.</td>
</tr>
</table><br>

</dd>
</dl>
<h4>Return Values</h4>
<p>
If the method succeeds, the return value is DI_OK.</p>
<p>
If the method fails, the return value may be one of the following error values:</p>
<table cellspacing=4 cols=1>
<tr valign=top>
<td width=100%><a href="dinput_7yk4.htm#_dx5_dierr_inputlost_dinput">DIERR_INPUTLOST</a></td>
</tr>
<tr valign=top>
<td width=100%><a href="dinput_7yk4.htm#_dx5_dierr_notacquired_dinput">DIERR_NOTACQUIRED</a></td>
</tr>
<tr valign=top>
<td width=100%><a href="dinput_7yk4.htm#_dx5_dierr_reportfull_dinput">DIERR_REPORTFULL</a></td>
</tr>
<tr valign=top>
<td width=100%><a href="dinput_7yk4.htm#_dx5_dierr_unplugged_dinput">DIERR_UNPLUGGED</a></td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
There is no guarantee that the individual data elements will be sent in a particular order. However, data sent by successive calls to <b>IDirectInputDevice2::SendDeviceData</b> will not be interleaved. Furthermore, if multiple pieces of data are sent to the same object with a single call, it is unspecified which piece of data is sent.</p>
<p>
Consider, for example, a device that can be sent data in packets, each packet describing two pieces of information, call them A and B.  Suppose the application attempts to send three data elements: B = 2, A = 1, and B = 0.</p>
<p>
The actual device will be sent a single packet. The A field of the packet will contain the value 1, and the B field of the packet will be either 2 or 0.</p>
<p>
If the data must to be sent to the device exactly as specified, then three calls to <b>IDirectInputDevice2::SendDeviceData</b> should be performed, each call sending one data element.</p>
<p>
In response to the first call, the device will be sent a packet where the A field is blank and the B field contains the value 2.</p>
<p>
In response to the second call, the device will be sent a packet where the A field contains the value 1, and the B field is blank.</p>
<p>
Finally, in response to the third call, the device will be sent a packet where the A field is blank and the B field contains the value 0.</p>
<p>
If the DISDD_CONTINUE flag is set, then the device data sent will be overlaid on the previously sent device data. Otherwise, the device data sent will start from scratch.</p>
<p>
For example, suppose a device supports two button outputs, Button0 and Button1. If an application first calls <b>IDirectInputDevice2::SendDeviceData</b> passing "Button0 pressed", then a packet of the form "Button0 pressed, Button1 not pressed" is sent to the device. If the application then makes another call, passing "Button1 pressed" and the DISDD_CONTINUE flag, then a packet of the form "Button0 pressed, Button1 pressed" is sent to the device. However, if the application had not passed the DISDD_CONTINUE flag, the packet sent to the device would have been "Button0 not pressed, Button1 pressed".</p>
<pre></pre>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later. Available as a redistributable for Windows 95.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in dinput.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use dinput.lib.</p>
<p>&nbsp;</p></body>
</HTML>
