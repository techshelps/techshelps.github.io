<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IDirect3DDevice::CreateExecuteBuffer</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_dx5_idirect3ddevice_createexecutebuffer_d3d"></a>IDirect3DDevice::CreateExecuteBuffer</h1>
<p>
The <b>IDirect3DDevice::CreateExecuteBuffer</b> method allocates an <a href="glossary_8yb7.htm#_dx5_execute_buffer_glos">execute buffer</a> for a display list.</p>
<pre><code><b>HRESULT CreateExecuteBuffer(
  LPD3DEXECUTEBUFFERDESC</b><i> lpDesc</i><b>,                       </b>
<b>  LPDIRECT3DEXECUTEBUFFER</b><i> *lplpDirect3DExecuteBuffer</i><b>,  </b>
<b>  IUnknown</b><i> *pUnkOuter                                  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpDesc</i></dt>
<dd>
Address of a <a href="d3dimref_5xgk.htm"><b>D3DEXECUTEBUFFERDESC</b></a> structure that describes the Direct3DExecuteBuffer object to be created. The call will fail if a buffer of at least the specified size cannot be created.</dd>
<dt>
<i>lplpDirect3DExecuteBuffer</i></dt>
<dd>
Address of a pointer that will be filled with the address of the new Direct3DExecuteBuffer object.</dd>
<dt>
<i>pUnkOuter</i></dt>
<dd>
This parameter is provided for future compatibility with COM aggregation features. Currently, however, this method returns an error if this parameter is anything but NULL.
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the method succeeds, the return value is D3D_OK.</p>
<p>
If the method fails, the return value may be one of the following values: </p>
<p>
<a href="ddref_71rr.htm#_dx5_dderr_invalidobject_ddraw">DDERR_INVALIDOBJECT</a> <br>
<a href="ddref_71rr.htm#_dx5_dderr_invalidparams_ddraw">DDERR_INVALIDPARAMS</a> </p>
<h4>Remarks</h4>
<p>
The display list may be read by hardware DMA into VRAM for processing. All display primitives in the buffer that have indices to vertices must also have those vertices in the same buffer.</p>
<p>
The <a href="d3dimref_5xgk.htm"><b>D3DEXECUTEBUFFERDESC</b></a> structure describes the <a href="glossary_8yb7.htm#_dx5_execute_buffer_glos">execute buffer</a> to be created. At a minimum, the application must specify the size required. If the application specifies D3DDEBCAPS_VIDEOMEMORY in the <b>dwCaps</b> member, Direct3D will attempt to keep the execute buffer in video memory.</p>
<p>
The application can use the <a href="d3dimref_8v50.htm"><b>IDirect3DExecuteBuffer::Lock</b></a> method to request that the memory be moved. When this method returns, it will adjust the contents of the <b>D3DEXECUTEBUFFERDESC</b> structure to indicate whether the data resides in system or video memory.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 4.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later. Available as a redistributable for Windows 95.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in ddraw.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use ddraw.lib.</p>
<p>&nbsp;</p></body>
</HTML>
