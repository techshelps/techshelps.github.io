<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IDirectSoundCaptureBuffer::Lock</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_dx5_idirectsoundcapturebuffer_lock_dsound"></a>IDirectSoundCaptureBuffer::Lock</h1>
<p>
The <b>IDirectSoundCaptureBuffer::Lock</b> method locks the buffer. Locking the buffer returns pointers into the buffer, allowing the application to read or write audio data into that memory.</p>
<pre><code><b>HRESULT Lock(
  DWORD</b><i> dwReadCursor</i><b>,      </b>
<b>  DWORD</b><i> dwReadBytes</i><b>,       </b>
<b>  LPVOID</b><i> *lplpvAudioPtr1</i><b>,  </b>
<b>  LPDWORD</b><i> lpdwAudioBytes1</i><b>,  </b>
<b>  LPVOID</b><i> *lplpvAudioPtr2</i><b>,  </b>
<b>  LPDWORD</b><i> lpdwAudioBytes2</i><b>,  </b>
<b>  DWORD</b><i> dwFlags            </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dwReadCursor</i></dt>
<dd>
Offset, in bytes, from the start of the buffer to where the lock begins.</dd>
<dt>
<i>dwReadBytes</i></dt>
<dd>
Size, in bytes, of the portion of the buffer to lock. Note that the sound capture buffer is conceptually circular.</dd>
<dt>
<i>lplpvAudioPtr1</i></dt>
<dd>
Address of a pointer to contain the first block of the sound capture buffer to be locked.</dd>
<dt>
<i>lpdwAudioBytes1</i></dt>
<dd>
Address of a variable to contain the number of bytes pointed to by the <i>lplpvAudioPtr1</i> parameter. If this value is less than the <i>dwReadBytes</i> parameter, <i>lplpvAudioPtr2</i> will point to a second block of data.</dd>
<dt>
<i>lplpvAudioPtr2</i></dt>
<dd>
Address of a pointer to contain the second block  of the sound capture buffer to be locked. If the value of this parameter is NULL, the <i>lplpvAudioPtr1</i> parameter points to the entire locked portion of the sound capture buffer.</dd>
<dt>
<i>lpdwAudioBytes2</i></dt>
<dd>
Address of a variable to contain the number of bytes pointed to by the <i>lplpvAudioPtr2</i> parameter. If <i>lplpvAudioPtr2</i> is NULL, this value will be 0.</dd>
<dt>
<i>dwFlags</i></dt>
<dd>
Flags modifying the lock event. This value can be NULL or the following flag:
<table cellspacing=4 cols=2>
<tr valign=top>
<td colspan=2 width=100%>DSCBLOCK_ENTIREBUFFER </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>The <i>dwReadBytes</i> parameter is to be ignored and the entire capture buffer is to be locked.</td>
</tr>
</table><br>

</dd>
</dl>
<h4>Return Values</h4>
<p>
If the method succeeds, the return value is DS_OK.</p>
<p>
If the method fails, the return value may be one of the following values:</p>
<p>
<a href="dsound_9y3p.htm#_dx5_dserr_invalidparam_dsound">DSERR_INVALIDPARAM</a><br>
<a href="dsound_9y3p.htm#_dx5_dserr_invalidcall_dsound">DSERR_INVALIDCALL</a></p>
<h4>Remarks</h4>
<p>
This method accepts an offset and a byte count, and returns two read pointers and their associated sizes. Two pointers are required because sound capture buffers are circular. If the locked bytes do not wrap around the end of the buffer, the second pointer, <i>lplpvAudioBytes2</i>, will be NULL. However, if the bytes do wrap around, then the second pointer will point to the beginning of the buffer. </p>
<p>
If the application passes NULL for the <i>lplpvAudioPtr2</i> and <i>lpdwAudioBytes2</i> parameters, DirectSoundCapture will not lock the wraparound portion of the buffer. </p>
<p>
The application should read data from the pointers returned by the <a href="#_dx5_idirectsoundcapturebuffer_lock_dsound"><b>IDirectSoundCaptureBuffer::Lock</b></a> method and then call the <a href="dsound_8uzo.htm"><b>IDirectSoundCaptureBuffer::Unlock</b></a> method to release the buffer back to DirectSoundCapture. The sound buffer should not be locked for long periods of time; if it is, the capture cursor will reach the locked bytes and configuration-dependent audio problems may result.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later. Available as a redistributable for Windows 95.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in dsound.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use dsound.lib.</p>
<p>&nbsp;</p></body>
</HTML>
