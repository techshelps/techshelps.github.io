<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Locking the Execute Buffer</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_dx5_locking_the_execute_buffer_d3d"></a>Locking the Execute Buffer</h3>
<p>
You must lock <a href="glossary_8yb7.htm#_dx5_execute_buffer_glos">execute buffers</a> before you can modify them. This action prevents the driver from modifying the buffer while you are working with it.</p>
<p>
To lock a buffer, call the <a href="d3dimref_8v50.htm"><b>IDirect3DExecuteBuffer::Lock</b></a> method. This method takes a single parameter; a pointer to a <a href="d3dimref_5xgk.htm"><b>D3DEXECUTEBUFFERDESC</b></a> structure which, on return, specifies the actual location of the execute buffer's memory.</p>
<p>
When working with <a href="glossary_8yb7.htm#_dx5_execute_buffer_glos">execute buffers</a> you need to manage three pointers: the execute buffer's start address (retrieved by <b>IDirect3DExecuteBuffer::Lock</b>), the instruction start address, and your current position in the buffer. You use these three pointers to compute vertex offsets, instruction offsets, and the overall size of the execute buffer. After you have finished filling the execute buffer, you use these pointers to describe the buffer to the driver; for more information, see <a href="imover_91yc.htm">Unlocking the Execute Buffer</a>.</p>
<p>&nbsp;</p></body>
</HTML>
