<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating Complex Surfaces and Flipping Chains</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h4><a name="_dx5_creating_complex_surfaces_and_flipping_chains_ddraw"></a>Creating Complex Surfaces and Flipping Chains</h4>
<p>
You can also create <a href="glossary_0xbn.htm#_dx5_complex_surface_glos">complex surfaces</a>. A complex surface is a set of surfaces created with a single call to the <a href="ddref_9ign.htm"><b>IDirectDraw2::CreateSurface</b></a> method. If the DDSCAPS_COMPLEX flag is set when you call <b>CreateSurface</b> call, DirectDraw implicitly creates one or more surfaces in addition to the surface explicitly specified. You manage complex surfaces just like a single surface—a single call to the <a href="dxintro_710v.htm"><b>IDirectDraw::Release</b></a> method releases all surfaces, and a single call to the <a href="ddref_0vuf.htm"><b>IDirectDrawSurface3::Restore</b></a> method restores them all. However, implicitly created surfaces cannot be detached. For more information, see <a href="ddref_83sn.htm"><b>IDirectDrawSurface3::DeleteAttachedSurface</b></a>.</p>
<p>
One of the most useful <a href="glossary_0xbn.htm#_dx5_complex_surface_glos">complex surfaces</a> you can create is a <a href="glossary_2ysz.htm#_dx5_flipping_chain_glos">flipping chain</a>. Usually, a flipping chain is made of a <a href="glossary_33qr.htm#_dx5_primary_surface_glos">primary surface</a> and one or more <a href="glossary_6wtv.htm#_dx5_back_buffer_glos">back buffers</a>. The DDSCAPS_FLIP flag indicates that a surface is part of a flipping chain. Creating a flipping chain this way requires that you also include the DDSCAPS_COMPLEX flag.</p>
<p>
The following example shows how to prepare for creating a primary surface flipping chain.</p>
<pre><code>DDSURFACEDESC ddsd; 
ddsd.dwSize = sizeof(ddsd); 
 
// Tell DirectDraw which members are valid. 
ddsd.dwFlags = DDSD_CAPS | DDSD_BACKBUFFERCOUNT; 
 
// Request a primary surface with a single 
// back buffer 
ddsd.ddsCaps.dwCaps = DDSCAPS_COMPLEX | DDSCAPS_FLIP | 
DDSCAPS_PRIMARYSURFACE; 
ddsd.dwBackBufferCount = 1; 
 </code></pre>
<p>
The previous example constructs a double-buffered flipping environment—a single call to the <a href="ddref_6v93.htm"><b>IDirectDrawSurface3::Flip</b></a> method exchanges the surface memory of the <a href="glossary_33qr.htm#_dx5_primary_surface_glos">primary surface</a> and the <a href="glossary_6wtv.htm#_dx5_back_buffer_glos">back buffer</a>. If you specify 2 for the value of the <b>dwBackBufferCount</b> member of the <a href="ddref_8hbr.htm"><b>DDSURFACEDESC</b></a> structure, two back buffers are created, and each call to <b>Flip</b> rotates the surfaces in a circular pattern, providing a triple-buffered flipping environment.</p>
<p>&nbsp;</p></body>
</HTML>
