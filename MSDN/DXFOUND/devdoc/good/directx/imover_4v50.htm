<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Immediate Mode Object Types</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_dx5_immediate_mode_object_types_d3d"></a>Immediate Mode Object Types</h2>
<p>
Direct3D Immediate Mode is made up of a series of objects. You work with these objects to manipulate your virtual world and build a Direct3D application.
<dl>
<dt>
<b>DirectDraw Object</b></dt>
<dd>
A DirectDraw object provides the functionality of Direct3D; <b>IDirect3D</b> and <a href="d3dimref_0p44.htm"><b>IDirect3D2</b></a> are interfaces to a DirectDraw object. Since a DirectDraw object represents the display device, and the display device implements many of the most important features of Direct3D, it makes sense that the abilities of Direct3D are incorporated into DirectDraw. You create a DirectDraw object by calling the <a href="ddref_4z3r.htm"><b>DirectDrawCreate</b></a> function. For more information, see <a href="imover_5ep0.htm">IDirect3D2 Interface</a>.</dd>
<dt>
<b>DirectDrawSurface Object</b></dt>
<dd>
A DirectDrawSurface object that was created as a texture map contains the bitmap(s) that your Direct3D application will use as textures. You create an <a href="d3dimref_1mzo.htm"><b>IDirect3DTexture2</b></a> interface by calling the <a href="dxintro_0pgv.htm"><b>IDirectDrawSurface3::QueryInterface</b></a> method.
<p>
For more information, see <a href="imover_6b38.htm">Textures</a>.
</dd>
<dt>
<b>Direct3DDevice Object</b></dt>
<dd>
A Direct3DDevice object encapsulates and stores the rendering state for an Immediate Mode application; it can be thought of as a rendering target for Direct3D. Prior to DirectX 5, Direct3D devices were interfaces to DirectDrawSurface objects. DirectX 5 introduced a new device-object model, in which a Direct3DDevice object is entirely separate from DirectDraw surfaces. This new object supports the <a href="d3dimref_1z1g.htm"><b>IDirect3DDevice2</b></a> interface. 
<p>
You can call the <a href="d3dimref_0dus.htm"><b>IDirect3D2::CreateDevice</b></a> method to create a Direct3DDevice object and retrieve an <b>IDirect3DDevice2</b> interface. (Notice that you do not call <b>QueryInterface</b> to retrieve <b>IDirect3DDevice2</b>!) If necessary, you can retrieve an <b>IDirect3DDevice</b> interface by calling the <a href="dxintro_0pgv.htm"><b>IDirect3DDevice2::QueryInterface</b></a> method.

<p>
For more information, see <a href="imover_17hg.htm">The DrawPrimitive Methods and Execute Buffers</a> and <a href="imover_5r50.htm">Devices</a>.
</dd>
<dt>
<b>Direct3DMaterial Object</b></dt>
<dd>
A Direct3DMaterial object describes the illumination properties of a visible element in a three-dimensional scene, including how it handles light and whether it uses a texture. You can create a Direct3DMaterial object by calling the <a href="d3dimref_6en8.htm"><b>IDirect3D2::CreateMaterial</b></a> method. You can use the <a href="d3dimref_4ntw.htm"><b>IDirect3DMaterial2</b></a> interface to get and set materials and to retrieve material handles.
<p>
For more information, see <a href="imover_67xg.htm">Materials</a>.
</dd>
<dt>
<b>Direct3DViewport Object</b></dt>
<dd>
A Direct3DViewport object defines the rectangle into which a three-dimensional scene is projected. You can create an <a href="d3dimref_97l0.htm"><b>IDirect3DViewport2</b></a> interface by calling the <a href="d3dimref_65yc.htm"><b>IDirect3D2::CreateViewport</b></a> method. For more information, see <a href="imover_9db8.htm">Viewports and Transformations</a>.</dd>
<dt>
<b>Direct3DLight Object</b></dt>
<dd>
A Direct3DLight object describes the characteristics of a light in your application. You can use the <a href="d3dimref_87c4.htm"><b>IDirect3DLight</b></a> interface to get and set lights. You can create an <b>IDirect3DLight</b> interface by calling the <a href="d3dimref_4s6c.htm"><b>IDirect3D2::CreateLight</b></a> method. For more information, see <a href="imover_6ckk.htm">Lights</a>.</dd>
<dt>
<b>Direct3DExecuteBuffer Object</b></dt>
<dd>
A Direct3DExecuteBuffer object is a buffer full of vertices and instructions about how to handle them. Prior to DirectX 5, Immediate-Mode programming was done exclusively by using Direct3DExecuteBuffer objects. The introduction of the DrawPrimitive methods in DirectX 5, however, has made it unnecessary for most applications to work with execute buffers.
<p>
For more information about execute buffers, see <a href="imover_46xw.htm">Execute Buffers</a>.

</dd>
</dl>
<p>&nbsp;</p></body>
</HTML>
