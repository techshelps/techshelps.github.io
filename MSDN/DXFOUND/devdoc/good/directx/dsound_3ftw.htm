<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Buffer Management</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_dx5_buffer_management_dsound"></a>Buffer Management</h3>
<p>
The <a href="dsound_43xg.htm"><b>IDirectSoundBuffer::GetCaps</b></a> method retrieves the capabilities of the DirectSoundBuffer object. </p>
<p>
Your application can use the <a href="dsound_33z8.htm"><b>IDirectSoundBuffer::GetStatus</b></a> method to determine if the current <a href="glossary_5583.htm#_dx5_sound_buffer_glos">sound buffer</a> is playing or if it has stopped.</p>
<p>
You can use the <a href="dsound_7b38.htm"><b>IDirectSoundBuffer::GetFormat</b></a> method to retrieve information about the format of the sound data in the buffer. You also can use the <b>IDirectSoundBuffer::GetFormat</b> and <a href="dsound_96ck.htm"><b>IDirectSoundBuffer::SetFormat</b></a> methods to retrieve and set the format of the sound data in the <a href="glossary_33qr.htm#_dx5_primary_sound_buffer_glos">primary sound buffer</a>.</p>
<p>
<b>Note</b>&nbsp;&nbsp;After a <a href="glossary_5583.htm#_dx5_secondary_sound_buffer_glos">secondary sound buffer</a> is created, its format is fixed. If you need a secondary buffer that uses another format, you must create a new sound buffer with this format.</p>
<p>
Memory for a sound buffer can be lost in certain situations. In particular, this can occur when buffers are located in the hardware sound memory. In the worst case, the sound card itself might be removed from the system while in use; this situation can occur with PCMCIA sound cards. </p>
<p>
Loss can also occur when an application with the write-primary cooperative level moves to the foreground. If this flag is set, DirectSound makes all other sound buffers lost so that the foreground application can write directly to the primary buffer. The <a href="dsound_9y3p.htm#_dx5_dserr_bufferlost_dsound">DSERR_BUFFERLOST</a> error code is returned when the <a href="dsound_2c84.htm"><b>IDirectSoundBuffer::Lock</b></a> or <a href="dsound_7rz8.htm"><b>IDirectSoundBuffer::Play</b></a> method is called for any other buffer. When the application lowers its cooperative level from write-primary, or moves to the background, other applications can attempt to reallocate the buffer memory by calling the <a href="dsound_7rl0.htm"><b>IDirectSoundBuffer::Restore</b></a> method. If successful, this method restores the buffer memory and all other settings for the buffer, such as volume and pan settings. However, a restored buffer does not contain valid sound data. The owning application must rewrite the data to the restored buffer.</p>
<p>&nbsp;</p></body>
</HTML>
