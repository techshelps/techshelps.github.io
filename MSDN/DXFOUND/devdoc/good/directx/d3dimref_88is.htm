<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Minimize</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_dx5_minimize_d3d"></a>Minimize</h1>
<p>
This helper function returns a vector that is made up of the smallest components of the two specified vectors. <b>Minimize</b> is part of the suite of extra functionality that is available to C++ programmers who define D3D_OVERLOADS. </p>
<pre><code>_D3DVECTOR Minimize (const _D3DVECTOR&amp; v1, const _D3DVECTOR&amp; v2);
 </code></pre>
<p>
This function is defined as follows:</p>
<pre><code>inline _D3DVECTOR
Minimize (const _D3DVECTOR&amp; v1, const _D3DVECTOR&amp; v2)
{
   return _D3DVECTOR( v1[0] &lt; v2[0] ? v1[0] : v2[0],
                   v1[1] &lt; v2[1] ? v1[1] : v2[1],
                   v1[2] &lt; v2[2] ? v1[2] : v2[2]);
}
 </code></pre>
<h4>Remarks</h4>
<p>
You could use the <a href="d3dimref_1dic.htm"><b>Maximize</b></a> and <b>Minimize</b> functions to compute the bounding box for a set of points, in a function that looks like this:</p>
<pre><code>void
    ComputeBoundingBox(const D3DVECTOR *pts, int N, D3DVECTOR *min, D3DVECTOR *max)
    {
        int i;
        *min = *max = pts[0];
        for (i = 1; i &lt; N; i += 1)
        {
            *min = Minimize(*min, pts[i]);
            *max = Maximize(*max, pts[i]);
        }
    }
 </code></pre>
<h4>See Also</h4>
<p>
<a href="d3dimref_1dic.htm"><b>Maximize</b></a></p>
<p>&nbsp;</p></body>
</HTML>
