<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IDirectInputDevice::GetDeviceData</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_dx5_idirectinputdevice_getdevicedata_dinput"></a>IDirectInputDevice::GetDeviceData</h1>
<p>
The <b>IDirectInputDevice::GetDeviceData</b> method retrieves buffered data from the device.</p>
<pre><code><b>HRESULT GetDeviceData(
  DWORD</b><i> cbObjectData</i><b>,          </b>
<b>  LPDIDEVICEOBJECTDATA</b><i> rgdod</i><b>,  </b>
<b>  LPDWORD</b><i> pdwInOut</i><b>,            </b>
<b>  DWORD</b><i> dwFlags                </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>cbObjectData</i></dt>
<dd>
Size of the <a href="dinput_5cms.htm"><b>DIDEVICEOBJECTDATA</b></a> structure, in bytes.</dd>
<dt>
<i>rgdod</i></dt>
<dd>
Array of <b>DIDEVICEOBJECTDATA</b> structures to receive the buffered data. The number of elements in this array must be equal to the value of the <i>pdwInOut</i> parameter. If this parameter is NULL, then the buffered data is not stored anywhere, but all other side-effects take place.</dd>
<dt>
<i>pdwInOut</i></dt>
<dd>
On entry, the number of elements in the array pointed to by the <i>rgdod</i> parameter. On exit, the number of elements actually obtained.</dd>
<dt>
<i>dwFlags</i></dt>
<dd>
Flags that control the manner in which data is obtained. This value may be zero or the following flag. 
<table cellspacing=4 cols=2>
<tr valign=top>
<td colspan=2 width=100%>DIGDD_PEEK </td>
</tr>
<tr valign=top>
<td width=15%></td>
<td width=85%>Do not remove the items from the buffer. A subsequent <b>IDirectInputDevice::GetDeviceData</b> call will read the same data. Normally, data is removed from the buffer after it is read. </td>
</tr>
</table><br>

</dd>
</dl>
<h4>Return Values</h4>
<p>
If the method succeeds, the return value is DI_OK or <a href="dinput_7yk4.htm#_dx5_di_bufferoverflow_dinput">DI_BUFFEROVERFLOW</a>.</p>
<p>
If the method fails, the return value may be one of the following error values: </p>
<table cellspacing=4 cols=1>
<tr valign=top>
<td width=100%><a href="dinput_7yk4.htm#_dx5_dierr_inputlost_dinput">DIERR_INPUTLOST</a> </td>
</tr>
<tr valign=top>
<td width=100%><a href="dinput_7yk4.htm#_dx5_dierr_invalidparam_dinput">DIERR_INVALIDPARAM</a> </td>
</tr>
<tr valign=top>
<td width=100%><a href="dinput_7yk4.htm#_dx5_dierr_notacquired_dinput">DIERR_NOTACQUIRED</a> </td>
</tr>
<tr valign=top>
<td width=100%><a href="dinput_7yk4.htm#_dx5_dierr_notbuffered_dinput">DIERR_NOTBUFFERED</a></td>
</tr>
<tr valign=top>
<td width=100%><a href="dinput_7yk4.htm#_dx5_dierr_notinitialized_dinput">DIERR_NOTINITIALIZED</a> </td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
Before device data can be obtained, you must set the data format by using the <a href="dinput_0q0k.htm"><b>IDirectInputDevice::SetDataFormat</b></a> method, set the buffer size with <a href="dinput_24vo.htm"><b>IDirectInputDevice::SetProperty</b></a> method, and acquire the device by using the <a href="dinput_2qlw.htm"><b>IDirectInputDevice::Acquire</b></a> method.</p>
<p>
The following example reads up to ten buffered data elements, removing them from the device buffer as they are read.</p>
<pre><code>DIDEVICEOBJECTDATA rgdod[10]; 
DWORD dwItems = 10; 
hres = IDirectInputDevice_GetDeviceData( 
    pdid, 
    sizeof(DIDEVICEOBJECTDATA), 
    rgdod, 
    &amp;dwItems, 
    0); 
if (SUCCEEDED(hres)) { 
    // dwItems = number of elements read (could be zero)
    if (hres == DI_BUFFEROVERFLOW) { 
    // Buffer had overflowed. 
    } 
} 
 </code></pre>
<p>
Your application can flush the buffer and retrieve the number of flushed items by specifying NULL for the <i>rgdod</i> parameter and a pointer to a variable containing INFINITE for the <i>pdwInOut</i> parameter. The following example illustrates how this can be done:</p>
<pre><code>dwItems = INFINITE; 
hres = IDirectInputDevice_GetDeviceData( 
            pdid, 
            sizeof(DIDEVICEOBJECTDATA), 
            NULL, 
            &amp;dwItems, 
            0); 
if (SUCCEEDED(hres)) { 
    // Buffer successfully flushed. 
    // dwItems = number of elements flushed 
    if (hres == DI_BUFFEROVERFLOW) { 
        // Buffer had overflowed. 
    } 
} 
 </code></pre>
<p>
Your application can query for the number of elements in the device buffer by setting the <i>rgdod</i> parameter to NULL, setting <i>pdwInOut</i> to INFINITE and setting <i>dwFlags</i> to DIGDD_PEEK. The following code fragment illustrates how this can be done:</p>
<pre><code>dwItems = INFINITE; 
hres = IDirectInputDevice_GetDeviceData( 
            pdid, 
            sizeof(DIDEVICEOBJECTDATA), 
            NULL, 
            &amp;dwItems, 
            DIGDD_PEEK); 
if (SUCCEEDED(hres)) { 
    // dwItems = number of elements in buffer 
    if (hres == DI_BUFFEROVERFLOW) { 
        // Buffer overflow occurred; not all data 
        // were successfully captured. 
    } 
} 
 </code></pre>
<p>
To query about whether a buffer overflow has occurred, set the <i>rgdod</i> parameter to NULL and the <i>pdwInOut</i> parameter to zero. The following example illustrates how this can be done:</p>
<pre><code>dwItems = 0; 
hres = IDirectInputDevice_GetDeviceData( 
            pdid, 
            sizeof(DIDEVICEOBJECTDATA), 
            NULL, 
            &amp;dwItems, 
            0); 
if (hres == DI_BUFFEROVERFLOW) { 
    // Buffer overflow occurred 
} 
 </code></pre>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later. Available as a redistributable for Windows 95.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in dinput.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use dinput.lib.</p>
<h4>See Also</h4>
<p>
<a href="dinput_46d0.htm"><b>IDirectInputDevice2::Poll</b></a></p>
<p>
<a href="dinput_1zqs.htm">Polling and Events</a></p>
<pre></pre>
<p>&nbsp;</p></body>
</HTML>
