<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IDirect3DDevice2::SetRenderTarget</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_dx5_idirect3ddevice2_setrendertarget_d3d"></a>IDirect3DDevice2::SetRenderTarget</h1>
<p>
The <b>IDirect3DDevice2::SetRenderTarget</b> method permits the application to easily route rendering output to a new DirectDraw surface as a render target.</p>
<pre><code><b>HRESULT SetRenderTarget(
  LPDIRECTDRAWSURFACE</b><i> lpNewRenderTarget</i><b>,  </b>
<b>  DWORD</b><i> dwFlags                           </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpNewRenderTarget</i></dt>
<dd>
Pointer to the previously created DirectDraw surface object to which future rendering on this Direct3D Device will be directed.</dd>
<dt>
<i>dwFlags</i></dt>
<dd>
A flag word that should be set to 0.
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the method succeeds, the return value is DD_OK.</p>
<p>
If the method fails, the return value is an error. The error may be one of the following values: </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=43%><a href="ddref_71rr.htm#_dx5_dderr_invalidparams_ddraw">DDERR_INVALIDPARAMS</a> </td>
<td width=57%>One of the arguments is invalid. </td>
</tr>
<tr valign=top>
<td width=43%><a href="ddref_71rr.htm#_dx5_dderr_invalidsurfacetype_ddraw">DDERR_INVALIDSURFACETYPE</a> </td>
<td width=57%>The surface passed as the first parameter is invalid. </td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
When you change the rendering target, all of the handles associated with the previous rendering target become invalid. This means that you will have to reacquire all of the texture handles. If you are using ramp mode, you should also update the texture handles inside materials, by calling the <a href="d3dimref_9jms.htm"><b>IDirect3DMaterial2::SetMaterial</b></a> method. Any execute buffers (which have embedded handles) also need to be updated. The <b>IDirect3DDevice2::SetRenderState</b> method is most useful to applications that use the DrawPrimitive methods, especially when these applications do not use ramp mode. </p>
<p>
If the new render target surface has different dimensions from the old (length, width, pixel-format), this method marks the viewport as invalid. The viewport may be revalidated after calling <b>IDirect3DDevice2::SetRenderTarget</b> by calling <a href="d3dimref_2010.htm"><b>IDirect3DViewport2::SetViewport</b></a> to restate viewport parameters that are compatible with the new surface.</p>
<p>
Capabilities do not change with changes in the properties of the render target surface. Both the Direct3D HAL and the software rasterizers have only one opportunity to expose capabilities to the application. The system cannot expose different sets of capabilities depending on the format of the destination surface. </p>
<p>
If a z-buffer is attached to the new render target, it replaces the previous z-buffer for the context. Otherwise, the old z-buffer is detached and z-buffering is disabled.</p>
<p>
If more than one z-buffer is attached to the render target, this function fails.</p>
<p>
This method was introduced with the <b>IDirect3DDevice2 </b>interface. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later. Available as a redistributable for Windows 95.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in d3d.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use ddraw.lib.</p>
<h4>See Also</h4>
<p>
<a href="d3dimref_5jj8.htm"><b>IDirect3DDevice2::GetRenderTarget</b></a></p>
<p>&nbsp;</p></body>
</HTML>
