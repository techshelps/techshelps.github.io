<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Capture Buffer Information</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_dx5_capture_buffer_information_dsound"></a>Capture Buffer Information</h3>
<p>
Use the <a href="dsound_8r1g.htm"><b>IDirectSoundCaptureBuffer::GetCaps</b></a> method to retrieve the size of a capture buffer. Be sure to initialize the <b>dwSize</b> member of the <a href="dsound_26ec.htm"><b>DSCBCAPS</b></a> structure before passing it as a parameter.</p>
<p>
You can also retrieve information about the format of the data in the buffer, as set when the buffer was created. Call the <a href="dsound_0u78.htm"><b>IDirectSoundCaptureBuffer::GetFormat</b></a> method, which returns the format information in a <b>WAVEFORMATEX</b> structure. See the reference for <b>WAVEFORMATEX</b> in the Win32 API section of the Platform SDK for information on the members of that structure.</p>
<p>
Note that your application can allow for extra format information in the <b>WAVEFORMATEX</b> structure by first calling the <b>GetFormat</b> method with NULL as the <i>lpwfxFormat</i> parameter. In this case the <b>DWORD</b> pointed to by the <i>lpdwSizeWritten</i> parameter will receive the size of the structure needed to receive complete format information.</p>
<p>
To find out what a capture buffer is currently doing, call the <a href="dsound_6n38.htm"><b>IDirectSoundCaptureBuffer::GetStatus</b></a> method. This method fills a <b>DWORD</b> variable with a combination of flags that indicate whether the buffer is busy capturing, and if so, whether it is looping; that is, whether the DSCBSTART_LOOPING flag was set in the last call to <a href="dsound_0d0k.htm"><b>IDirectSoundCaptureBuffer::Start</b></a>.</p>
<p>
Finally, the <a href="dsound_8bxg.htm"><b>IDirectSoundCaptureBuffer::GetCurrentPosition</b></a> method returns the current read and capture positions within the buffer. The read position is the end of the data that has been captured into the buffer at this point. The capture position is the end of the block of data that is currently being copied from the hardware. You can safely copy data from the buffer only up to the read position.</p>
<p>&nbsp;</p></body>
</HTML>
