<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Width and Pitch</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h4><a name="_dx5_width_and_pitch_ddraw"></a>Width and Pitch</h4>
<p>
If your application writes to display memory, bitmaps stored in memory do not necessarily occupy a contiguous block of memory. In this case, the <a href="glossary_1777.htm#_dx5_width_glos"><i>width</i></a> and <a href="glossary_33qr.htm#_dx5_pitch_glos"><i>pitch</i></a> of a line in a bitmap can be different from each other. The width is the distance between two addresses in memory that represent the beginning of a line and the end of the line of a stored bitmap. This distance represents only the width of the bitmap in memory; it does not include any extra memory required to reach the beginning of the next line of the bitmap. The pitch is the distance between two addresses in memory that represent the beginning of a line and the beginning of the next line in a stored bitmap.</p>
<p>
For rectangular memory, for example, the pitch of the display memory will include the width of the bitmap plus part of a cache. The following figure shows the difference between width and pitch in rectangular memory:</p>
<p>
<img src="images/pitch.gif" border=0></p>
<p>
In this figure, the <a href="glossary_2ysz.htm#_dx5_front_buffer_glos">front buffer</a> and <a href="glossary_6wtv.htm#_dx5_back_buffer_glos">back buffer</a> are both 640&times;480&times;8, and the cache is 384&times;480&times;8. To reach the address of the next line to write to the buffer, you must add 640 and 384 to get 1024, which is the beginning of the next line.</p>
<p>
Therefore, when rendering directly into surface memory, always use the pitch returned by the <a href="ddref_201j.htm"><b>IDirectDrawSurface3::Lock</b></a> method (or the <a href="ddref_4q0n.htm"><b>IDirectDrawSurface3::GetDC</b></a> method). Do not assume a pitch based solely on the display mode. If your application works on some display adapters but looks garbled on others, this may be the cause of your problem.</p>
<p>&nbsp;</p></body>
</HTML>
