<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Step 2: Creating the DirectInput Force Feedback Device</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_dx5_step_2_creating_the_directinput_force_feedback_device_dinput"></a>Step 2: Creating the DirectInput Force Feedback Device</h3>
<p>
In order to have DirectInput enumerate devices, you must create a callback function of the same type as <a href="dinput_6qwk.htm"><b>DIEnumDevicesProc</b></a>. In Step 1 you passed the address of this function to the <a href="dinput_41x0.htm"><b>IDirectInput::EnumDevices</b></a> method.</p>
<p>
DirectInput passes into the callback, as the first parameter, a pointer to a <a href="dinput_2ywk.htm"><b>DIDEVICEINSTANCE</b></a> structure that tells you what you need to know about the device. The structure member of chief interest in the example is <b>guidInstance</b>, the unique identifier for the particular piece of hardware on the user's system You will need to pass this GUID to the <a href="dinput_4jw4.htm"><b>IDirectInput::CreateDevice</b></a> method.</p>
<p>
Here's the first part of the callback, which extracts the GUID and creates the device object:</p>
<pre><code>BOOL CALLBACK DIEnumDevicesProc(LPCDIDEVICEINSTANCE lpddi, 
                                LPVOID pvRef)
  {
  HRESULT hr1, hr2;
  LPDIRECTINPUTDEVICE lpdidGame;
  GUID DeviceGuid = lpddi-&gt;guidInstance;
 
  // create game device
 
  hr1 = lpdi-&gt;CreateDevice(DeviceGuid, &amp;lpdidGame, NULL); 
 </code></pre>
<p>
Note that the pointer to the <a href="dinput_2mus.htm"><b>IDirectInputDevice</b></a> object, <i>lpdidGame</i>, is a local variable. You're not going to keep it, because in order to create force feedback effects you need to obtain a pointer to the <b>IDirectInputDevice2</b> interface, as follows: </p>
<pre><code>if (SUCCEEDED(hr1)) 
    { 
    hr2 = lpdidGame-&gt;QueryInterface(IID_IDirectInputDevice2, 
                                   (void **) &amp;g_lpdid2Game); 
    lpdidGame-&gt;Release();
    } 
  else
    {
    OutputDebugString("Failed to create device.\n");
    return DIENUM_STOP;
    } 
  if (FAILED(hr2))
    {
    OutputDebugString("Failed to obtain interface.\n");
    return DIENUM_STOP;
    } 
 </code></pre>
<p>
The next steps, still within the callback function, are similar to those for setting up any input device. Note that you need the exclusive cooperative level for any force feedback device. Since the joystick will be used for input as well as force feedback, you also need to set the data format.</p>
<pre><code>// set cooperative level
  if (FAILED(g_lpdid2Game-&gt;SetCooperativeLevel(hMainWindow,
         DISCL_EXCLUSIVE | DISCL_FOREGROUND)))
    {
    OutputDebugString(
      "Failed to set cooperative level.\n");
    lpdid2Game-&gt;Release();
    lpdi2Game = NULL;
    return DIENUM_STOP;
    }
 
  // set game data format
  if (FAILED(g_lpdid2Game-&gt;SetDataFormat(&amp;c_dfDIJoystick)))
    {
    OutputDebugString("Failed to set game device data format.\n");
    lpdid2Game-&gt;Release();
    lpdid2Game = NULL;
    return DIENUM_STOP;
    }
 </code></pre>
<p>
Finally. you may want to turn off the device's autocenter feature. Autocenter is essentially a condition effect that uses the motors to simulate the springs in a standard joystick. Turning it off gives you more control over the device.</p>
<pre><code>DIPROPDWORD DIPropAutoCenter;
 
  DIPropAutoCenter.diph.dwSize = sizeof(DIPropAutoCenter);
  DIPropAutoCenter.diph.dwHeaderSize = sizeof(DIPROPHEADER);
  DIPropAutoCenter.diph.dwObj = 0;
  DIPropAutoCenter.diph.dwHow = DIPH_DEVICE;
  DIPropAutoCenter.dwData = 0;

  if (FAILED(lpdid2Game-&gt;SetProperty(DIPROP_AUTOCENTER, 
                                       &amp;DIPropAutoCenter.diph)))
    {
    OutputDebugString("Failed to change device property.\n");
    }

  return DIENUM_STOP;   // One is enough.
  } // end DIEnumDevicesProc
 </code></pre>
<p>
Before using the device, you must acquire it. See <a href="dinput_071w.htm">Step 5: Gaining Access to the Joystick</a> in the previous tutorial for an example of how to handle acquisition.</p>
<p>&nbsp;</p></body>
</HTML>
