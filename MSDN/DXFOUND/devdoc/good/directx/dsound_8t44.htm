<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Buffer Basics</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_dx5_buffer_basics_dsound"></a>Buffer Basics</h3>
<p>
When you initialize DirectSound in your application, it automatically creates and manages a <a href="glossary_33qr.htm#_dx5_primary_sound_buffer_glos">primary sound buffer</a> for mixing sounds and sending them to the output device.</p>
<p>
Your application must create at least one <a href="glossary_5583.htm#_dx5_secondary_sound_buffer_glos">secondary sound buffer</a> for storing and playing individual sounds. For more information on how to do this, see <a href="dsound_01yc.htm">Creating Secondary Buffers</a>. </p>
<p>
A secondary buffer can exist throughout the life of an application or it may be destroyed when no longer needed. It may contain a single sound that is to be played repeatedly, such as a sound effect in a game, or it may be filled with new data from time to time. The application can play a sound stored in a secondary buffer as a single event or as a looping sound that plays continuously.</p>
<p>
Secondary buffers can also be used to stream data, in cases where a sound file contains more data than can conveniently be stored in memory. </p>
<p>
For more information on the different kinds of secondary buffers, see <a href="dsound_1pic.htm">Static and Streaming Sound Buffers</a>.</p>
<p>
You can create two or more secondary buffers in the same physical memory by using the <a href="dsound_8dpg.htm"><b>IDirectSound::DuplicateSoundBuffer</b></a> method, provided the original buffer is not on the sound hardware.</p>
<p>
You can mix sounds from different secondary buffers simply by playing them at the same time. Data from secondary buffers is mixed by DirectSound in the primary buffer. Any number of secondary buffers can be played at one time, up to the limits of processing power.</p>
<p>
The DirectSound mixer can provide as little as 20 milliseconds of <a href="glossary_71rn.htm#_dx5_latency_glos">latency</a>, so there is no perceptible delay before play begins. Under these conditions, if your application plays a buffer and immediately begins a screen animation, the audio and video appear to start at the same time. However, if DirectSound must emulate hardware features in software, the mixer cannot achieve low latency and a longer delay (typically 100-150 milliseconds) occurs before the sound is reproduced.</p>
<p>
Normally you do not have to concern yourself at all with the primary buffer; DirectSound manages it behind the scenes. However, if your application is to perform its own mixing, DirectSound will let you write directly to the primary buffer. If you do this, you cannot also use secondary buffers. For more information, see <a href="dsound_8qg4.htm">Access to the Primary Buffer</a>.</p>
<p>&nbsp;</p></body>
</HTML>
