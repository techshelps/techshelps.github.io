<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Defining the Surface Requirements</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h4><a name="_dx5_defining_the_surface_requirements_ddraw"></a>Defining the Surface Requirements</h4>
<p>
The first step in creating <a href="glossary_2ysz.htm#_dx5_flipping_surface_glos">flipping surfaces</a> is to define the surface requirements in a <a href="ddref_8hbr.htm"><b>DDSURFACEDESC</b></a> structure. The following example shows the structure definitions and flags needed to create a flipping surface.</p>
<pre><code>// Create the primary surface with one back buffer. 
ddsd.dwSize = sizeof(ddsd); 
ddsd.dwFlags = DDSD_CAPS | DDSD_BACKBUFFERCOUNT; 
ddsd.ddsCaps.dwCaps = DDSCAPS_PRIMARYSURFACE | 
    DDSCAPS_FLIP | DDSCAPS_COMPLEX; 
 
ddsd.dwBackBufferCount = 1; 
 </code></pre>
<p>
In this example, the <b>dwSize</b> member is set to the size of the <a href="ddref_8hbr.htm"><b>DDSURFACEDESC</b></a> structure. This is to prevent any DirectDraw method call you use from returning with an invalid member error. (The <b>dwSize</b> member was provided for future expansion of the <b>DDSURFACEDESC</b> structure.)</p>
<p>
The <b>dwFlags</b> member determines which members in the <b>DDSURFACEDESC</b> structure will be filled with valid information. For the DDEX1 example, <b>dwFlags</b> is set to specify that you want to use the <a href="ddref_7mlz.htm"><b>DDSCAPS</b></a> structure (DDSD_CAPS) and that you want to create a <a href="glossary_6wtv.htm#_dx5_back_buffer_glos">back buffer</a> (DDSD_BACKBUFFERCOUNT).</p>
<p>
The <b>dwCaps</b> member in the example indicates the flags that will be used in the <b>DDSCAPS</b> structure. In this case, it specifies a <a href="glossary_33qr.htm#_dx5_primary_surface_glos">primary surface</a> (DDSCAPS_PRIMARYSURFACE), a <a href="glossary_2ysz.htm#_dx5_flipping_surface_glos">flipping surface</a> (DDSCAPS_FLIP), and a <a href="glossary_0xbn.htm#_dx5_complex_surface_glos">complex surface</a> (DDSCAPS_COMPLEX).</p>
<p>
Finally, the example specifies one back buffer. The back buffer is where the backgrounds and sprites will actually be written. The back buffer is then flipped to the primary surface. In the DDEX1 example, the number of back buffers is set to 1. You can, however, create as many back buffers as the amount of display memory allows. For more information on creating more than one back buffer, see <a href="ddoverv_1r5j.htm">Triple Buffering</a>.</p>
<p>
Surface memory can be either display memory or system memory. DirectDraw uses system memory if the application runs out of display memory (for example, if you specify more than one <a href="glossary_6wtv.htm#_dx5_back_buffer_glos">back buffer</a> on a display adapter with only 1 MB of RAM). You can also specify whether to use only system memory or only display memory by setting the <b>dwCaps</b> member in the <a href="ddref_7mlz.htm"><b>DDSCAPS</b></a> structure to DDSCAPS_SYSTEMMEMORY or DDSCAPS_VIDEOMEMORY. (If you specify DDSCAPS_VIDEOMEMORY, but not enough memory is available to create the surface, <a href="ddref_9ign.htm"><b>IDirectDraw2::CreateSurface</b></a> returns with a <a href="ddref_71rr.htm#_dx5_dderr_outofvideomemory_ddraw">DDERR_OUTOFVIDEOMEMORY</a> error.)</p>
<p>&nbsp;</p></body>
</HTML>
