<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Step 3: Loading a Bitmap on the Back Buffer</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_dx5_step_3_loading_a_bitmap_on_the_back_buffer_ddraw"></a>Step 3: Loading a Bitmap on the Back Buffer</h3>
<p>
After the DirectDrawPalette object is associated with the DirectDrawSurface object, DDEX2 loads the Back.bmp bitmap on the <a href="glossary_6wtv.htm#_dx5_back_buffer_glos">back buffer</a> by using the following code:</p>
<pre><code>// Load a bitmap into the back buffer. 
ddrval = DDReLoadBitmap(lpDDSBack, szBackground); 
 
if(ddrval != DD_OK) 
    // Load failed. 
 </code></pre>
<p>
DDReLoadBitmap is another sample function found in Ddutil.cpp. It loads a bitmap from a file or resource into an already existing DirectDraw surface. (You could also use DDLoadBitmap to create a surface and load the bitmap into that surface. For more information, see <a href="ddoverv_64l3.htm">Tutorial 5: Dynamically Modifying Palettes</a>.) For DDEX2, it loads the Back.bmp file pointed to by <i>szBackground</i> onto the <a href="glossary_6wtv.htm#_dx5_back_buffer_glos">back buffer</a> pointed to by <i>lpDDSBack</i>. The DDReLoadBitmap function calls the DDCopyBitmap function to copy the file onto the back buffer and stretch it to the proper size.</p>
<p>
The DDCopyBitmap function copies the bitmap into memory, and it uses the <b>GetObject</b> function to retrieve the size of the bitmap. It then uses the following code to retrieve the size of the back buffer onto which it will place the bitmap:</p>
<pre><code>// Get the size of the surface. 
ddsd.dwSize = sizeof(ddsd); 
ddsd.dwFlags = DDSD_HEIGHT | DDSD_WIDTH; 
pdds-&gt;GetSurfaceDesc(&amp;ddsd); 
 </code></pre>
<p>
The <i>ddsd</i> value is a pointer to the <a href="ddref_8hbr.htm"><b>DDSURFACEDESC</b></a> structure. This structure stores the current description of the DirectDraw surface. In this case, the <b>DDSURFACEDESC</b> members describe the height and <a href="glossary_1777.htm#_dx5_width_glos">width</a> of the surface, which are indicated by DDSD_HEIGHT and DDSD_WIDTH. The call to the <a href="ddref_4qt3.htm"><b>IDirectDrawSurface3::GetSurfaceDesc</b></a> method then loads the structure with the proper values. For DDEX2, the values will be 480 for the height and 640 for the width.</p>
<p>
The DDCopyBitmap sample function locks the surface and copies the bitmap to the <a href="glossary_6wtv.htm#_dx5_back_buffer_glos">back buffer</a>, <a href="glossary_5583.htm#_dx5_stretching_glos">stretching</a> or compressing it as applicable by using the <b>StretchBlt</b> function, as shown in the following example:</p>
<pre><code>if ((hr = pdds-&gt;GetDC(&amp;hdc)) == DD_OK) 
{ 
    StretchBlt(hdc, 0, 0, ddsd.dwWidth, ddsd.dwHeight, hdcImage, x, y, 
        dx, dy, SRCCOPY); 
    pdds-&gt;ReleaseDC(hdc); 
} 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
