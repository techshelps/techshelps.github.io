<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IDirectInput::CreateDevice</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_dx5_idirectinput_createdevice_dinput"></a>IDirectInput::CreateDevice</h1>
<p>
The <b>IDirectInput::CreateDevice</b> method creates and initializes an instance of a device based on a given GUID.</p>
<pre><code><b>HRESULT CreateDevice(
  REFGUID</b><i> rguid</i><b>,                               </b>
<b>  LPDIRECTINPUTDEVICE</b><i> *lplpDirectInputDevice</i><b>,  </b>
<b>  LPUNKNOWN</b><i> pUnkOuter                          </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>rguid</i></dt>
<dd>
Reference to (C++) or address of (C) the instance GUID for the desired input device (see Remarks). The GUID is retrieved through the <a href="dinput_41x0.htm"><b>IDirectInput::EnumDevices</b></a> method, or it can be one of the following predefined GUIDs: 
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=43%><i>GUID_SysKeyboard</i> </td>
<td width=57%>The default system keyboard. </td>
</tr>
<tr valign=top>
<td width=43%><i>GUID_SysMouse</i> </td>
<td width=57%>The default system mouse. </td>
</tr>
</table><br>


<p>
For the above GUID values to be valid, your application must define INITGUID before all other preprocessor directives at the beginning of the source file, or link to Dxguid.lib.
</dd>
<dt>
<i>lplpDirectInputDevice</i></dt>
<dd>
Address of the <b>IDirectInputDevice</b> interface pointer if successful.</dd>
<dt>
<i>pUnkOuter</i></dt>
<dd>
Address of the controlling object's <b>IUnknown</b> interface for COM aggregation, or NULL if the interface is not aggregated. Most callers will pass NULL.
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the method succeeds, the return value is DI_OK.</p>
<p>
If the method fails, the return value may be one of the following:</p>
<table cellspacing=4 cols=1>
<tr valign=top>
<td width=100%><a href="dinput_7yk4.htm#_dx5_dierr_devicenotreg_dinput">DIERR_DEVICENOTREG</a> </td>
</tr>
<tr valign=top>
<td width=100%><a href="dinput_7yk4.htm#_dx5_dierr_invalidparam_dinput">DIERR_INVALIDPARAM</a> </td>
</tr>
<tr valign=top>
<td width=100%><a href="dinput_7yk4.htm#_dx5_dierr_nointerface_dinput">DIERR_NOINTERFACE</a> </td>
</tr>
<tr valign=top>
<td width=100%><a href="dinput_7yk4.htm#_dx5_dierr_notinitialized_dinput">DIERR_NOTINITIALIZED</a></td>
</tr>
<tr valign=top>
<td width=100%><a href="dinput_7yk4.htm#_dx5_dierr_outofmemory_dinput">DIERR_OUTOFMEMORY</a> </td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
In C++ the <i>rguid</i> parameter must be passed by reference; in C, which does not have pass-by-reference, it must be passed by address. The following is an example of a C++ call:</p>
<pre><code>lpdi-&gt;CreateDevice(GUID_SysKeyboard, &amp;pdev, NULL);
 </code></pre>
<p>
The following shows the same call in C:</p>
<pre><code>lpdi-&gt;lpVtbl-&gt;CreateDevice(lpdi, &amp;GUID_SysKeyboard, &amp;pdev, NULL);
 </code></pre>
<p>
Calling this function with <i>punkOuter</i> = NULL is equivalent to creating the object via <b>CoCreateInstance</b>(<i>&amp;CLSID_DirectInputDevice, NULL, CLSCTX_INPROC_SERVER, riid, lplpDirectInputDevice</i>) and then initializing it with <b>Initialize</b>.</p>
<p>
Calling this function with <i>punkOuter</i> != NULL is equivalent to creating the object via <b>CoCreateInstance</b>(<i>&amp;CLSID_DirectInputDevice, punkOuter, CLSCTX_INPROC_SERVER, &amp;IID_IUnknown, lplpDirectInputDevice</i>). The aggregated object must be initialized manually.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later. Available as a redistributable for Windows 95.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in dinput.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use dinput.lib.</p>
<p>&nbsp;</p></body>
</HTML>
