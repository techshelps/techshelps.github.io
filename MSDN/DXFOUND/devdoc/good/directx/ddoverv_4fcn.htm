<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Types of Palette Entries in Windowed Mode</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h4><a name="_dx5_types_of_palette_entries_in_windowed_mode_ddraw"></a>Types of Palette Entries in Windowed Mode</h4>
<p>
Unlike full-screen exclusive mode applications, windowed applications must share the desktop palette with other applications. This imposes several restrictions on which palette entries you can safely modify and how you can modify them. The <b>PALETTEENTRY</b> structure you use when working with DirectDrawPalette objects and GDI contains a <b>peFlags</b> member to carry information that describes how the system should interpret the <b>PALETTEENTRY</b> structure.</p>
<p>
The <b>peFlags</b> member describes three types of palette entries, discussed in this topic:
<ul>
<li>
Windows static entries</li>
<li>
Animated entries</li>
<li>
Nonanimated entries</li>
</ul>
<p>
<b>Windows static entries.</b></p>
<p>
In normal mode, Windows reserves palette entries 0 through 9 and 246 through 255 for system colors that it uses to display menu bars, menu text, window borders, and so on. In order to maintain a consistent look for your application and avoid damaging the appearance of other applications, you need to protect these entries in the palette you set to the primary surface. Often, developers retrieve the system palette entries by calling the <b>GetSystemPaletteEntries</b> Win32® function, then explicitly set the identical entries in a custom palette to match before assigning it to the primary surface. Duplicating the system palette entries in a custom palette will work initially, but it becomes invalid if the user changes the desktop color scheme.</p>
<p>
To avoid having your palette look bad when the user changes color schemes, you can protect the appropriate entries by providing a reference into the system palette instead specifying a color value. This way, no matter what color the system is using for a given entry, your palette will always match and you won't need to do any updating. The PC_EXPLICIT flag, used in the <b>peFlags</b> member, makes it possible for you to directly refer to a system palette entry. When you use this flag, the system no longer assumes that the other structure members include color information. Rather, when you use PC_EXPLICIT, you set the value in the <b>peRed</b> member to the desired system palette index and set the other colors to zero.</p>
<p>
For instance, if you want to ensure that the proper entries in your palette always match the system's color scheme, you could use the following code:</p>
<pre><code>// Set the first and last 10 entries to match the system palette.
PALETTEENTRY pe[256];
ZeroMemory(pe, sizeof(pe));
for(int i=0;i&lt;10;i++){
    pe[i].peFlags  = pe[i+246].peFlags = PC_EXPLICIT;
    pe[i].peRed = i;
    pe[i+246].peRed = i+246;
} 
 </code></pre>
<p>
You can force Windows to use only the first and last palette entry (0 and 255) by calling the <b>SetSystemPaletteUse</b> Win32 function. In this case, you should set only entries 0 and 255 of your <b>PALETTEENTRY</b> structure to PC_EXPLICIT.</p>
<p>
<b>Animated entries</b></p>
<p>
You specify palette entries that you will be animating by using the PC_RESERVED flag in the corresponding <b>PALETTEENTRY</b> structure. Windows will not allow any other application to map its logical palette entry to that physical entry, thereby preventing other applications from cycling their colors when your application animates the palette.</p>
<p>
<b>Nonanimated entries</b></p>
<p>
You specify normal, nonanimated palette entries by using the PC_NOCOLLAPSE flag in the corresponding <b>PALETTEENTRY</b> structure. The PC_NOCOLLAPSE flag informs Windows not to substitute some other already-allocated physical palette entry for that entry.</p>
<p>&nbsp;</p></body>
</HTML>
