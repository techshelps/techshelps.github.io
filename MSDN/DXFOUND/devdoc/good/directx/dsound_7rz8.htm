<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IDirectSoundBuffer::Play</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_dx5_idirectsoundbuffer_play_dsound"></a>IDirectSoundBuffer::Play</h1>
<p>
The <b>IDirectSoundBuffer::Play</b> method causes the <a href="glossary_5583.htm#_dx5_sound_buffer_glos">sound buffer</a> to play from the current position.</p>
<pre><code><b>HRESULT Play(
  DWORD</b><i> dwReserved1</i><b>,  </b>
<b>  DWORD</b><i> dwReserved2</i><b>,  </b>
<b>  DWORD</b><i> dwFlags       </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dwReserved1</i></dt>
<dd>
This parameter is reserved. Its value must be 0.</dd>
<dt>
<i>dwReserved2</i></dt>
<dd>
This parameter is reserved. Its value must be 0.</dd>
<dt>
<i>dwFlags</i></dt>
<dd>
Flags specifying how to play the buffer. The following flag is defined: 
<table cellspacing=4 cols=2>
<tr valign=top>
<td colspan=2 width=100%>DSBPLAY_LOOPING </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>Once the end of the audio buffer is reached, play restarts at the beginning of the buffer. Play continues until explicitly stopped. This flag must be set when playing <a href="glossary_33qr.htm#_dx5_primary_sound_buffer_glos">primary sound buffers</a>. </td>
</tr>
</table><br>

</dd>
</dl>
<h4>Return Values</h4>
<p>
If the method succeeds, the return value is DS_OK.</p>
<p>
If the method fails, the return value may be one of the following error values:</p>
<p>
<a href="dsound_9y3p.htm#_dx5_dserr_bufferlost_dsound">DSERR_BUFFERLOST</a> <br>
<a href="dsound_9y3p.htm#_dx5_dserr_invalidcall_dsound">DSERR_INVALIDCALL</a> <br>
<a href="dsound_9y3p.htm#_dx5_dserr_invalidparam_dsound">DSERR_INVALIDPARAM</a> <br>
<a href="dsound_9y3p.htm#_dx5_dserr_priolevelneeded_dsound">DSERR_PRIOLEVELNEEDED</a> </p>
<h4>Remarks</h4>
<p>
This method will cause a <a href="glossary_5583.htm#_dx5_secondary_sound_buffer_glos">secondary sound buffer</a> to be mixed into the primary buffer and sent to the sound device. If this is the first buffer to play, it will implicitly create a primary buffer and start playing that buffer; the application need not explicitly direct the primary buffer to play.</p>
<p>
If the buffer specified in the method is already playing, the call to the method will succeed and the buffer will continue to play. However, the flags defined in the most recent call supersede flags defined in previous calls.</p>
<p>
Primary buffers must be played with the DSBPLAY_LOOPING flag set.</p>
<p>
This method will cause <a href="glossary_33qr.htm#_dx5_primary_sound_buffer_glos">primary sound buffers</a> to start playing to the sound device. If the application is set to the DSSCL_WRITEPRIMARY cooperative level, this will cause the audio data in the primary buffer to be sent to the sound device. However, if the application is set to any other cooperative level, this method will ensure that the primary buffer is playing even when no secondary buffers are playing; in that case, silence will be played. This can reduce processing overhead when sounds are started and stopped in sequence, because the primary buffer will be playing continuously rather than stopping and starting between secondary buffers.</p>
<p>
<b>Note</b>&nbsp;&nbsp;Before this method can be called on any <a href="glossary_5583.htm#_dx5_sound_buffer_glos">sound buffer</a>, the application should call the <a href="dsound_4e78.htm"><b>IDirectSound::SetCooperativeLevel</b></a> method and specify a cooperative level, typically DSSCL_NORMAL. If <b>IDirectSound::SetCooperativeLevel</b> has not been called, the <b>IDirectSoundBuffer::Play</b> method returns with DS_OK, but no sound will be produced until <b>IDirectSound::SetCooperativeLevel</b> is called.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 4.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later. Available as a redistributable for Windows 95.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in dsound.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use dsound.lib.</p>
<h4>See Also</h4>
<p>
<a href="dsound_317o.htm"><b>IDirectSoundBuffer</b></a>, <b>IDirectSound::SetCooperativeLevel</b></p>
<p>&nbsp;</p></body>
</HTML>
