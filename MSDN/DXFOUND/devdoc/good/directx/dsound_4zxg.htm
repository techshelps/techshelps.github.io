<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Mixing Sounds</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_dx5_mixing_sounds_dsound"></a>Mixing Sounds</h3>
<p>
It is easy to mix multiple streams with DirectSound. You simply create <a href="glossary_5583.htm#_dx5_secondary_sound_buffer_glos">secondary sound buffers</a>, receiving an <a href="dsound_317o.htm"><b>IDirectSoundBuffer</b></a> interface for each sound. You then play the buffers simultaneously. DirectSound takes care of the mixing in the <a href="glossary_5583.htm#_dx5_secondary_sound_buffer_glos">primary sound buffer</a> and plays the result.</p>
<p>
The DirectSound mixer can obtain the best results from hardware acceleration if your application correctly specifies the DSBCAPS_STATIC flag for static buffers. This flag should be specified for any static buffers that will be reused. DirectSound downloads these buffers to the sound hardware memory, where available, and consequently does not incur any processing overhead in mixing these buffers. The most important <a href="glossary_5583.htm#_dx5_static_sound_buffer_glos">static sound buffers</a> should be created first to give them first priority for hardware acceleration.</p>
<p>
The DirectSound mixer produces the best sound quality if all your application's sounds use the same wave format and the hardware output format is matched to the format of the sounds. If this is done, the mixer need not perform any format conversion.</p>
<p>
Your application can change the hardware output format by creating a <a href="glossary_33qr.htm#_dx5_primary_sound_buffer_glos">primary sound buffer</a> and calling the <a href="dsound_96ck.htm"><b>IDirectSoundBuffer::SetFormat</b></a> method. Note that this primary buffer is for control purposes only; creating it is not the same as obtaining write access to the primary buffer as described under <a href="dsound_8qg4.htm">Access to the Primary Buffer</a>, and you do not need the DSSCL_WRITEPRIMARY cooperative level. However, you do need a cooperative level of DSSCL_PRIORITY or higher in order to call the <b>SetFormat</b> method. DirectSound will restore the hardware format to the format specified in the last call every time the application gains the input focus.</p>
<p>&nbsp;</p></body>
</HTML>
