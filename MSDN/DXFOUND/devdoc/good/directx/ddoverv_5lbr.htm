<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Step 7: Flipping the Surfaces</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_dx5_step_7_flipping_the_surfaces_ddraw"></a>Step 7: Flipping the Surfaces</h3>
<p>
After the surface memory is unlocked, you can use the <a href="ddref_6v93.htm"><b>IDirectDrawSurface3::Flip</b></a> method to flip the <a href="glossary_6wtv.htm#_dx5_back_buffer_glos">back buffer</a> to the <a href="glossary_33qr.htm#_dx5_primary_surface_glos">primary surface</a>, as shown in the following example:</p>
<pre><code>while(1) 
{ 
    HRESULT ddrval; 
    ddrval = lpDDSPrimary-&gt;Flip(NULL, 0); 
    if(ddrval == DD_OK) 
    { 
        break; 
    } 
    if(ddrval == DDERR_SURFACELOST) 
    { 
        ddrval = lpDDSPrimary-&gt;Restore(); 
        if(ddrval != DD_OK) 
        { 
            break; 
        } 
    } 
    if(ddrval != DDERR_WASSTILLDRAWING) 
    { 
        break; 
    } 
} 
 </code></pre>
<p>
In the example, <i>lpDDSPrimary</i> parameter designates the <a href="glossary_33qr.htm#_dx5_primary_surface_glos">primary surface</a> and its associated <a href="glossary_6wtv.htm#_dx5_back_buffer_glos">back buffer</a>. When <b>IDirectDrawSurface3::Flip</b> is called, the front and back surfaces are exchanged (only the pointers to the surfaces are changed; no data is actually moved). If the flip is successful and returns DD_OK, the application breaks from the while loop.</p>
<p>
If the flip returns with a <a href="ddref_71rr.htm#_dx5_dderr_surfacelost_ddraw">DDERR_SURFACELOST</a> value, an attempt is made to restore the surface by using the <a href="ddref_0vuf.htm"><b>IDirectDrawSurface3::Restore</b></a> method. If the restore is successful, the application loops back to the <b>IDirectDrawSurface3::Flip</b> call and tries again. If the restore is unsuccessful, the application breaks from the while loop, and returns with an error.</p>
<p>
<b>Note</b>&nbsp;&nbsp;When you call <b>IDirectDrawSurface3::Flip</b>, the flip does not complete immediately. Rather, a flip is scheduled for the next time a vertical blank occurs on the system. If, for example, the previous flip has not occurred, <b>IDirectDrawSurface3::Flip</b> returns <a href="ddref_71rr.htm#_dx5_dderr_wasstilldrawing_ddraw">DDERR_WASSTILLDRAWING</a>. In the example, the <b>IDirectDrawSurface3::Flip</b> call continues to loop until it returns DD_OK.</p>
<p>&nbsp;</p></body>
</HTML>
