<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Overriding DirectSetup Flags in the Callback Function</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_dx5_overriding_directsetup_flags_in_the_callback_function_dsetup"></a>Overriding DirectSetup Flags in the Callback Function</h3>
<p>
The application-defined function DirectXSetupCallbackFunction can override some of the default behaviors of the <b>DirectXSetup </b>function through its return value. As an example, the default behavior for <b>DirectXSetup</b> is to not install a component if the <i>UpgradeType </i>member of the <i>pInfo</i> parameter of the function DirectXSetupCallbackFunction is set to DSETUP_CB_UPGRADE_SAFE | DSETUP_CB_UPGRADE_HAS_WARNINGS (where the | symbol indicates a bitwise <b>OR</b> operation). In this case, the <i>MsgType</i> parameter of the callback function is set to MB_YESNO | MB_DEFBUTTON2. If the callback function accepts the default, it will return IDNO. If it wants to override the default, the callback function should return IDYES. If it does override the default, the user will be notified by the <b>DirectXSetup </b>function.</p>
<p>&nbsp;</p></body>
</HTML>
