<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IDirect3DDevice2::MultiplyTransform</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_dx5_idirect3ddevice2_multiplytransform_d3d"></a>IDirect3DDevice2::MultiplyTransform</h1>
<p>
The <b>IDirect3DDevice2::MultiplyTransform</b> method modifies the current world matrix by combining it with a specified matrix. The multiplication order is <i>lpD3DMatrix</i> times <i>dtstTransformStateType</i>.</p>
<pre><code><b>HRESULT MultiplyTransform(
  D3DTRANSFORMSTATETYPE</b><i> dtstTransformStateType</i><b>,  </b>
<b>  LPD3DMATRIX</b><i> lpD3DMatrix                        </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dtstTransformStateType</i></dt>
<dd>
One of the members of the <a href="d3dimref_6pes.htm"><b>D3DTRANSFORMSTATETYPE</b></a> enumerated type. Only the D3DTRANSFORMSTATE_WORLD setting is likely to be useful. The matrix referred to by this parameter is modified by this method.</dd>
<dt>
<i>lpD3DMatrix</i></dt>
<dd>
Address of a <a href="d3dimref_6eck.htm"><b>D3DMATRIX</b></a> structure that modifies the current transformation.
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the method succeeds, the return value is DD_OK.</p>
<p>
If the method fails, the return value is an error. The method returns <a href="ddref_71rr.htm#_dx5_dderr_invalidparams_ddraw">DDERR_INVALIDPARAMS</a> if one of the arguments is invalid.</p>
<h4>Remarks</h4>
<p>
An application might use the <b>IDirect3DDevice2::MultiplyTransform</b> method to work with hierarchies of transformations. For example, the geometry and transformations describing an arm might be arranged in the following hierarchy:</p>
<pre><code>shoulder_transformation
    upper_arm geometry
    elbow transformation
        lower_arm geometry
        wrist transformation
            hand geometry
 </code></pre>
<p>
An application might use the following series of calls to render this hierarchy. (Not all of the parameters are shown in this pseudocode.)</p>
<pre><code>IDirect3DDevice2::SetTransform(D3DTRANSFORMSTATE_WORLD, 
    shoulder_transform)
IDirect3DDevice2::DrawPrimitive(upper_arm)
IDirect3DDevice2::MultiplyTransform(D3DTRANSFORMSTATE_WORLD, 
    elbow_transform)
IDirect3DDevice2::DrawPrimitive(lower_arm)
IDirect3DDevice2::MultiplyTransform(D3DTRANSFORMSTATE_WORLD, 
    wrist_transform)
IDirect3DDevice2::DrawPrimitive(hand)
 </code></pre>
<p>
This method was introduced with the <b>IDirect3DDevice2 </b>interface. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later. Available as a redistributable for Windows 95.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in d3d.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use ddraw.lib.</p>
<h4>See Also</h4>
<p>
<a href="d3dimref_93tw.htm"><b>IDirect3DDevice2::DrawPrimitive</b></a>, <a href="d3dimref_5pd0.htm"><b>IDirect3DDevice2::SetTransform</b></a></p>
<p>&nbsp;</p></body>
</HTML>
