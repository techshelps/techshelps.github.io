<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DDPIXELFORMAT</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_dx5_ddpixelformat_ddraw"></a>DDPIXELFORMAT</h1>
<p>
The <b>DDPIXELFORMAT</b> structure describes the pixel format of a DirectDrawSurface object for the <a href="ddref_243b.htm"><b>IDirectDrawSurface3::GetPixelFormat</b></a> method.</p>
<pre><code>typedef struct _DDPIXELFORMAT{ 
    DWORD dwSize; 
    DWORD dwFlags; 
    DWORD dwFourCC; 
    union 
    { 
        DWORD dwRGBBitCount; 
        DWORD dwYUVBitCount; 
        DWORD dwZBufferBitDepth; 
        DWORD dwAlphaBitDepth; 
    }; 
    union 
    { 
        DWORD dwRBitMask; 
        DWORD dwYBitMask; 
    }; 
    union 
    { 
        DWORD dwGBitMask; 
        DWORD dwUBitMask; 
    }; 
    union 
    { 
        DWORD dwBBitMask; 
        DWORD dwVBitMask; 
    }; 
    union 
    { 
        DWORD dwRGBAlphaBitMask; 
        DWORD dwYUVAlphaBitMask; 
        DWORD dwRGBZBitMask; 
        DWORD dwYUVZBitMask; 
    }; 
} DDPIXELFORMAT, FAR* LPDDPIXELFORMAT; 
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>dwSize</b></dt>
<dd>
Size of the structure, in bytes. This member must be initialized before the structure is used.</dd>
<dt>
<b>dwFlags</b></dt>
<dd>
Optional control flags. 
<table cellspacing=4 cols=2>
<tr valign=top>
<td colspan=2 width=100%>DDPF_ALPHA </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>The pixel format describes an alpha-only surface. </td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DDPF_ALPHAPIXELS </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>The surface has <a href="glossary_2wc3.htm#_dx5_alpha_channel_glos">alpha channel</a> information in the pixel format. </td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DDPF_COMPRESSED </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>The surface will accept pixel data in the specified format and compress it during the write operation. </td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DDPF_FOURCC </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>The <b>dwFourCC</b> member is valid and contains a FOURCC code describing a non-RGB pixel format.. </td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DDPF_PALETTEINDEXED1 </td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DDPF_PALETTEINDEXED2 </td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DDPF_PALETTEINDEXED4 </td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DDPF_PALETTEINDEXED8 </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>The surface is 1-, 2-, 4-, or 8-bit color indexed. </td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DDPF_PALETTEINDEXEDTO8 </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>The surface is 1-, 2-, or 4-bit color indexed to an 8-bit palette. </td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DDPF_RGB </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>The RGB data in the pixel format structure is valid. </td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DDPF_RGBTOYUV </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>The surface will accept RGB data and translate it during the write operation to YUV data. The format of the data to be written will be contained in the pixel format structure. The DDPF_RGB flag will be set. </td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DDPF_YUV </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>The YUV data in the pixel format structure is valid. </td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DDPF_ZBUFFER </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>The pixel format describes a z-buffer-only surface. </td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>DDPF_ZPIXELS </td>
</tr>
<tr valign=top>
<td width=10%></td>
<td width=90%>The surface is in RGBZ format. </td>
</tr>
</table><br>

</dd>
<dt>
<b>dwFourCC</b></dt>
<dd>
FourCC code. For more information see, <a href="ddref_93g7.htm">Four Character Codes (FOURCC)</a>.</dd>
<dt>
<b>dwRGBBitCount</b></dt>
<dd>
RGB bits per pixel (4, 8, 16, 24, or 32).</dd>
<dt>
<b>dwYUVBitCount</b></dt>
<dd>
YUV bits per pixel (4, 8, 16, 24, or 32)</dd>
<dt>
<b>dwZBufferBitDepth</b></dt>
<dd>
Z-buffer bit depth (8, 16, or 24). 32-bit z-buffers are not supported.</dd>
<dt>
<b>dwAlphaBitDepth</b></dt>
<dd>
<a href="glossary_2wc3.htm#_dx5_alpha_channel_glos">Alpha channel</a> bit depth (1, 2, 4, or 8).</dd>
<dt>
<b>dwRBitMask</b></dt>
<dd>
Mask for red bits.</dd>
<dt>
<b>dwYBitMask</b></dt>
<dd>
Mask for y bits.</dd>
<dt>
<b>dwGBitMask</b></dt>
<dd>
Mask for green bits.</dd>
<dt>
<b>dwUBitMask</b></dt>
<dd>
Mask for U bits.</dd>
<dt>
<b>dwBBitMask</b></dt>
<dd>
Mask for blue bits.</dd>
<dt>
<b>dwVBitMask</b></dt>
<dd>
Mask for V bits.</dd>
<dt>
<b>dwRGBAlphaBitMask</b> and <b>dwYUVAlphaBitMask</b></dt>
<dd>
Masks for <a href="glossary_2wc3.htm#_dx5_alpha_channel_glos">alpha channel</a>.</dd>
<dt>
<b>dwRGBZBitMask</b> and <b>dwYUVZBitMask</b></dt>
<dd>
Masks for z channel.
</dd>
</dl>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 4.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later. Available as a redistributable for Windows 95.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in ddraw.h.</p>
<p>&nbsp;</p></body>
</HTML>
