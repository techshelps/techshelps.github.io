<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Flipping Surfaces</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_dx5_flipping_surfaces_ddraw"></a>Flipping Surfaces</h3>
<p>
Any surface in DirectDraw can be constructed as a <a href="glossary_2ysz.htm#_dx5_flipping_surface_glos"><i>flipping surface</i></a>. A flipping surface is any piece of memory that can be swapped between a <a href="glossary_2ysz.htm#_dx5_front_buffer_glos"><i>front buffer</i></a> and a <a href="glossary_6wtv.htm#_dx5_back_buffer_glos"><i>back buffer</i></a>. (This construct is commonly referred to as a <a href="glossary_2ysz.htm#_dx5_flipping_chain_glos"><i>flipping chain</i></a>). Often, the front buffer is the <a href="glossary_33qr.htm#_dx5_primary_surface_glos">primary surface</a>, but it doesn't have to be.</p>
<p>
Typically, when you use the <a href="ddref_6v93.htm"><b>IDirectDrawSurface3::Flip</b></a> method to request a surface flip operation, the pointers to surface memory for the primary surface and back buffers are swapped. Flipping is performed by switching pointers that the display device uses for referencing memory, not by copying surface memory. (The exception to this is when DirectDraw is emulating the flip, in which case it simply copies the surfaces. DirectDraw emulates flip operations if a back buffer cannot fit into display memory or if the hardware doesn't support DirectDraw.) When a flipping chain contains a primary surface and more than one back-buffer, the pointers are switched in a circular pattern, as shown in the following illustration:</p>
<p>
<img src="images/trplflip.gif" border=0></p>
<p>
Other surfaces that are attached to a DirectDraw object, but not part of the flipping chain, are unaffected when the <b>Flip</b> method is called.</p>
<p>
Remember, DirectDraw flips surfaces by swapping surface memory pointers within DirectDrawSurface objects, not by swapping the objects themselves. This means that, to blit to the back buffer in any type of flipping scheme, you always use the same DirectDrawSurface object-the one that was the back buffer when you created the flipping chain. Conversely, you always perform a flip operation by calling the front surface's <b>Flip</b> method.</p>
<p>
When working with visible surfaces, such as a primary surface flipping chain or a visible overlay surface flipping chain, the <b>Flip</b> method is asynchronous unless you include the DDFLIP_WAIT flag. On these visible surfaces, the <b>Flip</b> method can return before the actual flip operation occurs in the hardware (because the hardware doesn't flip until the next vertical refresh occurs). While the actual flip operation is pending, the back buffer behind the currently visible surface can't be locked or blitted by calling the <a href="ddref_201j.htm"><b>IDirectDrawSurface3::Lock</b></a>, <a href="ddref_6ref.htm"><b>IDirectDrawSurface3::Blt</b></a>, <a href="ddref_8nqv.htm"><b>IDirectDrawSurface3::BltFast</b></a>, or <a href="ddref_4q0n.htm"><b>IDirectDrawSurface3::GetDC</b></a> methods. If you attempt to call these methods while a flip operation is pending, they will fail and return <a href="ddref_71rr.htm#_dx5_dderr_wasstilldrawing_ddraw">DDERR_WASSTILLDRAWING</a>. However, if you are using a triple buffered scheme, the rearmost buffer is still available.</p>
<p>&nbsp;</p></body>
</HTML>
