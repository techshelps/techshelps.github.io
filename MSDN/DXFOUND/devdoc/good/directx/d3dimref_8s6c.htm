<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Vector Dominance Operators (D3D_OVERLOADS)</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_dx5_vector_dominance_operators_d3d_overloads_d3d"></a>Vector Dominance Operators (D3D_OVERLOADS)</h1>
<p>
These binary operators are overloaded operators for the D3D_OVERLOADS extensions. Vector v1 dominates vector v2 if any component of v1 is greater than the corresponding component of v2. Therefore, it is possible for neither of the two specified vectors to dominate the other.</p>
<pre><code>int operator &lt; (const _D3DVECTOR&amp; v1, const _D3DVECTOR&amp; v2);
int operator &lt;= (const _D3DVECTOR&amp; v1, const _D3DVECTOR&amp; v2);
 </code></pre>
<p>
The vector-dominance operators are defined as follows:</p>
<pre><code>inline int
operator &lt; (const _D3DVECTOR&amp; v1, const _D3DVECTOR&amp; v2)
{
   return v1[0] &lt; v2[0] &amp;&amp; v1[1] &lt; v2[1] &amp;&amp; v1[2] &lt; v2[2];
}

inline int
operator &lt;= (const _D3DVECTOR&amp; v1, const _D3DVECTOR&amp; v2)
{
   return v1[0] &lt;= v2[0] &amp;&amp; v1[1] &lt;= v2[1] &amp;&amp; v1[2] &lt;= v2[2];
}
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
