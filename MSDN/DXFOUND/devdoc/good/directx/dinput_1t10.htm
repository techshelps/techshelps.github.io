<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IDirectInputDevice::Initialize</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_dx5_idirectinputdevice_initialize_dinput"></a>IDirectInputDevice::Initialize</h1>
<p>
The <b>IDirectInputDevice::Initialize</b> method initializes a DirectInputDevice object. The <a href="dinput_4jw4.htm"><b>IDirectInput::CreateDevice</b></a> method automatically initializes a device after creating it; applications normally do not need to call this method.</p>
<pre><code><b>HRESULT Initialize(
  HINSTANCE</b><i> hinst</i><b>,  </b>
<b>  DWORD</b><i> dwVersion</i><b>,  </b>
<b>  REFGUID</b><i> rguid     </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hinst</i></dt>
<dd>
Instance handle to the application or DLL that is creating the DirectInput device object. DirectInput uses this value to determine whether the application or DLL has been certified and to establish any special behaviors that may be necessary for backwards compatibility.
<p>
It is an error for a DLL to pass the handle of the parent application. For example, an ActiveX control embedded in a Web page that uses DirectInput must pass its own instance handle and not the handle of the web browser. This ensures that DirectInput recognizes the control and can enable any special behaviors that may be necessary.
</dd>
<dt>
<i>dwVersion</i></dt>
<dd>
Version number of DirectInput for which the application is designed. This value will normally be DIRECTINPUT_VERSION. Passing the version number of a previous version will cause DirectInput to emulate that version. For more information, see <a href="dinput_8gfo.htm">Designing for Previous Versions of DirectInput</a>.</dd>
<dt>
<i>rguid</i></dt>
<dd>
Identifier for the instance of the device for which the interface should be associated. The <a href="dinput_41x0.htm"><b>IDirectInput::EnumDevices</b></a> method can be used to determine which instance GUIDs are supported by the system.
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the method succeeds, the return value is DI_OK or S_FALSE.</p>
<p>
If the method fails, the return value may be one of the following error values:</p>
<table cellspacing=4 cols=1>
<tr valign=top>
<td width=100%><a href="dinput_7yk4.htm#_dx5_dierr_acquired_dinput">DIERR_ACQUIRED</a> </td>
</tr>
<tr valign=top>
<td width=100%><a href="dinput_7yk4.htm#_dx5_dierr_devicenotreg_dinput">DIERR_DEVICENOTREG</a> </td>
</tr>
</table><br>
<p>
If the method returns S_FALSE, the device had already been initialized with the instance GUID passed in though <i>rGUID</i>.</p>
<h4>Remarks</h4>
<p>
If this method fails, the underlying object should be considered to be in an indeterminate state and must be reinitialized before use.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later. Available as a redistributable for Windows 95.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in dinput.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use dinput.lib.</p>
<p>&nbsp;</p></body>
</HTML>
