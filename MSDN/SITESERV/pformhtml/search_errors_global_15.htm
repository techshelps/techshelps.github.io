<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Examples of Use</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css">
<br>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="sr_examples_of_use"></a>Examples of Use</h1>
<p>
<b>C++</b></p>
<p>
The following C++ example demonstrates typical use of the Search custom failure HRESULT values.&nbsp; Note the use of the "bit mask" in the failure check.&nbsp; Checking the HRESULT for the FACILITY_ITF notifies the calling application that the interface has prepared the <b>ErrorInfo</b> object itself to communicate the exception.&nbsp; In most cases, this implies that some logic or operation related directly to the object has failed in some fashion. (e.g. not initializing the object or failure to pass necessary info before invoking a particular method, etc)&nbsp; This is in contrast to standard Win32 or COM HRESULT values such as E_FAIL or E_UNEXPECTED, which convey little information about the exception source.&nbsp; </p>
<p>
If simply displaying the source and description of the error to a user in say an interactive setting is desired, the bit mask check can be removed, and the information retrieved for the exception, regardless of the source.&nbsp; The code below is very routine.</p>
<pre><code>HRESULT hR = pISearchObject-&gt;SomeMethod( … );
if (FAILED(hR)) {
   ISupportErrorInfo *psei = 0;
   HRESULT hR2 = pISearchObject-&gt;QueryInterface( IID_ISupportErrorInfo,
                                                (void**)&amp;psei );
   if( SUCCEEDED(hR2)) {
      hR2 = psei-&gt;InterfaceSupportsErrorInfo(IID_ISearchInterface);
      if ( hR2 == S_OK ) {
         IErrorInfo *pei = 0;
         hR2 = GetErrorInfo(0, &amp;pei);
         if ( hR2 == S_OK ) {
            BSTR Source = 0;
            BSTR Description = 0;
            hR2 = pei-&gt;GetSource(&amp;Source);
            assert(SUCCEEDED(hR2));
            hR2 = pei-&gt;GetDescription(&amp;Description);
            assert(SUCCEEDED(hR2));

            /*&nbsp; deal with this info, such as MessageBoxW, etc.. */
            SysFreeString(&amp;Source);
            SysFreeString(&amp;Description);
         }
      }
      psei-Release();
   }
   /*&nbsp; try FormatMessage or something as the error was 
    &nbsp;&nbsp;&nbsp; not designated as interface specific */
   void* pMsgBuf;
   ::FormatMessage(..,..,hR,..,(LPTSTR)pMsgBuf,0,NULL);
}
   




</code></pre>
<p>
<b>VB/VBScript</b></p>
<p>
In Visual Basic or Visual Basic, Scripting Edition, the <b>Err</b> object is automatically populated with the COM exception information when a COM method invocation returns a failed HRESULT value.&nbsp; The code is very similar to the C++ code listed above:</p>
<pre><code>Dim MyObject as ISearchAdmin
Set ISearchInterfaces = new SearchAdmin
…
On Error Resume Next
Set SearchServer = ISearchAdmin.SearchServer
… ' code omitted for brevity

If Err.Number &lt;&gt; 0 and&nbsp; ( (Err.Number And Hex(0x7fff0000)) = Hex(0x00040000) )
   ' take some appropriate action
   '&nbsp; in this case, we simply display the error info
   Debug.Print Err.Source
   Debug.Pring Err.Description
End If</code></pre>
<!-----------------------------Copyright 1997-1998 Microsoft Corporation------------------------------>
<hr>
<center><font size=-1>
<A HREF="sdklegal.htm">&copy; 1997-1998 Microsoft Corporation. All rights reserved.</A>
</font></center>
<br>
<br>
</BODY>
</HTML>
