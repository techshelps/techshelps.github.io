<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CoClass UserObjects Interface IDispatch</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css">
<br>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="pm_class_userobjects_interface_idispatch"></a>Interface IDispatch</h1>
<p>
<b>A Note about IDispatch</b></p>
<p>
When programmers request the storage and retrieval of properties using the <b>IADs</b> interface method through the IDispatch interface on an instance of the <b>UserObjects </b>class or an ADSI object, they can use a special syntax.&nbsp; Normally, properties and methods defined for an object must be implemented before <i>compile time</i>.&nbsp; That is, if an object has a public property called "Name" then the corresponding methods to get and put the value of this property are implemented as part of the coding of the object before it is compiled.&nbsp; The ADSI objects, (and the <b>UserObjects</b> object), however, support the notion of <i>dynamic properties</i> through the <b>IDispatch</b> interface.&nbsp; What this means is that programmers can request properties in the object that can change dynamically at runtime.&nbsp;&nbsp; A programmer can bypass using the "<b>Get/GetEx</b>" and "<b>Set/SetEx</b>" methods, which are static, and simply refer to the desired property <i>as if it belonged to the object</i>.&nbsp; For VBScript script programmers, this presents a much less cumbersome syntax, since all method and property calls act via the <b>IDispatch</b> interface.</p>
<p>
<b>Example:</b></p>
<p>
Static sytax (clear)</p>
<pre><code>UserObjects.Get("givenName")</code></pre>
<p>
Dynamic property syntax (may be confusing, but is easy)</p>
<pre><code>UserObjects.givenName</code></pre>
<p>
Both of these calls would return the same property from the directory service.</p>
<p class=indent>
<b>CAUTION</b>&nbsp;&nbsp;&nbsp;When using the dynamic property syntax, one must be careful to avoid name collisions with <i>bona fide</i> properties of the object.&nbsp; These "real" properties of the object always take precedence over data fetched from a directory service.&nbsp; For example, any directory service properties with the names "GUID," "Parent," or "Name" would conflict since these names are used to store information about the object itself, and <i>must</i> be returned when requested.&nbsp; In such cases, one <i>must</i> use the "Get" and "Set" methods for these properties.</p>
<!-----------------------------Copyright 1997-1998 Microsoft Corporation------------------------------>
<hr>
<center><font size=-1>
<A HREF="sdklegal.htm">&copy; 1997-1998 Microsoft Corporation. All rights reserved.</A>
</font></center>
<br>
<br>
</BODY>
</HTML>
