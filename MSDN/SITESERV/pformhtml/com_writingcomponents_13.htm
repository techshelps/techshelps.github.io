<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Implementing the Property Page</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css">
<br>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h3><a name="com_writingcomponents_soxq"></a>Implementing the Property Page</h3>
<p>
In <a href="com_writingcomponents_12.htm">Adding the Property Page</a>, you used the Microsoft® Visual C++® user interface to add a property page to the <b>MinMaxShip</b> project. This task also involved creating the controls for the <b>MinMaxShip</b> component’s properties on the default dialog box that Visual C++ created for you.</p>
<p>
When you add a property page to a project, Visual C++ creates the class definition and implementation files for the class that is intended to manage your property page. The class definition and implementation for the MinMaxShip project’s property pages appears in the MinMaxShipPropPg.h and MinMaxShipPropPg.cpp files, respectively. </p>
<p>
The MinMaxShipPropPg.h file contains the definition for the CMinMaxShipPropPg class. This class inherits from the <b>IPropertyPagesImpl</b> interface, which supports default implementations of the <b>Apply</b> and <b>Activate</b> methods. The <b>Activate</b> method is called by the Win32®-based Pipeline Editor when the property pages for a component are displayed. The <b>Apply</b> method is called when the user clicks the <b>Apply</b> button. Implementing a property page generally involves overriding the default implementation of these two methods.</p>
<p>
If you open CMinMaxPropPg.h, and you see the following stub implementation of the <b>Apply</b> method:</p>
<pre><code>    STDMETHOD(Apply)(void)
    {
        ATLTRACE(_T("CMinMaxPropPg::Apply\n"));
        for (UINT i = 0; i &lt; m_nObjects; i++)
        {
            // Do something interesting here
            // ICircCtl* pCirc;
            // m_ppUnk[i]-&gt;QueryInterface(IID_ICircCtl, (void**)&amp;pCirc);
            // pCirc-&gt;put_Caption(CComBSTR("something special"));
            // pCirc-&gt;Release();
        }
        m_bDirty = FALSE;
        return S_OK;
    }</code></pre>
<p>
};</p>
<p>
To implement this method for the MinMaxShip component, replace this implementation of <b>Apply</b> with the following:</p>
<pre><code>STDMETHODIMP (Apply)(void)
{

    HRESULT hRes = S_OK;
    ATLTRACE(_T("CMinMaxPropPg::Apply()"));
    CComBSTR bstrMinShipping;
    CComBSTR bstrPercentage;

    VariantInit(&amp;varbstrMinShipping);
    VariantInit(&amp;varbstrPercentage);
    VariantInit(&amp;varMinShipping);
    VariantInit(&amp;varPercentage);


    for(UINT i = 0; i &lt; 1; i++){

    ComQIPtr&lt;IMinMaxShipping,     &amp;IID_IMinMaxShipping&gt;pMinMaxShipping(m_ppUnk[i]);

    GetDlgItemText(IDC_MINSHIPPING, bstrMinShipping.m_str);
    GetDlgItemText(IDC_PERCENTAGE, bstrPercentage.m_str);

    V_BSTR(&amp;varbstrMinShipping) = SysAllocString(bstrMinShipping.m_str);
    V_VT(&amp;varbstrMinShipping) = VT_BSTR;

    V_BSTR(&amp;varbstrPercentage) = SysAllocString(bstrPercentage.m_str);
    V_VT(&amp;varbstrPercentage) = VT_BSTR;

    hRes = VariantChangeType(&amp;varMinShipping, &amp;varbstrMinShipping, 0,                     VT_I4);

    if(FAILED(hRes))
        return hRes;
        
    hRes = VariantChangeType(&amp;varPercentage, &amp;varbstrPercentage, 0,                         VT_R4);

    if(FAILED(hRes))
        return hRes;

    pMinMaxShipping-&gt;put_MinShipping(varMinShipping.lVal);
    pMinMaxShipping-&gt;put_Percentage(varPercentage.fltVal);

    VariantClear(&amp;varbstrPercentage);
    VariantClear(&amp;varbstrMinShipping);
    VariantClear(&amp;varMinShipping);
    VariantClear(&amp;varPercentage);

}

    m_bDirty = FALSE;
    return S_OK;
}
</code></pre>
<p>
The sole purpose of this <b>Apply</b> implementation is to retrieve the values that the user has typed in the dialog box controls that you created in <a href="com_writingcomponents_12.htm">Adding the Property Page</a>, and to write them to the variables in which MinMaxShip stores its property values.</p>
<p>
To do this, the code retrieves the new property settings from the dialog box, gets an interface pointer on the component’s <b>IMinMaxShipping</b> implementation, and uses this pointer to call the <b>put_MinShipping</b> and <b>put_Percentage</b> methods that you implemented in <u>Step 3:  Adding Properties</u>com_writingcomponents_RHDQ.</p>
<p>
When you implement the <b>Activate</b> method, you simply perform the same operation in reverse:  that is, you use the <b>get_MinShipping </b>and <b>get_Percentage </b>methods to write the component’s properties to local variables, and you display these variable values in the appropriate property page dialog box controls.</p>
<h5>Note</h5>
<p>
Because most components can simply use <b>IPropertyPagesImpl</b>’s default implementation of <b>Activate</b>, Visual C++ does not include a stub implementation of this method in your property pages class when you add the property page to your project. You must add the entire method implementation yourself.</p>
<p>
Here is the <b>MinMaxShip</b> component’s <b>Activate</b> implementation.</p>
<pre><code>STDMETHODIMP (Activate)(HWND hWndParent, LPCRECT pRect, BOOL fModal)
{
    
HRESULT hRes = IPropertyPageImpl&lt;CMinMaxPropPg&gt;::Activate(hWndParent,     pRect, fModal);
    
if(SUCCEEDED(hRes)){

    ATLTRACE(L"Created object");
    CComQIPtr&lt;IMinMaxShipping,                                                     &amp;IID_IMinMaxShipping&gt;pMinMaxShipping(m_ppUnk[0]);

    VariantInit(&amp;varMinShipping);
    VariantInit(&amp;varPercentage);
    VariantInit(&amp;varbstrMinShipping);
    VariantInit(&amp;varbstrPercentage);

    pMinMaxShipping-&gt;get_MinShipping(&amp;m_lMinShipping);
    pMinMaxShipping-&gt;get_Percentage(&amp;m_fPercentage);

    V_I4(&amp;varMinShipping) = m_lMinShipping;
    V_VT(&amp;varMinShipping) = VT_I4;

    V_R4(&amp;varPercentage) = m_fPercentage;
    V_VT(&amp;varPercentage) = VT_R4;

    hRes = VariantChangeType(&amp;varbstrMinShipping, &amp;varMinShipping, 0,                 VT_BSTR);

    if(FAILED(hRes))
        return hRes;

    hRes = VariantChangeType(&amp;varbstrPercentage, &amp;varPercentage, 0,                 VT_BSTR);
    ATLTRACE(varbstrPercentage.bstrVal);

    if(FAILED(hRes))
        return hRes;

    SetDlgItemText(IDC_MINSHIPPING, varbstrMinShipping.bstrVal);
    SetDlgItemText(IDC_PERCENTAGE, varbstrPercentage.bstrVal);

    VariantClear(&amp;varbstrMinShipping);
    VariantClear(&amp;varbstrPercentage);
    VariantClear(&amp;varPercentage);
    VariantClear(&amp;varMinShipping);

    }

    return S_OK;
}
</code></pre>
<p>
Next, you need to include a handler that Microsoft® Windows NT® can notify when the user modifies a value in the property page.</p>
<pre><code>LRESULT OnChange(WORD wNotify, WORD wID, HWND hWnd, BOOL&amp; bHandled);
</code></pre>
<p>
The <b>OnChange </b>handler is not a member of <b>IPropertyPageImpl</b>. It is included to track the state of the controls in the property page. To enable this handler, add the following entry to the message map for the MinMaxPropPg class:</p>
<pre><code>BEGIN_MSG_MAP(CMinMaxPropPg)
COMMAND_RANGE_HANDLER(IDC_MINSHIPPING, IDC_PERCENTAGE, OnChange);
CHAIN_MSG_MAP(IPropertyPageImpl&lt;CMinMaxPropPg&gt;)
END_MSG_MAP()
</code></pre>
<p>
When the user changes a value in one of the edit controls on the dialog box previously displayed, Windows NT will invoke this handler. It is then appropriate to call the <b>IPropertyPageImpl </b>template's <b>SetDirty </b>method, as follows, in the <b>CMinMaxPropPg</b> implementation file:</p>
<pre><code>LRESULT CMinmaxPropPg::OnChange(WORD wNotify, WORD wID, HWND hWnd, BOOL&amp; bHandled)
{ 
    if (wNotify == EN_CHANGE)
        SetDirty(TRUE);
    return 0;
}
</code></pre>
<p>
Finally, because the methods defined in the property page class need to access the properties of the component class (<b>CMinMaxShip</b>), you should add a reference to MinMaxShip.h in the MinMaxPropPg.h file that defines the property page class.</p>
<pre><code>#include MinMaxShip.h
</code></pre>
<!-----------------------------Copyright 1997-1998 Microsoft Corporation------------------------------>
<hr>
<center><font size=-1>
<A HREF="sdklegal.htm">&copy; 1997-1998 Microsoft Corporation. All rights reserved.</A>
</font></center>
<br>
<br>
<p>&nbsp;</p></body>
</HTML>
