<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Encryption and Digital Signing</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css">
<br>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="com_cic_fxpy"></a><sup></sup>Encryption and Digital Signing</h2>
<p>
Once the Transport Dictionary emerges from the Add Header stage, it contains all the data required for transmission. Usually, to ensure the secure transmission of this data, you will want also to encrypt and/or digitally sign the data. Alternatively, you may want to MIME-encode or S/MIME encode the data.</p>
<p>
You can approach the encryption of the <code>working</code>_<code>data</code> in one of numerous ways, depending usually on the type of business data you are sending, the level of security you need.</p>
<p>
The Digitally Sign stage contains the <b>DigitalSig</b> component, which uses a sender certificate to sign either the working data, a hash of the working data, or both the data and the hash, using the Public Key Crypto System 7 (PKCS7) standard.</p>
<p>
The Encrypt stage contains the <b>EncryptPKCS</b> component, which uses a receiver certificate to encrypt the business data object into a PKCS7 message.</p>
<p>
The Add Header stage usually contains the <b>EncodeMIME</b> stage, while both the Digitally Sign and the Encrypt stages can contain the  <b>EncodeSMIME</b> component. The <b>EncodeMIME</b> component supports MIME-encoding (Base-64 or Quoted Printable). The <b>EncodeSMIME</b> component uses certificates to MIME-encode, digitally sign, and/or encrypt the business data object in accordance with the S/MIME specification.</p>
<p>
The Receive pipeline contains the Decrypt and Verify Digital Signature and stages. These stages contain components that perform the reverse of their counterparts in the transmit pipeline.</p>
<p>
The Verify Digital Signature stage, for example, contains the <b>VerifyDigitalSig</b> component, which uses the sender’s certificate to verify the digital signature on the business data object. The Encrypt stage contains the <b>DecryptPKCS</b> component, which uses the receiver certificate to decrypt the business data object.</p>
<p>
When designing a transmit or receive pipeline, you can use virtually any combination of these components to secure the business data object. However, the following general considerations apply.</p>
<p>
The design of your pipeline must be mirrored on the receiving side. For example, if you include the <b>EncodeSMIME</b> component in a transmit pipeline, the receive pipeline must contain a <b>DecodeSMIME</b> component. If your transmit pipeline contains a <b>DigitalSig</b> component, the receiving pipeline must contain a <b>VerifyDigitalSig</b> component.</p>
<p>
Because most of the components in the Encrypt/Decrypt and Digitally Sign/Verify Digital Signature stages rely on certificates, you must also manage the exchange of these certificates with your trading partners, and must use the Certificate Management Tool to install the appropriate certificates on your system. If you include a <b>DigitalSig</b> component in your transmit pipeline, you must provide your trading partner with this certificate for use by the <b>VerifyDigitalSig</b> component in the receive pipeline. To use the <b>EncryptPKCS</b> component in your transmit pipeline, you must obtain a certificate from your trading partner (see <a href="com_cic_15.htm">Certificates</a>).</p>
<p>
Finally, because the encryption and digital signature components can be configured to use specific algorithms to perform their work, you must coordinate with your trading partners to ensure that the algorithm with which you choose to encrypt or digitally sign the business data object is available also on the receiving system.</p>
<!-----------------------------Copyright 1997-1998 Microsoft Corporation------------------------------>
<hr>
<center><font size=-1>
<A HREF="sdklegal.htm">&copy; 1997-1998 Microsoft Corporation. All rights reserved.</A>
</font></center>
<br>
<br>
<p>&nbsp;</p></body>
</HTML>
