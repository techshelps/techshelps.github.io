<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the Error Object</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css">
<br>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="com_writingcomponents_yvpt"></a><sup></sup>Using the Error Object</h2>
<p>
The pipeline returns an error message to the browser when a component fails (for example, if the <b>Scriptor</b> component is configured with a non-existent script). When writing a component, you should provide a descriptive error message that is displayed if the component fails for any reason. Because there is only one <b>ERROR</b> object per thread, you should always attempt to obtain the existing object and append your error description to that object before creating a new object. If the call to <b>GetErrorInfo</b> fails, no <b>ERROR</b> object has been created and you can then call <b>CreateErrorInfo</b>. For example:</p>
<pre><code>ICreateErrorInfo*    pCErrInfo = NULL;
IErrorInfo*            pErrInfo = NULL;
HRESULT                hr = S_OK;
BSTR                    oldError = 0;
BSTR                    newError = 0;

if (GetErrorInfo(0, &amp;pErrInfo) == S_OK) {

    hr = pErrInfo-&gt;GetDescription(&amp;oldError);
    if (FAILED(hr)) goto error;

    newError = appendError(szDescription, oldError);

    pErrInfo-&gt;Release();
}
else {    // Call to GetErrorInfo failed
    newError = SysAllocString(szDescription);
}

hr = CreateErrorInfo(&amp;pCErrInfo);
if (FAILED(hr)) goto error;

hr = pCErrInfo-&gt;QueryInterface(IID_IErrorInfo, (LPVOID FAR*) &amp;pErrInfo);
if (FAILED(hr)) goto error;

hr = pCErrInfo-&gt;SetDescription(newError);
if (FAILED(hr)) goto error;

hr = pCErrInfo-&gt;SetGUID(riidCurrentInterface);
if (FAILED(hr)) goto error;

hr = pCErrInfo-&gt;SetHelpContext(dwHelpContext);
if (FAILED(hr)) goto error;

if (szHelpFile) {
    hr = pCErrInfo-&gt;SetHelpFile((LPOLESTR)szHelpFile);
    if (FAILED(hr)) goto error;
} else {
    hr = pCErrInfo-&gt;SetHelpFile( L"" );
    if (FAILED(hr)) goto error;
}

hr = pCErrInfo-&gt;SetSource((LPOLESTR)szSource);
if (FAILED(hr)) goto error;

// Set the structure
hr = SetErrorInfo(0, pErrInfo);

error:

if(pErrInfo) pErrInfo-&gt;Release();
if(pCErrInfo) pCErrInfo-&gt;Release();

static BSTR appendError(LPCWSTR newError, LPCWSTR oldError)
{
BSTR errorList;

LPOLESTR sep = L"\r\n";
int len = wcslen((LPWSTR)newError) +
    wcslen(sep) +
    SysStringLen((LPWSTR)oldError) + 1;
errorList = SysAllocStringLen(0, len);

wcscpy(errorList, (LPWSTR)newError);
wcscat(errorList, L"\n\r");
wcscat(errorList, (LPWSTR)oldError);
return errorList;
}
</code></pre>
<h4>Related Topics</h4>
<p>
For more information, search for the following topics in MSDN:
<ul>
<li>
&upsilon;<b>ICreateErrorInfo</b></li>
<li>
&upsilon;<b>IErrorInfo</b></li>
<li>
&upsilon;<b>CreateErrorInfo</b></li>
<li>
&upsilon;<b>GetErrorInfo</b></li>
<li>
&upsilon;<b>SetErrorInfo</b></li>
</ul>
<!-----------------------------Copyright 1997-1998 Microsoft Corporation------------------------------>
<hr>
<center><font size=-1>
<A HREF="sdklegal.htm">&copy; 1997-1998 Microsoft Corporation. All rights reserved.</A>
</font></center>
<br>
<br>
<p>&nbsp;</p></body>
</HTML>
