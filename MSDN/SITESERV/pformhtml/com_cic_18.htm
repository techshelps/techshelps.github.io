<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Microsoft Transaction Server and the Commerce Interchange Pipeline</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css">
<br>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="com_cic_iifs"></a><sup></sup>Microsoft Transaction Server and the Commerce Interchange Pipeline</h2>
<p>
A Microsoft® Transaction Server (MTS) transaction is a unit of work that is performed as an atomic operation. In the Active Server Pages (ASP) environment, transactions occur on a per-page level. To mark an ASP as one that requires a transaction, you include the following script at the top of the page:</p>
<pre><code>&lt;%@ LANGUAGE=VBScript Transaction=Required%&gt;
</code></pre>
<p>
When you mark a page as transacted, all of the work that occurs on that page becomes part of the same transaction context. The objects that are created on the page, and the work performed by those objects, become part of that transaction context, provided that those objects are registered on the server system as MTS components. In the event of an error, the work performed by those objects can be rolled back, and the objects rendered stateless.</p>
<p>
Suppose, for example, that you create a page that includes an object that uses the Active Data Objects (ADO) to insert or update data in a database. In the event that this component fails, you can call the MTS <b>ObjectContext</b> object’s <b>SetAbort</b> method to abort the transaction in which that object participates, and all of the modifications made by the object to the database are rolled back.</p>
<p>
<img src="cic_mts.gif" alt="Commerce Interchange Pipelines and Microsoft Transaction Server" border=0></p>
<p>
Neither SMTP nor HTTP are transacted protocols. Therefore, an MTS-based transaction cannot pass over these protocols. A CIP that uses the <b>SendSMTP</b> or <b>SendHTTP</b> components can create transactions that span the transmit side and the receive side respectively, but that do not span the Internet protocol used. Instead, there is one transaction context on the transmit side and another transaction context on the receive side.  DCOM, however, is a protocol that supports MTS, and thus a single transaction context can span both the transmit and receive sides of the CIP.</p>
<!-----------------------------Copyright 1997-1998 Microsoft Corporation------------------------------>
<hr>
<center><font size=-1>
<A HREF="sdklegal.htm">&copy; 1997-1998 Microsoft Corporation. All rights reserved.</A>
</font></center>
<br>
<br>
<p>&nbsp;</p></body>
</HTML>
