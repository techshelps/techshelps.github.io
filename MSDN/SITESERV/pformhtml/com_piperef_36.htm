<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PipeToPipeTransfer</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css">
<br>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="com_tools_rhjh"></a><sup></sup>PipeToPipeTransfer</h2>
<p>
The <b>PipeToPipeTransfer</b> component initializes and executes a remote pipeline to receive the Transport Dictionary from the current pipeline. Control then returns to the initial pipeline.
<ul>
<li>
&upsilon;<b>Calling Pipeline Object</b>. Specifies the type of object that is to be passed to the remote pipeline.<ul>
<li>
&upsilon;<b>Root Object</b>. Specifies that the object that is to be transferred is a root object. This means that the object is either an order form (being transferred from an order processing pipeline) or a Transport Dictionary (being transferred from a Commerce Interchange Pipeline).</li>
<li>
&upsilon;<b>Child Object</b>. Specifies that the object being transferred is a child object. This means that the object is a Commerce Interchange Pipeline business data object, which is a child object of the Transport Dictionary.</li>
</ul>
</li>
<li>
&upsilon;<b>Receiving Pipeline Object</b>. Specifies the type of object that the receiving pipeline will create to store the received data.<ul>
<li>
&upsilon;<b>Root Object</b>. Specifies that the object is a root object; either an order form (for use in an order processing pipeline) or a Transport Dictionary (for use in a Commerce Interchange Pipeline).</li>
<li>
&upsilon;<b>Child Object</b>. Specifies that the object is a child object; a business data object, which is a child object of the Transport Dictionary (for use in a Commerce Interchange Pipeline).</li>
<li>
&upsilon;<b>Child’s Parent Data Type</b>. Specifies whether the data type of the parent object is a <b>Dictionary</b> or an <b>OrderForm</b>.</li>
</ul>
</li>
<li>
&upsilon;<b>Receiving Pipeline Information</b>. Specifies the pipeline configuration file and the type of pipeline object.<ul>
<li>
&upsilon;<b>Pipeline Configuration Filename</b>. Specifies the full path to the .pcf file used for initializing the receiving pipeline. To locate the .pcf file, click <b>Browse</b>.</li>
<li>
&upsilon;<b>Pipeline Type</b>. Specifies the type of pipeline object used for the receiving pipeline. </li>
<li>
&upsilon;<a href="com_compref_183.htm"><b>OrderPipeline</b></a>. Specifies that the receiving pipeline is to be an <b>OrderPipeline</b> object, which is not registered under Microsoft® Transaction Server (MTS), and is generally used only for backward compatibility with sites created in Commerce Server 2.0.</li>
<li>
&upsilon;<a href="com_compref_85.htm"><b>MtsPipeline</b></a>. Specifies that the receiving pipeline is to be an <b>MtsPipeline</b> object, which is registered under MTS as <i>transactions not supported</i>. This pipeline is used in situations where transactions are not desired.</li>
<li>
&upsilon;<a href="com_compref_90.htm"><b>MtsTxPipeline</b></a>. Specifies that the receiving pipeline is to be an <b>MtsTxPipeline</b> object, which is registered under MTS as <i>transactions required</i>. This pipeline holds a transaction across all components in the pipeline configuration.</li>
</ul>
</li>
</ul>
<h4>Example</h4>
<p>
Suppose that you want to pass an <b>OrderForm</b> from an OPP to a CIP, so that the Transport Dictionary that is passed through the CIP will have an <code>Object</code> name/value pair that references the <b>OrderForm</b>.</p>
<p>
To do this, you would select <b>Root Object</b> as the <b>Calling Pipeline Object</b> (indicating that the entire <b>OrderForm</b> is to be transferred), <b>Child Object</b> as the <b>Receiving Pipeline Object</b> (indicating that the <b>OrderForm</b> will be the child of the object to which it is transferred. Next, you would type <code>Object</code> into the into the <b>Child Object</b> textbox, and select <b>Dictionary</b> as the <b>Child’s Parent Data Type</b>.</p>
<p>
This combination of options results in the creation of a <b>Dictionary</b> with an <code>Object</code> name/value pair. This name/value pair references the <b>OrderForm</b>.</p>
<!-----------------------------Copyright 1997-1998 Microsoft Corporation------------------------------>
<hr>
<center><font size=-1>
<A HREF="sdklegal.htm">&copy; 1997-1998 Microsoft Corporation. All rights reserved.</A>
</font></center>
<br>
<br>
<p>&nbsp;</p></body>
</HTML>
