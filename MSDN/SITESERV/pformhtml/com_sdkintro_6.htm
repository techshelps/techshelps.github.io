<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Special Considerations for Visual Basic Pipeline Components</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css">
<br>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h3><a name="com_writingcomponents_psrr"></a>Special Considerations for Visual Basic Pipeline Components</h3>
<p>
The components that are included in Commerce Server 3.0 are free-threaded components. Visual Basic supports the creation of apartment-threaded components, but does not support the creation of free-threaded components.</p>
<p>
Consequently, if you use Visual Basic to create components for either of the Commerce Server pipeline architectures, you should keep the following in mind:</p>
<p>
If you include the component in a pipeline you load using the <b>OrderPipeline</b> object, and if you make this object globally available, your component will work as expected. This is because the <b>OrderPipeline</b> object checks the threading model of each component at load-time to determine how to marshal that component’s data.</p>
<p>
For performance reasons, however, this checking is not performed by the <b>MtsOrderPipeline</b> or <b>MtsTxOrderPipeline</b> objects, objects that are generally created on a per-page basis. For <b>MtsOrderPipeline</b> or <b>MtsTxOrderPipeline</b> objects that you create on a page, this has no bearing on the proper functioning of Visual Basic pipeline components.</p>
<p>
However, including such components in an <b>MtsOrderPipeline</b> or <b>MtsTxOrderPipeline</b> object that you make globally available (via the Application object, for example) is unsupported behavior. If you must include a Visual Basic component in a globally available pipeline object instance, you must use the <b>OrderPipeline</b> object to load and execute that pipeline. </p>
<!-----------------------------Copyright 1997-1998 Microsoft Corporation------------------------------>
<hr>
<center><font size=-1>
<A HREF="sdklegal.htm">&copy; 1997-1998 Microsoft Corporation. All rights reserved.</A>
</font></center>
<br>
<br>
<p>&nbsp;</p></body>
</HTML>
