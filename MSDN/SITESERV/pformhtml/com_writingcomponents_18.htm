<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Step Eight: Registering the Component</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css">
<br>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="com_writingcomponents_shvp"></a>Step Eight: Registering the Component</h2>
<p>
Pipeline component registration involves identifying the component as a pipeline component, identifying the stage or stages with which the component has an affinity, and optionally registering its name and threading model.</p>
<p>
Each stage in the pipeline is identified by a globally unique identifier (GUID). GUIDs are defined in the pipe_stages.h file, which you include in the implementation file in which you are registering a component.</p>
<p>
To identify the stage or stages with which a component has an affinity, you write the new component's class ID to the \HKEY_CLASSES_ROOT\CLSID\<i>component_classid</i>\implemented categories\<i>stage_clsid</i> key win the Microsoft® Windows NT® Registry, where <i>stage_class_id</i> is the GUID of the stage with which the component will have an affinity, and where <i>component_class_id</i> is the class ID of the component itself.</p>
<p>
The code with which you register your component should be invoked in the <b>DLLRegisterServer </b>routine that is created for you when you create the component project in Microsoft® Visual C++®.</p>
<p>
The <b>MinMaxShip</b> sample component uses a function called <b>RegisterCATID</b> to register the <b>MinMaxShip </b>component as a pipeline component, and to identify the stage with which the component has an affinity. The <b>RegisterCATID</b> function is defined in computil.h, and is implemented in <b>MinMaxShip </b>computil.cpp file. Both of these files are included in the Microsoft® Commerce Server version 3.0 Software Development Kit (SDK). </p>
<p>
To use the <b>RegisterCATID</b> function to register your component, simply copy these files into your component's project directory, and add the computil.cpp file to your project.</p>
<p>
The following code, from the <b>MinMaxShip</b> sample component illustrates how to call <b>RegisterCATID</b>. This code registers <b>MinMaxShip </b>as a pipeline component, and then associates the component with the OPP’s <b>Accept</b> stage:</p>
<pre><code>hr = RegisterCATID(CLSID_MinMaxShipping, CATID_MSCSPIPELINE_COMPONENT);

if(FAILED(hr))
    return hr;

hr = RegisterCATID(CLSID_MinMaxShipping, CATID_MSCSPIPELINE_SHIPPING);

if(FAILED(hr))
    return hr;

</code></pre>
<!-----------------------------Copyright 1997-1998 Microsoft Corporation------------------------------>
<hr>
<center><font size=-1>
<A HREF="sdklegal.htm">&copy; 1997-1998 Microsoft Corporation. All rights reserved.</A>
</font></center>
<br>
<br>
<p>&nbsp;</p></body>
</HTML>
