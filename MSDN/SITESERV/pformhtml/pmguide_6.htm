<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Configuring the AUO</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css">
<br>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="pm_guide_configuring_the_auo"></a>Configuring the AUO</h1>
<p>
The following code examples demonstrate how to configure the Active User Object (AUO) system for our new Membership Server instance.&nbsp; In this case, we will configure both the default provider as well as add another <i>named </i>provider with the name "Other."&nbsp; </p>
<h2>C++</h2>
<p>
This example demonstrates the process of creating and using the <b>AuoConfig</b> coclass in a C++ program.&nbsp; This class and associated COM interfaces are defined within the IDL file <code>auo.idl</code>.&nbsp; </p>
<p>
Create the project directory for the C++ source code.&nbsp; The header files and GUID definitions are required, so we run the MIDL compiler on an appropriate interface definition language&nbsp; (IDL) file.&nbsp; One can either copy the file auo.idl from the \include directory of the SDK into the project directory, or use the OleView.exe application to bind to the type library and list the IDL definition.&nbsp; In the latter case, simply bind to the type library, which is located within the dynamic link library c:\microsoft site server\bin\p&amp;m\auo.dll.&nbsp; Once bound, click on the type library node in the tree.&nbsp; Select all the IDL text in the right pane and paste it into your favorite text editor.&nbsp; Save the text into a file named <code>auo.idl</code>.&nbsp; We now run the MIDL compiler with this file as the argument.&nbsp; This generates the necessary files:</p>
<p>
auo.h</p>
<p>
auo_i.c</p>
<p>
auo.tlb</p>
<p>
If you run MIDL on the auo.idl file that accompanies the SDK, two other files would be generated:</p>
<p>
auo_p.c</p>
<p>
dlldata.c</p>
<p>
These files are used to build a proxy dynamic link library that could be used to marshal data to and from an instance of the object.&nbsp; Since the desired interfaces are marked with the <i>dual</i> attribute, the <i>oleautomation</i> attribute is implied.&nbsp; Thus, the automation library can handle all marshalling duties using the type library within the AUO.DLL, and these files can therefore be ignored and/or discarded.</p>
<h2>Scripting Languages Example</h2>
<h3>VBScript and Windows Scripting Host</h3>
<p>
The following code demonstrates a standard configuration for the AUO system.&nbsp; The important methods are highlighted.</p>
<pre><code>Set IObjCreator = CreateObject("ObjCreator.ObjCreator.1")
Set IAuoConfig = IObjCreator.<b>CreateObjAuth</b>("MemAdmin.AuoConfig")

'&nbsp; configure Membership virtual server that is mapped to IIS virtual server 3
Set IBrokServers = IObjCreator.<b>CreateObjAuth</b>("MemAdmin.BrokServers")
call IBrokServers.<b>MappedTo</b>("W3SVC",3,MemId,MemComment)

'&nbsp; MemId now has the Membership virtual server instance ID
wscript.echo "Configuring Membership Server named: " &amp; MemComment

IBrokServers = Nothing '&nbsp; release interface ref
IAuoConfig.<b>GetInfo</b>(MemId)

Name = "LDAP2"
AdsPathPrefix = "LDAP://server:1000/o=company/ou=members"
Class = "member"
Schema = "LDAP://server:1000/o=company/ou=admin/cn=schema/cn=member"
Suffix = 1 '&nbsp; registered user names used for this instance
' this is the DN of the directory user and password to use when binding
' to all ADSI objects from this DS.&nbsp; 
BindAsName = "o=company/ou=membersh/cn=administrator"
BindAsPassword = "password"

Call IAuoConfig.<b>SetEntry</b>(Name,
                     AdsPathPrefix,
                     Class,
                     Schema,
                     Suffix,
                     "",&nbsp;&nbsp; ' DepObject; not used here
                     "",&nbsp;&nbsp; ' DepProp;&nbsp; not used here
                     BindAsUsername,
                     BindAsPassword )
IAuoConfig.<b>SetInfo</b>
Set IAuoConfig = Nothing&nbsp;&nbsp; ' release interface ref</code></pre>
<p>
Here's an ASP example that will list the Names (aliases) and Namespace (providers) for the AUO for a given Membership virtual server instance.</p>
<h3>ASP and VBScript</h3>
<pre><code>&lt;%
Set IObjCreator = Server.CreateObject("ObjCreator.ObjCreator.1")
Set IAuoConfig = IObjCreator.<b>CreateObjAuth</b>("MemAdmin.AuoConfig")

'&nbsp; configure Membership virtual server that is mapped to IIS virtual server 3
Set IBrokServers = IObjCreator.<b>CreateObjAuth</b>("MemAdmin.BrokServers")
call IBrokServers.<b>MappedTo</b>("W3SVC",3,MemId,MemComment)

IAuoConfig.<b>GetInfo</b> MemId
IAuoConfig.<b>GetEntries</b> names,namespaces

Response.Write "The AUO entries for Membership Server " &amp; MemId &amp; "&lt;br&gt;"
Response.Write "Server Name: " &amp; MemComment &amp; "&lt;br&gt;&lt;br&gt;"

For I = LBound(names) to UBound(names)
  if names(I) = "" Then
 &nbsp; names(I) = "Default"
  end if
  Response.write "Name: " &amp; names(I) &amp; "&lt;br&gt;"
  Response.write "Namespace: " &amp; namespaces(I) &amp; "&lt;br&gt;&lt;br&gt;"
Next
%&gt;
</code></pre>
<!-----------------------------Copyright 1997-1998 Microsoft Corporation------------------------------>
<hr>
<center><font size=-1>
<A HREF="sdklegal.htm">&copy; 1997-1998 Microsoft Corporation. All rights reserved.</A>
</font></center>
<br>
<br>
</BODY>
</HTML>
