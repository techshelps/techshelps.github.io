<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SendDCOM</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css">
<br>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="com_tools_hiry"></a><sup></sup>SendDCOM</h2>
<p>
The <b>SendDCOM</b> component uses Distributed Component Object Model (DCOM) to create an instance of a <b>ReceiveDCOM.exe</b> or <b>ReceiveDCOM2.dll</b> component on a remote Commerce Server computer. The remote DCOM component creates an <b>MtsTxPipeline</b> or <b>MtsPipeline</b> object, and then uses that object to load and execute the specified pipeline on the business data object.
<ul>
<li>
&upsilon;<b>Machine Name</b>. Specifies the name of the remote computer on which to create an instance of <b>ReceiveDCOM.exe</b> or <b>ReceiveDCOM2.dll</b>.</li>
<li>
&upsilon;<b>From Field</b>. Specifies the name of the field on the Transport Dictionary from which the <b>SendDCOM</b> component reads the data to be sent. The data stored in the field specified in <b>From Field</b> must be serialized data; it cannot be an object. When the receiving DCOM component is instantiated, it creates a <b>Dictionary</b> object and writes the data in the specified <b>From Field </b>to this remote Transport Dictionary. </li>
<li>
&upsilon;<b>To Field</b>. Specifies the name of the field on the remote Transport Dictionary to which the component writes the data.</li>
<li>
&upsilon;<b>PCF File Name</b>. Specifies the name of the pipeline configuration file on the remote computer.</li>
<li>
&upsilon;<b>Transacted Pipe</b>. If this check box is selected, the remote component creates an instance of the <a href="com_compref_90.htm"><b>MtsTxPipeline</b></a> object, which is registered under Microsoft® Transaction Server (MTS) as <i>transactions required</i>. If this check box is not selected, the component creates an instance of the <a href="com_compref_85.htm"><b>MtsPipeline</b></a> object, which is registered under MTS as <i>transactions not supported</i>.</li>
<li>
&upsilon;<b>MTS Hosted Receive Component</b>. This check box determines whether the <b>ReceiveDCOM</b> component should run in its own address space (as an executable) or as an in-process server under MTS. If this check box is cleared, the <b>SendDCOM</b> component creates an instance of <b>ReceiveDCOM.exe</b>. If this check box is selected, the <b>SendDCOM</b> component loads the <b>ReceiveDCOM2.dll</b> into MTS, then each subsequent send from <b>SendDCOM</b> creates an instance of the <b>ReceiveDCOM2</b> object.</li>
</ul>
<h5 class=indent1>Note</h5>
<p class=indent1>
After being created, <b>ReceiveDCOM.exe</b> waits for input from the <b>SendDCOM</b> component. If the <b>SendDCOM</b> component is terminated on the sending computer, the <b>ReceiveDCOM.exe</b> times out after five minutes.</p>
<!-----------------------------Copyright 1997-1998 Microsoft Corporation------------------------------>
<hr>
<center><font size=-1>
<A HREF="sdklegal.htm">&copy; 1997-1998 Microsoft Corporation. All rights reserved.</A>
</font></center>
<br>
<br>
<p>&nbsp;</p></body>
</HTML>
