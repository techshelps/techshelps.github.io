<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Overview</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css">
<br>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="com_writingcomponents_khpo"></a><sup></sup>Overview</h1>
<p>
A pipeline component is a Component Object Model (COM) server object that implements the <a href="com_interfaces_80.htm"><b>IPipelineComponent</b></a> interface. The following is the definition of this interface that appears in pipecomp.idl:</p>
<pre><code>interface IPipelineComponent : IUnknown
    {
        import "oaidl.idl";

        HRESULT Execute(
                    [in]            IDispatch*  pdispOrder,
                    [in]            IDispatch*  pdispContext,
                    [in]            LONG        lFlags,
                    [out,retval]    LONG*       plErrorLevel
                );

        //
        // By default, a pipeline is in "execution mode", this call is         // used to prepare the pipeline for "design mode" (fEnable ==             //  TRUE) or to go to design mode (fEnable = FALSE).
        //

        HRESULT EnableDesign( [in]    BOOL fEnable );

    };
</code></pre>
<p>
When the pipeline creates an instance of a component, it requests an interface pointer on the component's <b>IPipelineComponent</b> implementation, then uses this pointer to invoke <a href="com_interfaces_81.htm"><b>IPipelineComponent::Execute</b></a>.</p>
<p>
The <b>IPipelineComponent</b> is the only interface that a component must implement to function within the pipeline. However, to enhance a component's usability, or to take advantage of the transaction capabilities of Microsoft Transaction Server, you may also design your component to implement one or more of the following interfaces:
<ul>
<li>
&upsilon;<b>IDispatch. </b>Implementing is optional. It<b> </b>makes it possible for clients to access your component's capabilities from macro languages, such as Microsoft® Visual Basic Scripting Edition (VBScript), Microsoft® JavaScript™ (JScript), or Microsoft® Visual Basic®.</li>
<li>
&upsilon;<a href="com_interfaces_83.htm"><b>IPipelineComponentAdmin</b></a><b>. </b>Inherits from <b>IDispatch</b>, and makes it possible for you to extend your component's capabilities without modifying the interface that implements those capabilities. This interface defines the <a href="com_interfaces_84.htm"><b>GetConfigData</b></a> and <a href="com_interfaces_85.htm"><b>SetConfigData</b></a> methods, to which the caller passes a <a href="com_interfaces_37.htm"><b>Dictionary</b></a>. <b>GetConfigData</b> and <b>SetConfigData</b> write or read this <b>Dictionary</b> to retrieve or set configuration data on the component. </li>
<li>
&upsilon;<a href="com_interfaces_86.htm"><b>IPipelineComponentDescription</b></a>. Implementing is optional, but for usability purposes, is highly recommended. When you implement IPipelineComponentDescription, you identify to the Pipeline Editor the OrderForm name/value pairs that your component reads and writes, as well as the pipe context objects that your component uses. When the user double-clicks the node for your component in the Pipeline Editor, the Pipeline Editor displays these name/value pairs in a tab, provided that the component implements IPipelineComponentDescription.</li>
<li>
&upsilon;<a href="com_interfaces_66.htm"><b>IPersistStreamInit</b></a>. Makes it possible for the properties on your component to be saved and loaded to and from persistent storage through the Pipeline Editor.</li>
<li>
&upsilon;<a href="com_interfaces_72.htm"><b>IPersistXML</b></a>. Makes it possible for your component’s data to be loaded and saved as an XML stream.</li>
</ul>
<h5>Note</h5>
<p>
If you are designing an object to be used by the Mapping components included in the Commerce Interchange Pipeline (CIP), the component must implement either <b>IPersistStreamInit</b> or <b>IPersistXML</b>.</p>
<!-----------------------------Copyright 1997-1998 Microsoft Corporation------------------------------>
<hr>
<center><font size=-1>
<A HREF="sdklegal.htm">&copy; 1997-1998 Microsoft Corporation. All rights reserved.</A>
</font></center>
<br>
<br>
<p>&nbsp;</p></body>
</HTML>
