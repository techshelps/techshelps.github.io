<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Corporate Purchasing Submit Pipeline</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css">
<br>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h3><a name="com_opp_ckkz"></a>The Corporate Purchasing Submit Pipeline</h3>
<p>
The Corporate Purchasing Submit pipeline consists of two stages. These stages run components that validate the purchase order requisition, transfer the purchase order to the vendor, and write the order to database storage. This pipeline is analogous to the Purchase pipeline used in business-to-consumer sites.</p>
<p>
The Corporate Purchasing Submit pipeline can be run once you have run an <b>OrderForm</b> successfully through the <a href="com_opp_8.htm">Corporate Purchasing Plan pipeline</a>, and have confirmed the customer’s desire to finalize a purchase. </p>
<p>
Because these pipeline components write to a database, the Corporate Purchasing Submit pipeline is often a <i>transacted pipeline</i>. A transacted pipeline is a pipeline that consists exclusively of components that are designed and configured to support <a href="com_opp_16.htm">Microsoft Transaction Server</a> (MTS) transactions.</p>
<p>
This template for the Corporate Purchasing Submit pipeline is CorpPurchaseSubmit.pct. An example of a pipeline based on this template is the CorpPurchasingSubmit.pcf file in the /Config directory of the Microsoft Market sample site. </p>
<p>
The Corporate Purchasing Submit pipeline template consists of the following stages.</p>
<h4>Purchase Order Validate Stage</h4>
<p>
The Purchase Order Validate stage is used to verify that the purchase order is valid. </p>
<p>
Commerce Server 3.0 includes no component for this stage (other than <b>Scriptor</b>). However, you can add your own custom component to validate the purchase order.</p>
<h4>Purchase Order Submit Stage</h4>
<p>
This stage handles the completed purchase order and transmits it to the vendor.</p>
<p>
The components related to this stage include the following.</p>
<table cellspacing=4 cols=2 width=464>
<tr valign=top>
<th align=left width=27%>Component</th>
<th align=left width=73%>Description</th>
</tr>
<tr valign=top>
<td colspan=2 width=100%></td>
</tr>
<tr valign=top>
<td width=27%><a href="com_piperef_23.htm"><b>ExecuteProcess</b></a></td>
<td width=73%>Executes an application on the server with the specified arguments.</td>
</tr>
<tr valign=top>
<td width=27%><a href="com_piperef_32.htm"><b>MakePO</b></a></td>
<td width=73%>Generates a purchase order, based on a template file.</td>
</tr>
<tr valign=top>
<td width=27%><a href="com_piperef_36.htm"><b>PipeToPipe Transfer</b></a></td>
<td width=73%>Transfers an <b>OrderForm</b> or <b>Dictionary</b> from the currently running pipeline to another pipeline.</td>
</tr>
<tr valign=top>
<td width=27%><a href="com_piperef_37.htm"><b>POtoFile</b></a></td>
<td width=73%>Sends a purchase order (typically the result of <b>MakePO</b>) to a file.</td>
</tr>
<tr valign=top>
<td width=27%><a href="com_piperef_54.htm"><b>SaveReceipt</b></a></td>
<td width=73%>Writes the contents of the <b>OrderForm</b> to the receipt storage.</td>
</tr>
<tr valign=top>
<td width=27%><a href="com_piperef_59.htm"><b>SendSMTP</b></a></td>
<td width=73%>Sends a mail message to the specified address.</td>
</tr>
<tr valign=top>
<td width=27%><a href="com_piperef_65.htm"><b>SQLItem</b></a></td>
<td width=73%>Runs the specified SQL command for each item in the order with the given fields from the order and item as arguments.</td>
</tr>
<tr valign=top>
<td width=27%><a href="com_piperef_66.htm"><b>SQLItemADO</b></a></td>
<td width=73%>Runs the specified SQL command for each item in the order with the given fields from the order and item as arguments. This component is identical to SQLItem, except that it performs its work using Microsoft® ActiveX® Data Objects (ADO), and can be included in a transacted pipeline.</td>
</tr>
<tr valign=top>
<td width=27%><a href="com_piperef_67.htm"><b>SQLOrder</b></a></td>
<td width=73%>Runs the specified SQL command once per order, with the given fields from the order as arguments.</td>
</tr>
<tr valign=top>
<td width=27%><a href="com_piperef_68.htm"><b>SQLOrderADO</b></a></td>
<td width=73%>Runs the specified SQL command once per order, with the given fields from the order as arguments. This component is identical to <b>SQLOrder</b>, except that it performs its work using ADO, and can be included in a transacted pipeline.</td>
</tr>
</table><br>
<!-----------------------------Copyright 1997-1998 Microsoft Corporation------------------------------>
<hr>
<center><font size=-1>
<A HREF="sdklegal.htm">&copy; 1997-1998 Microsoft Corporation. All rights reserved.</A>
</font></center>
<br>
<br>
<p>&nbsp;</p></body>
</HTML>
