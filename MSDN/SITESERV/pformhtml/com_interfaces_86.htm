<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IPipelineComponentDescription Interface</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css">
<br>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="com_oppinterfaces_jzch"></a>IPipelineComponentDescription Interface</h1>
<p>
The <b>IPipelineComponentDescription </b>interface makes it possible for pipeline components to identify the values that they read from the pipe context, and the name/value pairs that they read or write from or to the <b>OrderForm</b> (for order processing pipeline components) or <b>Dictionary </b>(for Commerce Interchange Pipeline (CIP) components). </p>
<p>
Although pipeline components are not required to implement <b>IPipelineComponentDescription</b>, implementing this interface makes it possible for the Commerce Server Pipeline Editor to identify and display the elements that your component reads or writes. This information can aid store builders who are troubleshooting a pipeline configuration.</p>
<p>
The <b>IPipelineComponentDescription</b> interface supports the following methods:</p>
<table cellspacing=4 cols=2 width=464>
<tr valign=top>
<th align=left width=48%>Method</th>
<th align=left width=52%>Description</th>
</tr>
<tr valign=top>
<td colspan=2 width=100%></td>
</tr>
<tr valign=top>
<td width=48%><a href="com_interfaces_87.htm"><b>ContextValuesRead</b></a></td>
<td width=52%>Returns a SAFEARRAY VARIANT that identifies the pipe context values that the component reads.</td>
</tr>
<tr valign=top>
<td width=48%><a href="com_interfaces_88.htm"><b>ValuesRead</b></a></td>
<td width=52%>Returns a SAFEARRAY VARIANT that identifies the values that the component reads.</td>
</tr>
<tr valign=top>
<td width=48%><a href="com_interfaces_89.htm"><b>ValuesWritten</b></a></td>
<td width=52%>Returns a SAFEARRAY VARIANT that identifies the values that the component writes.</td>
</tr>
</table><br>
<p>
The methods defined in the <b>IPipelineComponentDescription</b> interface all take a single parameter: the address of a <b>VARIANT</b> out-value. The <b>VARIANT</b> that <b>IPipelineComponentDescription</b> method implementations store in this address must contain a safearray of <b>VARIANT</b>s that contain a <b>BSTR</b>. These <b>BSTR</b> variables identify the values read from or written to the pipe context or the <b>OrderForm</b>. Because the <b>VARIANT</b>s in this safearray contain simple <b>BSTR</b> variables, you can conceivably store any kind of string information in these <b>BSTR</b>s. However, for the sake of aiding store developers who are attempting to troubleshoot their pipeline configurations, it is recommended that you initialize these <b>BSTR</b>s to reference elements of only the pipe context, OPP <b>OrderForm</b>, or CIP <b>Dictionary</b>.</p>
<!-----------------------------Copyright 1997-1998 Microsoft Corporation------------------------------>
<hr>
<center><font size=-1>
<A HREF="sdklegal.htm">&copy; 1997-1998 Microsoft Corporation. All rights reserved.</A>
</font></center>
<br>
<br>
<p>&nbsp;</p></body>
</HTML>
