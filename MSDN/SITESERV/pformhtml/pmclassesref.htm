<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CoClass AuoConfig (MemAdmin.AuoConfig.1)</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css">
<br>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="pm_class_auoconfig"></a>Class AuoConfig</h1>
<p>
This COM class defines an object that programmers and administrators can use to configure the Active User Object (AUO) entries for a given Membership virtual server instance.</p>
<h3>COM Class Identification</h3>
<p>
The following values identify this COM class.&nbsp; These values are set in the registry when the Site Server 3.0 product is installed.</p>
<p class=dt>
<i>Programmatic Identifier</i></p>
<p class=indent>
MemAdmin.AuoConfig.1</p>
<p class=dt>
<i>CLSID</i></p>
<p class=indent>
0b9ae1d6-b696-11d0-bbd7-00c04fb615e5</p>
<p class=dt>
<i>COM Class Name</i></p>
<p class=indent>
AuoConfig</p>
<h3>Type Information</h3>
<p>
The complete Interface Definition Language (IDL) definition of this class is contained in the file &lt;sdk_install_root&gt;\include\AUO.idl.&nbsp; Run the MIDL compiler to generate include files for C/C++.&nbsp; Include the AUO.h and AUO_i.c to have the interface definitions, CLSID, IID and their associated GUID values made available to your application at compile time. </p>
<p>
The type library for this class is available as a resource in the auo.dll dynamic link library (DLL).&nbsp; The location of this DLL is c:\microsoft site server\bin\p&amp;m\auo.dll.</p>
<h3>COM Class IDL Definition</h3>
<pre><code>[
   uuid(0b9ae1d6-b696-11d0-bbd7-00c04fb615e5),
   helpstring("AuoConfig Class")
]
coclass AuoConfig
{
   [default] interface <a href="#pm_class_auoconfig_interface_iauoconfig">IAuoConfig</a>;
};</code></pre>
<h3>Creating Instances of this Class</h3>
<p>
Programmers must use the special COM class <b>ObjCreator.ObjCreator.1</b> to create instances of this class. </p>
<p>
When an instance of the AuoConfig class is created, it is registered with the context CLSCTX_LOCAL_SERVER.&nbsp; Thus, do not attempt to create an instance of the class with type CLSCTX_INPROC_SERVER as the <b>CoGetClassObject</b> call will fail.</p>
<h3>Interfaces</h3>
<p>
The <b>AuoConfig</b> COM class exposes the <a href="#pm_class_auoconfig_interface_iauoconfig">IAuoConfig</a><i> dual </i>interface, providing both a custom COM interface as well as a <i>dispinterface</i> to the methods and properties.</p>
<h3>Security Issues</h3>
<p>
Most methods exposed by the <b>IAuoConfig</b> interface require the process or thread invoking them to have NT administrator credentials.&nbsp; The exceptions are listed below
<ul type=disc>
<li>
The <a href="pmclassesref_4.htm"><b>GetInfo</b></a> method <i>does not require</i> this credential.&nbsp; <br><br></li>
<li>
The <a href="pmclassesref_2.htm"><b>GetEntries</b></a> method <i>does not require</i> this credential.<br><br></li>
<li>
The <a href="pmclassesref_3.htm"><b>GetEntry</b></a> method will <i>not</i> return the AUO entry's <i>BindAsPassword</i> if the account invoking the method does not have NT administrator credentials.&nbsp; If it does, all the entry data will be returned.&nbsp; </li>
</ul>

<h1><a name="pm_class_auoconfig_interface_iauoconfig"></a>Interface IAuoConfig</h1>
<h3>IDL Defintion</h3>
<pre><code>[
   object,
   uuid(4b928606-b685-11d0-bbd7-00c04fb615e5),
   dual,
   pointer_default(unique)
]
interface IAuoConfig : IDispatch
{
   HRESULT <a href="pmclassesref_4.htm">GetInfo</a>( LONG lVirtServId );
   HRESULT <a href="pmclassesref_7.htm">SetInfo</a>();
   HRESULT <a href="pmclassesref_6.htm">SetEntry</a>(   [in] BSTR bszName,
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    [in] BSTR bszADsPathPrefix,
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    [in] BSTR bszSchema,
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    [in] BSTR bszClass,
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    [in] LONG lSuffix,
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    [in] BSTR bszDepObject,
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    [in] BSTR bszDepProp,
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    [in] BSTR bszBindAsName,
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    [in] BSTR bszBindAsPassword
                     );

   HRESULT <a href="pmclassesref_3.htm">GetEntry</a>(   [in] BSTR bszName,
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       [in,out] VARIANT *pbszADsPathPrefix,
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       [in,out] VARIANT *pbszSchema,
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       [in,out] VARIANT *pbszClass,
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       [in,out] VARIANT *plSuffix,
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       [in,out] VARIANT *pbszDepObject,
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       [in,out] VARIANT *pbszDepProp,
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       [in,out] VARIANT *pbszBindAsName,
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       [in,out] VARIANT *pbszBindAsPassword
                     );

   HRESULT <a href="pmclassesref_5.htm">RemoveEntry</a>([in]BSTR bszName);

   HRESULT <a href="pmclassesref_2.htm">GetEntries</a>(
                     [in,out] VARIANT *pNames,&nbsp;&nbsp; // VT_ARRAY|VT_VARIANT
                     [in,out]VARIANT *pProviders // VT_ARRAY_VT_VARIANT
                &nbsp;&nbsp;    );

   HRESULT <a href="pmclassesref_1.htm">DeleteInstance</a>();
};
</code></pre>
<!-----------------------------Copyright 1997-1998 Microsoft Corporation------------------------------>
<hr>
<center><font size=-1>
<A HREF="sdklegal.htm">&copy; 1997-1998 Microsoft Corporation. All rights reserved.</A>
</font></center>
<br>
<br>
</BODY>
</HTML>
