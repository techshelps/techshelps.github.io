<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DBStorage.InitStorage Method</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css">
<br>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="com_compref_ljzp"></a><sup></sup>DBStorage.InitStorage Method</h2>
<p>
The <b>InitStorage</b> method initializes a <b>DBStorage</b> object. You must call this method immediately after object creation and before calling any other <b>DBStorage</b> object methods. Attempting to call any other <b>DBStorage</b> method prior to calling <b>InitStorage </b>results in an error.</p>
<h4>Syntax</h4>
<p>
<i>DBStorage</i><b>.InitStorage(</b><i>ConnectionString</i>, <i>Table</i>, <i>Key</i>, <i>ProgID</i>, <i>MarshalColumn</i>, <i>DateChanged</i><b>)</b></p>
<h4>Parameters</h4>
<dl>
<dt>
<i>ConnectionString</i></dt>
<dd>
A connection string for the data source, specified as a text string variant.
</dd>
</dl>
<h5 class=indent1>Note</h5>
<p class=indent1>
For compatibility with sites built with Commerce 2.0, the <i>Datasource</i> parameter may also be a <b>Datasource</b> object retrieved through a previous call to the <b>Content</b> object’s <b>AddDatasource</b> method. However, new sites should not rely on this feature, as it will be discontinued in future releases of Commerce Server.</p>
<dl>
<dt>
<i>Table</i></dt>
<dd>
The table within the data source in which to maintain the data.</dd>
<dt>
<i>Key</i></dt>
<dd>
The column name that the <b>DBStorage</b> object uses as a key into the database table. This column should be marked to contain unique values.</dd>
<dt>
<i>ProgID</i></dt>
<dd>
The object in which data passed to or retrieved by <b>DBStorage</b> methods will be stored. This parameter can be <b>Commerce.Dictionary</b> for storing <b>Dictionary </b>objects or <b>Commerce.OrderForm</b> for storing <b>OrderForm </b>objects. Methods (such as <b>GetData</b>) that return data from the database create an instance of the specified class with the requested data stored within it.</dd>
<dt>
<i>MarshalColumn</i></dt>
<dd>
Optional. Text string which, if specified, indicates the name of a column in the database into which the <b>CommitData </b>or <b>InsertData</b> method will store all the data from the specified data object, serialized into an encoded binary format. (Objects in the stored item that have corresponding column names in the database are also stored in those columns in the database.) If this argument is specified, the database must contain a column by that name, or else an error will be produced. If this argument is not specified here, then no data from the object is serialized and saved in the database in binary format, and items in the object that do not have corresponding columns in the database are discarded. When using a Microsoft® SQL Server™ database, the maximum size of the data in this column is the same as the maximum size for the SQL Server text/image datatype (2,147,483,647 bytes).</dd>
<dt>
<i>DateChanged</i></dt>
<dd>
Optional. The name of a key or attribute in the database into which to write the date when the data is changed. (If you do not specify a column name that exists in the database, the change date will be included in the marshalled data.)
</dd>
</dl>
<h4>Example</h4>
<p>
The following sample, from the Clocktower’s Basket.asp file, initializes the <b>DBStorage </b>object called <code>mscsOrderFormStorage</code> as an <b>OrderForm</b> storage object:</p>
<pre><code>Call mscsOrderFormStorage.InitStorage(MSCSSite.DefaultConnectionString, "Clocktower_basket", "shopper_id", "Commerce.OrderForm", "marshalled_order", "date_changed")
</code></pre>
<p>
In this example:
<ul>
<li>
&upsilon;<code>MSCSSite.DefaultConnectionString</code> returns a connection string representing the data source.</li>
<li>
&upsilon;<code>"Clocktower_basket"</code> is the name of the table in the referenced data source.</li>
<li>
&upsilon;<code>"shopper_id"</code> identifies the primary key into that table. This is the column name that the <b>DBStorage</b> object will use to key into the table to perform routine tasks such as data insertion and retrieval.</li>
<li>
&upsilon;<code>"Commerce.OrderForm"</code> is the programmatic identifier of the object that you will use to pass data to and retrieve data from <b>DBStorage</b> methods, in this case an <b>OrderForm</b> object.</li>
<li>
&upsilon;<code>"marshalled_order"</code> is the name of a column for this <b>DBStorage</b> object instance to use for marshaling data.</li>
<li>
&upsilon;<code>"date_changed"</code> is the name of the column in the database that will contain the date of the most recent change.</li>
</ul>
<h4>Related Topics</h4>
<ul>
<li>
&upsilon;<a href="com_interfaces_31.htm"><b>IDBStorage:InitStorage</b></a></li>
</ul>
<!-----------------------------Copyright 1997-1998 Microsoft Corporation------------------------------>
<hr>
<center><font size=-1>
<A HREF="sdklegal.htm">&copy; 1997-1998 Microsoft Corporation. All rights reserved.</A>
</font></center>
<br>
<br>
<p>&nbsp;</p></body>
</HTML>
