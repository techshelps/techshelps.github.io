<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Adapting WSH Examples for ASP</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css">
<br>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="cd_adapting_wsh_examples_for_asp"></a>Adapting WSH Examples for ASP</h1>
<p>
Although the object reference examples are written for the Windows Scripting Host (WSH), you can easily adapt them for Active Server Pages (ASP). The first step is to wrap your VBScript code in the ASP delimiters (&lt;% and %&gt;), as in the following example: </p>
<table border=0 cellpadding=5 cols=2 frame=below rules=rows width=595>
<tr valign=top>
<td width=48%><b>WSH File</b></td>
<td width=52%><b>ASP File</b></td>
</tr>
<tr valign=top>
<td width=48%>&nbsp;<p>
Option Explicit </p>
<p>
On Error Resume Next </p>
<p>
dim ReplClient</p>
<p>
Set ReplClient = CreateObject("CrsApi.ReplicationClient")</p>
<p>
... 'Do some replications</p>
<p>
'Release Client object</p>
<p>
ReplClient = Nothing</p>
</td>
<td width=52%><b>&lt;% </b><p>
Option Explicit </p>
<p>
On Error Resume Next </p>
<p>
dim ReplClient</p>
<p>
set ReplClient = CreateObject("CrsApi.ReplicationClient")</p>
<p>
... 'Do some replications</p>
<p>
'Release Client object</p>
<p>
ReplClient = Nothing</p>
<p>
<b>%&gt;</b></p>
</td>
</tr>
</table><br>
<p>
Also, to produce output, you must change the <b>Wscript.Echo</b> methods to <b>Response.Write</b> methods. </p>
<p class=indent>
<b>Note</b>&nbsp;&nbsp;&nbsp;Since ASP files default to the VBScript programming language, you need not supply a language qualifier to your VBScript ASP pages. If you use a different language, such as JScript, you must amend the first line of the previous ASP example to the following:</p>
<pre><code>&lt;% SCRIPT LANGUAGE="JScript"
</code></pre>
<p>
ASP files offer some additional functionality over WSH files. For example, you can create an include file in which can place commonly-used code, such as the following defined constants, which are all of the defined states for the <b>ReplicationInstance.State</b> property: </p>
<pre><code>const REPL_STATE_EMPTY&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = 0
const REPL_STATE_STARTING&nbsp;&nbsp; = 1
const REPL_STATE_RUNNING&nbsp;&nbsp;&nbsp; = 2
const REPL_STATE_COMPLETE&nbsp;&nbsp; = 3
const REPL_STATE_ABORTED&nbsp;&nbsp;&nbsp; = 4
const REPL_STATE_CANCELED&nbsp;&nbsp; = 5
const REPL_STATE_RECEIVING&nbsp; = 6
const REPL_STATE_PENDING&nbsp;&nbsp;&nbsp; = 7
</code></pre>
<p>
You can then include this file in an ASP file with a line of code similar to the following, where CDinclude.inc is the name of the include file (it can be any legal file name and need not have the .inc file extension): </p>
<pre><code>&lt;!--include file = "CDinclude.inc"--&gt;
</code></pre>
<p class=indent>
<b>Note</b>&nbsp;&nbsp;&nbsp;You must explicitly cast any whole number value that you assign to a global parameter to a 32-bit (long) integer with <b>CLng()</b>, as shown in the following example, which sets the Depth parameter (the depth of the replication) to 3 for project MyProject: </p>
<pre><code>const OPEN_EXISTING_PROJECT&nbsp; = 2

dim ReplServer, Proj, Depth 

set ReplServer = CreateObject("CrsApi.ReplicationServer")
ReplServer.Initialize("")

set Proj = ReplServer.OpenProject("MyProject", OPEN_EXISTING_PROJECT)

Depth = Clng(3)
Proj.Put("Depth", Depth)

'Release objects
set ReplProject = Nothing
set ReplServer&nbsp; = Nothing
</code></pre>
<!-----------------------------Copyright 1997-1998 Microsoft Corporation------------------------------>
<hr>
<center><font size=-1>
<A HREF="sdklegal.htm">&copy; 1997-1998 Microsoft Corporation. All rights reserved.</A>
</font></center>
<br>
<br>
</BODY>
</HTML>
