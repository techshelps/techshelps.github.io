<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SimpleDBDS Read/Write Path and Methods</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css">
<br>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="com_compref_izjm"></a><sup></sup>SimpleDBDS Read/Write Path and Methods</h2>
<p>
The Directory Services path for read/write access is expressed in the format:</p>
<p>
<b>SimpleDBDS://RW</b>/<i>ConnectionString</i>/<i>Table</i>/<i>Key</i>/<i>Reserved</i>/<i>Marshalled</i> <i>Column</i>/<i>DateChanged</i>/<i>DateCreated</i>/[<i>KeyType</i>]/<i>KeyValue</i></p>
<p>
where:
<dl>
<dt>
<b>RW</b></dt>
<dd>
Indicates read/write.</dd>
<dt>
<i>ConnectionString</i></dt>
<dd>
A connection string for the data source, specified as a string <b>Variant</b>.</dd>
<dt>
<i>Table</i></dt>
<dd>
The table within the data source in which to maintain the data.</dd>
<dt>
<i>Key</i></dt>
<dd>
The column name that the <b>DBStorage</b> object uses as a key into the database table. This column should be marked to contain unique values.</dd>
<dt>
<i>Reserved</i></dt>
<dd>
This parameter is reserved for future use. No value should be supplied.</dd>
<dt>
<i>MarshalColumn</i></dt>
<dd>
Optional. A column that stores data for which no appropriate column exists in the data source table (see the following section, “Remarks”). </dd>
<dt>
<i>DateChanged</i></dt>
<dd>
Optional. The name of a key or attribute in the database into which to write the date on which the data is changed. (If you do not specify a column name that exists in the database, the change date will be included in the marshalled data.)</dd>
<dt>
<i>DateCreated</i></dt>
<dd>
Optional. The name of a column in the database into which to write the date on which the record is created. <b>SimpleDBDS</b> adds a date stamp when it creates a new entry in the database. If you do not want to store this date, do not supply this argument. The / separator is not optional.</dd>
<dt>
<i>KeyType</i></dt>
<dd>
Optional. The data type of the <i>KeyValue</i>. If not specified, the default is string. The / separator is not optional. Usually keys are strings or long integers, but any of the following types may be used:
<table cellspacing=4 cols=3 width=464>
<tr valign=top>
<th align=left width=27%>KeyType specifier</th>
<th align=left colspan=2 width=73%>Data type of KeyValue specifier</th>
</tr>
<tr valign=top>
<td colspan=3 width=100%></td>
</tr>
<tr valign=top>
<td width=27%>string</td>
<td width=72%>String (default)</td>
</tr>
<tr valign=top>
<td width=27%>long</td>
<td width=72%>32-bit long integer</td>
</tr>
<tr valign=top>
<td width=27%>integer</td>
<td width=72%>16-bit integer</td>
</tr>
<tr valign=top>
<td width=27%>single</td>
<td width=72%>Single-precision floating-point number</td>
</tr>
<tr valign=top>
<td width=27%>double</td>
<td width=72%>Double-precision floating-point number</td>
</tr>
<tr valign=top>
<td width=27%>currency</td>
<td width=72%>Currency</td>
</tr>
<tr valign=top>
<td width=27%>date</td>
<td width=72%>Date</td>
</tr>
</table><br>

</dd>
<dt>
<i>KeyValue</i></dt>
<dd>
Optional. The value for the ? in the SQL query. If the path does not include a ? in the SQL query, a <i>Key Value </i>should not be provided. The / separator is not optional.</dd>
</dl>
<h4>Remarks</h4>
<p>
The <i>ConnectionString</i>¸ <i>Table</i>, <i>Ke</i>y, <i>ProgID</i>, <i>MarshalColum</i>n, and <i>DateChanged </i>parameters are identical to the corresponding parameters to the <b>DBStorage.InitStorage</b> method.</p>
<p>
The <i>Key</i> parameter references a column in the table referenced by <i>Table </i>that the <b>DBStorage</b> object uses to key into the data source table. It is recommended that this column be configured at table creation to store only unique values.</p>
<p>
The <i>MarshalColumn</i> parameter is used to store data that does not appropriately belong in any other column in the data source table. For example, should you specify <code>my_column</code> as the column in which you want to store data, and no such column exists, then the value that you specify for that column will be stored in the column that you specify as <i>MarshalColumn</i>.</p>
<h4>Example</h4>
<p>
The following sample specifies a read/write ADSI provider that uses the connection string “<code>DSN=cs; UID=sa;PWS=</code>”, and queries the Volcano Coffee shopper database, in which <code>shopper_id </code>is the key. By default, the <i>KeyType</i> is string: </p>
<pre><code>SimpleDBDS://RW/DSN=cs;UID=sa;PWD=/vc30_shopper/shopper_id//////Q0H4SE915ASH2KC000Q79QB17E500439</code></pre>
<p>
When this path is used to create a <b>SimpleDBDS </b>object, the object’s <b>GetInfo</b> method can be called to retrieve information from the <code>vc30_shopper </code>table, where the value in the <code>shopper_id </code>column matches the specified shopper ID.</p>
<h5>Note</h5>
<p>
The methods of the <b>SimpleDBDS</b> object are not usually used directly by ASP in a Commerce Server site. Instead, the AUO is configured to use <b>SimpleDBDS </b>as an ADSI provider, and the AUO is used to access customer information.</p>
<p>
The read/write <b>SimpleDBDS</b> supports the following properties.</p>
<table cellspacing=4 cols=2 width=464>
<tr valign=top>
<th align=left width=19%>Property</th>
<th align=left width=81%>Description</th>
</tr>
<tr valign=top>
<td colspan=2 width=100%></td>
</tr>
<tr valign=top>
<td width=19%><b>Name</b></td>
<td width=81%>Portion of the path following “SimpleDBDS://”.</td>
</tr>
<tr valign=top>
<td width=19%><b>ADsPath</b></td>
<td width=81%>ADSI path.</td>
</tr>
<tr valign=top>
<td width=19%><b>Parent</b></td>
<td width=81%>Name of the ADSI provider, in this case <b>SimpleDBDS</b>.</td>
</tr>
</table><br>
<p>
The read/write <b>SimpleDBDS</b> supports the following methods.</p>
<table cellspacing=4 cols=2 width=464>
<tr valign=top>
<th align=left width=19%>Method</th>
<th align=left width=81%>Description</th>
</tr>
<tr valign=top>
<td colspan=2 width=100%></td>
</tr>
<tr valign=top>
<td width=19%><b>Get</b></td>
<td width=81%>Retrieves value for a named property from the object.</td>
</tr>
<tr valign=top>
<td width=19%><b>GetEx</b></td>
<td width=81%>Same function as <b>Get</b>.</td>
</tr>
<tr valign=top>
<td width=19%><b>GetInfo</b></td>
<td width=81%>Reloads the object with property values that exist in the database.</td>
</tr>
<tr valign=top>
<td width=19%><b>Put</b></td>
<td width=81%>Sets the value for a named property of an object.</td>
</tr>
<tr valign=top>
<td width=19%><b>PutEx</b></td>
<td width=81%>Sets the value for a named property of an object, or allows a property to be cleared.</td>
</tr>
<tr valign=top>
<td width=19%><b>SetInfo</b></td>
<td width=81%>Writes object property values to the metabase.</td>
</tr>
</table><br>
<!-----------------------------Copyright 1997-1998 Microsoft Corporation------------------------------>
<hr>
<center><font size=-1>
<A HREF="sdklegal.htm">&copy; 1997-1998 Microsoft Corporation. All rights reserved.</A>
</font></center>
<br>
<br>
<p>&nbsp;</p></body>
</HTML>
