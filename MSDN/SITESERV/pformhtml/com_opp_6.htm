<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Purchase Pipeline</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css">
<br>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h3><a name="com_opp_lvdr"></a>The Purchase Pipeline</h3>
<p>
The Purchase pipeline consists of three stages. These stages use components that accept the final purchase of an order form, write an order to database storage and, optionally, finalize a receipt and write the contents of the <b>OrderForm</b> to the receipt database.</p>
<p>
The Purchase pipeline can be run once you have run an <b>OrderForm</b> successfully through the Plan pipeline, and have confirmed the customer’s desire to finalize a purchase. </p>
<p>
Because Purchase pipeline components write to a database, a Purchase pipeline is often a <i>transacted pipeline</i>. A transacted pipeline is a pipeline that consists exclusively of components that are designed and configured to support <a href="com_opp_16.htm">Microsoft Transaction Server</a> (MTS) transactions.</p>
<p>
The template for this pipeline is Purchase.pct. Examples of pipelines based on this template include the Purchase.pcf files that appear in the Config directory for the Volcano Coffee and Clocktower sample sites. </p>
<p>
The Purchase pipeline template consists of the following stages.</p>
<h4>Purchase Check Stage</h4>
<p>
The Purchase Check stage is used to verify that the address and credit-card information that the customer has provided meets certain validation criteria. </p>
<p>
In the Purchase.pct template, this stage contains no components by default. For an example of components that can be used in this stage, refer to the Purchase.pcf file created by the Site Builder Wizard for custom sites. This pipeline configuration contains two <b>Scriptor</b> components:
<ul>
<li>
&upsilon;<b>Validate Bill_to.</b> Verifies that each of the bill_to_* fields on the order form contains data. If not, the script gets the appropriate message from the <a href="com_compref_72.htm"><b>MessageManager</b></a> object, adds the error text to the error list, and returns a return value of 2 indicating that an error occurred.</li>
<li>
&upsilon;<b>Valide CC Info.</b> Verifies that each of the credit-card fields on the order form contains data, and that the credit-card type is one of a list of acceptable values. If not, the script gets the appropriate message from the message manager and adds the error text to the error list, and returns a return value of 2 indicating that an error occurred.</li>
</ul>
<p>
The components related to this stage include the following.</p>
<table cellspacing=4 cols=2 width=464>
<tr valign=top>
<th align=left width=30%>Component</th>
<th align=left width=70%>Description</th>
</tr>
<tr valign=top>
<td colspan=2 width=100%></td>
</tr>
<tr valign=top>
<td width=30%><a href="com_piperef_73.htm"><b>ValidateCCNumber</b></a></td>
<td width=70%>Performs a standard checksum test on the credit-card number.</td>
</tr>
</table><br>
<h4>Payment Stage</h4>
<p>
The Payment stage is used to approve credit-card payments. It sets the <code>order._payment_auth_code</code> name/value pair upon credit-card approval. This stage always ensures that <code>_payment_auth_code</code> is set. Otherwise, it generates a <code>pur</code>_<code>bad</code>_<code>payment</code> error.</p>
<p>
If a credit card is not approved, this stage should set <code>_payment_auth_code</code> to DENIED and return error level 2.</p>
<p>
The details of the payment components will vary depending upon the third-party payment processing system used.</p>
<p>
The components related to this stage include the following.</p>
<table cellspacing=4 cols=2 width=464>
<tr valign=top>
<th align=left width=30%>Component</th>
<th align=left width=70%>Description</th>
</tr>
<tr valign=top>
<td colspan=2 width=100%></td>
</tr>
<tr valign=top>
<td width=30%><a href="com_piperef_14.htm"><b>DefaultPayment</b></a><br>
(included in template)</td>
<td width=70%>Places an initial setting on the <code>_payment_auth_code</code> name/value pair.</td>
</tr>
<tr valign=top>
<td width=30%><a href="com_piperef_48.htm"><b>RequiredPayment</b></a><b><br>
</b>(embedded in stage)</td>
<td width=70%>Ensures that the <code>_payment_auth_code</code> name/value pair is not NULL.</td>
</tr>
</table><br>
<h4>Accept Stage</h4>
<p>
This stage handles the completed order, including initiating order tracking, generating purchase orders, and inventory.</p>
<p>
The components related to this stage include the following.</p>
<table cellspacing=4 cols=2 width=464>
<tr valign=top>
<th align=left width=27%>Component</th>
<th align=left width=73%>Description</th>
</tr>
<tr valign=top>
<td colspan=2 width=100%></td>
</tr>
<tr valign=top>
<td width=27%><a href="com_piperef_23.htm"><b>ExecuteProcess</b></a></td>
<td width=73%>Executes an application on the server with the specified arguments.</td>
</tr>
<tr valign=top>
<td width=27%><a href="com_piperef_32.htm"><b>MakePO</b></a></td>
<td width=73%>Generates a purchase order, based on a template file.</td>
</tr>
<tr valign=top>
<td width=27%><a href="com_piperef_36.htm"><b>PipeToPipe Transfer</b></a></td>
<td width=73%>Transfers an <b>OrderForm</b> or <b>Dictionary</b> from the currently running pipeline to another pipeline.</td>
</tr>
<tr valign=top>
<td width=27%><a href="com_piperef_37.htm"><b>POtoFile</b></a></td>
<td width=73%>Sends a purchase order (typically the result of <b>MakePO</b>) to a file.</td>
</tr>
<tr valign=top>
<td width=27%><a href="com_piperef_54.htm"><b>SaveReceipt</b></a></td>
<td width=73%>Writes the contents of the <b>OrderForm</b> to the receipt storage.</td>
</tr>
<tr valign=top>
<td width=27%><a href="com_piperef_59.htm"><b>SendSMTP</b></a></td>
<td width=73%>Sends a mail message to the specified address.</td>
</tr>
<tr valign=top>
<td width=27%><a href="com_piperef_65.htm"><b>SQLItem</b></a></td>
<td width=73%>Runs the specified SQL command for each item in the order with the given fields from the order and item as arguments.</td>
</tr>
<tr valign=top>
<td width=27%><a href="com_piperef_66.htm"><b>SQLItemADO</b></a></td>
<td width=73%>Runs the specified SQL command for each item in the order with the given fields from the order and item as arguments. This component is identical to SQLItem, except that it performs its work using Microsoft® ActiveX® Data Objects (ADO), and can be included in a transacted pipeline.</td>
</tr>
<tr valign=top>
<td width=27%><a href="com_piperef_67.htm"><b>SQLOrder</b></a></td>
<td width=73%>Runs the specified SQL command once per order, with the given fields from the order as arguments.</td>
</tr>
<tr valign=top>
<td width=27%><a href="com_piperef_68.htm"><b>SQLOrderADO</b></a></td>
<td width=73%>Runs the specified SQL command once per order, with the given fields from the order as arguments. This component is identical to <b>SQLOrder</b>, except that it performs its work using Microsoft® ActiveX® Data Objects (ADO), and can be included in a transacted pipeline.</td>
</tr>
</table><br>
<!-----------------------------Copyright 1997-1998 Microsoft Corporation------------------------------>
<hr>
<center><font size=-1>
<A HREF="sdklegal.htm">&copy; 1997-1998 Microsoft Corporation. All rights reserved.</A>
</font></center>
<br>
<br>
<p>&nbsp;</p></body>
</HTML>
