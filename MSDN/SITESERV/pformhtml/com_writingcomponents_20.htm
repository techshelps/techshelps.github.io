<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The OrderForm</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css">
<br>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="com_writingcomponents_kiya"></a><sup></sup>The OrderForm</h2>
<p>
When the pipeline invokes a component's implementation of <b>IPipelineComponent::Execute</b>, the pipeline passes the component an <b>IDispatch</b> interface pointer on the object that stores order information. Usually, the object on which this <b>IDispatch</b> is implemented is an <b>OrderForm</b> or a <b>Dictionary</b>.</p>
<p>
The <b>OrderForm</b> object is a structured set of <b>Dictionary</b> and <b>SimpleList</b> objects that contains a detailed summary of all or part of one or more shopping sessions. The following figure illustrates the structure of an <b>OrderForm</b> object.</p>
<p>
<img src="dictlist.gif" border=0></p>
<p>
To access any part of an <b>OrderForm</b> within your <b>IPipelineComponent::Execute</b> implementation, call <b>QueryInterface</b> through the <b>IDispatch</b> interface pointer to get an instance pointer on the interface that you need.</p>
<p>
For example, the <i>Items</i> collection in an <b>OrderForm</b> is a <b>SimpleList</b> object that contains one or more <b>Dictionary</b> objects. The following sample implementation of <b>IPipelineComponent::Execute</b> demonstrates how to use the <b>Execute </b>method's <i>pdispOrder </i>parameter to get an <b>ISimpleList</b> pointer on this collection:</p>
<pre><code>HRESULT SampleComponentImpl::Execute(IDispatch *pDispOrder, IDispatch *pDispContext, long lFlags, long *pErrorLevel)
{
    HRESULT hr = S_OK;
    IDictionary *pDict = NULL;
    ISimpleList *pListItems = NULL;
    VARIANT var;

    BSTR bstrItems = SysAllocString(L"Items");

    // Call QueryInterface to get the OrderForm Dictionary.

    hr = pDispOrder-&gt;QueryInterface(IID_IDictionary, (void**)&amp;pDict);

    if(FAILED(hr)){
        SysFreeString(bstrItems);
        return hr;
    }

    // Get the value of the "Items" Dictionary entry.

    if(SUCCEEDED(hr = pDict-&gt;get_Value(bstrItems, &amp;var))){

    if(FAILED(hr)){
        SysFreeString(bstrItems);
        pDict-&gt;Release();
        return hr;
    }

    // Make sure that the value of the retrieved item is a COM     //object.

    if(V_VT(var) != VT_DISPATCH &amp;&amp; V_VT(var) != VT_UNKNOWN)
        hr = E_UNEXPECTED;
        else
            hr = V_DISPATCH(&amp;var)-&gt;QueryInterface(IID_ISimpleList, (void**)&amp;pListItems);

    }

    VariantClear(&amp;var)
    return hr;

}
</code></pre>
<p>
For information about the <b>IPipelineComponent</b>, <b>ISimpleList</b>, and <b>IDictionary</b> interfaces, see <a href="com_interfaces.htm">Commerce Server Interfaces</a></p>
<!-----------------------------Copyright 1997-1998 Microsoft Corporation------------------------------>
<hr>
<center><font size=-1>
<A HREF="sdklegal.htm">&copy; 1997-1998 Microsoft Corporation. All rights reserved.</A>
</font></center>
<br>
<br>
<p>&nbsp;</p></body>
</HTML>
