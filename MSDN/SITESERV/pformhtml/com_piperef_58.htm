<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SendHTTP</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css">
<br>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="com_tools_lrlt"></a><sup></sup>SendHTTP</h2>
<p>
The <b>SendHTTP</b> component uses an HTTP POST to transmit data from the specified field on a Transport Dictionary or order form to a Web page (cgi, ISAPI, ASP, and so on). Often the receiving Web page will invoke another pipeline to perform further processing on the received data. Optionally, <b>SendHTTP</b> can store the response returned from the Web page, and the component saves that response into the specified field on the Transport Dictionary or order form. <b>SendHTTP</b> can work with text, UNICODE, and binary data. 
<ul>
<li>
&upsilon;<b>URL</b>. Specifies the URL for the Web page that the data is to be posted to. Do not include <b>http::</b> in this URL. You can specify a port number.</li>
<li>
&upsilon;<b>Field to be posted</b>. Specifies the name of the field on the Transport Dictionary or order form that contains the data to be sent in the HTTP POST.<ul>
<li>
&upsilon;<b>As Type</b>. Specifies the format in which the data should be sent (text, binary, or UNICODE).</li>
</ul>
</li>
<li>
&upsilon;<b>Store response in field (optional)</b>. Specifies the name of the field on the Transport Dictionary or order form into which the <b>SendHTTP</b> component will write the response received from the Web page in response to the POST. This field is optional; if you leave it blank, the response is not saved to the Transport Dictionary or order form.<ul>
<li>
&upsilon;<b>From Type</b>. Specifies the format of the data that is to be received (text, binary, or UNICODE).</li>
</ul>
</li>
</ul>
<p>
When you configure the <b>SendHTTP</b> component, you specify the format in which the component is to post the contents of the specified field. Binary data should be posted as Binary. Text data may be posted as Text (ASCII/Multi-Byte Character Set blob) or UNICODE. UNICODE provides the best support for multi-lingual environments, however many Web servers do not support it.</p>
<p>
Optionally, <b>SendHTTP</b> can store the response of the post. If desired, specify a destination field and the type of the data that is expected in the response. Usually, Web pages return text (ASCII/MBCS) data, however <b>SendHttp</b> also lets you store UNICODE or binary responses.</p>
<p>
The resource specified on the SendHTTP component’s URL parameter can be based on any server-side solution that can accept posts, including ISAPI, cgi, and ASP. When using ASP, use the following methods to read data posted in the following types:</p>
<table cellspacing=4 cols=2 width=464>
<tr valign=top>
<th align=left width=21%>Post type</th>
<th align=left width=79%>ASP function</th>
</tr>
<tr valign=top>
<td colspan=2 width=100%></td>
</tr>
<tr valign=top>
<td width=21%>Text</td>
<td width=79%>Request.Form</td>
</tr>
<tr valign=top>
<td width=21%>UNICODE</td>
<td width=79%>CStr(Request.BinaryRead(Request.TotalBytes))</td>
</tr>
<tr valign=top>
<td width=21%>Binary</td>
<td width=79%>Request.BinaryRead(Request.TotalBytes)</td>
</tr>
</table><br>
<p>
Use the following ASP functions to send response data of the following types.</p>
<table cellspacing=4 cols=2 width=464>
<tr valign=top>
<th align=left width=21%>Response type</th>
<th align=left width=79%>ASP function</th>
</tr>
<tr valign=top>
<td colspan=2 width=100%></td>
</tr>
<tr valign=top>
<td width=21%>Text</td>
<td width=79%>Response.Write</td>
</tr>
<tr valign=top>
<td width=21%>UNICODE</td>
<td width=79%>Response.BinaryWrite</td>
</tr>
<tr valign=top>
<td width=21%>Binary</td>
<td width=79%>Response.BinaryWrite</td>
</tr>
</table><br>
<p>
For an example of a receiving .asp page, see the recvHTTP.asp file, which is installed by default into \Microsoft Site Server\SiteServer\Commerce.</p>
<!-----------------------------Copyright 1997-1998 Microsoft Corporation------------------------------>
<hr>
<center><font size=-1>
<A HREF="sdklegal.htm">&copy; 1997-1998 Microsoft Corporation. All rights reserved.</A>
</font></center>
<br>
<br>
<p>&nbsp;</p></body>
</HTML>
