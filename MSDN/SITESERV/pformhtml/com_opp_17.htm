<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Calling the MtsTxPipeline Object</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css">
<br>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h3><a name="com_opp_owuf"></a><sup></sup>Calling the MtsTxPipeline Object</h3>
<p>
The Commerce Server OPP supports MTS transactions through the <b>MtsTxPipeline</b> object. This object is registered as an MTS component during the Commerce Server installation, and is marked as requiring a transaction. If you create an <b>MtsTxPipeline</b> object on a page that is not marked as requiring a transaction, a transaction context is created for the <b>MtsTxPipeline</b> object, and the components that execute within that pipeline do so as part of a single, atomic operation. If you create an <b>MtsTxPipeline</b> object on a page marked as requiring a transaction, the <b>MtsTxPipeline</b> executes as part of the page-level transaction context.</p>
<p>
In either case, the <b>MtsTxPipeline</b> object’s transaction support provides a host of benefits to the site builder. First, and most importantly, transaction support means that if any component in an <b>MtsTxPipeline</b> fails, the work of the preceding components in the pipeline is rolled back, and the <b>MtsTxPipeline</b> object ends the transaction.</p>
<p>
The <b>MtsTxPipeline</b> object’s transaction support proves particularly beneficial in relation to OPP components such as <b>SQLItemADO</b> and <b>SQLOrderADO</b>, which modify the site database. If you use these components, or any other ADO-related OPP component that modifies the database, and a component that follows it fails, the modifications that the component makes to the database are automatically rolled back.</p>
<p>
Moreover, this behavior holds true whether or not the page on which you execute the <b>MtsTxPipeline</b> is marked as requiring a transaction. If the page is marked as requiring a transaction, then the object instance that you create participates in that transaction. If the page is not marked as requiring a transaction, one is created for the <b>MtsTxPipeline</b>, and the <b>MtsTxPipeline</b> aborts the transaction in the event of a component failure.</p>
<h4>Related Topics</h4>
<ul>
<li>
&upsilon;<a href="com_compref_90.htm">The <b>MtsTxPipeline</b> Object</a></li>
</ul>
<!-----------------------------Copyright 1997-1998 Microsoft Corporation------------------------------>
<hr>
<center><font size=-1>
<A HREF="sdklegal.htm">&copy; 1997-1998 Microsoft Corporation. All rights reserved.</A>
</font></center>
<br>
<br>
<p>&nbsp;</p></body>
</HTML>
