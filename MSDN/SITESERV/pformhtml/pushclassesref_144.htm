<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class List (Dispinterface IList)</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css">
<br>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="pu_utility_classes_list"></a>Class List</h1>
<p>
The <b>List</b> class stores a collection of variables, with each variable indexed by an integer. The items in the collection can be any valid <b>VARIANT</b> data subtype. It should be stressed that this class is <i>not</i> a SAFEARRAY. This class is also <i>not</i> a COM class, and as such cannot be created stand-alone.&nbsp; It is an intrinsic class used by the other Active Channel Server classes.&nbsp; Collections that are marked as class <b>List</b> are essentially just <i>properties</i> that return the address of an <b>IDispatch</b> interface that exposes the methods and properties of this class.&nbsp; The methods and properties of this dispinterface are listed below.</p>

<h1><a name="pu_core_containers_dispinterface_ilist"></a>Dispinterface IList</h1>
<p>
The methods and properties of a <b>List </b>object are only accessible as a <i>dispinterface.&nbsp; </i>(via a standard <b>IDispatch</b> COM interface.)</p>
<h2>Methods and Properties</h2>
<table border=0 cellpadding=5 cols=3 frame=below width=587>
<tr valign=top>
<td width=18%><b>Name</b></td>
<td width=40%><b>Return Type</b></td>
<td width=42%><b>Parameter</b></td>
</tr>
<tr valign=top>
<td width=18%><b>Count</b></td>
<td width=40%>Integer (VT_I4)</td>
<td width=42%>(property)</td>
</tr>
<tr valign=top>
<td width=18%><b>Item</b></td>
<td width=40%>VARIANT (VT_XXXX)</td>
<td width=42%>Integer <i>index</i> (VT_I4)</td>
</tr>
<tr valign=top>
<td width=18%><b>Add</b></td>
<td width=40%>void</td>
<td width=42%>VARIANT <i>item</i> (VT_XXXX)</td>
</tr>
<tr valign=top>
<td width=18%><b>Remove</b></td>
<td width=40%>void</td>
<td width=42%>Integer <i>index</i> (VT_I4)</td>
</tr>
<tr valign=top>
<td width=18%><b>_NewEnum</b></td>
<td width=40%>IEnumVariant* (VT_DISPATCH)</td>
<td width=42%>(property)</td>
</tr>
</table><br>
<p>
<b>Synopsis</b></p>
<p>
The <b>Count</b> property returns how many items are in the list. </p>
<p>
The <b>Item</b> method returns an item from the list </p>
<p>
The <b>Add</b> method adds an item to the list </p>
<p>
The <b>Remove</b> method removes an item from the list </p>
<p>
The <b>_NewEnum</b> property returns an <b>IEnumVariant</b> interface. This object can then be used to enumerate the items in the <b>List</b> collection. For most Automation compliant programming and scripting languages, enumeration of the collection is handled behind the scenes.</p>
<p>
<b>Examples</b></p>
<pre><code>' Windows Scripting Host Runtime using VBScript

Set IDispChannel = CreateObject("push.channel")
Set IDispList = IDispChannel.Subchannels
Set IDispItem = CreateObject("push.item")
call IDispList.Add(IDispItem)

' delete objects with DeleteOnRefresh = TRUE
For i = 1 to IDispList.Count-1
  if IDispList.Item(i).DeleteOnRefresh then
 &nbsp;&nbsp; IDispList.Delete(i)
Next
</code></pre>
<p>
The "things" in the collection can be enumerated automatically in the normal way: </p>
<pre><code>for each item in IList
 …
next</code></pre>
<!-----------------------------Copyright 1997-1998 Microsoft Corporation------------------------------>
<hr>
<center><font size=-1>
<A HREF="sdklegal.htm">&copy; 1997-1998 Microsoft Corporation. All rights reserved.</A>
</font></center>
<br>
<br>
</BODY>
</HTML>
