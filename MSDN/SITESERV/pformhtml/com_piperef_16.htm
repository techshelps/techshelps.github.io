<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DefaultShopperInfo</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css">
<br>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="com_tools_cugl"></a><sup></sup>DefaultShopperInfo</h2>
<p>
The <b>DefaultShopperInfo</b> component, which usually appears in the Shopper Information stage of an order processing pipeline, retrieves the values stored in the Pipe Context’s Shopper <b>Dictionary</b>, creates corresponding entries in the <b>OrderForm</b>’s <code>order</code> <b>Dictionary</b>, and initializes these new entries to contain the values read from the Shopper <b>Dictionary</b>. The <b>OrderForm</b> entries written by <b>DefaultShopperInfo</b> are prefixed with _<code>shopper</code>_, followed by the name of the entry in the Shopper <b>Dictionary</b>. Finally, the appropriate _<code>shopper</code> entry is initialized to contain the corresponding value from the source <b>Dictionary</b>.</p>
<p>
The following example, from the Volcano Coffee sample site, illustrates this operation.</p>
<p>
When a customer of the Volcano Coffee site adds an item to his or her basket, the <b>OrderFormPurchase</b> function is called. This function, which is defined in the xt_orderform_purchase.asp file, retrieves a <b>DBStorage</b> object that represents shopper storage, and then uses that object to retrieve information on the current shopper:</p>
<pre><code>REM Create a Storage object for the shopper information
Set mscsShopperStorage = UtilGetShopperStorage()

REM Get the shopper from the shopper storage
on error resume next
set mscsShopper = UtilGetShopper(mscsShopperStorage)
on error goto 0</code></pre>
<p>
The <b>DBStorage</b> object returned by <b>UtilGetShopperStorage</b> has been configured to query vc30_shopper table. The vc30_shopper table has the following structure.</p>
<p>
<img src="shopper_storage.gif" alt="The vc30_shopper table" border=0></p>
<p>
The call to <b>UtilGetShopper</b> returns a <b>Dictionary</b> that contains all of the columns in this table for the current customer. Finally, the function calls the <b>UtilGetPipeContext</b> function to retrieve the pipe context, and explicitly initializes the Pipe Context’s Shopper name/value pair to reference the <b>Dictionary</b> returned by <b>UtilGetShopper</b>:</p>
<pre><code>REM Create the basic pipe context
set mscsPipeContext = UtilGetPipeContext()

REM Add necessary data to the pipe context 
set mscsPipeContext.Shopper = mscsShopper
</code></pre>
<p>
After the pipe has been executed, the OrderForm contains the following name/value pairs:</p>
<pre><code>order._shopper_shopper_id
order._shopper_created
order._shopper_name
order._shopper_password
order._shopper_street
order._shopper_city
order._shopper_state
order._shopper_zip
order._shopper_country
order._shopper_phone
order._shopper_email
</code></pre>
<!-----------------------------Copyright 1997-1998 Microsoft Corporation------------------------------>
<hr>
<center><font size=-1>
<A HREF="sdklegal.htm">&copy; 1997-1998 Microsoft Corporation. All rights reserved.</A>
</font></center>
<br>
<br>
<p>&nbsp;</p></body>
</HTML>
