<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Executing the Pipeline from an Application</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css">
<br>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="com_writingcomponents_zfbq"></a><sup></sup>Executing the Pipeline from an Application</h2>
<p>
In many situations, and particularly in the case of the Commerce Interchange Pipeline, it is useful to execute a pipeline from within an executable application, rather than within the context of an ASP file.</p>
<p>
To do this, you create an <b>OrderPipeline</b> object, and request an <b>IOrderPipeline</b> interface pointer on that object. Then, you use the <b>IOrderPipeline</b> interface pointer to call the <b>LoadPipe</b> and <b>Execute</b> methods.</p>
<p>
The following sample code illustrates this process:</p>
<pre><code>// At the top of the file: necessary include directives.

#include "mspu_guids.h"
#include "pipeline.h"

// In the body of the function in which you execute the pipeline.

IOrderPipeline *pOrderPipeline = NULL;
long lErrorLevel = OPPERRORLEV_WARN;        // Tolerate warnings.

WCHAR *pwszPCF = L"c:\\Microsoft Site Server\\Sites\\Commerce\\Market\\SendHTTP.pcf";
HRESULT hResult;

// Initialize the COM library.

hResult = CoInitialize(NULL);

if(FAILED(hResult)){
    AfxMessageBox(IDS_CANT_INIT_COM, MB_OK);
    return;
}

hResult = CoCreateInstance(CLSID_COrderPipeline, NULL, NULL, CLSCTX_INPROC_SERVER, IID_IOrderPipeline, (void**)&amp;pOrderPipeline);

if(FAILED(hResult)){
    AfxMessageBox(IDS_CANT_CREATE_PIPELINE, MB_OK);
    return;
}

hResult = pOrderPipeline-&gt;LoadPipe(pwszPCF);

if(FAILED(hResult)){
    AfxMessageBox(IDS_CANT_LOAD_PIPE, MB_OK);
    pOrderPipeline-&gt;Release();
    pOrderPipeline = NULL;
    return;
}

hResult = pOrderPipeline-&gt;Execute(0, pDispOrder, NULL, 0, &amp;lErrorLevel);
</code></pre>
<p>
This example assumes that the <i>pDispOrder</i> variable represents a valid <b>IDispatch</b> interface on the <b>Dictionary</b> or <b>OrderForm</b> object that contains the order information.</p>
<!-----------------------------Copyright 1997-1998 Microsoft Corporation------------------------------>
<hr>
<center><font size=-1>
<A HREF="sdklegal.htm">&copy; 1997-1998 Microsoft Corporation. All rights reserved.</A>
</font></center>
<br>
<br>
<p>&nbsp;</p></body>
</HTML>
