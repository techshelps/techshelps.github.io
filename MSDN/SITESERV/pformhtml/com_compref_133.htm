<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Predictor.GetPredictions Method</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css">
<br>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="com_compref_dlhn"></a><sup></sup>Predictor.GetPredictions Method</h2>
<p>
The <b>GetPredictions</b> method examines a list of orders (usually the customer's order form) and suggests a specified number of products in which the customer may be interested, based on the knowledge base created by the <b>Predictor</b>.</p>
<p>
<b>GetPredictions</b> returns a list of products, sorted by <b>Weight</b>, in the form of a <b>SimpleList</b> object that contains <b>Dictionary</b> objects. Each <b>Dictionary</b> object in the returned list corresponds to one suggested item, and contains three properties. The following properties are returned for each suggested item.</p>
<table cellspacing=4 cols=2 width=464>
<tr valign=top>
<th align=left width=19%>Property</th>
<th align=left width=81%>Description</th>
</tr>
<tr valign=top>
<td colspan=2 width=100%></td>
</tr>
<tr valign=top>
<td width=19%><b>SKU</b></td>
<td width=81%>Product SKU for suggested item.</td>
</tr>
<tr valign=top>
<td width=19%><b>Weight</b></td>
<td width=81%>Predicted quantity for this item, returned as a positive floating point number. Higher values of weight indicate higher predicted preference for that item.</td>
</tr>
<tr valign=top>
<td width=19%><b>MatchSupport</b></td>
<td width=81%>Number of merged baskets from other customers on which this suggestion is based, expressed as a floating value. Used in combination with the number of baskets evaluated (returned by the <b>InitPredictor</b> method), this number can be used to indicate the validity of this recommendation. In this release, all suggestions returned by a single call to <b>GetPredictions</b> return the same value for <b>MatchSupport</b>.</td>
</tr>
</table><br>
<h4>Syntax</h4>
<p>
<i>Predictor</i><b>.GetPredictions(</b><i>Items</i>, <i>MaxPredictions, PopularItemFilter, RequiredMatches</i><b>)</b></p>
<h4>Parameters</h4>
<dl>
<dt>
<i>Items</i></dt>
<dd>
The customer interest list, usually a list of items the customer has ordered or expressed interest in. The list must be implemented as a <b>SimpleList</b> object that contains <b>Dictionary</b> objects, where each <b>Dictionary</b> object represents a single item and contains properties called <code>SKU</code> and <code>Quantity</code>. The <b>GetPredictions</b> method evaluates these items to suggest other items.</dd>
<dt>
<i>MaxPredictions</i></dt>
<dd>
The maximum number of items to be returned by the <b>GetPredictions</b> method.</dd>
<dt>
<i>PopularItemFilter</i></dt>
<dd>
A factor, expressed as a floating-point number between zero (0) and one (1), representing the degree that popular (frequently purchased) items are filtered from the suggestion list. In certain markets, some items are already so well-known (as indicated by their frequency of purchase) that they do not need to be suggested. For example, suppose that the most popular items at the Microsoft Press site were mouse pads. The store manager may prefer to suppress these items from the suggestion list. A value of one (1) indicates that popular products will be filtered, producing suggestions more specialized to the particular customer. A value of zero (0) indicates that suggestions are based solely on the purchases of similar customers. For applications where most of the users are familiar with many of the popular products, a value of about 0.9 is appropriate. To maximize sales of the most popular items, a value of zero (0) is recommended.</dd>
<dt>
<i>RequiredMatches</i></dt>
<dd>
The minimum number of similar customers that were <i>matched</i> in the database in generating the suggestions. If there are fewer than <i>RequiredMatches</i> number of matching customers in the knowledge base, then <b>GetPredictions</b> will return no suggestions. Generally, a value of 4 to 6 is recommended for deployed applications where adequate data exists, to ensure higher quality suggestions. Making suggestions based on fewer than two matching customers is not advisable and may lead to issues of privacy intrusions and potentially revealing the contents of a single customer’s basket.</dd>
</dl>
<h4>Example</h4>
<p>
The following example, from Microsoft Press Basket.asp, gets suggestions from the <b>Predictor</b>, returning the results in a <b>SimpleList</b> object,<b> </b>called <code>products</code>, that contains <b>Dictionary</b> objects:</p>
<pre><code>set products = predictor.GetPredictions(orderItems, 6, 0.3, 2)
</code></pre>
<p>
For a complete example, see <a href="com_compref_131.htm">Predictor Example: Microsoft Press Product.asp</a>.</p>
<h4>Remarks</h4>
<p>
Calling the <b>GetPredictions</b> method does not update the knowledge base.</p>
<!-----------------------------Copyright 1997-1998 Microsoft Corporation------------------------------>
<hr>
<center><font size=-1>
<A HREF="sdklegal.htm">&copy; 1997-1998 Microsoft Corporation. All rights reserved.</A>
</font></center>
<br>
<br>
<p>&nbsp;</p></body>
</HTML>
