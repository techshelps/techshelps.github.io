<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Receipt Request and Generation</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css">
<br>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="com_cic_jmaj"></a><sup></sup>Receipt Request and Generation</h2>
<p>
When you transmit a business data object through a transmit pipeline, you have the option to request a return receipt for that data. Return receipts in the Commerce Interchange Pipeline (CIP) work very much as they do when you send a certified letter. You fill out a form indicating that you want some acknowledgement that the letter was received. When the letter is received, the recipient of the letter signs to get it, and the signed receipt is then transmitted back to you, the original sender.</p>
<p>
In the CIP, a similar series of events occurs. To request a receipt, a property named <code>Receipt_requeste</code>d is added to the transport dictionary, and its value is set to the text <i>Yes</i>.</p>
<p>
In the Add Header stage of the CIP, if <code>Receipt_requeste</code>d is present and is set to <i>Yes</i>, then the <a href="com_piperef_1.htm"><b>AddHeader</b></a> component writes the receipt request to the Transport Dictionary prior to transmission.</p>
<p>
The receipt request includes the following items:
<ul>
<li>
&upsilon;The algorithm to be used to hash the business object data to derive a <i>digest</i>. SHA1 is a standard hash algorithm.</li>
<li>
&upsilon;A document type tag that identifies the kind of document requested from the receiving pipeline.</li>
</ul>
<p>
In the receive pipeline, the Transport Dictionary enters the Open Header stage. This stage contains the <a href="com_piperef_35.htm"><b>OpenHeader</b></a> component. This component reads the XML tags appended to <code>working</code>_<code>data</code> by the <b>AddHeader</b> component, and writes them as name/value pairs to the Transport Dictionary. If, among these XML tags, appears a request for a return receipt, the <b>OpenHeader</b> component hashes the business data object to create the digest. The digest is not human-readable, and is intended to serve as a receipt. The digest also is written as a name/value pair to the Transport Dictionary.</p>
<p>
The <b>OpenHeader</b> component is simply preparing the Transport Dictionary to be processed by the <a href="com_piperef_27.htm"><b>GenerateReceipt</b></a> component. The <b>Generate</b> <b>Receipt </b>component reads the values written by <b>OpenHeader</b>, creates a return receipt business data object, and then sends the receipt back to the original sender using a new transmit pipeline.</p>
<p>
The <b>GenerateReceipt</b> component does not send back to the sender all of the values stored in the original Transport Dictionary. It sends only the transaction ID, the system date and time on the receiving system, the digest created by the <b>OpenHeader</b> component, and optionally, the document type, source and destination that were described in the original transmission.</p>
<p>
The original sender then provides a Receive pipeline to receive the receipt. This pipeline can contain the <b>AuditReceipt</b> component, which writes the receipt to the audit database. </p>
<!-----------------------------Copyright 1997-1998 Microsoft Corporation------------------------------>
<hr>
<center><font size=-1>
<A HREF="sdklegal.htm">&copy; 1997-1998 Microsoft Corporation. All rights reserved.</A>
</font></center>
<br>
<br>
<p>&nbsp;</p></body>
</HTML>
