<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Page.HTMLEncode Method</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css">
<br>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="com_compref_ivml"></a>Page.HTMLEncode Method</h2>
<p>
The <b>HTMLEncode</b> method applies HTML encoding to the specified text string. Its typical use is to display the contents of text fields contained in the database in HTML. Characters in the string such as “&lt;” and “&amp;” that have special meanings in HTML are converted into their HTML equivalents, such as <code>&amp;lt</code>; and <code>&amp;amp;</code> so that they will be displayed correctly by the client browser.</p>
<h4>Syntax</h4>
<p>
<i>Page</i><b>.HTMLEncode(</b><i>String</i><b>)</b></p>
<h4>Parameters</h4>
<dl>
<dt>
<i>String</i></dt>
<dd>
The text string to encode.
</dd>
</dl>
<h4>Examples</h4>
<p>
The following example displays the contents of the <code>company_name</code> field as an &lt;H1&gt; tag:</p>
<pre><code>&lt;H1&gt;&lt;% = mscsPage.HTMLEncode(companyinfo.company_name) %&gt;&lt;/H1&gt;
</code></pre>
<p>
Assuming that the field contains the name Lakes &amp; Sons, the previous example returns the following HTML string:</p>
<pre><code>&lt;H1&gt;Lakes &amp;amp; Sons&lt;/H1&gt;
</code></pre>
<p>
The following example creates a text field in a form, using as the initial value the contents of the query string argument <code>myString</code>. Because this string might contain a character such as double-quote ("), which would be interpreted incorrectly on the page, the string is first encoded with the <b>HTMLEncode </b>method.</p>
<pre><code>&lt;INPUT TYPE="TEXT" NAME="myString" VALUE="&lt;% = mscsPage.HTMLEncode(Request("myString")) %&gt;"&gt;
</code></pre>
<p>
The following example, from Clocktower’s Default.asp, displays the name of a department, where <code>rsDeptlist</code> is a recordset resulting from a query. Note the use of the <b>Value</b> property:</p>
<pre><code>&lt;% = mscsPage.HTMLEncode(rsDeptlist("dept_name").Value) %&gt;
</code></pre>
<h4>Remarks</h4>
<p>
If the text field to be displayed already contains HTML encoding, do not use the <b>HTMLEncode</b> method. For example, suppose your <code>product_descr</code> field contains HTML-encoded text such as “<code>The &lt;I&gt;Classic Diner Clock&lt;/I&gt; brings the age of the &amp;quot;Golden Oldies&amp;quot; to your kitchen.</code>” This string uses the &lt;I&gt; tag to format italic text and the <code>&amp;quot; </code>sequence to display quotation marks when displayed by the client browser. Because the string is already coded in HTML, you do not need to encode it again. Double-encoding the string would produce incorrect results.</p>
<p>
<b>Page.HTMLEncode</b> is identical to <b>Page.Encode</b>, but <b>HTMLEncode</b> is the preferred name. The method is similar to <b>Server.HTMLEncode</b> except that the <b>Page.HTMLEncode</b> method handles Null values by returning an empty string (<b>Server.HTMLEncode</b> fails when the <i>String</i> parameter is Null). This distinction is important because a database queries can return Null.</p>
<h4>Related Topics</h4>
<ul>
<li>
&upsilon;<a href="com_compref_123.htm"><b>Page.URLEncode</b> Method</a></li>
</ul>
<!-----------------------------Copyright 1997-1998 Microsoft Corporation------------------------------>
<hr>
<center><font size=-1>
<A HREF="sdklegal.htm">&copy; 1997-1998 Microsoft Corporation. All rights reserved.</A>
</font></center>
<br>
<br>
<p>&nbsp;</p></body>
</HTML>
