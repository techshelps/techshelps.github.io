<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MakePO</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css">
<br>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="com_tools_wliw"></a><sup></sup>MakePO</h2>
<p>
The <b>MakePO</b> component generates a purchase order (PO) by merging the information on the order form with a purchase order template. 
<ul>
<li>
&upsilon;<b>Template File Name</b>. Specifies the name of the file that provides the template for the purchase order. The template is usually a Microsoft®  Visual Basic Scripting (VBS) file with a .txt extension. Either type the full path to the file, or click <b>Browse</b> to locate the file (Win32 only). For example:<pre><code>C:\Inetpub\Wwwroot\Market\config\PoMailtemplate.txt
</code></pre>
</li>
<li>
&upsilon;<b>Script language for the template</b>. Specifies the programming language used in the template. The default is VBScript.</li>
<li>
&upsilon;<b>Output Property Name</b>. The name of a field on the order form or Transport Dictionary to which the component writes the PO. The default is <code>_po_text</code>.</li>
<li>
&upsilon;<b>Child Object Name</b>. Applies only when <b>Use Child Object</b> is set. A child object is an object that is referenced by a name/value pair on the Transport Dictionary that is passed into the pipeline. The <b>Child Object Name </b>specifies the name of this name/value pair. In a CIP, the order form (business data object) from which <b>MakePO </b>generates the purchase order is a child object. </li>
<li>
&upsilon;<b>Use Child Object</b>. Specifies the source from which the component reads the purchase order information. Select this option when using a CIP, so that the component reads this information from the business data object specified by the <b>Child Object Name</b> field. Clear this check box when using an OPP, so that the component reads this information from the order form that is passed directly into the pipeline.</li>
</ul>
<h4>Remarks</h4>
<p>
<b>MakePO</b> can be used to dynamically generate a text entry on the <b>OrderForm</b> (usually a purchase order). The entry is generated from a template file similar to an ASP page. Like an ASP page, a <b>MakePO</b> template contains plain text interspersed with special tags containing script code. From within script, output can be achieved using <b>PageGen.Print</b> <i>expression</i>, or &lt;%% = <i>expression</i> %%&gt; similar to ASP's shortcut for <b>Response.Write</b>. The script language is configurable in the property page.</p>
<p>
From within the <b>MakePO</b> template, the business object (<b>OrderForm</b>, dictionary, or child object) is exposed as an object with the name <code>Items</code>. The selected scripting language's library is also extended to include the members of this object as built-in properties, so referring to the business object's entries using the <code>Items.<i>xxx</i></code> notation is optional. For this reason it is advisable to declare any temporary variables, so that they are not saved to the business object.</p>
<p>
The following script is an example from the POMailTemplate.txt template, used by the <b>MakePO</b> component in the Purchase Order Submit stage of the SubmitViaMail.pcf pipeline for the Microsoft Market sample site:</p>
<pre><code>Item Class:&lt;%%= item.partclasscode %%&gt;
#:&lt;%%= item.partnumber %%&gt;  
Qty:&lt;%%= item.quantity %%&gt;  
Cost:&lt;%%= item.[_display_list_price] %%&gt;    
Unit Code:&lt;%%= item.unitcode %%&gt;
</code></pre>
<p>
The PO generated by <b>MakePO</b> can be saved to a file using the <a href="com_piperef_37.htm"><b>POToFile</b></a> component.</p>
<h5>Note</h5>
<p>
<b>MakePO</b> can not output variant subtype VT_DECIMAL. Any usage of decimal or currency in <b>MakePO</b> must be wrapped with a call to <b>CStr</b>, which properly coerces the value to a string. For example: <br>
<code>Requisition # &lt;%% = CStr(RequisitionID) %%&gt;</code></p>
<h4>Related Topic</h4>
<ul>
<li>
&upsilon;<a href="com_opp_34.htm">Creating EDI messages with <b>MakePO</b></a></li>
<li>
&upsilon;<a href="com_cic_10.htm">Using Mapping Components</a></li>
</ul>
<!-----------------------------Copyright 1997-1998 Microsoft Corporation------------------------------>
<hr>
<center><font size=-1>
<A HREF="sdklegal.htm">&copy; 1997-1998 Microsoft Corporation. All rights reserved.</A>
</font></center>
<br>
<br>
<p>&nbsp;</p></body>
</HTML>
