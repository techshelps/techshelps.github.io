<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Compiler Options</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="_vcce_compiler_options"></a>Compiler Options</h2>
<p>
The Windows CE Toolkit for Visual C++ 5.0 uses different compilers to build for the various supported target platforms. The following options are available with both the SH3 and MIPS compilers unless otherwise indicated. "MIPS only" indicates that the option is available only on the MIPS compiler Clmips.exe. "SH only" indicates that the option is available only on the SH compiler Shcl.exe.</p>
<table cellspacing=4 cols=2 width=464>
<tr valign=top>
<th align=left colspan=2 width=100%>-OPTIMIZATION-</th>
</tr>
<tr valign=top>
<td width=50%>/O1 minimize space</td>
<td width=50%>/Op[-] improve floating-point consistency</td>
</tr>
<tr valign=top>
<td width=50%>/O2 maximize speed</td>
<td width=50%>/Os favor code space</td>
</tr>
<tr valign=top>
<td width=50%>/Oa assume no aliasing (MIPS only)</td>
<td width=50%>/Ot favor code speed</td>
</tr>
<tr valign=top>
<td width=50%>/Ob&lt;n&gt; inline expansion (default n=0)</td>
<td width=50%>/Ow assume cross-function aliasing (MIPS only)</td>
</tr>
<tr valign=top>
<td width=50%>/Od disable optimizations (default)</td>
<td width=50%>/Ox maximum opts. (/Ogitb1 /Gs)</td>
</tr>
<tr valign=top>
<td width=50%>/Og enable global optimization</td>
<td width=50%>/Oy[-] enable frame pointer omission</td>
</tr>
<tr valign=top>
<td width=50%>/Oi enable intrinsic functions</td>
<td width=50%>/Qtime[0-9] Opt for 0=space vs. 9=time (SH only)</td>
</tr>
<tr valign=top>
<th align=left colspan=2 width=100%>-OUTPUT FILES-</th>
</tr>
<tr valign=top>
<td width=50%>/Fa[file] name assembly listing file</td>
<td width=50%>/Fp&lt;file&gt; name precompiled header file</td>
</tr>
<tr valign=top>
<td width=50%>/FA[sc] configure assembly listing</td>
<td width=50%>/Fr[file] name source browser file</td>
</tr>
<tr valign=top>
<td width=50%>/Fd[file] name .PDB file (MIPS only)</td>
<td width=50%>/FR[file] name extended .SBR file</td>
</tr>
<tr valign=top>
<td width=50%>/Fe&lt;file&gt; name executable file</td>
<td width=50%>/Fo&lt;file&gt; name object file</td>
</tr>
<tr valign=top>
<td width=50%>/Fm[file] name map file</td>
<td width=50%></td>
</tr>
<tr valign=top>
<th align=left colspan=2 width=100%>-PREPROCESSOR-</th>
</tr>
<tr valign=top>
<td width=50%>/C don't strip comments</td>
<td width=50%>/U&lt;name&gt; remove predefined macro</td>
</tr>
<tr valign=top>
<td width=50%>/D&lt;name&gt;{=|#}&lt;text&gt; define macro</td>
<td width=50%>/u remove all predefined macros</td>
</tr>
<tr valign=top>
<td width=50%>/E preprocess to stdout</td>
<td width=50%>/I&lt;dir&gt; add to include search path</td>
</tr>
<tr valign=top>
<td width=50%>/EP preprocess to stdout, no #line</td>
<td width=50%>/X ignore "standard places"</td>
</tr>
<tr valign=top>
<td width=50%>/P preprocess to file</td>
<td width=50%>/FI&lt;file&gt; name forced include file</td>
</tr>
<tr valign=top>
<th align=left colspan=2 width=100%>-LANGUAGE-</th>
</tr>
<tr valign=top>
<td width=50%>/vd{0|1} disable/enable vtordisp (MIPS only)</td>
<td width=50%>/Za disable extensions (implies /Op)</td>
</tr>
<tr valign=top>
<td width=50%>/vm&lt;x&gt; type of pointers to members (MIPS only)</td>
<td width=50%>/Ze enable extensions (default)</td>
</tr>
<tr valign=top>
<td width=50%>/Zi generate debugging information </td>
<td width=50%>/Zg generate function prototypes</td>
</tr>
<tr valign=top>
<td width=50%>/Z7 generate old-style debug info </td>
<td width=50%>/Zl omit default library name in .OBJ</td>
</tr>
<tr valign=top>
<td width=50%>/Zd line number debugging info only </td>
<td width=50%>/Zs syntax check only</td>
</tr>
<tr valign=top>
<td width=50%>/Zp[n] pack structs on n-byte boundary</td>
<td width=50%></td>
</tr>
<tr valign=top>
<th align=left colspan=2 width=100%>-MISCELLANEOUS-</th>
</tr>
<tr valign=top>
<td width=50%>/?, /help print this help message </td>
<td width=50%>/w disable all warnings</td>
</tr>
<tr valign=top>
<td width=50%>/c compile only, no link</td>
<td width=50%>/W&lt;n&gt; set warning level (default n=1)</td>
</tr>
<tr valign=top>
<td width=50%>/H&lt;num&gt; max external name length (MIPS only)</td>
<td width=50%>/WX treat warnings as errors</td>
</tr>
<tr valign=top>
<td width=50%>/J default char type is unsigned</td>
<td width=50%>/Yc[file] create .PCH file</td>
</tr>
<tr valign=top>
<td width=50%>/nologo suppress copyright message </td>
<td width=50%>/Yd put debug info in every .OBJ (MIPS only)</td>
</tr>
<tr valign=top>
<td width=50%>/Tc&lt;source file&gt; compile file as .c </td>
<td width=50%>/Yu[file] use .PCH file</td>
</tr>
<tr valign=top>
<td width=50%>/Tp&lt;source file&gt; compile file as .cpp </td>
<td width=50%>/YX[file] automatic .PCH</td>
</tr>
<tr valign=top>
<td width=50%>/V&lt;string&gt; set version string</td>
<td width=50%>/Zn turn off SBRPACK for .SBR files</td>
</tr>
<tr valign=top>
<th align=left colspan=2 width=100%>-LINKING-</th>
</tr>
<tr valign=top>
<td width=50%>/F&lt;num&gt; set stack size</td>
<td width=50%>/LDd Create .DLL debug library (MIPS only)</td>
</tr>
<tr valign=top>
<td width=50%>/LD Create .DLL</td>
<td width=50%>/link [linker options and libraries]</td>
</tr>
<tr valign=top>
<th align=left colspan=2 width=100%>-CODE GENERATION (General)-</th>
</tr>
<tr valign=top>
<td width=50%>/Gd __cdecl calling convention (MIPS only)</td>
<td width=50%>/Gh enable hook function call (MIPS only)</td>
</tr>
<tr valign=top>
<td width=50%>/Gr __fastcall calling convention (MIPS only)</td>
<td width=50%>/GR[-] enable C++ RTTI</td>
</tr>
<tr valign=top>
<td width=50%>/Gf enable string pooling</td>
<td width=50%>/Gy separate functions for linker</td>
</tr>
<tr valign=top>
<td width=50%>/GF enable read-only string pooling</td>
<td width=50%>/Gt[n] data objects &lt;= n bytes are near (MIPS only)</td>
</tr>
<tr valign=top>
<td width=50%>/Ge enable stack checking calls (MIPS only)</td>
<td width=50%></td>
</tr>
<tr valign=top>
<td width=50%>/Gs[num] disable stack checking calls (MIPS only)</td>
<td width=50%></td>
</tr>
<tr valign=top>
<th align=left colspan=2 width=100%>-CODE GENERATION (Machine Specific)-</th>
</tr>
<tr valign=top>
<td width=50%>/QMRWCE generate Windows CE MIPS code</td>
<td width=50%>/Qsh3r3 generate code for SH3 Rev. 3 (SH only)</td>
</tr>
<tr valign=top>
<td width=50%>/QMmips1 MIPS1 ISA (MIPS only)</td>
<td width=50%>/Qsh3r4 generate code for SH3 Rev. 4 (SH only)</td>
</tr>
<tr valign=top>
<td width=50%>/QMmips2 MIPS2 ISA(default) (MIPS only)</td>
<td width=50%>/Qsh3r5 generate code for SH3 Rev. 5 (SH only)</td>
</tr>
<tr valign=top>
<td width=50%>/QMmips3 MIPS3 ISA (MIPS only)</td>
<td width=50%>/Qsh3r6 generate code for SH3 Rev. 6 (SH only)</td>
</tr>
<tr valign=top>
<td width=50%>/QMmips4 MIPS4 ISA (MIPS only)</td>
<td width=50%>/Qsh3r7 generate code for SH3 Rev. 7 (SH only)</td>
</tr>
<tr valign=top>
<td width=50%>/QMNoDivCheck no divide by zero check (MIPS only)</td>
<td width=50%>/Qsh3r8 generate code for SH3 Rev. 8 (SH only)</td>
</tr>
<tr valign=top>
<td width=50%>/QMOb&lt;n&gt; basic block threshold (MIPS only)</td>
<td width=50%></td>
</tr>
<tr valign=top>
<td width=50%>/QMOu&lt;n&gt; unroll n loop iterations (MIPS only)</td>
<td width=50%></td>
</tr>
<tr valign=top>
<td width=50%>/QMPux&lt;n&gt; use mips3 opcodes if n=1 (MIPS only)</td>
<td width=50%></td>
</tr>
</table><br>
<p>&nbsp;</p></body>
</HTML>
