<HTML>

<Head>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Customizing and Optimizing MicrosoftOffice</TITLE>

<META NAME="GENERATOR" CONTENT="Internet Assistant For Microsoft Word&nbsp;2.0z Beta">
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR="#ffffff" TOPMARGIN=0 LEFTMARGIN=0>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>


<!--TOPBAR_START-->

<TABLE WIDTH=100% CELLPADDING=0 CELLSPACING=0 BORDER=0 BGCOLOR="#000000">
<TR>
<TD WIDTH=100% HEIGHT=20 VALIGN=TOP>&nbsp;</TD>
</TR>
</TABLE>

<!--TOPBAR_END-->

<!--Header/Footer Info_START-->
<TABLE WIDTH=98% BORDER=0 CELLPADDING=0>
<TR>
<TD WIDTH=20% ALIGN=LEFT><FONT COLOR="#000000" FACE="VERDANA,ARIAL,HELVETICA" Size=1>
<B>C H A P T E R &nbsp;&nbsp; 7</B></FONT></TD>
<TD WIDTH=50% ALIGN=CENTER><FONT COLOR="#000000" FACE="VERDANA,ARIAL,HELVETICA" Size=1>
<B>Part 2&nbsp;&nbsp;Deploying Microsoft Office</B></FONT></TD>
<TD WIDTH=30% ALIGN=RIGHT><FONT COLOR="#000000" FACE="VERDANA,ARIAL,HELVETICA" SIZE=1>
<B>Microsoft Office Resource Kit</B></FONT></TD></TR>
</TABLE>
<P>
<!--Header/Footer Info_END-->

<P><!--NAV_START-->
<TABLE WIDTH="98%" BGCOLOR="#ffffff" BORDER=0 CELLSPACING=0 CELLPADDING=3>
<TR><TD VALIGN="TOP" WIDTH=68%><FONT SIZE=5><B>Customizing and Optimizing Microsoft&nbsp;Office</B></FONT></TD>
<TD WIDTH=30% VALIGN=TOP ALIGN=RIGHT>
<a href="006.htm"><IMG SRC="prevpage.gif" ALT="Previous" BORDER="0" ALIGN="RIGHT"></A>
<BR>
<BR>
<A HREF="fulltoc.htm"><IMG SRC="CNTBUTT.gif" ALT="Contents" BORDER="0" ALIGN="RIGHT"></A>
</TD>
<TD WIDTH=10% VALIGN=TOP ALIGN=RIGHT>
<a href="008.htm"><IMG SRC="nextpage.gif" ALT="Next" BORDER="0" ALIGN=RIGHT></A>
<BR>
<BR>
<A HREF="a.htm"><IMG SRC="indxbutt.gif" ALT="Index" BORDER="0" ALIGN=RIGHT></A>

</TD>
</TR>
</TABLE><HR>
<!--NAV_END-->
<MENU><MENU><MENU>




<P>
<FONT SIZE=3><B>In This Chapter</B></FONT>
<BR>
<A HREF="#ORK007C1">Using Windows System Policies to Customize Office</A>
<BR>
<A HREF="#ORK007C2">Customizing Office Connections to the World Wide Web</A>
<BR>
<A HREF="#ORK007C3">Optimizing Individual Office Applications</A>
<BR>

<P>
This chapter contains information about customizing user environments
in your workgroup and modifying your users' computers for optimum
performance of Microsoft Office&nbsp;97 for Windows or Microsoft Office&nbsp;98
for the Macintosh.
<P>
      <B>See Also</B>

<P>
<UL TYPE="square">
<P>
<LI>For information about installing
Office applications, see Chapter&nbsp;4, "<a href="004.htm">Installing
Microsoft Office</A>."
<P>
<LI>For information
about the system policies available in the Office policy templates,
see Appendix&nbsp;C, "<A HREF="AppC.htm">Registry
Keys and Values</A>."
<P>
<A NAME="ORK007C1"></A>
</UL>
<P>
</MENU></MENU></MENU>
<!--ToTop_START-->
<TABLE width=98% cellpadding=0 cellspacing=0 border=0>
<TR><TD align=right><TABLE cellpadding=0 cellspacing=0 border=0><TR><TD><A href="#top"><FONT SIZE=1 FACE="VERDANA,ARIAL,HELVETICA">Top</FONT></A></TD><TD><A href="#top"><IMG SRC="ar_up.gif" WIDTH=11 HEIGHT=7 BORDER=0 ALIGN=MIDDLE></A></TD></TR></TABLE>
</TD></TR>

</TABLE>
<HR>
<!--ToTop_END-->
<MENU>


<FONT SIZE=5><B><A NAME="CH007H101">Using Windows System Policies to Customize Office</A></B></FONT>
<MENU><MENU>

<P>
<a name="dex1"></a>
<P>
Office applications have many options that users can customize
to alter the user interface and behavior of the application. As
a network administrator, you can set many of these options remotely,
for all the users in a workgroup, using Windows system policies.
System policies allow you to provide greater consistency among
client computers and to centralize support and maintenance efforts.
<P>
</MENU></MENU>
<P>
<TABLE WIDTH=93% CELLPADDING=0 CELLSPACING=0 BORDER=0>

<TR>

<TD WIDTH=80 ALIGN=RIGHT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><IMG SRC="WINDOWSO.GIF" WIDTH=27 HEIGHT=27 BORDER=0 ALT="">&nbsp;&nbsp;</FONT></TD>
<TD><FONT COLOR="#0000FF" FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Note&nbsp;&nbsp;&nbsp;</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>System
policies are supported by Windows&nbsp;95 and Windows&nbsp;NT
Workstation version&nbsp;4.0 only. The Macintosh and Windows&nbsp;NT
Workstation version&nbsp;3.51 operating systems do not support
system policies. In this section, Windows refers to Windows&nbsp;95
and Windows&nbsp;NT Workstation&nbsp;4.0.
</FONT></TD>

</TR>

</TABLE>
<MENU><MENU>
<P><P>
<FONT SIZE=4><B><A NAME="CH007H201">Windows System Policies</A></B></FONT>

<a name="dex2"></a>
<P>
The Office applications use keys in the Windows registry to record
the values of user&#173;defined options. For example, Microsoft
Excel stores the value of the <B>Save Excel files as</B> option
in a registry key. When a user changes the <B>Save Excel files
as</B> option on the <B>Transition</B> tab in the <B>Options</B>
dialog box (<B>Tools</B> menu), Excel records the new
value in the registry.
<P>
A system policy represents an option corresponding to one or more
Windows registry keys. System policies are defined by a system
policy template file that associates each policy with the registry
keys used by the application for the option that the policy represents.
The template also organizes the policies in a hierarchy to make
them easier to find.
<P>
The Windows System Policy Editor displays system policy values
as defined in the policy template file and allows you to change
these values. You store the modified policies in a system policy
file, which you then place on a network server. When a user logs
on to the network, Windows downloads the system policy file from
the server and alters the values in the user's Windows registry
based on the policies in the file.
<P>
For example, you can use the System Policy Editor to set a value
for the <B>Save Excel files as</B> option described earlier: Set
the value in the <B>Default Save</B> policy for Excel,
and then place the system policy file on the network server. When
a user logs on, Windows reads the <B>Default Save</B> policy value
from the policy file and modifies the value entry in the <B>Save
Excel files as</B> subkey in the user's Windows registry. When
the user runs Excel, the application uses the new <B>Save
Excel files as</B> value. Because users logging on to the network
all use the same policy file, this same option is set for all
users from a central location.
<P>
For more information about Windows system policies, see the <I>Microsoft</I>
<I>Windows&nbsp;95 Resource Kit</I> or the <I>Microsoft</I>
<I>Windows&nbsp;NT Server 4.0 Resource Kit </I>and<I>
Microsoft</I> <I>Windows&nbsp;NT Workstation&nbsp;4.0
Resource Kit</I>.
<P>
<FONT SIZE=4><B><A NAME="CH007H202">The System Policy Editor</A></B></FONT>

<P>
<a name="dex3"></a>
<P>
To create or modify a system policy file, use the System Policy
Editor, which is included in the Office Resource Kit Tools and
Utilities. To create a system policy file click the <B>New Policy</B>
command on the System Policy Editor <B>File</B> menu. For more
information about how to install the Office policy template files,
see "<A HREF="appc.htm#CHappcH101">Installing
the System Policy Editor</A>," in Appendix&nbsp;C,
"Registry Keys and Values."
<P>
<a name="dex4"></a>
<P>
After you set the policy values you want, place the system policy
file in the appropriate folder on the network server.
<P>
<a name="dex5"></a>
<P>
<B><FONT COLOR="#0000FF"><IMG SRC="Proced.gif" WIDTH=5 HEIGHT=10 BORDER=0 ALT="">&#09;To
store the system policy file on the network server</FONT></B>
<P>
<OL>
<P>
<LI>On the System Policy Editor
<B>File</B> menu, click <B>Save As</B>, and save the system policy
file as Config.pol (for Windows&nbsp;95 clients) or Ntconfig.pol (for Windows&nbsp;NT Workstation clients).
<P>
<LI>Exit the System Policy Editor.
<P>
<LI>On
Windows&nbsp;NT networks, copy Config.pol or Ntconfig.pol to the Netlogon folder
of the primary domain controller, as defined for your client computers.
<P>
&#150;&nbsp;or&nbsp;&#150;
<P>
On NetWare networks, copy Config.pol or Ntconfig.pol to the Public
folder of the preferred server, as defined for your client computers.
<P>
</OL>
<P>
</MENU></MENU>
<P>
<TABLE WIDTH=93% CELLPADDING=0 CELLSPACING=0 BORDER=0>

<TR>

<TD WIDTH=80 ALIGN=RIGHT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><IMG SRC="CDO.GIF" WIDTH=27 HEIGHT=27 BORDER=0 ALT="">&nbsp;&nbsp;</FONT></TD><TD><B><FONT SIZE=2 COLOR="#0000FF" FACE="VERDANA,ARIAL,HELVETICA">Tools and Utilities&nbsp;&nbsp;&nbsp;</FONT></B><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>The
Office Resource Kit Tools and Utilities include the latest version
of the System Policy Editor. This is the same version that is
included with Windows&nbsp;NT Workstation&nbsp;4.0, and you can
use it with both Windows&nbsp;95 and Windows&nbsp;NT Workstation&nbsp;4.0.
For more information, see "<A HREF="appa.htm#CHappaH203">System
Policy Editor and Office&nbsp;97 Policy Templates</A>" in
Appendix&nbsp;A, "Microsoft Office Resource Kit Tools
and Utilities."</FONT>

</TD>

</TR>

</TABLE>
<MENU><MENU>
<P><P>
<FONT SIZE=3><B>Using Office Policy Template Files</B></FONT>

<a name="dex6"></a>
<P>
To help you create a policy file for Office, the Office Resource
Kit Tools and Utilities include three Office template files that
define all the system policies that can be set for Office&nbsp;97
applications. These template files are described in the following
table.
<P>
<TABLE WIDTH=80% VALIGN="TOP" BORDER=1 BORDERCOLOR="#C0C0C0" CELLPADDING=4 CELLSPACING=0>

<TR><TD WIDTH=41% VALIGN="BOTTOM" BGCOLOR="#C0C0C0"><B><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>This template file</FONT></B>
</TD><TD WIDTH=59% VALIGN="BOTTOM" BGCOLOR="#C0C0C0"><B><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Defines policies for these applications</FONT></B>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Off97w95.adm (Windows&nbsp;95) or Off97nt4.adm (Windows&nbsp;NT Workstation&nbsp;4.0)</FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Excel, Microsoft PowerPoint, and Microsoft Word, and general settings for all Office applications</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Access97.adm</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Microsoft Access</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Outlk97.adm</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Microsoft Outlook</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Query97.adm</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Microsoft Query and ODBC</FONT>
</TD></TR>

<P>
</TABLE>
<P>
<FONT COLOR="#0000FF" SIZE=2><B>Note&nbsp;&nbsp;&nbsp;</B></FONT>Windows
system policy template files have a .adm file extension and are
not similar to other Office template files.
<P>
The system policies in the Office policy template files are organized
by application. Most policies correspond to options that users
can set in the <B>Options</B> dialog box (<B>Tools</B> menu) of
each Office application. For example, the <B>Macro Virus Protection</B>
policy for Word is found under <B>User\Word&nbsp;97\Tools_Options\General\Macro
Virus Protection</B>. Some policies do not correspond to settings
that users can select; these are organized by application or under
the general Office heading.
<P>
For a complete index of system policies available in the Office
policy templates, see Appendix&nbsp;C, "<A HREF="AppC.htm">Registry
Keys and Values</A>."
<P>
<FONT SIZE=3><B>Setting System Policies</B></FONT>

<P>
<a name="dex7"></a>
<P>
Using the System Policy Editor, you can set user<I> </I>policies
for all users, for a particular network group, or for a single
user. <I>User policies</I> are system policies that
represent application options relevant to the user currently logged
on to Windows, and they are stored in the <B>HKEY_USERS</B> portion
of the user's Windows registry.
<P>
<a name="dex8"></a>
<P>
You can also set computer policies for all client computers or
for a single computer. <I>Computer policies</I> are
system policies that represent options relevant to a particular
computer, and they are stored in the <B>HKEY_LOCAL_MACHINE</B>
portion of the Windows registry.
<P>
<a name="dex9"></a>
<P>
To set system policies for all users, double&#173;click the Default
User icon in the main window of the System Policy Editor to display
the <B>Default User Properties</B> dialog box. This dialog box
contains a list of all the system policies you can set for the
user. To set system policies for all client computers, double&#173;click
Default Computer instead to display the<B> Default Computer</B>
<B>Properties</B> dialog box.
<P>
<FONT COLOR="#0000FF" SIZE=2><B>Note&nbsp;&nbsp;&nbsp;</B></FONT>The
name of this dialog box changes depending on the name of the icon
you double&#173;click in the main window of the System Policy
Editor, and is referred to generically in this section as the
Properties dialog box.
<P>
<IMG SRC="00706.gif">
<P>
You can also set system policies for a single user or group of
users.
<P>
<a name="dex10"></a>
<P>
<B><FONT COLOR="#0000FF"><IMG SRC="Proced.gif" WIDTH=5 HEIGHT=10 BORDER=0 ALT="">&#09;To
set system policies for a specific user or group of users</FONT></B>
<P>
<OL>
<P>
<LI>Start the System Policy
Editor.
<P>
<LI>On the <B>Edit</B> menu, click <B>Add
User</B> or <B>Add Group</B>.
<P>
<LI>In the <B>Add
User</B> or <B>Add Group</B> box, enter the name of the user or
the group.
<P>
The System Policy Editor creates an icon for that
user or group in the main window.
<P>
<LI>Double&#173;click
the new icon to display the <B>Properties</B> dialog box.
<P>
</OL>
<P>
<FONT COLOR="#0000FF" SIZE=2><B>Note&nbsp;&nbsp;&nbsp;</B></FONT>The
group names you specify in the System Policy Editor must reference
user groups that already exist in the network system. You cannot
create new groups from within the System Policy Editor.
<P>
If you add more than one group, you can set the relative priority
for the groups. When a user who is a member of several groups
logs on, the policy settings from the highest priority group are
processed last so that those settings override the settings from
lower priority groups. To set group priorities, click <B>Group
Priority</B> on the <B>Options</B> menu in the System Policy Editor.
<P>
In addition to users and user groups, you can set policies for
a particular client computer.
<P>
<B><FONT COLOR="#0000FF"><IMG SRC="Proced.gif" WIDTH=5 HEIGHT=10 BORDER=0 ALT="">&#09;To
set system policies for a client computer</FONT></B>
<P>
<OL>
<P>
<LI>Start the System Policy
Editor.
<P>
<LI>On the <B>Edit</B> menu, click <B>Add
Computer</B>.
<P>
<LI>In the <B>Add Computer</B> box,
enter the name of the client computer.
<P>
The System Policy Editor creates an icon for that
computer in the main window.
<P>
<LI>Double&#173;click
the new icon to open the <B>Properties</B> dialog box.
<P>
</OL>
<P>
You can expand and collapse groups of policies in the <B>Properties</B>
dialog box using the plus (+) and minus (&nbsp;&#150;&nbsp;)
signs to the left of group headings. Each policy has a check box
to the left that indicates its current setting. If a policy requires
additional information, an edit control appears at the bottom
of the dialog box.
<P>
<IMG SRC="00705.gif">
<P>
A system policy can have one of three settings in the <B>Properties</B>
dialog box:
<P>
<P>
</MENU></MENU>
<TABLE WIDTH=93% CELLPADDING=0 CELLSPACING=0 BORDER=0>

<TR><TD WIDTH=80 ALIGN=RIGHT VALIGN=TOP><IMG SRC="00702.gif" WIDTH=12 HEIGHT=12 BORDER=0 ALT="">&nbsp;&nbsp;<BR>
<BR>
<BR>
<BR>
<BR>
<IMG SRC="00703.gif" WIDTH=12 HEIGHT=12 BORDER=0 ALT="">&nbsp;&nbsp;<BR>
<BR>
<BR>
<BR>
<BR>
<BR>
<IMG SRC="00704.gif" WIDTH=12 HEIGHT=12 BORDER=0 ALT="">&nbsp;&nbsp;<BR>
<BR></TD>

<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><UL TYPE="square"><LI>Checked
<P>
The policy has been implemented. When a user logs
on, the Windows registry changes to conform to the policy.</UL><p></FONT>

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><UL TYPE="square"><LI>Cleared
<P>
The policy has not been implemented. If it was implemented
previously (either through a system policy or the user's configuration
settings), the previously specified settings are removed from
the registry.</UL><p></FONT>

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><UL TYPE="square"><LI>Grayed
<P>
The setting is unchanged from the last time the user
logged on. Windows makes no modifications to the user's configuration
settings.</UL></FONT></td>
</TR>

</TABLE>
<MENU><MENU>

For example, you might select the check box for the policy <B>Default
Save</B> for Excel and assign the value <B>Microsoft
Excel&nbsp;5.0/95 Workbook</B>. When a user logs on to the network,
the user's registry is modified to set the default file format
in which to save Excel workbooks to this value. If the
user has set this value to another file format, that setting is
overwritten. If this check box is cleared in the policy file,
then the option in Excel is unavailable when the user
logs on. If the policy is grayed, then Windows does not modify
the user's registry and it retains its previous setting.
<P>
<FONT SIZE=4><B><A NAME="CH007H203">Client Computer Requirements for System
Policies</A></B></FONT>

<P>
<a name="dex11"></a>
<P>
Client computers must meet the following requirements to use system
policies:
<P>
<UL TYPE="square">
<P>
<LI>Windows&nbsp;95 or Windows&nbsp;NT
Workstation&nbsp;4.0 must be installed.
<P>
<LI>If you
want to set user policies, client computers must have user profiles
enabled.
<P>
<LI>If you want to set group policies,
the group policy capability must be installed on each client computer.
<P>
<LI>For
automatic downloading of policies over Windows&nbsp;NT networks,
Client for Microsoft Networks must be specified as the primary
network logon client, and the domain must be defined on the client
computers.
<P>
For automatic downloading of policies over NetWare
networks, Microsoft Client for NetWare Networks must be specified
as the primary network logon client, and a preferred server must
be defined.
<P>
</UL>
<P>
<FONT COLOR="#0000FF" SIZE=2><B>Note&nbsp;&nbsp;&nbsp;</B></FONT>By
default, Windows&nbsp;95 and Windows&nbsp;NT Workstation&nbsp;4.0
automatically download the system policies you created and placed on the appropriate network server. If you want to change to manual
downloading, see the <I>Microsoft Windows&nbsp;95 Resource Kit</I> or
the <I>Microsoft Windows&nbsp;NT Server 4.0 Resource Kit</I> and <I>Microsoft Windows&nbsp;NT Workstation&nbsp;4.0 Resource Kit</I>. If the client
computers are using NETX or VLM, then you must download system
policies manually.
<P>
<TABLE WIDTH=70% VALIGN="TOP" CELLPADDING=15 CELLSPACING=0 BORDER=1 BORDERCOLOR=#0000FF><TR BGCOLOR="#FFFFFF"><TD>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
<P>
<B>How Does Windows Use System Policies?</B>
<P>
When the user logs on, Windows checks the user's configuration
information for the location of the policy file. Windows then
downloads the policies and copies the information in the registry
using the following process.
<P>
First, if user profiles are enabled, Windows checks for a user
policy section that matches the user name and applies the user&#173;specific
policy. If Windows does not find a user policy section, it applies
the Default User policies. If support for group policies is installed,
Windows downloads group policies, starting with the lowest priority
group and ending with the highest priority group. Group policies
are processed for all groups to which the user belongs. Group
policies are not applied if there are user policies defined for
the user. These settings are copied into the <B>USER.DAT</B> portion
of the registry.
<P>
Second, Windows applies computer&#173;specific policies to the
desktop environment. If a policy section for that computer name
does not exist, Windows applies the Default Computer policies.
These settings are copied into the <B>SYSTEM.DAT</B> portion of
the registry.
<P>
By default, Windows automatically attempts to download computer
and user policies from the file Config.pol or Ntconfig.pol in the Netlogon folder
on a Windows&nbsp;NT server or the Public folder on a NetWare
server. This default location can be overridden in a policy file
setting. If no server is present, Windows uses the settings currently
on the client computer. For more information about how Windows
processes system policies, see the <I>Microsoft</I>
<I>Windows&nbsp;95 Resource Kit</I> or the<I>
Microsoft Windows&nbsp;NT Server 4.0 Resource Kit </I>and<I>
Microsoft Windows&nbsp;NT Workstation&nbsp;4.0 Resource Kit.</I>
<br>
</FONT></TD></TR>
</TABLE>

<P>
<A NAME="ORK007C2"></A>
</MENU></MENU></MENU>
<!--ToTop_START-->
<TABLE width=98% cellpadding=0 cellspacing=0 border=0>
<TR><TD align=right><TABLE cellpadding=0 cellspacing=0 border=0><TR><TD><A href="#top"><FONT SIZE=1 FACE="VERDANA,ARIAL,HELVETICA">Top</FONT></A></TD><TD><A href="#top"><IMG SRC="ar_up.gif" WIDTH=11 HEIGHT=7 BORDER=0 ALIGN=MIDDLE></A></TD></TR></TABLE>
</TD></TR>

</TABLE>
<HR>
<!--ToTop_END-->

<MENU>
<FONT SIZE=5><B><A NAME="CH007H102">Customizing Office Connections to the World Wide Web</A></B></FONT>
<MENU><MENU>
<P>
<a name="dex67"></a>
Through the <B>Microsoft on the Web</B> command (<B>Help</B> menu), you can 
connect to Microsoft pages on the World Wide Web that relate to Office and
Office applications (requires Internet access). This section describes how
you can customize the Web connections available on the <B>Help</B> menu in the
Office applications.
<P>

<FONT SIZE=4><B><A NAME="CH007H210">Customizing Web Connections in Office&nbsp;97 for Windows</A></B></FONT>
</MENU></MENU>
<P>
<TABLE WIDTH=93% CELLPADDING=0 CELLSPACING=0 BORDER=0>
<TR>
<TD WIDTH=80 ALIGN=RIGHT VALIGN=TOP><IMG SRC="WINDOWSO.GIF" WIDTH=27 HEIGHT=27 BORDER=0 ALT="">&nbsp;&nbsp;</TD><TD>
<FONT SIZE=2 FACE="VERDANA,ARIAL,HELVETICA">Office&nbsp;97 allows you to connect your Office applications
directly to Microsoft pages on the World Wide Web through commands
on the <B>Microsoft on the Web</B> submenu (<B>Help</B> menu).
You can also modify these commands to include additional Web or
intranet sites, or you can disable the commands.</FONT>
</TD>

</TR>

</TABLE>

<MENU><MENU>
<P>
<TABLE WIDTH=70% VALIGN="TOP" CELLPADDING=15 CELLSPACING=0 BORDER=1 BORDERCOLOR=#0000FF><TR BGCOLOR=#FFFFFF><TD>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
<P>
<B>Using the System Policy Editor</B>
<P>
This section describes in detail how to use the System Policy
Editor and Office policy templates to set some system policies
for your workgroup. Use this information to learn how to set any Office
system policy with the System Policy Editor. Make sure that
you have already installed the System Policy Editor and Office
policy templates from the Office Resource Kit Tools and Utilities.
<P>
For more information about the System Policy Editor, see "<A HREF="#CH007H101">Using
Windows System Policies to Customize Office</A>" earlier in this
chapter. For detailed descriptions of the system policies in the
Office policy template files, see "<A HREF="appc.htm#CHappcH102">Using Office&nbsp;97 System
Policies</A>" in Appendix C, "Registry Keys and Values."
<br>
</FONT></TD></TR>
</TABLE>
</MENU></MENU>
<P>

<TABLE WIDTH=93% CELLPADDING=0 CELLSPACING=0 BORDER=0>
<TR>
<TD WIDTH=80 ALIGN=RIGHT VALIGN=TOP><IMG SRC="WINDOWSO.GIF" WIDTH=27 HEIGHT=27 BORDER=0 ALT="">&nbsp;&nbsp;</TD><TD><FONT SIZE=2 FACE="VERDANA,ARIAL,HELVETICA" color="#0000FF"><B>Note&nbsp;&nbsp;&nbsp;</B></font><FONT SIZE=2 FACE="VERDANA,ARIAL,HELVETICA"> System policies are supported by Windows&nbsp;95 and Windows&nbsp;NT
Workstation version&nbsp;4.0 only. The Macintosh and Windows&nbsp;NT
Workstation version&nbsp;3.51 operating systems do not support
system policies. In this section, Windows refers to Windows&nbsp;95
and Windows&nbsp;NT Workstation&nbsp;4.0.</FONT>
</TD>

</TR>

</TABLE>
<MENU><MENU>
<P>
When you start Office, it searches the registry of the computer
on which it is installed for a registered Web browser. If it finds
one, Office enables the <B>Microsoft on the Web</B> submenu commands.
These commands are grouped into two sets:
<P>
<UL TYPE="square">
<P>
<LI>Commands related to the application
<P>
<LI>Commands related to Office, including the <B>Microsoft Home Page</B> command
<P>
</UL>
<a name="dex13"></a>
<P>

For example, the following illustration shows the default <B>Microsoft
on the Web</B> submenu in Excel.

<P>
<IMG SRC="00701.gif">
<P>
<a name="dex14"></a>
<P>
For users who have Web access, these commands provide hyperlinks
to a wealth of information about the application and other useful
Web resources on the Microsoft Web site. If no registered browser
is found, these commands are unavailable.
<P>
The following table describes the commands on the <B>Microsoft
on the Web</B> submenu.
<P>
<TABLE WIDTH=80% VALIGN="TOP" BORDER=1 BORDERCOLOR="#C0C0C0" CELLPADDING=4 CELLSPACING=0>

<TR><TD WIDTH=41% VALIGN="BOTTOM" BGCOLOR="#C0C0C0"><FONT SIZE=2><B>This command on the Microsoft on the Web submenu</b></FONT>
</TD><TD WIDTH=59% VALIGN="BOTTOM" BGCOLOR="#C0C0C0"><FONT SIZE=2><B>Connects to this page on the Microsoft Web site</B></FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT SIZE=2><B>Free Stuff</B></FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT SIZE=2>The Free Stuff page for the application, from which you can download file converters, add&#173;ons, and other free utilities.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT SIZE=2><B>Product News</B></FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT SIZE=2>The home page for the application.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT SIZE=2><B>Frequently Asked Questions</B></FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT SIZE=2>The Frequently Asked Questions (FAQ) page for the application. This page is maintained by Microsoft Support Services.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT SIZE=2><B>Online Support</B></FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT SIZE=2>The online support page for the application. This page is maintained by Microsoft Support Services.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT SIZE=2><B>Microsoft Office Home Page</B></FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT SIZE=2>The Office home page, where you can find Office&#173;wide and application&#173;specific information.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT SIZE=2><B>Send Feedback</B></FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT SIZE=2>An Office&#173;wide feedback page, where you can submit feature requests, bug reports, or product purchasing and licensing information.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT SIZE=2><B>Best of the Web</B></FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT SIZE=2>A page that contains hyperlinks to other useful reference sites, such as home, reference, and financial information.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT SIZE=2><B>Search the Web</B></FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT SIZE=2>A page that contains hyperlinks to Web search pages.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT SIZE=2><B>Web Tutorial</B></FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT SIZE=2>The Microsoft Web tutorial.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT SIZE=2><B>Microsoft Home Page</B></FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT SIZE=2>The Microsoft home page at 
<A HREF="http://www.microsoft.com/">http://www.microsoft.com/</A>.</FONT>
</TD></TR>

<P>
</TABLE>
<P>
<FONT COLOR="#0000FF"><B>Note&nbsp;&nbsp;&nbsp;</B></FONT>In
the Visual Basic environment of the Office applications, some
of the <B>Microsoft on the Web</B> commands function differently. The <B>Microsoft
Office Home Page</B> command is replaced by the <B>For Developers Only</B>
command, which connects you to:
<P>
<A HREF="http://www.microsoft.com/msdn/">http://www.microsoft.com/msdn/</A>
<P>
The <B>Send Feedback</B> command connects you to:
<P>
<A HREF="http://www.microsoft.com/officedev/misc/feedback.htm">http://www.microsoft.com/officedev/misc/feedback.htm</A>
<P>
<B><FONT SIZE=2 COLOR=#0000FF>Tip</FONT></B><FONT SIZE=2>&nbsp;&nbsp;&nbsp;You
can use the System Policy Editor and the Office policy template
files to edit your own registry. In this case, the System Policy
Editor displays only the Office-related registry keys and values
that you are most likely to want to change. To edit your own registry
settings, click <B>Open Registry</B> on the <B>File</B> menu in
the System Policy Editor.</FONT>
<P>
<FONT SIZE=4><B><A NAME="CH007H204">Disabling Commands on the Microsoft on the Web Submenu</a></B></FONT>

<P>
The <B>Microsoft on the Web</B> submenu commands are enabled only
if an Office application detects a registered Web browser. If
these commands are available, but you want to disable them for
some or all users in your workgroup, you can do so by using the
System Policy Editor to modify Office system policies.
<P>
<a name="dex15"></a>
You can disable the application&#173;specific commands (commands
one through four on the submenu), or the Office&#173;wide commands
(commands five through nine on the submenu). If you disable both
groups of commands, the <B>Microsoft Home Page</B> command is
also disabled.
<P>
<B><FONT COLOR=#0000FF><IMG SRC="Proced.gif">&#09;To
disable the application&#173;specific commands on the Microsoft
on the Web submenu</FONT></B>
<P>
<OL>
<P>
<LI>Close the Office application
you want to customize.
<P>
<LI>On the <B>Start</B> menu,
point to <B>Programs</B>, point to <B>Accessories</B>, and then
point to <B>System Tools</B>.
<P>
<LI>Click <B>System Policy Editor</B>.
<P>
<LI>On the <B>File</B> menu, click <B>New
Policy</B>.
<P>
&#150;&nbsp;or&nbsp;&#150;
<P>
If you have previously created a system policy file,
click <B>Open</B> on the <B>File</B> menu, and select the file Config.pol (for Windows&nbsp;95 clients) or Ntconfig.pol (for Windows&nbsp;NT Workstation clients).
<P>
<LI>To
set system policies for all users, double-click the Default User
icon.
<P>
&#150;&nbsp;or&nbsp;&#150;
<P>
To set system policies for a specific user or group
of users, on the <B>Edit</B> menu, click <B>Add User</B> or <B>Add Group</B>, and enter
the name of the user or group. Then double-click the new icon.
<P>
<LI>In
the <B>Properties</B> dialog box, expand the Policies tree to:

<p><b>User\</B><I>application</I><B>\Internet\Help_Microsoft
on the Web</b><P>

<LI>Select the <B>Disable
submenu</B> check box.
<P>
<LI>Click <B>OK</B> to close
the <B>Properties</B> dialog box, and then exit the System Policy
Editor.

<P>
</OL>
<P>
To distribute the new policy file, you must store it on a network
server. For more information about using the System Policy Editor,
see "<A HREF="#CH007H202">The System Policy Editor</A>" earlier in this chapter.
<P>
<B><FONT COLOR=#0000FF><IMG SRC="Proced.gif">&#09;To
disable the Office&#173;wide commands on the Microsoft on the
Web submenu</FONT></B>
<P>
<OL>
<P>
<LI>Close all Office applications.
<P>
<LI>On
the <B>Start</B> menu, point to <B>Programs</B>, point to <B>Accessories</B>,
and then point to <B>System Tools</B>.
<P>
<LI>Click
<B>System Policy Editor</B>.
<P>
<LI>On the <B>File</B> menu,
click <B>New Policy</B>.
<P>
&#150;&nbsp;or&nbsp;&#150;
<P>
If you have previously created a system policy file,
click <B>Open</B> on the <B>File</B> menu, and select the file Config.pol (for Windows&nbsp;95 clients) or Ntconfig.pol (for Windows&nbsp;NT Workstation clients).
<P>
<LI>To
set system policies for all users, double-click the Default User
icon.
<P>
&#150;&nbsp;or&nbsp;&#150;
<P>
To set system policies for a specific user or group
of users, on the <B>Edit</B> menu, click <B>Add User</B> or <B>Add Group</B>, and enter
the name of the user or group. Then double-click the new icon.
<P>
<LI>In
the <B>Properties</B> dialog box, expand the Policies tree to:

<p><B>User\Office
97\Internet\Help_Microsoft on the Web</b>
<P>
<LI>Select the <B>Disable submenu</B> check box.
<P>
<LI>Click <B>OK</B> to close the <B>Properties</B> dialog box, and then
exit the System Policy Editor.

<P>
</OL>
<P>
To distribute the new policy file, you must store it on a network
server. For more information about using the System Policy Editor,
see "<A HREF="#CH007H202">The System Policy Editor</A>" earlier in this chapter.
<P>
<FONT SIZE=4><B><A NAME="CH007H205">Adding Your Own Commands to the Microsoft on the Web Submenu</a>
</B></FONT>

<P>
<a name="dex17"></a>
You can replace or add to the default commands on the <B>Microsoft
on the Web</B> submenu with your own commands. For example, you
might have an internal support page on your intranet that you
would like users to visit instead of the support pages on the
Microsoft Web site.
<P>
<B><FONT COLOR=#0000FF><IMG SRC="Proced.gif">&#09;To
add your own commands to the Microsoft on the Web submenu </FONT></B>
<P>
<P>
<ol>
<LI>Close
the Office applications you want to customize.
<P>
<LI>On the <B>Start</B> menu, point to <B>Programs</B>, point to <B>Accessories</B>,
and then point to <B>System Tools</B>.
<P>
<LI>Click
<B>System Policy Editor</B>.
<P>
<LI>On the <B>File</B> menu,
click <B>New Policy</B>.
<P>
&#150;&nbsp;or&nbsp;&#150;
<P>
If you have previously created a system policy file,
click <B>Open</B> on the <B>File</B> menu, and select the file Config.pol or Ntconfig.pol.
<P>
<LI>To
set system policies for all users, double&#173;click the Default User
icon.
<P>
&#150;&nbsp;or&nbsp;&#150;
<P>
To set system policies for a specific user or group
of users, on the <B>Edit</B> menu, click <B>Add User</B> or <B>Add Group</B>, and enter
the name of the user or group. Then double-click the new icon.
<P>
<LI>In the <B>Properties</B> dialog box, expand the Policies tree to:

<P>
<B>User\Office
97\Internet\Help_Microsoft on the Web</B>
<P>
<LI>Select the <B>Customize submenu</B> check box.
<P>
<LI>In the <B>Settings for Customize Submenu</B> box, scroll down to the first empty command box.
<P>
<LI>Click inside the empty command box, and then enter your hyperlink information in the following format:

<P>
<FONT SIZE=3 FACE="COURIER NEW,COURIER"><pre><code>&amp;command name,URL</code></pre></font>

<P>
where the character after the ampersand (&amp;)
will appear underlined in the menu.
<P>
For example, to add the command <B>Office&nbsp;97 <U>R</U>esource
Kit</B> that connects to the Office Resource Kit home page on the
Web, you would enter:

<P><FONT SIZE=3 FACE="COURIER NEW,COURIER"><pre><code>Office&nbsp;97 &amp;Resource Kit,http://www.microsoft.com/office/ork/</code></pre></font><P>

</OL>
&nbsp;&nbsp;&nbsp;10.&nbsp;Click <B>OK</B> to close the <B>Properties</B> dialog box, and then
exit the System Policy Editor.

<P>
To distribute the new policy file, you must store it on a network
server. For more information about using the System Policy Editor,
see "<A HREF="#CH007H202">The System Policy Editor</A>" earlier in this chapter.
<P>
<FONT SIZE=4><B><A NAME="CH007H211">Customizing Web Connections in Office&nbsp;98 for the Macintosh</A></B></FONT>
</MENU></MENU>
<a name="dex70"></a>
<P>
<TABLE WIDTH=93% CELLPADDING=0 CELLSPACING=0 BORDER=0>
<TR>
<TD WIDTH=80 ALIGN=RIGHT VALIGN=TOP><IMG SRC="MACO.GIF" WIDTH=27 HEIGHT=27 BORDER=0 ALT="">&nbsp;&nbsp;</TD><TD>
<FONT SIZE=2 FACE="VERDANA,ARIAL,HELVETICA">In Office&nbsp;98 for the Macintosh
applications, the <B>Help on the Web</B> command on the <B>Help</B> menu opens
an HTML document in your Web browser. This HTML document, named Webhelp.htm, is
installed in the Microsoft Office&nbsp;98:Office:Help folder. For users who have
Web access, the <B>Help on the Web</B> command provides hyperlinks to a wealth of
information about the application and other useful Web resources on the Microsoft Web site.</FONT>
</TD>

</TR>

</TABLE>
<MENU><MENU>
<P>
You can edit Webhelp.htm in an HTML editor, such as Word with the Web Page Authoring component
installed. You can replace or add to the default hyperlinks in Webhelp.htm
with your own hyperlinks. For example, you might have an internal support page
on your intranet that you would like users to visit instead of the support pages
on the Microsoft Web site.
<P>

<B><FONT COLOR=#0000FF><IMG SRC="Proced.gif">&#09;To
edit the Help on the Web HTML document in Word</FONT></B>
<P>
<P>
<OL>
<LI>On the <B>File</B> menu, click <B>Open</B>.
<P>
<LI>In the <B>List files of type</B> box, click <B>HTML Document</B>.
<P>
<LI>In the <B>Select a Document</B> box, click <B>Webhelp.htm</B> in 
the folder Microsoft Office&nbsp;98:Office:Help.
<P>
<LI>Edit Webhelp.htm as needed, and then close the document.
<P>
The next time you click the <B>Help on the Web</B> command on the <B>Help</B>
menu, the revised Webhelp.htm document opens in your browser.
</OL>
<P>
<MENU>
<P>
<TABLE WIDTH=70% VALIGN="TOP" CELLPADDING=15 CELLSPACING=0 BORDER=1 BORDERCOLOR=#0000FF>
<TR BGCOLOR=#FFFFFF><TD>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
<P>
<B>What if I cannot open an HTML document in Word?</B>
<P>
If <B>HTML Document</B> does not appear in the <B>List files of type</B> box
in the <B>Open</B> dialog box, or if Word opens the HTML document but displays
only the HTML code, you need to install the Web Page Authoring component.
Run <B>Microsoft Office Installer</B> and click <B>Custom Install</B>. Select the
<B>Web Page Authoring</B> option, and then click <B>Install</B>.
<br>
</FONT></TD></TR>
</TABLE>
</MENU>

<A NAME="ORK007C3"></A>
</MENU></MENU></MENU>
<!--ToTop_START-->
<TABLE width=98% cellpadding=0 cellspacing=0 border=0>
<TR><TD align=right><TABLE cellpadding=0 cellspacing=0 border=0><TR><TD><A href="#top"><FONT SIZE=1 FACE="VERDANA,ARIAL,HELVETICA">Top</FONT></A></TD><TD><A href="#top"><IMG SRC="ar_up.gif" WIDTH=11 HEIGHT=7 BORDER=0 ALIGN=MIDDLE></A></TD></TR></TABLE>
</TD></TR>

</TABLE>
<HR>
<!--ToTop_END-->
<MENU>
<FONT SIZE=5><B><A NAME="CH007H103">Optimizing Individual Office Applications</A></B></FONT>
<MENU><MENU>

<P>
<a name="dex19"></a>
<P>
There are a number of ways that you can customize Office applications
to improve the overall performance of Office on client computers.
By modifying specific options based on your particular use of
Office, you can increase speed or reduce memory or disk usage.
The remainder of this chapter discusses how to optimize each of
the Office applications.
<P>
<FONT SIZE=4><B><A NAME="CH007H206">Optimizing Microsoft Access</A></B></FONT>
<P>
</MENU></MENU>
<TABLE WIDTH=93% CELLPADDING=0 CELLSPACING=0 BORDER=0>
<TR>
<TD WIDTH=80 ALIGN=RIGHT VALIGN=TOP><IMG SRC="WINDOWSO.GIF" WIDTH=27 HEIGHT=27 BORDER=0 ALT="">&nbsp;&nbsp;</TD><TD>
<FONT SIZE=2 FACE="VERDANA,ARIAL,HELVETICA">Depending on your computer's configuration and your working environment,
there may be several things you can do to improve the performance
of Microsoft Access or your database. The optimal settings described
in the following sections may vary with the type of computer on
which you run Access.
</FONT>
</TD>

</TR>

</TABLE>
<MENU><MENU>
<P>
<a name="dex20"></a>

<FONT SIZE=3><B><A NAME="UsPerfAn">Using the Performance Analyzer</A></B></FONT>

<P>
When you want to optimize the performance of a Microsoft Access
database, start with the Performance Analyzer. You can use the
Performance Analyzer to analyze a database or selected objects
in a database. The Performance Analyzer can make some changes
for you automatically.
<P>
<B><FONT COLOR="#0000FF"><IMG SRC="Proced.gif" WIDTH=5 HEIGHT=10 BORDER=0 ALT="">&#09;To
run the Performance Analyzer</FONT></B>
<P>
<OL>
<P>
<LI>Open the Access
database you want to optimize.
<P>
<LI>On the <B>Tools</B>
menu, point to <B>Analyze</B>, and then click <B>Performance</B>.
<P>
<LI>In
the <B>Object Type</B> box, click the type of database object
you want to optimize.
<P>
To view a list of all database objects at once, click
<B>All</B> in the <B>Object Type</B> box.
<P>
<LI>In the <B>Object
Name</B> box, select the database objects you want to optimize.
<P>
<LI>Repeat
Steps 3 and 4 until you have selected all the objects you want
to optimize, and then click <B>OK</B>.
<P>
</OL>
<P>
In the dialog box that appears, the <B>Analysis Results</B> box
displays three types of optimizations: Recommendations, Suggestions,
and Ideas. When you click an item in the <B>Analysis Results</B>
box, the <B>Analysis Notes</B> box displays information about
the proposed optimization. Suggestion optimizations have potential
tradeoffs to consider. To view a description of the tradeoffs,
click a Suggestion optimization in the <B>Analysis Results</B>
box, and then read the information in the <B>Analysis Notes</B>
box.
<P>
Access can perform Recommendation and Suggestion optimizations
for you. In the <B>Analysis Results</B> box, click each of the
Recommendation or Suggestion optimizations you want performed,
and then click <B>Optimize</B>.
<P>
You must perform Idea optimizations yourself. To perform an Idea
optimization, click that optimization, and then follow the instructions
in the <B>Analysis Notes</B> box.
<P>
<FONT SIZE=3><B>Optimizing a System to Run Microsoft Access</B></FONT>

<P>
<a name="dex21"></a>
<P>
In addition to running the Performance Analyzer, the following
suggestions can help you optimize the performance of
Access and the computer it is running on.
<P>
<B>Increase RAM</B>

<P>
<a name="dex22"></a>
<P>
Because database operations are faster when Access can
perform them in random&#173;access memory (RAM), the performance
of Access depends largely on the amount of RAM available.
To run as a standalone application, Access requires
a minimum of 12&nbsp;MB of RAM for Windows, or 16&nbsp;MB of RAM
for Windows&nbsp;NT Workstation.
<P>
The amount of memory Access needs to run at top speed
depends on a variety of factors, such as how many other applications
are running at the same time and what types of operations an
Access database application performs. When other applications
are competing for memory, you can usually improve performance
significantly by running with more than the required amount of
RAM.
<P>
Similarly, if an Access database application uses Automation
(formerly OLE Automation) to work with another application's objects,
you can improve the performance of an Access database
application by running with more RAM. When running with 32&nbsp;MB
or more of RAM, you may be able to increase performance by adjusting
the <B>MaxBufferSize</B> setting in the Windows registry. Make
sure that you are not using any of your RAM for a RAM drive.
<P>
For more information about the <B>MaxBufferSize</B> setting, see
"<A HREF="#MaxBuff">MaxBufferSize</A>" later in this chapter.
<P>
<B>Optimize Virtual Memory Use</B>

<P>
<a name="dex23"></a>
<P>
With<I> virtual memory</I>, an application sees a
large, continuous block of primary memory (RAM) that, in reality,
is a much smaller block of primary memory supplemented by secondary
memory (such as a hard disk). To temporarily free up space in
RAM, blocks of data (called <I>pages</I>) are moved
between RAM and a <I>swap file</I> located on the
hard disk.
<P>
By default, the Windows&nbsp;95 swap file is dynamic, so it can
shrink or grow based on available disk space and the operations
performed on the system. Also, the swap file can occupy a fragmented
region of the hard disk with no substantial performance penalty.
A dynamic swap file is usually the most efficient use of resources.
The simplest way to ensure high virtual memory performance is
to make sure that the disk containing the swap file has ample
free space so that the swap file size can shrink and grow as needed.
<P>
In Windows 3.<I>x</I>, enhancing performance by changing
virtual memory settings is quite common. Because the Windows&nbsp;95
swap file is dynamic, the need to change virtual memory settings
is less common. However, in some situations adjusting virtual
memory settings can improve performance. If you've already tried
deleting unnecessary files, and you still have a performance problem,
try changing the Windows&nbsp;95 default virtual memory settings.
<P>
If you have more than one drive available, you may get better
performance if you specify that Windows locate the swap file on
a drive other than the default in the following cases:
<P>
<UL TYPE="square">
<P>
<LI>If the default drive does
not have much free disk space, and another local drive has space
available.
<P>
<LI>If another local drive is available
that is faster than the current drive (unless that disk is already
heavily used).
<P>
</UL>
<P>
You also may get better performance if you specify the minimum
disk space available for virtual memory to be at least 25&nbsp;MB
minus available RAM. For example, if a computer has 12&nbsp;MB
of RAM, you should specify at least 13&nbsp;MB of virtual memory.
You may want to specify more if you run several large applications
at the same time.
<P>
For more information about changing Windows&nbsp;95 virtual memory
settings, see Windows&nbsp;95 online Help.
<P>
<B>Compact Databases and Defragment the Hard Disk</B>

<P>
<a name="dex24"></a>
<P>
Each time users add or update data, a database grows. But when
a user deletes data, the database does not automatically get smaller.
Access makes empty data pages available for reuse after
a database is closed, so the next time it is opened, new data
pages are available to be filled with new records. If left unused,
empty data pages remain in the database until it is compacted.
<P>
<a name="dex25"></a>
<P>
Compacting the database frees unused disk space, makes all data
pages contiguous, and, if a primary key is defined for a table,
saves its records in primary key order. For databases in which
records are frequently added, deleted, and updated, you should
compact frequently.
<P>
<FONT COLOR="#0000FF" SIZE=2><B>Note&nbsp;&nbsp;&nbsp;</B></FONT>If
the database is a replica, you must compact it twice to reclaim
all available space. Additionally, if the database is the Design
Master in a replicated set, you must take certain precautions
when compacting it to prevent it from losing its Design Master
status. For more information about replication, see Chapter&nbsp;29,
"<a href="029.htm">Workgroup
Features in Microsoft Access</A>."
<P>
In addition, you should occasionally use a utility such as the
Windows Disk Defragmenter to defragment the hard disk after compacting
databases. This increases efficiency by making database files
contiguous on the hard disk.
<P>
<B>Do Not Use Wallpaper on a Low&#173;Memory Computer</B>

<P>
If the Windows desktop has a wallpaper (full&#173;screen background)
bitmap and the computer does not have memory to spare, replace
the wallpaper with a solid color or pattern bitmap, or no bitmap
at all.
<P>
<TABLE WIDTH=70% VALIGN="TOP" CELLPADDING=15 CELLSPACING=0 BORDER=1 BORDERCOLOR=#0000FF><TR BGCOLOR="#FFFFFF"><TD>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
<P>
<B>Using the System Policy Editor to Change Settings in the Options
Dialog Box</B>
<P>
You can customize the user environment and achieve some performance
optimizations in Access by setting options in the <B>Options</B>
dialog box (<B>Tools</B> menu) on individual user's computers.
Using the System Policy Editor, however, a network administrator
can set these options remotely&nbsp;&#151; for all users,
for a particular network group, or for a single user. You can
also set options for all client computers or for a single computer.
<P>
Instead of making these changes in the <B>Options</B> dialog box
on individual computers, run the System Policy Editor using the
Access97.adm template. For more information about using the System
Policy Editor, see "<A HREF="#CH007H101">Using
Windows System Policies to Customize Office</A>" earlier
in this chapter.
<br>
</FONT></TD></TR>
</TABLE>

<P>
<FONT SIZE=3><B>Adjusting Microsoft Jet Registry Settings to Improve Performance
</B></FONT>

<P>
<a name="dex26"></a>
<P>
In addition to optimizing system memory use, you may want to adjust
Microsoft Jet settings in the Windows registry. These settings
control how the Microsoft Jet database engine uses memory and
performs other aspects of its operations. Microsoft Jet automatically
provides default settings that usually give the best performance
for most common database operations. However, depending on what
kind of operations a database application performs and how much
memory is available at any given time, you may be able to improve
performance by adjusting Windows registry settings.
<P>
<FONT COLOR="#0000FF" SIZE=2><B>Note&nbsp;&nbsp;&nbsp;</B></FONT>Keep
in mind that the optimum value for a setting in the registry can
change from computer to computer, and can change depending on
how much memory is available, the kind of operation the user is
performing, and the level of activity in the database at any given
time. Experiment with these settings to find out what works best.
<P>
<a name="dex27"></a>
<P>
If you decide to change any of the Microsoft Jet registry settings
in the Windows registry, you have three options:
<P>
<UL TYPE="square">
<P>
<LI>Change the default values
for Microsoft Jet settings in the <B>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Jet\3.5\Engines\Jet
3.5</B> key.
<P>
These defaults are written when Access&nbsp;97
is installed. Changes made to settings in this key may affect
other applications that use the Microsoft Jet version&nbsp;3.5 database
engine, such as Visual Basic version&nbsp;5.0 or Excel&nbsp;97.
Make changes to values in this key only if you want to affect
all the applications that use Microsoft Jet&nbsp;3.5 on a user's
computer, or if only Access&nbsp;97 is used to perform
operations on Microsoft Jet&nbsp;3.5 databases on a user's computer.
<P>

<P>
<LI>Create a <B>Jet 3.5</B> subkey below the <B>KEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Office\8.0\Access\Jet\3.5\Engines</B>
key, and then add values for any default setting you want to override.
<P>
These changes affect only Access&nbsp;97.
<P>
<LI>Create
a custom set of registry keys, called a <I>user profile</I>,
that contains settings to override default registry settings.
<P>
These settings affect only a particular database application
or session of Access. You use the <B>/profile</B> command&#173;line
option when starting Access to specify the user profile
you want to use.
<P>
</UL>
<P>
For more information about user profiles or changing
Access registry settings, see Access online Help.
<P>
<TABLE WIDTH=70% VALIGN="TOP" CELLPADDING=15 CELLSPACING=0 BORDER=1 BORDERCOLOR=#0000FF><TR BGCOLOR="#FFFFFF"><TD>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
<P>
<B>Using the SetOption Method to Change Settings in the Windows
Registry</B>
<P>
You can also change most of the Microsoft Jet registry settings
by using the <B>SetOption</B> method of the <B>DBEngine</B> object
in Data Access Objects (DAO) code. Using the <B>SetOption</B>
method, you can change these settings while a database application
is running.
<P>
For example, you may want to change the <B>SharedAsyncDelay</B>
and <B>PageTimeout</B> settings to low values to increase performance
when an application performs operations on one record at a time
or is using controls bound to data; but you may want to increase
these values when performing bulk operations, such as update and
delete queries or transactions on large numbers of records.
<P>
Changing Microsoft Jet settings by using the <B>SetOption</B>
method does not affect the values stored in the Windows registry.
Changes made with the <B>SetOption</B> method are in effect only
for the current instance of the <B>DBEngine</B> object. For more
information about the <B>SetOption</B> method, see Access
online Help.
<br>
</FONT></TD></TR>
</TABLE>

<P>
The following sections discuss the Windows registry settings you
can adjust to improve performance of Access.
<P>
<B>Threads</B>

<P>
<a name="dex28"></a>
<P>
A <I>thread</I> is a software process that runs independently
on a multitasking operating system such as Windows&nbsp;95 or
Windows&nbsp;NT Workstation. For example, using multiple threads
allows you to run a communications software program to download
a file at the same time you use your word processor to edit a
document.
<P>
Microsoft Jet uses threads internally to enhance performance and
provide background services such as read&#173;ahead caching, write&#173;behind
caching (transaction commit), cache maintenance, and the detection
of changes made to shared databases. By default, Microsoft Jet
uses up to a maximum of three threads. You may want to try increasing
the <B>Threads</B> setting if a large number of actions are performed
in a database application, or if it contains a large number of
linked tables.
<P>
<B><A NAME="MaxBuff">MaxBufferSize</A></B>

<P>
<a name="dex29"></a>
<P>
Microsoft Jet reads and writes data in 2&nbsp;KB pages, placing the data
in a temporary holding area called the <I>buffer</I>
as required by its operations. By default, when performing operations
that add, delete, or update records and that are not part of an
explicit transaction, Microsoft Jet automatically performs internal
transactions that group changes to records and temporarily saves
them in the buffer.
<P>
After a specified time, or when the size specified by the <B>MaxBufferSize</B>
setting is exceeded, Microsoft Jet writes the data to the database.
This minimizes the time spent reading and writing data to the
database. Additionally, Microsoft Jet can minimize the time spent
reading data for tables, queries, forms, or reports by reading
available data from its buffer.
<P>
The <B>MaxBufferSize</B> setting specifies a high&#173;water mark
for the size of the buffer that Microsoft Jet uses to work with
records in memory, measured in kilobytes. Microsoft Jet can temporarily
exceed the <B>MaxBufferSize</B>. As soon as it does, however,
it starts a background thread to write data to the database to
bring the buffer's size down to the specified high&#173;water
mark.
<P>
By default, Microsoft Jet allocates memory for its internal buffer
on an as&#173;needed basis up to the <B>MaxBufferSize</B>. The
default value written in the Windows registry for the <B>MaxBufferSize</B>
when Access is installed is 0, which indicates that
Microsoft Jet calculates the setting based on the following formula:
<P>
((Total RAM in KB &#150; 12,288)/4 + 512&nbsp;KB)
<P>
For example, on a system with 16&nbsp;MB of RAM (16,384&nbsp;KB), Microsoft
Jet uses a setting of 1,536 in <B>MaxBufferSize</B>.
<P>
You can override the default calculated setting by specifying
a different value in <B>MaxBufferSize</B>. This sets a new high&#173;water
mark. The minimum value that Microsoft Jet uses by default is
512&nbsp;KB, but you can specify a value as low as 128&nbsp;KB. However, setting
the value in <B>MaxBufferSize</B> to less than 512&nbsp;KB is not recommended
for Access applications because it can seriously degrade
performance.
<P>
For computers with 16&nbsp;MB or less of installed RAM, there
is generally no need to override the calculated setting. For computers
with 32&nbsp;MB of RAM, however, you may see some performance
improvement when specifying a larger <B>MaxBufferSize</B>, as
long as no other applications are running at the same time as
Access. For example, tests have shown performance improvements
in applications that perform large transactions when a <B>MaxBufferSize</B>
as large as 8&nbsp;MB is specified.
<P>
Specifying a <B>MaxBufferSize</B> larger than 8&nbsp;MB has not
been found to increase performance. Setting a value too high can
degrade performance due to the added CPU overhead needed to manage
the cache, and due to the fact that the operating system may start
swapping the Microsoft Jet cache to disk as virtual memory.
<P>
<FONT COLOR="#0000FF" SIZE=2><B>Important&nbsp;&nbsp;&nbsp;</B></FONT>When
you specify a <B>MaxBufferSize</B> setting larger than the default and
you are not using the <B>FlushTransactionTimeout</B> setting, increase
the <B>SharedAsyncDelay</B> setting to increase the time that data is
held in the buffer. If you do not increase the value of <B>SharedAsyncDelay</B>, Microsoft Jet writes the contents of its buffer to the database before it has had time to utilize the additional memory you specified. For more information, see "<A  HREF="#SharAsync">SharedAsyncDelay</A>" later in this section.
<P>
<B>UserCommitSync</B>

<P>
<a name="dex30"></a>
<P>
The <B>UserCommitSync</B> setting determines whether changes made
as part of an explicit transaction (a change made to data using
the <B>BeginTrans</B>, <B>CommitTrans</B>, and <B>Rollback</B>
methods) are written to the database in synchronous mode or asynchronous
mode. In <I>synchronous</I> mode, Microsoft Jet does
not return control to the application code until the changes made
by the <B>CommitTrans</B> method are written to the database.
In <I>asynchronous</I> mode, Microsoft Jet stores
the changes in its memory buffer, returns control to the application
code immediately, and then writes the changes to the database
in a background thread.
<P>
Microsoft Jet begins writing the changes either after a specified
period of time (determined by the <B>FlushTransactionTimeout</B>
setting, or by the <B>SharedAsyncDelay</B> or <B>ExclusiveAsyncDelay</B>
settings described later in this section), or when the <B>MaxBufferSize</B>
is exceeded. The default <B>UserCommitSync</B> setting is <B>Yes</B>,
which specifies synchronous mode. It is not advisable to change
this setting, because in asynchronous mode there is no guarantee
that information has been written to disk before a database application's
code proceeds to the next command.
<P>
<FONT COLOR="#0000FF" SIZE=2><B>Note&nbsp;&nbsp;&nbsp;</B></FONT>There
is no longer a need to use explicit transactions to improve performance
of Access. In Access&nbsp;95 and 
Access&nbsp;97, a database application should use explicit transactions
only in situations where there may be a need to roll back changes.
Microsoft Jet can now automatically perform internal transactions
to improve performance whenever it adds, deletes, or changes records.
<P>
For more information about transactions, see Chapter&nbsp;9, "Working
with Records and Fields," in <I>Building Applications
with Microsoft Access&nbsp;97</I>.
<P>
<B>ImplicitCommitSync</B>

<P>
By default, when performing operations that add, delete, or update
records outside of explicit transactions, Microsoft Jet automatically
performs internal transactions that temporarily save data in its
memory buffer, and then later write the data to the hard disk.
The <B>ImplicitCommitSync</B> setting determines whether changes
made using these automatic internal transactions are written to
the database in synchronous mode or asynchronous mode.
<P>
The default <B>ImplicitCommitSync</B> setting is <B>No</B>, which
specifies that changes are written to the database in asynchronous
mode; this provides the best performance. If you want internal
transactions to be written to the database in synchronous mode,
change the <B>ImplicitCommitSync</B> setting to <B>Yes</B>. This
generates behavior similar to Microsoft Jet versions 2.<I>x</I>
and earlier, when not using explicit transactions in Access Basic
code; however, it can also impair performance considerably.
<P>
<B>FlushTransactionTimeout</B>

<P>
The <B>FlushTransactionTimeout</B> setting determines the method
Microsoft Jet uses to perform asynchronous writes to a database
file. This setting is the number of milliseconds after which Microsoft
Jet starts writing database changes to disk from its cache. Changes
are written to disk after the specified amount of time has expired
and if no new pages have been added to the cache during that interval.
<P>
The only exception is if the size of the cache exceeds the <B>MaxBufferSize</B>
setting, at which point the cache starts asynchronous writes regardless
of whether the time has expired. The default setting is 500 milliseconds.
The only reason to increase the value of the <B>FlushTransactionTimeout</B>
setting is if the database is being updated over a slow wide area
network (WAN) or local area network (LAN) connection. Increasing
this value for databases being updated over fast WAN and typical
LAN connections does not improve performance.
<P>
The <B>FlushTransactionTimeout</B> setting overrides both the
<B>ExclusiveAsyncDelay</B> and<BR>
 <B>SharedAsyncDelay</B> settings,
and is the preferred method of determining how Microsoft Jet performs
asynchronous writes to a database file. To enable the <B>ExclusiveAsyncDelay</B>
and <B>SharedAsyncDelay</B> settings, you must set the <B>FlushTransactionTimeout</B>
entry to a value of 0.
<P>
<B>ExclusiveAsyncDelay</B>

<P>
The <B>ExclusiveAsyncDelay</B> setting is the maximum time that
can pass before asynchronous mode changes start to be written
to a database that is opened exclusively. The default setting
is 2,000 milliseconds. Decrease this setting if you want to be
sure that changes are written to a database more frequently, but
note that this decreases overall performance.
<P>
Because the default setting is already quite long, increasing
this setting does not improve performance in most cases. However,
if a system has 32&nbsp;MB of RAM or more and you have specified
a large <B>MaxBufferSize</B>, you may see some performance improvement
if you increase this setting. By default, this setting is disabled
by the <B>FlushTransactionTimeout</B> setting.
<P>
<B><A NAME="SharAsync">SharedAsyncDelay</A></B>

<P>
The <B>SharedAsyncDelay</B> setting is the maximum time that can
pass before asynchronous mode changes start to be written to a
database that is opened in shared mode. The default setting is
50 milliseconds. Note that this produces a small delay before
changes are made available to other users. Increasing this value
enhances performance in shared databases because there are fewer
disk writes. However, it may reduce the overall concurrency because
pages are locked while they are in the buffer waiting to be written
to the database.
<P>
If a database application performs operations that affect many
records, increase this setting to give Microsoft Jet additional
time to temporarily save additions, deletions, and updates in
its buffer before it writes them to the database. This applies
whether a database application uses action queries, DAO code,
or SQL statements to add, delete, or update records. By default,
this setting is disabled by the <B>FlushTransactionTimeout</B>
setting.
<P>
<B>PageTimeout</B>

<P>
The <B>PageTimeout</B> setting determines how long Microsoft Jet
waits before checking to see whether other users have made changes
to the database. If changes have been made, Microsoft Jet refreshes
the data in its memory buffer.
<P>
<FONT COLOR="#0000FF" SIZE=2><B>Note&nbsp;&nbsp;&nbsp;</B></FONT>This
action is equivalent to pressing F9 while viewing a table or query
in Access, or using the Refresh method in DAO code.
<P>
The default <B>PageTimeout</B> setting is 5,000 milliseconds.
Decreasing this setting increases the amount of time spent reading
from the disk, thus impairing performance; but it can also ensure
the data available to the user is more current. The <B>Refresh
Interval</B> setting on the <B>Advanced</B> tab in the <B>Options</B>
dialog box (<B>Tools</B> menu) in Access overrides the
setting in <B>PageTimeout</B>.
<P>
<FONT SIZE=2 COLOR="#0000FF"><B>Tip&nbsp;&nbsp;&nbsp;</B></FONT>You
can override the <B>PageTimeout</B> setting and refresh the cache
by using the <B>dbRefreshCache</B>argument of the <B>Idle</B>
method in DAO code. This allows users to see other users' changes immediately. For more information about the <B>Idle</B> method, see Access online Help.
<P>
<B><A NAME="_Toc364227841">LockDelay</A></B>

<P>
If Access tries to place a lock on a page in a shared
database, and a message that locking has failed is returned, the
<B>LockDelay</B> setting determines how long it waits before it
retries. If the time it takes to return the message exceeds the
<B>LockDelay</B> setting, there is no delay. The default setting
is 100 milliseconds.
<P>
On systems that do not manage lock retries themselves, such as
Windows&nbsp;95 peer&#173;to&#173;peer networking, the <B>LockDelay</B>
setting prevents Microsoft Jet from performing repeated retries
over a short period of time. If you are using such a system, the
default setting is usually sufficient to reduce the number of
lock requests sent across the network, which frees up network
bandwidth for other purposes.
<P>
If a database application or its users frequently lock a large
number of records, you may want to try increasing this setting
to further reduce the number of lock requests being sent across
the network. If you are using a server&#173;based networking system
that manages lock retries itself, such as Windows&nbsp;NT Server
or Novell NetWare, there is no need to change this setting.
<P>
<B><A NAME="_Toc364227842">MaxLocksPerFile</A></B>

<P>
The <B>MaxLocksPerFile</B> setting determines the maximum number
of locks that Microsoft Jet places against a file. The default
setting is 9,500 locks. If the number of locks required to perform
a transaction exceeds the <B>MaxLocksPerFile</B> setting, the
transaction commits (writes) the data that has locks associated
with it, frees the locks, and then continues processing the transaction.
<P>
If the maximum number of locks a server can handle is less than
the setting in <B>MaxLocksPerFile</B>, the server returns an error
message or appears to hang when performing a large transaction.
If this occurs, decrease the value of <B>MaxLocksPerFile</B>.
A NetWare server can be configured to perform a maximum of 10,000
locks per connection. A NetWare server connection can include
more than one database, so it is possible to exceed the maximum
number of available locks if you are using more than one database
at a time.
<P>
<B><A NAME="_Toc364227843">RecycleLVs</A></B>

<P>
<I>Long value</I> (LV) pages store data in fields
with Memo, OLE Object, and Hyperlink data types, as well as the
data that defines forms, reports, and modules. When a database
is open in shared mode, the size of the database increases when
data, forms, reports, and modules are deleted or changed in such
a way that the current LV page must be discarded and replaced
with a new LV page. Sometimes a new LV page is needed to prevent
errors for other users who may still be using the object or data
in its original form.
<P>
The <B>RecycleLVs</B> setting determines when discarded LV pages
become available for reuse. The default setting is 0, which specifies
that discarded LV pages continue to occupy space in the database
and only become available for reuse after the last user closes
the database. You can change the default setting to 1 so that
discarded LV pages become available for reuse after Microsoft
Jet determines that there is only one user in the database in
shared mode and that new LV data has been added to the database.
<P>
Note that setting <B>RecycleLVs</B> to 1 slows performance slightly.
Therefore, this is primarily useful during development of a database
application, when forms, reports, and modules are being created,
because it minimizes the need to compact the database.
<P>
When a database is open in exclusive mode, the <B>RecycleLVs</B>
setting has no effect: discarded LV pages become available for
reuse immediately. In both exclusive mode and shared mode, discarded
LV pages are reused only when new LV data needs to be written
to the database. To remove discarded LV pages before that time,
you must compact the database.
<P>
<FONT SIZE=3><B>Optimizing Table Performance</B></FONT>

<P>
<a name="dex31"></a>
<P>
You can achieve the best performance results by following these
guidelines for table design.
<P>
<B><A NAME="_Toc364227845">Design Tables Without Redundant Data</A>
</B>

<P>
A well&#173;designed database is a prerequisite for fast data
retrieval and updates. If existing tables in your database contain
redundant data, you can split the data into related tables so
that you can store data more efficiently. This process is called
<I>normalization</I>.
<P>
You can use the Table Analyzer Wizard to normalize your tables
manually, or you can have the wizard do this for you automatically.
After identifying the data that can be moved to smaller tables,
the Table Analyzer Wizard identifies a unique value within each
new table to use as a primary key, or if no such value exists,
creates an incrementing AutoNumber field to use as the primary
key. It creates foreign key fields and uses them with the primary
keys to create a relationship between the new tables. Finally,
the wizard searches through your data, identifies any values that
appear to be inconsistent, and prompts you to choose the correct
value.
<P>
<B><FONT COLOR="#0000FF"><IMG SRC="Proced.gif" WIDTH=5 HEIGHT=10 BORDER=0 ALT="">&#09;To
use the Table Analyzer Wizard</FONT></B>
<P>
<OL>
<P>
<LI>On the <B>Tools</B> menu,
point to <B>Analyze</B>, and then click <B>Table</B>.
<P>
The first two panels of the wizard contain introductory
information about normalization.
<P>
<LI>On the third
panel of the wizard, double&#173;click the table that you want
to normalize.
<P>
<LI>Follow the instructions in the
remaining panels of the wizard.
<P>
In the last panel, you can create a query to view
all the information from the split tables in a single datasheet.
<P>
</OL>
<P>
For more information about determining which tables, fields, and
relationships belong in your database, see Access online
Help.
<P>
<B>Choose Appropriate Data Types for Fields</B>

<P>
You can save space in a database and improve join operations by
choosing appropriate data types for fields. When defining a field,
choose the smallest data type that is appropriate for the data
in the field. Also, give fields you use in joins the same or compatible
data types.
<P>
For more information about data types or the size of data types
for fields, see Access online Help.
<P>
<B><A NAME="_Toc364227848">Create Indexes for Fields Used in
Joins and When Setting Criteria</A></B>

<P>
<a name="dex32"></a>
<P>
An <I>index</I> helps Access find and sort
records faster. You can make dramatic improvements in the speed
of queries by indexing fields on both sides of joins, or by creating
a relationship between those fields and then indexing any field
used to set criteria for the query. Finding records through the
<B>Find</B> dialog box (<B>Edit</B> menu) is also much faster
when searching an indexed field. Intelligent indexing of large
tables can significantly improve performance when your query uses
Rushmore<FONT SIZE=1>&#153;</FONT> query optimization.
<P>
For more information about Rushmore query optimization, see
Access online Help.
<P>
<FONT COLOR="#0000FF" SIZE=2><B>Note&nbsp;&nbsp;&nbsp;</B></FONT>Microsoft
Jet can use a descending index to optimize a query, but the
criteria on the indexed field must use an equal sign (=) as the comparison
operator. If the index is descending and the comparison operator
is something other than an equal sign, the index will not be used.
Ascending indexes (the default) can always be used to optimize
a query.
<P>
Indexes take up disk space and slow down the adding, deleting,
and updating of records. In most situations, however, the faster
data retrieval outweighs these disadvantages. If a database application
updates data frequently or if you have disk space constraints,
you may want to limit indexes; otherwise, use them generously.
Make sure to create a primary key or unique index if the data
in a field or combination of fields uniquely identifies the records
in a table.
<P>
<B><A NAME="_Toc364227849">Use Multiple&#173;Field Indexes When
Joining Multiple Fields</A></B>

<P>
<a name="dex33"></a>
<P>
If you use <I>multiple&#173;field indexes</I>,
Access can optimize queries that join multiple fields from one
table to multiple fields in another table (such as LastName, FirstName
in one table to LastName, FirstName in another table) or that
search for values in multiple fields.
<P>
If you use criteria on a field in a multiple&#173;field index,
the criteria must apply to the first field or fields in the index
in order for Microsoft Jet to use the index to optimize the query.
For example, if you have a multiple&#173;field index on the two
fields LastName and FirstName used in a join to the LastName and
FirstName fields in another table, Microsoft Jet can use the multiple&#173;field
index to optimize the query when you have criteria on LastName
only, or on LastName and FirstName, but not if the criteria is
on FirstName only. If the criteria is on FirstName only, you must
add a single&#173;field index on FirstName to optimize the query.
<P>
The simplest approach is to add multiple&#173;field indexes to
fields used in multiple&#173;field joins and also add a single&#173;field
index to any field on which you use criteria to restrict the values
in the field. You can add both a multiple&#173;field index and
a single&#173;field index to the same field.
<P>
<FONT SIZE=3><B><A NAME="OptLinkTabl">Optimizing the Performance of Linked
Tables</A></B></FONT>

<P>
<a name="dex34"></a>
<P>
Although you can use linked tables as though they were regular
Access tables, keep in mind that they are not actually
in your Access database. Each time you view data in
a linked table, Access has to retrieve records from
another file. This can take time, especially if the linked table
is on a network or in an SQL database.
<P>
<a name="dex35"></a>
<P>
If you are using a linked table on a network or in an SQL database,
follow these guidelines for the best results:
<P>
<UL TYPE="square">
<P>
<LI>Force the linked database
to remain open.
<P>
This greatly enhances performance when opening the
main database and opening tables and forms. Create an empty table
in the linked database and create a link to the table in the main
database. Then use the <B>OpenRecordset</B> method to open the linked
table. This prevents the Microsoft Jet database engine from repeatedly
opening and closing the linked database and creating and deleting
the associated LDB file.
<P>
<LI>View only the data
you need.
<P>
Do not page up and down unnecessarily in the datasheet.
Avoid going to the last record in a large table. If you want to
add new records to a large table, use the <B>Data Entry</B> command on<BR>

the <B>Records</B> menu to avoid loading existing records into memory.
If you often add records to a linked table, create a form for
adding records that has the <B>DataEntry</B> property set to <B>Yes</B>. When
you open the form to enter new data, Access does not
display any existing records and does not have to retrieve all
the records in the linked table.
<P>
<LI>Use filters
or queries to limit the number of records that you view in a form
or datasheet.
<P>
This allows Access to transfer less data
over the network.
<P>
<LI>In queries that involve linked
tables, avoid using functions in query criteria.
<P>
In particular, avoid using domain aggregate functions,
such as <B>DSum</B>, anywhere in your queries. When you use a domain
aggregate function, Access retrieves all of the data
in the linked table to execute the query.
<P>
<LI>When an Access database is shared on a network, avoid locking
records longer than necessary.
<P>
</UL>
<P>
<FONT SIZE=3><B><A NAME="OptSQLPerf">Optimizing SQL Database Performance</A></B></FONT>
<P>
<a name="dex36"></a>
<P>
When you connect to an external SQL database table, you achieve
the best performance by using linked tables whenever possible.
Linked tables are considerably faster, more powerful, and more
efficient than directly opened tables. You can only open tables
directly using Visual Basic code, so this is not pertinent if
you are accessing SQL Server<FONT SIZE=1>&#153;</FONT> data using the Access user
interface.
<P>
Following are additional guidelines for improving performance:
<P>
<UL TYPE="square">
<P>
<LI>Retrieve and view only the data you need.
<P>
Use restricted queries to limit the number of records
that you retrieve, and select only the columns you need, so
Access can transfer less data over the network. If you are not
updating the data, do not use updatable result sets. You can prevent
data from being updated when using a form by setting the form's
<B>RecordSet</B> property to <B>Snapshot</B>.
<P>
<LI>If you need to retrieve a large number of records, use a dynaset.
<P>
Dynasets are faster and more efficient than snapshots.
For example, when you move to the end of a snapshot, the entire
result set must be downloaded to the local computer. With a dynaset,
however, only the last screen is downloaded. Also do not page
up and down unnecessarily in the data, and avoid going to the
last record in a large table&nbsp;&#151; the <B>Data Entry</B> command
on the <B>Records</B> menu is the fastest way to add new records to a
table.
<P>
<LI>Use cache memory.
<P>
If the data most recently retrieved from the server
is requested again while the application is running, it is faster
to retrieve many rows from a cache than to fetch many individual
rows. Access forms and datasheets automatically use
a cache. If you are retrieving data using a <B>Recordset</B> object created
in Visual Basic for Applications, you can use the <B>CacheStart</B> and
<B>CacheSize</B> properties to specify the range you want within the
<B>Recordset</B> object. Use the <B>FillCache</B> method to quickly fill all
or part of this range with data from the SQL database server.
<P>
<LI>Avoid using queries that cause processing to be done locally.
<P>
When accessing external data, the Jet database engine
processes data locally only when the operation cannot be performed
by the external database. Query operations (as defined by the
SQL commands used to implement them) performed locally include:
<P>
<UL TYPE="square">
<P>
<LI><B>JOIN</B> operations between tables from different remote data sources. (Note that if the join involves a local table or query with few records and a remote table with many more records, and the remote table's join field is indexed, Access returns only the records that match
the local table or query, thus greatly improving query performance.)
<P>
<LI><B>JOIN</B> operations based on a query with the <B>DISTINCT</B> predicate or a <B>GROUP</B> <B>BY</B> clause.
<P>
<LI>Outer joins containing syntax not supported by the Open Database Connectivity (ODBC) driver or server.
<P>
<LI><B>DISTINCT</B> predicates containing operations that cannot be processed remotely.
<P>
<LI>The <B>LIKE</B> operator used with Text or Memo fields (this may not
be supported by some servers).
<P>
<LI>Multiple&#173;level <B>GROUP BY</B> arguments and totals, such as those used in reports with multiple grouping levels.
<P>
<LI><B>GROUP BY</B> arguments based on a query with a <B>DISTINCT</B> predicate or a <B>GROUP BY</B> clause.
<P>
<LI>Cross&#173;tab queries that have more than one aggregate; that have field, row, or column headings that contain aggregates; or that have a user&#173;defined <B>ORDER BY</B> clause.
<P>
<LI><B>TOP</B><I>n</I> or <B>TOP</B><I>n</I> <B>PERCENT</B> predicates.
<P>
<LI>User&#173;defined functions, or operators or functions that are not supported by the ODBC driver or server.
<P>
<LI>Complex combinations of <B>INNER</B> <B>JOIN</B>, <B>LEFT JOIN</B>, or <B>RIGHT JOIN</B> operations in nested queries.
</UL>
<P>
<LI>For update and delete queries that affect data stored on a server, set the <B>FailOnError</B> property to <B>Yes</B>.
<P>
This setting tells Access to send the query to the server, where all the appropriate records are processed at once instead of one record at a time.
<P>
</UL>
<P>
<FONT SIZE=3><B>Optimizing Multiuser Performance</B></FONT>

<P>
<a name="dex37"></a>
<P>
This section describes suggestions that can help you optimize
the performance of databases that are used in a multiuser environment.
<P>
<a name="dex38"></a>
<P>
Database performance is faster when only data is sent across the
network. Put only the tables on a network server, and keep other
database objects on users' computers. You can separate the tables
from the other database objects by using the Database Splitter.
To split a database, make a backup copy of the database, and then
use the <B>Database Splitter</B> command (<B>Tools</B> menu, <B>Add&#173;ins</B>
submenu).
<P>
Choose the appropriate record locking method. To set the record
locking method, use the options on the <B>Advanced</B> tab in
the <B>Options</B> dialog box (<B>Tools</B> menu). The options
under<B> Default Record Locking</B> include the following:
<P>
<UL TYPE="square">
<P>
<LI><B>No Locks</B>
<P>
Access does not lock the records being edited.
When a user tries to save changes to a record that another user
has also changed, Access gives the option of overwriting
the other user's changes, copying the user's version of the record
to the Clipboard, or discarding the changes. This strategy ensures
that records can always be edited, but it can create editing conflicts
between users.
<P>
<LI><B>Edited Records</B>
<P>
Access locks the record being edited, so
no other user can change it. It might also lock other records
that are stored nearby on the hard disk. If another user tries
to edit a record that is locked, Access displays an
indicator in the other user's datasheet. This strategy ensures
that users can always finish making changes that they have started.
It is a good choice if you do not often have editing conflicts.
<P>
<LI><B>All
Records</B>
<P>
Access locks all records in the form or
datasheet (and underlying tables) for the entire time it is being
edited, so no one else can edit or lock the records. This strategy
is very restrictive, so choose it only when you know only one
person needs to edit records at any one time.
<P>
</UL>
<P>
<FONT COLOR="#0000FF" SIZE=2><B>Note&nbsp;&nbsp;&nbsp;</B></FONT>When
you edit data in a linked SQL database table using ODBC, 
Access does not lock records; instead, the rules of that SQL database
govern locking. In this instance, regardless of the record&#173;locking
setting you choose for your database, Access always
acts as though the <B>No Locks</B> setting has been selected.
<P>
<a name="dex39"></a>
<P>
You can avoid locking conflicts by adjusting the following settings
on the <B>Advanced</B> tab in the <B>Options</B> dialog box (<B>Tools</B>
menu):
<P>
<UL TYPE="square">
<P>
<LI><B>Update Retry Interval</B>
<P>
This sets the number of milliseconds after which 
Access automatically tries to save a changed record that is locked
by another user. Valid values are 0&nbsp;through 1,000 milliseconds.
The default setting is 250.
<P>
<LI><B>Number of Update
Retries</B>
<P>
This sets the number of times Access tries
to save a changed record that is locked by another user. Valid
values are 0 through 10. The default setting is 2.
<P>
<LI><B>ODBC
Refresh Interval</B>
<P>
This sets the interval after which Access
automatically refreshes records that are opened using ODBC. Valid
values are 1 through 32,766 seconds. The default setting is 1500.
<P>
<LI><B>Refresh
Interval</B>
<P>
This sets the number of seconds after which 
Access automatically updates records in Datasheet or Form view.
Valid values are 1 through 32,766 seconds. The default setting
is 60.
<P>
</UL>
<P>
<FONT COLOR="#0000FF" SIZE=2><B>Note&nbsp;&nbsp;&nbsp;</B></FONT>When
Access refreshes the current datasheet or form, it does
not reorder records, add new records, or remove deleted records.
To view these changes, you must requery the underlying records
for the datasheet or form.
<P>
If a multiuser database uses linked tables, see "<A HREF="#OptLinkTabl">Optimizing
the Performance of Linked Tables</A>" earlier in this chapter
for additional suggestions. If a multiuser database connects to
tables in an external SQL database, see "<A HREF="#OptSQLPerf">Optimizing SQL Database Performance</A>" earlier in this chapter for additional suggestions.
<P>
<FONT SIZE=3><B><A NAME="_Toc364227853">Optimizing Query Performance</A></B></FONT>

<P>
<a name="dex40"></a>
<P>
There are several things you can do to make queries run faster.
In addition to using the Performance Analyzer to analyze specific
queries, consider the following ideas.
<P>
<UL TYPE="square">
<P>
<LI>Index fields on both sides
of joins, or create a relationship between those fields and index
any field used to set criteria for the query.
<P>
<FONT COLOR="#0000FF" SIZE=2><B>Note&nbsp;&nbsp;&nbsp;</B></FONT>The
Microsoft Jet database engine automatically optimizes queries
that join an Access table on your hard disk and an ODBC
server table (typically an SQL server table) if the 
Access table is small and the joined fields are indexed. In these
cases, Access improves performance by requesting only
the necessary records from the server. Make sure that tables you
join from different sources are indexed on the join fields.
<P>
<LI>When
defining a field in a table, choose the smallest data type or
<B>FieldSize</B> that is appropriate for the data in the field. Also,
give fields you use in joins the same or compatible data types.
<P>
<LI>When
creating a query, do not add fields that you do not need, and
clear the <B>Show</B> check box for selection criteria fields whose data
you do not want Access to display.
<P>
<LI>Avoid
calculated fields in nested queries. If you add a query that contains
a calculated field to another query, the expression in the calculated
field slows performance in the top&#173;level query.
<P>
For example, suppose this is Query1:

<p><FONT SIZE=3 FACE="COURIER NEW,COURIER"><pre><code>SELECT Format$(Field1)As TempField FROM Table1

</code></pre></FONT>

<P>
Query1 is nested in the following query, Query2:

<p><FONT SIZE=3 FACE="COURIER NEW,COURIER"><pre><code>SELECT * FROM Query1&nbspWhere TempField = 100

</code></pre></FONT>

<P>
Nesting Query1 in Query2 causes optimization problems
due to the expression Format$(Field1) in Query1. For best performance,
use calculated fields only in the top&#173;level query of nested
queries. If that is not practical, use a calculated control on
the form or report based on the query to show the result of the
expression, instead of nesting the query.
<P>
<LI>When
grouping records by the values in a joined field, specify Group
By for the field that is in the same table as the field you are
totaling (calculating an aggregate on).
<P>
For example, if your query totals the Quantity field
in an Order Details table and groups by OrderID, specify Group
By for the OrderID field in the Order Details table, not the OrderID
field in the Orders table. For greater speed, use Group By on
as few fields as possible. As an alternative, use the <B>First</B> function
where appropriate.
<P>
If a totals query includes a join, consider grouping
the records in one query and then adding that query to a separate
query that performs the join. This improves performance in some
queries.
<P>
<LI>Avoid restrictive query criteria on
calculated and nonindexed columns whenever possible. For more
information, see "<A HREF="#OptCriEx">Optimizing Criteria Expressions in Queries
Using Rushmore Technology</A>" later in this chapter.
<P>
<LI>If
you use criteria to restrict the values in a field used in a join,
test whether the query runs faster with the criteria placed on
the <I>one side</I> or the <I>many side</I>
of the join. In some queries, you get faster performance by adding
the criteria to the former.
<P>
<LI>Use field sorting
judiciously, especially with nonindexed fields.
<P>
<LI>If
your data does not change often, use make&#173;table queries to
create tables from your query results. Use the resulting tables
rather than queries as the basis for your forms, reports, or other
queries.
<P>
<LI>Avoid using domain aggregate functions,
such as the <B>DLookup</B> function, in a query that reads table
data. Instead, add the table to the query or create a subquery.
<P>
<LI>If
you are creating a cross&#173;tab query, use fixed column headings
whenever possible. For more information about sorting or limiting
column headings in cross&#173;tab queries, see Access
online Help.
<P>
<LI>Use the <B>Between...And</B>, <B>In</B>,
and equal (<B>=</B>) operators on indexed columns to optimize
queries. For more information, see the following section, "<A HREF="#OptCriEx">Optimizing Criteria Expressions in Queries Using Rushmore Technology</A>."
<P>
</UL>
<P>
If a query includes tables in an external SQL database, see "<A HREF="#OptSQLPerf">Optimizing SQL Database Performance</A>" earlier in this chapter for additional suggestions.
<P>
<FONT SIZE=3><B><A NAME="OptCriEx">Optimizing Criteria Expressions in
Queries Using Rushmore Technology</A></B></FONT>

<P>
<a name="dex41"></a>
<P>
Rushmore is a data&#173;access technology that permits sets of
records to be queried efficiently. With Rushmore, when you use
certain types of expressions in query criteria, your query runs
much faster.
<P>
<B><A NAME="_Toc364227855">Simple Expressions</A></B>

<P>
<a name="dex42"></a>
<P>
Access can optimize simple expressions in the Criteria
row of the query design grid or in a <B>WHERE</B> clause in an
SQL <B>SELECT</B> statement. A simple optimizable expression can
form an entire expression or can appear as part of an expression.
<P>
A simple optimizable expression takes one of the following forms:
<P>
<I>Indexed field</I>  <I>Comparison operator</I>
 <I>Expression</I>
<br>
<I>Expression</I>  <I>Comparison operator</I>
 <I>Indexed field</I>
<P>
In these expressions, <I>Indexed field</I> is a field
on which an index is constructed.
<P>
<I>Comparison operator</I> is one of the following
operators: <B>&lt;</B>, <B>&gt;</B>, <B>=</B>, <B>&lt;=</B>,
<B>&gt;=</B>, <B>&lt;&gt;</B>, <B>Between</B>,
<B>Like</B>, or <B>In</B>. <I>Expression</I> can be
any valid expression, including constants, functions, and fields
from other tables.
<P>
<A NAME="_Toc364227856"><FONT COLOR="#0000FF" SIZE=2><B>Note&nbsp;&nbsp;&nbsp;</B></FONT>For
best results, the comparison value in an expression using the
<B>Like</B> operator must begin with a character, not a wildcard character.
For example, you can optimize Like "<FONT SIZE=3 FACE="COURIER NEW,COURIER">m*</font>" but not Like
"<FONT SIZE=3 FACE="COURIER NEW,COURIER">*m*</font>".</A>
<P>
<B>Examples of Simple Optimizable Expressions</B>

<P>
<a name="dex43"></a>
<P>
If you have created indexes for the LastName, Age, and HireDate
fields in an Employees table, the following are simple optimizable
expressions:

<FONT SIZE=3 FACE="COURIER NEW,COURIER"><pre><code>[LastName]="Smith"
[Age]&gt;=21
#12/30/90#&lt;[HireDate]
Employees.[LastName]=Customers.[LastName]
[LastName] IN ("Smith", "Johnson", "Jones")
[Age] BETWEEN 18 AND 65

</code></pre></FONT>


<P>
If you have a multiple&#173;field index on the LastName, FirstName
fields, the following expression is optimizable:

<FONT SIZE=3 FACE="COURIER NEW,COURIER"><pre><code>(([LastName])="Smith") AND (([FirstName])="Pat")

</code></pre></FONT>
<P>
The SQL <B>SELECT</B> statement for the following <B>COUNT(*)</B>
query is Rushmore optimizable if there are indexes on the LastName
and FirstName fields. This query counts the number of employees
who are not named Pat Smith:

<FONT SIZE=3 FACE="COURIER NEW,COURIER"><pre><code>SELECT Count(*)FROM Employees
WHERE (Employees.[LastName] &lt;&gt; "Smith")
AND (Employees.[FirstName] &lt;&gt; "Pat")

</code></pre></FONT>


<P>
<B><A NAME="_Toc364227857">Complex Expressions</A></B>

<P>
<a name="dex44"></a>
<P>
Access can also optimize complex expressions made by
combining simple expressions with the <B>AND</B> or <B>OR </B>operators.
<P>
A complex optimizable expression takes one of the following forms:
<P>
<I>Simple Expression</I>&nbsp;&nbsp;<B>AND</B>&nbsp;&nbsp;<I>Simple
Expression</I>
<P>
&#150;&nbsp;or&nbsp;&#150;
<P>
<I>Simple Expression</I>&nbsp;&nbsp;<B>OR</B>&nbsp;&nbsp;<I>Simple
Expression</I>
<P>
The following rules determine query optimization when combining
simple expressions in query criteria.
<P>
<TABLE WIDTH=80% VALIGN="TOP" BORDER=1 BORDERCOLOR="#C0C0C0" CELLPADDING=4 CELLSPACING=0>

<TR><TD WIDTH=25% VALIGN="BOTTOM" BGCOLOR="#C0C0C0"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>If you use this operator</B></FONT></TD><TD WIDTH=25% VALIGN="BOTTOM" BGCOLOR="#C0C0C0"><B><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>To combine this expression</FONT></B>
</TD><TD WIDTH=25% VALIGN="BOTTOM" BGCOLOR="#C0C0C0"><B><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>With this expression</FONT></B>
</TD><TD WIDTH=25% VALIGN="BOTTOM" BGCOLOR="#C0C0C0"><B><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>The resulting query has these characteristics</FONT></B>
</TD></TR>
<TR><TD WIDTH=25% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>AND</B></FONT></TD>
<TD WIDTH=25% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Optimizable</FONT></TD><TD WIDTH=25% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Optimizable</FONT>
</TD><TD WIDTH=25% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Fully optimizable</FONT></TD>
</TR>
<TR><TD WIDTH=25% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>OR</B></FONT></TD>
<TD WIDTH=25% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Optimizable</FONT></TD><TD WIDTH=25% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Optimizable</FONT>
</TD><TD WIDTH=25% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Fully optimizable</FONT></TD>
</TR>
<TR><TD WIDTH=25% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>AND</B></FONT></TD>
<TD WIDTH=25% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Optimizable</FONT></TD><TD WIDTH=25% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Not optimizable</FONT>
</TD><TD WIDTH=25% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Partially optimizable</FONT></TD>
</TR>
<TR><TD WIDTH=25% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>OR</B></FONT></TD>
<TD WIDTH=25% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Optimizable</FONT></TD><TD WIDTH=25% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Not optimizable</FONT>
</TD><TD WIDTH=25% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Not optimizable</FONT></TD></TR>
<TR><TD WIDTH=25% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>AND</B></FONT></TD>
<TD WIDTH=25% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Not optimizable</FONT></TD><TD WIDTH=25% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Not optimizable</FONT>
</TD><TD WIDTH=25% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Not optimizable</FONT></TD></TR>
<TR><TD WIDTH=25% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>OR</B></FONT></TD>
<TD WIDTH=25% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Not optimizable</FONT></TD><TD WIDTH=25% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Not optimizable</FONT>
</TD><TD WIDTH=25% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Not optimizable</FONT></TD></TR>
<TR><TD WIDTH=25% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>NOT</B></FONT></TD>
<TD WIDTH=25% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>N/A</FONT></TD><TD WIDTH=25% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Optimizable</FONT>
</TD><TD WIDTH=25% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Not optimizable</FONT></TD></TR>
<TR><TD WIDTH=25% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>NOT</B></FONT></TD>
<TD WIDTH=25% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>N/A</FONT></TD><TD WIDTH=25% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Not optimizable</FONT>
</TD><TD WIDTH=25% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Not optimizable</FONT></TD></TR>

<P>
</TABLE>
<P>
You can use parentheses to group combinations of simple expressions.
The preceding rules also apply to combinations of expressions
grouped with parentheses.
<P>
After you have combined simple optimizable expressions into complex
expressions, these complex expressions can, in turn, be combined
to form even more complex expressions that are optimizable according
to the preceding rules.
<P>
<B><A NAME="_Toc364227858">Examples of Complex Optimizable Expressions</A>
</B>

<P>
<a name="dex45"></a>
<P>
The following table lists examples of combined simple expressions
and the extent to which the result is optimizable.
<P>
<FONT COLOR="#0000FF" SIZE=2><B>Note&nbsp;&nbsp;&nbsp;</B></FONT>These
examples assume that you have created indexes for the LastName
and HireDate fields, but not for the MiddleInitial or FirstName
fields.
<P>
<TABLE WIDTH=80% VALIGN="TOP" BORDER=1 BORDERCOLOR="#C0C0C0" CELLPADDING=4 CELLSPACING=0>

<TR><TD WIDTH=41% VALIGN="BOTTOM" BGCOLOR="#C0C0C0"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>When you combine these expressions</B></FONT></TD>
<TD WIDTH=30% VALIGN="BOTTOM" BGCOLOR="#C0C0C0"><B><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>With these expression types and operator</FONT></B>
</TD><TD WIDTH=30% VALIGN="BOTTOM" BGCOLOR="#C0C0C0"><B><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>The resulting query has these characteristics</FONT></B>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>[LastName]="Smith" AND [Hire Date]&lt;#12/30/90#</FONT>
</TD><TD WIDTH=30% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Optimizable <B>AND </B>Optimizable</FONT>
</TD><TD WIDTH=30% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Fully Optimizable</FONT></TD>
</TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>[LastName]="Smith" OR <br>[Hire Date]&lt;#12/30/90#</FONT>
</TD><TD WIDTH=30% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Optimizable <B>OR </B>Optimizable</FONT>
</TD><TD WIDTH=30% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Fully Optimizable</FONT></TD>
</TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>[LastName]="Smith" AND [MiddleInitial]="C"</FONT>
</TD><TD WIDTH=30% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Optimizable <B>AND </B>Not Optimizable</FONT>
</TD><TD WIDTH=30% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Partially Optimizable</FONT></TD>
</TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>[LastName]="Smith" OR [MiddleInitial]="C"</FONT>
</TD><TD WIDTH=30% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Optimizable <B>OR </B>Not Optimizable</FONT>
</TD><TD WIDTH=30% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Not Optimizable</FONT></TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>[FirstName]="Terry" AND [MiddleInitial]="C"</FONT>
</TD><TD WIDTH=30% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Not Optimizable <B>AND </B>Not Optimizable</FONT>
</TD><TD WIDTH=30% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Not Optimizable</FONT></TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>[FirstName]="Terry" OR [MiddleInitial]="C"</FONT>
</TD><TD WIDTH=30% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Not Optimizable <B>OR </B>Not Optimizable</FONT>
</TD><TD WIDTH=30% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Not Optimizable</FONT></TD></TR>

<P>
</TABLE>
<P>
<B><A NAME="_Toc364227859">Additional Notes on Rushmore Optimization</A>
</B>

<P>
<UL TYPE="square">
<P>
<LI>The <B>COUNT(*)</B> function
is highly optimized for queries that use Rushmore.
<P>
<LI>If
the index is descending and the comparison operator is other than
equal (<B>=</B>), the query cannot be optimized.
<P>
<LI>Rushmore
queries work with Access tables, as well as with Microsoft
FoxPro and dBASE tables (DBF files). You cannot use Rushmore with
ODBC data sources, however, because Access sends these
queries to the ODBC data source instead of processing them locally.
<P>
<LI>You
can optimize multiple&#173;field indexes if you query the indexed
fields in the order they appear in the Indexes window, beginning
with the first indexed field and continuing with adjacent fields
(up to and including 10 fields).
<P>
For example, if you have a multiple&#173;field index
on LastName, FirstName, you can optimize a query on LastName or
on LastName and FirstName, but you cannot optimize a query on
FirstName.
<P>
</UL>
<P>
<FONT SIZE=3><B><A NAME="OptFiltPer">Optimizing Filter Performance</A></B></FONT>

<P>
<a name="dex46"></a>
<P>
If the lists in fields in the Filter By Form window take too long
to display or they do not display values from the underlying table,
you can set filtering options to change these behaviors. By setting
filter options, you can prevent the lists from displaying the
underlying table's field values, display field values on the list
for certain types of indexed or nonindexed fields only, or change
the record limit that determines whether the list displays a field's
values.
<P>
<a name="dex47"></a>
<P>
You can perform this optimization for all tables, queries, and
forms in the database, or for specific bound text box controls
in forms.
<P>
<FONT SIZE=2 COLOR="#0000FF"><B>Tip&nbsp;&nbsp;&nbsp;</B></FONT>If
you use the same nonindexed field repeatedly to filter records,
consider indexing it before changing the following settings. This
improves filtering and other search operations on the field.
<P>
<a name="dex48"></a>
<P>
To optimize Filter By Form performance for all tables, queries,
and forms, set the options under <B>Filter By Form Defaults</B>
on the <B>Edit/Find</B> tab in the <B>Options</B> dialog box (<B>Tools</B>
menu) according to the performance you want to achieve:
<P>
<UL TYPE="square">
<P>
<LI>If the list of values takes
too long to display in nonindexed fields only, limit the lists
to indexed fields. You can do this by clearing the check boxes
for <B>Local Non&#173;indexed Fields</B> and <B>ODBC Fields</B>.
<P>
<LI>If
the lists take too long to display in indexed fields because there
are too many records in the indexes, also clear the <B>Local Indexed
Fields</B> check box.
<P>
<LI>If lists are not displaying
the values from indexed or nonindexed fields, make sure that the
appropriate check boxes are selected under <B>Show list of values
in</B>; or increase the number in the box <B>Don't display lists
where more than this number of records read</B> so that it is
greater than or equal to the maximum number of records in any
nonindexed field in the underlying table.
<P>
If the field is indexed, Access reads only
the unique values, not all the values in a field. If the field
is not indexed, Access reads all the values in the field.
If the number of records it reads is more than the maximum it
is allowed to display, Access does not display the values
for that field on the list.
<P>
</UL>
<P>
To optimize a specific bound text box control on a form, display
the form in Design view, display the property sheet for the control,
and then set the <B>FilterLookup</B> property according to the
performance you want to achieve:
<P>
<UL TYPE="square">
<P>
<LI>If the lists take too long
to display in nonindexed fields only, limit the lists to indexed
fields. Set the <B>FilterLookup</B> property to <B>Database Defaults</B>;
then, on the <B>Edit/Find</B> tab in the <B>Options</B> dialog
box (<B>Tools</B> menu), select the <B>Local Indexed Fields</B>
check box and clear the <B>Local Non&#173;Indexed Fields</B> and
<B>ODBC Fields</B> check boxes.
<P>
<LI>To prevent a
list from displaying, regardless of the database defaults, set
the <B>FilterLookup</B> property to <B>Never</B>.
<P>

<P>
<LI>To force a list to display, regardless of the
database defaults, set the <B>FilterLookup</B> property to <B>Always</B>.
<P>
<LI>If
lists are not displaying the values from indexed or nonindexed
fields, make sure that the <B>FilterLookup</B> property for each
field is not set to <B>Never</B>. If it is not, verify that the
options under <B>Show list of values in</B> are selected. If they
are, increase the number in the <B>Don't display lists where more
than this number of records read</B> box so that it is greater
than or equal to the maximum number of records in any nonindexed
field in the underlying table.
<P>
</UL>
<P>
<FONT SIZE=3><B>Optimizing Find and Replace Performance</B></FONT>

<P>
<a name="dex49"></a>
<P>
For the fastest searches when using the <B>Find</B> or <B>Replace</B>
commands (<B>Edit</B> menu), search for whole field values or
the first character within a single indexed field. If you search
the same nonindexed field repeatedly, index the field.
<P>
<FONT SIZE=3><B><A NAME="_Toc364227862">Optimizing Form and Subform Performance</A>
</B></FONT>

<P>
<a name="dex50"></a>
<P>
There are several things you can do to make your forms run faster:
<P>
<UL TYPE="square">
<P>
<LI>Avoid overlapping controls.
<P>
<LI>Use
bitmaps and other graphic objects sparingly.
<P>
<LI>Convert
unbound object frames that display graphics to image controls.
<P>
<LI>Use
black&#173;and&#173;white rather than color bitmaps.
<P>
<LI>Close
forms that are not being used.
<P>
<LI>If the underlying
record source includes many records and you want to use the form
primarily to enter new records, set the <B>DataEntry</B> property
of the form to <B>Yes</B> so that the form opens to a blank record.
<P>
If you open a form with all records showing, 
Access has to read in each record before it can display the blank
record at the end of the recordset. If the form is already open,
you can click the <B>Data Entry</B> command on the <B>Records</B> menu to switch
to Data Entry mode.
<P>
<LI>Do not sort records in an
underlying query unless record order is important, especially
with multiple&#173;table queries.
<P>
<LI>Base subforms
on queries rather than tables, and include only fields from the
record source that are absolutely necessary. Extra fields can
decrease subform performance.
<P>
<LI>Index all the
fields in the subform that are linked to the main form.
<P>
<LI>Index
any subform fields used for criteria.
<P>
<LI>Set the
subform <B>AllowEdits</B>, <B>AllowAdditions</B>, and <B>AllowDeletions</B>
properties to <B>No</B> if the records in the subform will not
be edited. Or set the <B>RecordsetType</B> property to <B>Snapshot</B>.
<P>

<P>
<LI>Eliminate code from forms that do not need
it by setting the <B>HasModule</B> form property to <B>No</B>.
<P>
The <B>HasModule</B> property specifies whether the form
has a form module. A form without a form module loads more quickly
and occupies less disk space. If a form or controls on the form
do not use event procedures, the form does not require a form
module. For example, if your application uses a switchboard form
exclusively to navigate to other forms, instead of using command
buttons with event procedures, you can use command buttons with
macros, or hyperlinks.
<P>
You can still use code with a form that has no form
module by calling <B>Function</B> procedures from a standard module using
an expression. (You cannot use <B>Sub</B> procedures, because they cannot
be called using an expression.) To do this, define a <B>Function</B>
procedure in a standard module and then call that function from
an event property of the form or a control. For example, to use
a command button to call a function to open a form, add an expression
like this to the <B>OnClick</B> property of the command button: <FONT SIZE=3 FACE="COURIER NEW,COURIER">=OpenDataEntry()</font>.
<P>
<FONT COLOR="#0000FF" SIZE=2><B>Note&nbsp;&nbsp;&nbsp;</B></FONT>If
a form currently contains event procedures, and you decide to
eliminate all event procedure code from that form, you must set
the <B>HasModule</B> property to <B>No</B> to completely remove the form module.
<P>
</UL>
<P>
In addition to these tips, you can use the Performance Analyzer
to analyze specific forms in your database. For information about
using the Performance Analyzer, see "<A HREF="#UsPerfAn">Using the Performance
Analyzer</A>" earlier in this chapter.
<P>
<FONT SIZE=3><B>Optimizing List Box and Combo Box Performance</B></FONT>

<P>
<a name="dex51"></a>
<P>
There are several things you can do to make list boxes and combo
boxes run faster:
<P>
<UL TYPE="square">
<P>
<LI>Base the list box or combo box on a saved query instead of an SQL statement.
<P>
If you use a wizard to create the list box or combo box, Access automatically sets the <B>RowSource</B> property of the control to an SQL statement. To change the <B>RowSource</B> property to a saved query, click the <B>Build</B> button next to the <B>RowSource</B> property. In the SQL Builder window, click <B>Save</B> on the <B>File</B> menu and enter a name for the query. When you close the SQL Builder window, click <B>Yes</B> when Access asks if you want to update the property.
<P>
<LI>In the query specified in the <B>RowSource</B> property, include only fields that are absolutely necessary. Extra fields can decrease performance.
<P>
<LI>Index both the first field displayed in the list box or combo box and
the bound field (if the fields are different).
<P>
<LI>Index any fields used for criteria.
<P>
<LI>In combo boxes, set the <B>AutoExpand</B> property to <B>No</B> if you do not need Access to automatically fill in the text box portion
of the combo box with a value that matches the characters that the user
types.
<P>
<LI>If the <B>AutoExpand</B> property for a combo box is set to <B>Yes</B>, the first displayed field should have a <B>Text</B> data type instead of a <B>Number</B> data type. In order to find a match in the list, Access converts a numeric value to text. If the data type is <B>Text</B>, Access does not have to do this conversion.
<P>
<LI>If the bound field in a lookup combo box is not the displayed field:
<UL TYPE="square">
<P>
<LI>Do not use expressions for the bound field or the displayed field.
<P>
<LI>Do not use restrictions in the row source.
<P>
<LI>Use single&#173;table (or query) row sources rather than multiple&#173;table row sources, if possible.
</UL>
<P>
<LI>Do not create list boxes or combo boxes based on data from linked tables if the data will not change. It is better to import the data into your database, in this case.
<P>
</UL>
<P>
For information about optimizing the Filter By Form performance
of a list box or combo box, see "<A HREF="#OptFiltPer">Optimizing Filter Performance</A>" earlier in this chapter.
<P>
<FONT SIZE=3><B>Optimizing Report and Printing Performance
</B></FONT>
<P>
<a name="dex52"></a>
Here are some suggestions for speeding up report and printing
performance:
<P>
<UL TYPE="square">
<P>
<LI>Avoid overlapping controls.
<P>
<LI>Use bitmaps and other graphic objects sparingly.
<P>
<LI>Convert unbound object frames that display graphics to image controls.
<P>
<LI>Use black&#173;and&#173;white rather than color bitmaps.
<P>
<LI>Avoid sorting and grouping on expressions.
<P>
<LI>Index fields you sort or group on.
<P>
<LI>Base subreports on queries rather than tables, and include only fields from the record source that are absolutely necessary. Extra fields can decrease subreport performance.
<P>
<LI>Index all the fields in the subreport that are linked to the main report.
<P>
<LI>Index any subreport fields used for criteria.
<P>
<LI>Avoid using domain aggregate functions. Include the field in the report's underlying query or use a subreport.
<P>
<LI>Make sure the report's underlying query is optimized.
<P>
<LI>Use the <B>HasData</B> property or <B>NoData</B> event to determine
whether a report is bound to an empty recordset.
<P>
</UL>
<P>
<FONT SIZE=3><B>Optimizing Visual Basic Performance</B></FONT>

<P>
<a name="dex53"></a>
<P>
In general, you can do more to improve the speed of your code
by choosing more efficient algorithms than by implementing particular
coding tricks. However, certain techniques can help make your
code run faster.
<P>
<FONT SIZE=2><B>Compile the code in a database application before distributing it to users</B></FONT>
<P>
In the Module window, click <B>Debug</B>, and then click <B>Compile
And Save All Modules</B>.
<P>
<FONT SIZE=2><B>Always explicitly declare variables</B></FONT>
<P>
You can require that variables be explicitly declared before they
are used in a procedure by selecting the <B>Require Variable Declaration
</B>check box under <B>Coding Options</B> on the <B>Module</B>
tab in the <B>Options</B> dialog box (<B>Tools</B> menu).
<P>
<FONT SIZE=2><B>Use the most specific type possible when you declare variables
</B></FONT>
<P>
For example, declare a variable that is used to represent a form
as type <B>Form</B> rather than as type <B>Object</B> or <B>Variant</B>.
This is especially important if you are working with Automation
objects or separate instances of Visual Basic. When working with
Automation objects, instead of using a <B>Variant</B> data type
or the generic <B>Object</B> data type, declare objects as they
are listed in the <B>Modules/Classes</B> box in the Object Browser.
This ensures that Visual Basic recognizes the specific type of
object you are referencing, allowing the reference to be resolved
when you compile.
<P>
<FONT SIZE=2><B>Use variables to refer to properties, controls, and data access objects</B></FONT>
<P>
If you refer more than once to the value of a property or control
on a form, or to a data access object or its property, create
object variables and refer to the variables rather than using
full identifiers. This approach is especially effective for speeding
up a looping operation on a series of properties, controls, or
objects.
<P>
<FONT SIZE=2><B>Use the Me keyword for form references within an event procedure
</B></FONT>
<P>
When you make form references within an event procedure, use the
<B>Me</B> object variable to refer to the form. This restricts
the search for the form to the local name space.
<P>
<FONT SIZE=2><B>Use the IIf function judiciously</B></FONT>
<P>
Avoid using the <B>IIf</B> function if either of the return expressions
takes a long time to evaluate. Access always evaluates
both expressions. It is often more efficient to replace the <B>IIf</B>
function with an <B>If</B>...<B>Then</B>...<B>Else</B> statement
block.
<P>
<FONT SIZE=2><B>Use string functions when appropriate</B></FONT>
<P>
Some functions have two versions, one that returns a <B>Variant</B>
data type (for example, the <B>Str</B> function) and one that
returns a <B>String</B> data type (for example, the <B>Str$</B>
function.) When working with variables declared with the <B>String</B>
data type or when writing data directly to random-access files,
use functions with names that end with <B>$</B> if they are available.
This makes your operations run faster, because Access
does not need to perform type conversions. For more information
about string functions, see Access online Help.
<P>
<FONT SIZE=2><B>Use the Integer or Long data type for math when the size and
type of numbers permit</B></FONT>
<P>
The <B>Variant</B> data type, although more flexible, uses more
memory and processor time as it translates between data types.
The following table ranks the numeric data types by calculation
speed.
<P>
<TABLE WIDTH=80% VALIGN="TOP" BORDER=1 BORDERCOLOR="#C0C0C0" CELLPADDING=4 CELLSPACING=0>

<TR><TD WIDTH=41% VALIGN="BOTTOM" BGCOLOR="#C0C0C0"><B><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Numeric data type</FONT></B>
</TD><TD WIDTH=59% VALIGN="BOTTOM" BGCOLOR="#C0C0C0"><B><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Speed</FONT></B></TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Integer</B>, <B>Long</B></FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Fastest</FONT></TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Single</B>, <B>Double</B></FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Next&#173;to&#173;fastest</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Currency</B></FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Next&#173;to&#173;slowest</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Variant</B></FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Slowest</FONT></TD></TR>

<P>
</TABLE>
<P>
<FONT SIZE=2><B>Use dynamic arrays and the Erase or ReDim statement to reclaim
memory</B></FONT>

<P>
Consider using dynamic arrays instead of fixed arrays. When you
no longer need the data in a dynamic array, use either the <B>Erase</B>
statement or the <B>ReDim</B> statement with the <B>Preserve</B>
keyword to discard unneeded data and reclaim the memory used by
the array. For example, you can reclaim the space used by a dynamic
array with the following code:

<FONT SIZE=3 FACE="COURIER NEW,COURIER"><pre><code>Erase intArray</code></pre></FONT>

While the <B>Erase</B> statement completely eliminates the array,
the <B>ReDim</B> statement used with the <B>Preserve</B> keyword
makes the array smaller without losing its contents.

<FONT SIZE=3 FACE="COURIER NEW,COURIER"><pre><code>ReDim Preserve intArray(10, conNewUpperBound)</code></pre></FONT>
<P>
Erasing a fixed&#173;size array does not reclaim the memory for
the array; it simply clears out the values of each element of
the array. If each element was a string, or a <B>Variant</B> data
type containing a string or an array, then erasing the array would
reclaim the memory from those strings or <B>Variant</B> data types,
but not the memory for the array itself.
<P>
<FONT SIZE=2><B>Replace procedure calls with inline code</B></FONT>
<P>
Although using procedures makes your code more modular, performing
each procedure call always involves some additional work and time.
If you have a loop that calls a procedure many times, you can
eliminate this overhead by removing the procedure call and placing
the body of the procedure directly inline within the loop. If
you place the same code inline in several loops, however, the
duplicate code increases the size of your application. It also
increases the chance that you will not remember to update each
section of duplicate code when you make changes.
<P>
<FONT SIZE=2><B>Use constants whenever possible to make your application run
faster</B></FONT>
<P>
Constants also make your code more readable and easier to maintain.
If your code has strings or numbers that do not change, declare
them as constants. Constants are resolved once when your program
is compiled, with the appropriate value written into the code.
With variables, however, each time the application runs and finds
a variable, it needs to get the current value of the variable.
Whenever possible, use the intrinsic constants listed in the Object
Browser rather than creating your own.
<P>
<FONT SIZE=2><B>Use bookmarks instead of the FindNext method to return to
a particular record</B></FONT>
<P>
Using the <B>Bookmark</B> property, you can write a procedure
to find a target record, store its bookmark value in a variable,
move to other records, and return to the original record by referring
to the bookmark. For more information about the <B>Bookmark</B>
property, see Access online Help.
<P>
<FONT SIZE=2><B>Use the FindRecord and FindNext methods on indexed fields
</B></FONT>
<P>
When locating records that satisfy a specified criteria, the <B>FindRecord</B>
and <B>FindNext</B> methods are much more efficient than the <B>Seek</B>
method when used on a field that is indexed.
<P>
<FONT SIZE=2><B>Consider reducing the number of procedures and modules</B></FONT>
<P>
While your application runs, each called procedure is placed in
its own public block of memory. Access incurs some overhead
in creating and managing these blocks. You can save some of this
overhead by combining short procedures into larger procedures.
<P>
<FONT SIZE=2><B>Organize the modules in an application</B></FONT>
<P>
Visual Basic loads modules on demand&nbsp;&#151; that is,
it loads a module into memory only when your code calls one of
the procedures in that module. If you never call a procedure in
a particular module, Visual Basic never loads that module. Placing
related procedures in the same module causes Visual Basic to load
modules only as needed.
<P>
<FONT SIZE=2><B>Eliminate dead code and unused variables</B></FONT>
<P>
As you develop and modify your applications, you may leave behind
dead code&nbsp;&#151; entire procedures that are not called
from anywhere in your code. You may also have declared variables
that are no longer used. Review your code to find and remove unused
procedures and variables; for example, <FONT SIZE=2 FACE="COURIER NEW,COURIER">Debug.Print</FONT> statements.
<P>
To search for references to a particular variable, use the <B>Find</B>
command on the <B>Edit</B> menu. Or, if you have <B>Option Explicit</B>
statements in each of your modules, you can quickly discover whether
a variable is used in your application by removing its declaration
and running the application. If the variable is used, Visual Basic
generates an error. If you do not see an error, the variable was
not used.
<P>
If your application has places in which the contents of a string
variable or a <B>Variant</B> data type containing a string is
not needed, assign a zero&#173;length string ("") to
that variable. If you no longer need an object variable, set that
variable to <B>Nothing</B> to reclaim the memory used by the object
reference.
<P>
You can also use compiler directives and conditional compilation
to ignore portions of code based on constant values that you specify.
For more information about debugging Visual Basic code, see Chapter&nbsp;7,
"Debugging Visual Basic Code," in <I>Building
Applications with Microsoft Access&nbsp;97</I>.
<P>
<FONT SIZE=3><B><A NAME="MDESave">Saving a Database as an MDE File</A>
</B></FONT>

<P>
If the design of forms, reports, and modules is stable, consider
saving a database as an MDE file. Saving a database containing
code as an MDE file removes the source code from the file and
provides some additional optimization of memory use. However,
the design of forms, reports, and all code modules cannot be changed
in an MDE file. To modify the design of a database saved as an
MDE file, you must open the original copy of the database, make
the modification to that database, and then re&#173;save it as
an MDE database.
<P>
<a name="dex54"></a>
<P>
For this reason, saving a database as an MDE file is most appropriate
for a database where the design of forms, reports, and modules
will not be changed, or for the front&#173;end database in a front&#173;end/back&#173;end
database application. A <I>front&#173;end/back&#173;end
database application</I> consists of two database files.
The back&#173;end database contains only the application's tables.
The front&#173;end database contains all other database objects
(queries, forms, reports, macros, and modules) and links to the
tables in the back&#173;end database. Typically, the back&#173;end
database is located on a network server, and copies of the front&#173;end
database are installed on individual users' computers.
<P>
For more information about MDE files, see "<a href="029.htm#CH029H101">Security
Features in Microsoft Access</A>" in Chapter&nbsp;29,
"Workgroup Features in Microsoft&nbsp;Access."
<P>
<FONT SIZE=4><B><A NAME="CH007H207">Optimizing Microsoft Excel</A></B></FONT>

<P>
<a name="dex55"></a>
<P>
There are several techniques you can use to optimize 
Excel for size and speed. In general, size optimizations decrease
both the amount of memory required and the amount of disk space
required. Speed optimizations usually occur when you modify worksheets
so that the recalculation engine in Excel works more
efficiently.
<P>
<FONT SIZE=3><B><A NAME="_Toc364227868">Optimizing for Size</A></B></FONT>

<P>
<a name="dex56"></a>
<P>
If a worksheet contains links to large ranges on external documents,
it may require a large amount of disk space and take a long time
to open. To prevent this, clear the <B>Save external link values</B>
check box on the <B>Calculation</B> tab in the <B>Options</B>
(Windows) or <B>Preferences</B> (Macintosh) dialog box (<B>Tools</B> menu). You do not lose the links to the
external data, but clearing this option prevents Excel
from saving the value with the linked worksheet.
<P>
<FONT SIZE=3><B><A NAME="_Toc364227869">Optimizing for Speed</A></B></FONT>

<P>
To optimize Excel for speed, use the following guidelines:
<P>
<UL TYPE="square">
<P>
<LI>Do not select the <B>Precision
as displayed</B> check box on the <B>Calculation</B> tab in the
<B>Options</B> (Windows) or <B>Preferences</B> (Macintosh) dialog box (<B>Tools</B> menu) unless you really
need it.
<P>
When <B>Precision as displayed</B> is off, Excel
stores the full precision of a number in memory, and displays
only the number of digits specified by the formatting. When <B>Precision
as displayed</B> is on, however, Excel performs a math operation
on every cell, which rounds the number. The operation forces the
precision of the number stored in memory to be equal to the number
of decimal places in the cell number format, slowing calculation
speed.
<P>
<LI>If you use complicated <B>IF</B> functions
on a worksheet, replace them with <B>VLOOKUP</B> or <B>HLOOKUP</B>
functions.
<P>

<P>
<LI>Avoid using the functions <B>AREAS</B>, <B>CELL</B>, <B>COLUMNS</B>,
<B>INDEX</B>, <B>INDIRECT</B>, <B>INFO</B>, <B>NOW</B>, <B>OFFSET</B>, <B>RAND</B>, <B>ROWS</B>, and <B>TODAY</B>.
<P>
Formulas that contain these functions, or dependents
of those formulas, must be recalculated every time there is a
calculation, because their results may change even if their precedent
cells have not changed. If you must use these functions, try to
avoid having other calculations depend on their results.
<P>
<LI>Avoid
using user&#173;defined functions and names that are complex expressions,
which are recalculated more slowly than the equivalent formula
in a cell.
<P>
<LI>If your worksheets contain a large number of pictures, you can speed up scrolling by selecting the <B>Show placeholders</B> option for objects on the <B>View</B> tab in the <B>Options</B> (Windows) or <B>Preferences</B> (Macintosh) dialog box (<B>Tools</B> menu).
<P>
If users want to switch quickly between viewing graphics
and placeholders, you can assign the following two Visual Basic
procedures to custom buttons.

<p><FONT SIZE=3 FACE="COURIER NEW,COURIER"><pre><code>Sub ViewObjectPlaceholders()
&#09;ActiveWorkbook.DisplayDrawingObjects&nbsp=&nbspxlPlaceholders
End Sub
<p>
Sub&nbspViewObjects()
&#09;ActiveWorkbook.DisplayDrawingObjects&nbsp=&nbspxlAll
End Sub</code></pre></FONT>
<P>
<LI>If
you have large worksheets that take a long time to recalculate,
consider selecting the <B>Manual</B> option on the <B>Calculation</B>
tab in the <B>Options</B> (Windows) or <B>Preferences</B> (Macintosh) dialog box (<B>Tools</B> menu).
<P>
Whenever you make a change to the worksheet that necessitates
recalculation, Excel displays the word Calculate in
the status bar. You can continue to change the worksheet, and
when you are finished, press F9 to recalculate manually.
<P>
<LI>Set
your users' monitors to use only 16 or 256 colors.
<P>
For writing reports and working with spreadsheets,
users may need only 16 or 256&nbsp;colors, so they can switch
to a video driver that supports a lower resolution and fewer colors.
They can always switch back if there is no improvement in performance
or if their work requires additional video capabilities.
<P>
</UL>
<P>
<FONT SIZE=4><B><A NAME="CH007H208">Optimizing Microsoft PowerPoint</A></B></FONT>

<P>
<A NAME="_Toc363957756">There are several adjustments you can
make to help PowerPoint run faster and use less disk space. These
adjustments have to do primarily with using less memory or using
memory more efficiently. This section explains how to make these
adjustments.</A>
<P>
</MENU></MENU>
<P>
<TABLE WIDTH=93% CELLPADDING=0 CELLSPACING=0 BORDER=0>

<TR>

<TD WIDTH=80 ALIGN=RIGHT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><IMG SRC="WINDOWSO.GIF" WIDTH=27 HEIGHT=27 BORDER=0 ALT="">&nbsp;&nbsp;</FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=3><B>Virtual Memory</B></FONT>
</TD>

</TR>

</TABLE>
<MENU><MENU>
<P><a name="dex57"></a>
When you run PowerPoint with virtual memory turned off in Windows&nbsp;95,
you may experience slow performance or receive memory&#173;related
messages, such as "You do not have enough memory to perform
this function." For optimum performance, run PowerPoint with
virtual memory turned on. For more information about using virtual
memory consult your Windows documentation.
<P>
<FONT SIZE=3><B><A NAME="_Toc364227874">Visual Basic Add&#173;ins</A></B></FONT>

<P>
<a name="dex58"></a>
<P>
Visual Basic add&#173;ins slow down the launching of PowerPoint
if they are loaded automatically. Although PowerPoint add&#173;ins
can be created in Visual Basic, consider using DLL add&#173;ins
whenever possible for better performance. DLL add&#173;ins load
faster than Visual Basic add&#173;ins, and can call Visual Basic
add&#173;ins as needed, depending on user input.
<P>
<a name="dex59"></a>
<P>
A good strategy is to use DLL add&#173;ins for controlling user
interface items, and Visual Basic add&#173;ins to carry out the
commands added by the DLL. If the DLL add&#173;in is loaded automatically,
PowerPoint starts with custom menus, toolbar enhancements, and
so forth. When you select one of these customized user interface
items, the DLL calls the code in the Visual Basic add&#173;in.
This way, PowerPoint loads Visual Basic code and the associated
type library on an as&#173;needed basis, which speeds startup
considerably.
<P>
<FONT SIZE=3><B><A NAME="_Toc364227875">Image Format and Performance</A></B></FONT>

<P>
The amount of time it takes to display an image and the amount
of disk space needed to store a graphics file depend on the format
of the graphic. There are several adjustments you can make to
improve performance where graphics are concerned.
<P>
<B><A NAME="_Toc363957760">Options for Exporting Pictures</A>
</B>

<P>
On the <B>Advanced</B> tab in the <B>Options</B> (Windows) or <B>Preferences</B> (Macintosh)
dialog box (<B>Tools</B> menu), you can select the best option
for exporting pictures: <B>Best for printing</B> or <B>Best for
on&#173;screen viewing</B>. This selection governs the size of
the resulting file when you export slides and presentations to
a graphics format. For information about exporting slides and
presentations to a graphics format, see Chapter&nbsp;20, "<a href="020.htm">Switching to Microsoft PowerPoint</A>."
<P>
If you are exporting slides as graphics primarily to print them,
you should select the <B>Best for printing</B> check box. Otherwise,
always select <B>Best for on&#173;screen viewing</B> for optimum
performance. The following table shows the difference in file
size depending on which option you select.
<P>
<TABLE WIDTH=80% VALIGN="TOP" BORDER=1 BORDERCOLOR="#C0C0C0" CELLPADDING=4 CELLSPACING=0>

<TR><TD WIDTH=41% VALIGN="BOTTOM" BGCOLOR="#C0C0C0"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Selecting this option</B></FONT></TD><TD WIDTH=59% VALIGN="BOTTOM" BGCOLOR="#C0C0C0"><B><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Creates a 24&#173;bit bitmap image of this size</FONT></B>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Best for printing</B></FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>24&#173;bit (16 million colors)</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Best for on&#173;screen viewing</B></FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>8&#173;bit (256 colors)</FONT>
</TD></TR>

<P>
</TABLE>
<P>
</MENU></MENU>
<P>
<TABLE WIDTH=93% CELLPADDING=0 CELLSPACING=0 BORDER=0>

<TR>

<TD WIDTH=80 ALIGN=RIGHT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><IMG SRC="WINDOWSO.GIF" WIDTH=27 HEIGHT=27 BORDER=0 ALT="">&nbsp;&nbsp;</FONT></TD><TD><B><FONT SIZE=2 COLOR="#0000FF" FACE="VERDANA,ARIAL,HELVETICA">Tip&nbsp;&nbsp;&nbsp;</FONT></B><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>In
Windows&nbsp;95 and Windows&nbsp;NT Workstation&nbsp;4.0, you
can use a system policy to define the default value for the <B>Export
pictures</B> option on the <B>Advanced</B> tab in the <B>Options</B>
dialog box (<B>Tools</B> menu) for all PowerPoint users in your
workgroup. In the System Policy Editor, set the following policy:</FONT></TD></TR></TABLE>
<MENU><MENU>
<P><B>User\PowerPoint&nbsp;97\Tools_Options\Advanced\Picture</B>
<p>For more information, see "<A HREF="#CH007H101">Using
Windows System Policies to Customize Office</A>" earlier
in this chapter.
<P>
<B><A NAME="_Toc364227877">File Formats for Compressing Graphics</A>
</B>

<P>
<a name="dex60"></a>
<P>
PowerPoint supports two versatile graphics formats: JPEG
File Interchange Format (JFIF) and Portable Network Graphics (PNG).
Both JFIF and PNG store bitmaps in a compressed format that can
greatly improve PowerPoint performance and reduce overhead of
system resources.
<P>
<a name="dex61"></a>
<P>
PowerPoint can read images in these formats directly, without
converting them and without using a filter. Images in any other
format must be converted to be displayed. Since PowerPoint can
read JFIF and PNG formats directly, images stored in these formats
load much faster than images stored in any other format.
<P>
<FONT COLOR="#0000FF" SIZE=2><B>Note&nbsp;&nbsp;&nbsp;</B></FONT>Earlier
versions of PowerPoint also included support for JFIF files. However,
PowerPoint&nbsp;97 and 98 include an updated JFIF filter that handles
more JPEG formats than did the previous JFIF filters included
with PowerPoint.
<P>
<a name="dex62"></a>
<P>
PowerPoint decompresses the images to display them, but stores
them in the compressed format. Storing bitmaps as PNG files typically
compresses the size of the file by at least 50 percent; and storing
full&#173;color, photographic bitmaps as JFIF files typically
compresses the file size by 90 percent or more. Not only do these
smaller files require less disk space, they travel faster across
the network, reduce network traffic, and reduce the overhead of
moving presentations to portable computers.
<P>
<TABLE WIDTH=70% VALIGN="TOP" CELLPADDING=15 CELLSPACING=0 BORDER=1 BORDERCOLOR=#0000FF><TR BGCOLOR="#FFFFFF"><TD>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
<P>
<B>Did You Know?</B>
<P>
The commonly used bitmap format (BMP) actually includes many varieties
for storing different types of bitmaps. The PNG format, however,
is a superset of all BMP formats, so it is possible to convert
any BMP format image to a PNG file with no loss of data. Using
the PNG format normally compresses bitmaps as well as the GIF
format does, but unlike GIF, PNG supports all BMP formats.
<P>
GIF, a common format for images on the Internet, can be safely
converted to PNG provided the GIF contains only one image. JPEG,
the other common format for images on the Internet, cannot reliably
be converted to PNG, so PowerPoint supports the standard
JFIF filter for compressing these files.
<br>
</FONT></TD></TR>
</TABLE>

<P>
<B><A NAME="_Toc364227878">Sharing Graphics Between Versions
of PowerPoint</A></B>

<P>
<a name="dex63"></a>
<P>
If you are upgrading gradually from earlier versions of PowerPoint
to PowerPoint&nbsp;97 or 98 and a large percentage of users are still
running earlier versions, you may want to delay the installation
of the PNG and JFIF filters.
<P>
At first, when some users are still running an earlier version
of PowerPoint, it may be more efficient to store graphics in BMP
and JPEG formats. Later, when most users are running PowerPoint&nbsp;97 or 98,
consider storing BMPs as PNG files and JPEGs as JFIF files, and
installing PNG and JFIF filters on any computers running earlier
versions of PowerPoint. Using these filters, earlier versions
of PowerPoint can quickly decompress these images, and you can
conserve system resources by storing highly compressed graphics
files.
<P>
<B><A NAME="_Toc364227879">Linking Graphics</A></B>

<P>
<A NAME="_Toc363957762">To centralize storage of images and keep
the size of presentations to a minimum, you can store all images
separately from presentation files and link, rather than embed,
them in presentations. PowerPoint loads the image in order to
display it, but stores only a link rather than a copy of the compressed
graphics file. Depending on the size of the original image file,
the combination of compressing BMP and JPEG files in PNG or JFIF
format and then linking these graphics to presentations can result
in significant savings of disk space and reduction of network
traffic.</A>
<P>
<FONT SIZE=3><B><A NAME="_Toc364227880">Multimedia and Performance</A></B></FONT>

<P>
<a name="dex64"></a>
<P>
If you use sound and video files in presentations, you can enhance
the performance of PowerPoint depending on where you store the
files and how you incorporate them into presentations.
<P>
To reduce file size, you can link rather than embed sounds and
videos. By default, sound files smaller than 100&nbsp;KB are embedded
in a presentation, and files 100&nbsp;KB or larger are linked. You can
customize this default on the <B>Advanced</B> tab in the <B>Options</B>
(Windows) or <B>Preferences</B> (Macintosh) dialog box (<B>Tools</B> menu). Sounds attached to animation effects
are embedded regardless of file size, so it is best to use small
sound files for these.
<P>
</MENU></MENU>
<P>
<TABLE WIDTH=93% CELLPADDING=0 CELLSPACING=0 BORDER=0>

<TR>

<TD WIDTH=80 ALIGN=RIGHT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><IMG SRC="WINDOWSO.GIF" WIDTH=27 HEIGHT=27 BORDER=0 ALT="">&nbsp;&nbsp;</FONT></TD><TD><B><FONT SIZE=2 COLOR="#0000FF" FACE="VERDANA,ARIAL,HELVETICA">Tip&nbsp;&nbsp;&nbsp;</FONT></B><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>In
Windows&nbsp;95 and Windows&nbsp;NT Workstation&nbsp;4.0, you
can use a system policy to define the default value for the <B>Link
sounds with file size greater than</B> option on the <B>General</B>
tab in the <B>Options</B> dialog box (<B>Tools</B> menu) for all
PowerPoint users in your workgroup. In the System Policy Editor,
set the following policy:</FONT>

</TD>

</TR>

</TABLE>
<MENU><MENU>
<P><B>User\PowerPoint&nbsp;97\Tools_Options\General\Link Sounds File
Size</B>
<P>
For more information, see "<A HREF="#CH007H101">Using
Windows System Policies to Customize Office</A>" earlier
in this chapter.
<P>
<A NAME="_Toc363957763">Sound files and video clips linked to
a presentation play sooner if they are stored in the same folder
as PowerPoint than if they are stored elsewhere. To make it easier
for PowerPoint to resolve palette colors, slides containing video
clips should have a minimum of colors, including those in special
effects such as two&#173;color shaded fills.</A>
<P>
<FONT SIZE=4><B><A NAME="CH007H209">Optimizing Microsoft Word</A></B></FONT>

<P>
<a name="dex65"></a>
<P>
The following issues affect overall Word performance. You can
control some of these issues during Setup, but other issues must
be addressed on each user's computer.
<P>
<UL TYPE="square">
<P>
<LI>Set your users' computers
to use the correct video driver for faster screen display.
<P>
Users may not need the highest resolution video driver
and the up to 16&nbsp;million colors their video drivers support.
Additional color support in a video driver can dramatically decrease
the speed of screen updates when your users scroll or update graphics.
<P>
<LI>Consider
setting your users' monitors to use only 16 or 256&nbsp;colors.
<P>
For writing reports and working with spreadsheets,
users may need only 16 to 256&nbsp;colors, so they can switch
to a video driver that supports a lower resolution and fewer colors.
They can always switch back if there is no improvement in performance
or if their work requires additional video capabilities.
<P>
</UL>
<P>
<a name="dex66"></a>
<P>
To speed up printing, try the following:
<P>
<UL TYPE="square">
<P>
<LI>If your users print large
documents that take several minutes to print, disable any screen
savers during the print job, or switch to a blank screen saver.
<P>
Animated screen savers use computer processor time
that you can allocate to a print job. For more information, see
your screen saver documentation.
<P>
<LI>If your users
do not need to continue working while Word is printing, turn off
the <B>Background Printing</B> option in Word (Windows only).
<P>
This option allocates processor time to Word during
a print job so users can continue working while Word is printing,
but this means less processor time is available for printing.
To turn off background printing, clear the <B>Background Printing</B>
check box on the <B>Print</B> tab in the <B>Options</B> dialog box<BR>
 (<B>Tools</B> menu).
<P>
</UL>
<P>
</MENU></MENU></MENU>
<HR>
<!--ToTop_START-->
<TABLE width=98% cellpadding=0 cellspacing=0 border=0>
<TR><TD align=right><TABLE cellpadding=0 cellspacing=0 border=0><TR><TD><A href="#top"><FONT SIZE=1 FACE="VERDANA,ARIAL,HELVETICA">Top</FONT></A></TD><TD><A href="#top"><IMG SRC="ar_up.gif" WIDTH=11 HEIGHT=7 BORDER=0 ALIGN=MIDDLE></A></TD></TR></TABLE>
</TD></TR>

</TABLE>


<!--ToTop_END-->

<!--EndNav_Start--><CENTER>
<A HREF="FULLTOC.htm">Contents</A>
| <a href="006.htm">&lt;&lt; Previous</A>
| <a href="008.htm">Next &gt;&gt;</A>
| <A HREF="A.HTM">Index</A>
</CENTER>
<P><FONT SIZE=3 FACE="COURIER NEW,COURIER"></FONT>
</FONT>
</BODY>
</HTML>
