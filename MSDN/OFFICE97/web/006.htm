<HTML><HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Chapter 6: Microsoft PowerPoint Objects</TITLE>

<META NAME="GENERATOR" CONTENT="Internet Assistant For Microsoft Word 2.0z Beta">
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR="#ffffff" TOPMARGIN=0 LEFTMARGIN=0>

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<!--TOOLBAR_START-->
<!--TOOLBAR_END-->
<!--Header/Footer Info_START-->

<TABLE WIDTH=98% BORDER=0 CELLPADDING=0>
<TR>
<TD WIDTH=30% ALIGN=LEFT><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT COLOR=#000000 FACE="VERDANA,ARIAL,HELVETICA" Size=1>
<B>C H A P T E R &nbsp;&nbsp; 6</B></FONT></FONT></TD>
<TD WIDTH=20% ALIGN=CENTER><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT COLOR=#000000 FACE="VERDANA,ARIAL,HELVETICA" Size=1>
<B></B></FONT></FONT></TD>
<TD WIDTH=50% ALIGN=RIGHT><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT COLOR=#000000 FACE="VERDANA,ARIAL,HELVETICA" SIZE=1>
<B>Microsoft Office 97/Visual Basic Programmer's Guide</B></FONT></FONT></TD></TR>
</TABLE>
<P>
<!--Header/Footer Info_END-->

<P><!--NAV_START-->
<TABLE WIDTH="98%" BGCOLOR="#ffffff" BORDER=0 CELLSPACING=0 CELLPADDING=3>
<TR><TD VALIGN="TOP" WIDTH=60%><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=5 FACE="Verdana, Arial, Helvetica"><B>Microsoft PowerPoint Objects</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2></FONT></TD>
</TR>
</TABLE><HR>
<!--NAV_END-->
<MENU><MENU><MENU>

<P>
<FONT SIZE=3 FACE="Verdana, Arial, Helvetica"><B>Contents</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<UL>
<LI><A HREF="#CH006H101">Working with the Application Object</A>
<BR>
<LI><A HREF="#CH006H102">Working with the Presentation Object</A>
<BR>
<LI><A HREF="#CH006H103">Working with the Slide, SlideRange, and Slides Objects</A>
<BR>
<LI><A HREF="#CH006H104">Working with the Selection Object</A>
<BR>
<LI><A HREF="#CH006H105">Working with the View and SlideShowView Objects</A>
<BR>
<LI><A HREF="#CH006H106">Controlling How Objects Behave During a Slide Show</A>
</UL>

<P>
<a name="dex1"></a>
<P>
This chapter discusses how to work with each of the primary objects
in the Microsoft PowerPoint&nbsp;97 object model: how to return
it, what tasks you can use it to automate, and what lower&#173;level
objects you can access from it. 
<P>
For general information about understanding and navigating Office
object models, see Chapter&nbsp;2, "<a href="002.htm">Understanding Object Models</A>." To view a graphical representation of the entire
PowerPoint&nbsp;97 object model, see "Microsoft PowerPoint
Objects" in Help. For a detailed description of a specific
object, click the name of that object on the diagram.
<BR>

<P>
<TABLE WIDTH=80% CELLPADDING=15 BORDER=1 CELLSPACING=0 BORDERCOLOR=#0000FF><TR BGCOLOR=#FFFFFF><TD>

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<P>
<B><A NAME="HowIDisp">How Do I Display Visual Basic Help for PowerPoint?</A></B>
<P>
To use Visual Basic Help for PowerPoint, you must click <B>Custom</B>
during Setup and select the <B>Online Help for Visual Basic</B>
check box for PowerPoint. Otherwise, Visual Basic Help won't be
installed. If you've already installed PowerPoint, you can run
Setup again to install Visual Basic Help.
<P>
To see the contents and index of Visual Basic Help for PowerPoint,
click <B>Contents and Index</B> on the <B>Help</B> menu in the
Visual Basic Editor. On the <B>Contents</B> tab in the <B>Help
Topics</B> dialog box, double-click "Microsoft PowerPoint
Visual Basic Reference," and then double-click "Shortcut
to Microsoft PowerPoint Visual Basic Reference." The <B>Help
Topics</B> dialog box should reappear, displaying the contents
and index for Visual Basic Help for PowerPoint.
<P>
</FONT></FONT></TD></TR>
</TABLE>

<P>
<A NAME="PG006C1"></A>
</MENU></MENU></MENU>
<MENU>


<FONT SIZE=5 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H101">Working with the Application Object</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
<MENU><MENU>


<P>
<a name="dex2"></a>
<P>
When you start a PowerPoint session, you create an <B>Application</B>
object. You use properties and methods of the <B>Application</B>
object to control application&#173;wide attributes and behaviors,
to control the appearance of the application window, and to get
to the rest of the PowerPoint object model.
<P>
<FONT COLOR="#0000FF"><B>Note</B></FONT>&nbsp;&nbsp;&nbsp;The
following properties of the <B>Application</B> object can be used without
the <FONT SIZE=2 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica">Application</FONT> object qualifier: <B>ActivePresentation</B>, <B>ActiveWindow</B>,
<B>AddIns</B>, <B>Assistant</B>, <B>CommandBars</B>, <B>Presentations</B>, <B>SlideShowWindows</B>,
and <B>Windows</B>. All other properties and methods must have the object
qualifier. For example, both of the following lines of code are
valid.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Application.ActivePresentation.PrintOut
ActivePresentation.PrintOut

</code></pre></FONT>

<P>
However, you cannot omit the object qualifier from the following
line.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Application.Quit

</code></pre></FONT>

<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H201">Returning the Application Object</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>


<P>
<a name="dex3"></a>
<P>
From code running in PowerPoint, you can use the <B>Application</B>
keyword alone to return the PowerPoint <B>Application</B> object.
The following example sets the left position for the application
window.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Application.Left = 30

</code></pre></FONT>
<P>
If you set an object variable to the <B>Application</B> object,
declare it as <FONT SIZE=2 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica">PowerPoint.Application</FONT>.
The following example sets an object variable to the PowerPoint
<B>Application</B> object.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Dim appPPT As PowerPoint.Application
Set appPPT = Application

</code></pre></FONT>

<P>
You can also use the <B>Application</B> property of any PowerPoint
object to return the PowerPoint <B>Application</B> object. This
is useful for returning the PowerPoint <B>Application</B> object
from a PowerPoint presentation embedded in a document created
in another application. The following example, when run from Microsoft
Excel, sets an object variable to the PowerPoint <B>Application</B>
object. Shape one on worksheet one must be an embedded PowerPoint
presentation.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Dim appPPT As PowerPoint.Application
Set embeddedPres = Worksheets(1).Shapes(1)
embeddedPres.OLEFormat.Activate
Set appPPT = embeddedPres.OLEFormat.Object.Object.Application

</code></pre></FONT>

<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H202">Controlling the Appearance of the Application
Window</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>


<P>
<a name="dex4"></a>
<P>
You can use properties and methods of the <B>Application</B> object
to control the appearance of the application window. The following
table shows which properties and methods control which aspects
of the application window's appearance. 
<P>
<TABLE WIDTH=85% BORDER=1 BORDERCOLOR="#C0C0C0" CELLPADDING=4 CELLSPACING=0>


<TR><TD WIDTH=41% VALIGN="BOTTOM" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">To do this</FONT></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2></TD><TD WIDTH=59% VALIGN="BOTTOM" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Use this property or method</FONT></B>
</FONT></TD></TR>

<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Activate the PowerPoint application window</FONT>
</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>Activate </B>method</FONT>
</FONT></TD></TR>

<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Check to see whether the PowerPoint application window is active</FONT>
</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>Active </B>property</FONT>
</FONT></TD></TR>

<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Set or return text that appears in the title bar of the PowerPoint application window</FONT>
</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>Caption </B>property</FONT>
</FONT></TD></TR>

<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Set or return the size and position of the PowerPoint application window on the screen</FONT>
</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>Height</B>, <B>Left</B>, <B>Top</B>, and <B>Width </B>properties</FONT>
</FONT></TD></TR>

<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Set or return a value that controls whether the application window is visible. You must set this property to <B>True </B>when you create a PowerPoint <B>Application </B>object in another application if you want to be able to see PowerPoint on your screen.</FONT>
</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>Visible </B>property</FONT>
</FONT></TD></TR>

<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Set or return a value that controls whether the PowerPoint application window is maximized, minimized, or floating.</FONT>
</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>WindowState </B>property</FONT>
</FONT></TD></TR><P>
</TABLE>
<P>
Note that most of these properties and methods can also be applied
to the <B>DocumentWindow</B> object to control the appearance
of the document window. 
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H203">Controlling Application&#173;Wide Attributes
and Behavior</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>


<P>
<a name="dex5"></a>
<P>
You can use other properties and methods of the <B>Application</B>
object to control application&#173;wide settings or behaviors,
as shown in the following table. 
<P>
<TABLE WIDTH=85% VALIGN="TOP" BORDER=1 BORDERCOLOR="#C0C0C0" CELLPADDING=4 CELLSPACING=0>


<TR><TD WIDTH=41% VALIGN="BOTTOM" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">To do this</FONT></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2></TD><TD WIDTH=59% VALIGN="BOTTOM" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Use this property or method</FONT></B>
</FONT></TD></TR>

<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Return the name of the active printer</FONT>
</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>ActivePrinter </B>property</FONT>
</FONT></TD></TR>

<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Return the PowerPoint build number</FONT>
</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>Build </B>property</FONT>
</FONT></TD></TR>

<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Display a Help topic</FONT></FONT></TD>
<TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>Help </B>method</FONT>
</FONT></TD></TR>

<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Return the name of the operating system</FONT>
</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>OperatingSystem </B>property</FONT>
</FONT></TD></TR>

<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Return the path to the PowerPoint application.</FONT>
</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>Path </B>property</FONT>
</FONT></TD></TR>

<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Quit PowerPoint</FONT></FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>Quit </B>method</FONT>
</FONT></TD></TR>

<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Run a Visual Basic procedure</FONT>
</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>Run </B>method</FONT>
</FONT></TD></TR>

<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Return the PowerPoint version number</FONT>
</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>Version </B>property</FONT>
</FONT></TD></TR><P>
</TABLE>
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H204">Getting to Presentations, Document Windows,
and Slide Show Windows</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>


<P>
<a name="dex6"></a>
<P>
The properties of the <B>Application</B> object that you'll probably
use most provide access to objects that represent presentations,
document windows, slide show windows, and add&#173;ins. Use the
<B>Presentations</B> property of the <B>Application</B> object
to return any open presentation, or use the <B>ActivePresentation</B>
property to return the active presentation. Use the <B>AddIns</B>
property to return any available add&#173;in (an add&#173;in is
a special type of presentation you use to assemble and distribute
custom features). Use the <B>Windows</B> property of the <B>Application</B>
object to return any open document window, or use the <B>ActiveWindow</B>
property to return the active document window. Use the <B>SlideShowWindows</B>
property to return an open slide show window. 
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H205">Getting to Shared Office Object Models</A>
</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>


<P>
<a name="dex7"></a>
<P>
Other properties of the <B>Application</B> object provide access
to objects that represent shared Office features, such as menus
and toolbars, file searching, the Visual Basic Editor, and the
Office Assistant. For more information about these properties,
see "Application Object" in Help.
<P>
You can use other properties of the <B>Application</B> object
to control application&#173;wide settings and behavior, as shown
in the following table. 
<P>
<TABLE WIDTH=85% VALIGN="TOP" BORDER=1 BORDERCOLOR="#C0C0C0" CELLPADDING=4 CELLSPACING=0>


<TR><TD WIDTH=41% VALIGN="BOTTOM" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">To return a reference to</FONT></B>
</FONT></TD><TD WIDTH=59% VALIGN="BOTTOM" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Use this property</FONT></B>
</FONT></TD></TR>

<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Office Assistant</FONT></FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>Assistant </B>property</FONT>
</FONT></TD></TR>

<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">PowerPoint menus and toolbars</FONT>
</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>CommandBars </B>property</FONT>
</FONT></TD></TR>

<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">File search</FONT></FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>FileSearch </B>property (<B>FileFind </B>property on the MacIntosh)</FONT>
</FONT></TD></TR>

<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Visual Basic Editor</FONT></FONT></TD>
<TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>VBE </B>property</FONT>
</FONT></TD></TR><P>
</TABLE>
<P>
<A NAME="PG006C2"></A>

</MENU></MENU></MENU>
<MENU>


<FONT SIZE=5 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H102">Working with the Presentation Object</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
<MENU><MENU>


<P>
<a name="dex8"></a>
<P>
When you open or create a file in PowerPoint, you create a <B>Presentation</B>
object. (You may notice that many properties and methods of the
<B>Presentation</B> object correspond to items on the <B>File</B>
menu.) You use properties and methods of the <B>Presentation</B>
object or its collection to open, create, save, and close files;
to control presentation&#173;wide attributes and behavior; and
to get to slides and masters in the presentation.
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H206">Returning the Presentation Object</A>
</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>


<P>
<a name="dex9"></a>
<P>
Use the <B>ActivePresentation</B> property to return the presentation
that's displayed in the active window. The following example saves
the active presentation.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>ActivePresentation.Save

</code></pre></FONT>
<P>
You can return any open presentation by using the syntax <B>Presentations</B>(<I>index</I>),
where <I>index</I> is the presentation's name or index
number. The following example adds a slide to the beginning of
Sample Presentation.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Presentations("Sample Presentation").Slides.Add 1, 1

</code></pre></FONT>
<P>
Use the <B>Presentation</B> property to return the presentation
that's currently displayed in the specified document window or
slide show window. The following example displays the name of
the slide show that's running in slide show window one.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>MsgBox SlideShowWindows(1).Presentation.Name

</code></pre></FONT>
<P>
To return a <B>Presentation</B> object that represents an embedded
presentation, use the <B>Object</B> property of the <B>OLEFormat</B>
object for the shape that contains the embedded presentation.
The following example sets an object variable to the embedded
presentation in shape three on slide one in the active presentation.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Dim embeddedPres As Presentation
Set embeddedPres = ActivePresentation.Slides(1).Shapes(3).OLEFormat.Object

</code></pre></FONT>

<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H207">Opening an Existing Presentation</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>


<P>
<a name="dex10"></a>
<P>
To open an existing presentation, use the <B>Open</B> method.
This method always applies to the <B>Presentations</B> collection,
which you return by using the <B>Presentations</B> property. The
following example opens the file Pres1.ppt and then displays the
presentation in slide sorter view.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Dim myPres As Presentation
Set myPres = Presentations.Open(FileName:="c:\My documents\pres1.ppt")
myPres.Windows(1).ViewType = ppViewSlideSorter

</code></pre></FONT>

<P>
Notice that the return value of the <B>Open</B> method is a <B>Presentation</B>
object that refers to the presentation that was just opened.
<P>
<B><FONT SIZE=2 COLOR=#0000FF FACE="Verdana, Arial, Helvetica">Tip</FONT></B>&nbsp;&nbsp;&nbsp;The
file name in this example contains a path. If you don't include
a path, the file is assumed to be in the current folder. Not including
the path in the file name may cause a run&#173;time error, because
as soon as the user makes a different folder the current folder,
Visual Basic can no longer find the file.
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H208">Creating a New Presentation</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>


<P>
<a name="dex11"></a>
<P>
To create a new presentation, apply the <B>Add</B> method to the
<B>Presentations</B> collection. The following example creates
a new presentation. 

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Presentations.Add

</code></pre></FONT>
<P>
The <B>Add</B> method returns the presentation that's just been
created. When you add a presentation, you can set an object variable
to the returned presentation so that you can refer to the new
presentation in your code. The following example creates a new
presentation and adds a slide to it.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Dim myPres As Presentation
Set myPres = Presentations.Add
myPres.Slides.Add 1, ppLayoutTitle

</code></pre></FONT>

<P>
<A NAME="CVpresdoc063004">Another way to make it easy to refer
to the presentation later in your code is to assign a meaningful
name to the presentation as you add it. Use the <B>SaveAs</B>
method to assign a name to a presentation. (The <B>Name</B> property
of the <B>Presentation</B> object is read&#173;only, so you cannot
use it to set the presentation's name.) The following example
creates a new presentation and immediately saves it under the
name "Sales Report.ppt." The new name is then used to
index the presentation within the <B>Presentations</B> collection
and add a slide to it.</A>

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Presentations.Add.SaveAs "Sales Report"
Presentations("Sales Report").Slides.Add 1, ppLayoutTitle

</code></pre></FONT>

<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H209">Importing a Presentation from a Word Outline</A>
</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>


<P>
<a name="dex12"></a>
<P>
To create a presentation from a Word outline, use the <B>PresentIt</B>
method of the Word <B>Document</B> object. The following example,
run from Word, exports Presentation Outline.doc as a presentation.


<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Document.Open("C:\Presentation Outline.doc")PresentIt

</code></pre></FONT>
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H210">Activating a Presentation</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>


<P>
<a name="dex13"></a>
<P>
There's no <B>Activate</B> method for the <B>Presentation</B>
object. To activate a PowerPoint presentation, activate one of
the document windows in which the presentation appears. The following
example activates the first document window in which the Sales
Report presentation appears.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Presentations("Sales Report").Windows(1).Activate

</code></pre></FONT>
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H211">Controlling Slide Numbering, Size, and
Orientation in a Presentation</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>


<P>
<a name="dex14"></a>
<P>
Use the <B>PageSetup</B> property of the <B>Presentation</B> object
to return the <B>PageSetup</B> object. This object contains settings
for slide and notes page orientation, slide size and orientation,
and slide numbering. The following example sets all slides in
the active presentation to be 11 inches wide and 8.5 inches high
and sets the slide numbering for the presentation to start at
17.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>With ActivePresentation.PageSetup
&nbsp;&nbsp;&nbsp; .SlideWidth = 11 * 72
&nbsp;&nbsp;&nbsp; .SlideHeight = 8.5 * 72
&nbsp;&nbsp;&nbsp; .FirstSlideNumber = 17
End With

</code></pre></FONT>

<P>
Note that the values you specify for some of the properties of
the <B>PageSetup</B> object can automatically set values for other
properties in a common&#173;sense way that mimics behavior in
the <B>Page Setup</B> dialog box (<B>File</B> menu) in the user
interface. For example, setting the <B>SlideOrientation</B> property
will switch the values of the <B>SlideHeight</B> and <B>SlideWidth</B>
properties, if appropriate. By the same token, explicitly setting
the <B>SlideWidth</B> and <B>SlideHeight</B> properties automatically
sets <B>SlideSize</B> to <B>ppSlideSizeCustom</B> and sets the
<B>SlideOrientation</B> property to the appropriate value (based
on whichever is greater&nbsp;&#151; slide width or height).
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H212">Getting a Consistent Look Throughout a
Presentation</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>


<P>
<a name="dex15"></a>
<P>
You can use templates and masters to ensure a consistent look
throughout your presentation. Use the <B>ApplyTemplate</B> method
of the <B>Presentation</B> object to apply a design template to
the presentation.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>ActivePresentation.ApplyTemplate "c:\templates\presentation designs\meadow.pot"

</code></pre></FONT>
<P>
<FONT COLOR="#0000FF"><B>Note</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>&nbsp;&nbsp;&nbsp;The
available color schemes change when you apply a template. If you've
added a standard color scheme to the presentation, it will be
lost when the ApplyTemplate method is applied.
<P>
Use the <B>HandoutMaster</B>, <B>NotesMaster</B>, <B>SlideMaster</B>,
or <B>TitleMaster</B><FONT COLOR=#000000 FACE="Arial"> </FONT>property
of the <B>Presentation</B> object to return a <B>Master</B> object
that represents a slide, notes, or handout master. You can apply
a background fill or color scheme to a master, add background
graphics or ActiveX controls to a master, or format the text styles
and layout of a master when you want to apply changes to all slides
based on that master rather than applying them to one slide at
a time. The following example sets the background fill for the
slide master for the active presentation. 

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>ActivePresentation.SlideMaster.Background.Fill.PresetGradient _
&nbsp;&nbsp;&nbsp; msoGradientHorizontal, 1, msoGradientBrass

</code></pre></FONT>

<P>
<a name="dex16"></a>
<P>
If you want a specific shape, such as a picture or an ActiveX
control, to show up on all slides in a presentation, add it to
the master. An ActiveX control on the master will respond to events
during a slide show whenever you click the control, on any slide
where it appears.
<P>
To make uniform changes to the text formatting in a presentation,
use the <B>TextStyles</B> property of the <B>Master</B> object
to return the <B>TextStyles</B> collection., This collection contains
three <B>TextStyle</B> objects that represent the following: the
style for title text, the style for body text, and the style for
default text (text in AutoShapes). Each <B>TextStyle</B> object
contains a <B>TextFrame</B> object that describes how text is
placed within the text&#173;bounding box and a <B>Ruler</B> object
that contains tab stops and outline&#173;indent formatting information.
Use the <B>Levels</B> property of the <B>TextStyle</B> object
to return the <B>TextStyleLevels</B> collection. This collection
contains outline text formatting information for the five available
outline levels (for title text and default text, always use level
one). The following example sets the font name, the font size,
and the space after paragraphs for level&#173;one body text on
all the slides in the active presentation that are based on the
master.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>With ActivePresentation.SlideMaster.TextStyles(ppBodyStyle).Levels(1)
&nbsp;&nbsp;&nbsp; With .Font
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Name = "Arial"
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.Size = 36
&nbsp;&nbsp;&nbsp;&nbsp;End With
&nbsp;&nbsp;&nbsp; With .ParagraphFormat
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.LineRuleAfter = False
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.SpaceAfter = 6
&nbsp;&nbsp;&nbsp; End With
End With

</code></pre></FONT>


<P>
<FONT COLOR="#0000FF"><B>Note</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>&nbsp;&nbsp;&nbsp;You
can set the title and body text styles to different values for
each master. The default text style doesn't apply to each individual
master but rather to the entire presentation.
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H213">Printing a Presentation</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>


<P>
<a name="dex17"></a>
<P>
Use the <B>PrintOut</B> method of the <B>Presentation</B> object
to print a presentation, as shown in the following example. 

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>ActivePresentation.PrintOut

</code></pre></FONT>
<P>
To set print options before printing, use the properties and methods
of the <B>PrintOptions</B> object. Use the <B>PrintOptions</B>
property of the <B>Presentation</B> object to return the <B>PrintOptions</B>
object. The following example prints three collated copies of
the active presentation.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>With ActivePresentation.PrintOptions
&nbsp;&nbsp;&nbsp; .NumberOfCopies = 3
&nbsp;&nbsp;&nbsp; .Collate = True
&nbsp;&nbsp;&nbsp; .Parent.PrintOut
End With

</code></pre></FONT>


<P>
Note that the <B>Parent</B> property of the <B>PrintOption</B>
object used in the preceding example returns the <B>Presentation</B>
object.
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H214">Saving a Presentation</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>


<P>
<a name="dex18"></a>
<P>
When you save a new presentation for the first time, or when you
want to save an existing presentation under a new name, use the
<B>SaveAs</B> method. The following example creates a new presentation,
adds a slide to it, and saves it under the name "Sample."

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>With Presentations.Add
&nbsp;&nbsp;&nbsp; .Slides.Add 1, ppLayoutTitle
&nbsp;&nbsp;&nbsp; .SaveAs "Sample"
End With

</code></pre></FONT>

<P>
For subsequent saves, use the <B>Save</B> method. The following
example saves the active presentation.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>ActivePresentation.Save

</code></pre></FONT>
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H215">Closing a Presentation</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>


<P>
<a name="dex19"></a>
<P>
To close a presentation, use the <B>Close</B> method of the <B>Presentation</B>
object. If there are changes in any presentation, PowerPoint displays
a message asking whether you want to save changes. The following
example closes Pres1.ppt.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Presentations("pres1.ppt").Close

</code></pre></FONT>
<P>
<A NAME="CVdocwindoc008010">If you want to close a presentation
without saving changes, set the <B>Saved</B> property to <B>True</B>
before closing the presentation, as shown in the following example.</A>

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>With Application.Presentations("pres1.ppt")
&nbsp;&nbsp;&nbsp; .Saved = True
&nbsp;&nbsp;&nbsp; .Close
End With

</code></pre></FONT>


<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H216">Setting Up and Running a Slide Show</A>
</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex20"></a>
<P>
Use the <B>SlideShowSettings</B> property of the <B>Presentation</B>
object to return the <B>SlideShowSettings</B> object, which lets
you set up and run the slide show for the presentation. The following
example sets the slide show in the active presentation to start
on slide two and end on slide four, to advance slides by using
the timings set in the first section, and to run in a continuous
loop until you press <FONT SIZE=2 FACE="Verdana, Arial, Helvetica">ESC</FONT>. Finally, the example
runs the slide show.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>With ActivePresentation.SlideShowSettings
&nbsp;&nbsp;&nbsp; .StartingSlide = 2
&nbsp;&nbsp;&nbsp; .EndingSlide = 4
&nbsp;&nbsp;&nbsp; .RangeType = ppShowSlideRange
&nbsp;&nbsp;&nbsp; .AdvanceMode = ppSlideShowUseSlideTimings
&nbsp;&nbsp;&nbsp; .LoopUntilStopped = True
&nbsp;&nbsp;&nbsp; .Run
End With

</code></pre></FONT>

<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H217">Getting to the Slides in a Presentation</A>
</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>


<P>
Use the <B>Slides</B> property of the <B>Presentation</B> object
to get to the individual slides in a presentation and, from there,
to the graphics and text on the slides. The following section
discusses in detail how to work with slides.
<P>
<A NAME="PG006C3"></A>
</MENU></MENU></MENU>
<MENU>


<FONT SIZE=5 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H103">Working with the Slide, SlideRange, and Slides Objects</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
<MENU><MENU>


<P>
<a name="dex21"></a>
<P>
There are three different objects in the PowerPoint object model
that represent slides: the <B>Slides</B> collection, which represents
all the slides in a presentation; the <B>SlideRange</B> collection,
which represents a subset of the slides in a presentation; and
the <B>Slide</B> object, which represents an individual slide.
In general, you use the <B>Slides</B> collection to create slides
and when you want to iterate through all the slides in a presentation;
you use the <B>Slide</B> object when you want to format or work
with a single slide; and you use the <B>SlideRange</B> collection
when you want to format or work with multiple slides the same
way you work with multiple slides in the user interface.
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H218">Returning the Slides Collection</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>


<P>
<a name="dex22"></a>
<P>
To return the entire collection of slides in a presentation, use
the <B>Slides</B> property. The following example inserts slides
from the Clipboard at the end of the active presentation. 

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>ActivePresentation.Slides.Paste

</code></pre></FONT>
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H219">Returning the Slide Object</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>


<P>
<a name="dex23"></a>
<P>
Use the <B>Item</B> method of the <B>Slides</B> collection to
return a single <B>Slide</B> object that you specify by name or
index number (because the <B>Item</B> method is the default method,
you can omit it from your code). The following example copies
the third slide in the active presentation to the Clipboard.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>ActivePresentation.Slides(3).Copy

</code></pre></FONT>
<P>
Because the index number of a particular slide can change when
you add, delete, or reorder slides, you may find it more reliable
to use the <B>FindBySlideID</B> property to specify a slide by
its slide ID number, a unique identifier that's assigned to a
slide when it's added to a presentation and that doesn't change
if you change the order of the slides (if you copy the slide into
another presentation, it's assigned a new ID number). The following
example copies the slide with the ID number 256 to the Clipboard.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>ActivePresentation.Slides.FindBySlideID(256).Copy

</code></pre></FONT>

<P>
Use the <B>SlideID</B> property of the <B>Slide</B> object to
get the slide's ID number. The following example adds a slide
to the active presentation and sets a variable to the slide ID
number for the new slide.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Dim newSlideID As Long
newSlideID = ActivePresentation.Slides.Add(1, ppLayoutTitleOnly).SlideID

</code></pre></FONT>

<P>
To return the slide that's currently displayed in the specified
document window or slide show window view, use the <B>Slide</B>
property of the <B>View</B> object for the window. The following
example copies the slide that's currently displayed in window
two to the Clipboard. 

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Windows(2).View.Slide.Copy

</code></pre></FONT>
<P>
To return a slide within the selection, use <B>Selection.SlideRange</B>(<I>index</I>),
where <I>index</I> is the slide's name or index number.
The following example sets the layout for slide one in the selection
in the active window, assuming that the selection contains at
least one slide. 

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>ActiveWindow.Selection.SlideRange(1).Layout = ppLayoutTitle

</code></pre></FONT>
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H220">Returning the SlideRange Object</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>


<P>
<a name="dex24"></a>
<P>
Use <B>Slides.Range</B>(<I>index</I>), where <I>index</I>
is either the slide's name or index number or an array of slide
index names or slide index numbers, to return a <B>SlideRange</B>
object from the <B>Slides</B> collection. The following example
sets the background fill for slides one and three in the active
presentation.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>With ActivePresentation.Slides.Range(Array(1, 3))
&nbsp;&nbsp;&nbsp; .FollowMasterBackground = False
&nbsp;&nbsp;&nbsp; .Background.Fill.PresetGradient msoGradientHorizontal, 1, msoGradientLateSunset
End With

</code></pre></FONT>

<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H221">Adding a Slide</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>


<P>
<a name="dex25"></a>
<P>
Use the <B>Add</B> method of the <B>Slides</B> collection to create
a new slide and add it to the presentation. The following example
adds a title slide to the beginning of the active presentation.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>ActivePresentation.Slides.Add 1, ppLayoutTitleOnly

</code></pre></FONT>
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H222">Inserting Slides from a Word Outline</A>
</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>


<P>
<a name="dex26"></a>
<P>
To insert slides based on a Word outline, use the <B>InsertFromFile</B>
method. The following example inserts the outline in Presentation
Outline.doc as slides after slide three in the active presentation.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>ActivePresentation.Slides.InsertFromFile FileName:="C:\Presentation Outline.doc", Index:=3

</code></pre></FONT>
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H223">Setting the Slide Background and Color
Scheme</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>


<P>
<a name="dex27"></a>
<P>
If you want to set the background fill or color scheme for all
the slides in a presentation, use the <B>Background</B> or <B>ColorScheme</B>
property of the <B>Master</B> object, as discussed in the section
"<A HREF="#CH006H212">Getting a Consistent Look Throughout a Presentation</A>"
earlier in this chapter. If, however, you want to set the background
fill or color scheme for a particular slide or set of slides,
use the <B>Background</B> or <B>ColorScheme</B> property of the
<B>Slide</B> or <B>SlideRange</B> object. 
<P>
To set the background fill for a slide or a set of slides, use
the <B>Background</B> property of the <B>Slide</B> or <B>SlideRange</B>
object to return the <B>SlideRange</B> object that represents
the slide background, and use the <B>Fill</B> property to return
the <B>FillFormat</B> object that represents the background fill.
You can then use the properties and methods of the <B>FillFormat</B>
object to set properties for the fill. The following example sets
a gradient fill for the background for slide one in the active
presentation.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>With ActivePresentation.Slides(1)
&nbsp;&nbsp;&nbsp; .FollowMasterBackground = False
&nbsp;&nbsp;&nbsp; .Background.Fill.PresetGradient msoGradientHorizontal, 1, msoGradientDaybreak
End With

</code></pre></FONT>


<P>
<FONT COLOR="#0000FF"><B>Note</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>&nbsp;&nbsp;&nbsp;To
set the background for a slide independently of the slide master
background, set the FollowMasterBackground property for the slide
to False.
<P>
To set the color scheme for a slide or a set of slides, use the
<B>ColorScheme</B> property of the <B>Slide</B> or <B>SlideRange</B>
object to return the <B>ColorScheme</B> object that represents
the color scheme. You can then set the <B>ColorScheme</B> object
for the slide to another <B>ColorScheme</B> object, or you can
use the <B>Colors</B> method to edit individual colors in the
scheme. The following example sets the color scheme for slide
one in the active presentation to the third standard color scheme
(as counted from left to right and from top to bottom on the <B>Standard</B>
tab in the <B>Color Scheme</B> dialog box). 

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>With ActivePresentation
&nbsp;&nbsp;&nbsp; .Slides(1).ColorScheme = .ColorSchemes(3)
End With

</code></pre></FONT>

<P>
The following example uses the <B>Colors</B> method to access
the title color in the color scheme for the active presentation
and then uses the <B>RGB</B> property to access the red&#173;green&#173;blue
(RGB) value for that color and set it to the RGB value for green
that the <B>RGB</B> function generates. 

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>ActivePresentation.Slides(1).ColorScheme.Colors(ppTitle).RGB = RGB(0, 255, 0)

</code></pre></FONT>
<P>
<FONT COLOR="#0000FF"><B>Note</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>&nbsp;&nbsp;&nbsp;The
set of available color schemes changes when you apply a template.
If you've added a standard color scheme to a presentation, this
color scheme will be lost when the ApplyTemplate method is applied.
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H224">Choosing the Slide Layout</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>


<P>
<a name="dex28"></a>
<P>
When you add a slide to a presentation, you specify what layout
it should have by using the <I>Layout</I> argument
of the <B>Add</B> method. The following example adds a slide that
contains only a title placeholder to the beginning of the active
presentation. 

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>ActivePresentation.Slides.Add 1, ppLayoutTitleOnly

</code></pre></FONT>
<P>
You can check or change the layout of an existing slide by using
the <B>Layout</B> property. The following example changes the
layout of slide one in the active presentation to include a title
placeholder, a text placeholder, and a chart placeholder.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>ActivePresentation.Slides(1).Layout = ppLayoutTextAndChart

</code></pre></FONT>
<P>
<FONT COLOR="#0000FF"><B>Note</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>&nbsp;&nbsp;&nbsp;When
you switch slide layouts, any placeholders that contain text or
an object remain on the slide, although they may have been repositioned
at the time of the switch.
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H225">Adding Objects to a Slide</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>


<P>
<a name="dex29"></a>
<P>
You add objects (such as AutoShapes, OLE objects, and pictures)
to a slide by using one of the methods of the <B>Shapes</B> collection.
You return the <B>Shapes</B> collection, which represents the
entire drawing layer for a slide, using the <B>Shapes</B> property
of the <B>Slide</B> object. For information about how to create
and format objects on slides, see Chapter 10, "<a href="010.htm">Shapes and the Drawing Layer</A>." For information about controlling how
an object on a slide behaves during a slide show, see "<A HREF="#CH006H106">Controlling How Objects Behave During a Slide Show</A>" later in this chapter.
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H226">Changing Slide Order</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>


<P>
<a name="dex30"></a>
<P>
To change a slide's position in the presentation, cut the slide
and then paste it in its new position. The following example moves
slide four in the active presentation and makes it slide six.
For this example to work, there must be at least six slides in
the presentation. 

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>With ActivePresentation.Slides
&nbsp;&nbsp;&nbsp; .Item(4).Cut
&nbsp;&nbsp;&nbsp; .Paste 6
End With

</code></pre></FONT>

<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H227">Setting Slide Transition Effects</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>


<P>
<a name="dex31"></a>
<P>
The properties that control the transition effects for a slide
are stored in the <B>SlideShowTransition</B> object, which you
return by using the <B>SlideShowTransition</B> property of the
<B>Slide</B> or <B>SlideRange</B> object. The following example
specifies a Fast Strips Down&#173;Left transition accompanied
by the Bass.wav sound for slide one in the active presentation.
The example also specifies that the slide advance automatically
five seconds after the previous animation or slide transition.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>With ActivePresentation.Slides(1).SlideShowTransition
&nbsp;&nbsp;&nbsp; .Speed = ppTransitionSpeedFast
&nbsp;&nbsp;&nbsp; .EntryEffect = ppEffectStripsDownLeft
&nbsp;&nbsp;&nbsp; .SoundEffect.ImportFromFile "c:\sndsys\bass.wav"
&nbsp;&nbsp;&nbsp; .AdvanceOnTime = True
&nbsp;&nbsp;&nbsp; .AdvanceTime = 5
End With
ActivePresentation.SlideShowSettings.AdvanceMode = _
&nbsp;&nbsp;&nbsp; ppSlideShowUseSlideTimings

</code></pre></FONT>

<P>
<FONT COLOR="#0000FF"><B>Note</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>&nbsp;&nbsp;&nbsp;For
the timings you set for your slide transition to take effect,
the AdvanceMode property of the SlideShowSettings object must
be set to ppSlideShowUseSlideTimings.
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H228">Getting to the Speaker's Notes on the
Notes Page for a Slide</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>


<P>
<a name="dex32"></a>
<P>
To gain access to the text in the notes area on the notes page
for a slide, use the <B>NotesPage</B> property to return a <B>SlideRange</B>
collection that represents the specified notes page. The following
example inserts text into placeholder two (the notes area) on
the notes page for slide one in the active presentation. (If you've
removed the slide image from the notes page, use <FONT SIZE=2 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica">Placeholders(1)</FONT>
to return the notes area.)

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>ActivePresentation.Slides(1).NotesPage.Shapes.Placeholders(2) _
&nbsp;&nbsp;&nbsp; .TextFrame.TextRange.InsertAfter "Added Text"

</code></pre></FONT>

<P>
<A NAME="PG006C4"></A>

</MENU></MENU></MENU>
<MENU>


<FONT SIZE=5 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H104">Working with the Selection Object</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
<MENU><MENU>


<P>
<a name="dex33"></a>
<P>
The <B>Selection</B> object in PowerPoint represents the selection
in a document window. You use methods of the <B>Selection</B>
object to cut, copy, delete, or unselect the selection. You use
the <B>Type</B> property of the <B>Selection</B> object to figure
out what type of content is selected (slides, shapes, text, or
nothing at all), and you use the <B>ShapeRange</B>, <B>SlideRange</B>,
and <B>TextRange</B> properties to return only a certain type
of selected object. 
<P>
<FONT COLOR="#0000FF"><B>Note</B></FONT>&nbsp;&nbsp;&nbsp;Selection&#173;based
code is inefficient and is usually unnecessary. For example, you
can change the font properties of a text range directly without
having to select the text. If you rely on the macro recorder to
supply code for you, you should rewrite the code it generates
to be selection&#173;independent wherever possible.
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H229">Making a Selection</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>


<P>
You can create a selection either manually or by applying the
<B>Select</B> method to the <B>Shape</B>, <B>ShapeRange</B>, <B>Slide</B>,
<B>SlideRange</B>, or <B>TextRange</B> object. The following example
selects shapes one and three on slide one in the active presentation.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>ActivePresentation.Slides(1).Shapes.Range(Array(1, 3)).Select

</code></pre></FONT>
<P>
<FONT COLOR="#0000FF"><B>Note</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>&nbsp;&nbsp;&nbsp;You
can make a given selection programmatically only if you can make
that same selection manually in the active document window. For
example, if slide two is showing in the active document window,
you cannot select shapes on slide one. Similarly, you cannot make
a selection that's inappropriate to the current view in the active
document window. For example, if the active document window is
in slide sorter view, you cannot select a shape or text range
on an individual slide.
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H230">Returning the Selection Object</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>


<P>
<a name="dex34"></a>
<P>
Use the <B>Selection</B> property of the <B>DocumentWindow</B>
object to return the selection. The following example cuts the
selection in the active window.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>ActiveWindow.Selection.Cut

</code></pre></FONT>
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H231">Returning Shapes, Text, or Slides in a
Selection</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>


<P>
<a name="dex35"></a>
<P>
Use the <B>ShapeRange</B> property of the <B>Selection</B> object
to return the <B>ShapeRange</B> collection that includes all the
shapes in the selection. Use the <B>Item</B> method of the returned
<B>ShapeRange</B> object to return a single selected shape. The
following example cuts the third shape in the selection in the
active window.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>ActiveWindow.Selection.ShapeRange(3).Cut

</code></pre></FONT>
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H232">Returning Selected Text</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>


<P>
<a name="dex36"></a>
<P>
If only text is selected, use the <B>TextRange</B> property of
the <B>Selection</B> object to return a <B>TextRange</B> object
that represents the selected text. The following example applies
bold formatting to the first three characters in the selected
text in the active window.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>ActiveWindow.Selection.TextRange.Characters(1, 3).Font.Bold = True

</code></pre></FONT>
<P>
To get to the text in a selected shape, do the following: return
the shape, use the <B>TextFrame</B> property to return the text
area in the shape, and then use the <B>TextRange</B> property
of the text frame to return the text in the shape. The following
example applies bold formatting to the first three characters
in the third shape in the selection in the active window

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>ActiveWindow.Selection.ShapeRange(3).TextFrame.TextRange _
&nbsp;&nbsp;&nbsp; .Characters(1, 3).Font.Bold = True

</code></pre></FONT>

<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H233">Returning Selected Slides</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>


<P>
Use the <B>SlideRange</B> property of the <B>Selection</B> object
to return a <B>SlideRange</B> collection that includes all the
selected slides. The following example cuts the selected slides
in the active window.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>ActiveWindow.Selection.SlideRange.Cut

</code></pre></FONT>
<P>
<A NAME="PG006C5"></A>

</MENU></MENU></MENU>
<MENU>


<FONT SIZE=5 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H105">Working with the View and SlideShowView Objects</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
<MENU><MENU>


<P>
When you open a file in PowerPoint, you simultaneously create
a <B>Presentation</B> object, which represents the contents of
the file; a <B>DocumentWindow</B> object, which represents the
interface between the user and the file in design mode; and the
<B>View</B> object, which represents a container for the contents
of the file in design mode. 
<P>
When you start a slide show, you create a <B>SlideShowWindow</B>
object, which represents the interface between the user and the
file in run mode, and a <B>SlideShowView</B> object, which represents
a container for the contents of the file in run mode.
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H234">Understanding Presentations, Windows,
and Views</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>


<P>
<a name="dex37"></a>
<P>
When you're running PowerPoint and you make changes to what you
see on the screen, you may be making changes to the <B>Presentation</B>
object, the <B>DocumentWindow</B> object, or the <B>View</B> object.
<P>

<UL>
<P>
<LI>Changes made to the actual
contents of slides&nbsp;&#151; such as by adding, deleting,
or formatting objects&nbsp;&#151; are changes to the presentation
and are controlled by properties and methods of the <B>Presentation</B>
object and the objects below the <B>Presentation</B> object in
the object hierarchy. 
<P>
<LI>Changes made to the interface
that displays the contents&nbsp;&#151; such as by changing
the size of the window or switching black&#173;and&#173;white
display on or off&nbsp;&#151; are changes to the document
window or slide show window and are controlled by properties and
methods of the <B>DocumentWindow</B> or <B>SlideShowWindow</B>
object. These changes don't affect the contents of the file. Changes
to the document window are retained when you switch document views.

<P>
<LI>Changes made to what information is displayed
to you&nbsp;&#151; such as whether you see text and graphics
or only graphics, and how big the elements look on the screen&nbsp;&#151;
are changes to the view and are controlled by properties and methods
of the <B>View</B> or <B>SlideShowView</B> objects. These changes
don't affect the contents of the file, and they aren't retained
when you switch views.
<P>
<A NAME="CH006H235"></A></UL>

<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B>Returning the View and SlideShowView Objects</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>


<P>
<a name="dex38"></a>
<P>
The <B>View</B> object represents the way information is displayed
in a document window. Use the <B>View</B> property of the <B>DocumentWindow</B>
object to return a <B>View</B> object. The following example sets
the document window to automatically adjust (zoom) to fit the
dimensions of the application window.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Windows(1).View.ZoomToFit = True

</code></pre></FONT>


<P>
The <B>SlideShowView</B> object represents the way information
is displayed in the slide show window. Use the <B>View</B> property
of the <B>SlideShowWindow</B> object to return a <B>SlideShowView</B>
object. <A NAME="CVviewdoc002003">The following example runs a
slide show of the active presentation with shortcut keys disabled
(the <B>Run</B> method of the <B>SlideShowSettings</B> object
returns a <B>SlideShowWindow</B> object).</A>

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>ActivePresentation.SlideShowSettings.Run.View.AcceleratorsEnabled = False

</code></pre></FONT>


<P>
The following example sets the pointer color and pointer shape
for the second slide show that's currently running. (There can
be only one running slide show window per presentation, but there
can be multiple presentations running slide shows at the same
time.)

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>With SlideShowWindows(2).View
&nbsp;&nbsp;&nbsp; .PointerColor.RGB = RGB(255, 0, 0)
&nbsp;&nbsp;&nbsp; .PointerType = ppSlideShowPointerPen
End With

</code></pre></FONT>


<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H236">Navigating in a Slide Show in a Document
Window View or Slide Show Window View</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
<P>
<a name="dex39"></a>
<P>
Use the <B>GotoSlide</B> method of the <B>View</B> or <B>SlideShowView</B>
object to make a specific slide the active slide. The following
example makes slide three in the presentation in document window
one the active slide in the window.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Windows(1).View.GotoSlide 3

</code></pre></FONT>
<P>
Note that depending on what document view you're in, the term
"active slide" has slightly different meanings. In slide
view or note view, the active slide is the one that's currently
displayed in the window. In outline view or slide sorter view,
the active slide is the selected slide.
<P>
The following example advances the presentation in slide show
window one to the third slide.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>SlideShowWindows(1).View.GotoSlide 3

</code></pre></FONT>


<P>
You can also go to the first slide in a slide show by using the
<B>First</B> method or to the last slide by using the <B>Last</B>
method, or you can go to a custom slide show by using the <B>GotoNamedShow</B>
method. For more information about these methods, see the topics
for them in Help.
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H237">Pasting Clipboard Contents into a Document
Window View</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>


<P>
<a name="dex40"></a>
<P>
<FONT COLOR=#000000>Use the </FONT><B>Paste</B><FONT COLOR=#000000>
method to paste the contents of the Clipboard into the active
document window view. </FONT>The following example copies the
selection in window one to the Clipboard and then copies it into
the view in window two. If the Clipboard contents cannot be pasted
into the view in window two&nbsp;&#151; for example, if you
try to paste a shape into slide sorter view&nbsp;&#151; this
example fails.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Windows(1).Selection.Copy
Windows(2).View.Paste

</code></pre></FONT>

<P>
<FONT COLOR=#000000>The following table shows what you can paste
into each view.</FONT>
<P>
<TABLE WIDTH=85% VALIGN="TOP" BORDER=1 BORDERCOLOR="#C0C0C0" CELLPADDING=4 CELLSPACING=0>


<TR><TD WIDTH=41% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Into this view</FONT></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2></TD>
<TD WIDTH=59% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">You can paste the following from the Clipboard</FONT></B>
</FONT></TD></TR>

<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Slide view or notes page view</FONT>
</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Shapes, text, or entire slides.</FONT>
<P>
<FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Pasted shapes will be added to the top of the z-order and won't replace selected shapes.</FONT>
<P>
<FONT SIZE=2 FACE="Verdana, Arial, Helvetica">If one shape is selected, pasted text will be appended to the shape's text; if text is selected, pasted text will replace the selection; if anything else is selected, pasted text will be placed in it's own text frame.</FONT>
<P>
<FONT SIZE=2 FACE="Verdana, Arial, Helvetica">If you paste a slide from the Clipboard, an image of the slide will be inserted onto the slide, master, or notes page as an embedded object.</FONT>
</FONT></TD></TR>

<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Outline view</FONT></FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Text or entire slides.</FONT>
<P>
<FONT SIZE=2 FACE="Verdana, Arial, Helvetica">A pasted slide will be inserted before the slide that contains the insertion point.</FONT>
<P>
<FONT SIZE=2 FACE="Verdana, Arial, Helvetica">You cannot paste shapes into outline view.</FONT>
</FONT></TD></TR>

<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Slide sorter view</FONT></FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Entire slides.</FONT>
<P>
<FONT SIZE=2 FACE="Verdana, Arial, Helvetica">A pasted slide will be inserted at the insertion point or after the last slide in the selection.</FONT>
<P>
<FONT SIZE=2 FACE="Verdana, Arial, Helvetica">You cannot paste shapes or text into slide sorter view.</FONT>
</FONT></TD></TR><P>
</TABLE>
<P>
For information about <FONT COLOR=#000000>setting the view for
a window before pasting the Clipboard contents into it</FONT>,
see the following section. 
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H238">Setting or Checking the View Type in a
Document Window</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>


<P>
<a name="dex41"></a>
<P>
Use the <B>Type</B> property of the <B>View</B> object to see
what the active document view is, and use the <B>ViewType</B>
property of the <B>DocumentWindow</B> object to set the active
document view. The following example copies the selection in window
one to the Clipboard, makes sure that window one is in slide view,
and then copies the Clipboard contents into the view in window
two.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Windows(1).Selection.Copy
With Windows(2)
&nbsp;&nbsp;&nbsp; .ViewType = ppViewSlide
&nbsp;&nbsp;&nbsp; .View.Paste
End With

</code></pre></FONT>


<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H239">Returning the Slide That's Currently Showing in a Document Window View or Slide Show Window View</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex42"></a>
<P>
Use the <B>Slide</B> property<FONT COLOR=#000000> to return the
</FONT><B>Slide</B><FONT COLOR=#000000> object that represents
the slide that's currently displayed in the specified slide show
window view<A NAME="CVviewdoc025005"> or document window view.
</A><A NAME="CVviewdoc025007">The following example places on
the Clipboard a copy of the slide that's currently displayed in
slide show window one.</A></FONT>

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>SlideShowWindows(1).View.Slide.Copy

</code></pre></FONT>

<P>
<B><FONT SIZE=2 COLOR=#0000FF FACE="Verdana, Arial, Helvetica">Tip</FONT></B>&nbsp;&nbsp;&nbsp;If
the currently displayed slide is from an embedded presentation,
you can use the <B>Parent</B> property of the <B>Slide</B> object
returned by the <B>Slide</B> property to return the embedded presentation
that contains the slide. (The <B>Presentation</B>
property of the <B>SlideShowWindow</B> object or <B>DocumentWindow</B>object returns the presentation in which the window was created,
not the embedded presentation.)

<P>
<A NAME="PG006C6"></A>
</MENU></MENU></MENU>
<MENU>


<FONT SIZE=5 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H106">Controlling How Objects Behave During
a Slide Show</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
<MENU><MENU>


<P>
<a name="dex43"></a>
<P>
The entire drawing layer on a slide is represented by the <B>Shapes</B>
collection, and each object on a slide&nbsp;&#151; whether
it's a placeholder, AutoShape, or OLE object&nbsp;&#151; is
represented by a <B>Shape</B> object. Using properties and methods
of the <B>Shapes</B> collection, you can add objects to slides
and gain access to the individual objects on a slide. Using properties
and methods of the <B>Shape</B> object, you cancontrol the shape's
appearance, the text or OLE object it can contain, and the way
it behaves during a slide show. This section discusses the properties
and methods that control how a shape behaves during a slide show.
For information about the properties and methods that control
other attributes and behavior of shapes, see Chapter 10, "<a href="010.htm">Shapes
and the Drawing Layer</A>." 
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H240">Controlling How a Shape Becomes Animated
During a Slide Show</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>


<P>
<a name="dex44"></a>
<P>
The <B>AnimationSettings</B> object contains properties and methods
that control how and when a shape appears on a specific slide
during a slide show. The following example <A NAME="CVanimsetdoc004003">sets
shape two on slide one in the active presentation to become animated
automatically after five seconds.</A>

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>With ActivePresentation.Slides(1).Shapes(2).AnimationSettings
&nbsp;&nbsp;&nbsp; .AdvanceMode = ppAdvanceOnTime
&nbsp;&nbsp;&nbsp; .AdvanceTime = 5
&nbsp;&nbsp;&nbsp; .TextLevelEffect = ppAnimateByAllLevels
&nbsp;&nbsp;&nbsp; .Animate = True
End With

</code></pre></FONT>


<P>
When you work with the properties of the <B>AnimationSettings</B>
object, it's important to keep in mind how individual properties
work with each other and with the <B>AdvanceMode</B> property
of the <B>SlideShowSettings</B> object.
<P>
You won't see the effects of setting any properties of the <B>AnimationSettings</B>
object unless the specified shape is animated&nbsp;&#151;
that is, if the shape doesn't appear on the slide when the slide
is initially displayed during a slide show but appears later.
For a shape to be animated, the <B>TextLevelEffect</B> property
must be set to something other than <B>ppAnimateLevelNone</B>
and the <B>Animate</B> property must be set to <B>True</B>. 
<P>
To put into effect animation timings, which determine when the
shape will appear on the slide during a slide show, you must not
only assign a number of seconds to the <B>AdvanceTime</B> property,
but you must also set the <B>AdvanceMode</B> property of the <B>SlideShowSettings</B>
object to <B>ppAdvanceOnTime</B> and set the <B>AdvanceMode</B>
property to <B>ppSlideShowUseSlideTimings</B>.
<P>
You can use the <B>AfterEffect</B> property to specify what happens
to a shape after it becomes animated. Obviously, unless a shape
gets animated and at least one other shape on the slide gets animated
after it, you won't see any of the aftereffects you set for the
shape. Additionally, unless the <B>AfterEffect</B> property is
set to <B>ppAfterEffectDim</B>, you won't see the effect of the
<B>DimColor</B> property setting.
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H241">Controlling How a Shape Responds to Mouse Actions During a Slide Show</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex45"></a>
<P>
The <B>ActionSettings</B> collection for a shape contains two
<B>ActionSetting</B> objects&nbsp;&#151; one that contains
properties and methods that control how a shape responds when
it's clicked during a slide show (corresponds to the settings
on the <B>Mouse Click</B> tab in the <B>Action Settings</B> dialog
box), and another that contains properties and methods that control
how a shape responds when the mouse pointer passes over it during
a slide show (corresponds to the settings on the <B>Mouse Over</B>
tab in the <B>Action Settings</B> dialog box). The following example
specifies that when shape three on slide one in the active presentation
is clicked during a slide show, the shape's color is momentarily
inverted, the Applause sound plays, and the slide show returns
to the first slide. 

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>With ActivePresentation.Slides(1).Shapes(3).ActionSettings(ppMouseClick)
&nbsp;&nbsp;&nbsp; .Action = ppActionFirstSlide
&nbsp;&nbsp;&nbsp; .SoundEffect.Name = "applause"
&nbsp;&nbsp;&nbsp; .AnimateAction = True
End With

</code></pre></FONT>


<P>
Note that different action settings are available for different
types of shapes (for example, you can use the <B>ActionVerb</B>
property only for OLE objects). Thus, for any given shape, you
should use only properties that correspond to the settings available
in the user interface when the shape is selected.
<P>
If you set a property of the <B>ActionSetting</B>
object but don't see the changes you made reflected in the slide
show, make sure that you've set the correct value for the <B>Action</B>
property, as shown in the following table.
<P>
<TABLE WIDTH=85% VALIGN="TOP"  BORDER=1 BORDERCOLOR="#C0C0C0" CELLPADDING=4 CELLSPACING=0>


<TR><TD WIDTH=30% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><A NAME="CVactsetdoc001006"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">If you use this property</FONT></B></A>
</FONT></TD><TD WIDTH=35% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">To do this</FONT></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2></TD>
<TD WIDTH=35% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Set the Action property to this value to put the change into effect</FONT></B>
</FONT></TD></TR>

<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>Hyperlink</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Set properties for the hyperlink that will be followed in response to a mouse action on the shape during a slide show</FONT>
</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>ppActionHyperlink</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
</FONT></TD></TR>

<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>Run</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2></FONT></TD>
<TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Return or set the name of the program to run in response to a mouse action on the shape during a slide show</FONT>
</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>ppActionRunProgram</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
</FONT></TD></TR><P>

<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>Run</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2></FONT></TD>
<TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Return or set the name of the macro to be run in response to a mouse action on the shape during a slide show</FONT>
</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>ppActionRunMacro</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
</FONT></TD></TR>

<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>ActionVerb</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Set the OLE verb that will be invoked in response to a mouse action on the shape during a slide show</FONT>
</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>ppActionOLEVerb</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
</FONT></TD></TR>

<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>SlideShowName</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Set the name of the custom slide show that will be run in response to a mouse action on the shape during a slide show</FONT>
</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>ppActionNamedSlideShow</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
</FONT></TD></TR><P>
</TABLE>
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH006H242">Controlling How a Media Clip Plays During
a Slide Show</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>


<P>
The <B>PlaySettings</B> object, which you return by using the
<B>PlaySettings</B> property of the <B>AnimationSettings</B> object,
contains properties and methods that control how and when a media
clip plays during a slide show. The following example inserts
a movie named "Clock.avi" into slide one in the active
presentation, sets it to play automatically after the previous
animation or slide transition, specifies that the slide show continue
while the movie plays, and specifies that the movie object be
hidden during a slide show except when it's playing.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Set clockMovie = ActivePresentation.Slides(1).Shapes.AddMediaObject _
&nbsp;&nbsp;&nbsp; (FileName:="C:\WINNT\clock.avi", Left:=20, Top:=20)
With clockMovie.AnimationSettings.PlaySettings
&nbsp;&nbsp;&nbsp; .PlayOnEntry = True
&nbsp;&nbsp;&nbsp; .PauseAnimation = False
&nbsp;&nbsp;&nbsp; .HideWhileNotPlaying = True
End With

</code></pre></FONT>

<P>
Depending on whether you inserted the media clip as an OLE object
(using the <B>Object</B> command on the <B>Insert</B> menu, or
using the <B>AddOLEObject</B> method) or as a native media object
(using the <B>Movies and Sounds</B> menu or the <B>AddMediaObject</B>
method), different properties of the <B>PlaySettings</B> object
will apply to the clip. This mimics the way different options
are available for native media objects and OLE objects on the
<B>Play Settings</B> tab in the <B>Custom Animation</B> dialog
box (<B>Slide Show</B> menu). 
<P>
The preferred way to insert media clips is as native media objects,
because native movies and sounds don't require the use of the
Windows Media Player and therefore respond faster when they're
clicked or activated. Most of the properties of the <B>PlaySettings</B>
object apply only to native media clips. The <B>ActionVerb</B>
property, which corresponds to the options listed in the <B>Object</B>
box on the <B>PlaySettings</B> tab in the <B>Custom Animation</B>
dialog box, is the only property of the <B>PlaySettings</B> object
that doesn't apply to native media objects.
<P>
To determine whether a particular media clip is a native media
object, check to see whether the value of the <B>Type</B> property
of the <B>Shape</B> object that contains the clip is <B>msoMedia</B>.
Use the <B>MediaType</B> property of the <B>Shape</B> object to
determine whether the clip is a sound or a movie. The following
example sets all native sound objects on slide one in the active
presentation to loop during a slide show until they're manually
stopped.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Dim so As Shape
For Each so In ActivePresentation.Slides(1).Shapes
&nbsp;&nbsp;&nbsp; If so.Type = msoMedia Then
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  If so.MediaType = ppMediaTypeSound Then
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;so.AnimationSettings.PlaySettings.LoopUntilStopped = True
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  End If
&nbsp;&nbsp;&nbsp; End If
Next

</code></pre></FONT>
<P>
</MENU></MENU></MENU>
<HR>
<!--TOTOP_START-->
<TABLE width=98% cellpadding=0 cellspacing=0 border=0>


</TABLE>

<!--ToTop_End-->

<!--EndNav_Start-->

<P>
</FONT>
</FONT></BODY>



</HTML>
