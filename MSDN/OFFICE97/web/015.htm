<HTML><HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Chapter 15: Developing Applications for the Internet and World Wide Web</TITLE>

<META NAME="GENERATOR" CONTENT="Internet Assistant For Microsoft Word 2.0z Beta">
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR="#ffffff" TOPMARGIN=0 LEFTMARGIN=0>

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<!--TOOLBAR_START-->
<!--TOOLBAR_END-->
<!--Header/Footer Info_START-->

<TABLE WIDTH=98% BORDER=0 CELLPADDING=0>
<TR>
<TD WIDTH=30% ALIGN=LEFT><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT COLOR="#000000" FACE="VERDANA,ARIAL,HELVETICA" Size=1>
<B>C H A P T E R &nbsp;&nbsp; 15</B></FONT></TD>
<TD WIDTH=20% ALIGN=CENTER><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT COLOR="#000000" FACE="VERDANA,ARIAL,HELVETICA" Size=1>
<B></B></FONT></TD>
<TD WIDTH=50% ALIGN=RIGHT><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT COLOR="#000000" FACE="VERDANA,ARIAL,HELVETICA" SIZE=1>
<B>Microsoft Office 97/Visual Basic Programmer's Guide</B></FONT></TD></TR>
</TABLE>
<P>
<!--Header/Footer Info_END-->

<P><!--NAV_START-->
<TABLE WIDTH="98%" BGCOLOR="#ffffff" BORDER=0 CELLSPACING=0 CELLPADDING=3>
<TR><TD VALIGN="TOP" WIDTH=60%><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=5 FACE="Verdana, Arial, Helvetica"><B>Developing Applications for the Internet and World Wide Web
</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2></TD>
</TR>
</TABLE><HR>
<!--NAV_END-->
<MENU><MENU><MENU>
<P>
<FONT SIZE=3 FACE="Verdana, Arial, Helvetica"><B>Contents</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<UL>
<LI><A HREF="#CH015H101">Developing Internet Applications</A>
<BR>
<LI><A HREF="#CH015H102">Internet Terms and Concepts</A>
<BR>
<LI><A HREF="#CH015H103">Working with Hyperlinks</A>
<BR>
<LI><A HREF="#CH015H104">Saving Documents and Objects as HTML</A>
<BR>
<LI><A HREF="#CH015H105">Opening and Importing HTML Data</A>
<BR>
<LI><A HREF="#CH015H106">Using the WebBrowser Control</A>
<BR>
<LI><A HREF="#CH015H107">Using the Internet Transfer Control</A>
<BR>
<LI><A HREF="#CH015H108">Using the WinSock Control</A>
<BR>
<LI><A HREF="#CH015H109">Setting Up a Personal Web Server</A>
</UL>

<P>
<A NAME="CH015H101">This chapter shows you how to use Microsoft
Office&nbsp;97 to develop applications that retrieve, publish,
and share information on the Internet or a local area network
(LAN). For example, you can create applications that display Hypertext
Markup Language (HTML) documents, or you can publish or share
information located on a Web server. You can also create hyperlinks
that you click to open Microsoft Office documents or objects located
on a local hard disk or a LAN.</A>
<P>
<A NAME="PG015C1"></A>

</MENU></MENU></MENU>
<MENU>


<FONT SIZE=5 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH015H101">Developing Internet Applications</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
<MENU><MENU>

<P>
<a name="dex1"></a>
<P>
The Internet provides an effective solution for broadcasting information
across different platforms. For example, many organizations use
the Internet to distribute product information, directories, or
company policy manuals to people both within and outside of the
organization. By applying Internet technologies to their internal
network, organizations can help their employees share, analyze,
and find information more easily.
<P>
Microsoft Office&nbsp;97 is a flexible and robust tool for creating
Internet content. By using the Microsoft Office Internet features,
you can create applications to publish and distribute information
to peers, management, and other functional groups in a timely
manner, regardless of where they are located. For example, you
can enter data into a Microsoft Access database, and then publish
that database on your company's Web server so that users on a
variety of platforms can access that data with a Web browser.
<P>
In Microsoft Word, Microsoft Excel, Microsoft PowerPoint, and
Microsoft Access, you can use Visual Basic for Applications to
automate and extend Internet features in your custom applications.
<P>
<A NAME="PG015C2"></A>

</MENU></MENU></MENU>
<MENU>


<FONT SIZE=5 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH015H102">Internet Terms and Concepts</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
<MENU><MENU>

<P>
<a name="dex2"></a>
<P>
In all likelihood, you are well aware of what the Internet is,
and you've had a chance to take advantage of its many resources.
Even if you have used the Internet, the following overview will
help to make sure you understand the terms used to describe it
in this chapter.
<P>
<a name="dex3"></a>
<P>
The <I>Internet</I> is a collection of computer networks
that connects millions of computers around the world. The <I>World
Wide Web</I> is a client/server technology used to access
a vast variety of digital information from the Internet. By using
a software client called a <I>Web browser</I>, such
as Microsoft Internet Explorer, and a modem or other connection
to an Internet Service Provider (ISP), you can easily access text,
graphics, sound, and other digital information from practically
any computer in the world that is running the appropriate server
software on the Internet.
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH015H201">Internet Protocols</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex4"></a>
<P>
A Web browser uses a variety of standardized methods for addressing
and communicating with Internet servers. These methods are called
<I>protocols</I>. The most common protocol is <I>Hypertext
Transfer Protocol</I> (HTTP), which was originally created
to publish and view linked text documents, but has been extended
to display and run a growing variety of graphics, sound, video,
and other multimedia content. Other common protocols include File
Transfer Protocol (FTP), Gopher, telnet, RealAudio, as well as
protocols used to start other applications such as e&#173;mail
and Usenet newsreaders.
<P>
The following table describes many of the protocols commonly in
use today.
<P>
<TABLE WIDTH=85% BORDER=1 BORDERCOLOR="#C0C0C0" CELLPADDING=4 CELLSPACING=0>

<TR><TD WIDTH=30% VALIGN="BOTTOM" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Protocol</FONT></B></TD><TD WIDTH=35% VALIGN="BOTTOM" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Protocol name</FONT></B>
</TD><TD WIDTH=35% VALIGN="BOTTOM" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Description</FONT></B></TD>
</TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">http</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Hypertext Transfer Protocol</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Goes to Web pages that contain text, graphics, sound, and other digital information from a Web server on the World Wide Web.</FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">ftp</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">File Transfer Protocol</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Transfers files between computers on the Internet.</FONT>
</TD></TR>

<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">gopher</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Gopher protocol</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Displays information on a Gopher server.</FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">wais</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">WAIS protocol</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Accesses a Wide Area Information Servers database.</FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">file</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">File protocol</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Opens a file on a local hard disk or LAN.</FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">https</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Hypertext Transfer Protocol with privacy</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Establishes an HTTP connection that uses Secure Sockets Layer (SSL) encryption.</FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">mailto</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">MailTo protocol</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Opens your electronic mail program to send a message to the specified Internet e-mail address. </FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">msn</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Microsoft Network protocol</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Goes to a location on MSN&#153;, The Microsoft Network.</FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">news</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">News protocol</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Starts a newsreader and opens the specified Usenet newsgroup. </FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">nntp</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Network News Transfer Protocol</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Performs the same function as News protocol.</FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">mid</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Musical Instrument Digital Interface (MIDI) protocol</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Plays MIDI sequencer files if the user's computer has a sound card.</FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">cid</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">CompuServe Dialer (CID) protocol </FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Establishes a point-to-point protocol (PPP) connection with the Internet through CompuServe's network.</FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">prospero</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Prospero protocol</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Opens files on the Prospero distributed file system.</FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">telnet</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Telnet protocol</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Starts a telnet <I>terminal emulation program</I>. A terminal emulation program is a command-line interface that you can use to issue commands on a remote computer. For example, by using telnet to connect to a UNIX server, you can issue UNIX commands to perform operations on that server.</FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">rlogin</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Rlogin protocol</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Starts an Rlogin terminal emulation program.</FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">tn3270</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">TN3270 protocol</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Starts a TN3270 terminal emulation program.</FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">pnm</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">RealAudio protocol</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Plays RealAudio streaming audio from a RealAudio server. Streaming audio and other streaming media formats establish a connection to the server and start playing immediately without downloading an entire file.</FONT>
</TD></TR>

<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">mms</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Microsoft Media Server (MMS) protocol</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Plays media such as ActiveMovie&#153; streaming format files (.asf) from an MMS server.</FONT>
</TD></TR>

<P>
</TABLE>
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH015H202">Uniform Resource Locators</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex5"></a>
<P>
To run or display Internet content with a Web browser, you type
an address called a <I>Uniform Resource Locator</I>
(URL) into its address box. You can enter a URL that points to
any Internet file type or resource supported by the browser that
will be used to display or run it. You enter most URLs in the
following format:
<P>
<I>protocol</I><B>://</B><I>serveraddress</I><B>/</B><I>path</I>
<P>
<I>Protocol</I> specifies the Internet protocol used
to establish the connection to the server, and is generally followed
by a colon and two slash marks. <I>Serveraddress</I>
specifies what is usually called the <I>domain name</I>
of the Internet server. <I>Path</I> specifies the
location and name of the page or file on the Internet server.
For example, this is the URL for the What's New page on the Microsoft
Access Developer Forum Web site:
<P>
http://www.microsoft.com/accessdev/whatsnew.htm
<P>
<FONT COLOR="#0000FF"><B>Note&nbsp;&nbsp;&nbsp;</B></FONT>For
some protocols, URLs have a different format. For example, the
format for a URL that uses the MailTo protocol is <B>mailto:</B><I>username@domain</I>;
the format for a URL that uses the News protocol is <B>news:</B><I>newsgroupname</I>;
the format for a URL that uses the Network News Transfer Protocol
is <B>nntp://</B><I>newsgroupname</I>.
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH015H203">Hypertext Markup Language and Hyperlinks</A>
</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex6"></a>
<P>
Most files you download and open with a Web browser are pages
formatted with <I>Hypertext Markup Language (HTML) tags</I>.
HTML tags are codes enclosed in angle brackets that are used by
a Web browser to determine the structure and appearance of an
HTML document, such as graphic elements and text formatting. For
example, the two HTML tags in the following sentence:
<P>
Make &lt;B&gt;this text&lt;/B&gt; look bold.
<P>
Cause the text to display like this when viewed with a Web browser:
<P>
Make <B>this text</B> look bold. 
<P>
<a name="dex7"></a>
<P>
To navigate to other pages or multimedia content, a user clicks
a <I>hyperlink</I> on a Web page. A hyperlink is colored
and underlined text, or a graphic, that uses the path specified
by a URL to download and open another file, such as another Web
page or some form of multimedia content, such as a picture or
sound file.
<P>
You can use HTML tags called <I>anchors</I> to create
hyperlinks. An anchor with an HREF attribute goes to a file outside
of the current document. For example, the following anchor creates
a hyperlink that goes to the Microsoft home page:
<P>
&lt;A HREF="http://www.microsoft.com/"&gt;Microsoft
Home Page&lt;/A&gt;
<P>
An anchor with a NAME attribute creates a bookmark at a location
within the same document. Other hyperlinks can go to the bookmark
created with this type of anchor.
<P>
HTML was originally a simple system for publishing documents on
the Web, but it's rapidly evolving to include features that you
can use to create sophisticated, interactive applications.
<P>
<B><FONT SIZE=2 COLOR="#0000FF" FACE="Verdana, Arial, Helvetica">Tip&nbsp;&nbsp;&nbsp;</FONT></B>You
can view an HTML reference that describes the most commonly used
HTML tags as well as recent additions supported by Microsoft Internet
Explorer and Netscape Navigator at <A HREF="http://www.microsoft.com/workshop/author/newhtml/">http://www.microsoft.com/workshop/author/newhtml/</A>.
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH015H204">Extensions to Standard Web Browser Functionality</A>
</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
Standard Web browser functionality is evolving through the addition
of a variety of new technologies such as <I>helper applications</I>,
<I>plug&#173;ins</I>, <I>ActiveX controls</I>,
<I>Java</I><I>&#153;<I></I> applets</I>,
and <I>scripting languages</I>. If your Web browser
doesn't support these technologies, you may need to install additional
components to be able to use them.
<P>
<FONT SIZE=3 FACE="Verdana, Arial, Helvetica"><B>Helper Applications</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex8"></a>
<P>
Helper applications are typically used to play audio or video
files, or to display certain graphic formats. You may need to
install helper applications before you can play or display certain
content in your Web browser. In more recent browsers, such as
Microsoft Internet Explorer version 3.0 and Netscape Navigator
version 3.0, many of these functions are built into the browser
itself, or are being replaced by one of the other technologies
described in this section.
<P>
<FONT SIZE=3 FACE="Verdana, Arial, Helvetica"><B>Plug&#173;Ins</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex9"></a>
<P>
By using plug&#173;ins, Web page authors can embed content that
uses additional player or reader modules directly within Web pages.
For example, there are plug&#173;ins used to display Macromedia
Director and Apple QuickTime<FONT SIZE=2 FACE="Verdana, Arial, Helvetica">&reg;</FONT> movies in
a Web page. In order to use Web pages containing content that
requires a plug&#173;in, the plug&#173;in must be installed beforehand.
Microsoft Internet Explorer version 3.0 and Netscape Navigator
versions 2.0 and 3.0 can run plug&#173;ins.
<P>
<FONT SIZE=3 FACE="Verdana, Arial, Helvetica"><B>ActiveX Controls</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex10"></a>
<P>
By using ActiveX controls, Web page authors can extend the kinds
of content that can be displayed on a Web page. They can also
enhance their Web pages with sophisticated formatting features,
animation, and embedded programs that perform operations such
as background downloading. ActiveX controls don't need to be installed
beforehand&nbsp;&#151; they can be downloaded when a user
first opens a Web page. Microsoft Internet Explorer version 3.0
has built&#173;in support for Web pages that contain ActiveX controls.
To use a Web page that contains ActiveX controls in Netscape Navigator
version 3.0, you must use the NCompass ScriptActive plug&#173;in.
<P>
<FONT SIZE=3 FACE="Verdana, Arial, Helvetica"><B>Java Applets</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex11"></a>
<P>
By using the Java programming language, Web page authors can produce
applications called applets, which can perform functions similar
to plug&#173;ins and ActiveX controls. To display or run a Java
applet from a Web page, a Web browser must be able to compile
and run Java code. Microsoft Internet Explorer version 3.0 and
Netscape Navigator versions 2.0 and 3.0 can run Java applets.
<P>
<FONT SIZE=3 FACE="Verdana, Arial, Helvetica"><B>Scripting Languages</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex12"></a>
<P>
Scripting languages are interpreted programming languages that
Web page authors can use to perform a variety of operations. They
are often used in conjunction with ActiveX controls or Java applets.
Three common examples of scripting languages are VBScript, JScript<FONT SIZE=2 FACE="Verdana, Arial, Helvetica">&#153;</FONT>,
and JavaScript. To use a page that contains scripting language
code, a Web browser must be able to interpret the code. Microsoft
Internet Explorer version&nbsp;3.0 can run both VBScript and JScript
code, as well as most JavaScript code. Netscape Navigator versions
2.0 and 3.0 can run JavaScript code. Netscape Navigator version
3.0 can run VBScript code if you have the NCompass ScriptActive
plug&#173;in installed. 
<P>
In addition to scripting languages, there are a variety of <I>server&#173;side
scripting languages</I>, such as CGI, PERL, and ActiveX
Scripting that extend the functionality of servers. In Microsoft
Access, you can create Active Server Pages (ASP) that use ActiveX
Scripting to bind data to Web page controls. By using Active Server
Pages, your Web pages can perform many of the same functions as
Microsoft Access forms.
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH015H205">Intranets</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex13"></a>
<P>
If you install Internet server software, such as Microsoft Internet
Information Server, on servers connected by a local area network
(LAN), you can use these same Internet technologies to share data
within an organization. Such a system is called an <I>intranet</I>
or <I>internal Web</I>. For example, your organization
could post human resources information for all employees on a
Web page, or a project team could post information about its members
and provide hyperlinks to important documentation about the project.
All the features in Microsoft Office that are designed for the
Internet can also be used on an intranet. For more information
about Microsoft Internet Information Server, see <A HREF="http://www.microsoft.com/ntserver/">http://www.microsoft.com/ntserver/</A>.
<P>
You can also set up a <I>personal web server</I> to
test your Web application or to publish small&#173;scale intranet
applications. If you are using Windows&nbsp;95, you can install
Microsoft Personal Web Server. If you are using Windows NT Workstation
version&nbsp;4.0, you can install Microsoft Peer Web Services.<B>
</B>For more information about Personal Web Server or Peer Web
Services, see "<A HREF="#CH015H109">Setting Up a Personal Web Server</A>" later
in this chapter.
<P>
<A NAME="PG015C3"></A>

</MENU></MENU></MENU>
<MENU>


<FONT SIZE=5 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH015H103">Working with Hyperlinks</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
<MENU><MENU>

<P>
<a name="dex14"></a>
<P>
In all Microsoft Office&nbsp;97 applications, you can create hyperlinks
to display and run standard Internet content. Additionally, in
all Office applications except Outlook, you can create hyperlinks
to move between Microsoft Word documents, Microsoft Excel workbooks,
Microsoft PowerPoint presentations, and Microsoft Access databases
that are stored on a local hard disk or on a LAN. You don't need
Internet connections or Web servers to use hyperlinks to move
between Office documents or files. You can use both kinds of hyperlinks
in the same application.
<P>
<a name="dex15"></a>
<P>
A hyperlink to a Microsoft Office document can also go to a specific
location or object within another document or the current document.
The following table lists the objects that a hyperlink can go
to within each Microsoft Office application.
<P>
<TABLE WIDTH=85% VALIGN="TOP" BORDER=1 BORDERCOLOR="#C0C0C0" CELLPADDING=4 CELLSPACING=0>

<TR><TD WIDTH=41% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Application</FONT></B></TD>
<TD WIDTH=59% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Object</FONT></B></TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Microsoft Access</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">A table in Datasheet view.A query in Datasheet view.A form in Form view or Datasheet view, depending on the form's <B>DefaultView </B>property setting.A report in Print Preview.A macro. Using a hyperlink to go to a macro runs the macro.A module.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Microsoft Excel</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">A worksheet.A specified range of cells in a worksheet.A named range of cells in a worksheet.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Microsoft PowerPoint</FONT></TD>
<TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">A slide.</FONT></TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Microsoft Word</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">A bookmark.</FONT>
</TD></TR>

<P>
</TABLE>
<P>
When you follow a hyperlink, either by clicking it or by using
the <B>Follow</B> or <B>FollowHyperlink</B> method, the Office
application may open a cached copy of the document, depending
on the Internet settings in Control Panel. To view or change these
settings, double&#173;click the <B>Internet</B> icon in Control
Panel, then click <B>Settings</B> on the <B>Advanced</B> tab.
For more information about the <B>Follow</B> and <B>FollowHyperlink</B>
methods, see "<A HREF="#FOLMETH">The Follow Method</A>" and "<A HREF="#FOLHYPMETH">The FollowHyperlink Method</A>" later in this chapter.
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH015H206">Specifying a Hyperlink Address</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex16"></a>
<P>
When specifying a hyperlink address, you can use either of two
forms:
<P>

<UL>
<P>
<LI>A valid URL that points
to a resource on the Internet or an intranet.
<P>
<LI>A
path on a local hard disk, or a path on a LAN.
<P>
</UL>

<P>
<FONT SIZE=3 FACE="Verdana, Arial, Helvetica"><B>Specifying a URL as a Hyperlink Address</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
To create a hyperlink that goes to a Web page or other Internet
content, you must enter a valid URL as the hyperlink address.
You can enter a URL that points to any Internet file type or resource
supported by the browser or to an ActiveX control, such as the
WebBrowser control, that will be used to display or run it. For
example, the URL to the home page of the Microsoft Office Developer
Forum is:
<P>
http://www.microsoft.com/officedev/
<P>
When you enter a URL like the previous example that doesn't specify
a particular file name, be sure to include a slash mark (/) at
the end of the address. Although URLs that do not end in a slash
mark generally work, they require the server to perform additional
operations that add to the overall network load and slow down
the opening of the hyperlink. When you specify a file name at
the end of a URL, you do not end the URL with a slash mark. For
example:
<P>
http://www.microsoft.com/default.asp
<P>
If your users have Microsoft Internet Explorer version 3.0 or
if your application uses the WebBrowser control, your application
can open a Microsoft Excel workbook, Word document, or PowerPoint
presentation within the browser or control. To do this, the corresponding
Office application or viewer (Microsoft Excel Viewer, Word Viewer,
or PowerPoint Viewer) must also be installed on the user's computer.
In this case, a URL can point directly to an Office document on
a Web or intranet server. For example:
<P>
http://<I>YourIntranetServer</I>/<I>YourWordDoc</I>.doc
<P>
You can also open an Office document in Microsoft Internet Explorer
version&nbsp;3.0 or in the WebBrowser control directly from the
standard file system, without using a Web server. To do so, use
the File protocol, as follows:
<P>
file://c:\my documents\sales.doc
<P>
<FONT SIZE=3 FACE="Verdana, Arial, Helvetica"><B>Specifying a UNC or Standard Path as a Hyperlink Address</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
To create a hyperlink that starts a Microsoft Office&nbsp;97 application
and opens one of its documents from a LAN, enter a universal naming
convention (UNC) path as the hyperlink address. This ensures that
the hyperlink continues to work if the document or the application
that contains the hyperlink is moved to another computer. A UNC
path starts with two backslashes (\\) and supplies the server
name, share name, and full path to the file. For example, a UNC
path to a Microsoft Excel workbook would be in the following format:
<P>
\\<I>server</I>\<I>share</I>\<I>path</I>\<I>workbook</I><B>.xls</B>
<P>
You can also specify a network path that uses a mapped drive letter,
such as E:\<I>path</I>\<I>workbook</I>.xls.
However, because the path is specific to that drive letter, the
hyperlink only works if the user's computer has the drive letter
mapped to the appropriate server and share. If you want to create
a hyperlink that goes to a file on a local drive, you can use
a standard file path starting with a drive letter, such as C:\<I>path</I>\<I>workbook</I>.xls.
In this case, if the application is moved to another computer,
the hyperlink only works if the file specified in the address
is stored on the same drive and in the same folder on the new
computer.
<P>
You can also enter a UNC or standard file path as a hyperlink
address to open any file type that is registered on the computer
running your document or application. For example, if Notepad
is installed and registered to open text (.txt) files, you could
enter a UNC path to open a text file in the following format:
<P>
\\<I>server</I>\<I>share</I>\<I>path</I>\<I>filename</I><B>.txt</B>
<P>
<FONT SIZE=3 FACE="Verdana, Arial, Helvetica"><B>Absolute vs. Relative Links</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex17"></a>
<P>
When you create a hyperlink, you can use a path based on either
an <I>absolute link</I> or a <I>relative link</I>.
A path based on an absolute link points to a fixed file location.
Absolute links identify the destination of a hyperlink by its
full address such as C:\My&nbsp;Documents\Sales.doc or http:\\www.microsoft.com\default.htm.
Use an absolute link for hyperlinks to destinations that won't
be moved or that require a full path. For example, use absolute
links in hyperlinks to other Web sites, such as a list of your
favorite Web sites.
<P>
<a name="dex18"></a>
<P>
A path based on a relative link points to a destination relative
to the file the hyperlink is located in. When the first part of
the path is shared by both the file that contains the hyperlink
and the destination file, that part is called a <I>hyperlink
base</I>. For example, if the path to the file that contains
the hyperlink is C:\My&nbsp;Documents\Databases and the path to
the destination file is C:\My&nbsp;Documents\Workbooks, then C:\My
Documents is the hyperlink base. The hyperlink base address is
automatically added to the beginning of the path for all relative
links. You can specify the hyperlink base on the <B>Summary</B>
tab of the document's property sheet. To open a document's property
sheet in Microsoft Excel, Word, or PowerPoint, click <B>Properties</B>
on the File menu. To open the property sheet for a Microsoft Access
database, click <B>Database Properties</B> on the <B>File</B>
menu.
<P>
When a hyperlink uses a path based on a relative link, you can
move the file that contains the hyperlink and the destination
file without breaking the hyperlink if you move the destination
file to an identically named location. For example, if you set
the hyperlink base to C:\My Documents and then create a relative
link to a document in C:\My&nbsp;Documents\Workbooks, and you
move the document that contains the relative link to a new computer,
you must copy the destination file into an identically named folder
in C:\My Documents on the new computer. Alternatively, you can
move the destination file to a folder named Workbooks within another
folder (for example, D:\Applications), and then open the document
that contains the relative link and update the hyperlink base
to the new folder's name.
<P>
If you save a document or database object that contains relative
links as an HTML document, the hyperlink base is omitted from
the anchor tags created for those relative links. For example,
suppose you create a relative link to a database called Names.mdb
in C:\My Documents\Databases, and set the hyperlink base to C:\My&nbsp;Documents.
When you save the document as an HTML document, the anchor tag
created is &lt;A HREF="Databases\Names.mdb"&gt;.
To keep the hyperlink from breaking in the HTML document, you
must create a Databases folder in the folder that contains the
HTML document on the HTTP server, and then copy the Names.mdb
database into that folder.
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH015H207">Using Objects and Collections to Work
with Hyperlinks</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex19"></a>
<P>
All Office&nbsp;97 applications except Outlook provide objects
and collections that you can use to work with hyperlinks in Visual
Basic code. Although there are a great number of similarities
across each application, in some cases the objects and collections
that hyperlinks are associated with differ slightly in each Office
application.
<P>
To work with hyperlinks in Visual Basic code, you use the <B>Hyperlink</B>
object. In all Office&nbsp;97 applications except Microsoft Access,
the <B>Hyperlink</B> object is a member of the <B>Hyperlinks</B>
collection. In Microsoft Access, the <B>Hyperlink</B> object is
a member of the <B>Controls</B> collection. The objects that can
contain a <B>Hyperlinks</B> collection differ for each application.
They are listed in the following table.
<P>
<TABLE WIDTH=85% VALIGN="TOP" BORDER=1 BORDERCOLOR="#C0C0C0" CELLPADDING=4 CELLSPACING=0>

<TR><TD WIDTH=41% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Application</FONT></B></TD>
<TD WIDTH=59% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Objects that can contain a Hyperlinks collection</FONT></B>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Microsoft Word</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>Document</B>, <B>Range</B>, or <B>Selection </B>objects</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Microsoft Excel</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>Worksheet </B>or <B>Range </B>objects</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Microsoft PowerPoint</FONT></TD>
<TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>Slide </B>or <B>Master </B>objects</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Microsoft Access</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">None. Microsoft Access doesn't have a <B>Hyperlinks </B>collection. All <B>Hyperlink </B>objects are members of the <B>Controls </B>collection. In addition, you can have a set of records that contains fields with the Hyperlink data type and use Visual Basic to work with the records as if they were a collection.</FONT>
</TD></TR>

<P>
</TABLE>
<P>
The objects that can have a <B>Hyperlink</B> object associated
with them differ for each application. The following table summarizes
which objects can have an associated <B>Hyperlink</B> object.
<P>
<TABLE WIDTH=85% VALIGN="TOP"  BORDER=1 BORDERCOLOR="#C0C0C0" CELLPADDING=4 CELLSPACING=0>

<TR><TD WIDTH=41% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Application</FONT></B></TD>
<TD WIDTH=59% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Objects that can have a Hyperlink object associated with them</FONT></B>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Microsoft Word</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>Shape</B>, <B>InlineShape</B>, <B>Selection</B>, or <B>Range </B>objects</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Microsoft Excel</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>Shape</B>, <B>Selection</B>, or<B> Range </B>objects</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Microsoft PowerPoint</FONT></TD>
<TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>Shape.ActionSettings </B>or <B>TextRange.ActionSettings </B>objects</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Microsoft Access</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>CommandButton</B>, <B>ComboBox</B>, <B>Image</B>, <B>Label</B>, <B>ListBox</B>, or <B>TextBox </B>objects</FONT>
</TD></TR>

<P>
</TABLE>
<P>
<FONT SIZE=3 FACE="Verdana, Arial, Helvetica"><B>Adding New Hyperlink Objects to the Hyperlinks Collection
</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
In Microsoft Excel and Word, use the <B>Add</B> method to create
a <B>Hyperlink</B> object and add it to the <B>Hyperlinks</B>
collection. To create a hyperlink with the <B>Add</B> method,
use the following syntax:
<P>
<I>object</I><B>.Add(</B><I>anchor</I>,
<I>address</I>, <I>subaddress</I><B>)</B>
<P>
The following table describes the arguments of the<B> Add</B>
method.
<P>
<TABLE WIDTH=85% VALIGN="TOP"  BORDER=1 BORDERCOLOR="#C0C0C0" CELLPADDING=4 CELLSPACING=0>

<TR><TD WIDTH=41% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Argument</FONT></B></TD><TD WIDTH=59% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Description</FONT></B>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><I>object</I></FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Required. An expression that returns a <B>Hyperlink </B>object.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><I>anchor</I></FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Required. The anchor for the hyperlink. Can be either a <B>Range </B>or a <B>Shape </B>object.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><I>address</I></FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Required. The address of the hyperlink.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><I>subaddress</I></FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Optional. The subaddress of the hyperlink.</FONT>
</TD></TR>

<P>
</TABLE>
<P>
<B>Microsoft Word Examples</B>

<P>
<a name="dex20"></a>
<P>
In Word, you can use the <B>Add</B> method to add a hyperlink
to either a <B>Range</B> object (a range or selection of text),
a <B>Shape</B> object (a graphic object), or an <B>InlineShape</B>
object (a graphic object within a line of text).
<P>
<B>Creating a Hyperlink for a Microsoft Word Range Object</B>

<P>
The following example inserts the text "Microsoft Web Site"
at the beginning of the active document, selects the inserted
text, and then adds a hyperlink to the text that goes to the Microsoft
home page at http://www.microsoft.com/.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Sub AddHyperlinkRange()
&#09;Dim r As Range

&#09;Set r = ActiveDocument.Range(Start := 0, End := 0)
&#09;r.InsertBefore "Microsoft Web Site"
&#09;Selection.MoveRight Unit := wdWord, Count := 3, Extend := wdExtend
&#09;ActiveDocument.Hyperlinks.Add Anchor := Selection.Range, _
&#09;&#09;Address := "http://www.microsoft.com/"
End Sub

</code></pre></FONT>
<P>
<B>Creating a Hyperlink for a Microsoft Word Shape Object</B>

<P>
The following example creates a beveled shape, adds the text "Microsoft
Web Site" to the shape, and then adds a hyperlink to the
shape that goes to the Microsoft home page at http://www.microsoft.com/.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Sub AddHyperlinkShape()
&#09;ActiveDocument.Shapes.AddShape(msoShapeBevel, 150, 150, 100, 30).Select
&#09;With Selection
&#09;&#09;.ShapeRange.TextFrame.TextRange.Select
&#09;&#09;.Collapse
&#09;&#09;.TypeText Text:="Microsoft Web Site"
&#09;&#09;.ShapeRange.Select
&#09;End With
&#09;ActiveDocument.Hyperlinks.Add Anchor:=Selection.ShapeRange, _
&#09;&#09;Address:= "http://www.microsoft.com/"
End Sub

</code></pre></FONT>
<P>
<A NAME="CREATEHACB"></A>
<B>Creating a Hyperlink Associated with a Command Button</B>

<P>
In addition to creating <B>Hyperlink</B> objects in Visual Basic
code, you can create a command button by using the user interface
and then add code to the command button's Click event procedure
to make it follow a hyperlink. This doesn't create a <B>Hyperlink</B>
object so the hyperlink isn't available in the document's <B>Hyperlinks</B>
collection. To create a command button that follows a hyperlink
in Microsoft Excel, Word, and PowerPoint, use the following procedure.
<P>
<B><FONT COLOR="#0000FF"><IMG SRC="Proced.gif">To
create a command button that follows a hyperlink</FONT></B>
<P>

<OL>
<P>
<LI>Right&#173;click the menu
bar and then click <B>Control Toolbox</B> on the shortcut menu.
<P>
<LI>In
the toolbox, click the <B>Command Button</B> tool, and then click
where you want to place the command button.
<P>
<LI>Right&#173;click
the command button, and then click <B>Properties</B> on the shortcut
menu.
<P>
<LI>In the <B>Caption</B> property box, enter
the text you want on the button. Set any other properties you
want to control the button's appearance and then close the <B>Properties</B>
dialog box.
<P>
<LI>Right&#173;click the command button,
and then click <B>View Code</B>. Enter a procedure that uses the
<B>FollowHyperlink</B> method in the button's Click event. For
example:

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Private Sub CommandButton1_Click()
&#09;FollowHyperlink "http://www.microsoft.com/"
End Sub

</code></pre></FONT>

<P>
<LI>Save
the code, and exit Design mode to test the button.

<P>
</OL>

<P>
<FONT COLOR="#0000FF"><B>Note&nbsp;&nbsp;&nbsp;</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>When
using this method, the command button doesn't display blue underlined
text or the hand cursor when the mouse is over the button.
<P>
For more information about the <B>FollowHyperlink</B> method,
see "<A HREF="#FOLHYPMETH">The FollowHyperlink Method</A>" later in this chapter.
<P>
<B>Microsoft Excel Examples</B>

<P>
<a name="dex21"></a>
<P>
In Microsoft Excel, you can use the <B>Add</B> method to add a
hyperlink to either a <B>Range</B> object (a range of one or more
cells) or a <B>Shape</B> object (a graphic). 
<P>
<B>Creating a Hyperlink for a Microsoft Excel Range Object</B>

<P>
The following example adds the display text "MSN Web site"
to cell A1 in the first worksheet in the current workbook, and
then adds a hyperlink to that range that goes to the Web site
at http://www.msn.com/.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Sub AddHyperlink_Range()
&#09;Dim wrk As Worksheet

&#09;Set wrk = ActiveWorkbook.Sheets(1)
&#09;wrk.Range("A1").Value = "MSN Web site"
&#09;wrk.Hyperlinks.Add Address := "http://www.msn.com/", _
&#09;&#09;Anchor := wrk.Range("A1")
End Sub

</code></pre></FONT>


<B>Creating a Hyperlink for a Microsoft Excel Shape Object</B>

<P>
The following example adds a rounded rectangle labeled "Click
Here" to the first worksheet in the current workbook, and
then adds a hyperlink to the rectangle that goes to cell C6 on
the first sheet of Book2.xls.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Sub AddHyperlink_Shape()
&#09;Dim wrk As Worksheet
&#09;Dim shp As Shape

&#09;Set wrk = ActiveWorkbook.Sheets(1)
&#09;Set shp = wrk.Shapes.AddShape(msoShapeRoundedRectangle, 50, 50, 100, 50)
&#09;shp.Select
&#09;Selection.Characters.Text = "Click Here"
&#09;wrk.Hyperlinks.Add Anchor := shp, Address := "C:\My Documents\Book2.xls", _
&#09;&#09;SubAddress := "Sheet1!C6"
End Sub

</code></pre></FONT>
<P>
<B>Microsoft PowerPoint Examples</B>

<P>
<a name="dex22"></a>
<P>
PowerPoint doesn't use the <B>Add</B> method to create a new hyperlink.
Instead, you create a hyperlink by working with the <B>ActionSettings</B>
collection of a <B>Shape</B> object (a graphic) or a <B>TextRange</B>
object (text associated with a <B>Shape</B> object). A <B>Shape</B>
or <B>TextRange</B> object can have two different hyperlinks assigned
to it: one that's followed when the user clicks the object during
a slide show, and another that's followed when the user passes
the mouse pointer over the object during a slide show. 
<P>
To specify which mouse action to work with, first use the <B>ActionSettings</B>
property to return the <B>ActionSettings</B> collection, then
use <B>ActionSettings</B>(<I>index</I>), where index
is either <B>ppMouseClick</B> or <B>ppMouseOver</B>. Set the <B>Action</B>
property to <B>ppActionHyperlink</B> to specify that the action
is a hyperlink. After a hyperlink is created, it's available from
the <B>Hyperlinks</B> collections for the <B>Shape</B>, <B>TextRange</B>,
and <B>Slide</B> objects.
<P>
<B>Creating a Hyperlink for a Microsoft PowerPoint Shape Object
</B>

<P>
The following example adds a Custom action button with text that
reads "Microsoft.com" to the first slide in the active
presentation, and then adds a hyperlink to the button that goes
to the Microsoft home page.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Sub AddHyperlinkButton()
&#09;Dim sld As Slide, shp As Shape

&#09;Set sld = ActivePresentation.Slides(1)
&#09;Set shp = sld.Shapes.AddShape(msoShapeActionButtonCustom, 50, 50, 160, 30)
&#09;With shp.TextFrame
&#09;&#09;.TextRange.Text = "Microsoft.com"
&#09;&#09;.MarginBottom = 5
&#09;&#09;.MarginLeft = 5
&#09;&#09;.MarginRight = 5
&#09;&#09;.MarginTop = 5
&#09;End With
&#09;With shp.ActionSettings(ppMouseClick)
&#09;&#09;.Action = ppActionHyperlink
&#09;&#09;.Hyperlink.Address = "http://www.microsoft.com/"
&#09;End With
End Sub

</code></pre></FONT>
<P>
<B>Creating a Hyperlink for a Microsoft PowerPoint TextRange
Object</B>

<P>
The following example adds a rectangle to the first slide in the
active presentation, adds text to the rectangle, and then adds
a hyperlink to the text. This example defines a hyperlink for
all the text in the text range. It is possible to define more
than one hyperlink within a text range for selected characters.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Sub AddHyperlinkText()
&#09;Dim sld As Slide, shp As Shape, txt As Text

&#09;Set sld = ActivePresentation.Slides(1)
&#09;Set shp = sld.Shapes.AddShape(msoShapeRectangle, 0, 0, 250, 140)
&#09;shp.TextFrame.TextRange.Text = "Microsoft Web Site"
&#09;Set txt = shp.TextFrame.TextRange
&#09;With txt.ActionSettings(ppMouseClick)
&#09;&#09;.Action = ppActionHypertext
&#09;&#09;.Hyperlink.Address = "http://www.microsoft.com/"
&#09;End With
End Sub

</code></pre></FONT>
<P>
<B>Microsoft Access Example</B>

<P>
<a name="dex23"></a>
<P>
Microsoft Access doesn't provide a <B>Hyperlinks</B> collection
or use the <B>Add</B> method to create a hyperlink on a form or
report. Instead, you create hyperlinks for label, command button,
and image controls by setting either the <B>HyperlinkAddress</B>
property or the <B>HyperlinkSubAddress</B> property, or both,
of the control. 
<P>
<FONT COLOR="#0000FF"><B>Note&nbsp;&nbsp;&nbsp;</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>You
can also create a field with the Hyperlink data type to store
hyperlink addresses in a table, and then bind that field to a
text box, list box, or combo box on a form. For more information,
see "<A HREF="#CH015H209">Storing Hyperlinks in Microsoft Access Tables</A>"
later in this chapter.
<P>
<B>Creating a Hyperlink Control in Microsoft Access</B>

<P>
The following example creates a new label on a form and then sets
the <B>HyperlinkAddress</B> and <B>HyperlinkSubAddress</B> properties
to create a hyperlink. When you create a hyperlink in Visual Basic,
and you want it to be colored and underlined, you must also explicitly
set the <B>ForeColor</B> and <B>FontUnderline</B> properties.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Sub CreateHyperlinkLabel(strForm As String, xPos As Integer, _
&#09;&#09;yPos As Integer, strCaption As String, Optional strAddress As String, _
&#09;&#09;Optional strSubAddress As String)
&#09;Dim ctlLabel As Control

&#09;' Open form, hidden in Design view.
&#09;DoCmd.OpenForm strForm, acDesign,,,,acHidden

&#09;' Create label control with text specified by strCaption, at
&#09;' the position specified by xPos and yPos.
&#09;Set ctlLabel = CreateControl(strForm, acLabel, , "", _
&#09;&#09;strCaption, xPos, yPos)
&#09;
&#09;' Set hyperlink address, text color, and underline.
&#09;With ctlLabel
&#09;&#09;.HyperlinkAddress = strAddress
&#09;&#09;.HyperlinkSubAddress = strSubAddress
&#09;&#09;.ForeColor = "1279872587"
&#09;&#09;.FontUnderline = True
&#09;End With

&#09;' Save form.
&#09;DoCmd.Save acForm, strForm
End Sub

</code></pre></FONT>
<P>
To use this example to create a hyperlink, you must specify the
form, position, display text, and hyperlink address. For example,
enter the following code into the Debug window:

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>CreateHyperlinkLabel "Form1",100,100,"Microsoft Web Site","http://www.microsoft.com/"

</code></pre></FONT>



<P>
You can use similar code to create image and command button controls
and set properties to create a hyperlink.
<P>
<FONT SIZE=3 FACE="Verdana, Arial, Helvetica"><B>Referring to Hyperlink Objects</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex24"></a>
<P>
Use the <B>Hyperlink</B> property to return a reference to a <B>Hyperlink</B>
object. The objects that can have a <B>Hyperlink</B> object associated
with them differ somewhat for each application. 
<P>
<B>Microsoft Word Example</B>

<P>
Use the <B>Hyperlink</B> property to return the hyperlink for
a shape. Note that a shape can have only one hyperlink associated
with it. The following example follows the hyperlink associated
with the first shape in the active document.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>ActiveDocument.Shapes(1).Hyperlink.Follow

</code></pre></FONT>



<P>
<B>Selection</B> and <B>Range</B> objects can have multiple <B>Hyperlink</B>
objects associated with them. For these objects, you must either
loop through the object's <B>Hyperlinks</B> collection or specify
a member of the object's <B>Hyperlinks</B> collection by using
the <B>Item</B> method. The following example loops through the
hyperlinks in the current selection.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Dim H As Hyperlink, hLinks As Hyperlinks
Set hLinks = Selection.Hyperlinks

For Each H In hLinks
&#09;MsgBox H.Address
Next H

</code></pre></FONT>
<P>
The following example displays the address of the first hyperlink
in the first 20 characters of the current document in the Immediate
window.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Debug.Print ActiveDocument.Range(0,20).Hyperlinks(1).Address

</code></pre></FONT>



<P>
<B>Microsoft Excel Example</B>

<P>
Use the <B>Hyperlink</B> property to return the hyperlink for
a shape. Note that a shape can have only one hyperlink associated
with it. The following example follows the hyperlink associated
with the first shape on the first worksheet.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Worksheets(1).Shapes(1).Hyperlink.Follow NewWindow:=True

</code></pre></FONT>



<P>
<B>Microsoft PowerPoint Example</B>

<P>
As mentioned earlier in this chapter, a shape in PowerPoint can
have up to two different hyperlinks assigned to it: one that's
followed when the user clicks the shape during a slide show, and
another that's followed when the user passes the mouse pointer
over the shape during a slide show. To return a hyperlink for
a shape, you must first reference the appropriate member of the
<B>ActionSettings</B> collection (<B>ppMouseOver</B> or <B>ppMouseClick</B>),
and then use the <B>Hyperlink</B> property.
<P>
The following example displays the address for the mouse&#173;click
hyperlink of the third shape on the first slide of the active
presentation in the Immediate window.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Debug.Print ActivePresentation.Slides(1).Shapes(3). _
&#09;ActionSettings(ppMouseClick).Hyperlink.Address

</code></pre></FONT>
<P>
<B>Microsoft Access Example</B>

<P>
In Microsoft Access, you can use the <B>Hyperlink</B> property
to return a reference to the <B>Hyperlink</B> object associated
with a <B>CommandButton</B>, <B>ComboBox</B>, <B>Image</B>, <B>Label</B>,
<B>ListBox</B>, or <B>TextBox</B> control.
<P>
The CreateHyperlink procedure in the following example sets the
<B>Address</B> and <B>SubAddress</B> properties for a label, image
control, or command button to the values passed to the procedure.
The <B>Address</B> property setting is optional, because a hyperlink
to a database object in the current database uses only the <B>SubAddress</B>
property.
<P>
To try this example, create a form with two text box controls
named txtAddress and txtSubAddress, and a command button named
cmdFollowLink. Then paste the sample code into the Declarations
section of the form's module. Display the form in Form view, enter
appropriate values in the txtAddress and txtSubAddress text boxes,
and click the cmdFollowLink button.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Private Sub cmdFollowLink_Click()
&#09;CreateHyperlink Me!cmdFollowLink, Me!txtSubAddress, Me!txtAddress
End Sub

Sub CreateHyperlink(ctlSelected As Control, txtSubAddress As TextBox, _
&#09;Optional txtAddress As TextBox)
&#09;Dim hlk As Hyperlink

&#09;Select Case ctlSelected.ControlType
&#09;&#09;Case acLabel, acImage, acCommandButton
&#09;&#09;&#09;Set hlk = ctlSelected.Hyperlink
&#09;&#09;&#09;With hlk
&#09;&#09;&#09;&#09;If Not IsMissing(txtAddress) Then
&#09;&#09;&#09;&#09;&#09;.Address = txtAddress
&#09;&#09;&#09;&#09;Else
&#09;&#09;&#09;&#09;&#09;.Address = ""
&#09;&#09;&#09;&#09;End If
&#09;&#09;&#09;&#09;.SubAddress = txtSubAddress
&#09;&#09;&#09;&#09;.Follow
&#09;&#09;&#09;&#09;.Address = ""
&#09;&#09;&#09;&#09;.SubAddress = ""
&#09;&#09;&#09;End With
&#09;&#09;Case Else
&#09;&#09;&#09;MsgBox "The control '" &amp; ctlSelected.Name &amp; "' does not support hyperlinks."
&#09;End Select
End Sub

</code></pre></FONT>
<P>
<FONT SIZE=3 FACE="Verdana, Arial, Helvetica"><B>Referring to a Hyperlink Object by Its Position in the Hyperlinks
Collection</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
Use the <B>Item</B> method (or the <B>Item</B> property in Microsoft
Excel) of the <B>Hyperlinks</B> collection to return a single
<B>Hyperlink</B> object based on its position in the collection.
The first object in the collection has an <B>Item</B> value of
1. The <B>Item</B> method is the default member of the <B>Hyperlinks</B>
collection, so you can refer to the <B>Item</B> method in either
of the following ways:

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Hyperlinks.Item(1)
Hyperlinks(1)

</code></pre></FONT>
<P>
<B>Microsoft Word Example</B>

<P>
The following example follows the first hyperlink in the selection.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>If Selection.Hyperlinks.Count &gt;= 1 Then
&#09;Selection.Hyperlinks(1).Follow
End If

</code></pre></FONT>
<P>
<FONT COLOR="#0000FF"><B>Note&nbsp;&nbsp;&nbsp;</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>The
Count property for the Hyperlinks collection of a Selection object
returns the number of items in the main story only. To count items
in other stories, specify the story in the StoryRanges collection.
For example, to count all of the hyperlinks in the primary footer
story you can use the following code.

ActiveDocument.StoryRanges(wdPrimaryFooterStory).Hyperlinks.Count. 

<P>
<B>Microsoft Excel Example</B>

<P>
The following example uses the <B>Follow</B> method to activate
the second hyperlink in the range of cells from E5 to E8.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Worksheets(1).Range("E5:E8").Hyperlinks(2).Follow

</code></pre></FONT>



<P>
<B>Microsoft PowerPoint Example</B>

<P>
The following example sets the <B>Address</B> property of the
second hyperlink on the first slide in the current PowerPoint
presentation.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>ActivePresentation.Slides(1).Hyperlinks(2).Address = "C:\New\Newsales.ppt"

</code></pre></FONT>




<P>
<FONT SIZE=3 FACE="Verdana, Arial, Helvetica"><B>Looping Through the Hyperlinks Collection</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex25"></a>
<P>
You can use the <B>Hyperlinks</B> collection in Microsoft Excel,
Word, and PowerPoint to loop through the set of <B>Hyperlink</B>
objects associated with an object. In Microsoft Access, you can
loop through the <B>Controls</B> collection or a set of records
to work with the hyperlinks in your application.
<P>
The following examples perform operations on a <B>Hyperlinks</B>
collection that contains existing <B>Hyperlink</B> objects. In
the Microsoft Excel, Word, and PowerPoint examples that follow,
the object that contains the <B>Hyperlinks</B> collection is specific
to the application. However, you can modify each example to run
in another application by referring to the appropriate object.
Because the Microsoft Access examples use the <B>Controls</B>
collection or a set of records instead of the <B>Hyperlinks</B>
collection, you can only use them in Microsoft Access.
<P>
<B>Microsoft Word Example</B>

<P>
If the active document includes hyperlinks, this example inserts
a list of the hyperlink destinations at the end of the document.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Dim hLink As Hyperlink

Set myRange = ActiveDocument.Range(Start:=ActiveDocument.Content.End - 1)
Count = 0
For Each hLink In ActiveDocument.Hyperlinks
&#09;Count = Count + 1
&#09;With myRange
&#09;&#09;.InsertAfter "Hyperlink #" &amp; Count &amp; vbTab
&#09;&#09;.InsertAfter hLink.Address
&#09;&#09;.InsertParagraphAfter
&#09;End With
Next hLink

</code></pre></FONT>
<P>
<B>Microsoft Excel Example</B>

<P>
The following example updates all hyperlinks on the first worksheet
in the active workbook that have the specified address.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Dim hLink As Hyperlink

For Each hLink in ActiveWorkbook.Sheets(1).Hyperlinks
&#09;If LCase(hLink.Address) = "C:\Current Work\Sales.ppt" Then
&#09;&#09;hLink.Address = "C:\New\Newsales.ppt"
&#09;End If
Next hLink

</code></pre></FONT>
<P>
<FONT COLOR="#0000FF"><B>Note&nbsp;&nbsp;&nbsp;</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>In
Word, you can use the Hyperlinks collection to access hyperlinks
created by inserting a HYPERLINK field. In Microsoft Excel, however,
you cannot use the Hyperlinks collection to access hyperlinks
created by entering a formula using the HYPERLINK function.
<P>
<B>Microsoft PowerPoint Example</B>

<P>
The following example updates an outdated Internet address for
all hyperlinks in the active presentation.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Dim hLink As Hyperlink
Dim S As Slide

oldAddr = InputBox("Old internet address")
newAddr = InputBox("New internet address")
For Each S In ActivePresentation.Slides
&#09;For Each hLink In s.Hyperlinks
&#09;&#09;If LCase(hLink.Address) = Lcase(oldAddr) Then hLink.Address = newAddr
&#09;Next hLink
Next S

</code></pre></FONT>
<P>
<B>Microsoft Access Examples</B>

<P>
Microsoft Access doesn't support the <B>Hyperlinks</B> collection,
but you can loop through the <B>Controls</B> collection on a form
or report to work with the hyperlinks associated with any control
on the form or report. The following procedure displays the name
and hyperlink address values for controls that contain hyperlinks
in the Debug window.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Sub ListHyperlinks(strForm As String)
&#09;Dim Frm As Form
&#09;Dim Ctl As Control
&#09;&#09; 
&#09;DoCmd.OpenForm strForm, acDesign, , , , acHidden
&#09;Set Frm = Forms(strForm)

&#09;' Ignore controls without hyperlinks.
&#09;On Error Resume Next 

&#09;For Each Ctl In Frm.Controls
&#09;&#09;If Not (Ctl.ControlType = acTextBox) Then
&#09;&#09;Debug.Print "Control:" &amp; Ctl.Name &amp; vbCrLf &amp; _
&#09;&#09;&#09;"Address:" &amp; Ctl.Hyperlink.Address &amp; vbCrLf &amp; _
&#09;&#09;&#09;"Subaddress:" &amp; Ctl.Hyperlink.SubAddress &amp; vbCrLf
&#09;&#09;Else
&#09;&#09;Debug.Print "Control:" &amp; Ctl.Name &amp; vbCrLf &amp; _
&#09;&#09;&#09;"Text box control bound to Hyperlink field " &amp; _
&#09;&#09;&#09;Ctl.ControlSource &amp; vbCrLf
&#09;&#09;End If
&#09;Next Ctl
&#09;Frm.Close
End Sub

</code></pre></FONT>
<P>
In addition to creating <B>Hyperlink</B> objects that belong to
the <B>Controls</B> collection of forms and reports, you can have
a set of records that contains fields with the Hyperlink data
type and use Visual Basic to work with the records as if they
were a collection. For example, you can loop through the records
in a table to work with the properties of a field. The following
procedure works with the Suppliers table in the Northwind sample
database. If a field is a Hyperlink field, the procedure loops
through all the records in the table. If a field is not null (empty),
it displays the record number, field name, and displayed value
in the Debug window.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Sub HyperlinkRecordset()
&#09;Dim dbs As Database
&#09;Dim rstSuppliers As Recordset
&#09;Dim fldField As Field

&#09;' Return reference to current database.
&#09;Set dbs = CurrentDb
&#09;' Create dynaset-type Recordset object.
&#09;Set rstSuppliers = dbs.OpenRecordset("Suppliers", dbOpenDynaset)

&#09;' Print displayed value for fields containing hyperlinks.
&#09;For Each fldField In rstSuppliers.Fields
&#09;&#09;If (fldField.Attributes And dbHyperlinkField) Then
&#09;&#09;&#09;With rstSuppliers
&#09;&#09;&#09;&#09;Do While Not .EOF
&#09;&#09;&#09;&#09;&#09;If Not IsNull(fldField.Value) Then
&#09;&#09;&#09;&#09;&#09;&#09;Debug.Print rstSuppliers.AbsolutePosition + 1 &amp; " " &amp; _
&#09;&#09;&#09;&#09;&#09;&#09;fldField.Name &amp; " " &amp; _
&#09;&#09;&#09;&#09;&#09;&#09;HyperlinkPart(fldField.Value, acDisplayedValue)
&#09;&#09;&#09;&#09;&#09;End If
&#09;&#09;&#09;&#09;.MoveNext
&#09;&#09;&#09;&#09;Loop
&#09;&#09;&#09;.MoveFirst
&#09;&#09;&#09;End With
&#09;&#09;End If
&#09;Next fldField
&#09;' Free all object variables.
&#09;rstSuppliers.Close
&#09;Set dbs = Nothing
End Sub

</code></pre></FONT>
<P>
For more information about Hyperlink fields, see "<A HREF="#CH015H209">Storing Hyperlinks in Microsoft Access Tables</A>" later in this chapter.
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH015H208">Using Methods and Properties to Work with
Hyperlinks</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex26"></a>
<P>
The following table summarizes the methods and properties you
can use to work with hyperlinks in Visual Basic.
<P>
<TABLE WIDTH=85% VALIGN="TOP"  BORDER=1 BORDERCOLOR="#C0C0C0" CELLPADDING=4 CELLSPACING=0>

<TR><TD WIDTH=41% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Method or property name</FONT></B>
</TD><TD WIDTH=59% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Description</FONT></B></TD>
</TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>Hyperlink </B>property</FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Returns a reference to a hyperlink object in code.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>Follow </B>method</FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Follows a hyperlink defined by an existing <B>Hyperlink </B>object. The <B>Follow </B>method has the same effect as clicking the hyperlink. </FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>FollowHyperlink </B>method</FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Follows a hyperlink address specified in code or passed to the method from a text box. For example, you can prompt a user to type a hyperlink address in a dialog box or form, and then use the <B>FollowHyperlink </B>method to go to that address.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>ExtraInfoRequired </B>property(Word only)</FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">A read-only property that returns <B>True </B>if extra information is required to resolve the specified hyperlink. You can specify extra information, such as a file name or a query string, by using the <I>extrainfo</I> argument with the <B>Follow </B>or <B>FollowHyperlink </B>methods.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>AddToFavorites </B>method</FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Adds a shortcut to the Favorites folder. The <B>AddToFavorites </B>method can reference a <B>Hyperlink </B>object or the current document (Microsoft Access database, Microsoft Excel workbook, Microsoft PowerPoint presentation, or Microsoft Word document). </FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>Address </B>property</FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Returns the address of the specified hyperlink. This property is read/write, except in Word, where it is read-only.</FONT>
</TD></TR>

<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>Subaddress </B>property </FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Returns a named location in the destination of the specified hyperlink. The named location can be a bookmark (Microsoft Word), a named cell or cell reference (Microsoft Excel), a database object (Microsoft Access), or a slide number (Microsoft PowerPoint). This property is read/write, except in Word, where it is read-only.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>Type </B>property (Microsoft Excel, Word, and PowerPoint only)</FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Returns the type of object the hyperlink is associated with. Can be one of the following constants:</FONT>
<P>
<FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>msoHyperlinkInlineShape </B>(Word only)
<BR>
<B>msoHyperlinkRange</B>
<BR>
<B>msoHyperlinkShape</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>HyperlinkAddress </B>property(Microsoft Access only)</FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Sets or returns the address of a hyperlink for a label, image control, or command button. The <B>HyperlinkAddress</B> property is equivalent to setting or returning the <B>Address</B> property for the control in Visual Basic; for example, <I>object</I>.<B>HyperlinkAddress</B> is equivalent to <I>object</I>.<B>Hyperlink.Address</B>. You can also set the <B>HyperlinkAddress</B> property in the control's property sheet.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>HyperlinkSubAddress </B>property(Microsoft Access only)</FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Sets or returns the location within the Office document or object specified by the <B>HyperlinkAddress </B>property. When no <B>HyperlinkAddress </B>property is specified, <B>HyperlinkSubAddress </B>specifies a database object in the current database. 
The <B>HyperlinkSubAddress </B>property is equivalent to setting or returning the <B>SubAddress </B>property for the control in Visual Basic; for example, <I>object</I>.<B>HyperlinkSubAddress</B> is equivalent to <I>object</I>.<B>Hyperlink.SubAddress</B>. You can also set the <B>HyperlinkSubAddress</B> property in the control's property sheet.</FONT>
</TD></TR>

<P>
</TABLE>
<P>
For more information about these methods and properties, search
Help in the appropriate application for the name of the method
or property.
<A NAME="FOLMETH"></A>
<P>
<FONT SIZE=3 FACE="Verdana, Arial, Helvetica"><B>The Follow Method</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
The <B>Follow</B> method follows a hyperlink defined by an existing
<B>Hyperlink</B> object, and has the same effect as clicking the
hyperlink. The <B>Follow</B> method downloads the document or
Web page specified by the hyperlink address associated with a
<B>Hyperlink</B> object and opens it in the appropriate application.
If the hyperlink refers to a file system path or uses the File
protocol, the<B> Follow</B> method opens the document instead
of downloading it.
<P>
The syntax for the <B>Follow</B> method is:
<P>
<I>expression</I><B>.Follow</B>(<I>newwindow</I>,
<I>addhistory</I>, <I>extrainfo</I>, <I>method</I>,
<I>headerinfo</I>)
<P>
The following table describes the arguments of the <B>Follow</B>
method.
<P>
<TABLE WIDTH=85% VALIGN="TOP"  BORDER=1 BORDERCOLOR="#C0C0C0" CELLPADDING=4 CELLSPACING=0>

<TR><TD WIDTH=41% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Argument</FONT></B></TD><TD WIDTH=59% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Description</FONT></B>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><I>expression</I></FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Required. An expression that returns a <B>Hyperlink </B>object.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><I>newwindow</I></FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Optional. A <B>Boolean </B>value where <B>True </B>(&nbsp;&#150;&nbsp;1) opens the document in a new window and <B>False </B>(0) opens the document in the current window. The default value is <B>False</B>.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><I>addhistory</I></FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Optional. A <B>Boolean </B>value where <B>True </B>(&nbsp;&#150;&nbsp;1) adds the hyperlink to the History folder and <B>False </B>(0) doesn't add the hyperlink to the History folder. The default value is <B>True</B>.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><I>extrainfo</I></FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Optional. A string or an array of <B>Byte</B> data that specifies additional information for HTTP to use to resolve the hyperlink. 
For example, you can use the <I>extrainfo</I> argument to specify the coordinates of an image map or the contents of a form. The string is either appended or posted, depending on the value of the <I>method</I> argument. In Word, you can use the <B>ExtraInfoRequired</B> property to determine whether extra information is required.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><I>method</I></FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Optional. Specifies the way the <I>extrainfo</I> argument is handled. You can set the <I>method</I> argument to <B>msoMethodGet</B> or <B>msoMethodPost</B>.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><I>headerinfo</I></FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Optional. A string that specifies header information for the HTTP request. The default value is a zero-length string ("&nbsp;"). You can combine several header lines into a single string by using the following syntax:</FONT>
<P>
<FONT SIZE=2 FACE="Verdana, Arial, Helvetica">"<I>string1</I>" <B>&amp; vbCr &amp; "</B><I>string2</I>"</FONT>
<P>
<FONT SIZE=2 FACE="Verdana, Arial, Helvetica">The specified string is automatically converted into ANSI characters. Note that the <I>headerinfo</I> argument may overwrite default HTTP header fields.</FONT>
</TD></TR>

<P>
</TABLE>
<P>
For the <I>method </I>argument of the <B>Follow</B>
method, you can specify one of the constants described in the
following table.
<P>
<TABLE WIDTH=85% VALIGN="TOP"  BORDER=1 BORDERCOLOR="#C0C0C0" CELLPADDING=4 CELLSPACING=0>

<TR><TD WIDTH=41% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Constant</FONT></B></TD><TD WIDTH=59% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Description</FONT></B>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>msoMethodGet</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">The <I>extrainfo</I> argument is a string that's appended to the URL, separated by a question mark, when you use the HTTP GET method from an HTML form. For example, you can submit a query to an HTTP server by using an address in the following format:</FONT>
<P>
<FONT SIZE=2 FACE="Verdana, Arial, Helvetica">http://www.web.com/cgi-bin/srch?<I>item1</I>+<I>item2</I></FONT>
<P>
<FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><I>item1</I>+<I>item2</I> is the extra information that's passed to the srch program on the HTTP server.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>msoMethodPost</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2></TD>
<TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">The <I>extrainfo</I> argument is posted to the server as a string or a byte array when you use the HTTP POST method. For example, data from a form is typically submitted to an HTTP server with a series of name/value pairs in the following format:
<P>
<I>name1</I>=<I>value1</I>&amp;<I>name2</I>=<I>value2</I>
<P>
This data can be submitted as either a string or byte array, depending on what format the program on the server has been programmed to use. Use the HTTP POST method to submit extra information if the program on the HTTP server is reading the form's data from the standard input stream (STDIN).</FONT>
</TD></TR>

</TABLE>
<P>
For examples that illustrate uses of the <B>Follow</B> method,
see the code samples in previous sections of this chapter.
<A NAME="FOLHYPMETH"></A>
<P>
<FONT SIZE=3 FACE="Verdana, Arial, Helvetica"><B>The FollowHyperlink Method</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
The <B>FollowHyperlink</B> method follows a hyperlink address
specified in code or passed to the method from a variable or object.
For example, you can prompt a user to type a hyperlink address
in a dialog box, and then use the <B>FollowHyperlink</B> method
to go to that address. The <B>FollowHyperlink</B> method downloads
the document or Web page specified by the hyperlink address associated
with a <B>Hyperlink</B> object and opens it in the appropriate
application. If the address refers to a file system path or uses
the File protocol, the <B>FollowHyperlink</B> method opens the
document instead of downloading it.
<P>
The syntax for the <B>FollowHyperlink</B> method is:
<P>
<I>expression</I><B>.FollowHyperlink</B>(<I>address</I>,
<I>subaddress</I>, <I>newwindow</I>, <I>addhistory</I>,
<I>extrainfo</I>, <I>method</I>, <I>headerinfo</I>)
<P>
The following table describes the arguments of the <B>FollowHyperlink</B>
method.
<P>
<TABLE WIDTH=85% VALIGN="TOP"  BORDER=1 BORDERCOLOR="#C0C0C0" CELLPADDING=4 CELLSPACING=0>

<TR><TD WIDTH=41% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Argument</FONT></B></TD><TD WIDTH=59% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Description</FONT></B>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><I>expression</I></FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Required. An expression that returns one of the following objects:</FONT>
<P>
<FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Microsoft Word <B>Document </B>objectMicrosoft Excel <B>Workbook </B>objectMicrosoft PowerPoint <B>Presentation </B>objectMicrosoft Access <B>Application </B>object </FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><I>address</I></FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">A string expression that evaluates to a valid hyperlink address.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><I>subaddress</I></FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">A string expression that evaluates to a named location in the document specified by the <I>address</I> argument. The default is a zero-length string ("&nbsp;"). If no <I>address</I> is specified, <I>subaddress</I> specifies a named location in the document or database.</FONT>
</TD></TR>

<P>
</TABLE>
<P>
For information about the<I> newwindow</I>, <I>addhistory</I>,
<I>extrainfo</I>, <I>method</I>, and <I>headerinfo
</I>arguments, see the preceding section, "<A HREF="#FOLHYPMETH">The Follow
Method</A>."
<P>
<B>Microsoft Word Examples</B>

<P>
This example follows the specified URL and displays the Microsoft
home page in a new window.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>ActiveDocument.FollowHyperlink Address:="http://www.microsoft.com", _
&#09;NewWindow:=True, AddHistory:=True

</code></pre></FONT>
<P>
This example opens the HTML document named Default.htm directly
from the local hard disk.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>ActiveDocument.FollowHyperlink Address:="file://C:\Pages\Default.htm"

</code></pre></FONT>



<P>
<B>Microsoft Excel Example</B>

<P>
This example follows the specified URL address and displays the
names of all the topics related to opera.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>ActiveWorkbook.FollowHyperlink Address:="http://search.Yahoo.com/bin/search", _
&#09;AddHistory:=False, Method:=msoMethodGet, ExtraInfo:="p=Opera"

</code></pre></FONT>
<P>
<B>Microsoft PowerPoint Example</B>

<P>
This example loads the document at www.gohere.com in a new window
and adds it to the History folder.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Application.ActivePresentation.FollowHyperlink _
&#09;Address:="http://www.gohere.com", NewWindow:=True, AddToHistory:=True

</code></pre></FONT>
<P>
<B>Microsoft Access Examples</B>

<P>
The following function prompts a user for a hyperlink address
and then follows the hyperlink.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Function GetUserAddress() As Boolean
&#09;Dim strInput As String

&#09;On Error GoTo Error_GetUserAddress
&#09;strInput = InputBox("Enter a valid address")
&#09;Application.FollowHyperlink strInput, , True
&#09;GetUserAddress = True

Exit_GetUserAddress:
&#09;Exit Function

Error_GetUserAddress:
&#09;MsgBox Err &amp; ": " &amp; Err.Description
&#09;GetUserAddress = False
&#09;Resume Exit_GetUserAddress
End Function

</code></pre></FONT>
<P>
You can call this function with a procedure such as the following.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Sub CallGetUserAddress()
&#09;If GetUserAddress = True Then
&#09;&#09;MsgBox "Successfully followed hyperlink."
&#09;Else
&#09;&#09;MsgBox "Could not follow hyperlink."
&#09;End If
End Sub

</code></pre></FONT>
<P>
In Microsoft Access, you can also use the <B>FollowHyperlink</B>
method to specify a hyperlink for controls that don't support
the <B>HyperlinkAddress</B> or <B>HyperlinkSubAddress</B> properties
(controls other than labels, image controls, and command buttons,
or text boxes bound to Hyperlink fields).
<P>
This example uses the <B>FollowHyperlink</B> method to add hyperlink
behavior to an unbound object frame control. Add the following
code to the Click event of an unbound object frame named OLEUnbound1
to start a Web browser and open the specified hyperlink address
when you click the image.
<P>
<FONT COLOR="#0000FF"><B>Note&nbsp;&nbsp;&nbsp;</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
You can use similar code in Microsoft Excel, Word, or PowerPoint
to create a command button that follows a hyperlink. To do so,
add a command button by using the Control Toolbox, and then define
a Click event procedure for the button. For more information,
see "<A HREF="#CREATEHACB">Creating a Hyperlink Associated with a Command Button</A>"
earlier in this chapter.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Private Sub OLEUnbound1_Click()
&#09;Dim strAddress As String

&#09;On Error GoTo Error_OLEUnbound1

&#09;' Set reference to hyperlink address.
&#09;strAddress = "http://www.microsoft.com/"

&#09;' Follow hyperlink address.
&#09;Application.FollowHyperlink strAddress, , True

Exit_OLEUnbound1:
&#09;Exit Sub

Error_OLEUnbound1:
&#09;MsgBox Err &amp; ": " &amp; Err.Description
&#09;Resume Exit_OLEUnbound1
End Sub

</code></pre></FONT>
<P>
<B><FONT SIZE=2 COLOR="#0000FF" FACE="Verdana, Arial, Helvetica">Tip&nbsp;&nbsp;&nbsp;</FONT></B>Using
the<B> FollowHyperlink</B> method to add hyperlinks to controls
that don't support the <B>HyperlinkAddress</B> or <B>HyperlinkSubAddress</B>
properties doesn't provide any feedback to the user to indicate
that the control can follow a hyperlink. One way to inform a user
that the control contains a hyperlink is to set the control's
<B>ControlTipText </B>property so that a text message appears
when the user rests the pointer on the control.
<P>
<FONT SIZE=3 FACE="Verdana, Arial, Helvetica"><B>Handling Hyperlink Errors</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex27"></a>
<P>
If an error occurs when using the <B>Follow</B> or <B>FollowHyperlink</B>
methods in Visual Basic, an Automation error is displayed that
contains only an error number in both decimal and hexadecimal
format. For example, if xyz.htm doesn't exist, and you run the
following code in Microsoft Access:

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Application.FollowHyperlink "http://www.microsoft.com/xyz.htm"

</code></pre></FONT>



<P>
the error message shown in the following illustration occurs.
<P>
<IMG SRC="01501.gif">
<P>
This error number indicates that the requested item could not
be found. 
<P>
You can prevent these error messages from being displayed to users
of your application. To do so, check the <B>Number</B> property
of the <B>Err</B> object against a decimal value in the table
that follows. Then handle the error by either returning an appropriate
message or performing a suitable action. If you want to be certain
that all errors are handled, write an error handler that traps
the entire set of error numbers.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Function GetUserAddress() As Boolean
&#09;Dim strInput As String
&#09;Dim lngErrNumber As Long

&#09;On Error GoTo Error_GetUserAddress
&#09;strInput = InputBox("Enter a valid address")
&#09;Application.FollowHyperlink strInput, , True
&#09;GetUserAddress = True

Exit_GetUserAddress:
&#09;Exit Function

Error_GetUserAddress:
&#09;' Set variable equal to error number.
&#09;lngErrNumber = Err.Number
&#09;' Check variable against all possible error numbers.
&#09;Select Case lngErrNumber
&#09;&#09;Case -2146697211
&#09;&#09;&#09;MsgBox "Cannot locate the Internet server or proxy server."
&#09;&#09;Case -2146697210
&#09;&#09;&#09;MsgBox "The site reports that the item you requested " _
&#09;&#09;&#09;&amp; "could not be found. (HTTP/1.0 404)"
&#09;&#09;.
&#09;&#09;. ' Repeat for all possible error numbers.
&#09;&#09;.
&#09;End Select
&#09;GetUserAddress = False
&#09;Resume Exit_GetUserAddress
End Function

</code></pre></FONT>
<P>
The following table lists the error numbers and descriptions for
all errors that can occur when using the <B>Follow</B> and <B>FollowHyperlink</B>
methods. 
<P>
<TABLE WIDTH=85% VALIGN="TOP" BORDER=1 BORDERCOLOR="#C0C0C0" CELLPADDING=4 CELLSPACING=0>

<TR><TD WIDTH=30% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Decimalerror number</FONT></B>
</TD><TD WIDTH=35% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Hexadecimalerror number</FONT></B>
</TD><TD WIDTH=35% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Description</FONT></B></TD>
</TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">&nbsp;&#150;&nbsp;2146697214, &nbsp;&#150;&nbsp;2147221020 and &nbsp;&#150;&nbsp;2147012891</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">0x800C0002, 0x800401E4 and 0x80072EE5</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">The address of this site is not valid. Check the address and try again. </FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">&nbsp;&#150;&nbsp;2146697213</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">0x800C0003</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Cannot start an Internet session. </FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">&nbsp;&#150;&nbsp;2146697212 and &nbsp;&#150;&nbsp;2147012867</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">0x800C0004 and 0x80072EFD</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Cannot connect to the Internet server. </FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">&nbsp;&#150;&nbsp;2146697211</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">0x800C0005</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Cannot locate the Internet server or proxy server. </FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">&nbsp;&#150;&nbsp;2146697210 and &nbsp;&#150;&nbsp;2147012868</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">0x800C0006 and 0x80072EFC</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">The site reports that the item you requested could not be found. (HTTP/1.0 404) </FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">&nbsp;&#150;&nbsp;2146697209</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">0x800C0007</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">The Internet site reports that a connection was established but the data is not available. </FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">&nbsp;&#150;&nbsp;2146697208</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">0x800C0008</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Cannot download the information you requested. </FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">&nbsp;&#150;&nbsp;2146697207</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">0x800C0009</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">The item you requested requires proper authentication. (HTTP/1.0 401) </FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">&nbsp;&#150;&nbsp;2146697206</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">0x800C000A</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">The Internet site cannot return the object you requested. (HTTP/1.0 403) </FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">&nbsp;&#150;&nbsp;2146697205 and &nbsp;&#150;&nbsp;2147012894</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">0x800C000B and 0x80072EE2</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">The connection to this Internet site took longer than the allotted time. </FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">&nbsp;&#150;&nbsp;2146697204</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">0x800C000C</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">The site reports that the request is not valid. </FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">&nbsp;&#150;&nbsp;2146697203 and&nbsp;&#150;&nbsp;2147012888</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">0x800C000D and 0x80072EE8</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">The required Internet protocol is not installed on your computer, or the Internet address you requested may not be valid. </FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">&nbsp;&#150;&nbsp;2146697202</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">0x800C000E</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">A security problem has occurred. </FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">&nbsp;&#150;&nbsp;2146697201 and&nbsp;&#150;&nbsp;2147221014</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">0x800C000F and 0x800401EA</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Cannot open the specified file. </FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">&nbsp;&#150;&nbsp;2146697200</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">0x800C0010</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Cannot start the program needed to open this file. </FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">&nbsp;&#150;&nbsp;2147221018 and&nbsp;&#150;&nbsp;2147221164</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">0x800401E6 and 0x80040154</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">No program is registered to open this file. </FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">&nbsp;&#150;&nbsp;2147467260</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">0x80004004</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">The hyperlink cannot be followed to the destination. </FONT>
</TD></TR>

<P>
</TABLE>
<P>
<FONT COLOR="#0000FF"><B>Note&nbsp;&nbsp;&nbsp;</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>In
PowerPoint, one error number is returned for all Follow or FollowHyperlink
method errors: &nbsp;&#150;&nbsp;2147467259 (0x80004005).
<P>
<FONT SIZE=3 FACE="Verdana, Arial, Helvetica"><B>The AddToFavorites Method</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
The <B>AddToFavorites</B> method adds a shortcut to the Favorites
folder in the Windows program folder.
<P>
The syntax for the <B>AddToFavorites</B> method is:
<P>
<I>expression</I><B>.AddToFavorites</B>
<P>
<I>Expression</I> is an expression that returns either
a <B>Hyperlink</B> object or one of the objects listed in the
following table.
<P>
<TABLE WIDTH=85% VALIGN="TOP" BORDER=1 BORDERCOLOR="#C0C0C0" CELLPADDING=4 CELLSPACING=0>

<TR><TD WIDTH=41% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Application</FONT></B></TD>
<TD WIDTH=59% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Object</FONT></B></TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Microsoft Word</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>Document</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Microsoft Excel</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>Workbook</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Microsoft PowerPoint</FONT></TD>
<TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>Presentation</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2></TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Microsoft Access</FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>Application</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2></TD></TR>

<P>
</TABLE>
<P>
When referring to a <B>Hyperlink</B> object, the shortcut is the
friendly name of the document. The friendly name is determined
by the text in the &lt;TITLE&gt; HTML tag. If the document
doesn't have a friendly name, the shortcut name is resolved by
the application. If there is an existing shortcut of the same
name, it is overwritten without notification.
<P>
<B>Microsoft Word Examples</B>

<P>
In Word, the shortcut created by the <B>AddToFavorites</B> method
can refer to a <B>Document</B> object or to a <B>Hyperlink</B>
object. 
<P>
The following example creates a shortcut to Sales.doc and adds
it to the Favorites folder. If Sales.doc isn't currently open,
Word opens it from the C:\My&nbsp;Documents folder.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Sub AddDocument()
&#09;Dim isOpen As Boolean, doc As Document

&#09;For Each doc In Documents
&#09;&#09;If LCase(doc.Name) = "Sales.doc" Then isOpen = True
&#09;Next doc
&#09;If isOpen &lt;&gt; True Then Documents.Open _
&#09;&#09;FileName:="C:\My Documents\Sales.doc"
&#09;Documents("Sales.doc").AddToFavorites
End Sub

</code></pre></FONT>
<P>
To add an existing hyperlink in the document to the Favorites
folder, you must refer to the document's <B>Hyperlinks</B> collection.
The following example adds all of the hyperlinks in the document
to the Favorites folder.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Sub AddHyperlinks()
&#09;Dim H As Hyperlink
&#09;Dim Hlinks As Hyperlinks

&#09;Set Hlinks = ActiveDocument.Hyperlinks

&#09;For Each H In Hlinks
&#09;&#09;H.AddToFavorites
&#09;Next H
End Sub

</code></pre></FONT>
<P>
<B>Microsoft Excel Examples</B>

<P>
In Microsoft Excel, the shortcut created by the <B>AddToFavorites</B>
method can refer to a <B>Workbook</B> object or to a <B>Hyperlink</B>
object. 
<P>
To create a shortcut to the current workbook and add it to the
Favorites folder, use the following code.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>ActiveWorkbook.AddToFavorites

</code></pre></FONT>



<P>
To add an existing hyperlink in the current workbook to the Favorites
folder, you must refer to the workbook's <B>Hyperlinks</B> collection.
For example, to create a shortcut to the address in the first
hyperlink in the active workbook and add it to the Favorites folder,
use the following code.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>ActiveWorkbook.Sheets(1).Hyperlinks(1).AddToFavorites

</code></pre></FONT>



<P>
<B>Microsoft PowerPoint Examples</B>

<P>
In PowerPoint, the shortcut created by the <B>AddToFavorites</B>
method can refer to a <B>Presentation</B> object or to a <B>Hyperlink</B>
object. 
<P>
To add a shortcut to the current presentation, use the following
code.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Application.ActivePresentation.AddToFavorites

</code></pre></FONT>



<P>
To add a hyperlink in the current slide to the Favorites folder,
you must refer to the slide's <B>Hyperlinks</B> collection. The
following example adds all of the hyperlinks on the first slide
of the current presentation to the Favorites folder.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Sub AddHyperlinks()
&#09;Dim H As Hyperlink
&#09;Dim Hlinks As Hyperlinks

&#09;Set Hlinks = ActivePresentation.Slides(1).Hyperlinks

&#09;For Each H In Hlinks
&#09;&#09;H.AddToFavorites
&#09;Next H
End Sub

</code></pre></FONT>
<P>
<B>Microsoft Access Examples</B>

<P>
In Microsoft Access, the shortcut created by the <B>AddToFavorites</B>
method can refer to the <B>Application</B> object, which represents
the current database, or to a hyperlink associated with a <B>Control</B>
object. 
<P>
To create a shortcut to the current database and add it to the
Favorites folder, use the following code.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Application.AddToFavorites

</code></pre></FONT>



<P>
To refer to a hyperlink associated with a <B>Control</B> object,
you must use the <B>Hyperlink</B> property to access the <B>Hyperlink
</B>object. For example, to create a shortcut to a hyperlink defined
for a command button named Command0 on the current form and add
it to the Favorites folder, use the following code.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Me!Command0.Hyperlink.AddToFavorites

</code></pre></FONT>



<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH015H209">Storing Hyperlinks in Microsoft Access
Tables</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
In Microsoft Access&nbsp;97, you can create a field with the Hyperlink
data type to store hyperlink addresses in a table. You can follow
a hyperlink stored in a Microsoft Access table by clicking it
in the table. However, typically the field is bound to a text
box, list box, or combo box control on a form. Like other bound
fields, as the user moves from record to record, the value in
the control changes to display the current record's hyperlink
value. For example, you can use hyperlinks in this way to create
an application in which users can go to Web pages, or to other
content on the Internet or an intranet, from a predefined list
of addresses.
<P>
<a name="dex28"></a>
<P>
In addition to storing hyperlinks to Internet addresses, you can
also use hyperlinks in Microsoft Access to go to database objects
and other Office documents. For example, you could create a document
management application that uses a Hyperlink field to store paths
to Word documents on a network. Users of such an application could
add records to track new documents, or click the hyperlink in
a previously added record to open the specified document.
<P>
To create a Hyperlink field, add a field in table Design view
and set its <B>DataType</B> property to Hyperlink. You can also
create a Hyperlink field in table Datasheet view by clicking <B>Hyperlink
Column</B> on the <B>Insert</B> menu.
<P>
<A NAME="HYPFIELDSTOR"></A>
<FONT SIZE=3 FACE="Verdana, Arial, Helvetica"><B>The Hyperlink Field Storage Format</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex29"></a>
<P>
In Microsoft Access, a Hyperlink field stores up to three pieces
of information: the <I>displaytext</I>, the <I>address</I>,
and the<I> subaddress</I>. Each piece is separated
by a pound sign (#), in the following format:
<P>
<I>displaytext</I><B>#</B><I>address</I><B>#</B><I>subaddress</I>
<P>
The following table describes each piece of the Hyperlink field
storage format.
<P>
<TABLE WIDTH=85% VALIGN="TOP" BORDER=1 BORDERCOLOR="#C0C0C0" CELLPADDING=4 CELLSPACING=0>

<TR><TD WIDTH=30% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>Piece</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2></TD><TD WIDTH=35% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>Description</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
</TD><TD WIDTH=35% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>Required?</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2></TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><I>displaytext</I></FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">The text the user sees in the Hyperlink field in a table, or in a text box bound to the Hyperlink field. You can set the display text to any text string. 
For example, you may want the display text to be a descriptive name for the Web site or object specified by the <I>address</I> and <I>subaddress</I>. If you do not specify display text, Microsoft Access displays the value of <I>address,</I> or <I>subaddress</I> if <I>address</I> is also not specified.</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">No</FONT></TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><I>address</I><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"> </FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">A valid URL that points to a page or file on the Internet or an intranet, or the path to a file on a local hard disk or LAN. 
If you enter a path on a LAN, you can omit a mapped drive letter and use the universal naming convention (UNC) format: <B>\\</B><I>server</I><B>\</B><I>share</I><B>\</B><I>path</I><B>\</B><I>filename</I>. This prevents the path from becoming invalid if the database is later copied to another computer's hard disk or into a shared network folder.</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Yes, unless <I>subaddress</I> points to an object in the current database (.mdb) file.</FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"> <I>subaddress</I></FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">The location within a file or document; for example, a database object, such as a form or report. When referring to a database object, the name of the object should be preceded by its type: Table, Query, Form, Report, Macro, or Module. Other possible values for <I>subaddress</I> include a bookmark in a Word document, a NAME anchor tag in an HTML document, a PowerPoint slide, or a cell in a Microsoft Excel worksheet.</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">No</FONT></TD></TR>

<P>
</TABLE>
<P>
Each piece of the Hyperlink field storage format can be up to
2,000 characters. The maximum length of the entire Hyperlink field
value is 6,000 characters.
<P>
The following table gives examples of valid Hyperlink field values.
<P>
<TABLE WIDTH=85% VALIGN="TOP" BORDER=1 BORDERCOLOR="#C0C0C0" CELLPADDING=4 CELLSPACING=0>

<TR><TD WIDTH=41% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Hyperlink field value</FONT></B>
</TD><TD WIDTH=59% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Goes to</FONT></B></TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Cajun Delights#http://www. cajundelights.com/cajun.htm#</FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">The Cajun Delights Web page. Only the words "Cajun Delights" are displayed in the field or control.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">#http://www.cajundelights.com/cajun.htm#</FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">The Cajun Delights Web page. The text "http://www.cajundelights.com" appears in the field or control because no display text is specified.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">#http://www.cajundelights. com/cajun.htm#Price</FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">The HTML anchor with the NAME attribute Price on the Cajun Delights Web page. The text "http://www.cajundelights. com/cajun.htm" is displayed.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Resume#c:\windows\personal\resume.doc#</FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">A Microsoft Word file named Resume.doc located in the \Windows\Personal folder. Only the word "Resume" is displayed in the field or control.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">#c:\windows\personal\resume.doc#</FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">A Microsoft Word file named Resume.doc located in the \Windows\Personal folder. The text "c:\windows\personal\resume.doc" appears in the field or control because no display text is specified.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">#c:\windows\personal\resume. doc#Qualifications</FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">The section in the Resume.doc Word file marked with the bookmark name Qualifications. The text "c:\windows\personal\resume.doc" is displayed.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">#\\databases\samples\northwind.mdb#Form Suppliers</FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">The Suppliers form in the Northwind sample application located in the Samples share on the Databases server on a LAN (UNC format path). The text "\\databases\samples\northwind.mdb" is displayed.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Suppliers Form##Form Suppliers</FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">The Suppliers form in the current database. The words "Suppliers Form" are displayed in the field or control.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">#c:\windows\personal\1996 Sales.ppt#13</FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Slide 13 in the 1996 Sales PowerPoint presentation located in the \Windows\Personal folder. The text "c:\windows\personal\1996 Sales.ppt" is displayed.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">#c:\windows\personal\budget.xls#Sheet1!A2</FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">The A2 cell in Sheet1 of the Budget.xls file located in the \Windows\Personal folder. The text "c:\windows\personal\budget.xls" is displayed.</FONT>
</TD></TR>

<P>
</TABLE>
<P>
You can enter data in a Hyperlink field in three ways: by using
the <B>Insert Hyperlink</B> dialog box (available through the
<B>Hyperlink</B> command on the <B>Insert</B> menu), by typing
an address directly into a Hyperlink field, or by using Data Access
Objects (DAO) methods in Visual Basic code. When you use the <B>Insert
Hyperlink</B> dialog box or type directly into a Hyperlink field,
Microsoft Access adds the two pound signs (#) that delimit the
parts of the hyperlink data. When you use DAO methods, your code
must include the two pound signs to delimit the parts of the hyperlink
data.
<P>
You can display the stored hyperlink format in a table by moving
the insertion point into a Hyperlink field using the keyboard,
and then pressing <FONT SIZE=2 FACE="Verdana, Arial, Helvetica">F2</FONT>. You can edit the stored
hyperlink in this form, but be careful to enter pound signs in
the appropriate locations. You can add or edit the <I>displaytext</I>
part of a Hyperlink field by right&#173;clicking a hyperlink in
a table, pointing to <B>Hyperlink</B> on the shortcut menu, and
then typing the display text in the <B>Display Text</B> box. You
can add or edit the <I>address</I> or <I>subaddress</I>
part of a Hyperlink field by right&#173;clicking a hyperlink in
a table, pointing to <B>Hyperlink</B> on the shortcut menu, and
then selecting <B>Edit Hyperlink</B>.
<P>
<FONT SIZE=3 FACE="Verdana, Arial, Helvetica"><B>The HyperlinkPart Function</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
The <B>HyperlinkPart</B> function returns information about data
stored in a Hyperlink field. The syntax for the <B>HyperlinkPart</B>
function is:
<P>
<I>object</I><B>.HyperlinkPart(</B><I>hyperlink</I><B>
As Variant,</B> <I>part</I> <B>As Integer)</B>
<P>
The following table describes the arguments of the <B>HyperlinkPart</B>
function.
<P>
<TABLE WIDTH=85% VALIGN="TOP" BORDER=1 BORDERCOLOR="#C0C0C0" CELLPADDING=4 CELLSPACING=0>

<TR><TD WIDTH=41% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Argument</FONT></B></TD><TD WIDTH=59% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Description</FONT></B>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><I>object</I></FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Optional. The <B>Application </B>object.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><I>hyperlink</I></FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Required. A <B>Variant </B>that represents the data stored in a Hyperlink field.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><I>part</I></FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Optional. The value for the <I>part</I> argument is an intrinsic constant that represents the information you want returned by the <B>HyperlinkPart </B>function.</FONT>
</TD></TR>

<P>
</TABLE>
<P>
You can set the <I>part</I> argument to the following
constants.
<P>
<TABLE WIDTH=85% VALIGN="TOP" BORDER=1 BORDERCOLOR="#C0C0C0" CELLPADDING=4 CELLSPACING=0>

<TR><TD WIDTH=30% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Constant</FONT></B></TD><TD WIDTH=35% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Value</FONT></B>
</TD><TD WIDTH=35% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Description</FONT></B></TD>
</TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>acDisplayedValue</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">0</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">(Default) The underlined text displayed in a hyperlink.</FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>acDisplayText</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">1</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">The <I>displaytext</I> part of a Hyperlink field.</FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>acAddress</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">2</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">The <I>address</I> part of a Hyperlink field.</FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>acSubAddress</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">3</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">The <I>subaddress</I> part of a Hyperlink field.</FONT>
</TD></TR>

<P>
</TABLE>
<P>
<FONT COLOR="#0000FF"><B>Note&nbsp;&nbsp;&nbsp;</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>If
you use the <B>HyperlinkPart</B> function in an SQL statement or a query,
the part argument is required and you can't set it to the constants
listed in the preceding table&nbsp;&#151; you must use the
value instead.
<P>
You use the <B>HyperlinkPart</B> function to return one of three
values stored in a Hyperlink field (<I>displaytext</I>,
<I>address</I>, or <I>subaddress</I>)
or the displayed value. The value returned depends on the setting
of the <I>part</I> argument. If you don't use the
<I>part</I> argument, the<B> HyperlinkPart</B> function
returns the value Microsoft Access displays for the hyperlink
(which corresponds to the <B>acDisplayedValue</B> setting for
the <I>part</I> argument).
<P>
When a value is provided in the <I>displaytext</I>
part of a Hyperlink field, the value displayed by Microsoft Access
will be the same as the <I>displaytext</I> setting.
When there's no value in the <I>displaytext</I> part
of a Hyperlink field, Microsoft Access displays the value of the
<I>address</I> or <I>subaddress</I> part
of the Hyperlink field, depending on which value is first present
in the field.
<P>
The following table shows the values returned by the <B>HyperlinkPart</B>
function for data stored in a Hyperlink field.
<P>
<TABLE WIDTH=85% VALIGN="TOP" BORDER=1 BORDERCOLOR="#C0C0C0" CELLPADDING=4 CELLSPACING=0>

<TR><TD WIDTH=41% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Hyperlink field data</FONT></B>
</TD><TD WIDTH=59% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">HyperlinkPart function returned values</FONT></B>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">#http://www.microsoft.com/#</FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>acDisplayedValue</B>: http://www.microsoft.com/
<BR><B>acDisplayText</B>: No value returned.
<BR><B>acAddress</B>: http://www.microsoft.com/
<BR><B>acSubAddress</B>: No value returned.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Microsoft#http://www.microsoft.com/#</FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>acDisplayedValue</B>: Microsoft
<BR><B>acDisplayText</B>: Microsoft
<BR><B>acAddress</B>: http://www.microsoft.com/
<BR><B>acSubAddress</B>: No value returned.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Customers##Form Customers</FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>acDisplayedValue</B>: Customers<B>
<BR>acDisplayText</B>: Customers
<BR><B>acAddress</B>: No value returned.<B>
<BR>acSubAddress</B>: Form Customers</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">##Form Customers</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>acDisplayedValue</B>: Form Customers
<BR><B>acDisplayText</B>: No value returned.
<BR><B>acAddress</B>: No value returned.
<BR><B>acSubAddress</B>: Form Customers</FONT>
</TD></TR>

<P>
</TABLE>
<P>
The following example uses all four of the <I>part</I>
argument constants to display information returned by the <B>HyperlinkPart</B>
function for each record in a table containing a Hyperlink field.
To try this example, paste the DisplayHyperlinkParts procedure
into the Declarations section of a module. You can call the DisplayHyperlinkParts
procedure from the Debug window, passing to it the name of a table
that contains hyperlinks and the name of the field that contains
Hyperlink data, as shown in the following example.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>DisplayHyperlinkParts "MyHyperlinkTableName", "MyHyperlinkFieldName"

Sub DisplayHyperlinkParts(strTable As String, strField As String)
&#09;Dim dbs As Database, rst As Recordset
&#09;Dim strMsg As String

&#09;Set dbs = CurrentDb
&#09;Set rst = dbs.OpenRecordset(strTable)

&#09;While Not rst.EOF&#09;&#09;' For each record in table.
&#09;&#09;strMsg = "DisplayValue = " &amp; HyperlinkPart(rst(strField), acDisplayedValue) _
&#09;&#09;&#09;&amp; vbCrLf &amp; "DisplayText = " &amp; HyperlinkPart(rst(strField), acDisplayText) _
&#09;&#09;&#09;&amp; vbCrLf &amp; "Address = " &amp; HyperlinkPart(rst(strField), acAddress) _
&#09;&#09;&#09;&amp; vbCrLf &amp; "SubAddress = " &amp; HyperlinkPart(rst(strField), acSubAddress)
&#09;&#09;' Show parts returned by HyperlinkPart function.
&#09;&#09;MsgBox strMsg
&#09;&#09;rst.MoveNext
&#09;Wend
End Sub

</code></pre></FONT>
<P>
When you use the <B>HyperlinkPart</B> function in a query, the
<I>part</I> argument is required. For example, the
following SQL statement uses the <B>HyperlinkPart</B> function
to return information about data stored as a Hyperlink data type
in the URL field of the Links table:

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>SELECT Links.URL, HyperlinkPart([URL],0)
AS Display, HyperlinkPart([URL],1)
AS Name, HyperlinkPart([URL],2)
AS Addr, HyperlinkPart([URL],3) AS SubAddr
FROM Links;

</code></pre></FONT>
<P>
For another example of using the <B>HyperlinkPart</B> function,
see "<A HREF="#DISDOC2">Displaying a Document in the WebBrowser Control by Using a Hyperlink Stored in a Table</A>" later in this chapter.
<P>
<FONT SIZE=3 FACE="Verdana, Arial, Helvetica"><B>Following a Hyperlink in a Text Box Bound to a Hyperlink Field
</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
When you use the <B>Follow</B> method in Microsoft Access, you
don't need to know the address specified by a control's <B>HyperlinkAddress</B>
or <B>HyperlinkSubAddress</B> property, or by the Hyperlink field
that is bound to a text box, list box, or combo box control. You
only need to know the name of the control that contains the hyperlink.
<P>
This example uses the <B>Follow</B> method to automatically open
the Web page specified in a text box bound to a Hyperlink field
on a form whenever the user moves to a new record. Add the following
code to the OnCurrent event of a form.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Private Sub Form_Current()
&#09;Dim txt As TextBox

&#09;On Error GoTo Error_Form1

&#09;' Set reference to the txtAddress text box bound to a Hyperlink field.
&#09;Set txt = txtAddress

&#09;' Follow the hyperlink.
&#09;txt.Hyperlink.Follow

Exit_Form1:
&#09;Exit Sub

Error_Form1: 
&#09;MsgBox Err &amp; ": " &amp; Err.Description
&#09;Resume Exit_Form1
End Sub

</code></pre></FONT>
<P>
For another example of following a hyperlink stored in a table,
see "<A HREF="#DISDOC2">Displaying a Document in the WebBrowser Control by Using a Hyperlink Stored in a Table</A>" later in this chapter.
<P>
<FONT SIZE=3 FACE="Verdana, Arial, Helvetica"><B>Creating a Hyperlink Field with Visual Basic</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
You can use Data Access Objects (DAO) code to create a field with
the Hyperlink field type. To do so, you must first create a field
with the Memo data type and then set the <B>Attributes</B> property
of the field to <B>dbHyperlinkField</B>. The following example
creates a table named Hyperlinks that contains a Text field and
a Hyperlink field.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Sub CreateHyperlinkField()
&#09;Dim db As Database
&#09;Dim tbl As TableDef

&#09;Set db = CurrentDb()

&#09;Set tbl = db.CreateTableDef("Hyperlinks")

&#09;With tbl
&#09;&#09;.Fields.Append .CreateField("Text", dbText)
&#09;&#09;.Fields.Append .CreateField("Hyperlink", dbMemo)
&#09;&#09;.Fields("Hyperlink").Attributes = dbHyperlinkField
&#09;End With

&#09;db.TableDefs.Append tbl
&#09;RefreshDatabaseWindow
End Sub

</code></pre></FONT>
<P>
<A NAME="PG015C4"></A>

</MENU></MENU></MENU>
<MENU>


<FONT SIZE=5 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH015H104">Saving Documents and Objects as HTML</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
<MENU><MENU>

<P>
<a name="dex30"></a>
<P>
All of the Office&nbsp;97 applications provide ways to save their
data as HTML documents. Microsoft Access and Word provide ways
of doing so by using Visual Basic.
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH015H210">Saving Microsoft Access Data as HTML Documents</A>
</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
Microsoft Access has five ways to save data from your database
as HTML documents:
<P>
<B>Save data as static HTML documents&nbsp;&nbsp;&nbsp;</B>You
can create <I>static</I> HTML documents from table,
query, and form datasheets, and from reports. When you save data
as static HTML documents, the resulting pages reflect the state
of the data at the time it was saved, like a snapshot. If your
data changes, you must save the pages again to share the new data.
<P>
<B>Save table, query, and form datasheets as IDC/HTX files&nbsp;&nbsp;&nbsp;</B>You
can save your table, query, and form datasheets as Internet Database
Connector/HTML extension (IDC/HTX) files that generate HTML documents
by querying a copy of your database located on a Web server for
current data.
<P>
<B>Save forms and datasheets as Active Server Pages&nbsp;&nbsp;&nbsp;</B>You
can save your forms as Active Server Pages (ASP) that emulate
most of the functionality of your forms and display data from
a database located on a Web server. You can also save table, query,
and form datasheets as Active Server Pages that display current
data from a copy of your database located on a Web server.
<P>
<B>Automate the publishing of dynamic and static HTML documents
by using the Publish to the Web Wizard&nbsp;&nbsp;&nbsp;</B>You
can use the Publish to the Web Wizard to automate the process
of saving multiple objects to any combination of all three file
types. In the Publish to the Web Wizard, IDC/HTX files and Active
Server Pages (ASP) files are collectively referred to as <I>dynamic</I>
Web pages because these file types create HTML documents by querying
the database to include current data.
<P>
<B>Automate the publishing of dynamic and static HTML documents
by using the OutputTo method or action&nbsp;&nbsp;&nbsp;</B>You
can use the <B>OutputTo</B> method in Visual Basic and the OutputTo
action in macros to automate the process of saving objects to
any of the three file types.
<P>
The following sections discuss each of these options in more detail.
<P>
<FONT SIZE=3 FACE="Verdana, Arial, Helvetica"><B>Saving Data as Static HTML Documents</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
With Microsoft Access, you can save table, query, and form datasheets,
and reports as static HTML documents.
<P>
<B><FONT COLOR="#0000FF"><IMG SRC="Proced.gif">To
save a table, query, or form datasheet, or a report as a static
HTML document</FONT></B>
<P>

<OL>
<P>
<LI>In the Database window,
click the table, query, form, or report you want to save.
<P>
<LI>On
the <B>File</B> menu, click <B>Save As/Export</B>.
<P>
<LI>In
the <B>Save As</B> dialog box, click <B>To an External File or
Database</B>, and then click <B>OK</B>.
<P>
<LI>In the
Save as type box, click HTML Documents (*.html; *.htm).
<P>
<LI>If
you want to preserve formatting, select the <B>Save Formatted</B>
check box. To automatically open the resulting HTML document in
your Web browser, select the <B>Autostart</B> check box.
<P>
<LI>Specify
the file name and location to save the file, and then click <B>Export</B>.
<P>
<LI>In
the <B>HTML Output Options</B> dialog box, if you want Microsoft
Access to merge an HTML template with the resulting HTML document,
specify that as well, and then click <B>OK</B>.
<P>
For information about HTML templates, see "<A HREF="#USINGHTMLTEMP">Using
an HTML Template When You Save Data as HTML Documents</A>" later
in this chapter.
<P>
</OL>

<P>
You can also save data as static HTML documents by using the Publish
to the Web Wizard (available through the<B> Save As HTML</B> command
on the <B>File</B> menu), the <B>OutputTo</B> method in code,
or the OutputTo action in macros. For information about using
the <B>OutputTo</B> method, see "<A HREF="#SAVHTMLDOC">Saving HTML Documents by Using the OutputTo Method</A>" later in this chapter.
<P>
When saving table, query, and form datasheets, Microsoft Access
saves each datasheet to a single HTML file. Microsoft Access saves
reports as multiple HTML documents, with one HTML file per printed
page. To name each page, Microsoft Access uses the name of the
object and appends _Page<I>nn</I> to the end of each
page's file name after the first page; for example, ProductList.htm,
ProductList_Page2.htm, ProductList_Page3.htm, and so on.
<P>
<B>Saving Table, Query, and Form Datasheets as Static HTML Documents
</B>

<P>
When you save a table, query, or form datasheet as an HTML document,
the HTML document generated is based on the table or query associated
with the datasheet, including the current setting of the <B>OrderBy</B>
or <B>Filter</B> property of the table or query. If the datasheet
contains a parameter query, Microsoft Access first prompts you
for the parameter values, then exports the results.
<P>
If you select the <B>Save Formatted</B> check box, the HTML document
contains an HTML table that reflects as closely as possible the
appearance of the datasheet by using the appropriate HTML tags
to specify color, font, and alignment. The HTML document follows
as closely as possible the page orientation and margins of the
datasheet. Whenever you want to use settings that are different
from the default orientation and margins for a datasheet, you
must first open the datasheet, and then use the <B>Page Setup</B>
command (<B>File</B> menu) to change settings before you save
the datasheet as an HTML document.
<P>
If you select the <B>Save Formatted</B> check box, and a field
has a <B>Format</B> or <B>InputMask</B> property setting, those
settings are reflected in the data in the HTML document. For example,
if a field's <B>Format</B> property is set to Currency, the data
in the HTML document is formatted with a dollar sign, a comma
as the thousand separator, and two decimal places; for example,
$1,123.45.
<P>
<B>Saving Reports as Static HTML Documents</B>

<P>
When you save a report as HTML documents, the series of HTML documents
generated is based on the report's underlying table or query,
including the current <B>OrderBy</B> or <B>Filter</B> property
settings of the table or query. If the report contains a parameter
query, Microsoft Access first prompts you for the parameter values,
then exports the results.
<P>
The HTML documents simulate as closely as possible the appearance
of the report by creating the appropriate HTML tags to retain
attributes such as color, font, and alignment. The proportions
and layout of the actual report follow as closely as possible
the page orientation and margins set for the report. To change
the page orientation and margins, open the report in Print Preview,
and then use the <B>Page Setup</B> command to change settings
before you save the report as HTML documents. These settings are
saved from session to session for reports, so if you change them
once, they will be used the next time you save the form or report
as HTML documents.
<P>
Most controls and features of a report, including subreports,
are supported except the following: lines, rectangles, OLE objects,
and subforms. However, you can use an HTML template file to include
report header and footer images in your output files. For an example,
see the Nwindtem.htm template file in the C:\Program&nbsp;Files\Microsoft&nbsp;Office\Office\Samples
folder.
<P>
<B>Navigation Controls When Saving Multiple HTML Documents Per
Object</B>

<P>
If you specify an HTML template that contains placeholders for
navigation controls when you save a report as multiple HTML documents,
Microsoft Access creates hyperlinks that the user can use to go
to the first, previous, next, and last pages in the publication.
Where Microsoft Access places the hyperlinks depends on where
you locate the placeholders in the HTML template. For information
about HTML templates and placeholders, see "<A HREF="#USINGHTMLTEMP">Using an HTML Template When You Save Data as HTML Documents</A>" later in this
chapter.
<P>
<B>How Microsoft Access Saves Data Types in HTML Format</B>

<P>
When you save data as static HTML documents, Microsoft Access
saves values from most data types as strings and formats them
as closely as possible to their appearance in the datasheet or
report. All unformatted data types, except Text and Memo, are
saved with right alignment as the default. Text and Memo fields
are saved with left alignment by default.
<P>
There are two exceptions:
<P>

<UL>
<P>
<LI>OLE Object fields are not
saved. 
<P>
<LI>Hyperlink field values are saved as
hyperlinks in the HTML document. The hyperlinks use HTML anchor
tags with an HREF attribute, as described in the following table.
<P>
</UL>

<TABLE WIDTH=85% VALIGN="TOP" BORDER=1 BORDERCOLOR="#C0C0C0" CELLPADDING=4 CELLSPACING=0>

<TR><TD WIDTH=41% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">
<B>If</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2></TD>
<TD WIDTH=59% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Anchor tag format</FONT></B></TD>
</TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">The hyperlink doesn't include a subaddress</FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">&lt;A HREF="<I>address</I>"&gt;<I>displaytext</I>&lt;/A&gt; </FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">The hyperlink includes a subaddress</FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">&lt;A HREF="<I>address</I>#<I>subaddress</I>"&gt;<I>displaytext</I>&lt;/A&gt; </FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Display text isn't specified</FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"> &lt;A HREF="<I>address</I>"&gt;<I>address</I>&lt;/A&gt;</FONT>
</TD></TR>

<P>
</TABLE>
<P>
Microsoft Access determines the <I>displaytext</I>,
<I>address</I>, and <I>subaddress</I>
values by parsing the value stored in the Hyperlink field. For
information about the <I>displaytext</I>, <I>address</I>,
and <I>subaddress</I> values, see "<A HREF="#HYPFIELDSTOR">The Hyperlink
Field Storage Format</A>" earlier in this chapter.
<P>
<A NAME="USINGHTMLTEMP"></A>
<B>Using an HTML Template When You Save Data as HTML Documents
</B>

<P>
When you save data as HTML documents, you can use an HTML template
to give a consistent look to the HTML documents you create. For
example, you can include your company's logo, name, and address
in the page's header, use the background that is used throughout
your company, or include standard text in the header or footer
of the HTML document.
<P>
<FONT COLOR="#0000FF"><B>Note&nbsp;&nbsp;&nbsp;</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>You
can use an HTML template when you save data as static HTML documents,
when you save datasheets as IDC/HTX files, when you save a form
or datasheet as an Active Server Page, and when you use the Publish
to the Web Wizard.
<P>
The HTML template can be any HTML document; that is, a text file
that includes HTML tags and user&#173;specified text and references.
In addition, the HTML template can include placeholders that tell
Microsoft Access where to insert certain pieces of data in the
HTML documents. When data is saved as HTML documents, the placeholders
are replaced with data. The following table describes each of
the placeholders that you can use in an HTML template.
<P>
<TABLE WIDTH=85% VALIGN="TOP" BORDER=1 BORDERCOLOR="#C0C0C0" CELLPADDING=4 CELLSPACING=0>

<TR><TD WIDTH=30% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>Placeholder</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2></TD><TD WIDTH=35% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Description</FONT></B>
</TD><TD WIDTH=35% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Location</FONT></B></TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">&lt;!--AccessTemplate_Title--&gt;</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">The name of the object being saved</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Between &lt;TITLE&gt; and &lt;/TITLE&gt;</FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">&lt;!--AccessTemplate_Body--&gt;</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">The data or object being saved</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Between &lt;BODY&gt; and &lt;/BODY&gt;</FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">&lt;!--AccessTemplate_FirstPage--&gt;</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">An anchor tag to the first page</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Between &lt;BODY&gt; and &lt;/BODY&gt; or after &lt;/BODY&gt;</FONT>
</TD></TR>

<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">&lt;!--AccessTemplate_PreviousPage--&gt;</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">An anchor tag to the previous page</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Between &lt;BODY&gt; and &lt;/BODY&gt; or after &lt;/BODY&gt;</FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">&lt;!--AccessTemplate_NextPage--&gt;</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">An anchor tag to the next page</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Between &lt;BODY&gt; and &lt;/BODY&gt; or after &lt;/BODY&gt;</FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">&lt;!--AccessTemplate_LastPage--&gt;</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">An anchor tag to the last page</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Between &lt;BODY&gt; and &lt;/BODY&gt; or after &lt;/BODY&gt;</FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">&lt;!--AccessTemplate_PageNumber--&gt;</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">The current page number </FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Between &lt;BODY&gt; and &lt;/BODY&gt; or after &lt;/BODY&gt;</FONT>
</TD></TR>

<P>
</TABLE>
<P>
When you install Microsoft Access, sample HTML template files
and graphics files are installed in the Access subfolder of the
Templates folder. The default location of this folder is C:\Program
Files\Microsoft Office\Templates\Access.
<P>
<FONT SIZE=3 FACE="Verdana, Arial, Helvetica"><B>Saving Table, Query, and Form Datasheets as IDC/HTX Files
</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex31"></a>
<P>
With Microsoft Access, you can save a table, query, or form datasheet
as Internet Database Connector/HTML extension<I> </I>(IDC/HTX)
files that generate HTML documents by querying a copy of your
database located on a Web server. In contrast to static HTML documents,
which contain the data that was current at the time the HTML document
was created, IDC/HTX files generate an HTML page with current
data from your database; therefore, the HTML documents that they
generate are called dynamic.
<P>
<B><FONT COLOR="#0000FF"><IMG SRC="Proced.gif">To
save a table, query, or form datasheet as IDC/HTX files</FONT></B>
<P>

<OL>
<P>
<LI>In the Database window,
click the table, query, or form you want to save.
<P>
<LI>On
the <B>File</B> menu, click <B>Save As/Export</B>.
<P>
<LI>In
the <B>Save As</B> dialog box, click <B>To an External File or
Database</B>, and then click <B>OK</B>.
<P>
<LI>In the
Save as type box, click Microsoft IIS 1-2 (*.htx;*.idc).
<P>
<LI>Specify
the file name and location to save the files, and then click <B>Export</B>.
<P>
<LI>In
the <B>HTX/IDC Output Options</B> dialog box, specify:
<P>
<UL>
<P>
<LI>The data source name that will be used for the database.
<P>
<LI>A user name and password, if required to open the database.
<P>
<LI>An HTML template, if you want Microsoft Access to merge one with
the HTML extension (HTX) file.
</UL>
<P>
<FONT COLOR="#0000FF"><B>Note&nbsp;&nbsp;&nbsp;</B></FONT>You
can specify any of these items later, except the HTML template,
by editing the resulting IDC file in a text editor such as Notepad.
<P>
<LI>Click <B>OK</B>.
</OL>

<P>
If the datasheet contains a parameter query, Microsoft Access
simulates the <B>Enter Parameter Value</B> dialog box by creating
an additional HTML parameter page that contains an HTML form text
box control to enter the parameter value and a button to run the
query. You must display this HTML parameter page before you display
the datasheet HTML page in your Web application. If you use the
Publish to the Web Wizard and you specify a switchboard page,
the HTML parameter page is added to the switchboard page. When
you export, Microsoft Access runs the query and displays the <B>Enter
Parameter Value</B> dialog box. You don't need to enter values
in this dialog box&nbsp;&#151; just click <B>OK</B> to continue.
<P>
You can also save a table, query, or form datasheet as IDC/HTX
files by using the Publish to the Web Wizard (available through
the<B> Save As HTML</B> command on the <B>File</B> menu), the
<B>OutputTo</B> method in code, or the OutputTo action in macros.
For information about using the <B>OutputTo</B> method, see "<A HREF="#SAVHTMLDOC">Saving HTML Documents by Using the OutputTo Method</A>" later in this
chapter.
<P>
<B>How the Internet Database Connector Works</B>

<P>
When you save a table, form, or query datasheet as Internet Connector
files, Microsoft Access creates two files: an <I>Internet
Database Connector (IDC) file</I> and <I>HTML extension
(HTX) file</I>. These files are used to generate a Web page
that displays current data from your database.
<P>
An IDC file contains the necessary information to connect to a
specified Open Database Connectivity (ODBC) data source and to
run an SQL statement that queries the database. The information
needed to connect to the database includes the data source name,
and if user&#173;level security is established for the database,
the user name and password required to open the database. For
example, if you save the Current Product List query datasheet
from the Northwind sample application as IDC/HTX files, Microsoft
Access creates the following IDC file:

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Datasource:Northwind
Template:Current Product List.htx
SQLStatement:SELECT [Product List].ProductID, [Product List].ProductName
+FROM Products AS [Product List]
+WHERE ((([Product List].Discontinued)=No))
+ORDER BY [Product List].ProductName;

Password:
Username:

</code></pre></FONT>
<P>
An IDC file also contains the name and location of an HTML extension
(HTX) file. The HTX file is a template for the HTML document;
it contains field merge codes that indicate where the values returned
by the SQL statement should be inserted. For example, if you save
the Current Product List query datasheet from the Northwind sample
application as IDC/HTX files, Microsoft Access creates the following
HTX file:

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>&lt;HTML&gt;
&lt;TITLE&gt;Current Product List&lt;/TITLE&gt;
&lt;BODY&gt;
&lt;TABLE BORDER=1 BGCOLOR=#ffffff&gt;&lt;FONT FACE="Arial" COLOR=#000000&gt;
&lt;CAPTION&gt;&lt;B&gt;Current Product List&lt;/B&gt;&lt;/CAPTION&gt;
&lt;THEAD&gt;
&lt;TR&gt;
&lt;TD&gt;&lt;FONT SIZE=2 FACE="Arial" COLOR=#000000&gt;Product ID&lt;/FONT&gt;&lt;/TD&gt;
&lt;TD&gt;&lt;FONT SIZE=2 FACE="Arial" COLOR=#000000&gt;Product Name&lt;/FONT&gt;&lt;/TD&gt;
&lt;/TR&gt;
&lt;/THEAD&gt;
&lt;TBODY&gt;
&lt;%BeginDetail%&gt;
&lt;TR VALIGN=TOP&gt;
&lt;TD ALIGN=RIGHT&gt;&lt;FONT SIZE=2 ACE="Arial" COLOR=#000000&gt;&lt;%ProductID%&gt;&lt;BR&gt;&lt;/FONT&gt;&lt;/TD&gt;
&lt;TD&gt;&lt;FONT SIZE=2 FACE="Arial" COLOR=#000000&gt;&lt;%ProductName%&gt;&lt;BR&gt;&lt;/FONT&gt;&lt;/TD&gt;
&lt;/TR&gt;
&lt;%EndDetail%&gt;
&lt;/TBODY&gt;
&lt;TFOOT&gt;&lt;/TFOOT&gt;
&lt;/BODY&gt;
&lt;/HTML&gt;

</code></pre></FONT>
<P>
Microsoft Access saves the HTX file to be used with an IDC file
with the same name as the IDC file, except with an .htx file name
extension rather than an .idc file name extension. After the database
information has been merged into the HTML document, it is returned
to the Web browser.
<P>
If you open Current Product List.idc from a Microsoft Internet
Information Server that has an appropriately defined Northwind
data source name (DSN), the Web page shown in the following illustration
is generated.
<P>
<IMG SRC="01502.gif">
<P>
<FONT COLOR="#0000FF"><B>Note&nbsp;&nbsp;&nbsp;</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>You
can also reference an HTML template when you create IDC and HTX
files. An HTML template contains additional HTML code to enhance
the appearance of the resulting pages. If you specify an HTML
template, it is merged with the HTX file. For information about
the format of an HTML template, see "<A HREF="#USINGHTMLTEMP">Using an HTML Template When You Save Data as HTML Documents</A>" earlier in this chapter.
<P>
<A NAME="REQIDCHTX"></A>
<B>Requirements for Using IDC/HTX Files</B>

<P>
To use IDC/HTX files, your database and the IDC/HTX files must
reside on a computer running one of the following operating systems
and Internet server platforms:
<P>

<UL>
<P>
<LI>Microsoft Windows NT Server
version 3.51 or 4.0 running Microsoft Internet Information Server
version 1.0, 2.0, or 3.0
<P>
<LI>Microsoft Windows NT
Workstation version 4.0 and Microsoft Peer Web Services
<P>
<LI>Microsoft
Windows&nbsp;95 and Microsoft Personal Web Server
<P>
</UL>

<P>
Microsoft Internet Information Server, Microsoft Peer Web Services,
and Microsoft Personal Web Server use a component called the Internet
Database Connector (Httpodbc.dll) to generate dynamic Web pages
from IDC/HTX files.
<P>
The Internet Database Connector component requires ODBC drivers
to access a database. To access a Microsoft Access database, the
Microsoft Access Desktop driver (Odbcjt32.dll) must be installed
on your Web server. This driver is installed when you install
Microsoft Internet Information Server if you select the <B>ODBC
Drivers And Administration</B> check box during Setup.
<P>
<a name="dex32"></a>
<P>
However, the Microsoft Access Desktop driver isn't installed with
Microsoft Personal Web Server. If Microsoft Access is installed
on the computer you are using to run Microsoft Personal Web Server,
and if you selected the driver when you installed Microsoft Access,
the driver is already available. If you don't have Microsoft Access
installed on the computer you are using to run Microsoft Personal
Web Server, you must install the Microsoft Access Desktop driver.
<P>
<B><FONT COLOR="#0000FF"><IMG SRC="Proced.gif">To
install the Microsoft Access Desktop driver</FONT></B>
<P>

<OL>
<P>
<LI>Run the Microsoft Office
or Microsoft Access Setup program.
<P>
<LI>If you are
running Setup for the first time, click <B>Custom</B>.
<P>
If you are not running Setup for the first time, click
Add/Remove.
<P>
<LI>Select the <B>Data Access Controls</B>
check box, and then click Change Option.
<P>
<FONT COLOR="#0000FF"><B>Important&nbsp;&nbsp;&nbsp;</B></FONT>The
<B>Microsoft Access</B> check box must also be selected or the
driver will not be installed.
<P>
<LI>Select the <B>Database Drivers</B> check box, and then click <B>Change Option</B>.
<P>
<LI>Select the <B>Microsoft Access Driver</B> check box, and then click <B>OK</B>.
<P>
<LI>Click <B>Continue</B>, and follow the instructions in the remaining Setup dialog boxes.
<P>
</OL>

After the Microsoft Access Desktop driver is installed, you must
create either a system DSN or a file DSN that specifies the name
and connection information for each database you want to use on
the server. You then specify that DSN when you generate the IDC/HTX
files.
<P>
For information about how to define a system DSN or a file DSN,
search the Microsoft Access Help index for "ODBC, setting
up data sources." For more information about Microsoft Internet
Information Server, see the Microsoft Internet Information Server
Web site, located at <A HREF="http://www.microsoft.com/infoserv/iisinfo.htm">http://www.microsoft.com/infoserv/iisinfo.htm</A>.
For more information about using IDC/HTX files, search the Microsoft
Internet Information Server Help index for "database connector."
<P>
<B><FONT SIZE=2 COLOR="#0000FF" FACE="Verdana, Arial, Helvetica">Tip&nbsp;&nbsp;&nbsp;</FONT></B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">You
can learn more about applications that use IDC/HTX files by reading
about the Job Forum application. For information about the Job
Forum application, see the Job Forum white paper, located at <A HREF="http://www.microsoft.com/accessdev/accwhite/jobforpa.htm">http://www.microsoft.com/accessdev/accwhite/jobforpa.htm</A>.
For applications that require many users to access the database
simultaneously, you should consider upsizing the Microsoft Access
database back&#173;end server to Microsoft SQL Server. For information
about upsizing a Microsoft Access Web application to Microsoft
SQL Server, see <A HREF="http://www.microsoft.com/accessdev/accwhite/upsizeweb.htm">http://www.microsoft.com/accessdev/accwhite/upsizeweb.htm</A>.</FONT>
<P>
<FONT SIZE=3 FACE="Verdana, Arial, Helvetica"><B>Saving Forms and Datasheets as Active Server Pages </B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex33"></a>
<P>
With Microsoft Access, you can save a form as an Active Server
Page (ASP) that emulates much of the functionality of your form.
When saving a form as an Active Server Page, Microsoft Access
saves most, but not all, controls on the form as ActiveX controls
that perform the same or similar functions. Microsoft Access doesn't
save or run Visual Basic code behind the form or controls. To
copy the layout of your form as closely as possible, Microsoft
Access uses the Microsoft HTML Layout control to position the
controls on Active Server Pages. The resulting page uses ActiveX
Scripting and ActiveX Data Objects to connect the control on the
page to a copy of your database on an Internet server. For information
about the Microsoft HTML Layout control, see <A HREF="http://www.microsoft.com/workshop/author/layout/layout.htm">http://www.microsoft.com/workshop/author/layout/layout.htm</A>.
<P>
Users who open a form saved as an Active Server Page can browse
records, update or delete existing records, and add new records
by using a Web browser. 
<P>
You can also save table, query, and form datasheets as Active
Server Pages. When you open a datasheet saved as an ASP, Microsoft
Access displays current data from a copy of your database located
on an Internet server, much like IDC/HTX files do. However, unlike
IDC/HTX files, Active Server Pages require only one file per datasheet.
The ASP file uses scripting to establish a connection to the database
on the server, and contains information that it uses to format
the datasheet. Unlike a form saved as an Active Server Page, users
can't update existing records in or add new records to a datasheet
saved as an Active Server Page.
<P>
<B><FONT COLOR="#0000FF"><IMG SRC="Proced.gif">To
save a form or datasheet as an Active Server Page</FONT></B>
<P>

<OL>
<P>
<LI>In the Database window,
click the form or datasheet you want to save.
<P>
<LI>On
the <B>File</B> menu, click <B>Save As/Export</B>.
<P>
<LI>In
the <B>Save As</B> dialog box, click <B>To an External File or
Database</B>, and then click <B>OK</B>.
<P>
<LI>In the
Save as type box, click Microsoft Active Server Page (*.asp).
<P>
<LI>Specify
the file name and location to save the file, and then click <B>Export</B>.
<P>
<LI>In
the Active Server Page Output Options dialog box, specify:
<P>
<UL>
<P>
<LI>The data source name that
will be used for a copy of the current database (required).
<P>
<LI>A user name and password, if required to open the database.
<P>
<LI>An HTML template, if you want Microsoft Access to merge one with
the Active Server Page.
<P>
For information about HTML templates, see "<A HREF="#USINGHTMLTEMP">Using
an HTML Template When You Save Data as HTML Documents</A>" earlier
in this chapter.
<P>
<LI>The URL for the server where
the Active Server Page will reside.
<P>
<LI>The<B> Session
timeout</B> setting, which determines how long a connection to
the server is maintained after the user stops working with the
Active Server Page (optional).
<P>
</UL>
<P>
<LI>Click <B>OK</B>.
<P>
</OL>

<P>
You can also save forms and datasheets as Active Server Pages
by using the Publish to the Web Wizard (available through the<B>
Save As HTML</B> command on the <B>File</B> menu), the <B>OutputTo</B>
method in code, or the OutputTo action in macros. For information
about using the <B>OutputTo</B> method, see "<A HREF="#SAVHTMLDOC">Saving HTML Documents by Using the OutputTo Method</A>" later in this chapter.
<P>
<B>Form Views Supported for Active Server Pages</B>

<P>
If the form you save as an Active Server Page has its <B>DefaultView</B>
property set to Single Form or Continuous Forms, the Active Server
Page displays as a single form, unless it is open in Datasheet
view when you use the <B>Save As/Export</B> command (<B>File</B>
menu). If the form has its <B>DefaultView</B> property set to
Datasheet, the Active Server Page displays as a datasheet. Subforms
always display as datasheets, regardless of their <B>DefaultView</B>
property setting. All field data types are saved unformatted,
that is, <B>Format</B> and <B>InputMask</B> property settings
aren't saved.
<P>
<B>Control Types Supported for Active Server Pages</B>

<P>
When Microsoft Access saves a form as an Active Server Page, it
replaces Microsoft Access controls with ActiveX controls, as described
in the following table.
<P>
<TABLE WIDTH=85% VALIGN="TOP" BORDER=1 BORDERCOLOR="#C0C0C0" CELLPADDING=4 CELLSPACING=0>

<TR><TD WIDTH=41% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>Microsoft Access control</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2></TD><TD WIDTH=59% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">ActiveX control</FONT></B>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Text box</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Text box.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Text box control bound to a Hyperlink field</FONT>
</TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Text box that displays the hyperlink text, but the hyperlink can't be followed.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">List box</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">List box.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Combo box</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Combo box.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Label</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Label. If the label has <B>HyperlinkAddress </B>and/or <B>HyperlinkSubAddress </B>properties set, an HTML hyperlink is created for the label.</FONT>
</TD></TR>

<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Command button</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Command button, but any code behind the button isn't saved. If the command button has <B>HyperlinkAddress </B>and/or <B>HyperlinkSubAddress </B>properties set, an HTML hyperlink is created for the button.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Option group</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Option group, but without a group frame.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Option button</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Option button.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Check box</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Check box.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Toggle button</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Toggle button.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">ActiveX control</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">ActiveX control, but any code behind the control isn't saved.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Subform</FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Subform as datasheet only.</FONT>
</TD></TR>

<P>
</TABLE>
<P>
Microsoft Access doesn't support the following controls when saving
a form as an Active Server Page:
<P>

<UL>
<P>
<LI>Tab control, and anything
on a tab control
<P>
<LI>Rectangle 
<P>
<LI>Line
<P>
<LI>Page
break
<P>
<LI>Unbound object frame
<P>
<LI>Bound
object frame
<P>
<LI>Image control
<P>
<LI>The
background of a form set with the <B>Picture</B> property
<P>
</UL>

<P>
<FONT COLOR="#0000FF"><B>Note&nbsp;&nbsp;&nbsp;</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>You
can simulate a rectangle or a line by using a Label control without
a caption.
<P>
<B>Requirements for Using Active Server Pages</B>

<P>
To display and use an Active Server Page, a copy of your database
and Active Server Pages must reside on a computer running one
of the following operating systems and Internet server platforms:
<P>

<UL>
<P>
<LI>Microsoft Windows NT Server
version 3.51 or 4.0 running Microsoft Internet Information Server
version 3.0
<P>
<LI>Microsoft Windows NT Workstation
version 4.0 and Microsoft Peer Web Services with the Active Server
Pages components installed
<P>
<LI>Microsoft Windows&nbsp;95
and Microsoft Personal Web Server with the Active Server Pages
components installed
<P>
</UL>

<P>
The Microsoft HTML Layout control must be installed on the computer
opening the Active Server Page. For more information about installing
the Active Server Pages components for Peer Web Services and Personal
Web Server, see <A HREF="http://www.microsoft.com/ntserver/">http://www.microsoft.com/ntserver/</A>. Active Server
Pages also require the Microsoft Access Desktop driver and a valid
DSN to access a database. For information about installing the
Microsoft Access Desktop driver and defining DSNs, see "<A HREF="#REQIDCHTX">Requirements for Using IDC/HTX Files</A>" earlier in this chapter.
<P>
<FONT SIZE=3 FACE="Verdana, Arial, Helvetica"><B>Using the Publish to the Web Wizard</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex34"></a>
<P>
With the Publish to the Web Wizard, you can publish a set of Microsoft
Access database objects to any combination of static HTML documents,
IDC/HTX files, or Active Server Pages (ASP). By using the wizard,
you can:
<P>

<UL>
<P>
<LI>Pick any combination of
tables, queries, forms, or reports to save.
<P>
<LI>Specify
an HTML template to use for the selected objects.
<P>
<LI>Select
any combination of static HTML documents, IDC/HTX files, or Active
Server Pages.
<P>
<LI>Create a home page to tie together
the Web pages you create.
<P>
<LI>Specify the folder
where you save your files.
<P>
<LI>Use the Web Publishing
Wizard to move the files created by the Publish to the Web Wizard
to a Web server.
<P>
<LI>Save the answers you provide
the wizard as a Web publication profile, and then select that
profile the next time you use the wizard. This saves you from
having to answer the wizard's questions again.
<P>
</UL>

<P>
To run the Publish to the Web Wizard, click<B> Save As HTML</B>
on the <B>File</B> menu. For more information about using the
Publish to the Web Wizard, search the Microsoft Access Help index
for "Saving database objects, saving in Internet/Web formats."
<P>
<A NAME="SAVHTMLDOC"></A>
<FONT SIZE=3 FACE="Verdana, Arial, Helvetica"><B>Saving HTML Documents by Using the OutputTo Method</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex35"></a>
<P>
You can use the <B>OutputTo</B> method to save Microsoft Access
database objects in the HTML formats described in the previous
sections: static HTML documents, IDC/HTX files, or Active Server
Pages (ASP).
<P>
The syntax of the <B>OutputTo</B> method is:
<P>
<B>DoCmd.OutputTo</B> <I>objecttype</I>, <I>objectname</I>,
<I>outputformat</I>, <I>outputfile</I>,
<I>autostart</I>, <I>templatefile</I>
<P>
The following table describes the arguments of the <B>OutputTo</B>
method.
<P>
<TABLE WIDTH=85% BORDER=1 BORDERCOLOR="#C0C0C0" CELLPADDING=4 CELLSPACING=0>

<TR><TD WIDTH=41% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Argument</FONT></B></TD><TD WIDTH=59% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Description</FONT></B>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><I>objecttype</I></FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Required. Specifies the type of database object you are going to output. You can use one of the following constants for the <I>objecttype</I> argument:
<P>
<B>acOutputForm
<BR>
acOutputQuery
<BR>
acOutputReport
<BR>
acOutputTable</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><I>objectname</I></FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Optional. A string expression that's the valid name of an object of the type specified in the <I>objecttype</I> argument. If you want to output the active object, specify the object's type for the <I>objecttype</I> argument and leave this argument blank.
<P>
If you run Visual Basic code that contains the <B>OutputTo </B>method in a library database, Microsoft Access looks for the object with this name first in the library database, then in the current database.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><I>outputformat</I></FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Optional. Specifies whether to save the database object as an HTML document, IDC/HTX file, or Active Server Page. You can use one of the following constants for the <I>outputformat</I> argument:
<P>
<B>acFormatHTML
<BR>
acFormatIIS
<BR>
acFormatASP</B>
<P>
<BR>If you leave this argument blank, Microsoft Access prompts you for the output format.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><I>outputfile</I></FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Optional. A string expression that's the full name, including the path, of the file you want to output the object to.</FONT>
<P>
<FONT SIZE=2 FACE="Verdana, Arial, Helvetica">You can include the standard file name extension (.asp, .htm, .html, or .htx,) for the output format you select with the <I>outputformat</I> argument, but it's not required. If you output to IDC/HTX or ASP files, Microsoft Access always creates files with the standard .htx and .idc or .asp file name extensions.
<P>
If you leave this argument blank, Microsoft Access prompts you for an output file name.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><I>autostart</I></FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Optional. Use <B>True </B>(&nbsp;&#150;&nbsp;1) to start a Web browser immediately to open the static HTML document specified by the <I>outputfile</I> argument. Use <B>False </B>(0) if you don't want to start the application. This argument is ignored for IDC/HTX and ASP files.
<P>
If you leave this argument blank, Microsoft Access uses the default value (<B>False</B>).</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><I>templatefile</I></FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Optional. A string expression that's the full name, including the path, of the file you want to use as a template for an HTML, IDC/HTX, or ASP file.</FONT>
</TD></TR>

<P>
</TABLE>
<P>
Microsoft Internet Information Server and Microsoft Active Server
Pages formats are available only for tables, queries, and forms,
so if you specify <B>acFormatIIS</B> or <B>acFormatASP</B> for
the <I>outputformat</I> argument, you must specify
<B>acOutputTable</B>, <B>acOutputQuery</B>, or <B>acOutputForm</B>
for the <I>objecttype</I> argument.
<P>
You can leave an optional argument blank in the middle of the
syntax, but you must include the argument's comma. If you leave
a trailing argument blank, don't use a comma following the last
argument you specify.
<P>
You can't specify the HTML template, data source name, user name
and password, server URL, or<B> Session timeout</B> setting when
you use the <B>OutputTo</B> method. Microsoft Access uses the
values specified on the <B>Hyperlinks/HTML</B> tab of the <B>Options</B>
dialog box (<B>Tools</B> menu) by default. However, you can use
the <B>SetOption</B> method in your code to temporarily change
these settings. For information about using the <B>SetOption</B>
method, search the Microsoft Access Help index for "SetOption
method."
<P>
<B>Examples</B>

<P>
The following example outputs the Employees table in static HTML
document format to the Employee.htm file and immediately opens
the file in the default Web browser.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>DoCmd.OutputTo acOutputTable, "Employees", acFormatHTML, "Employee.htm", True

</code></pre></FONT>



<P>
The following example outputs the Employees table in IDC/HTX format
to two files named Employee.htx and Employee.idc. It merges the
Mc.htm template file into the Employee.htx file.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>DoCmd.OutputTo acOutputTable, "Employees", acFormatIIS, "Employee",, _
&#09;"C:\Program Files\Microsoft Office\Templates\Access\Mc.htm"

</code></pre></FONT>
<P>
The following example outputs the Products form in Active Server
Page format to the Products.asp file. It merges the Stones.htm
template file into the Products.asp file.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>DoCmd.OutputTo acOutputFor
321m, "Products", acFormatASP, "Products",, _
&#09;"C:\Program Files\Microsoft Office\Templates\Access\Stones.htm"

</code></pre></FONT>
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH015H211">Saving Microsoft Word Documents as HTML
Documents</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex36"></a>
<P>
You can save an existing Word document to HTML format by using
the <B>Save As</B> command (<B>File</B> menu) or by using Visual
Basic code. The following example saves the active document as
an HTML document.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Sub SaveAsHTML
&#09;Dim intFormat As Integer

&#09;intFormat = FileConverters("HTML").SaveFormat
&#09;myDocName = ActiveDocument.Name
&#09;pos = InStr(myDocName, ".")
&#09;If pos &gt; 0 Then
&#09;&#09;myDocName = Left(myDocName, pos -1)
&#09;&#09;myDocName = myDocName &amp; ".html"
&#09;&#09;ActiveDocument.SaveAs FileName:=myDocName, FileFormat:=intFormat
&#09;End If
End Sub

</code></pre></FONT>
<P>
When you save an existing Word document to HTML format, formatting
and other items that aren't supported by HTML or the Word Web
page authoring environment are removed from the file. For more
information about what happens when you save a Word document as
a Web page, search Word Help. Instead of saving existing documents
as HTML, you may want to create new HTML documents with Microsoft
Word Web authoring tools. 
<P>
Word&nbsp;97 has many powerful features for creating HTML documents,
such as the following:
<P>
<B>Word Editing and Formatting Features&nbsp;&nbsp;&nbsp;</B>Take
advantage of advanced Word editing and formatting features&nbsp;&#151;
rich&#173;text formatting, spelling and grammar checking, and
automatic text correction&nbsp;&#151; when you work with Word
Web authoring tools. When you use a Word Web template, you can
easily create and format popular Web page items&nbsp;&#151;
such as tables, bulleted or numbered lists, and graphic objects&nbsp;&#151;
just as you can with a regular Word document.
<P>
<B>Word Web Templates&nbsp;&nbsp;&nbsp;</B>Use the
Web Page Wizard or the Blank Web Page template to create new Web
pages. The Web Page Wizard gives you different layouts and color
themes to choose from, such as a personal home page, a table of
contents, a survey, or a registration form. To use the wizard
or the template, click <B>New</B> on the <B>File</B> menu, click
the <B>Web Pages</B> tab, and then double&#173;click <B>Web Page
Wizard</B> or <B>Blank Web Page</B>. There are several additional
Web templates that you can download from the Microsoft Word Web
site at <A HREF="http://www.microsoft.com/word/">http://www.microsoft.com/word/</A>. When you download these
templates, they are installed in the same folder as the existing
Web templates. 
<P>
<B>Hyperlinks, Bullets, and Horizontal Lines&nbsp;&nbsp;&nbsp;</B>By
using the <B>Insert Hyperlink</B> button on the <B>Standard</B>
toolbar, you can quickly create hyperlinks on your Web page to
link related information in different locations. The hyperlink
text is usually blue and underlined. You can also quickly create
special graphical bulleted lists and horizontal lines for your
Web page. To add a new bullet for selected text, click <B>Bullets
and Numbering</B> on the <B>Format</B> menu, and then select the
bullet you want. To add the default bullet to selected text, click
<B>Bullets</B> on the <B>Formatting</B> toolbar. To add a new
horizontal line, click <B>Horizontal Line</B> on the <B>Insert</B>
menu, and then select the line style you want.
<P>
<B>Forms&nbsp;&nbsp;&nbsp;</B>You can use forms to
collect and present data on your Web page. For example, you can
publish a form that collects user feedback or registration information.
You can store the input data in a database or a text file for
future use. You can quickly create a form by selecting a sample
form and then modifying it for your needs by using the <B>Forms</B>
toolbar. To select a sample form, click <B>New</B> on the <B>File</B>
menu, click the <B>Web Pages</B> tab, and then select the sample
form you want. To display the <B>Control Toolbox</B>, click <B>Form
Design Mode </B>on the <B>Standard</B> toolbar. Use the Web form
tools just as you use the regular Word form tools to insert form
elements.
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH015H212">Saving Microsoft Excel Worksheets as HTML
Documents</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex37"></a>
<P>
To make your Microsoft Excel data available to users on your intranet
or the World Wide Web, use the Internet Assistant add&#173;in
program to convert worksheet data or charts to HTML Web pages
(<B>Save As HTML</B> command, <B>File</B> menu). Microsoft Excel
doesn't support using Visual Basic to save data as HTML documents.
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH015H213">Saving Microsoft PowerPoint Presentations
as HTML Documents</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex38"></a>
<P>
To make your Microsoft PowerPoint data available to users on your
intranet or the World Wide Web, use the Internet Assistant add&#173;in
program to convert presentations to HTML Web pages (<B>Save As
HTML</B> command, <B>File</B> menu). Microsoft PowerPoint doesn't
support using Visual Basic to save data as HTML documents.
<P>
<A NAME="PG015C5"></A>

</MENU></MENU></MENU>
<MENU>

<FONT SIZE=5 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH015H105">Opening and Importing HTML Data</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
<MENU><MENU>

<P>
Each Office application provides features that you can use to
open and import HTML data. You can also use Office applications
to open documents and files in a variety formats on your company's
intranet. If you have a connection to the Internet, you can open
or import data in most of these same formats on Internet sites
such as FTP and HTTP servers. 
<P>
<FONT COLOR="#0000FF"><B>Note&nbsp;&nbsp;&nbsp;</B></FONT>In
all Office applications except Outlook, you can use Data Access
Objects (DAO) code in Visual Basic to access and manipulate data
in a variety of formats, including HTML. For more information
about using DAO, see Chapter&nbsp;11, "<a href="011.htm">Data Access Objects</A>."
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH015H214">Opening HTML Data in Microsoft Word</A>
</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex39"></a>
<P>
To open HTML documents in Microsoft Word with Visual Basic, use
the <B>Open</B> method. By default, the <B>Open</B> method tries
each available file converter until it succeeds. For this reason,
as long as the HTML Document converter is installed, the following
example opens an HTML document on a local drive.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Documents.Open "C:\My Documents\My Document.htm"

</code></pre></FONT>



<P>
Similarly, you can specify a URL to open a file located on an
HTTP server, as follows.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Documents.Open "http://myserver.com/default.htm"

</code></pre></FONT>



<P>
To improve performance, you can specify the file converter to
use by referring to it in the <B>FileConverters</B> collection,
as follows.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Sub OpenHTML()
&#09;Dim intFormat As Integer

&#09;intFormat = FileConverters("HTML").OpenFormat
&#09;Documents.Open "http://myserver.com/default.htm", Format:=intFormat
End Sub

</code></pre></FONT>
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH015H215">Opening HTML Data in Microsoft Excel</A>
</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex40"></a>
<P>
To open HTML documents in Microsoft Excel with Visual Basic, use
the <B>Open</B> method. You don't need to specify the file converter
to use, because the <B>Open</B> method tries each available file
converter until it succeeds. The following example opens an HTML
document on a local drive.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Workbooks.Open "C:\My Documents\Product List.htm"

</code></pre></FONT>



<P>
Similarly, you can specify a URL to open a file located on an
HTTP server, as follows.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Workbooks.Open "http://myserver.com/default.htm"

</code></pre></FONT>



<P>
You can also get data from an intranet site or from HTTP, FTP,
or Gopher sites on the World Wide Web by running a Web query.
To run a Web query, point to<B> Get External Data</B> on the <B>Data</B>
menu, and then click <B>Run Web Query</B>. For more information
about running Web queries, see  <A HREF="http://www.microsoft.com/excel/webquery/">http://www.microsoft.com/excel/webquery/</A>.
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH015H216">Opening HTML Data in Microsoft PowerPoint</A>
</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex41"></a>
<P>
To open HTML documents in PowerPoint with Visual Basic, use the
<B>Open</B> method. By default, the <B>Open</B> method tries each
available file converter until it succeeds. For this reason, as
long as the HTML Document converter is installed, the following
line of code will open an HTML document on a local drive:

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Presentations.Open "C:\My Documents\My Document.htm"

</code></pre></FONT>



<P>
Similarly, you can specify a URL to open a file located on an
HTTP server:

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Presentations.Open "http://myserver.com/default.htm"

</code></pre></FONT>



<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH015H217">Importing HTML Data in Microsoft Access</A>
</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex42"></a>
<P>
With Microsoft Access, you can import or link data from HTML tables
or other data sources on an Internet server. For more information
about importing, exporting, and linking HTML data and other data
formats on Internet servers, see "Working with HTML Files"
in Chapter&nbsp;18 and "Importing, Linking, and Exporting
Data on the Internet" in Chapter&nbsp;21 in <I>Building
Applications with Microsoft Access&nbsp;97</I>.
<P>
</MENU></MENU></MENU>
<A NAME="PG015C6"></A>
<MENU>


<FONT SIZE=5 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH015H106">Using the WebBrowser Control</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
<MENU><MENU>

<P>
<a name="dex43"></a>
<P>
The Microsoft WebBrowser control is an ActiveX control that you
can use to browse Web sites, view Web pages and other documents,
and download data located on the Internet from your applications.
The WebBrowser control is useful in situations where you don't
want to disrupt the work flow in your application by switching
to a Web browser or other document&#173;viewing application.
<P>
The WebBrowser control can display any Web page that Microsoft
Internet Explorer version 3.0 can display. For example, the WebBrowser
control can display pages that include any of the following features:
<P>

<UL>
<P>
<LI>Standard HTML and most HTML
enhancements, such as floating frames and cascading style sheets
<P>
<LI>Other
ActiveX controls
<P>
<LI>Most Netscape plug&#173;ins
<P>
<LI>Scripting,
such as Microsoft Visual Basic Scripting Edition (VBScript) or
JavaScript
<P>
<LI>Java applets
<P>
<LI>Multimedia
content, such as video and audio playback
<P>
<LI>Three&#173;dimensional
virtual worlds created with Virtual Reality Modeling Language
(VRML)
<P>
</UL>

<P>
With the WebBrowser control, users of your application can browse
sites on the World Wide Web, as well as folders on a local hard
disk and on a local area network. Users can follow hyperlinks
by clicking them or by typing a URL into a text box. Also, the
WebBrowser control maintains a history list that users can browse
through to view previously browsed sites, folders, and documents.
<P>
In addition to opening Web pages, both Microsoft Internet Explorer
version 3.0 and the WebBrowser control can open any ActiveX document,
which includes most Office documents. For example, if Office is
installed on a user's computer, an application that uses the WebBrowser
control can open and edit Microsoft Excel workbooks, Word documents,
and PowerPoint presentations from within the control. Similarly,
if Microsoft Excel Viewer, Word Viewer, or PowerPoint Viewer is
installed, users can open those documents within the WebBrowser
control, but they cannot edit them. 
<P>
You can't open and edit a Microsoft Access database as an ActiveX
document within Microsoft Internet Explorer version 3.0 or the
WebBrowser control, but a Web page can contain a hyperlink to
a Microsoft Access database. Clicking the hyperlink downloads
a copy of the database and starts a session of Microsoft Access
to open it. Additionally, if you have the server software that
supports Internet Database Connector/HTML extension<I> </I>(IDC/HTX)
files or Active Server Pages (ASP), you can create Web pages that
act as a front&#173;end to an ODBC data source such as a Microsoft
Access or Microsoft SQL Server database. For more information
about creating IDC/HTX or ASP files, see "<A HREF="#CH015H210">Saving Microsoft Access Data as HTML Documents</A>" earlier in this chapter. 
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH015H218">Adding the WebBrowser Control to a Form</A>
</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex44"></a>
<P>
Before you can use the WebBrowser control, you must have Microsoft
Internet Explorer version 3.0 or later installed.
<P>
If you purchased Microsoft Office&nbsp;97 on CD&#173;ROM, you
can install Microsoft Internet Explorer version 3.0 by running
Msie30.exe from the Iexplore subfolder in the ValuPack folder.
<P>
If you prefer to install from the Web, you can download and install
Microsoft Internet Explorer version 3.0 from <A HREF="http://www.microsoft.com/ie/download/">http://www.microsoft.com/ie/download/</A>.
<P>
Once you have Microsoft Internet Explorer version 3.0 installed,
the WebBrowser control is automatically registered and is available
in form Design view (Microsoft Access) and in Design mode (Microsoft
Excel, Word, and PowerPoint).
<P>
<B><FONT COLOR="#0000FF"><IMG SRC="Proced.gif">To
add the WebBrowser control to a document or form</FONT></B>
<P>

<OL>
<P>
<LI>In Microsoft Excel, Word,
or PowerPoint, open the document or form. In Microsoft Access,
open the form in Design view. 
<P>
<LI>In Microsoft
Excel, Word, or PowerPoint, right&#173;click the menu bar and
then click <B>Control Toolbox</B>. In Microsoft Access, right&#173;click
the menu bar and then click <B>Toolbox</B>.
<P>
<LI>In
the toolbox, click the <B>More Controls</B> tool.
<P>
A menu appears that lists all the registered ActiveX
controls in your system.
<P>
<LI>On the menu of ActiveX
controls, click <B>Microsoft WebBrowser Control</B>.
<P>
<LI>On
the document or form, click where you want to place the control.
<P>
<LI>Move
and size the control to the area you want to display.
<P>
</OL>

<P>
In Microsoft Excel, Word, and PowerPoint, you can also add the
WebBrowser control to UserForms created with the Visual Basic
editor.
<P>
<B><FONT COLOR="#0000FF"><IMG SRC="Proced.gif">To
add the WebBrowser control to a UserForm created with the Visual
Basic Editor</FONT></B>
<P>

<OL>
<P>
<LI>Open a Microsoft Excel,
Word, or PowerPoint document.
<P>
<LI>On the <B>Tools</B>
menu, point to <B>Macro</B>, and then click <B>Visual Basic Editor</B>.
<P>
This starts the Visual Basic Editor or switches to
its window if it's already open.
<P>
<LI>On the <B>Insert</B>
menu, click <B>UserForm</B>.
<P>
A blank form is created and the toolbox is displayed.
<P>
<LI>Right&#173;click
the toolbox, and then click <B>Additional Controls</B>.
<P>
The Additional Controls dialog box is displayed.
<P>
<LI>In
the Available Controls box, select Microsoft WebBrowser Control,
and then click OK.
<P>
A tool icon is added to the toolbox for the WebBrowser
Control. You don't need to repeat steps 4 and 5 the next time
you use the toolbox.
<P>
<LI>Click the new tool, and
then click the form where you want to place the control.
<P>
</OL>

<P>
For more information about UserForms, see Chapter&nbsp;12, "<a href="012.htm">ActiveX Controls and Dialog Boxes</A>."
<P>
<B><FONT SIZE=2 COLOR="#0000FF" FACE="Verdana, Arial, Helvetica">Tip&nbsp;&nbsp;&nbsp;</FONT></B>If
the WebBrowser control can't display the full width or height
of a Web page or document, it automatically displays scroll bars.
However, in most cases, make the control wide enough to display
the full width of a typical Web page so that users of your application
don't have to scroll horizontally.
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH015H219">Displaying Web Pages or Documents in the
WebBrowser Control</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
To display a Web page or document in the WebBrowser control, use
the <B>Navigate</B> method in Visual Basic. The syntax for the
<B>Navigate</B> method is:
<P>
<I>object</I>.<B>Navigate</B> <I>URL</I>
<P>
<a name="dex45"></a>
<P>
<I>Object</I> is either the name of the WebBrowser
control on your form or an object variable that refers to it,
and <I>URL</I> is a string expression that evaluates
to a valid URL or path. <I>URL</I> can refer to a
Web page or other content on the Internet or an intranet, as well
as to an Office document, such as a Word document.
<P>
<a name="dex46"></a>
<P>
If <I>URL</I> refers to an Internet protocol and a
location on the Internet, the WebBrowser control must establish
a connection before is can display the document. If the computer
running your application is connected to a <I>proxy server</I>
(a secure connection to the Internet through a LAN), or if it
has a direct connection to the Internet, the WebBrowser control
downloads and displays the Web page or other Internet content
immediately. If the computer running your application uses a modem
and dial&#173;up connection to the Internet, and that connection
hasn't been established beforehand, the WebBrowser control initiates
the connection. For example, if the user's computer uses a modem
and The Microsoft Network to connect to the Internet, the <B>Sign
In</B> dialog box is displayed to establish the connection to
the Internet before the WebBrowser control can display Internet
content.
<P>
If <I>URL</I> refers to an Internet protocol and a
location on an intranet server, the computer running your application
must be connected to the intranet and have permission to access
that server.
<P>
If <I>URL</I> refers to a standard file system path
on a local hard disk or LAN, the WebBrowser control opens the
document and displays it immediately. The WebBrowser control can
open Office documents (except Microsoft Access databases), text
files, and HTML documents that don't require features supported
only by an Internet/intranet server. For example, the WebBrowser
control can't open and run IDC/HTX files or ASP files from the
standard file system, but it can open HTML documents that contain
only the HTML tags supported by Microsoft Internet Explorer version
3.0.
<P>
<FONT COLOR="#0000FF"><B>Note&nbsp;&nbsp;&nbsp;</B></FONT>If
URL refers to a path in the standard file system that doesn't
refer to a file name (for example, C:\Windows\System\), the WebBrowser
control displays the file system itself, much like My Computer.
<P>
The examples and code in the following sections are specific to
developing an application that uses the WebBrowser control in
Microsoft Access; however, in most cases, you can apply the same
basic principles and techniques to using the WebBrowser control
in applications developed with other Office applications.
<P>
<A NAME="DISDOC"></A>
<FONT SIZE=3 FACE="Verdana, Arial, Helvetica"><B>Displaying a Document in the WebBrowser Control by Using an
Address in a Text Box</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
By using the WebBrowser control, you can create a Microsoft Access
form that performs most of the functions of Microsoft Internet
Explorer version 3.0. For example, the following illustration
shows the Custom Browse form (WebBrowseWeb) in the Developer Solutions
sample application.
<P>
<IMG SRC="01503.gif">
<P>
When a user types a valid URL in the text box at the top of the
form (<FONT SIZE=2 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica">txtLinks</FONT>)
and presses <FONT SIZE=2 FACE="Verdana, Arial, Helvetica">ENTER</FONT>, the WebBrowser control
(<FONT SIZE=2 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica">ActiveXCtl1</FONT>)
displays the Web page or document. Pressing <FONT SIZE=2 FACE="Verdana, Arial, Helvetica">ENTER</FONT>
triggers the AfterUpdate event of the <FONT SIZE=2 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica">txtLinks</FONT>
text box; the AfterUpdate event contains the following code, which
goes to the address specified in the URL that the user entered.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Private Sub txtLinks_AfterUpdate()
On Error Resume Next
&#09;' If the user has entered an address (URL) in this control,
&#09;' attempt to go to the address.
&#09;If Len(Me!txtLinks) &gt; 0 Then
&#09;&#09;Me!ActiveXCtl1.Navigate Me!txtLinks
&#09;End If
End Sub

</code></pre></FONT>
<P>
Error handling is passed to the control itself because it displays
the same error messages displayed by Microsoft Internet Explorer
version 3.0.
<P>
If you prefer to start navigation by clicking a command button
instead pressing <FONT SIZE=2 FACE="Verdana, Arial, Helvetica">ENTER</FONT>, you can use similar
code in the button's Click event.
<P>
The Home, Back, Forward, Refresh, and Search buttons on the Custom
Browse form use the corresponding <B>GoHome</B>, <B>GoBack</B>,
<B>GoForward</B>, <B>Refresh</B>, and <B>GoSearch</B> methods
of the WebBrowser control. For information about how to view brief
descriptions about the properties, methods, and events of the
WebBrowser control, see "<A HREF="#CH015H220">Viewing Descriptions of the Properties, Methods, and Events of the WebBrowser Control</A>" later in this
chapter.
<P>
With the Save Location button on the Custom Browse form, you can
save the address and a description of the current document to
the Links table in the Developer Solutions sample application.
When you click the Save Location button, Microsoft Access checks
to see if the URL has been saved previously, and if not, uses
the following statement to open the<B> Save Location To Table</B>
dialog box.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>DoCmd.OpenForm "frmSaveURLDialog", acWindowNormal, , , acFormEdit, acDialog, _
&#09;ctlHyper.LocationName &amp; ";" &amp; ctlHyper.LocationURL

</code></pre></FONT>



<P>
The last argument of this statement (<FONT SIZE=2 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica">ctlHyper.LocationName
&amp; ";" &amp; ctlHyper.LocationURL</FONT>)
sets the <B>OpenArgs</B> property to a concatenated string that
contains the two values returned by the <B>LocationName</B> and
<B>LocationURL</B> properties of the document currently displayed
in the Custom Browse form. When the <B>Save Location To Table</B>
dialog box opens, code in its <B>Load</B> event parses the <B>OpenArgs</B>
property value back into two parts and displays them as the default
description and address. When the user clicks <B>OK</B>, the description
and address in the <B>Save Location To Table</B> dialog box form
are saved in the Hyperlink and Description fields in the Links
table.
<P>
For more information about the Custom Browse form, open the Developer
Solutions sample application located in the Samples subfolder
of your Office folder. To view the Developer Solutions sample
application, you must click <B>Custom</B> when you install Microsoft
Access and then choose to install all sample databases.
<P>
<FONT SIZE=3 FACE="Verdana, Arial, Helvetica"><B><A NAME="DISDOC2"> Displaying a Document in the WebBrowser Control by Using a
Hyperlink Stored in a Table</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
By using the WebBrowser control, you can create a Microsoft Access
form that displays documents specified in hyperlinks stored in
a table. For example, the following illustration shows the Browse
Saved Hyperlinks form (WebBrowseTable) in the Developer Solutions
sample application. You can use the Browse Saved Hyperlinks form
to browse addresses saved in the Links table.
<P>
<IMG SRC="01504.gif">
<P>
When a user clicks a record navigation button at the bottom of
the form to move to a new record, the following code in the form's
Current event displays the Web page or document whose address
is stored in the current record.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Private Sub Form_Current()
&#09;Dim varFull As Variant, varDescription As Variant
&#09;Dim HyperlinkAddress As String, HyperlinkSubAddress As String
&#09;Dim msg1 As String, msg2 As String, rst As Recordset, strDisplay As String

&#09;On Error Resume Next

&#09;Set rst = Me.RecordsetClone
&#09;rst.Bookmark = Me.Bookmark
&#09;varFull = rst!HyperLink

&#09;If IsNull(varFull) Then GoTo Current_Err
&#09;varDescription = rst!Description
&#09;Me!ActiveXCtl1.Navigate HyperlinkPart(varFull, acAddress)

&#09;If Err = 438 Then Exit Sub

&#09;gvarBookMark = Me.Bookmark

Current_Bye:
&#09;Exit Sub
Current_Err:

msg1 = "Invalid hyperlink address. Remove the record described as '"
msg2 = "' from the Links table or edit the hyperlink to supply a valid address."

MsgBox msg1 &amp; rst!Description &amp; msg2
&#09;
&#09;&#09;Me.Bookmark = gvarBookMark
&#09;&#09;Exit Sub
End Sub

</code></pre></FONT>
<P>
This procedure uses the <B>Navigate</B> method of the WebBrowser
control to display the next hyperlink address. However, don't
pass the contents of a Hyperlink field directly to the <B>Navigate</B>
method. If a user enters or edits data stored in a Hyperlink field
from a datasheet or form, it may contain up to three parts of
information separated by the pound sign (#). Even if the user
doesn't enter all three parts in the datasheet or form, Microsoft
Access automatically stores pound signs in the field. If there
are pound signs in the Hyperlink field, passing the data from
the field directly to the <B>Navigate</B> method generates an
error. To handle this, the stored value is passed to the <B>HyperlinkPart</B>
function to extract just the <I>address</I> portion
of the saved hyperlink, which is then passed to the <B>Navigate</B>
method. If navigation is successful, the form's <B>Bookmark</B>
property value is stored in a public variable. This public variable
is used to return to the last record if subsequent navigation
fails.
<P>
Using code to save data in a Hyperlink field doesn't automatically
save pound signs in the field. To preserve the proper functioning
of a Hyperlink field in other contexts, you may want to write
your code to save pound signs before and after a hyperlink address.
To see an example of how to do this, view the event procedure
set for the Click event of the Save Location button (cmdSaveLocation)
on the Custom Browse form.
<P>
<FONT COLOR="#0000FF"><B>Note&nbsp;&nbsp;&nbsp;</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>You
don't have to store addresses in a Hyperlink field if you don't
need users to be able to navigate to addresses by clicking them
in datasheets or forms, or if you don't need to save addresses
as HTML anchor tags when saving as HTML. As long as an address
doesn't exceed 255 characters, you can store it in a Text field.
If an address exceeds 255 characters, you can store it in a Memo
field. In either case, you can pass the value stored in the field
directly to the <B>Navigate</B> method.
<P>
For more information about the Browse Saved Hyperlinks form, open
the Developer Solutions sample application located in the Samples
subfolder of your Office folder. For more information about the
format of data stored in a Hyperlink field, see "<A HREF="#HYPFIELDSTOR">The Hyperlink Field Storage Format</A>" earlier in this chapter.
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH015H220">Viewing Descriptions of the Properties,
Methods, and Events of the WebBrowser Control</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex47"></a>
<P>
Like built&#173;in Office objects, the WebBrowser control has
properties that your application can set or read to determine
the control's characteristics, methods that your application can
use to perform operations on the control, and events your application
can respond to. You can view brief descriptions of the properties,
methods, and events of the WebBrowser control by using the Object
Browser.
<P>
<FONT COLOR="#0000FF"><B>Important&nbsp;&nbsp;&nbsp;</B></FONT>In
order for these properties, methods, and events to appear in the
Object Browser, a reference must be set to the <B>Microsoft Internet
Controls</B> object library. To set this reference, open a module
(Microsoft Access) or open the Visual Basic Editor (Microsoft
Excel, Word, or PowerPoint), click <B>References</B> on the <B>Tools</B> menu,
and select the <B>Microsoft Internet Controls</B> check box in the <B>Available
References</B> box.
<P>
<B><FONT COLOR="#0000FF"><IMG SRC="Proced.gif">To
view descriptions of the WebBrowser control's methods, properties,
and events</FONT></B>
<P>

<OL>
<P>
<LI>In Microsoft Excel, Word,
or PowerPoint, open the Visual Basic Editor. In Microsoft Access,
open a module.
<P>
<LI>On the <B>View</B> menu, click <B>Object Browser</B>.
<P>
<LI>In the Project/Library box, click <B>SHDocVw</B>.
<P>
<LI>In the <B>Classes</B> box, click <B>WebBrowser</B>.
<P>
The <B>Members Of</B> box lists the methods, properties, and events associated with the WebBrowser control.
<P>
</OL>

<P>
For more information about the methods, properties, and events
of the WebBrowser control, see <A HREF="http://www.microsoft.com/intdev/sdk/docs/iexplore/">http://www.microsoft.com/intdev/sdk/docs/iexplore/</A>.
If you purchased Microsoft Office&nbsp;97 on CD&#173;ROM, you
can open a Help file named Iexplore.hlp that contains this information
in the \ValuPack\Access\WebHelp folder on the CD&#173;ROM.
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH015H221">Distributing the WebBrowser Control with
Your Application</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
Unlike most other ActiveX controls, you can't install the WebBrowser
control by itself. For an application that uses the WebBrowser
control to work, Microsoft Internet Explorer version 3.0 must
also be installed on the computer. Microsoft Internet Explorer
version 3.0 can be distributed freely, and doesn't require the
payment of royalties or other licensing fees. For information
about installing Microsoft Internet Explorer version 3.0, see
"<A HREF="#CH015H218">Adding the WebBrowser Control to a Form</A>" earlier in
this chapter.
<P>
<A NAME="PG015C7"></A>

</MENU></MENU></MENU>
<MENU>


<FONT SIZE=5 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH015H107">Using the Internet Transfer Control</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
<MENU><MENU>

<P>
<a name="dex48"></a>
<P>
Microsoft Office&nbsp;97, Developer Edition provides the Internet
Transfer control (Msinet.ocx), which you can use to connect to
and retrieve files from any Web site that uses either Hypertext
Transfer Protocol (HTTP) or File Transfer Protocol (FTP). For
example, you could use the Internet Transfer control to:
<P>

<UL>
<P>
<LI>Add an FTP browser to any
application.
<P>
<LI>Create an application that automatically
downloads files from a public FTP site.
<P>
<LI>Search
a World Wide Web site for references to graphics and download
only the graphics.
<P>
<LI>Retrieve specific pieces
of information from a Web page.
<P>
</UL>

<P>
Because HTTP and FTP work differently, the operations you can
perform with the Internet Transfer control depend on which protocol
you are using. For example, the <B>GetHeader</B> method only works
with HTTP (HTML documents). However, there are a few operations
that you can perform with either protocol:
<P>

<UL>
<P>
<LI>Set the <B>AccessType </B>property
of the Internet Transfer control to a valid proxy server.
<P>
<LI>Use
the <B>OpenURL</B> method with a valid URL.
<P>
<LI>Use
the <B>Execute</B> method with a valid URL and command appropriate
to the protocol and then use the <B>GetChunk</B> method to retrieve
data from the buffer.
<P>
</UL>

<P>
<B><FONT SIZE=2 COLOR="#0000FF" FACE="Verdana, Arial, Helvetica">Tip&nbsp;&nbsp;&nbsp;</FONT></B>The
Internet Transfer control automatically sets itself to the correct
protocol, as determined by the <I>protocol</I> portion
of the URL. Therefore, when you use the <B>OpenURL </B>or <B>Execute</B>
method, you don't need set the <B>Protocol</B> property.
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH015H222">Adding the Internet Transfer Control to
a Form</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex49"></a>
<P>
In Microsoft Excel, Word, and PowerPoint, you can add the Internet
Transfer control to a UserForm you create with the Visual Basic
Editor. Although the Internet Transfer control is available in
the toolbox<B> </B>in Microsoft Excel, Word, and PowerPoint, you
can't add the control directly to their documents. In Microsoft
Access, you can add the Internet Transfer control to a form in
Design view. The Internet Transfer control doesn't display when
your application is running.
<P>
<B><FONT COLOR="#0000FF"><IMG SRC="Proced.gif">To
add the Internet Transfer control to a Microsoft Excel, Word,
or PowerPoint UserForm created with the Visual Basic Editor</FONT></B>
<P>

<OL>
<P>
<LI>Open a Microsoft Excel,
Word, or PowerPoint document.
<P>
<LI>On the <B>Tools</B>
menu, point to <B>Macro</B>, and then click <B>Visual Basic Editor</B>.
<P>
This starts the Visual Basic Editor or switches to
its window if it's already open.
<P>
<LI>On the <B>Insert</B>
menu, click <B>UserForm</B>.
<P>
A blank form is created and the toolbox is displayed.
<P>
<LI>Right&#173;click
the toolbox, and then click <B>Additional Controls</B>.
<P>
The Additional Controls dialog box is displayed.
<P>
<LI>In
the Available Controls box, select MSInet Control, version 5.0,
and then click OK.
<P>
A tool icon is added to the toolbox for the Internet
Transfer control. You don't need to repeat steps 4 and 5 the next
time you use the toolbox.
<P>
<LI>Click the new tool,
and then click the form where you want to place the control.
<P>
By default, the new control is named Inetn, where
n is some number.
<P>
</OL>

<P>
<B><FONT COLOR="#0000FF"><IMG SRC="Proced.gif">To
add the Internet Transfer control to a Microsoft Access form</FONT></B>
<P>

<OL>
<P>
<LI>Open the form in Design
view.
<P>
<LI>In the toolbox, click the <B>More Controls</B>
tool.
<P>
A menu appears that lists all the registered ActiveX
controls in your system.
<P>
<LI>On the menu of ActiveX
controls, click <B>MSInet Control</B>.
<P>
<LI>On the
form, click where you want to place the control.
<P>
By default, the new control is named ActiveXctln,
where n is some number.
<P>
<A NAME="CH015H223"></A></OL>

<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B>Setting the AccessType Property</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex50"></a>
<P>
In order to make any kind of connection to the Internet, you must
determine how your computer is connected to the Internet. If you
are on an intranet you will probably be connected to the Internet
through a <I>proxy server</I>.
<P>
When using a proxy server, all computers on an intranet that need
to connect to the Internet must do so through the proxy server.
By using a proxy server, sometimes called a <I>firewall</I>,
you can protect your local area network from being accessed by
others on the Internet. The proxy server acts as a one&#173;way
barrier between your internal network and the Internet, preventing
others on the Internet from accessing confidential information
on your internal network.
<P>
<B><FONT COLOR="#0000FF"><IMG SRC="Proced.gif">To determine the proxy server settings on your computer</FONT></B>
<P>
<FONT COLOR="#0000FF"><B>Note&nbsp;&nbsp;&nbsp;</B></FONT>The following steps apply only to computers running Windows&nbsp;95
and Windows NT Workstation version 4.0.
<P>

<OL>
<P>
<LI>On the <B>Taskbar</B> of
your computer, click <B>Start</B>, point to <B>Settings</B>, and
then click <B>Control Panel</B>.
<P>
<LI>Double&#173;click
the <B>Internet</B> icon.
<P>
<LI>In the <B>Internet
Properties</B> dialog box, click the <B>Connection</B> tab.
<P>
<LI>If
the <B>Connect through a proxy server</B> check box is selected,
click <B>Settings</B>.
<P>
<LI>The <B>Proxy Settings
</B>dialog box shows the name of your intranet's proxy server.
If no proxy server is defined, contact your workgroup administrator
for available proxy servers.
<P>
</OL>

<P>
If you want to use a proxy server other than that named in the
<B>Proxy Settings</B> dialog box, set the <B>AccessType </B>property
of the Internet Transfer control to <B>icNamedProxy</B>&nbsp;(2).
Then set the <B>Proxy </B>property to the name of the proxy server
you want to use.
<P>
If you prefer to use the default proxy server, set the <B>AccessType</B>
property to <B>icUseDefault</B> (0). You don't need to set the<B>
Proxy </B>property when you use the default proxy server.
<P>
The following table describes the settings for the <B>AccessType</B>
property.
<P>
<TABLE WIDTH=85% VALIGN="TOP" BORDER=1 BORDERCOLOR="#C0C0C0" CELLPADDING=4 CELLSPACING=0>

<TR><TD WIDTH=30% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Constant</FONT></B></TD><TD WIDTH=35% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Value</FONT></B>
</TD><TD WIDTH=35% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Description</FONT></B></TD>
</TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>icUseDefault</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">0</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">(Default) The control uses default proxy server settings found in the Windows registry. </FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>IcDirect</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">1</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">The control has a direct connection to the Internet.</FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><B>IcNamedProxy</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">2</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">The control uses the proxy server specified in the <B>Proxy </B>property.</FONT>
</TD></TR>

<P>
</TABLE>
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH015H224">Using the OpenURL Method</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex51"></a>
<P>
After you have set the <B>AccessType</B> property, the most basic
operation is to use the <B>OpenURL</B> method with a valid URL
to retrieve data on the Internet. When you use the <B>OpenURL</B>
method, the result depends on the target URL. The following example
returns the HTML document found on the Microsoft home page at
http://www.microsoft.com to a text box named Text1.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>' A TextBox control named Text1 contains the 
' return result of the method. The Internet Transfer
' control is named Inet1.
Text1.Text = Inet1.OpenURL("http://www.microsoft.com/")

</code></pre></FONT>
<P>
In Microsoft Access, a value assigned to the <B>Text</B> property
can't be longer than 1,024 characters. Substitute the following
line of code that sets the <B>Value</B> property of the text box
instead.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Text1.Value = ActiveXCtl0.OpenURL("http://www.microsoft.com/")

</code></pre></FONT>



<P>
As a result, the text box displays the HTML source code from the
Web site, which may resemble the following illustration.
<P>
<IMG SRC="01505.gif">
<P>
In this case, the default action was to return the HTML document
located at the URL. However, if the URL specifies a particular
text file, the<B> OpenURL</B> method retrieves the actual file.
For example, the following code:

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>' In Microsoft Access, substitute Text1.Value
' for Text1.Text in the following line.
Text1.Text = Inet1. OpenURL("ftp://ftp.microsoft.com/disclaimer.txt")

</code></pre></FONT>
<P>
retrieves the actual text of the file, as shown in the following
illustration.
<P>
<IMG SRC="01506.gif">
<P>
Finally, you can use the <B>OpenURL</B> method with a URL that
includes extra data appended to it. For example, many Web sites
offer the ability to search a database. To search a database from
a Web site, you can send a URL that includes the search criteria.
The following example uses the search engine at the www.yahoo.com
site with the search criteria p=maui.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Dim strURL As String

strURL = "http://www.yahoo.com/bin/search.exe?p=maui"
' In Microsoft Access, substitute Text1.Value
' for Text1.Text in the following line.
Text1.Text = Inet1.OpenURL(strURL)

</code></pre></FONT>
<P>
If the search engine finds a match for the criteria, the server
returns an HTML document that contains the appropriate information.
<P>
<FONT SIZE=3 FACE="Verdana, Arial, Helvetica"><B>Saving Text to a File by Using the OpenURL Method</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
If you want to save retrieved text to a file, use the <B>OpenURL</B>
method with the <B>Open</B>, <B>Write</B>, and <B>Close </B>statements,
as shown in the following example.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Dim strURL As String
Dim intFile As Integer

IntFile = FreeFile()
strURL = "http://www.microsoft.com/"
Open "MSsource.txt" For Output As #IntFile
Write #IntFile, Inet1.OpenURL(strURL)
Close #IntFile

</code></pre></FONT>
<P>
You can't save binary files to disk by using the <B>OpenURL</B>
method. You must use the <B>Execute</B> method in conjunction
with the <B>GetChunk</B> method as described later in this chapter.
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH015H225">Synchronous vs. Asynchronous Transmission</A>
</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
The <B>OpenURL </B>method results in a <I>synchronous</I>
transmission of data. In this context, synchronous means that
the transfer operation occurs before any other procedures are
run. Thus the data transfer must be completed before you can run
any other code.
<P>
The <B>Execute </B>method, on the other hand, results in an <I>asynchronous</I><I>
</I>transmission. When you use the <B>Execute</B> method,
the transfer operation occurs independently of other procedures.
Thus, after the <B>Execute</B> method is initiated, other code
can run while data is received in the background.
<P>
Using the <B>OpenURL </B>method results in a direct stream of
data that you can save to disk, or view directly in a <B>TextBox
</B>control (if the data was text). On the other hand, if you
are using the <B>Execute </B>method to retrieve data, you must
monitor the control's connection state by using the StateChanged
event. When the appropriate state is reached, use the <B>GetChunk
</B>method to retrieve data from the control's buffer. This operation
is discussed in greater detail in the sections that follow.
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH015H226">Using the Execute Method</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex52"></a>
<P>
You can use the <B>Execute</B> method with the FTP and the HTTP
protocols to retrieve data or perform operations on Internet servers.
The syntax for the <B>Execute</B> method is:
<P>
<I>controlname</I><B>.Execute</B> <I>url</I>,
<I>operation</I>, <I>data</I>, <I>requestheaders</I>
<P>
The following table describes the arguments of the<B> Execute</B>
method.
<P>
<TABLE WIDTH=85% VALIGN="TOP" BORDER=1 BORDERCOLOR="#C0C0C0" CELLPADDING=4 CELLSPACING=0>

<TR><TD WIDTH=41% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Argument</FONT></B></TD><TD WIDTH=59% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Description</FONT></B>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><I>controlname</I></FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Required. The name of the Internet Transfer control you are working with.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><I>url</I></FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Optional. Specifies the URL that you want to connect to.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><I>operation</I></FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Optional. Specifies the type of operation to perform.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><I>data</I></FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Optional. Specifies additional information needed for HTTP GET, HEAD, POST, and PUT methods.</FONT>
</TD></TR>
<TR><TD WIDTH=41% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"><I>requestheaders</I></FONT></TD><TD WIDTH=59% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Optional. Specifies additional headers to be sent from the remote server.</FONT>
</TD></TR>

<P>
</TABLE>
<P>
<FONT SIZE=3 FACE="Verdana, Arial, Helvetica"><B>Using the Execute Method with the FTP Protocol</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
When using the <B>Execute</B> method with the FTP protocol, you
only use the <I>operation</I> argument, and optionally,
the <I>url </I>argument. The <I>url </I>argument
is optional because after the first time you invoke the <B>Execute</B>
method with the <I>url </I>argument, the FTP connection
remains open. You can perform additional <B>Execute</B> method
operations on the same URL until a new URL is specified, or until
you perform the CLOSE operation. The following example retrieves
a file from a remote computer.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Inet1.Execute "FTP://ftp.microsoft.com", _
&#09;"GET disclaimer.txt c:\temp\disclaimer.txt"

</code></pre></FONT>
<P>
For FTP operations, you do not use the <I>data</I>
and <I>requestheaders </I>arguments. You pass all
of the operations and their parameters as a single string in the
<I>operation</I> argument, with parameters separated
by a space, as follows: 
<P>
<I>operationname parameter1 parameter2</I>
<P>
For example, to retrieve a file, the following code includes the
operation name (GET), and the two file names required by the operation.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>' Get the file named Disclaimer.txt and copy it to the 
' location C:\Temp\Disclaimer.txt.
Inet1.Execute, "GET Disclaimer.txt C:\Temp\Disclaimer.txt"

</code></pre></FONT>
<P>
The <I>operationname</I> part of the <I>operation</I>
argument is an <I>FTP command</I>. If you have used
FTP to retrieve files from anonymous FTP servers, you are familiar
with commands used to navigate through server trees, and to retrieve
files to a local hard disk. For example, to change to a different
directory with the FTP protocol, you use the <FONT SIZE=2 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica">"CD"</FONT>
command with the path to the directory you want to change to.
<P>
For the most common operations, such as putting a file on a server
and retrieving a file from a server, the Internet Transfer control
uses the same or a similar command with the <B>Execute</B> method.
The following example uses the <FONT SIZE=2 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica">"CD"</FONT>
command as an argument of the <B>Execute</B> method to change
to a different directory.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>' The txtURL text box contains the path to open. The txtRemotePath 
' text box contains the path to change to.
Inet1.Execute txtURL.Text, "CD " &amp; txtRemotePath.Text 

</code></pre></FONT>
<P>
The following table lists the FTP commands that you can use in
the <I>operation</I> argument of the <B>Execute</B>
method.
<P>
<TABLE WIDTH=85%  VALIGN="TOP" BORDER=1 BORDERCOLOR="#C0C0C0" CELLPADDING=4 CELLSPACING=0>
<TR><TD WIDTH=30% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">FTP command</FONT></B></TD>
<TD WIDTH=35% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Description</FONT></B></TD><TD WIDTH=35% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Example</FONT></B>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">CD <I>path</I></FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Change Directory. Changes to the directory specified in <I>path</I>.</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FONT SIZE=2 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica">Inet1.Execute , "CD docs\mydocs"
</FONT></TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">CDUP</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Changes to parent directory. Same as "CD .."</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FONT SIZE=2 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica">Inet1.Execute , "CDUP" 

</FONT></TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">CLOSE</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Closes the current FTP connection.</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FONT SIZE=2 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica">Inet.Execute , "CLOSE" 

</FONT></TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">DELETE <I>file</I></FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Deletes the file specified in <I>file</I>.</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FONT SIZE=2 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica">Inet1.Execute , _
"DELETE discard.txt" 

</FONT></TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">DIR <I>path</I></FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Searches the directory specified in <I>path</I>. If <I>path </I>isn't supplied, the current working directory is searched. Use the <B>GetChunk </B>method to return the directory listing.</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FONT SIZE=2 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica">Inet1.Execute , "DIR /mydocs" 

</FONT></TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">GET<I>file1 file2</I></FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Retrieves the remote file specified in <I>file1</I>, and creates a new local file specified in <I>file2</I>.</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FONT SIZE=2 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica">Inet1.Execute , _
"GET getme.txt C:\gotme.txt" 

</FONT></TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"> MKDIR <I>path</I></FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Creates a directory as specified in <I>path</I>. Success is dependent on user privileges on the remote host.</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FONT SIZE=2 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica">Inet1.Execute , "MKDIR /myDir" 

</FONT></TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">PUT <I>file1 file2</I></FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Copies a local file specified in <I>file1</I>to the remote host specified in <I>file2</I>.</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FONT SIZE=2 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica">Inet1.Execute , _
"PUT C:\putme.txt /putme.txt" 

</FONT></TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">PWD</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Print Working Directory. Returns the current directory name. Use the <B>GetChunk </B>method to return the directory name.</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FONT SIZE=2 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica">Inet1.Execute , "PWD" 

</FONT></TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">QUIT</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Terminate current connection</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FONT SIZE=2 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica">Inet1.Execute , "QUIT" 

</FONT></TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">RECV <I>file1 file2</I></FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Same as GET.</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FONT SIZE=2 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica">Inet1.Execute , _
"RECV getme.txt C:\gotme.txt" 

</FONT></TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">RENAME <I>file1 file2</I></FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Renames a file. Success is dependent on user privileges on the remote host.</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FONT SIZE=2 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica">Inet1.Execute , _
"RENAME old.txt new.txt

</FONT></TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">RMDIR <I>path</I></FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Removes a directory. Success is dependent on user privileges on the remote host.</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FONT SIZE=2 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica">Inet1.Execute , "RMDIR oldDir" 

</FONT></TD></TR>

<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">SEND <I>file</I></FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Copies a file to the remote host. (same as PUT.)</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FONT SIZE=2 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica">Inet1.Execute , _
"SEND C:\putme.txt /putme.txt" 

</FONT>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">SIZE <I>file</I></FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Returns the size of the file specified in file.
</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FONT SIZE=2 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica">Inet1.Execute _
"SIZE /largefile.txt"

</FONT>
</TD></TR>
</TABLE>
<P>
<FONT COLOR="#0000FF"><B>Important&nbsp;&nbsp;&nbsp;</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>If
your proxy server is a CERN proxy server, you cannot make direct
FTP connections by using the Execute method. In that case, to
get a file, use the OpenURL method with the Open, Put, and Close
statements, as described in "Saving Text to a File by Using
the OpenURL Method" earlier in this chapter. You can also
use the OpenURL method to get a directory listing by invoking
the method and specifying the target directory as the URL.
<P>
<B>Logging On to FTP Servers </B>

<P>
FTP servers can be either public or private. Anyone can log on
to a public server. To log on to a private server, on the other
hand, you must be a registered user of the server. In either case,
the FTP protocol requires that you supply a user name and a password.
<P>
When logging on to public servers, it is common practice to log
on as "anonymous," (UserName = "anonymous")
and use your e&#173;mail name as the password. With the Internet
Transfer control, the process of logging on is simplified even
further. By default, if you do not specify values for the <B>UserName</B>
and <B>Password</B> properties, the Internet Transfer control
uses "anonymous" as your user name, and your e&#173;mail
name as the password. 
<P>
If you are logging on to a private server, set the <B>UserName</B>,
<B>Password</B>, and<B> URL</B> properties to appropriate values,
and use the <B>Execute</B> method, as shown in the following example.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>With Inet1
&#09;.URL = "ftp://ftp.someFTPSite.com"
&#09;.UserName = "John Smith"
&#09;.Password = "mAuI&amp;9$6"
&#09;.Execute ,"DIR"&#09;&#09;&#09;&#09;' Returns the directory.
&#09;.Execute ,"CLOSE"&#09;&#09;&#09;' Close the connection.
End With

</code></pre></FONT>
<P>
After you invoke the <B>Execute</B> method, the FTP connection
remains open. You can then continue to use the <B>Execute</B>
method to perform other FTP operations such as CD and GET. When
you have completed the session, close the connection by using
the <B>Execute</B> method with the CLOSE operation. You can also
close the connection automatically by changing the <B>URL</B>
property, and invoking either the <B>OpenURL</B> or <B>Execute</B>
method; this closes the current FTP connection and opens the new
URL.
<P>
<FONT SIZE=3 FACE="Verdana, Arial, Helvetica"><B>Using the Execute Method with the HTTP Protocol</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
When you use the<B> Execute</B> method with the HTTP protocol
to request data from the server, you use the GET, HEAD, POST,
and PUT methods in the <I>operation</I> argument.
You can use these methods with the <B>Execute</B> method, as shown
in the following table.
<P>
<TABLE WIDTH=85%  VALIGN="TOP" BORDER=1 BORDERCOLOR="#C0C0C0" CELLPADDING=4 CELLSPACING=0>
<TR><TD WIDTH=30% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">HTTP method</FONT></B></TD>
<TD WIDTH=35% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Description</FONT></B></TD><TD WIDTH=35% valign="Bottom" BGCOLOR="#C0C0C0"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Example</FONT></B>
</TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">GET</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Retrieves the file specified in the <I>url</I> argument.</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">

Inet1.Execute _
"http://www.microsoft.com" &amp; _
"/default.htm", "GET" 


</FONT></TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">HEAD</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Retrieves only the headers of the file specified in the <I>url</I> argument.</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">

Inet1.Execute , "HEAD" 


</FONT></TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">POST</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Provides additional data to support a request to the remote host.</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">

Inet1.Execute , "POST", strFormData


</FONT></TD></TR>
<TR><TD WIDTH=30% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica"> PUT</FONT></TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">Replaces data at the specified URL.</FONT>
</TD><TD WIDTH=35% VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT SIZE=2 FACE="Verdana, Arial, Helvetica">

Inet1.Execute , "PUT", "replace.htm" 


</FONT></TD></TR>

<P>
</TABLE>
<P>
<B>Using the Execute Method with the Common Gateway Interface
</B>

<P>
On many World Wide Web sites, you can search a database for criteria
that you specify. Most Web sites accomplish this by using the
HTTP protocol, which can send queries that use the Common Gateway
Interface (CGI). 
<P>
It is not in the scope of this section to explain the CGI; however,
if you are familiar with the CGI, you can use the <B>Execute</B>
method to construct an application that simulates the search behavior
of these Web sites. The following example shows a typical CGI
query string.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>http://www.yippee.com/cgi-bin/find.exe?find=Hangzhou

</code></pre></FONT>



<P>
You could send this same query by using the <B>Execute</B> method,
as follows.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Dim strURL As String, strFormData As String

strURL = "//www.yippee.com/cgi-bin/find.exe"
strFormData = "find=Hangzhou"
Inet1.Execute strURL, "POST", strFormData

</code></pre></FONT>
<P>
To retrieve resulting data from a server, you must use the <B>GetChunk
</B>method, as described in the following section.
<P>
<FONT SIZE=3 FACE="Verdana, Arial, Helvetica"><B>Using the GetChunk Method</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
When you download data from a remote computer by using the <B>Execute</B>
method, an asynchronous connection is made. For example, if you
use the <B>Execute</B> method with the HTTP GET method, the server
retrieves the requested file. When the entire file has been retrieved,
the StateChanged event returns <B>icResponseCompleted</B> (12).
At that point, you can use the <B>GetChunk</B> method to retrieve
the data from the buffer. This is shown in the following example.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Private Sub Inet1_StateChanged(ByVal State As Integer)
&#09;Dim vtData As Variant&#09;&#09;' Data variable.
&#09;Dim intFile As Integer&#09;&#09;' File number variable.

&#09;intFile = FreeFile()&#09;&#09;' Get free file number.
&#09;Select Case State
&#09;.
&#09;. ' Other cases not shown.
&#09;.
&#09;Case icResponseCompleted
&#09;&#09;' Open a file to write to.
&#09;&#09;Open "test.txt" For Binary Access _
&#09;&#09;&#09;Write As #intFile

&#09;&#09;' Get the first chunk. NOTE: specify a byte 
&#09;&#09;' array (icByteArray) to retrieve a binary file.
&#09;&#09;vtData = Inet1.GetChunk(1024, icString)

&#09;&#09;Do While LenB(vtData) &gt; 0
&#09;&#09;&#09;Put #intFile, , vtData
&#09;&#09;&#09;' Get next chunk.
&#09;&#09;&#09;vtData = Inet1.GetChunk(1024, icString)
&#09;&#09;Loop
&#09;&#09;Put #intFile, , vtData
&#09;&#09;Close #intFile

&#09;End Select
End Sub

</code></pre></FONT>
<P>
<A NAME="PG015C8"></A>
</MENU></MENU></MENU>
<MENU>


<FONT SIZE=5 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH015H108">Using the WinSock Control</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
<MENU><MENU>

<P>
<a name="dex53"></a>
<P>
Microsoft Office&nbsp;97, Developer Edition also provides the
WinSock control, which you can use to connect to a remote computer
and exchange data. You use the WinSock control with either the
Transmission Control Protocol (TCP) or the User Datagram Protocol
(UDP). You can use both protocols to create client and server
applications. The WinSock control doesn't have a visible interface
at run time. 
<P>
You can use the WinSock control to:
<P>

<UL>
<P>
<LI>Create a client application
that collects user information before sending it to a central
server.
<P>
<LI>Create a server application that functions
as a central collection point for data from several users.
<P>
<LI>Create
an application in which uses can exchange messages in real time,
or "chat" with each other.
<P>
<A NAME="CH015H227"></A></UL>

<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B>Determining Which Protocol to Use</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex54"></a>
<P>
To use the WinSock control, you must first decide which protocol
to use. The major difference between TCP and UDP is their connection
state:
<P>

<UL>
<P>
<LI>The TCP protocol requires
a persistent connection. It is analogous to a telephone&nbsp;&#151;
the user must establish a connection before proceeding.
<P>
<LI>The
UDP protocol is a connectionless protocol. The transaction between
two computers is like passing a note&nbsp;&#151; a message
is sent from one computer to another, but there is no persistent
connection between the two.
<P>
</UL>

<P>
Here are a few questions that may help you determine which protocol
to use:
<P>

<UL>
<P>
<LI>Will the application require
acknowledgment from the server or client when data is sent or
received? If so, use the TCP protocol because it requires an explicit
connection before sending or receiving data.
<P>
<LI>Is
the integrity of your data critical? If so, use the TCP protocol.
Once a connection has been made, the TCP protocol maintains the
connection and ensures the integrity of the data. If the integrity
of your data is not critical, you can improve performance by using
the UDP protocol. Using the UDP protocol can be faster and uses
less network bandwidth, but you may experience a certain amount
of data loss. However, when transmitting an image or a sound file,
the data loss may not even be noticeable. 
<P>
<LI>Will
the data be sent intermittently or in one session? If the data
will be sent intermittently, you may want to use the UDP protocol
because it requires fewer network resources. For example, use
the UDP protocol if you are creating an application that notifies
specific computers when certain tasks have completed. If you want
the data to be sent in one session, use the TCP protocol because
it maintains a persistent connection to the network.
<P>
<A NAME="CH015H228"></A></UL>

<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B>Adding the Control to a Form</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex55"></a>
<P>
In Microsoft Excel, Word, and PowerPoint, you can add the WinSock
control to a UserForm you create with the Visual Basic Editor.
Although the WinSock control is available in the <B>Control Toolbox</B>
in Microsoft Excel, Word, and PowerPoint, you can't add the control
directly to their documents. In Microsoft Access, you can add
the WinSock control to a form in Design view. The WinSock control
doesn't display when your application is running.
<P>
<B><FONT COLOR="#0000FF"><IMG SRC="Proced.gif">To
add the WinSock control to a Microsoft Excel, Word, or PowerPoint
UserForm created with the Visual Basic Editor</FONT></B>
<P>

<OL>
<P>
<LI>Open a Microsoft Excel,
Word, or PowerPoint document.
<P>
<LI>On the <B>Tools</B>
menu, point to <B>Macro</B>, and then click <B>Visual Basic Editor</B>.
<P>
This starts the Visual Basic Editor or switches to
its window if it's already open.
<P>
<LI>On the <B>Insert</B>
menu, click <B>UserForm</B>.
<P>
A blank form is created and the toolbox is displayed.
<P>
<LI>Right&#173;click
the toolbox, and then click <B>Additional Controls</B>.
<P>
The Additional Controls dialog box is displayed.
<P>
<LI>In
the Available Controls box, select WinSock Control, version 5.0,
and then click OK.
<P>
A tool icon is added to the toolbox for the WinSock
control. You don't need to repeat steps 4 and 5 the next time
you use the toolbox.
<P>
<LI>Click the new tool, and
then click the form where you want to place the control.
<P>
By default, the new control is named Winsockn, where
n is some number.
<P>
</OL>

<P>
<B><FONT COLOR="#0000FF"><IMG SRC="Proced.gif">To
add the WinSock control to a Microsoft Access form</FONT></B>
<P>

<OL>
<P>
<LI>Open the form in Design
view.
<P>
<LI>In the toolbox, click the <B>More Controls</B>
tool.
<P>
A menu appears that lists all the registered ActiveX
controls in your system.
<P>
<LI>On the menu of ActiveX
controls, click <B>WinSock Control, version 5.0</B>.
<P>
<LI>On
the form, click where you want to place the control.
<P>
By default, the new control is named ActiveXctln,
where n is some number.
<P>
<A NAME="CH015H229"></A></OL>

<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B>Setting the Protocol Property</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex56"></a>
<P>
After you add the WinSock control to your form, you specify which
protocol you are going to use. If you want to use the UDP protocol,
set the <B>Protocol</B> property to <B>sckUDPProtocol</B>. The
default setting of the <B>Protocol</B> property is <B>sckTCPProtocol</B>.
You can set the <B>Protocol</B> property in the property sheet
or in Visual Basic code, as follows.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Winsock1.Protocol = sckUDPProtocol

</code></pre></FONT>



<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH015H230">Determining the Name of a Computer</A>
</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex57"></a>
<P>
To connect to a remote computer, you must know either its Internet
Protocol (IP) address or its "friendly name." The IP
address is a series of three digit numbers separated by periods
(<I>nnn</I>.<I>nnn</I>.<I>nnn</I>.<I>nnn</I>).
It's much easier to remember the friendly name of a computer.
<P>
<B><FONT COLOR="#0000FF"><IMG SRC="Proced.gif">To
determine the name of a computer</FONT></B>
<P>

<OL>
<P>
<LI>On the <B>Taskbar</B> of
your computer, click <B>Start</B>, point to <B>Settings</B>, and
then click <B>Control Panel</B>.
<P>
<LI>Double&#173;click
the <B>Network</B> icon.
<P>
<LI>Click the <B>Identification</B>
tab.
<P>
<LI>The name of your computer is in the <B>Computer
name</B> box.
<P>
</OL>

<P>
After you have determined a computer's name, you can use it as
the value for the <B>RemoteHost</B> property of a WinSock control,
as shown in the examples later in this section.
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH015H231">Creating an Application That Uses the
TCP Protocol</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex58"></a>
<P>
When creating an application that uses the TCP protocol, you must
first decide if your application will be a client or a server.
The client makes a connection request, which the server can then
accept to complete the connection. After the connection is complete,
the client and server can freely communicate with each other.
<P>
<B><FONT COLOR="#0000FF"><IMG SRC="Proced.gif">To
create a TCP server</FONT></B>
<P>

<OL>
<P>
<LI>Create a Microsoft Excel,
Word, or PowerPoint document or a Microsoft Access database.
<P>
<LI>Create
a form and name it frmServer.
<P>
<LI>Set the <B>Caption</B>
property of the form to TCP Server.
<P>
<LI>Add a WinSock
control to the form and set its <B>Name </B>property to tcpServer.
<P>
<LI>Add
two text box controls to the form. Name the first txtSendData,
and the second txtOutput.
<P>
<LI>Add the following
code to the form.


<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Private Sub Form_Load()
&#09;' Set the LocalPort property to an integer.
&#09;' Then invoke the Listen method.
&#09;tcpServer.LocalPort = 1001
&#09;tcpServer.Listen 
End Sub

Private Sub tcpServer_ConnectionRequest
(ByVal requestID As Long)
&#09;' Check if the value of the control's State property
&#09;' is closed. If not, close the connection before
&#09;' accepting the new connection.
&#09;If tcpServer.State &lt;&gt; sckClosed Then tcpServer.Close
&#09;' Accept the request with the requestID parameter.
&#09;tcpServer.Accept requestID
End Sub

Private Sub txtSendData_Change()
&#09;' The TextBox control named txtSendData 
&#09;' contains the data to be sent. Whenever the user
&#09;' types into the textbox, the string is sent
&#09;' using the SendData method.
&#09;tcpServer.SendData txtSendData.Text
End Sub

Private Sub tcpServer_DataArrival (ByVal bytesTotal As Long)
&#09;' Declare a variable for the incoming data.
&#09;' Use the GetData method and set the Text
&#09;' property of a TextBox named txtOutput to
&#09;' the data.
&#09;Dim strData As String
&#09;tcpServer.GetData strData
&#09;' In Microsoft Access, substitute txtOutput.Value
&#09;' for txtOutput.Text in the following line.
&#09;txtOutput.Text = strData
End Sub

</code></pre></FONT>
</OL>


<P>
<a name="dex59"></a>
<P>
These procedures create a simple server application. To complete
the scenario, you must also create a client application. 
<P>
<B><FONT COLOR="#0000FF"><IMG SRC="Proced.gif">To
create a TCP client</FONT></B>
<P>

<OL>
<P>
<LI>Create a form and name it
frmClient.
<P>
<LI>Set the Caption property of the form
to TCP Client.
<P>
<LI>Add a WinSock control to the
form and set its Name property to tcpClient.
<P>
<LI>Add
two text box controls to the form. Name the first txtSendData,
and the second txtOutput.
<P>
<LI>Add a command button control to the form and name it cmdConnect.
<P>
<LI>Set the Caption property of the command button control to Connect.
<P>
<LI>Add the following code to the form.
<P>
</OL>

<FONT COLOR="#0000FF"><B>Important&nbsp;&nbsp;&nbsp;</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>Set
the value of the RemoteHost property to the name of your computer.


<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Private Sub Form_Load()
&#09;' The name of the Winsock control is tcpClient.
&#09;' Note: To specify a remote host, you can use
&#09;' either the IP address (ex: "121.111.1.1") or
&#09;' the computer's friendly name, as shown here.
&#09;tcpClient.RemoteHost = "RemoteComputerName"
&#09;tcpClient.RemotePort = 1001
End Sub

Private Sub cmdConnect_Click()
&#09;' Invoke the Connect method to initiate a
&#09;' connection.
&#09;tcpClient.Connect
End Sub

Private Sub txtSendData_Change()
&#09;tcpClient.SendData txtSendData.Text
End Sub

Private Sub tcpClient_DataArrival _
 (ByVal bytesTotal As Long)
&#09;Dim strData As String
&#09;tcpClient.GetData strData
&#09;' In Microsoft Access, substitute txtOutput.Value
&#09;' for txtOutput.Text in the following line.
&#09;txtOutput.Text = strData
End Sub

</code></pre></FONT>


<P>
The preceding code creates a simple client/server application.
To try the two together, make a copy of the application and put
it on another computer. Open the client on one computer and open
the server on the other computer. Then click <B>Connect</B> on
the client form. When you type text into the txtSendData text
box on either form, the same text appears in the txtOutput text
box on the other form.
<P>
<FONT SIZE=3 FACE="Verdana, Arial, Helvetica"><B>Accepting More Than One Connection Request</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex60"></a>
<P>
With Microsoft Word, Microsoft Excel, Microsoft PowerPoint, and
Microsoft Access forms, you can only create a server that accepts
only one connection request. However, you can use Microsoft Visual
Basic version 4.0 or later to create a server application that
accepts several connection requests by using the same control.
To do so, you create a new instance of the control by setting
its <B>Index</B> property; this creates a control array. Then
you invoke the <B>Accept</B> method on the new instance. You do
not need to close the connection.
<P>
The following code assumes there is a WinSock control on a form
named sckServer, and that its <B>Index</B> property has been set
to 0; thus the control is part of a control array. In the Declarations
section, a module&#173;level variable intMax is declared. In the
form's Load event, intMax is set to 0, and the <B>LocalPort</B>
property for the first control in the array is set to 1001. Then
the <B>Listen</B> method is invoked for the control, making it
the control that receives connection requests. As each connection
request arrives, the code tests it to see if the <B>Index</B>
property is 0 (the value of the "listening" control).
If so, the listening control increments intMax, and uses that
number to create a new control instance. The new control instance
then accepts the connection request.

<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Private intMax As Long

Private Sub Form_Load()
&#09;intMax = 0
&#09;sckServer(0).LocalPort = 1001
&#09;sckServer(0).Listen
End Sub

Private Sub sckServer_ConnectionRequest _
&#09;(Index As Integer, ByVal requestID As Long)
&#09;If Index = 0 Then
&#09;&#09;intMax = intMax + 1
&#09;&#09;Load sckServer(intMax)
&#09;&#09;sckServer(intMax).LocalPort = 0
&#09;&#09;sckServer(intMax).Accept requestID
&#09;&#09;Load txtData(intMax)
&#09;End If
End Sub

</code></pre></FONT>
<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH015H232">Creating an Application That Uses the
UDP Protocol</A></B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
<a name="dex61"></a>
<P>
Creating a UDP application is even simpler than creating a TCP
application because the UDP protocol doesn't require a connection.
After you create the forms, add the WinSock controls, and set
the <B>Protocol</B> property to UDPProtocol, you add code on both
computers that performs the following steps:
<P>

<OL>
<P>
<LI>Set the <B>RemoteHost</B>
property of the WinSock control to the name of the other computer.
<P>
<LI>Set
the <B>RemotePort</B> property of the WinSock control to the <B>LocalPort</B>
property of the other WinSock control.
<P>
<LI>Use the
<B>Bind</B> method to specify the local port to be used by the
WinSock control.
<P>
</OL>

<P>
The <B>Bind</B> method reserves a local port for use by the WinSock
control. For example, when you bind the control to port number
1001, no other application can use that port to receive connection
requests. This may be useful if you want to prevent another application
from using that port.
<P>
If there is more than one network adapter on the machine, you
can specify which adapter to use in the <I>LocalIP</I>
argument the <B>Bind</B> method. If you do not specify which network
adapter to use, the control uses the first adapter listed in the
<B>Network</B> dialog box, which is available through the computer's
Control Panel.
<P>
When using the UDP protocol, you can change the setting of the
<B>RemoteHost</B> and <B>RemotePort</B> properties while remaining
bound to the same local port. However, with the TCP protocol,
you must close the connection before changing the <B>RemoteHost</B>
and <B>RemotePort</B> properties.
<P>
In the TCP application created in the previous section, you must
set the WinSock control on the client to receive connection requests,
and the WinSock control on the server must initiate a connection.
In contrast, the two computers in a UDP application do not have
such restrictive roles. Both computers can send and receive messages.
Because both computers can be considered equal in the relationship,
a UDP application is sometimes called a <I>peer&#173;to&#173;peer
application</I>.
<P>
The following procedures create a UDP application that two people
can use to exchange messages in real time, or "talk"
to each other.
<P>
<B><FONT COLOR="#0000FF"><IMG SRC="Proced.gif">To
create a UDP Peer</FONT></B>
<P>

<OL>
<P>
<LI>Create a document in Microsoft
Excel, Word, or PowerPoint, or create a database in Microsoft
Access.
<P>
<LI>Create a form and name it frmPeerA.
<P>
<LI>Set
the <B>Caption </B>property of the form to Peer A.
<P>
<LI>Add
a WinSock control to the form and set its <B>Name </B>property
to udpPeerA.
<P>
<LI>Set the <B>Protocol</B> property
to UDPProtocol.
<P>
<LI>Add two text box controls to
the form. Name the first txtSendData, and the second txtOutput.
<P>
<LI>Add
the following code to the form.


<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Private Sub Form_Load()
&#09;' The control's name is udpPeerA.
&#09;With udpPeerA
&#09;&#09;.Protocol = sckUDPProtocol&#09;' Set the control to UDP protocol.
&#09;&#09;.RemoteHost= "PeerB"&#09;&#09;&#09;' Set RemoteHost property to the
&#09;&#09;&#09;&#09;&#09;&#09;&#09;&#09;&#09;&#09;&#09;'name of the other computer.
&#09;&#09;.RemotePort = 1001&#09;&#09;&#09;&#09;' Port to connect to.
&#09;&#09;.Bind 1002&#09;&#09;&#09;&#09;&#09;&#09;' Bind to the local port.
&#09;End With
&#09;frmPeerB.Show
&#09;&#09;&#09;&#09;&#09;&#09;' Show second form.
End Sub

Private Sub txtSendData_Change()
&#09;' Send text as soon as it's typed.
&#09;udpPeerA.SendData txtSendData.Text
End Sub

Private Sub udpPeerA_DataArrival
(ByVal bytesTotal As Long)
&#09;Dim strData As String

&#09;udpPeerA.GetData strData
&#09;' In Microsoft Access, substitute txtOutput.Value
&#09;' for txtOutput.Text in the following line.
&#09;txtOutput.Text = strData
End Sub

</code></pre></FONT>
</OL>




<P>
<B><FONT COLOR="#0000FF"><IMG SRC="Proced.gif">To
create a second UDP Peer</FONT></B>
<P>

<OL>
<P>
<LI>Create a form and name
it frmPeerB.
<P>
<LI>Set the Caption property of the
form to Peer B.
<P>
<LI>Add a WinSock control to the
form and set its Name property to udpPeerB.
<P>
<LI>Set
the Protocol property to UDPProtocol.
<P>
<LI>Add two
text box controls to the form. Name the first txtSendData, and
the second txtOutput.
<P>
<LI>Add the following code
to the form.


<FONT SIZE=3 FACE="COURIER NEW,COURIER" FACE="Verdana, Arial, Helvetica"><pre><code>Private Sub Form_Load()
&#09;' The control's name is udpPeerB.
&#09;With udpPeerB
&#09;&#09;.Protocol = sckUDPProtocol&#09;' Set the control to UDP protocol.
&#09;&#09;.RemoteHost= "PeerA"&#09;&#09;&#09;' Set RemoteHost property to the
&#09;&#09;&#09;&#09;&#09;&#09;&#09;&#09;&#09;&#09;&#09;'name of the other computer.
&#09;&#09;.RemotePort = 1002&#09;&#09;&#09;&#09;' Port to connect to.
&#09;&#09;.Bind 1001&#09;&#09;&#09;&#09;&#09;&#09;' Bind to the local port.
&#09;End With
End Sub

Private Sub txtSendData_Change()
&#09;' Send text as soon as it's typed.
&#09;udpPeerB.SendData txtSendData.Text
End Sub

Private Sub udpPeerB_DataArrival (ByVal bytesTotal As Long)
&#09;Dim strData As String

&#09;udpPeerB.GetData strData
&#09;' In Microsoft Access, substitute txtOutput.Value
&#09;' for txtOutput.Text in the following line.
&#09;txtOutput.Text = strData
End Sub

</code></pre></FONT>
</OL>


<P>
To try this example, make a copy of the application and put it
on another computer. Open the first peer on one computer and open
the second peer on the other computer. When you type text into
the txtSendData text box on either form, the same text appears
in the txtOutput text box on the other form.
<P>
<A NAME="PG015C9"></A>

</MENU></MENU></MENU>
<MENU>


<FONT SIZE=5 FACE="Verdana, Arial, Helvetica"><B><A NAME="CH015H109">Setting Up a Personal Web Server</A> </B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
<MENU><MENU>

<P>
<a name="dex62"></a>
<P>
Microsoft provides two products that make it easy to create a
personal Web server on your computer for low&#173;volume Web publishing:
Microsoft Personal Web Server and Microsoft Peer Web Services.
These products are ideal for publishing departmental home pages,
personal home pages, or small&#173;scale Web applications on your
company's intranet. 
<P>
Although Personal Web Server and Peer Web Services are intended
for small&#173;scale Web publishing, they provide most of the
same services and features as Microsoft Internet Information Server,
a robust Web server intended for high&#173;volume Web publishing.
You can use Personal Web Server or Peer Web Services to develop
and test Web applications, and then transfer them to a Web server
running Microsoft Internet Information Server. 
<P>
Both Personal Web Server and Peer Web Services can:
<P>

<UL>
<P>
<LI>Publish Web pages on the
Internet or over a LAN on an intranet by using the HTTP service.
<P>
<LI>Support
Microsoft ActiveX controls.
<P>
<LI>Transmit or receive
files by using the FTP service. 
<P>
<LI>Run Internet
Server API (ISAPI) and Common Gateway Interface (CGI) scripts.
<P>
<LI>Send
queries to ODBC data sources by using the Internet Database Connector
component (Httpodbc.dll).
<P>
<LI>Support the Secure
Sockets Layer.
<P>
<LI>Use pass&#173;through security
to Windows NT Server and Novell NetWare as long as File and Printer Sharing services are installed.
<P>
<LI>Use
local&#173;user security if Microsoft File and Print Sharing services are
not installed.
<P>
<LI>Perform remote administration
by using a Web&#173;based application.
<P>
<A NAME="CH015H233"></A></UL>

<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B>Installation Requirements</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
To run Personal Web Server or Peer Web Services, you must meet
the following installation requirements.
<P>
<FONT SIZE=3 FACE="Verdana, Arial, Helvetica"><B>Personal Web Server</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>

<UL>
<P>
<LI>A computer with Windows&nbsp;95
installed.
<P>
<LI>A CD&#173;ROM drive for the installation
compact disc. 
<P>
<LI>Adequate disk space for your
information content.
<P>
</UL>

<P>
<FONT SIZE=3 FACE="Verdana, Arial, Helvetica"><B>Peer Web Services</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>

<UL>
<P>
<LI>A computer with Windows&nbsp;NT
Workstation version 4.0 installed.
<P>
<LI>A CD&#173;ROM
drive for the installation compact disc.
<P>
<LI>Adequate
disk space for your information content. It is recommended that
all drives used with Peer Web Services be formatted with the Windows&nbsp;NT
File System (NTFS).
<P>
<A NAME="CH015H234"></A></UL>

<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B>Publication Requirements</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
When using Personal Web Server or Peer Web Services, each computer
you want to access the server must have Transmission Control Protocol/Internet
Protocol (TCP/IP) installed. The TCP/IP protocol is included with
Windows&nbsp;95 and Windows&nbsp;NT Workstation version 4.0. To
install and configure the TCP/IP protocol and related components,
double&#173;click the <B>Network</B> icon in Control Panel. Each
system must meet additional requirements depending on whether
you want to use the server on an intranet or the Internet.
<P>
<FONT SIZE=3 FACE="Verdana, Arial, Helvetica"><B>Intranet Publication Requirements</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>

<UL>
<P>
<LI>A network adapter card and
local area network (LAN) connection. 
<P>
<LI>The Windows
Internet Name Service (WINS) server or the Domain Name System
(DNS) server installed on a computer in your intranet. WINS and
DNS run only on Windows&nbsp;NT Server. This step is optional,
but it does allow users to use "friendly names" instead
of IP addresses when connecting to your server.
<P>
</UL>

<P>
<FONT SIZE=3 FACE="Verdana, Arial, Helvetica"><B>Internet Publication Requirements</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>

<UL>
<P>
<LI>An Internet connection and
Internet Protocol (IP) address from your Internet Service Provider
(ISP).
<P>
<LI>DNS registration for that IP address.
This step is optional, but it does allow users to use "friendly
names" instead of IP addresses when connecting to your server.
For example, "microsoft.com" is the friendly domain
name registered to Microsoft. Within the microsoft.com domain,
Microsoft has named its World Wide Web (WWW) server "www.microsoft.com."
Most ISPs can register your domain names for you.
<P>
<LI>A
network adapter card suitable for your connection to the Internet.
<P>
<A NAME="CH015H235"></A></UL>

<P>
</MENU></MENU>
<TABLE WIDTH=100% CELLPADDING=0 CELLSPACING=0 BORDER=0>
<TR><TD WIDTH=45 VALIGN=TOP><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<IMG SRC="flaggrn2.gif" HSPACE=3></FONT></TD>
<TD>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=4><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<B>Installing Personal Web Server</B></FONT>
</TD></TR>
</TABLE>
<MENU><MENU>

<P>
The Setup file for Personal Web Server is available on the Web. To download the Setup program for Personal Web Server for Windows 95, connect to the Microsoft Personal Web home page at:
<P>
<A HREF="http://www.microsoft.com/ie/iesk/pws.htm">http://www.microsoft.com/ie/iesk/pws.htm</A>
<P>
You can install Personal Web Server if you are running Windows&nbsp;95
or Windows&nbsp;NT Workstation version 4.0. However, if you are
using Windows&nbsp;NT, it is recommended that you install Peer
Web Services instead.
<P>
<B><FONT COLOR="#0000FF"><IMG SRC="Proced.gif">To
install Personal Web Server from the Value Pack</FONT></B>
<P>

<OL>
<P>
<LI>Connect to the Personal Web Server home page on the Web and download PWS10a.exe.
<P>
<LI>Double&#173;click <B>PWS10a.exe</B>.
<P>
This starts the installation process. You may be required
to supply additional files from your Windows&nbsp;95 Setup disks.
<P>
<LI>When
installation is finished, the Setup program asks if you want to
restart your computer. Click <B>Yes</B>.
<P>
<A NAME="CH015H236"></A></OL>

<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B>Installing Peer Web Services</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
The files to install Peer Web Services are provided on the Microsoft
Windows&nbsp;NT Workstation version 4.0 Setup CD&#173;ROM.
<P>
<B><FONT COLOR="#0000FF"><IMG SRC="Proced.gif">To
install Peer Web Services</FONT></B>
<P>

<OL>
<P>
<LI>Open <B>Control Panel</B>,
and then double&#173;click <B>Network</B>.
<P>
<LI>Click
the <B>Services</B> tab, and then click <B>Add</B>.
<P>
<LI>In
the Network Service list, double&#173;click Peer Web Services.
<P>
This starts the installation process. You may be required
to supply additional files from your Windows&nbsp;NT Setup disks.
<P>
<LI>In
the first Microsoft Peer Web Services Setup dialog box, click
OK.
<P>
<LI>In the second <B>Microsoft Peer Web Services
Setup</B> dialog box, select which services you want to install,
and then click <B>OK</B>.
<P>
<LI>In the <B>Publishing
Directories</B> dialog box, specify the directories you want to
use for each service, or accept the default directories, and then
click <B>OK</B>.
<P>
<A NAME="CH015H237"></A></OL>

<P>
<FONT SIZE=4 FACE="Verdana, Arial, Helvetica"><B>Getting More Information</B></FONT><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>

<P>
For more information about Using Personal Web Server or Peer Web
Services, you can refer to their online documentation, which is
available once installation is complete.
<P>
<B><FONT COLOR="#0000FF"><IMG SRC="Proced.gif">To
view documentation for Personal Web Server or Peer Web Services</FONT></B>
<P>

<OL>
<P>
<LI>Start your Web browser.
<P>
<LI>To
view the documentation for Personal Web Server, in your browser's
address box, type:
<P>
http://MyServer/docs/default.htm
<P>
To view the documentation for Peer Web Services, in
your browser's address box, type:
<P>
http://MyServer/iisadmin/htmldocs/inetdocs.htm
<P>
where MyServer is the name of the computer on which
you installed Personal Web Server or Peer Web Services. To determine
the name of the computer, open Control Panel, double&#173;click
the Network icon, and then click the Identification tab.
<P>
<LI>Press
<FONT SIZE=2 FACE="Verdana, Arial, Helvetica">ENTER</FONT>.
<P>
</OL>

<BR>

</MENU></MENU></MENU>
<HR>
<!--TOTOP_START-->
<TABLE width=98% cellpadding=0 cellspacing=0 border=0>


</TABLE>

<!--ToTop_End-->

<!--EndNav_Start-->

<P>
</FONT>
</FONT></BODY>


</HTML>
