<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PrivateProfileString Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>PrivateProfileString Property</H1>Applies To</P>
<SPAN CLASS="eln">System</SPAN> object.</P>
Description</P>
Returns or sets a string in a settings file or the Windows registry. Read/write <SPAN CLASS="lee">String</SPAN>.</P>
Syntax</P>
<SPAN CLASS="p">expression</SPAN><SPAN CLASS="l">.</SPAN><SPAN CLASS="lee">PrivateProfileString</SPAN><SPAN CLASS="l">(</SPAN><SPAN CLASS="narg">Filename</SPAN><SPAN CLASS="l">, </SPAN><SPAN CLASS="narg">Section</SPAN><SPAN CLASS="l">, </SPAN><SPAN CLASS="narg">Key</SPAN><SPAN CLASS="l">)</SPAN></P>
<SPAN CLASS="p">expression</SPAN>   Required. An expression that returns a <SPAN CLASS="lee">System</SPAN> object.</P>
<SPAN CLASS="narg">Filename</SPAN>   Required <SPAN CLASS="lee">String</SPAN>. The file name for the settings file. If there's no path specified, the Windows folder (Windows) or the Preferences folder (Macintosh) is assumed. If you're using Windows&nbsp;95 or Windows&nbsp;NT to return a setting from the registry, <SPAN CLASS="narg">Filename</SPAN> must be an empty string ("").</P>
<SPAN CLASS="narg">Section</SPAN>   Required <SPAN CLASS="lee">String</SPAN>. The name of the section in the settings file that contains <SPAN CLASS="narg">Key</SPAN>. In a Windows settings file, the section name appears between brackets before the associated keys (don't include the brackets with <SPAN CLASS="narg">Section</SPAN>). If you're returning a setting from the Windows registry, <SPAN CLASS="narg">Section</SPAN> should be the complete path to the key, including the root (for example, "HKEY_CURRENT_USER\Software\Microsoft<BR>\Office\8.0\Word\Options").</P>
<SPAN CLASS="narg">Key</SPAN>   Required <SPAN CLASS="lee">String</SPAN>. The key whose setting you want to retrieve. In a Windows settings file, the key name is followed by an equal sign (=) and the setting. If you're returning a setting from the Windows registry, <SPAN CLASS="narg">Key</SPAN> should be the value in the key specified by <SPAN CLASS="narg">Section</SPAN> (for example, "Tools-Path").</P>
Remarks</P>
You can write macros that use a settings file to store and retrieve settings. For example, you can store the name of the active document when you quit Word so that it can be reopened automatically the next time you start Word. In Windows, a settings file is a text file with information arranged like the information in the Windows&nbsp;3.<SPAN CLASS="p">x</SPAN> Win.ini file. On the Macintosh, a settings file is a resource file such as Word Settings&nbsp;(97).</P>
See Also</P>
<SPAN CLASS="eln">ProfileString</SPAN> property.</P>
Example</P>
This example sets the current document name as the LastFile setting under the MacroSettings heading in Settings.txt.</P>

<pre><code>System.PrivateProfileString("C:\Settings.txt", "MacroSettings", _
    "LastFile") = ActiveDocument.FullName</code></pre>
This example returns the LastFile setting from Settings.txt and then opens the document stored in LastFile.</P>

<pre><code>LastFile = System.PrivateProfileString("C:\Settings.Txt", _
    "MacroSettings", "LastFile")
If LastFile &lt;&gt; "" Then Documents.Open FileName:=LastFile</code></pre>
This example displays the default user name setting from the Windows registry.</P>

<pre><code>aName = System.PrivateProfileString("", _
    "HKEY_CURRENT_USER\Software\Microsoft\MS Setup (ACME)\User Info", _
    "DefName")
MsgBox aName</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
