<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Shapes Collection Object</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Shapes Collection Object</H1>Description</P>
A collection of <SPAN CLASS="lee">Shape</SPAN> objects that represent all the shapes in a document or all the shapes in all the headers and footers in a document. Each <SPAN CLASS="lee">Shape</SPAN> object represents an object in the drawing layer, such as an AutoShape, freeform, OLE object, or picture.</P>
<SPAN CLASS="nh">Note</SPAN>   If you want to work with a subset of the shapes on a document — for example, to do something to only the AutoShapes on the document or to only the selected shapes — you must construct a <SPAN CLASS="lee">ShapeRange</SPAN> collection that contains the shapes you want to work with.</P>
Using the Shapes Collection</P>
Use the <SPAN CLASS="lee">Shapes</SPAN> property to return the <SPAN CLASS="lee">Shapes</SPAN> collection. The following example selects all the shapes on the active document.</P>

<pre><code>ActiveDocument.Shapes.SelectAll</code></pre>
<SPAN CLASS="nh">Note</SPAN>   If you want to do something (like delete or set a property) to all the shapes on a document at the same time, use the <SPAN CLASS="lee">Range</SPAN> method to create a <SPAN CLASS="lee">ShapeRange</SPAN> object that contains all the shapes in the <SPAN CLASS="lee">Shapes</SPAN> collection, and then apply the appropriate property or method to the <SPAN CLASS="lee">ShapeRange</SPAN> object.</P>
Use one of the following methods of the <SPAN CLASS="lee">Shapes</SPAN> collection: <SPAN CLASS="lee">AddCallout</SPAN>, <SPAN CLASS="lee">AddCurve</SPAN>, <SPAN CLASS="lee">AddLabel</SPAN>, <SPAN CLASS="lee">AddLine</SPAN>, <SPAN CLASS="lee">AddOleControl</SPAN>, <SPAN CLASS="lee">AddOleObject</SPAN>, <SPAN CLASS="lee">AddPolyline</SPAN>, <SPAN CLASS="lee">AddShape</SPAN>, <SPAN CLASS="lee">AddTextbox</SPAN>, <SPAN CLASS="lee">AddTextEffect</SPAN>, or <SPAN CLASS="lee">BuildFreeForm</SPAN> to add a shape to a document return a <SPAN CLASS="lee">Shape</SPAN> object that represents the newly created shape. The following example adds a rectangle to the active document.</P>

<pre><code>ActiveDocument.Shapes.AddShape msoShapeRectangle, 50, 50, 100, 200</code></pre>
Use <SPAN CLASS="lee">Shapes</SPAN>(<SPAN CLASS="p">index</SPAN>), where <SPAN CLASS="p">index</SPAN> is the name or the index number, to return a single <SPAN CLASS="lee">Shape</SPAN> object. The following example horizontally flips shape one on the active document.</P>

<pre><code>ActiveDocument.Shapes(1).Flip msoFlipHorizontal</code></pre>
This example horizontally flips the shape named "Rectangle 1" on the active document.</P>

<pre><code>ActiveDocument.Shapes("Rectangle 1").Flip msoFlipHorizontal</code></pre>
Each shape is assigned a default name when it is created. For example, if you add three different shapes to a document, they might be named "Rectangle 2," "TextBox&nbsp;3," and "Oval 4." To give a shape a more meaningful name, set the <SPAN CLASS="lee">Name</SPAN> property.</P>
Remarks</P>
The <SPAN CLASS="lee">Shapes</SPAN> collection does not include <SPAN CLASS="lee">InlineShape</SPAN> objects. <SPAN CLASS="lee">InlineShape</SPAN> objects are treated like characters and are positioned as characters within a line of text. <SPAN CLASS="lee">Shape</SPAN> objects are anchored to a range of text but are free-floating and can be positioned anywhere on the page. You can use the <SPAN CLASS="lee">ConvertToInlineShape</SPAN> method and the <SPAN CLASS="lee">ConvertToShape</SPAN> method to convert shapes from one type to the other. You can convert only pictures, OLE objects, and ActiveX controls to inline shapes.</P>
The <SPAN CLASS="lee">Count</SPAN> property for this collection in a document returns the number of items in the main story only. To count the shapes in all the headers and footers, use the <SPAN CLASS="lee">Shapes</SPAN> collection with any <SPAN CLASS="lee">HeaderFooter</SPAN> object.</P>
Properties</P>
<SPAN CLASS="eln">Application</SPAN> property, <SPAN CLASS="eln">Count</SPAN> property, <SPAN CLASS="eln">Creator</SPAN> property, <SPAN CLASS="eln">Parent</SPAN> property.</P>
Methods</P>
<SPAN CLASS="eln">AddCallout</SPAN> method, <SPAN CLASS="eln">AddCurve</SPAN> method, <SPAN CLASS="eln">AddLabel</SPAN> method, <SPAN CLASS="eln">AddLine</SPAN> method, <SPAN CLASS="eln">AddOLEControl</SPAN> method, <SPAN CLASS="eln">AddOLEObject</SPAN> method, <SPAN CLASS="eln">AddPicture</SPAN> method, <SPAN CLASS="eln">AddPolyline</SPAN> method, <SPAN CLASS="eln">AddShape</SPAN> method, <SPAN CLASS="eln">AddTextbox</SPAN> method, <SPAN CLASS="eln">AddTextEffect</SPAN> method, <SPAN CLASS="eln">BuildFreeform</SPAN> method, <SPAN CLASS="eln">Item</SPAN> method, <SPAN CLASS="eln">Range</SPAN> method, <SPAN CLASS="eln">SelectAll</SPAN> method.</P>
See Also</P>
<SPAN CLASS="eln">InlineShapes</SPAN> collection object, <SPAN CLASS="eln">ShapeRange</SPAN> collection object.</P>
<HR CLASS="rr"></FONT></BODY>
</HTML>
