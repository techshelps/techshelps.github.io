<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>StoryRanges Collection Object</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>StoryRanges Collection Object</H1>Description</P>
A collection of <SPAN CLASS="lee">Range</SPAN> objects that represent <SPAN CLASS="pop">stories</SPAN> in a document.</P>
Using the StoryRanges Collection</P>
Use the <SPAN CLASS="lee">StoryRanges</SPAN> property to return the <SPAN CLASS="lee">StoryRanges</SPAN> collection. The following example removes manual character formatting from the text in all stories other than the main text story in the active document.</P>

<pre><code>For Each aStory In ActiveDocument.StoryRanges
    If aStory.StoryType &lt;&gt; wdMainTextStory Then aStory.Font.Reset
Next aStory</code></pre>
The <SPAN CLASS="lee">Add</SPAN> method isn't available for the <SPAN CLASS="lee">StoryRanges</SPAN> collection. The number of stories in the <SPAN CLASS="lee">StoryRanges</SPAN> collection is finite.</P>
Use <SPAN CLASS="lee">StoryRanges</SPAN>(<SPAN CLASS="p">index</SPAN>), where <SPAN CLASS="p">index</SPAN> is a <SPAN CLASS="lee">wdStoryType</SPAN> constant, to return a single story as a <SPAN CLASS="lee">Range</SPAN> object. The following example adds text to the primary header story and then displays the text.</P>

<pre><code>ActiveDocument.Sections(1).Headers(wdHeaderFooterPrimary).Range _
    .Text = "Header text"
MsgBox ActiveDocument.StoryRanges(wdPrimaryHeaderStory).Text</code></pre>
The following example copies the text of the footnotes from the active document into a new document.</P>

<pre><code>If ActiveDocument.Footnotes.Count &gt;= 1 Then
    ActiveDocument.StoryRanges(wdFootnotesStory).Copy
    Documents.Add.Content.Paste
End If</code></pre>
Remarks</P>
If you attempt to return a story that isn't available in the specified document, an error occurs. The following example determines whether or not a footnote story is available in the active document.</P>

<pre><code>On Error GoTo errhandler
Set MyRange = ActiveDocument.StoryRanges(wdFootnotesStory)
errhandler:
If Err = 5941 Then MsgBox "The footnotes story is not available."</code></pre>
Use the <SPAN CLASS="lee">NextStoryRange</SPAN> property to loop through all stories in a document. The following example searches each story in the active document for the text "Microsoft Word." When the text is found, it's formatted as italic.</P>

<pre><code>For Each myStoryRange In ActiveDocument.StoryRanges
    myStoryRange.Find.Execute FindText:="Microsoft Word", Forward:=True
    While myStoryRange.Find.Found
        myStoryRange.Italic = True
        myStoryRange.Find.Execute FindText:="Microsoft Word", Forward:=True
    Wend
    While Not (myStoryRange.NextStoryRange Is Nothing)
        Set myStoryRange = myStoryRange.NextStoryRange
        myStoryRange.Find.Execute FindText:="Microsoft Word", Forward:=True
        While myStoryRange.Find.Found
            myStoryRange.Italic = True
            myStoryRange.Find.Execute FindText:="Microsoft Word", Forward:=True
        Wend
    Wend
Next myStoryRange</code></pre>
Properties</P>
<SPAN CLASS="eln">Application</SPAN> property, <SPAN CLASS="eln">Count</SPAN> property, <SPAN CLASS="eln">Creator</SPAN> property, <SPAN CLASS="eln">Parent</SPAN> property.</P>
Methods</P>
<SPAN CLASS="eln">Item</SPAN> method.</P>
See Also</P>
<SPAN CLASS="eln">NextStoryRange</SPAN> property, <SPAN CLASS="eln">Range</SPAN> object.</P>
<HR CLASS="rr"></FONT></BODY>
</HTML>
