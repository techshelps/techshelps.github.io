<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SynonymInfo Object</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>SynonymInfo Object</H1>Description</P>
Represents the information about synonyms, antonyms, related words, or related expressions for the specified range or a given string.</P>
Using the SynonymInfo Object</P>
Use the <SPAN CLASS="lee">SynonymInfo</SPAN> property to return a <SPAN CLASS="lee">SynonymInfo</SPAN> object. The <SPAN CLASS="lee">SynonymInfo</SPAN> object can be returned either from a range or from Word. If it's returned from Word, you specify the lookup word or phrase and a proofing language ID. If it's returned from a range, Word uses the specified range as the lookup word. The following example returns a <SPAN CLASS="lee">SynonymInfo</SPAN> object from Word.</P>

<pre><code>temp = SynonymInfo(Word:="meant", LanguageID:=wdEnglishUS).Found</code></pre>
The following example returns a <SPAN CLASS="lee">SynonymInfo</SPAN> object from a range.</P>

<pre><code>temp = Selection.Range.SynonymInfo.Found</code></pre>
The <SPAN CLASS="lee">Found</SPAN> property, used in the preceding examples, returns <SPAN CLASS="lee">True</SPAN> if any information is found in the thesaurus for the specified range or for <SPAN CLASS="narg">Word</SPAN>. Note, however, that this property returns <SPAN CLASS="lee">True</SPAN> not only if synonyms are found, but also if related words, related expressions, or antonyms are found.</P>
Many of the properties of the <SPAN CLASS="lee">SynonymInfo</SPAN> object return a <SPAN CLASS="lee">Variant</SPAN> that contains an array of strings. When working with these properties, you can assign the returned array to a variable and then index the variable to see the elements in the array. In the following example, <SPAN CLASS="lee">Slist</SPAN> is assigned the synonym list for the first meaning of the selected word or phrase. The <SPAN CLASS="lee">UBound</SPAN> function finds the upper bound of the array, and then each element is displayed in a message box.</P>

<pre><code>Slist = Selection.Range.SynonymInfo.SynonymList(1)
For i = 1 To UBound(Slist)
    Msgbox Slist(i)
Next i</code></pre>
You can check the value of the <SPAN CLASS="lee">MeaningCount</SPAN> property to prevent potential errors in your code. The following example returns a list of synonyms for the second meaning for the word or phrase in the selection and displays these synonyms in the <SPAN CLASS="lee">Immediate</SPAN> pane.</P>

<pre><code>Set synInfo = Selection.Range.SynonymInfo
If synInfo.MeaningCount &gt;= 2 Then
    synList = synInfo.SynonymList(2)
    For i = 1 To UBound(synList)
        Debug.Print synList(i)
    Next i
Else
    MsgBox "There is no second meaning for the selection."
End If</code></pre>
Properties</P>
<SPAN CLASS="eln">AntonymList</SPAN> property, <SPAN CLASS="eln">Application</SPAN> property, <SPAN CLASS="eln">Creator</SPAN> property, <SPAN CLASS="eln">Found</SPAN> property, <SPAN CLASS="eln">MeaningCount</SPAN> property, <SPAN CLASS="eln">MeaningList</SPAN> property, <SPAN CLASS="eln">Parent</SPAN> property, <SPAN CLASS="eln">PartOfSpeechList</SPAN> property, <SPAN CLASS="eln">RelatedExpressionList</SPAN> property, <SPAN CLASS="eln">RelatedWordList</SPAN> property, <SPAN CLASS="eln">SynonymList</SPAN> property, <SPAN CLASS="eln">Word</SPAN> property.</P>
See Also</P>
<SPAN CLASS="eln">SynonymInfo</SPAN> property.</P>
<HR CLASS="rr"></FONT></BODY>
</HTML>
