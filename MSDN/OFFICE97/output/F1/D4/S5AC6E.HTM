<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Range Method</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Range Method</H1>Applies To</P>
<SPAN CLASS="eln">Document</SPAN><SPAN CLASS="lee"> object, </SPAN><SPAN CLASS="eln">Shapes</SPAN><SPAN CLASS="lee"> </SPAN>collection<SPAN CLASS="lee"> object.</SPAN></P>
<SPAN CLASS="lee">Description</SPAN></P>
<SPAN CLASS="lee">Document</SPAN> object: Returns a <SPAN CLASS="lee">Range</SPAN> object by using the specified starting and ending character positions.</P>
<SPAN CLASS="lee">Shapes</SPAN> object: Returns a <SPAN CLASS="lee">ShapeRange</SPAN> object that represents a subset of shapes in the <SPAN CLASS="lee">Shapes</SPAN> collection.</P>
Syntax 1</P>
<SPAN CLASS="p">expression</SPAN><SPAN CLASS="l">.</SPAN><SPAN CLASS="lee">Range</SPAN><SPAN CLASS="l">(</SPAN><SPAN CLASS="narg">Start</SPAN><SPAN CLASS="l">, </SPAN><SPAN CLASS="narg">End</SPAN><SPAN CLASS="l">)</SPAN></P>
Syntax 2</P>
<SPAN CLASS="p">expression</SPAN><SPAN CLASS="l">.</SPAN><SPAN CLASS="lee">Range</SPAN><SPAN CLASS="l">(</SPAN><SPAN CLASS="narg">Index</SPAN><SPAN CLASS="l">)</SPAN></P>
<SPAN CLASS="p">expression</SPAN>   Required. An expression that returns a <SPAN CLASS="lee">Document</SPAN> object (Syntax 1) or a <SPAN CLASS="lee">Shapes</SPAN> object (Syntax 2).</P>
<SPAN CLASS="narg">Start</SPAN>   Optional <SPAN CLASS="lee">Long</SPAN>. The starting character position.</P>
<SPAN CLASS="narg">End</SPAN>   Optional <SPAN CLASS="lee">Long</SPAN>. The ending character position.</P>
<SPAN CLASS="narg">Index</SPAN>   Required <SPAN CLASS="lee">Variant</SPAN>. Specifies which shapes are to be included in the specified range. Can be an integer that specifies the index number of a shape within the <SPAN CLASS="lee">Shapes</SPAN> collection, a string that specifies the name of a shape, or a <SPAN CLASS="lee">Variant</SPAN> array that contains integers or strings.</P>
Remarks</P>
Character position values begin with 0 (zero) at the beginning of the document. All characters are counted, including nonprinting characters. Hidden characters are counted even if they're not displayed. If you don't specify starting and ending character positions for the <SPAN CLASS="lee">Range</SPAN> method, the entire document is returned as a <SPAN CLASS="lee">Range</SPAN> object.</P>
<SPAN CLASS="lee">ShapeRange</SPAN> objects don't include <SPAN CLASS="lee">InlineShape</SPAN> objects. An <SPAN CLASS="lee">InlineShape</SPAN> object is equivalent to a character and is positioned as a character within a range of text. <B>Shape</B> objects are anchored to a range of text (the selection, by default), but they can be positioned anywhere on the page. A <B>Shape</B> object will always appear on the same page as the range it's anchored to.</P>
Most operations that you can do with a <SPAN CLASS="lee">Shape</SPAN> object you can also do with a <SPAN CLASS="lee">ShapeRange</SPAN> object that contains a single shape. Some operations, when performed on a <SPAN CLASS="lee">ShapeRange</SPAN> object that contains multiple shapes, produce an error.</P>
See Also</P>
<SPAN CLASS="eln">End</SPAN> property, <SPAN CLASS="eln">Range</SPAN> property, <SPAN CLASS="eln">SetRange</SPAN> method, <SPAN CLASS="eln">ShapeRange</SPAN> collection object, <SPAN CLASS="eln">Start</SPAN> property.</P>
Example</P>
This example applies bold formatting to the first 10 characters in the active document.</P>

<pre><code>ActiveDocument.Range(Start:=0, End:=10).Bold = True</code></pre>
This example creates a range that starts at the beginning of the active document and ends at the end of the selection.</P>

<pre><code>Set myRange = ActiveDocument.Range(Start:=0, End:=Selection.End)</code></pre>
This example creates sets the variable <SPAN CLASS="cte">myRange</SPAN> to paragraphs three through six in the active document, and then it right aligns the paragraphs in the range.</P>

<pre><code>Set aDoc = ActiveDocument
If aDoc.Paragraphs.Count &gt;= 6 Then
    Set myRange = aDoc.Range(aDoc.Paragraphs(3).Range.Start, _
        aDoc.Paragraphs(6).Range.End)
    myRange.Paragraphs.Alignment = wdAlignParagraphRight
End If</code></pre>
This example sets the fill foreground color to purple for the first shape in the active document.</P>

<pre><code>ActiveDocument.Shapes.Range(1).Fill.ForeColor.RGB = RGB(255, 0, 255)</code></pre>
This example applies a shadow to the shape named "myshape" in the active document.</P>

<pre><code>ActiveDocument.Shapes.Range("myshape").Shadow.Type = msoShadow6</code></pre>
This example selects shapes one and three in the active document.</P>

<pre><code>ActiveDocument.Shapes.Range(Array(1, 3)).Select</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
