<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Input # Statement</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>Input # Statement</H2>Description</P>
Reads data from an open sequential file and assigns the data to <SPAN CLASS="pop">variables</SPAN>.</P>
Syntax</P>
<SPAN CLASS="lee">Input</SPAN> <SPAN CLASS="lee">#</SPAN><SPAN CLASS="p">filenumber, varlist</SPAN></P>
The <SPAN CLASS="lee">Input #</SPAN> statement syntax has these parts</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="63pt" VALIGN="TOP"><COL WIDTH="296pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD COLSPAN="3" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">filenumber</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Required. Any valid <SPAN CLASS="pop">file number</SPAN>.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">varlist</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Required. Comma-delimited list of variables that are assigned values read from the file — can't be an <SPAN CLASS="pop">array</SPAN> or <SPAN CLASS="pop">object variable</SPAN>. However, variables that describe an element of an array or <SPAN CLASS="pop">user-defined type</SPAN> may be used.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
Data read with <SPAN CLASS="lee">Input #</SPAN> is usually written to a file with <SPAN CLASS="lee">Write #</SPAN>. Use this <SPAN CLASS="pop">statement</SPAN> only with files opened in <SPAN CLASS="lee">Input</SPAN> or <SPAN CLASS="lee">Binary</SPAN> mode.</P>
When read, standard string or numeric data is assigned to variables without modification. The following table illustrates how other input data is treated</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="129pt" VALIGN="TOP"><COL WIDTH="230pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Data</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Value assigned to variable</P></TD></TR><TR><TD COLSPAN="3" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Delimiting comma or blank line</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">Empty</SPAN><SPAN CLASS="pop">.</SPAN></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">#NULL#</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">Null</SPAN><SPAN CLASS="pop">.</SPAN></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">#TRUE# or #FALSE#</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">True</SPAN> or <SPAN CLASS="lee">False</SPAN><SPAN CLASS="pop">.</SPAN></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">#<SPAN CLASS="p">yyyy-mm-dd hh:mm:ss</SPAN>#</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The date and/or time represented by the <SPAN CLASS="pop">expression.</SPAN></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">#ERROR <SPAN CLASS="p">errornumber</SPAN>#</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">errornumber</SPAN> (variable is a <SPAN CLASS="lee">Variant</SPAN> tagged as an error).</P></TD></TR></TBODY></TABLE>
<BR></P>Double quotation marks (<SPAN CLASS="cte">" "</SPAN>) within input data are ignored. </P>
Data items in a file must appear in the same order as the variables in <SPAN CLASS="p">varlist</SPAN> and match variables of the same <SPAN CLASS="pop">data type</SPAN>. If a variable is numeric and the data is not numeric, a value of zero is assigned to the variable.</P>
If you reach the end of the file while you are inputting a data item, the input is terminated and an error occurs.</P>
<SPAN CLASS="nh">Note</SPAN>&nbsp;&nbsp;&nbsp;To be able to correctly read data from a file into variables using <SPAN CLASS="lee">Input #</SPAN>, use the <SPAN CLASS="lee">Write #</SPAN> statement instead of the <SPAN CLASS="lee">Print #</SPAN> statement to write the data to the files. Using <SPAN CLASS="lee">Write #</SPAN> ensures each separate data field is properly delimited.</P>
See Also</P>
<SPAN CLASS="eln">Input</SPAN> function, <SPAN CLASS="eln">Open</SPAN> statement, <B>Print </B><SPAN CLASS="eln">#</SPAN><B> </B>statement, <B>Write </B><SPAN CLASS="eln">#</SPAN> statement.</P>
Example</P>
This example uses the <SPAN CLASS="lee">Input #</SPAN> statement to read data from a file into two variables. This example assumes that <SPAN CLASS="cte">TESTFILE</SPAN> is a file with a few lines of data written to it using the <SPAN CLASS="lee">Write #</SPAN> statement; that is, each line contains a string in quotations and a number separated by a comma, for example, ("Hello", 234).</P>

<pre><code>Dim MyString, MyNumber
Open "TESTFILE" For Input As #1    ' Open file for input.
Do While Not EOF(1)                    ' Loop until end of file.
    Input #1, MyString, MyNumber    ' Read data into two variables.
    Debug.Print MyString, MyNumber    ' Print data to Debug window.
Loop
Close #1                                    ' Close file.</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
