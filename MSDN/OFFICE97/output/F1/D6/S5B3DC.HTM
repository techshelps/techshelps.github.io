<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>KeyPress Event</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>KeyPress Event</H1>Applies To</P>
<SPAN CLASS="eln">CheckBox</SPAN> control, <SPAN CLASS="eln">ComboBox</SPAN> control, <SPAN CLASS="eln">CommandButton</SPAN> control, <SPAN CLASS="eln">Frame</SPAN> control, <SPAN CLASS="eln">ListBox</SPAN> control, <SPAN CLASS="eln">MultiPage</SPAN> control, <SPAN CLASS="eln">OptionButton</SPAN> control, <SPAN CLASS="eln">ScrollBar</SPAN> control, <SPAN CLASS="eln">SpinButton</SPAN> control, <SPAN CLASS="eln">TabStrip</SPAN> control, <SPAN CLASS="eln">TextBox</SPAN> control, <SPAN CLASS="eln">ToggleButton</SPAN> control, <SPAN CLASS="eln">UserForm</SPAN> object.</P>
Description</P>
Occurs when the user presses an ANSI key.</P>
Syntax</P>
<SPAN CLASS="lee">Private Sub </SPAN><SPAN CLASS="p">object</SPAN>_<SPAN CLASS="lee">KeyPress( ByVal </SPAN><SPAN CLASS="p">KeyANSI</SPAN><SPAN CLASS="lee"> As MSForms.ReturnInteger)</SPAN></P>
The KeyPress event syntax has these parts:</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="63pt" VALIGN="TOP"><COL WIDTH="296pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD COLSPAN="3" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">object</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Required. A valid object.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">KeyANSI</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Required. An integer value that represents a standard numeric ANSI key code.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
The KeyPress event occurs when the user presses a key that produces a typeable character (an ANSI key) on a running form while the form or a control on it has the <SPAN CLASS="pop">focus</SPAN>. The event can occur either before or after the key is released. This event also occurs if you send an ANSI keystroke to a form or control using either the SendKeys action in a macro or the <SPAN CLASS="eln">SendKeys</SPAN><SPAN CLASS="jump"> statement</SPAN> in Visual Basic.</P>
A KeyPress event can occur when any of the following keys are pressed:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">Any printable keyboard character.</LI><LI CLASS="ULI1"><SPAN CLASS="kn">CTRL</SPAN> combined with a character from the standard alphabet.</LI><LI CLASS="ULI1"><SPAN CLASS="kn">CTRL</SPAN> combined with any special character.</LI><LI CLASS="ULI1"><SPAN CLASS="kn">BACKSPACE</SPAN>.</LI><LI CLASS="ULI1"><SPAN CLASS="kn">ESC</SPAN>.
</LI></UL></SPAN>A KeyPress event does not occur under the following conditions:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">Pressing <SPAN CLASS="kn">TAB</SPAN>.</LI><LI CLASS="ULI1">Pressing <SPAN CLASS="kn">ENTER</SPAN>.</LI><LI CLASS="ULI1">Pressing an arrow key.</LI><LI CLASS="ULI1">When a keystroke causes the focus to move from one control to another.
</LI></UL></SPAN><SPAN CLASS="nh">Note</SPAN><B>   </B><SPAN CLASS="kn">BACKSPACE</SPAN> is part of the <SPAN CLASS="pop">ANSI Character Set</SPAN>, but <SPAN CLASS="kn">DELETE</SPAN> is not. Deleting a character in a control using <SPAN CLASS="kn">BACKSPACE</SPAN> causes a KeyPress event; deleting a character using <SPAN CLASS="kn">DELETE</SPAN> doesn't.</P>
When a user holds down a key that produces an ANSI keycode, the KeyDown and KeyPress events alternate repeatedly. When the user releases the key, the KeyUp event occurs. The form or control with the focus receives all keystrokes. A form can have the focus only if it has no controls, or if all its visible controls are disabled.</P>
The default action for the KeyPress event is to process the event code that corresponds to the key that was pressed. <SPAN CLASS="p">KeyANSI</SPAN> indicates the ANSI character that corresponds to the pressed key or key combination. The KeyPress event interprets the uppercase and lowercase of each character as separate key codes and, therefore, as two separate characters.</P>
To respond to the physical state of the keyboard, or to handle keystrokes not recognized by the KeyPress event, such as function keys, navigation keys, and any combinations of these with keyboard modifiers (<SPAN CLASS="kn">ALT</SPAN>, <SPAN CLASS="kn">SHIFT</SPAN>, or <SPAN CLASS="kn">CTRL</SPAN>), use the KeyDown and KeyUp event procedures.</P>
The sequence of keyboard-related events is:</P>
<SPAN CLASS="list"><OL><LI CLASS="OLI1">KeyDown</LI><LI CLASS="OLI1">KeyPress</LI><LI CLASS="OLI1">KeyUp
</LI></OL></SPAN>See Also</P>
KeyDown, KeyUp events.</P>
Example</P>
The following example uses the KeyPress event to copy keystrokes from one <SPAN CLASS="lee">TextBox</SPAN> to a second <SPAN CLASS="lee">TextBox</SPAN>. The user types into the appropriately marked <SPAN CLASS="lee">TextBox</SPAN>.</P>
To use this example, copy this sample code to the Declarations portion of a form. Make sure that the form contains:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">Two <SPAN CLASS="lee">TextBox</SPAN> controls named TextBox1 and TextBox2.



<pre><code>Private Sub TextBox1_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    TextBox2.Text = TextBox2.Text &amp; Chr(KeyAscii)
    
    'To handle keyboard combinations (using SHIFT, CTRL, ALT, and another 
    'key), or TAB or ENTER, use the KeyDown or KeyUp event.
End Sub

Private Sub UserForm_Initialize()
    Move 0, 0, 570, 380
    
    TextBox1.Move 30, 40, 220, 160
    TextBox1.MultiLine = True
    TextBox1.WordWrap = True
    TextBox1.Text = "Type text here."
    TextBox1.EnterKeyBehavior = True
    
    TextBox2.Move 298, 40, 220, 160
    TextBox2.MultiLine = True
    TextBox2.WordWrap = True
    TextBox2.Text = "Typed text copied here."
    TextBox2.Locked = True
End Sub</code></pre>
</LI></UL></SPAN><HR CLASS="rr"></FONT></BODY>
</HTML>
