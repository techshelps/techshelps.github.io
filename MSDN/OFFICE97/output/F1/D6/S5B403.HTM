<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Page Object</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<HR CLASS="rr">
<H1>Page Object</H1>Description</P>
One page of a <SPAN CLASS="lee">MultiPage</SPAN> and a single member of a <SPAN CLASS="lee">Pages</SPAN> collection.</P>
Remarks</P>
Each <SPAN CLASS="lee">Page</SPAN> object contains its own set of controls and does not necessarily rely on other pages in the <SPAN CLASS="pop">collection</SPAN> for information. A <SPAN CLASS="lee">Page</SPAN> inherits some properties from its <SPAN CLASS="pop">container</SPAN>; the value of each <SPAN CLASS="pop">inherited property</SPAN> is set by the container.</P>
A <SPAN CLASS="lee">Page</SPAN> has a unique name and index value within a <SPAN CLASS="lee">Pages</SPAN> collection. You can reference a <SPAN CLASS="lee">Page</SPAN> by either its name or its index value. The index of the first <SPAN CLASS="lee">Page</SPAN> in a collection is 0; the index of the second <SPAN CLASS="lee">Page</SPAN> is 1; and so on. When two <SPAN CLASS="lee">Page</SPAN> objects have the same name, you must reference each <SPAN CLASS="lee">Page</SPAN> by its index value. References to the name in code will access only the first <SPAN CLASS="lee">Page</SPAN> that uses the name.</P>
The default name for the first <SPAN CLASS="lee">Page</SPAN> is Page1; the default name for the second <SPAN CLASS="lee">Page</SPAN> is Page2.</P>
Properties</P>
<SPAN CLASS="eln">Accelerator</SPAN> property, <SPAN CLASS="eln">ActiveControl</SPAN> property, <SPAN CLASS="eln">CanPaste</SPAN> property, <SPAN CLASS="eln">CanRedo</SPAN> property, <SPAN CLASS="eln">CanUndo</SPAN> property, <SPAN CLASS="eln">Caption</SPAN> property, <SPAN CLASS="eln">ControlTipText</SPAN> property, <SPAN CLASS="eln">Cycle</SPAN> property, <SPAN CLASS="eln">Enabled</SPAN> property, <SPAN CLASS="eln">HelpContextID</SPAN> property, <SPAN CLASS="eln">Index</SPAN> property, <SPAN CLASS="eln">InsideHeight</SPAN>, <SPAN CLASS="eln">InsideWidth</SPAN> properties, <SPAN CLASS="eln">KeepScrollBarsVisible</SPAN> property, <SPAN CLASS="eln">Name</SPAN> property, <SPAN CLASS="eln">Picture</SPAN> property, <SPAN CLASS="eln">PictureAlignment</SPAN> property, <SPAN CLASS="eln">PictureSizeMode</SPAN> property, <SPAN CLASS="eln">PictureTiling</SPAN> property, <SPAN CLASS="eln">ScrollBars</SPAN> property, <SPAN CLASS="eln">ScrollHeight</SPAN>, <SPAN CLASS="eln">ScrollWidth</SPAN> properties, <SPAN CLASS="eln">ScrollLeft</SPAN>, <SPAN CLASS="eln">ScrollTop</SPAN> properties, <SPAN CLASS="eln">TabIndex</SPAN> property, <SPAN CLASS="eln">TabStop</SPAN> property, <SPAN CLASS="eln">Tag</SPAN> property, <SPAN CLASS="eln">TransitionEffect</SPAN> property, <SPAN CLASS="eln">TransitionPeriod</SPAN> property, <SPAN CLASS="eln">VerticalScrollbarSide</SPAN> property, <SPAN CLASS="eln">Visible</SPAN> property, <SPAN CLASS="eln">Zoom</SPAN> property.</P>
Methods</P>
<SPAN CLASS="eln">Copy</SPAN> method, <SPAN CLASS="eln">Cut</SPAN> method, <SPAN CLASS="eln">Paste</SPAN> method, <SPAN CLASS="eln">RedoAction</SPAN> method, <SPAN CLASS="eln">Repaint</SPAN> method, <SPAN CLASS="eln">Scroll</SPAN> method, <SPAN CLASS="eln">SetDefaultTabOrder</SPAN> method, <SPAN CLASS="eln">UndoAction</SPAN> method.</P>
See Also</P>
<SPAN CLASS="eln">Controls</SPAN> collection, <B>MultiPage</B> control, <SPAN CLASS="eln">Pages</SPAN> collection, <SPAN CLASS="eln">Tab</SPAN> object.</P>
Example</P>
The following example uses the <SPAN CLASS="lee">Add</SPAN>, <SPAN CLASS="lee">Clear</SPAN>, and <SPAN CLASS="lee">Remove</SPAN> methods to add and remove a control to a <SPAN CLASS="lee">Page</SPAN> of a <SPAN CLASS="lee">MultiPage</SPAN> at run time.</P>
To use this example, copy this sample code to the Declarations portion of a form. Make sure that the form contains:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">A <SPAN CLASS="lee">MultiPage</SPAN> named MultiPage1.</LI><LI CLASS="ULI1">Three <SPAN CLASS="lee">CommandButton</SPAN> controls named CommandButton1 through CommandButton3.



<pre><code>Dim MyTextBox As Control

Private Sub CommandButton1_Click()
Set MyTextBox = MultiPage1.Pages(0).Controls.Add("Forms.TextBox.1", _<BR>    "MyTextBox", Visible)
End Sub

Private Sub CommandButton2_Click()
    MultiPage1.Pages(0).Controls.Clear
End Sub

Private Sub CommandButton3_Click()
    If MultiPage1.Pages(0).Controls.Count &gt; 0  Then
        MultiPage1.Pages(0).Controls.Remove "MyTextBox"
    End If
End Sub

Private Sub UserForm_Initialize()
    CommandButton1.Caption = "Add control"
    CommandButton2.Caption = "Clear controls"
    CommandButton3.Caption = "Remove control"
End Sub</code></pre>
</LI></UL></SPAN>Example</P>
The following example uses the <SPAN CLASS="lee">Add</SPAN>, <SPAN CLASS="lee">Cut</SPAN>, and <SPAN CLASS="lee">Paste</SPAN> methods to cut and paste a control from a <SPAN CLASS="lee">Page</SPAN> of a <SPAN CLASS="lee">MultiPage</SPAN>. The control involved in the cut and paste operations is dynamically added to the form.</P>
This example assumes the user will add, then cut, then paste the new control.</P>
To use this example, copy this sample code to the Declarations portion of a form. Make sure that the form contains:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">Three <SPAN CLASS="lee">CommandButton</SPAN> controls named CommandButton1 through CommandButton3.</LI><LI CLASS="ULI1">A <SPAN CLASS="lee">MultiPage</SPAN> named MultiPage1.



<pre><code>Dim MyTextBox As Control

Private Sub CommandButton1_Click()
    Set MyTextBox = MultiPage1.Pages(MultiPage1.Value).Controls.Add( _<BR>        "Forms.TextBox.1", "MyTextBox", Visible)
    CommandButton2.Enabled = True
    CommandButton1.Enabled = False
End Sub
Private Sub CommandButton2_Click()
    MultiPage1.Pages(MultiPage1.Value).Controls.Cut
    CommandButton3.Enabled = True
    CommandButton2.Enabled = False
End Sub
Private Sub CommandButton3_Click()
    Dim MyPage As Object
    Set MyPage = MultiPage1.Pages.Item(MultiPage1.Value)

    MyPage.Paste
    CommandButton3.Enabled = False
End Sub
Private Sub UserForm_Initialize()
    CommandButton1.Caption = "Add"
    CommandButton2.Caption = "Cut"
    CommandButton3.Caption = "Paste"

    CommandButton1.Enabled = True
    CommandButton2.Enabled = False
    CommandButton3.Enabled = False
End Sub</code></pre>
</LI></UL></SPAN><HR CLASS="rr"></FONT></BODY>
</HTML>
