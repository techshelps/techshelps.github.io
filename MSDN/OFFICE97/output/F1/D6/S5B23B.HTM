<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GoTo Statement</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>GoTo Statement</H2>Description</P>
Branches unconditionally to a specified line within a <SPAN CLASS="pop">procedure</SPAN>.</P>
Syntax</P>
<SPAN CLASS="lee">GoTo</SPAN> <SPAN CLASS="p">line</SPAN></P>
The required <SPAN CLASS="p">line</SPAN> <SPAN CLASS="pop">argument</SPAN> can be any <SPAN CLASS="pop">line label</SPAN> or <SPAN CLASS="pop">line number</SPAN>.</P>
Remarks</P>
<SPAN CLASS="lee">GoTo</SPAN> can branch only to lines within the procedure where it appears.</P>
<SPAN CLASS="nh">Note</SPAN>&nbsp;&nbsp;&nbsp;Too many <SPAN CLASS="lee">GoTo</SPAN> statements can make code difficult to read and debug. Use structured control <SPAN CLASS="pop">statements</SPAN> (<SPAN CLASS="lee">Do...Loop</SPAN>, <SPAN CLASS="lee">For...Next</SPAN>, <SPAN CLASS="lee">If...Then...Else</SPAN>, <SPAN CLASS="lee">Select Case</SPAN>) whenever possible.</P>
See Also</P>
<B>Do...</B><SPAN CLASS="eln">Loop</SPAN> statement, <B>For...</B><SPAN CLASS="eln">Next</SPAN> statement, <B>GoSub...</B><SPAN CLASS="eln">Return</SPAN> statement, <B>If...Then...</B><SPAN CLASS="eln">Else</SPAN> statement, <B>Select</B> <SPAN CLASS="eln">Case</SPAN> statement.</P>
Example</P>
This example uses the <SPAN CLASS="lee">GoTo</SPAN> statement to branch to line labels within a procedure.</P>

<pre><code>Sub GotoStatementDemo()
Dim Number, MyString
    Number = 1                             ' Initialize variable.
    ' Evaluate Number and branch to appropriate label.
    If Number = 1 Then GoTo Line1 Else GoTo Line2
    
Line1:
    MyString = "Number equals 1"
    GoTo LastLine                        ' Go to LastLine.
Line2:
    ' The following statement never gets executed.
    MyString = "Number equals 2"
LastLine: 
    Debug.Print MyString                ' Print "Number equals 1" in
                                            ' Debug window.
End Sub</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
