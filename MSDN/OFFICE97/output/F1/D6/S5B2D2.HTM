<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Variant Data Type</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Variant Data Type</H1>Description</P>
The <SPAN CLASS="lee">Variant</SPAN> data type is the <SPAN CLASS="pop">data type</SPAN> for all <SPAN CLASS="pop">variables</SPAN> that are not explicitly declared as some other type (using <SPAN CLASS="pop">statements</SPAN> such as <SPAN CLASS="lee">Dim</SPAN>, <SPAN CLASS="lee">Private</SPAN>, <SPAN CLASS="lee">Public</SPAN>, or <SPAN CLASS="lee">Static</SPAN>). The <SPAN CLASS="lee">Variant</SPAN> data type has no <SPAN CLASS="pop">type-declaration character</SPAN>.</P>
A <SPAN CLASS="lee">Variant</SPAN> is a special data type that can contain any kind of data except fixed-length <SPAN CLASS="lee">String</SPAN> data and <SPAN CLASS="pop">user-defined types</SPAN>. A <SPAN CLASS="lee">Variant</SPAN> can also contain the special values <SPAN CLASS="lee">Empty</SPAN>, <SPAN CLASS="lee">Error</SPAN>, <SPAN CLASS="lee">Nothing</SPAN>, and <SPAN CLASS="lee">Null</SPAN>. You can determine how the data in a <SPAN CLASS="lee">Variant</SPAN> is treated using the <SPAN CLASS="lee">VarType</SPAN> function or <SPAN CLASS="lee">TypeName</SPAN> function.</P>
Numeric data can be any integer or real number value ranging from -1.797693134862315E308 to -4.94066E-324 for negative values and from 4.94066E-324 to 1.797693134862315E308 for positive values. Generally, numeric <SPAN CLASS="lee">Variant</SPAN> data is maintained in its original data type within the <SPAN CLASS="lee">Variant</SPAN>. For example, if you assign an <SPAN CLASS="lee">Integer</SPAN> to a <SPAN CLASS="lee">Variant</SPAN>, subsequent operations treat the <SPAN CLASS="lee">Variant</SPAN> as an <SPAN CLASS="lee">Integer</SPAN>. However, if an arithmetic operation is performed on a <SPAN CLASS="lee">Variant</SPAN> containing a <SPAN CLASS="lee">Byte</SPAN>, an <SPAN CLASS="lee">Integer</SPAN>, a <SPAN CLASS="lee">Long</SPAN>, or a <SPAN CLASS="lee">Single</SPAN>, and the result exceeds the normal range for the original data type, the result is promoted within the <SPAN CLASS="lee">Variant</SPAN> to the next larger data type. A <SPAN CLASS="lee">Byte</SPAN> is promoted to an <SPAN CLASS="lee">Integer</SPAN>, an <SPAN CLASS="lee">Integer</SPAN> is promoted to a <SPAN CLASS="lee">Long</SPAN>, and a <SPAN CLASS="lee">Long</SPAN> and a <SPAN CLASS="lee">Single</SPAN> are promoted to a <SPAN CLASS="lee">Double</SPAN>. An error occurs when <SPAN CLASS="lee">Variant</SPAN> variables containing <SPAN CLASS="lee">Currency</SPAN>, <SPAN CLASS="lee">Decimal</SPAN>, and <SPAN CLASS="lee">Double</SPAN> values exceed their respective ranges.</P>
You can use the <SPAN CLASS="lee">Variant</SPAN> data type in place of any data type to work with data in a more flexible way. If the contents of a <SPAN CLASS="lee">Variant</SPAN> variable are digits, they may be either the string representation of the digits or their actual value, depending on the context. For example:</P>

<pre><code>Dim MyVar As Variant
MyVar = 98052</code></pre>
In the preceding example, <SPAN CLASS="cte">MyVar</SPAN> contains a numeric representation — the actual value <SPAN CLASS="cte">98052</SPAN>. Arithmetic operators work as expected on <SPAN CLASS="lee">Variant</SPAN> variables that contain numeric values or string data that can be interpreted as numbers. If you use the <SPAN CLASS="lee">+</SPAN> operator to add <SPAN CLASS="cte">MyVar</SPAN> to another <SPAN CLASS="lee">Variant</SPAN> containing a number or to a variable of a <SPAN CLASS="pop">numeric type</SPAN>, the result is an arithmetic sum.</P>
The value <SPAN CLASS="lee">Empty</SPAN> denotes a <SPAN CLASS="lee">Variant</SPAN> variable that hasn't been initialized (assigned an initial value). A <SPAN CLASS="lee">Variant</SPAN> containing <SPAN CLASS="lee">Empty</SPAN> is 0 if it is used in a numeric context and a zero-length string (" ") if it is used in a string context.</P>
Don't confuse <SPAN CLASS="lee">Empty</SPAN> with <SPAN CLASS="lee">Null</SPAN>. <SPAN CLASS="lee">Null</SPAN> indicates that the <SPAN CLASS="lee">Variant</SPAN> variable intentionally contains no valid data.</P>
In a <SPAN CLASS="lee">Variant</SPAN>, <SPAN CLASS="lee">Error</SPAN> is a special value used to indicate that an error condition has occurred in a <SPAN CLASS="pop">procedure</SPAN>. However, unlike for other kinds of errors, normal application-level error handling does not occur. This allows you, or the application itself, to take some alternative action based on the error value. <SPAN CLASS="lee">Error</SPAN> values are created by converting real numbers to error values using the <SPAN CLASS="lee">CVErr</SPAN> function.</P>
See Also</P>
<SPAN CLASS="eln">CVErr</SPAN> function, Data type summary, <SPAN CLASS="eln">Def</SPAN><SPAN CLASS="eln">type</SPAN> statements, <SPAN CLASS="eln">Dim</SPAN> statement, <SPAN CLASS="eln">Private</SPAN> statement, <SPAN CLASS="eln">Public</SPAN> statement, <SPAN CLASS="eln">Static</SPAN> statement, <SPAN CLASS="eln">TypeName</SPAN> function.</P>
<HR CLASS="rr"></FONT></BODY>
</HTML>
