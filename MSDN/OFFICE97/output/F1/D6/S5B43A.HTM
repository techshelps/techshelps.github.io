<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TextBox Control</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>TextBox Control</H1>Description</P>
Displays information from a user or from an organized set of data.</P>
Remarks</P>
A <SPAN CLASS="lee">TextBox</SPAN> is the control most commonly used to display information entered by a user. Also, it can display a set of data, such as a table, query, worksheet, or a calculation result. If a <SPAN CLASS="lee">TextBox</SPAN> is <SPAN CLASS="pop">bound</SPAN> to a <SPAN CLASS="pop">data source</SPAN>, then changing the contents of the <SPAN CLASS="lee">TextBox</SPAN> also changes the value of the bound data source.</P>
Formatting applied to any piece of text in a <SPAN CLASS="lee">TextBox</SPAN> will affect all text in the control. For example, if you change the font or point size of any character in the control, the change will affect all characters in the control.</P>
The default property for a <SPAN CLASS="lee">TextBox</SPAN> is the <SPAN CLASS="lee">Value</SPAN> property.</P>
The default event for a <SPAN CLASS="lee">TextBox</SPAN> is the Change event.</P>
Properties</P>
<SPAN CLASS="eln">AutoSize</SPAN> property, <SPAN CLASS="eln">AutoTab</SPAN> property, <SPAN CLASS="eln">AutoWordSelect</SPAN> property, <SPAN CLASS="eln">BackColor</SPAN> property, <SPAN CLASS="eln">BackStyle</SPAN> property, <SPAN CLASS="eln">BorderColor</SPAN> property, <SPAN CLASS="eln">BorderStyle</SPAN> property, <SPAN CLASS="eln">BoundValue</SPAN> property, <SPAN CLASS="eln">CanPaste</SPAN> property, <SPAN CLASS="eln">ControlSource</SPAN> property, <SPAN CLASS="eln">ControlTipText</SPAN> property, <SPAN CLASS="eln">CurLine</SPAN> property, <SPAN CLASS="eln">CurTargetX</SPAN> property, <SPAN CLASS="eln">CurX</SPAN> property, <SPAN CLASS="eln">DragBehavior</SPAN> property, <SPAN CLASS="eln">DropButtonStyle</SPAN> property, <SPAN CLASS="eln">Enabled</SPAN> property, <SPAN CLASS="eln">EnterFieldBehavior</SPAN> property, <SPAN CLASS="eln">EnterKeyBehavior</SPAN> property, <SPAN CLASS="eln">Font</SPAN> object, <SPAN CLASS="eln">ForeColor</SPAN> property, <SPAN CLASS="eln">Height</SPAN>, <SPAN CLASS="eln">Width</SPAN> properties, <SPAN CLASS="eln">HelpContextID</SPAN> property, <SPAN CLASS="eln">HideSelection</SPAN> property, <SPAN CLASS="eln">IMEMode</SPAN> property, <SPAN CLASS="eln">IntegralHeight</SPAN> property, <SPAN CLASS="eln">LayoutEffect</SPAN> property, <SPAN CLASS="eln">Left</SPAN>, <SPAN CLASS="eln">Top</SPAN> properties, <SPAN CLASS="eln">LineCount</SPAN> property, <SPAN CLASS="eln">Locked</SPAN> property, <SPAN CLASS="eln">MaxLength</SPAN> property, <SPAN CLASS="eln">MouseIcon</SPAN> property, <SPAN CLASS="eln">MousePointer</SPAN> property, <SPAN CLASS="eln">MultiLine</SPAN> property, <SPAN CLASS="eln">Name</SPAN> property, <SPAN CLASS="eln">Object</SPAN> property, <SPAN CLASS="eln">OldHeight</SPAN>, <SPAN CLASS="eln">OldWidth</SPAN> properties, <SPAN CLASS="eln">OldLeft</SPAN>, <SPAN CLASS="eln">OldTop</SPAN> properties, <SPAN CLASS="eln">Parent</SPAN> property, <SPAN CLASS="eln">PasswordChar</SPAN> property, <SPAN CLASS="eln">ScrollBars</SPAN> property, <SPAN CLASS="eln">SelectionMargin</SPAN> property, <SPAN CLASS="eln">SelLength</SPAN> property, <SPAN CLASS="eln">SelStart</SPAN> property, <SPAN CLASS="eln">SelText</SPAN> property, <SPAN CLASS="eln">ShowDropButtonWhen</SPAN> property, <SPAN CLASS="eln">SpecialEffect</SPAN> property, <SPAN CLASS="eln">TabIndex</SPAN> property, <SPAN CLASS="eln">TabKeyBehavior</SPAN> property, <SPAN CLASS="eln">TabStop</SPAN> property, <SPAN CLASS="eln">Tag</SPAN> property, <SPAN CLASS="eln">Text</SPAN> property, <SPAN CLASS="eln">TextAlign</SPAN> property, <SPAN CLASS="eln">TextLength</SPAN> property, <SPAN CLASS="eln">Value</SPAN> property, <SPAN CLASS="eln">Visible</SPAN> property, <SPAN CLASS="eln">WordWrap</SPAN> property.</P>
Methods</P>
<SPAN CLASS="eln">Copy</SPAN> method, <SPAN CLASS="eln">Cut</SPAN> method, <SPAN CLASS="eln">Move</SPAN> method, <SPAN CLASS="eln">Paste</SPAN> method, <SPAN CLASS="eln">SetFocus</SPAN> method, <SPAN CLASS="eln">ZOrder</SPAN> method.</P>
Events</P>
AfterUpdate event, BeforeDragOver event, BeforeDropOrPaste event, BeforeUpdate event, Change event, DblClick event, DropButtonClick event, Enter, Exit events, Error event, KeyDown, KeyUp events, KeyPress event, MouseDown, MouseUp events, MouseMove event,</P>
See Also</P>
<SPAN CLASS="eln">ComboBox</SPAN> control.</P>
Example</P>
The following example demonstrates the <SPAN CLASS="lee">MultiLine</SPAN>, <SPAN CLASS="lee">WordWrap</SPAN>, and <SPAN CLASS="lee">ScrollBars</SPAN> properties on a <SPAN CLASS="lee">TextBox</SPAN>.</P>
To use this example, copy this sample code to the Declarations portion of a form. Make sure that the form contains:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">A <SPAN CLASS="lee">TextBox</SPAN> named TextBox1.</LI><LI CLASS="ULI1">Four <SPAN CLASS="lee">ToggleButton</SPAN> controls named ToggleButton1 through ToggleButton4.
</LI></UL></SPAN>To see the entire text placed in the <SPAN CLASS="lee">TextBox</SPAN>, set <SPAN CLASS="lee">MultiLine</SPAN> and <SPAN CLASS="lee">WordWrap</SPAN> to <SPAN CLASS="lee">True</SPAN> by clicking the <SPAN CLASS="lee">ToggleButton</SPAN> controls.</P>
When <SPAN CLASS="lee">MultiLine</SPAN> is <SPAN CLASS="lee">True</SPAN>, you can enter new lines of text by pressing SHIFT+ENTER.</P>
<SPAN CLASS="lee">ScrollBars</SPAN> appears when you manually change the content of the <SPAN CLASS="lee">TextBox</SPAN>.</P>

<pre><code>Private Sub UserForm_Initialize()
'Initialize TextBox properties and toggle buttons

    TextBox1.Text = "Type your text here. Enter SHIFT+ENTER to move to" _<BR>        &amp; " a new line."

    TextBox1.AutoSize = False
    ToggleButton1.Caption = "AutoSize Off"
    ToggleButton1.Value = False
    ToggleButton1.AutoSize = True

    TextBox1.WordWrap = False
    ToggleButton2.Caption = "WordWrap Off"
    ToggleButton2.Value = False
    ToggleButton2.AutoSize = True

    TextBox1.ScrollBars = 0
    ToggleButton3.Caption = "ScrollBars Off"
    ToggleButton3.Value = False
    ToggleButton3.AutoSize = True

    TextBox1.MultiLine = False
    ToggleButton4.Caption = "Single Line"
    ToggleButton4.Value = False
    ToggleButton4.AutoSize = True
 End Sub

Private Sub ToggleButton1_Click()
'Set AutoSize property and associated ToggleButton

    If ToggleButton1.Value = True Then
        TextBox1.AutoSize = True
        ToggleButton1.Caption = "AutoSize On"
    Else
        TextBox1.AutoSize = False
        ToggleButton1.Caption = "AutoSize Off"
    End If
End Sub

Private Sub ToggleButton2_Click()
'Set WordWrap property and associated ToggleButton

    If ToggleButton2.Value = True Then
        TextBox1.WordWrap = True
        ToggleButton2.Caption = "WordWrap On"
    Else
        TextBox1.WordWrap = False
        ToggleButton2.Caption = "WordWrap Off"
    End If
End Sub

Private Sub ToggleButton3_Click()
'Set ScrollBars property and associated ToggleButton

    If ToggleButton3.Value = True Then
        TextBox1.ScrollBars = 3
        ToggleButton3.Caption = "ScrollBars On"
    Else
        TextBox1.ScrollBars = 0
        ToggleButton3.Caption = "ScrollBars Off"
    End If
End Sub

Private Sub ToggleButton4_Click()
'Set MultiLine property and associated ToggleButton

    If ToggleButton4.Value = True Then
        TextBox1.MultiLine = True
        ToggleButton4.Caption = "Multiple Lines"
    Else
        TextBox1.MultiLine = False
        ToggleButton4.Caption = "Single Line"
    End If
End Sub</code></pre>
Example</P>
The following example sets the z-order of a <SPAN CLASS="lee">TextBox</SPAN>, so the user can display the entire <SPAN CLASS="lee">TextBox</SPAN> (by bringing it to the front of the z-order) or can place the <SPAN CLASS="lee">TextBox</SPAN> behind other controls (by sending it to the back of the z-order).</P>
To use this example, copy this sample code to the Declarations portion of a form. Make sure that the form contains:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">Three <SPAN CLASS="lee">TextBox</SPAN> controls named TextBox1 through TextBox3.</LI><LI CLASS="ULI1">A <SPAN CLASS="lee">ToggleButton</SPAN> named ToggleButton1.



<pre><code>Private Sub ToggleButton1_Click()
If ToggleButton1.Value = True Then
    TextBox2.ZOrder (fmTop)          'Place TextBox2 on Top of z-order
    
    'Update ToggleButton caption to identify next state
    ToggleButton1.Caption = "Send TextBox2 to back"
Else
    TextBox2.ZOrder (1)              'Place TextBox2 on Bottom of z-order
    
    'Update ToggleButton caption to identify next state
    ToggleButton1.Caption = "Bring TextBox2 to front"
End If
End Sub

Private Sub UserForm_Initialize()
'Set up text boxes to show z-order in the form
TextBox1.Text = "TextBox 1"
TextBox2.Text = "TextBox 2"
TextBox3.Text = "TextBox 3"

TextBox1.Height = 40
TextBox2.Height = 40
TextBox3.Height = 40

TextBox1.Width = 60
TextBox2.Width = 60
TextBox3.Width = 60

TextBox1.Left = 10
TextBox1.Top = 10

TextBox2.Left = 25      'Overlap TextBox2 on TextBox1
TextBox2.Top = 25

TextBox3.Left = 40      'Overlap TextBox3 on TextBox2, TextBox1
TextBox3.Top = 40

ToggleButton1.Value = False
ToggleButton1.Caption = "Bring TextBox2 to Front"
ToggleButton1.Left = 10
ToggleButton1.Top = 90
ToggleButton1.Width = 50
ToggleButton1.Height = 50

End Sub</code></pre>
</LI></UL></SPAN>Example</P>
The following example demonstrates the effects of the <SPAN CLASS="lee">AutoSize</SPAN> property with a single-line <SPAN CLASS="lee">TextBox</SPAN> and a multiline <SPAN CLASS="lee">TextBox</SPAN>. The user can enter text into either <SPAN CLASS="lee">TextBox</SPAN> and turn <SPAN CLASS="lee">AutoSize</SPAN> on or off independently of the contents of the <SPAN CLASS="lee">TextBox</SPAN>. This code sample also uses the <SPAN CLASS="lee">Text</SPAN> property.</P>
To use this example, copy this sample code to the Declarations portion of a form. Make sure that the form contains:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">Two <SPAN CLASS="lee">TextBox</SPAN> controls named TextBox1 and TextBox2.</LI><LI CLASS="ULI1">A <SPAN CLASS="lee">ToggleButton</SPAN> named ToggleButton1.



<pre><code>Private Sub UserForm_Initialize()
    TextBox1.Text = "Single-line TextBox. Type your text here."
    
    TextBox2.MultiLine = True
    TextBox2.Text = "Multi-line TextBox. Type your text here. Use CTRL+ENTER to start a new line."
    
    ToggleButton1.Value = True
    ToggleButton1.Caption = "AutoSize On"
    TextBox1.AutoSize = True
    TextBox2.AutoSize = True
End Sub

Private Sub ToggleButton1_Click()
    If ToggleButton1.Value = True Then
        ToggleButton1.Caption = "AutoSize On"
        TextBox1.AutoSize = True
        TextBox2.AutoSize = True
    Else
        ToggleButton1.Caption = "AutoSize Off"
        TextBox1.AutoSize = False
        TextBox2.AutoSize = False
    End If
End Sub</code></pre>
</LI></UL></SPAN>Example</P>
The following example tracks the <SPAN CLASS="lee">CurLine</SPAN>, <SPAN CLASS="lee">CurTargetX</SPAN>, and <SPAN CLASS="lee">CurX</SPAN> property settings in a multiline <SPAN CLASS="lee">TextBox</SPAN>. These settings change in the KeyUp event as the user types into the <SPAN CLASS="lee">Text</SPAN> property, moves the insertion point, and extends the selection using the keyboard.</P>
To use this example, follow these steps:</P>
<SPAN CLASS="list"><OL><LI CLASS="OLI1">Copy this sample code to the Declarations portion of a form.</LI><LI CLASS="OLI1">Add one large <SPAN CLASS="lee">TextBox</SPAN> named TextBox1 to the form.</LI><LI CLASS="OLI1">Add three <SPAN CLASS="lee">TextBox</SPAN> controls named TextBox2, TextBox3, and TextBox4 in a column.



<pre><code>Private Sub TextBox1_KeyUp(ByVal KeyCode As MSForms.ReturnInteger, _<BR>        ByVal Shift As Integer)
    TextBox2.Text = TextBox1.CurLine
    TextBox3.Text = TextBox1.CurX
    TextBox4.Text = TextBox1.CurTargetX
End Sub

Private Sub UserForm_Initialize()
    TextBox1.MultiLine = True

    TextBox1.Text = "Type your text here. User CTRL + ENTER to start" _<BR>    &amp; " a new line."
End Sub</code></pre>
</LI></OL></SPAN>Example</P>
The following example uses the <SPAN CLASS="lee">Cut</SPAN> and <SPAN CLASS="lee">Paste</SPAN> methods to cut text from one <SPAN CLASS="lee">TextBox</SPAN> and paste it into another <SPAN CLASS="lee">TextBox</SPAN>.</P>
To use this example, copy this sample code to the Declarations portion of a form. Make sure that the form contains:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">Two <SPAN CLASS="lee">TextBox</SPAN> controls named TextBox1 and TextBox2.</LI><LI CLASS="ULI1">A <SPAN CLASS="lee">CommandButton</SPAN> named CommandButton1.



<pre><code>Private Sub UserForm_Initialize()
    TextBox1.Text = "From TextBox1!"
    TextBox2.Text = "Hello "
    
    CommandButton1.Caption = "Cut and Paste"
    CommandButton1.AutoSize = True
End Sub

Private Sub CommandButton1_Click()
    TextBox2.SelStart = 0
    TextBox2.SelLength = TextBox2.TextLength
    TextBox2.Cut

    TextBox1.SetFocus
    TextBox1.SelStart = 0
    
    TextBox1.Paste
    TextBox2.SelStart = 0
End Sub</code></pre>
</LI></UL></SPAN><HR CLASS="rr"></FONT></BODY>
</HTML>
