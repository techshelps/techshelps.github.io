<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Option Explicit Statement</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Option Explicit Statement</H1>Description</P>
Used at <SPAN CLASS="pop">module level</SPAN> to force explicit declaration of all <SPAN CLASS="pop">variables</SPAN> in that <SPAN CLASS="pop">module</SPAN>.</P>
Syntax</P>
<SPAN CLASS="lee">Option Explicit</SPAN></P>
Remarks</P>
If used, the <SPAN CLASS="lee">Option</SPAN> <SPAN CLASS="lee">Explicit</SPAN> statement must appear in a module before any <SPAN CLASS="pop">procedures</SPAN>.</P>
When <SPAN CLASS="lee">Option Explicit</SPAN> appears in a module, you must explicitly declare all variables using the <SPAN CLASS="lee">Dim</SPAN>, <SPAN CLASS="lee">Private</SPAN>, <SPAN CLASS="lee">Public</SPAN>, <SPAN CLASS="lee">ReDim</SPAN>, or <SPAN CLASS="lee">Static</SPAN> statements. If you attempt to use an undeclared variable name, an error occurs at <SPAN CLASS="pop">compile time</SPAN>.</P>
If you don't use the <SPAN CLASS="lee">Option Explicit</SPAN> statement, all undeclared variables are of <SPAN CLASS="lee">Variant</SPAN> type unless the default type is otherwise specified with a <SPAN CLASS="lee">Def</SPAN><SPAN CLASS="p">type</SPAN> statement.</P>
<SPAN CLASS="nh">Note</SPAN>&nbsp;&nbsp;&nbsp;Use <SPAN CLASS="lee">Option Explicit</SPAN> to avoid incorrectly typing the name of an existing variable or to avoid confusion in code where the <SPAN CLASS="pop">scope</SPAN> of the variable is not clear.</P>
See Also</P>
<SPAN CLASS="eln">Const</SPAN> statement, <SPAN CLASS="eln">Def</SPAN><SPAN CLASS="eln">type</SPAN> statements, <SPAN CLASS="eln">Dim</SPAN> statement, <SPAN CLASS="eln">Function</SPAN> statement, <B>Option</B> <SPAN CLASS="eln">Base</SPAN> statement, <B>Option</B> <SPAN CLASS="eln">Compare</SPAN> statement, <B>Option</B> <SPAN CLASS="eln">Private</SPAN> statement, <SPAN CLASS="eln">Private</SPAN> statement, <SPAN CLASS="eln">Public</SPAN> statement, <SPAN CLASS="eln">ReDim</SPAN> statement, <SPAN CLASS="eln">Static</SPAN> statement, <SPAN CLASS="eln">Sub</SPAN> statement.</P>
Specifics (Microsoft Access)</P>
In Microsoft Access, you can ensure that all new modules will automatically include the <SPAN CLASS="eln">Option Explicit</SPAN> statement. Click <SPAN CLASS="eln">Options </SPAN>on the <SPAN CLASS="eln">Tool</SPAN> menu, click the <SPAN CLASS="eln">Module</SPAN> tab, and select the <SPAN CLASS="eln">Require Variable Declaration</SPAN> option.</P>
Once you select this option, it will automatically be set for all other databases which you create or open with Microsoft Access.</P>
<SPAN CLASS="nh">Note</SPAN>&nbsp;&nbsp;&nbsp;When you select this option, only new modules will have the <SPAN CLASS="eln">Option Explicit</SPAN> setting. You must enter the <SPAN CLASS="eln">Option Explicit</SPAN> statement into the <SPAN CLASS="pop">Declarations section</SPAN> of any existing modules. Or, when the module is open, click <SPAN CLASS="eln">Options</SPAN> on the <SPAN CLASS="eln">Tools</SPAN> menu, click the <SPAN CLASS="eln">Module</SPAN> tab, and select the <SPAN CLASS="eln">Require Variable Declaration</SPAN> option.</P>
Example</P>
This example uses the <SPAN CLASS="lee">Option Explicit</SPAN> statement to force you to explicitly declare all variables. Attempting to use an undeclared variable causes an error at compile time. The <SPAN CLASS="lee">Option Explicit</SPAN> statement is used at the module level only.</P>

<pre><code>Option explicit                    ' Force explicit variable declaration.
Dim MyVar                        ' Declare variable.
MyInt = 10                        ' Undeclared variable generates error.
MyVar = 10                        ' Declared variable does not generate error.</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
