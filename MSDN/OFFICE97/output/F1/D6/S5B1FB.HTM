<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Const Statement</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>Const Statement</H2>Description</P>
Declares <SPAN CLASS="pop">constants</SPAN> for use in place of literal values.</P>
Syntax</P>
[<SPAN CLASS="lee">Public</SPAN> | <SPAN CLASS="lee">Private</SPAN>]<SPAN CLASS="lee"> Const</SPAN> <SPAN CLASS="p">constname</SPAN> [<SPAN CLASS="lee">As</SPAN> <SPAN CLASS="p">type</SPAN>] <SPAN CLASS="lee">=</SPAN> <SPAN CLASS="p">expression</SPAN></P>
The <SPAN CLASS="lee">Const</SPAN> statement syntax has these parts</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="66pt" VALIGN="TOP"><COL WIDTH="293pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD COLSPAN="3" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">Public</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. <SPAN CLASS="pop">Keyword</SPAN> used at <SPAN CLASS="pop">module level</SPAN> to declare constants that are available to all procedures in all <SPAN CLASS="pop">modules</SPAN>. Not allowed in procedures.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">Private</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. Keyword used at module level to declare constants that are available only within the module where the <SPAN CLASS="pop">declaration</SPAN> is made. Not allowed in procedures.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">constname</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Required. Name of the constant; follows standard <SPAN CLASS="pop">variable</SPAN> naming conventions.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">type</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. <SPAN CLASS="pop">Data type</SPAN> of the constant; may be <SPAN CLASS="lee">Byte</SPAN>, <SPAN CLASS="lee">Boolean</SPAN>, <SPAN CLASS="lee">Integer</SPAN>, <SPAN CLASS="lee">Long</SPAN>, <SPAN CLASS="lee">Currency</SPAN>, <SPAN CLASS="lee">Single</SPAN>, <SPAN CLASS="lee">Double</SPAN>, <SPAN CLASS="lee">Decimal</SPAN> (not currently supported), <SPAN CLASS="lee">Date</SPAN>, <SPAN CLASS="lee">String</SPAN>, or <SPAN CLASS="lee">Variant</SPAN>. Use a separate <SPAN CLASS="lee">As</SPAN> <SPAN CLASS="p">type</SPAN> clause for each constant being declared.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">expression</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Required. Literal, other constant, or any combination that includes all arithmetic or logical operators except <SPAN CLASS="lee">Is</SPAN>.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
Constants are private by default. Within procedures, constants are always private; their visibility can't be changed. In <SPAN CLASS="pop">standard modules</SPAN>, the default visibility of module-level constants can be changed using the <SPAN CLASS="lee">Public</SPAN> keyword. In <SPAN CLASS="pop">class modules</SPAN>, however, constants can only be private and their visibility can't be changed using the <SPAN CLASS="lee">Public</SPAN> keyword.</P>
To combine several constant declarations on the same line, separate each constant assignment with a comma. When constant declarations are combined in this way, the <SPAN CLASS="lee">Public</SPAN> or <SPAN CLASS="lee">Private</SPAN> keyword, if used, applies to all of them.</P>
You can't use variables, user-defined functions, or intrinsic Visual Basic functions (such as <SPAN CLASS="lee">Chr</SPAN>) in <SPAN CLASS="pop">expressions</SPAN> assigned to constants.</P>
<SPAN CLASS="nh">Note</SPAN>&nbsp;&nbsp;&nbsp;Constants can make your programs self-documenting and easy to modify. Unlike variables, constants can't be inadvertently changed while your program is running.</P>
If you don't explicitly declare the constant type using <SPAN CLASS="lee">As</SPAN> <SPAN CLASS="p">type</SPAN>, the constant has the data type that is most appropriate for <I>expression</I>.</P>
Constants declared in a <SPAN CLASS="lee">Sub</SPAN>, <SPAN CLASS="lee">Function</SPAN>, or <SPAN CLASS="lee">Property</SPAN> procedure are local to that procedure. A constant declared outside a procedure is defined throughout the module in which it is declared.&nbsp;&nbsp;&nbsp;You can use constants anywhere you can use an expression.</P>
See Also</P>
#<SPAN CLASS="eln">Const</SPAN> directive, <SPAN CLASS="eln">Def</SPAN><SPAN CLASS="eln">type</SPAN> statements, <SPAN CLASS="eln">Function</SPAN> statement, <SPAN CLASS="eln">Let</SPAN> statement, <B>Property</B> <SPAN CLASS="eln">Get</SPAN> statement, <B>Property</B> <SPAN CLASS="eln">Let</SPAN> statement, <B>Property</B> <SPAN CLASS="eln">Set</SPAN> statement, <SPAN CLASS="eln">Sub</SPAN> statement.</P>
Specifics (Microsoft Access)</P>
A constant in a Microsoft Access <SPAN CLASS="pop">standard module</SPAN> is private by default. If you precede a constant with the keyword <SPAN CLASS="eln">Public</SPAN>, however, it is then available to other modules in the current database. It is also available to modules that reference the current database.</P>
A constant defined in a <SPAN CLASS="pop">class module</SPAN> is always private to that module, and can't be made public by using the <SPAN CLASS="eln">Public</SPAN> keyword.</P>
Example</P>
This example uses the <SPAN CLASS="lee">Const</SPAN> statement to declare constants for use in place of literal values. <SPAN CLASS="lee">Public</SPAN> constants occur in the General section of a standard module, rather than a class module. <SPAN CLASS="lee">Private</SPAN> constants can go in the General section of any type of module.</P>

<pre><code>' Constants are Private by default.
Const MyVar = 459

' Declare Public constant. 
Public Const MyString = "HELP"

' Declare Private Integer constant.
Private Const MyInt As Integer = 5

' Declare multiple constants on same line.
Const MyStr = "Hello", MyDouble As Double = 3.4567</code></pre>
Example (Microsoft Access)</P>
In Microsoft Access, you cannot declare public constants in the <SPAN CLASS="pop">Declarations section</SPAN> of a class module. Constants in a class module must be private. You can declare both public and private constants in the Declarations section of a standard module.</P>

<pre><code>' In class module.
Const conCommission As Single = .08

' In standard module.
Const conErrorNumber As Integer = 91
Public Const conAddress As String = "8421 58th Avenue, College Park, MD"</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
