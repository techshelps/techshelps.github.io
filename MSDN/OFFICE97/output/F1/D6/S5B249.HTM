<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>InStr Function</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>InStr Function</H2>Description</P>
Returns a <SPAN CLASS="lee">Variant</SPAN> (<SPAN CLASS="lee">Long</SPAN>) specifying the position of the first occurrence of one string within another.</P>
Syntax </P>
<SPAN CLASS="lee">InStr</SPAN>([<SPAN CLASS="p">start</SPAN><B>,</B> ]<SPAN CLASS="p">string1</SPAN><B>,</B> <SPAN CLASS="p">string2</SPAN>[<B>,</B> <SPAN CLASS="p">compare</SPAN>])</P>
The <SPAN CLASS="lee">InStr</SPAN> function syntax has these <SPAN CLASS="pop">arguments</SPAN></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="58pt" VALIGN="TOP"><COL WIDTH="301pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD COLSPAN="3" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">start</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. <SPAN CLASS="pop">Numeric expression</SPAN> that sets the starting position for each search. If omitted, search begins at the first character position. If <SPAN CLASS="narg">start</SPAN> contains <SPAN CLASS="lee">Null</SPAN>, an error occurs. The <SPAN CLASS="narg">start</SPAN> argument is required if <SPAN CLASS="narg">compare</SPAN> is specified.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">string1</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Required. <SPAN CLASS="pop">String expression</SPAN> being searched.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">string2</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Required. String expression sought.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">compare</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. Specifies the type of <SPAN CLASS="pop">string comparison</SPAN>. The <SPAN CLASS="narg">compare</SPAN> argument can be omitted, or it can be 0, 1 or 2. Specify <SPAN CLASS="lee">0</SPAN> (default) to perform a binary comparison. Specify <SPAN CLASS="lee">1</SPAN> to perform a textual, noncase-sensitive comparison. For Microsoft Access only, specify <B>2</B> to perform a comparison based on information contained in your database. If <SPAN CLASS="narg">compare</SPAN> is Null, an error occurs. If <SPAN CLASS="narg">compare</SPAN> is omitted, the <SPAN CLASS="lee">Option</SPAN> <SPAN CLASS="lee">Compare</SPAN> setting determines the type of comparison.</P></TD></TR></TBODY></TABLE>
<BR></P>Return Values</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="132pt" VALIGN="TOP"><COL WIDTH="227pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">If</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">InStr returns</P></TD></TR><TR><TD COLSPAN="3" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="narg">string1</SPAN> is zero-length</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">0</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="narg">string1</SPAN> is <SPAN CLASS="lee">Null</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Null</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="narg">string2</SPAN> is zero-length</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="narg">start</SPAN></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="narg">string2</SPAN> is <SPAN CLASS="lee">Null</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Null</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="narg">string2</SPAN> is not found</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">0</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="narg">string2</SPAN> is found within <SPAN CLASS="narg">string1</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Position at which match is found</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="narg">start</SPAN> &gt; <SPAN CLASS="narg">string2</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">0</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
The <SPAN CLASS="lee">InStrB</SPAN> function is used with byte data contained in a string. Instead of returning the character position of the first occurrence of one string within another, <SPAN CLASS="lee">InStrB</SPAN> returns the byte position.</P>
See Also</P>
<B>Option</B> <SPAN CLASS="eln">Compare</SPAN> statement, <SPAN CLASS="eln">StrComp</SPAN> function.</P>
Example </P>
This example uses the <SPAN CLASS="lee">InStr</SPAN> function to return the position of the first occurrence of one string within another.</P>

<pre><code>Dim SearchString, SearchChar, MyPos
SearchString ="XXpXXpXXPXXP"            ' String to search in.
SearchChar = "P"                            ' Search for "P".

' A textual comparison starting at position 4. Returns 6.
MyPos = Instr(4, SearchString, SearchChar, 1)    

' A binary comparison starting at position 1. Returns 9.
MyPos = Instr(1, SearchString, SearchChar, 0)

' Comparison is binary by default (last argument is omitted).
MyPos = Instr(SearchString, SearchChar)    ' Returns 9.

MyPos = Instr(1, SearchString, "W")        ' Returns 0.</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
