<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CommandBarControls Collection Object</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>CommandBarControls Collection Object</H1>Description</P>
A collection of <SPAN CLASS="lee">CommandBarControl</SPAN> objects that represent the <SPAN CLASS="pop">command bar controls</SPAN> on a command bar.</P>
Using the CommandBarControls Collection</P>
Use the <SPAN CLASS="lee">Controls</SPAN> property to return the <SPAN CLASS="lee">CommandBarControls</SPAN> collection. The following example changes the caption of every control on the toolbar named "Standard" to the current value of the <SPAN CLASS="lee">Id</SPAN> property for that control.</P>

<pre><code>For Each ctl In CommandBars("Standard").Controls
    ctl.Caption = CStr(ctl.Id)
Next ctl</code></pre>
Use the <SPAN CLASS="lee">Add</SPAN> method to add a new command bar control to the <SPAN CLASS="lee">CommandBarControls</SPAN> collection. This example adds a new, blank button to the command bar named "Custom."</P>

<pre><code>Set myBlankBtn = CommandBars("Custom").Controls.Add</code></pre>
Use <SPAN CLASS="lee">Controls</SPAN>(<SPAN CLASS="p">index</SPAN>), where <SPAN CLASS="p">index</SPAN> is the caption or index number of a control, to return a <B>CommandBarControl</B>, <SPAN CLASS="lee">CommandBarButton</SPAN>, <SPAN CLASS="lee">CommandBarComboBox</SPAN>, or <SPAN CLASS="lee">CommandBarPopup</SPAN> object. The following example copies the first control from the command bar named "Standard" to the command bar named "Custom."</P>

<pre><code>Set myCustomBar = CommandBars("Custom")
Set myControl = CommandBars("Standard").Controls(1)
myControl.Copy Bar:=myCustomBar, Before:=1</code></pre>
Properties</P>
<SPAN CLASS="eln">Application</SPAN> property, <SPAN CLASS="eln">Count</SPAN> property, <SPAN CLASS="eln">Creator</SPAN> property, <SPAN CLASS="eln">Item</SPAN> property (<SPAN CLASS="eln">CommandBars</SPAN> and <SPAN CLASS="eln">CommandBarControls</SPAN> collections), <SPAN CLASS="eln">Parent</SPAN> property.</P>
Methods</P>
<SPAN CLASS="eln">Add</SPAN> method (<SPAN CLASS="eln">CommandBarControls</SPAN> collection).</P>
Specifics (Microsoft Access)</P>
Although most Access collections are zero-based, all command bar collections are 1-based. Note, however, that you can use the <SPAN CLASS="eln">For Each...Next</SPAN> syntax to iterate through the objects in a collection without having to worry about specific index numbers.</P>
<HR CLASS="rr"></FONT></BODY>
</HTML>
