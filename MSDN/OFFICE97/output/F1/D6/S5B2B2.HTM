<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Spc Function</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Spc Function</H1>Description</P>
Used with the <SPAN CLASS="lee">Print #</SPAN> statement or the <SPAN CLASS="lee">Print</SPAN> method to position output.</P>
Syntax</P>
<SPAN CLASS="lee">Spc(</SPAN><SPAN CLASS="p">n</SPAN><SPAN CLASS="lee">)</SPAN></P>
The required <SPAN CLASS="p">n</SPAN> <SPAN CLASS="pop">argument</SPAN> is the number of spaces to insert before displaying or printing the next <SPAN CLASS="pop">expression</SPAN> in a list.</P>
Remarks</P>
If <SPAN CLASS="p">n</SPAN> is less than the output line width, the next print position immediately follows the number of spaces printed. If <SPAN CLASS="p">n</SPAN> is greater than the output line width, <SPAN CLASS="lee">Spc</SPAN> calculates the next print position using the formula:</P>
<SPAN CLASS="p">currentprintposition +</SPAN> (<SPAN CLASS="p">n</SPAN> <SPAN CLASS="lee">Mod</SPAN> <SPAN CLASS="p">width</SPAN>)</P>
For example, if the current print position is 24, the output line width is 80, and you specify <SPAN CLASS="lee">Spc(</SPAN>90<SPAN CLASS="lee">)</SPAN>, the next print will start at position 34 (current print position + the remainder of 90/80). If the difference between the current print position and the output line width is less than <SPAN CLASS="p">n</SPAN> (or <SPAN CLASS="p">n</SPAN> <SPAN CLASS="lee">Mod</SPAN> <SPAN CLASS="p">width</SPAN>), the <SPAN CLASS="lee">Spc</SPAN> function skips to the beginning of the next line and generates spaces equal to <SPAN CLASS="p">n&nbsp;–&nbsp;</SPAN>(<SPAN CLASS="p">width</SPAN>&nbsp;<SPAN CLASS="p">–&nbsp;currentprintposition</SPAN>).</P>
<SPAN CLASS="nh">Note</SPAN>&nbsp;&nbsp;&nbsp;Make sure your tabular columns are wide enough to accommodate wide letters.</P>
When you use the <SPAN CLASS="lee">Print</SPAN> method with a proportionally spaced font, the width of space characters printed using the <SPAN CLASS="lee">Spc</SPAN> function is always an average of the width of all characters in the point size for the chosen font. However, there is no correlation between the number of characters printed and the number of fixed-width columns those characters occupy. For example, the uppercase letter W occupies more than one fixed-width column and the lowercase letter i occupies less than one fixed-width column.</P>
See Also</P>
<SPAN CLASS="eln">Mod</SPAN> operator, <B>Print </B><SPAN CLASS="eln">#</SPAN> statement, <SPAN CLASS="eln">Print</SPAN> method, <SPAN CLASS="eln">Space</SPAN> function, <SPAN CLASS="eln">Tab</SPAN> function, <B>Width</B> <SPAN CLASS="eln">#</SPAN> statement.</P>
Example</P>
This example uses the <SPAN CLASS="lee">Spc</SPAN> function to position output in a file and in the <SPAN CLASS="eln">Debug</SPAN> window.</P>

<pre><code>' The Spc function can be used with the Print # statement.
Open "TESTFILE" For Output As #1        ' Open file for output.
Print #1, "10 spaces between here"; Spc(10); "and here."
Close #1                                        ' Close file.</code></pre>
The following statement causes the text to be printed in the <SPAN CLASS="eln">Debug</SPAN> window (using the <SPAN CLASS="lee">Print</SPAN> method), preceded by 30 spaces.</P>

<pre><code>Debug.Print Spc(30); "Thirty spaces later..."</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
