<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OldHeight, OldWidth Properties</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>OldHeight, OldWidth Properties</H1>Applies To</P>
<SPAN CLASS="eln">CheckBox</SPAN> control, <SPAN CLASS="eln">ComboBox</SPAN> control, <SPAN CLASS="eln">CommandButton</SPAN> control, <SPAN CLASS="eln">Image</SPAN> control, <SPAN CLASS="eln">Label</SPAN> control, <SPAN CLASS="eln">ListBox</SPAN> control, <SPAN CLASS="eln">MultiPage</SPAN> control, <SPAN CLASS="eln">OptionButton</SPAN> control, <SPAN CLASS="eln">ScrollBar</SPAN> control, <SPAN CLASS="eln">SpinButton</SPAN> control, <SPAN CLASS="eln">TabStrip</SPAN> control, <SPAN CLASS="eln">TextBox</SPAN> control, <SPAN CLASS="eln">ToggleButton</SPAN> control.</P>
Description</P>
Returns the previous height or width, in <SPAN CLASS="pop">points</SPAN>, of the control.</P>
Syntax</P>
<SPAN CLASS="p">object</SPAN><SPAN CLASS="l">.</SPAN><SPAN CLASS="lee">OldHeight</SPAN></P>
<SPAN CLASS="p">object</SPAN><SPAN CLASS="l">.</SPAN><SPAN CLASS="lee">OldWidth</SPAN></P>
The <SPAN CLASS="lee">OldHeight</SPAN> and <SPAN CLASS="lee">OldWidth</SPAN> property syntaxes have these parts:</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="63pt" VALIGN="TOP"><COL WIDTH="296pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD COLSPAN="3" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">object</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Required. A valid object.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
<SPAN CLASS="lee">OldHeight</SPAN> and <SPAN CLASS="lee">OldWidth</SPAN> are read-only.</P>
The <SPAN CLASS="lee">OldHeight</SPAN> and <SPAN CLASS="lee">OldWidth</SPAN> properties are automatically updated when you move or size a control. If you change the size of a control, the <SPAN CLASS="lee">Height</SPAN> and <SPAN CLASS="lee">Width</SPAN> properties store the new height and <SPAN CLASS="lee">OldHeight</SPAN> and <SPAN CLASS="lee">OldWidth</SPAN> store the previous height.</P>
These properties are valid only in the Layout event.</P>
See Also</P>
<SPAN CLASS="eln">Height</SPAN>, <SPAN CLASS="eln">Width</SPAN> properties, Layout event, <SPAN CLASS="eln">LayoutEffect</SPAN> property, <SPAN CLASS="eln">OldLeft</SPAN>, <SPAN CLASS="eln">OldTop</SPAN> properties.</P>
Example</P>
The following example uses the <SPAN CLASS="lee">OldLeft</SPAN>, <SPAN CLASS="lee">OldTop</SPAN>, <SPAN CLASS="lee">OldHeight</SPAN>, and <SPAN CLASS="lee">OldWidth</SPAN> properties within the Layout event to keep a control at its current position and size. The user clicks the <SPAN CLASS="lee">CommandButton</SPAN> labeled <SPAN CLASS="eln">Move ComboBox</SPAN> to move the control, and then responds to a message box. The user can click the <SPAN CLASS="lee">CommandButton</SPAN> labeled <SPAN CLASS="eln">Reset ComboBox</SPAN> to reset the control for another repetition.</P>
To use this example, copy this sample code to the Declarations portion of a form. Make sure that the form contains:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">Two <SPAN CLASS="lee">CommandButton</SPAN> controls named CommandButton1 and CommandButton2.</LI><LI CLASS="ULI1">A <SPAN CLASS="lee">ComboBox</SPAN> named ComboBox1.



<pre><code>Dim Initialize As Integer
Dim ComboLeft, ComboTop, ComboWidth, ComboHeight As Integer

Private Sub UserForm_Initialize()
    Initialize = 0
    CommandButton1.Caption = "Move ComboBox"
    CommandButton2.Caption = "Reset ComboBox"
    
    'Information for resetting ComboBox
    ComboLeft = ComboBox1.Left
    ComboTop = ComboBox1.Top
    ComboWidth = ComboBox1.Width
    ComboHeight = ComboBox1.Height
End Sub

Private Sub CommandButton1_Click()
        ComboBox1.Move 0, 0, , , True
End Sub

Private Sub UserForm_Layout()
    Dim MyControl As Control
    Dim MsgBoxResult As Integer
    
    If Initialize = 0 Then   'Suppress MsgBox on initial layout event.
        Initialize = 1
        Exit Sub
    End If
    
    MsgBoxResult = MsgBox("In Layout event - Continue move?", vbYesNo)
    If MsgBoxResult = vbNo Then
        ComboBox1.Move ComboBox1.OldLeft, ComboBox1.OldTop, ComboBox1. _<BR>            OldWidth, ComboBox1.OldHeight
    End If
End Sub

Private Sub CommandButton2_Click()
    ComboBox1.Move ComboLeft, ComboTop, ComboWidth, ComboHeight

    'OldLeft, OldTop, OldWidth, and OldHeight are not recognized here.
    'The following statement, if not commented, would produce an error <BR>    'at run time.
    
    'ComboBox1.Move ComboBox1.OldLeft, ComboBox1.OldTop, ComboBox1.<BR>    'OldWidth, ComboBox1.OldHeight
End Sub</code></pre>
</LI></UL></SPAN><HR CLASS="rr"></FONT></BODY>
</HTML>
