<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HelpContextId Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>HelpContextId Property</H1>Applies To</P>
<SPAN CLASS="eln">CommandBarButton</SPAN> object, <SPAN CLASS="eln">CommandBarComboBox</SPAN> object, <SPAN CLASS="eln">CommandBarControl</SPAN> object, <SPAN CLASS="eln">CommandBarPopup</SPAN> object.</P>
Description</P>
Returns or sets the Help context ID number for the Help topic attached to the <SPAN CLASS="pop">command bar control.</SPAN> Read/write <SPAN CLASS="lee">Long</SPAN>.</P>
Remarks</P>
To use this property, you must also set the <SPAN CLASS="lee">HelpFile</SPAN> property.</P>
See Also</P>
<SPAN CLASS="eln">Help</SPAN> method, <SPAN CLASS="eln">HelpFile</SPAN> property.</P>
Specifics (Microsoft Access)</P>
In Microsoft Access&nbsp;97, you can use the <SPAN CLASS="p">Toolbar</SPAN><SPAN CLASS="eln"> Control Properties</SPAN> dialog box for <SPAN CLASS="pop">command bar</SPAN> controls to set the <SPAN CLASS="eln">HelpContextId</SPAN> property for a control on a command bar. Display the <SPAN CLASS="eln">Customize</SPAN> dialog box by pointing to <SPAN CLASS="eln">Toolbars</SPAN> on the <SPAN CLASS="eln">View</SPAN> menu and clicking <SPAN CLASS="eln">Customize</SPAN>. For <SPAN CLASS="pop">menu bar</SPAN> and <SPAN CLASS="pop">toolbar</SPAN> controls, display the menu bar or toolbar, and then right-click the control whose <SPAN CLASS="eln">HelpContextId</SPAN> property you want to set. For <SPAN CLASS="pop">shortcut menu</SPAN> controls, select the <SPAN CLASS="eln">Shortcut Menus</SPAN> check box on the <SPAN CLASS="eln">Toolbars</SPAN> tab of the <SPAN CLASS="eln">Customize</SPAN> dialog box, then find the shortcut menu control you want on the menu bar that's displayed and right-click the control. Click the <SPAN CLASS="eln">Properties</SPAN> command. Enter the context ID number of the Help topic you want in the <SPAN CLASS="eln">Help ContextID</SPAN> box.</P>
Example</P>
This example adds a custom report manager button to the <SPAN CLASS="eln">File</SPAN> menu and specifies a Help topic to be displayed as that button's context-sensitive Help.</P>

<pre><code>Set fileMenu = CommandBars _
    .FindControl(Type:=msoControlPopup, Id:=fileID)
Set fileMenuDropdown = fileMenu.CommandBar
Set newButton = fileMenuDropdown.Controls _
    .Add(Type:=msoControlButton, Before:=3)
With newButton
    .Caption = "Open Report"
    .DescriptionText = "Opens a quarterly report form"
    .OnAction = "ReportManager"
    .HelpFile = "C:\corphelp\custom.hlp"
    .HelpContextID = 47
End With</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
