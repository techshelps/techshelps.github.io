<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DataObject Object</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>DataObject Object</H1>Description</P>
A holding area for formatted text data used in transfer operations. Also holds a list of <SPAN CLASS="pop">formats</SPAN> corresponding to the pieces of text stored in the <SPAN CLASS="lee">DataObject</SPAN>.</P>
Remarks</P>
A <SPAN CLASS="lee">DataObject</SPAN> can contain one piece of text for the Clipboard text format, and one piece of text for each additional text format, such as custom and user-defined formats.</P>
A <SPAN CLASS="lee">DataObject</SPAN> is distinct from the Clipboard. A <SPAN CLASS="lee">DataObject</SPAN> supports commands that involve the Clipboard and drag-and-drop actions for text. When you start an operation involving the Clipboard (such as <SPAN CLASS="lee">GetText</SPAN>) or a drag-and-drop operation, the data involved in that operation is moved to a <SPAN CLASS="lee">DataObject</SPAN>.</P>
The <SPAN CLASS="lee">DataObject</SPAN> works like the Clipboard. If you copy a text string to a <SPAN CLASS="lee">DataObject</SPAN>, the <SPAN CLASS="lee">DataObject</SPAN> stores the text string. If you copy a second string of the same format to the <SPAN CLASS="lee">DataObject</SPAN>, the <SPAN CLASS="lee">DataObject</SPAN> discards the first text string and stores a copy of the second string. It stores one piece of text of a specified format and keeps the text from the most recent operation.</P>
Methods</P>
<SPAN CLASS="eln">Clear</SPAN> method, <SPAN CLASS="eln">GetFormat</SPAN> method, <SPAN CLASS="eln">GetFromClipboard</SPAN> method, <SPAN CLASS="eln">GetText</SPAN> method, <SPAN CLASS="eln">PutInClipboard</SPAN> method, <SPAN CLASS="eln">SetText</SPAN> method, <SPAN CLASS="eln">StartDrag</SPAN> method.</P>
See Also</P>
<SPAN CLASS="crkt">BeforeDragOver</SPAN> event, <SPAN CLASS="crkt">BeforeDropOrPaste</SPAN> event.</P>
Example</P>
The following example demonstrates a drag-and-drop operation from one <SPAN CLASS="lee">ListBox</SPAN> to another using a <SPAN CLASS="lee">DataObject</SPAN> to contain the dragged text. This code sample uses the <SPAN CLASS="lee">SetText</SPAN> and <SPAN CLASS="lee">StartDrag</SPAN> methods in the <SPAN CLASS="crkt">MouseMove</SPAN> event to implement the drag-and-drop operation.</P>
To use this example, copy this sample code to the Declarations portion of a form. Make sure that the form contains two <SPAN CLASS="lee">ListBox</SPAN> controls named ListBox1 and ListBox2. You also need to add choices to the second <SPAN CLASS="lee">ListBox</SPAN>.</P>

<pre><code>Private Sub ListBox2_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, _
        ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As _
        Single, ByVal DragState As Long, ByVal Effect As MSForms.ReturnEffect, _
        ByVal Shift As Integer)
    Cancel = True
    Effect = 1
End Sub

Private Sub ListBox2_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, _
        ByVal Action As Long, ByVal Data As MSForms.DataObject, ByVal X As  _
        Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal  _
        Shift As Integer)
    Cancel = True
    Effect = 1
    ListBox2.AddItem Data.GetText
End Sub

Private Sub ListBox1_MouseMove(ByVal Button As Integer, ByVal Shift _
        As Integer, ByVal X As Single, ByVal Y As Single)
    Dim MyDataObject As DataObject
    If Button = 1 Then
        Set MyDataObject = New DataObject
        Dim Effect As Integer
        MyDataObject.SetText ListBox1.Value
        Effect = MyDataObject.StartDrag
    End If
End Sub

Private Sub UserForm_Initialize()
    For i = 1 To 10
        ListBox1.AddItem "Choice " &amp; (ListBox1.ListCount + 1)
    Next i
End Sub</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
