<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>+ Operator</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>+ Operator</H2>Description</P>
Used to sum two numbers.</P>
Syntax</P>
<SPAN CLASS="p">result</SPAN> <SPAN CLASS="lee">=</SPAN> <SPAN CLASS="p">expression1+expression2</SPAN></P>
The <SPAN CLASS="lee">+</SPAN> operator syntax has these parts</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="82pt" VALIGN="TOP"><COL WIDTH="277pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD COLSPAN="3" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">result</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Required; any numeric <SPAN CLASS="pop">variable</SPAN>.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">expression1</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Required; any <SPAN CLASS="pop">expression</SPAN>.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">expression2</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Required; any expression.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
When you use the <SPAN CLASS="lee">+</SPAN> operator, you may not be able to determine whether addition or string concatenation will occur. Use the <SPAN CLASS="lee">&amp;</SPAN> operator for concatenation to eliminate ambiguity and provide self-documenting code.</P>
If at least one expression is not a Variant, the following rules apply</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="187pt" VALIGN="TOP"><COL WIDTH="172pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">If</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Then</P></TD></TR><TR><TD COLSPAN="3" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Both expressions are <SPAN CLASS="pop">numeric data types</SPAN> (Byte, Boolean, Integer, Long, Single, Double, Date, Currency, or Decimal),</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Add.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Both expressions are String,</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Concatenate.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">One expression is a numeric data type and the other is any <SPAN CLASS="lee">Variant</SPAN> except Null,</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Add.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">One expression is a <SPAN CLASS="lee">String</SPAN> and the other is any <SPAN CLASS="lee">Variant</SPAN> except <SPAN CLASS="lee">Null</SPAN>,</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Concatenate.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">One expression is an Empty <SPAN CLASS="lee">Variant</SPAN>,</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Return the remaining expression unchanged as <SPAN CLASS="p">result</SPAN>.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">One expression is a numeric data type and the other is a <SPAN CLASS="lee">String</SPAN>,</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">A <SPAN CLASS="ctt">Type mismatch</SPAN> error occurs.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Either expression is <SPAN CLASS="lee">Null</SPAN>,</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">result</SPAN> is <SPAN CLASS="lee">Null</SPAN>.</P></TD></TR></TBODY></TABLE>
<BR></P>If both expressions are <SPAN CLASS="lee">Variant</SPAN> expressions, the following rules apply</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="187pt" VALIGN="TOP"><COL WIDTH="172pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">If</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Then</P></TD></TR><TR><TD COLSPAN="3" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Both <SPAN CLASS="lee">Variant</SPAN> expressions are numeric,</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Add.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Both <SPAN CLASS="lee">Variant</SPAN> expressions are strings,</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Concatenate.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">One <SPAN CLASS="lee">Variant</SPAN> expression is numeric and the other is a string,</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Add.</P></TD></TR></TBODY></TABLE>
<BR></P>For simple arithmetic addition involving only expressions of numeric data types, the <SPAN CLASS="pop">data type</SPAN> of <SPAN CLASS="p">result</SPAN> is usually the same as that of the most precise expression. The order of precision, from least to most precise, is <SPAN CLASS="lee">Byte</SPAN>, <SPAN CLASS="lee">Integer</SPAN>, <SPAN CLASS="lee">Long</SPAN>, <SPAN CLASS="lee">Single</SPAN>, <SPAN CLASS="lee">Double</SPAN>, <SPAN CLASS="lee">Currency</SPAN>, and <SPAN CLASS="lee">Decimal</SPAN>. The following are exceptions to this order</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="188pt" VALIGN="TOP"><COL WIDTH="171pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">If</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Then <SPAN CLASS="p">result </SPAN>is</P></TD></TR><TR><TD COLSPAN="3" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">A <SPAN CLASS="eln">Single</SPAN> and a <SPAN CLASS="eln">Long</SPAN> are added,</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">a <SPAN CLASS="eln">Double</SPAN>.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The data type of <SPAN CLASS="p">result</SPAN> is a <SPAN CLASS="lee">Long</SPAN>, <SPAN CLASS="lee">Single</SPAN>, or <SPAN CLASS="lee">Date</SPAN> variant that overflows its legal range,</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">converted to a <SPAN CLASS="lee">Double</SPAN> variant.</P></TD></TR></TBODY></TABLE>
<BR></P><I>(continued)</I></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="188pt" VALIGN="TOP"><COL WIDTH="171pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The data type of <SPAN CLASS="p">result</SPAN> is a <SPAN CLASS="lee">Byte</SPAN> variant that overflows its legal range,</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">converted to an <SPAN CLASS="lee">Integer</SPAN> variant.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The data type of <SPAN CLASS="p">result</SPAN> is an <SPAN CLASS="lee">Integer</SPAN> variant that overflows its legal range,</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">converted to a <SPAN CLASS="lee">Long</SPAN> variant.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">A <SPAN CLASS="lee">Date</SPAN> is added to any data type,</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">a <SPAN CLASS="lee">Date</SPAN>.</P></TD></TR></TBODY></TABLE>
<BR></P>If one or both expressions are <SPAN CLASS="lee">Null</SPAN> expressions, <SPAN CLASS="p">result</SPAN> is <SPAN CLASS="lee">Null</SPAN>. If both expressions are <SPAN CLASS="lee">Empty</SPAN>, <SPAN CLASS="p">result</SPAN> is an <SPAN CLASS="lee">Integer</SPAN>. However, if only one expression is <SPAN CLASS="lee">Empty</SPAN>, the other expression is returned unchanged as <SPAN CLASS="p">result</SPAN>.</P>
<SPAN CLASS="nh">Note</SPAN>&nbsp;&nbsp;&nbsp;The order of precision used by addition and subtraction is not the same as the order of precision used by multiplication.</P>
See Also</P>
Operator precedence.</P>
Example</P>
This example uses the <SPAN CLASS="lee">+</SPAN> operator to sum numbers. The <SPAN CLASS="lee">+</SPAN> operator can also be used to concatenate strings. However, to eliminate ambiguity, you should use the <SPAN CLASS="lee">&amp;</SPAN> operator instead. If the components of an expression created with the <SPAN CLASS="lee">+</SPAN> operator include both strings and numerics, the arithmetic result is assigned. If the components are exclusively strings, the strings are concatenated.</P>

<pre><code>Dim MyNumber, Var1, Var2
MyNumber = 2 + 2    ' Returns 4.
MyNumber = 4257.04 + 98112        ' Returns 102369.04.

Var1 = "34": Var2 = 6                ' Initialize mixed variables.
MyNumber = Var1 + Var2            ' Returns 40.

Var1 = "34": Var2 = "6"            ' Initialize variables with strings.
MyNumber = Var1 + Var2            ' Returns "346" (string concatenation).</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
