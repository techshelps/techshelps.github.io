<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Raise Method</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Raise Method</H1>Applies To</P>
<SPAN CLASS="eln">Err</SPAN> object.</P>
Description</P>
Generates a <SPAN CLASS="pop">run-time error</SPAN>.</P>
Syntax</P>
<SPAN CLASS="p">object</SPAN><SPAN CLASS="lee">.Raise </SPAN><SPAN CLASS="narg">number</SPAN><SPAN CLASS="lee">, </SPAN><SPAN CLASS="narg">source</SPAN><SPAN CLASS="lee">, </SPAN><SPAN CLASS="narg">description</SPAN><SPAN CLASS="lee">, </SPAN><SPAN CLASS="narg">helpfile</SPAN><SPAN CLASS="lee">, </SPAN><SPAN CLASS="narg">helpcontext</SPAN></P>
The <SPAN CLASS="lee">Raise</SPAN> method has the following object qualifier and <SPAN CLASS="pop">named arguments</SPAN></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="72pt" VALIGN="TOP"><COL WIDTH="287pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Argument</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD COLSPAN="3" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">object</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Required. Always the <SPAN CLASS="lee">Err </SPAN>object.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="narg">number</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Required. <SPAN CLASS="lee">Long </SPAN>integer that identifies the nature of the error. Visual&nbsp;Basic errors (both Visual&nbsp;Basic-defined and user-defined errors) are in the range 0 – 65535. When setting the <SPAN CLASS="lee">Number</SPAN> property to your own error code in a class module, you add your error code number to the <SPAN CLASS="lee">vbObjectError </SPAN><SPAN CLASS="pop">constant</SPAN>. For example, to generate the <SPAN CLASS="pop">error number</SPAN> 1050, assign <SPAN CLASS="lee">vbObjectError</SPAN> + 1050 to the <SPAN CLASS="lee">Number</SPAN> property.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="narg">source</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. <SPAN CLASS="pop">String expression</SPAN> naming the object or application that generated the error. When setting this <SPAN CLASS="pop">property</SPAN> for an object, use the form <SPAN CLASS="p">project</SPAN><B>.</B><SPAN CLASS="p">class</SPAN>. If <SPAN CLASS="p">source</SPAN> is not specified, the programmatic ID of the current Visual&nbsp;Basic <SPAN CLASS="pop">project</SPAN> is used.</P></TD></TR></TBODY></TABLE>
<BR></P><I>(continued)</I></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="72pt" VALIGN="TOP"><COL WIDTH="287pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Argument</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD COLSPAN="3" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="narg">description</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. String expression describing the error. If unspecified, the value in <SPAN CLASS="lee">Number</SPAN> is examined. If it can be mapped to a Visual&nbsp;Basic run-time error code, the string that would be returned by the <SPAN CLASS="lee">Error</SPAN> function is used as <SPAN CLASS="lee">Description</SPAN><SPAN CLASS="p">.</SPAN> If there is no Visual&nbsp;Basic error corresponding to <SPAN CLASS="lee">Number</SPAN>, the "Application-defined or object-defined error" message is used.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="narg">helpfile</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. The fully qualified path to the Microsoft Windows Help file in which help on this error can be found. If unspecified, Visual&nbsp;Basic uses the fully qualified drive, path, and file name of the Visual&nbsp;Basic Help file.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="narg">helpcontext</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. The context ID identifying a topic within <SPAN CLASS="narg">helpfile</SPAN> that provides help for the error. If omitted, the Visual&nbsp;Basic Help file context ID for the error corresponding to the <SPAN CLASS="lee">Number</SPAN> property is used, if it exists.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
All of the <SPAN CLASS="pop">arguments</SPAN> are optional except <SPAN CLASS="narg">number</SPAN>. If you use <SPAN CLASS="lee">Raise</SPAN> without specifying some arguments, and the property settings of the <SPAN CLASS="lee">Err</SPAN> object contain values that have not been cleared, those values serve as the values for your error.</P>
<SPAN CLASS="lee">Raise</SPAN> is used for generating run-time errors and can be used instead of the <SPAN CLASS="lee">Error</SPAN> statement. <SPAN CLASS="lee">Raise</SPAN> is useful for generating errors when writing class modules, because the <SPAN CLASS="lee">Err</SPAN> object gives richer information than is possible if you generate errors with the <SPAN CLASS="lee">Error </SPAN>statement. For example, with the <SPAN CLASS="lee">Raise</SPAN> method, the source that generated the error can be specified in the <SPAN CLASS="lee">Source</SPAN> property, online Help for the error can be referenced, and so on.</P>
See Also</P>
<SPAN CLASS="eln">Clear</SPAN> method, <SPAN CLASS="eln">Description</SPAN> property, <SPAN CLASS="eln">Err</SPAN> object, <SPAN CLASS="eln">Error</SPAN> statement, <SPAN CLASS="eln">HelpContext</SPAN> property, <SPAN CLASS="eln">HelpContextID</SPAN> property ("Extensibility Object Model Language Reference"), <SPAN CLASS="eln">HelpFile</SPAN> property, <SPAN CLASS="eln">LastDLLError</SPAN> property, <SPAN CLASS="eln">Number</SPAN> property, <SPAN CLASS="eln">Source</SPAN> property.</P>
Specifics (Microsoft Access)</P>
The <SPAN CLASS="eln">Raise</SPAN> method raises a specified Visual&nbsp;Basic error. The properties of the <SPAN CLASS="eln">Err</SPAN> object are set as though the error had actually occurred in running code. However, this works only for Visual&nbsp;Basic errors, not for Microsoft Access errors or <SPAN CLASS="pop">Microsoft Jet database engine</SPAN> errors.</P>
If you use the <SPAN CLASS="eln">Raise</SPAN> method with an error number reserved by Microsoft Access or by the Microsoft Jet database engine, the value of the <SPAN CLASS="eln">Err</SPAN> object's <SPAN CLASS="eln">Description</SPAN> property is "Application-defined or object-defined error." To determine the descriptive string for a Microsoft Access or Jet database engine error that hasn't actually occurred in running code, use the <SPAN CLASS="eln">AccessError</SPAN> method.</P>
The <SPAN CLASS="eln">AccessError</SPAN> method takes a Long value that represents an error number and returns the descriptive string associated with the error.</P>
Example</P>
This example uses the <SPAN CLASS="lee">Err </SPAN>object's <SPAN CLASS="lee">Raise </SPAN>method to generate an error within an Automation object written in Visual&nbsp;Basic. It has the programmatic ID <SPAN CLASS="cte">MyProj.MyObject</SPAN>.</P>

<pre><code>Const MyContextID = 1010407            ' Define a constant for contextID.
Function TestName(CurrentName, NewName)
    If Instr(NewName, "bob") Then    ' Test the validity of NewName.
        ' Raise the exception.
        Err.Raise vbObjectError + 27, "MyProj.MyObject", _
            "No ""bob"" allowed in your name", "c:\MyProj\MyHelp.Hlp", _
            MyContextID
    End If
End Function</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
