<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DateSerial Function</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>DateSerial Function</H2>Description</P>
Returns a <SPAN CLASS="lee">Variant</SPAN> (<SPAN CLASS="lee">Date</SPAN>) for a specified year, month, and day.</P>
Syntax</P>
<SPAN CLASS="lee">DateSerial(</SPAN><SPAN CLASS="narg">year</SPAN><SPAN CLASS="lee">, </SPAN><SPAN CLASS="narg">month</SPAN><SPAN CLASS="lee">, </SPAN><SPAN CLASS="narg">day</SPAN><SPAN CLASS="lee">)</SPAN></P>
The <SPAN CLASS="lee">DateSerial</SPAN> function syntax has these <SPAN CLASS="pop">named arguments</SPAN></P>

<TABLE COLS="4" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="44pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"><COL WIDTH="314pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</P></TD><TD COLSPAN="3" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD COLSPAN="4" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="narg">year</SPAN></P></TD><TD COLSPAN="3" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Required; <SPAN CLASS="lee">Integer</SPAN>. Number between 100 and 9999, inclusive, or a <SPAN CLASS="pop">numeric expression</SPAN>.</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="narg">month</SPAN></P></TD><TD COLSPAN="3" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Required; <SPAN CLASS="lee">Integer</SPAN>. Any numeric expression.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="narg">day</SPAN></P></TD><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Required; <SPAN CLASS="lee">Integer</SPAN>. Any numeric expression.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
To specify a date, such as December&nbsp;31, 1991, the range of numbers for each <SPAN CLASS="lee">DateSerial</SPAN> <SPAN CLASS="pop">argument</SPAN> should be in the accepted range for the unit; that is, 1 – 31 for days and 1 – 12 for months. However, you can also specify relative dates for each argument using any numeric expression that represents some number of days, months, or years before or after a certain date.</P>
The following example uses numeric expressions instead of absolute date numbers. Here the <SPAN CLASS="lee">DateSerial</SPAN> function returns a date that is the day before the first day <BR>(<SPAN CLASS="cte">1 - 1</SPAN>), two months before August (<SPAN CLASS="cte">8 - 2</SPAN>), 10 years before 1990 (<SPAN CLASS="cte">1990 - 10</SPAN>); in&nbsp;other words, May&nbsp;31, 1980.</P>

<pre><code>DateSerial(1990 - 10, 8 - 2, 1 - 1)</code></pre>
For the <SPAN CLASS="narg">year</SPAN> argument, values between 0 and 99, inclusive, are interpreted as the years 1900 – 1999. For all other <SPAN CLASS="narg">year</SPAN> arguments, use a four-digit year (for example, 1800).</P>
When any argument exceeds the accepted range for that argument, it increments to the next larger unit as appropriate. For example, if you specify 35 days, it is evaluated as one month and some number of days, depending on where in the year it is applied. If any single argument is outside the range –32,768 to 32,767, an error occurs. If the date specified by the three arguments falls outside the acceptable range of dates, an error occurs.</P>
See Also</P>
<SPAN CLASS="eln">Date</SPAN> function, <SPAN CLASS="eln">Date</SPAN> statement, <SPAN CLASS="eln">DateValue</SPAN> function, <SPAN CLASS="eln">Day</SPAN> function, <SPAN CLASS="eln">Month</SPAN> function, <SPAN CLASS="eln">Now</SPAN> function, <SPAN CLASS="eln">TimeSerial</SPAN> function, <SPAN CLASS="eln">TimeValue</SPAN> function, <SPAN CLASS="eln">Weekday</SPAN> function, <SPAN CLASS="eln">Year</SPAN> function.</P>
Example</P>
This example uses the <SPAN CLASS="lee">DateSerial</SPAN> function to return the date for the specified year, month, and day.</P>

<pre><code>Dim MyDate
' MyDate contains the date for February 12, 1969.
MyDate = DateSerial(1969, 2, 12)    ' Return a date.</code></pre>
Example (Microsoft Access)</P>
The following example uses the <SPAN CLASS="eln">DateSerial</SPAN> function together with the <SPAN CLASS="eln">Year</SPAN>, <SPAN CLASS="eln">Month</SPAN>, and <SPAN CLASS="eln">Day </SPAN>functions to return the number of days in a month. You can pass either a date or a string to the DaysInMonth function.</P>

<pre><code>Function DaysInMonth(dteInput As Date) As Integer
    Dim intDays As Integer

    ' Add one month, subtract dates to find difference.
    intDays = DateSerial(Year(dteInput), Month(dteInput) + 1, Day(dteInput)) _
        - DateSerial(Year(dteInput), Month(dteInput), Day(dteInput))
    DaysInMonth = intDays
    Debug.Print intDays
End Function</code></pre>
The following <SPAN CLASS="eln">Sub </SPAN>procedure shows several different ways that you might call the DaysInMonth function.</P>

<pre><code>Sub CallDaysInMonth()
    Dim intDays As Integer
    intDays = DaysInMonth(#4/1/96#)
    intDays = DaysInMonth("4-1-96")
    intDays = DaysInMonth("April 1, 1996")
End Sub</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
