<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>For...Next Statement</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>For...Next Statement</H2>Description</P>
Repeats a group of <SPAN CLASS="pop">statements</SPAN> a specified number of times.</P>
Syntax</P>
<SPAN CLASS="lee">For</SPAN> <SPAN CLASS="p">counter</SPAN> <SPAN CLASS="lee">=</SPAN> <SPAN CLASS="p">start</SPAN> <SPAN CLASS="lee">To</SPAN> <SPAN CLASS="p">end</SPAN> [<SPAN CLASS="lee">Step</SPAN> <SPAN CLASS="p">step</SPAN>]<BR>[<SPAN CLASS="p">statements</SPAN>]<BR>[<SPAN CLASS="lee">Exit For</SPAN>]<BR>[<SPAN CLASS="p">statements</SPAN>]</P>
<SPAN CLASS="lee">Next</SPAN> [<SPAN CLASS="p">counter</SPAN>]</P>
The <SPAN CLASS="lee">For…Next</SPAN> statement syntax has these parts</P>

<TABLE COLS="4" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="68pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"><COL WIDTH="291pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</P></TD><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD COLSPAN="4" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">counter</SPAN></P></TD><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Required. Numeric <SPAN CLASS="pop">variable</SPAN> used as a loop counter. The variable can't be a <SPAN CLASS="lee">Boolean</SPAN> or an <SPAN CLASS="pop">array</SPAN> element.</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">start</SPAN></P></TD><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Required. Initial value of <SPAN CLASS="p">counter</SPAN>.</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">end</SPAN></P></TD><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Required. Final value of <SPAN CLASS="p">counter</SPAN>.</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">step</SPAN></P></TD><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. Amount <SPAN CLASS="p">counter</SPAN> is changed each time through the loop. If not specified, <SPAN CLASS="p">step</SPAN> defaults to one.</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">statements</SPAN></P></TD><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. One or more statements between <SPAN CLASS="lee">For</SPAN> and <SPAN CLASS="lee">Next</SPAN> that are executed the specified number of times.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
The <SPAN CLASS="p">step</SPAN> <SPAN CLASS="pop">argument</SPAN> can be either positive or negative. The value of the <SPAN CLASS="p">step</SPAN> argument determines loop processing as follows</P>

<TABLE COLS="4" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="77pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"><COL WIDTH="282pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Value</P></TD><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Loop executes if</P></TD></TR><TR><TD COLSPAN="4" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Positive or 0</P></TD><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">counter</SPAN> &lt;= <SPAN CLASS="p">end</SPAN></P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Negative</P></TD><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">counter</SPAN> &gt;= <SPAN CLASS="p">end</SPAN></P></TD></TR></TBODY></TABLE>
<BR></P>After all statements in the loop have executed, <SPAN CLASS="p">step</SPAN> is added to <SPAN CLASS="p">counter</SPAN>. At this point, either the statements in the loop execute again (based on the same test that caused the loop to execute initially), or the loop is exited and execution continues with the statement following the <SPAN CLASS="lee">Next</SPAN> statement.</P>
<SPAN CLASS="nh">Tip</SPAN>&nbsp;&nbsp;&nbsp;Changing the value of <SPAN CLASS="p">counter</SPAN> while inside a loop can make it more difficult to read and debug your code.</P>
Any number of <SPAN CLASS="lee">Exit For</SPAN> statements may be placed anywhere in the loop as an alternate way to exit. <SPAN CLASS="lee">Exit For </SPAN>is often used after evaluating of some condition, for example <SPAN CLASS="lee">If...Then</SPAN>, and transfers control to the statement immediately following <SPAN CLASS="lee">Next</SPAN>.</P>
You can nest <SPAN CLASS="lee">For...Next</SPAN> loops by placing one <SPAN CLASS="lee">For...Next</SPAN> loop within another. Give each loop a unique variable name as its <SPAN CLASS="p">counter</SPAN>. The following construction is correct:</P>

<pre><code>For I = 1 To 10
    For J = 1 To 10
        For K = 1 To 10
            <SPAN CLASS="cte">...</SPAN>
        Next K
    Next J
Next I</code></pre>
<SPAN CLASS="nh">Note</SPAN>&nbsp;&nbsp;&nbsp;If you omit <SPAN CLASS="p">counter</SPAN> in a <SPAN CLASS="lee">Next</SPAN> statement, execution continues as if <SPAN CLASS="p">counter</SPAN> is included. If a <SPAN CLASS="lee">Next</SPAN> statement is encountered before its corresponding <SPAN CLASS="lee">For</SPAN> statement, an error occurs.</P>
See Also</P>
<B>Do...</B><SPAN CLASS="eln">Loop</SPAN> statement, <SPAN CLASS="eln">Exit</SPAN> statement, <B>For Each...</B><SPAN CLASS="eln">Next</SPAN> statement, <B>While...</B><SPAN CLASS="eln">Wend</SPAN> statement.</P>
Example</P>
This example uses the <SPAN CLASS="lee">For...Next</SPAN> statement to create a string that contains 10 instances of the numbers 0 through 9, each string separated from the other by a single space. The outer loop uses a loop counter variable that is decremented each time through the loop.</P>

<pre><code>Dim Words, Chars, MyString
For Words = 10 To 1 Step -1             ' Set up 10 repetitions.
    For Chars = 0 To 9                        ' Set up 10 repetitions.
        MyString = MyString &amp; Chars        ' Append number to string.
    Next Chars                                ' Increment counter
    MyString = MyString &amp; " "            ' Append a space.
Next Words</code></pre>
Example (Microsoft Excel)</P>
This example displays the number of columns in the selection on Sheet1. The code also tests for a multiple-area selection; if one exists, the code loops on the areas of the selection.</P>

<pre><code>Worksheets("Sheet1").Activate
areaCount = Selection.Areas.Count
If areaCount &lt;= 1 Then
    MsgBox "The selection contains " &amp; _
        Selection.Columns.Count &amp; " columns."
Else
    For i = 1 To areaCount
        MsgBox "Area " &amp; i &amp; " of the selection contains " &amp; _
            Selection.Areas(i).Columns.Count &amp; " columns."
    Next i
End If</code></pre>
This example creates a new worksheet and then inserts a list of the active workbook's sheet names into the first column of the worksheet.</P>

<pre><code>Set newSheet = Sheets.Add(Type:=xlWorksheet)
For i = 1 To Sheets.Count
    newSheet.Cells(i, 1).Value = Sheets(i).Name
Next i</code></pre>
This example selects every other item in list box one on Sheet1.</P>

<pre><code>Dim items() As Boolean
Set lbox = Worksheets("Sheet1").ListBoxes(1)
ReDim items(1 To lbox.ListCount)
For i = 1 To lbox.ListCount
    If i Mod 2 = 1 Then
        items(i) = True
    Else
        items(i) = False
    End If
Next
lbox.MultiSelect = xlExtended
lbox.Selected = items</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
