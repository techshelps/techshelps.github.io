<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IsObject Function</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>IsObject Function</H2>Description</P>
Returns a <SPAN CLASS="lee">Boolean</SPAN> value indicating whether an <SPAN CLASS="pop">identifier</SPAN> represents an object <SPAN CLASS="pop">variable</SPAN>.</P>
Syntax</P>
<SPAN CLASS="lee">IsObject(</SPAN><SPAN CLASS="p">identifier</SPAN><SPAN CLASS="lee">)</SPAN></P>
The required <SPAN CLASS="p">identifier </SPAN><SPAN CLASS="pop">argument</SPAN> is a variable name.</P>
Remarks</P>
<SPAN CLASS="lee">IsObject</SPAN> is useful only in determining whether a <SPAN CLASS="lee">Variant</SPAN> is of <SPAN CLASS="lee">VarType</SPAN> <SPAN CLASS="lee">vbObject</SPAN>. This could occur if the <SPAN CLASS="lee">Variant</SPAN> actually references (or once referenced) an object, or if it contains <SPAN CLASS="eln">Nothing</SPAN><SPAN CLASS="eln">.</SPAN></P>
<SPAN CLASS="lee">IsObject</SPAN> returns <SPAN CLASS="lee">True</SPAN> if <SPAN CLASS="p">identifier</SPAN> is a variable declared with <SPAN CLASS="lee">Object</SPAN> type or any valid <SPAN CLASS="pop">class</SPAN> type, or if <SPAN CLASS="p">identifier</SPAN> is a <SPAN CLASS="lee">Variant</SPAN> of <SPAN CLASS="lee">VarType</SPAN> <SPAN CLASS="lee">vbObject</SPAN>, or a user-defined object; otherwise, it returns <SPAN CLASS="lee">False</SPAN>. <SPAN CLASS="eln">IsObject</SPAN> returns <SPAN CLASS="lee">True</SPAN> even if the variable has been set to <SPAN CLASS="eln">Nothing</SPAN>.</P>
Use error trapping to be sure that an object reference is valid. You can use the <SPAN CLASS="eln">IsNothing</SPAN> function determine if an object reference has been set to <SPAN CLASS="eln">Nothing</SPAN>.</P>
See Also</P>
<SPAN CLASS="eln">IsArray</SPAN> function, <SPAN CLASS="eln">IsDate</SPAN> function, <SPAN CLASS="eln">IsEmpty</SPAN> function, <SPAN CLASS="eln">IsError</SPAN> function, <SPAN CLASS="eln">IsMissing</SPAN> function, <SPAN CLASS="eln">IsNull</SPAN> function, <SPAN CLASS="eln">IsNumeric</SPAN> function, <SPAN CLASS="eln">Object</SPAN> data type, <SPAN CLASS="eln">Set</SPAN> statement, <SPAN CLASS="eln">TypeName</SPAN> function, <SPAN CLASS="eln">Variant</SPAN> data type, <SPAN CLASS="eln">VarType</SPAN> function.</P>
Example</P>
This example uses the <SPAN CLASS="lee">IsObject</SPAN> function to determine if an identifier represents an object variable. <SPAN CLASS="cte">MyObject</SPAN> and <SPAN CLASS="cte">YourObject</SPAN> are object variables of the same type. They are generic names used for illustration purposes only.</P>

<pre><code>Dim MyInt As Integer, YourObject, MyCheck    ' Declare variables.
Dim MyObject As Object
Set YourObject = MyObject                ' Assign an object reference.
MyCheck = IsObject(YourObject)        ' Returns True.
MyCheck = IsObject(MyInt)                ' Returns False.</code></pre>
Example (Microsoft Access)</P>
The following example uses the <SPAN CLASS="eln">IsObject</SPAN> function to check whether an argument passed to the function is an object.</P>

<pre><code>Sub CheckObject(varAny As Variant)
    Dim varX as Variant

    If IsObject(varAny) Then
        Set varX = varAny
    Else
        varX = varAny
    End If
End Sub</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
