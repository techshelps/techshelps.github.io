<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TypeName Function</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<HR CLASS="rr">
<H1>TypeName Function</H1>Description</P>
Returns a <SPAN CLASS="lee">String</SPAN> that provides information about a <SPAN CLASS="pop">variable</SPAN>.</P>
Syntax</P>
<SPAN CLASS="lee">TypeName(</SPAN><SPAN CLASS="p">varname</SPAN><SPAN CLASS="lee">)</SPAN></P>
The required <SPAN CLASS="p">varname</SPAN> <SPAN CLASS="pop">argument</SPAN> is a <SPAN CLASS="lee">Variant</SPAN> containing any variable except a variable of a <SPAN CLASS="pop">user-defined type</SPAN>.</P>
Remarks</P>
The string returned by <SPAN CLASS="lee">TypeName</SPAN> can be any one of the following:</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="104pt" VALIGN="TOP"><COL WIDTH="255pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">String returned</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Variable</P></TD></TR><TR><TD COLSPAN="3" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="pop">object type</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">An object whose type is <SPAN CLASS="p">objecttype</SPAN></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">Byte</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Byte value</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">Integer</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Integer</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">Long</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Long integer</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">Single</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Single-precision floating-point number</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">Double</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Double-precision floating-point number</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">Currency</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Currency value</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">Decimal</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Decimal value</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">Date</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Date value</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">String</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">String</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">Boolean</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Boolean value</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">Error</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">An error value</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">Empty</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Uninitialized</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">Null</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">No valid data</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">Object</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">An object</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="pop">Unknown</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">An object whose type is unknown</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">Nothing</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Object variable that doesn't refer to an object</P></TD></TR></TBODY></TABLE>
<BR></P>If <SPAN CLASS="p">varname</SPAN> is an <SPAN CLASS="pop">array</SPAN>, the returned string can be any one of the possible returned strings (or <SPAN CLASS="lee">Variant</SPAN>) with empty parentheses appended. For example, if <SPAN CLASS="p">varname</SPAN> is an array of integers, <SPAN CLASS="lee">TypeName</SPAN> returns "<SPAN CLASS="cte">Integer()</SPAN>".</P>
See Also</P>
Data type summary, <SPAN CLASS="eln">IsArray</SPAN> function, <SPAN CLASS="eln">IsDate</SPAN> function, <SPAN CLASS="eln">IsEmpty</SPAN> function, <SPAN CLASS="eln">IsError</SPAN> function, <SPAN CLASS="eln">IsMissing</SPAN> function, <SPAN CLASS="eln">IsNull</SPAN> function, <SPAN CLASS="eln">IsNumeric</SPAN> function, <SPAN CLASS="eln">IsObject</SPAN> function, <SPAN CLASS="eln">Variant</SPAN> data type, <SPAN CLASS="eln">VarType</SPAN> function.</P>
Example</P>
This example uses the <SPAN CLASS="lee">TypeName</SPAN> function to return information about a variable.</P>

<pre><code>' Declare variables.
Dim NullVar, MyType, StrVar As String, IntVar As Integer, CurVar As Currency
Dim ArrayVar (1 To 5) As Integer
NullVar = Null                                ' Assign Null value.
MyType = TypeName(StrVar)                ' Returns "String".
MyType = TypeName(IntVar)                ' Returns "Integer".
MyType = TypeName(CurVar)                ' Returns "Currency".
MyType = TypeName(NullVar)                ' Returns "Null".
MyType = TypeName(ArrayVar)                ' Returns "Integer()".</code></pre>
Example (Microsoft Access)</P>
The following example creates several object variables and passes them to the <SPAN CLASS="eln">TypeName</SPAN> function.</P>

<pre><code>Sub ObjectTypes()
    Dim dbs As Database, tdf As TableDef
    Dim fld As Field

    ' Get current database.
    Set dbs = CurrentDb
    ' Return TableDef object pointing to Orders table.
    Set tdf = dbs.TableDefs("Orders")
    ' Return Field object pointing to OrderDate field.
    Set fld = tdf.Fields("OrderDate")
    ' Print value returned by TypeName for each object.
    Debug.Print TypeName(dbs)
    Debug.Print TypeName(tdf)
    Debug.Print TypeName(fld)
End Sub</code></pre>
Example (Microsoft Excel)</P>
This example displays the Visual&nbsp;Basic object type of the selection. You can run this example with cells selected, with a single oval selected, or with several different graphic objects selected.</P>

<pre><code>Worksheets("Sheet1").Activate
MsgBox "The selection object type is " &amp; TypeName(Selection)</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
