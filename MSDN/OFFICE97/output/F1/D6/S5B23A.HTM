<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GoSub...Return Statement</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>GoSub...Return Statement</H2>Description</P>
Branches to and returns from a subroutine within a <SPAN CLASS="pop">procedure</SPAN>.</P>
Syntax</P>
<SPAN CLASS="lee">GoSub</SPAN> <SPAN CLASS="p">line</SPAN><BR><SPAN CLASS="cte">...</SPAN><BR><SPAN CLASS="p">line</SPAN><BR><SPAN CLASS="cte">...</SPAN></P>
<SPAN CLASS="lee">Return</SPAN></P>
The <SPAN CLASS="p">line</SPAN> <SPAN CLASS="pop">argument</SPAN> can be any <SPAN CLASS="pop">line label</SPAN> or <SPAN CLASS="pop">line number</SPAN>.</P>
Remarks</P>
You can use <SPAN CLASS="lee">GoSub</SPAN> and <SPAN CLASS="lee">Return</SPAN> anywhere in a procedure, but <SPAN CLASS="lee">GoSub</SPAN> and the corresponding <SPAN CLASS="lee">Return</SPAN> statement must be in the same procedure. A subroutine can contain more than one <SPAN CLASS="lee">Return</SPAN> statement, but the first <SPAN CLASS="lee">Return</SPAN> statement encountered causes the flow of execution to branch back to the <SPAN CLASS="pop">statement</SPAN> immediately following the most recently executed <SPAN CLASS="lee">GoSub</SPAN> statement.</P>
<SPAN CLASS="nh">Note</SPAN>&nbsp;&nbsp;&nbsp;You can't<SPAN CLASS="lee"> </SPAN>enter or exit <SPAN CLASS="lee">Sub</SPAN> procedures with <SPAN CLASS="lee">GoSub...Return</SPAN>.</P>
<SPAN CLASS="nh">Tip</SPAN>&nbsp;&nbsp;&nbsp;Creating separate procedures that you can call may provide a more structured alternative to using <SPAN CLASS="lee">GoSub...Return</SPAN>.</P>
See Also</P>
<SPAN CLASS="eln">GoTo</SPAN> statement, <B>On...GoSub</B>, <B>On...</B><SPAN CLASS="eln">GoTo</SPAN> statements, <SPAN CLASS="eln">Sub</SPAN> statement.</P>
Example </P>
This example uses <SPAN CLASS="lee">GoSub</SPAN> to call a subroutine within a <SPAN CLASS="lee">Sub</SPAN> procedure. The <SPAN CLASS="lee">Return</SPAN> statement causes the execution to resume at the statement immediately following the <SPAN CLASS="lee">GoSub</SPAN> statement. The <SPAN CLASS="lee">Exit Sub</SPAN> statement is used to prevent control from accidentally flowing into the subroutine.</P>

<pre><code>Sub GosubDemo()
Dim Num
    ' Solicit a number from the user.
    Num = InputBox("Enter a positive number to be divided by 2.")
    ' Only use routine if user enters a positive number.
    If Num &gt; 0 Then GoSub MyRoutine
    Debug.Print Num
    Exit Sub                                ' Use Exit to prevent an error.
MyRoutine:
    Num = Num/2                            ' Perform the division.
    Return                                ' Return control to statement.
End Sub                                    ' following the GoSub statement.</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
