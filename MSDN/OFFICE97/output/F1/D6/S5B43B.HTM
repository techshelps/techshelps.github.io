<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TextColumn Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>TextColumn Property</H1>Applies To</P>
<SPAN CLASS="eln">ComboBox</SPAN> control, <SPAN CLASS="eln">ListBox</SPAN> control.</P>
Description</P>
Identifies the column in a <SPAN CLASS="lee">ComboBox</SPAN> or <SPAN CLASS="lee">ListBox</SPAN> to display to the user.</P>
Syntax</P>
<SPAN CLASS="p">object</SPAN><SPAN CLASS="l">.</SPAN><SPAN CLASS="lee">TextColumn</SPAN> [= <SPAN CLASS="p">Variant</SPAN>]</P>
The <SPAN CLASS="lee">TextColumn</SPAN> property syntax has these parts:</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="63pt" VALIGN="TOP"><COL WIDTH="296pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD COLSPAN="3" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">object</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Required. A valid object.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">Variant</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. The column to be displayed.</P></TD></TR></TBODY></TABLE>
<BR></P>Settings</P>
Values for the <SPAN CLASS="lee">TextColumn</SPAN> property range from <SPAN CLASS="p">–1</SPAN> to the number of columns in the list. The <SPAN CLASS="lee">TextColumn</SPAN> value for the first column is <SPAN CLASS="p">1</SPAN>, the value of the second column is <SPAN CLASS="p">2</SPAN>, and so on. Setting <SPAN CLASS="lee">TextColumn</SPAN> to <SPAN CLASS="p">0</SPAN> displays the <SPAN CLASS="lee">ListIndex</SPAN> values. Setting <SPAN CLASS="lee">TextColumn</SPAN> to <SPAN CLASS="p">–1</SPAN> displays the first column that has a <SPAN CLASS="lee">ColumnWidths</SPAN> value greater than <SPAN CLASS="p">0</SPAN>.</P>
Remarks</P>
When the user selects a row from a <SPAN CLASS="lee">ComboBox</SPAN> or <SPAN CLASS="lee">ListBox</SPAN>, the column referenced by <SPAN CLASS="lee">TextColumn</SPAN> is stored in the <SPAN CLASS="lee">Text</SPAN> property. For example, you could set up a multicolumn <SPAN CLASS="lee">ListBox</SPAN> that contains the names of holidays in one column and dates for the holidays in a second column. To present the holiday names to users, specify the first column as the <SPAN CLASS="lee">TextColumn</SPAN>. To store the dates of the holidays, specify the second column as the <SPAN CLASS="lee">BoundColumn</SPAN>.</P>
When the <SPAN CLASS="lee">Text</SPAN> property of a <SPAN CLASS="lee">ComboBox</SPAN> changes (such as when a user types an entry into the control), the new text is compared to the column of data specified by <SPAN CLASS="lee">TextColumn</SPAN>.</P>
See Also</P>
<SPAN CLASS="eln">BoundColumn</SPAN> property, <SPAN CLASS="eln">ColumnWidths</SPAN> property, <SPAN CLASS="eln">ListIndex</SPAN> property, <SPAN CLASS="eln">Text</SPAN> property.</P>
Example</P>
The following example uses the <SPAN CLASS="lee">TextColumn</SPAN> property to identify the column of data in a <SPAN CLASS="lee">ListBox</SPAN> that supplies data for its <SPAN CLASS="lee">Text</SPAN> property. This example sets the third column of the <SPAN CLASS="lee">ListBox</SPAN> as the text column. As you select an entry from the <SPAN CLASS="lee">ListBox</SPAN>, the value from the <SPAN CLASS="lee">TextColumn</SPAN> will be displayed in the <SPAN CLASS="lee">Label</SPAN>.</P>
This example also demonstrates how to load a multicolumn <SPAN CLASS="lee">ListBox</SPAN> using the <SPAN CLASS="lee">AddItem</SPAN> method and the <SPAN CLASS="lee">List</SPAN> property.</P>
To use this example, copy this sample code to the Declarations portion of a form. Make sure that the form contains:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">A <SPAN CLASS="lee">ListBox</SPAN> named ListBox1.</LI><LI CLASS="ULI1">A <SPAN CLASS="lee">TextBox</SPAN> named TextBox1.



<pre><code>Private Sub UserForm_Initialize()
ListBox1.ColumnCount = 3

ListBox1.AddItem "Row 1, Col 1"
ListBox1.List(0, 1) = "Row 1, Col 2" 
ListBox1.List(0, 2) = "Row 1, Col 3"

ListBox1.AddItem "Row 2, Col 1"
ListBox1.List(1, 1) = "Row 2, Col 2"
ListBox1.List(1, 2) = "Row 2, Col 3"

ListBox1.AddItem "Row 3, Col 1"
ListBox1.List(2, 1) = "Row 3, Col 2"
ListBox1.List(2, 2) = "Row 3, Col 3"

ListBox1.TextColumn = 3
End Sub

Private Sub ListBox1_Change()
TextBox1.Text = ListBox1.Text
End Sub</code></pre>
</LI></UL></SPAN><HR CLASS="rr"></FONT></BODY>
</HTML>
