<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Dir Function</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>Dir Function</H2>Description</P>
Returns a <SPAN CLASS="lee">String </SPAN>representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.</P>
Syntax</P>
<SPAN CLASS="lee">Dir</SPAN>[<SPAN CLASS="lee">(</SPAN><SPAN CLASS="p">pathname</SPAN>[<B>,</B><SPAN CLASS="p"> attributes</SPAN>]<SPAN CLASS="lee">)</SPAN>]</P>
The <SPAN CLASS="lee">Dir</SPAN> function syntax has these parts</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="66pt" VALIGN="TOP"><COL WIDTH="293pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD COLSPAN="3" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">pathname</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. <SPAN CLASS="pop">String expression</SPAN> that specifies a file name — may include directory or folder, and drive. A zero-length string (" ") is returned if <SPAN CLASS="p">pathname</SPAN> is not found.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">attributes</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. <SPAN CLASS="pop">Constant</SPAN> or <SPAN CLASS="pop">numeric expression</SPAN>, whose sum specifies file attributes. If omitted, all files are returned that match <SPAN CLASS="p">pathname</SPAN>. </P></TD></TR></TBODY></TABLE>
<BR></P>Settings</P>
The <SPAN CLASS="p">attributes</SPAN> <SPAN CLASS="pop">argument</SPAN> settings are</P>

<TABLE COLS="6" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="65pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"><COL WIDTH="49pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"><COL WIDTH="243pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Constant</P></TD><TD COLSPAN="3" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Value</P></TD><TD COLSPAN="3" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD COLSPAN="6" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">  </P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">vbNormal</SPAN></P></TD><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">0</P></TD><TD COLSPAN="3" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Normal.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">vbHidden</SPAN></P></TD><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">2</P></TD><TD COLSPAN="3" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Hidden.</P></TD></TR></TBODY></TABLE>
<BR></P><I>(continue)</I></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="65pt" VALIGN="TOP"><COL WIDTH="50pt" VALIGN="TOP"><COL WIDTH="244pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">vbSystem</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">4</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">System file.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">vbVolume</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">8</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Volume label; if specified, all other attributes are ignored.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">vbDirectory</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">16</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Directory or folder.</P></TD></TR></TBODY></TABLE>
<BR></P><SPAN CLASS="nh">Note</SPAN>&nbsp;&nbsp;&nbsp;These constants are specified by Visual Basic for Applications and can be used anywhere in your code in place of the actual values.</P>
Remarks</P>
<SPAN CLASS="lee">Dir</SPAN> supports the use of multiple-character (<SPAN CLASS="lee">*</SPAN><SPAN CLASS="l">) </SPAN>and single-character (<SPAN CLASS="lee">?</SPAN><SPAN CLASS="l">) </SPAN>wildcards to specify multiple files.</P>
You must specify <SPAN CLASS="p">pathname</SPAN> the first time you call the <SPAN CLASS="lee">Dir</SPAN> function, or an error occurs. If you also specify file attributes, <SPAN CLASS="p">pathname</SPAN> must be included.</P>
<SPAN CLASS="lee">Dir</SPAN> returns the first file name that matches <SPAN CLASS="p">pathname</SPAN>. To get any additional file names that match <SPAN CLASS="p">pathname</SPAN>, call <SPAN CLASS="lee">Dir</SPAN> again with no arguments. When no more file names match, <SPAN CLASS="lee">Dir</SPAN> returns a zero-length string (" "). Once a zero-length string is returned, you must specify <SPAN CLASS="p">pathname</SPAN> in subsequent calls or an error occurs. You can change to a new <SPAN CLASS="p">pathname</SPAN> without retrieving all of the file names that match the current <SPAN CLASS="p">pathname</SPAN>. However, you can't call the <SPAN CLASS="lee">Dir</SPAN> function recursively. Calling <SPAN CLASS="lee">Dir</SPAN> with the <SPAN CLASS="lee">vbDirectory</SPAN> attribute does not continually return subdirectories.</P>
<SPAN CLASS="nh">Tip</SPAN>&nbsp;&nbsp;&nbsp;Because file names are retrieved in no particular order, you may want to store returned file names in an <SPAN CLASS="pop">array</SPAN> and then sort the array.</P>
See Also</P>
<SPAN CLASS="eln">ChDir</SPAN> statement, <SPAN CLASS="eln">CurDir</SPAN> function, <SPAN CLASS="eln">MacID</SPAN> function.</P>
Specifics (Macintosh)</P>
In Microsoft Windows, <SPAN CLASS="lee">Dir</SPAN> supports the use of multiple character (<SPAN CLASS="eln">*</SPAN>) and single character (<SPAN CLASS="eln">?</SPAN>) wildcards to specify multiple files. On the Macintosh, these characters are treated as valid file name characters and can't be used as wildcards to specify multiple files.</P>
Since the Macintosh doesn't support the wildcards, use the file type to identify groups of files. You can use the <SPAN CLASS="lee">MacID</SPAN> function to specify file type instead of using the file names. For example, the following statement returns the name of the first TEXT file in the current folder:</P>

<pre><code>Dir("SomePath", MacID("TEXT"))</code></pre>
To iterate over all files in a folder, specify an empty string: </P>

<pre><code>Dir("")</code></pre>
If you use the <SPAN CLASS="lee">MacID</SPAN> function with <SPAN CLASS="lee">Dir</SPAN> in Microsoft Windows, an error occurs.</P>
Any <I>attribute</I> value greater than 256 is considered a <SPAN CLASS="lee">MacID</SPAN> value. </P>
The following <SPAN CLASS="pop">constants</SPAN> aren't available on the Macintosh</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="64pt" VALIGN="TOP"><COL WIDTH="40pt" VALIGN="TOP"><COL WIDTH="256pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Constant</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Value</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD COLSPAN="3" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">vbSystem</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">4</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">System file</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">vbVolume</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">8</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Volume label</P></TD></TR></TBODY></TABLE>
<BR></P>The following constant is available only on the Macintosh</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="64pt" VALIGN="TOP"><COL WIDTH="40pt" VALIGN="TOP"><COL WIDTH="256pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Constant</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Value</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD COLSPAN="3" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">vbAlias</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">64</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Specified file name is an alias.</P></TD></TR></TBODY></TABLE>
<BR></P>Example</P>
This example uses the <SPAN CLASS="lee">Dir</SPAN> function to check if certain files and directories exist. The <SPAN CLASS="lee">MacID</SPAN> function may be used on the Macintosh to specify the file type.</P>

<pre><code>Dim MyFile, MyPath, MyName
' In Microsoft Windows:
' Returns "WIN.INI" if it exists.
MyFile = Dir("C:\WINDOWS\WIN.INI")    

' Returns filename with specified extension. If more than one *.ini
' file exists, the first file found is returned.
MyFile = Dir("C:\WINDOWS\*.INI")

' Call Dir again without arguments to return the next *.INI file in the 
' same directory.
MyFile = Dir

' Return first *.TXT file with a set hidden attribute.
MyFile = Dir("*.TXT", vbHidden)

' Display the names in C:\ that represent directories.
MyPath = "c:\"                            ' Set the path.
MyName = Dir(MyPath, vbDirectory)    ' Retrieve the first entry.
Do While MyName &lt;&gt; ""                    ' Start the loop.
    ' Ignore the current directory and the encompassing directory.
    If MyName &lt;&gt; "." And MyName &lt;&gt; ".." Then
        ' Use bitwise comparison to make sure MyName is a directory.
        If (GetAttr(MyPath &amp; MyName) And vbDirectory) = vbDirectory Then
            Debug.Print MyName            ' Display entry only if it
        End If                            ' it represents a directory.
    End If
    MyName = Dir                            ' Get next entry.
Loop

' On the Macintosh:
' Use the MacID function to specify file type.
' The following statement returns the first "TEXT" file found in the 
' specified directory or folder.
MyFile = Dir("HD:MY FOLDER:", MacID("TEXT"))</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
