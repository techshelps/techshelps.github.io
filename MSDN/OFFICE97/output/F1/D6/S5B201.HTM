<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CVErr Function</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>CVErr Function</H2>Description</P>
Returns a <SPAN CLASS="lee">Variant</SPAN> of subtype <SPAN CLASS="lee">Error</SPAN> containing an <SPAN CLASS="pop">error number</SPAN> specified by the user.</P>
Syntax</P>
<SPAN CLASS="lee">CVErr(</SPAN><SPAN CLASS="p">errornumber</SPAN><SPAN CLASS="lee">)</SPAN></P>
The required <SPAN CLASS="p">errornumber</SPAN> <SPAN CLASS="pop">argument</SPAN> is any valid error number.</P>
Remarks</P>
Use the <SPAN CLASS="lee">CVErr</SPAN> function to create user-defined errors in user-created <SPAN CLASS="pop">procedures</SPAN>. For example, if you create a function that accepts several arguments and normally returns a string, you can have your function evaluate the input arguments to ensure they are within acceptable range. If they are not, it is likely your function will not return what you expect. In this event, <SPAN CLASS="lee">CVErr</SPAN> allows you to return an error number that tells you what action to take.</P>
Note that implicit conversion of an <SPAN CLASS="lee">Error</SPAN> is not allowed. For example, you can't directly assign the return value of <SPAN CLASS="lee">CVErr</SPAN> to a <SPAN CLASS="pop">variable</SPAN> that is not a <SPAN CLASS="lee">Variant</SPAN>. However, you can perform an explicit conversion (using <SPAN CLASS="lee">CInt</SPAN>, <SPAN CLASS="lee">CDbl</SPAN>, and so on) of the value returned by <SPAN CLASS="lee">CVErr</SPAN> and assign that to a variable of the appropriate <SPAN CLASS="pop">data type</SPAN>.</P>
See Also</P>
Data type summary, <SPAN CLASS="eln">IsError</SPAN> function.</P>
Example </P>
This example uses the <SPAN CLASS="lee">CVErr</SPAN> function to return a <SPAN CLASS="lee">Variant </SPAN>whose <SPAN CLASS="lee">VarType </SPAN>is <SPAN CLASS="lee">vbError</SPAN> (10). The user-defined function <SPAN CLASS="cte">CalculateDouble</SPAN> returns an error if the argument passed to it isn't a number. You can use <SPAN CLASS="lee">CVErr</SPAN> to return user-defined errors from user-defined procedures or to defer handling of a run-time error. Use the <SPAN CLASS="lee">IsError</SPAN> function to test if the value represents an error.</P>

<pre><code>' Call CalculateDouble with an error-producing argument.
Sub Test()
    Debug.Print CalculateDouble("345.45robert")
End Sub
' Define CalculateDouble Function procedure.
Function CalculateDouble(Number)
    If IsNumeric(Number) Then
        CalculateDouble = Number * 2    ' Return result.
    Else
        CalculateDouble = CVErr(2001)    ' Return a user-defined error 
    End If    ' number.
End Function</code></pre>
Example (Microsoft Excel)</P>
This example inserts the seven cell error values into cells A1:A7 on Sheet1.</P>

<pre><code>myArray = Array(xlErrDiv0, xlErrNA, xlErrName, xlErrNull, _
    xlErrNum, xlErrRef, xlErrValue)
For i = 1 To 7
    Worksheets("Sheet1").Cells(i, 1).Value = CVErr(myArray(i - 1))
Next i</code></pre>
This example displays a message if the active cell on Sheet1 contains a cell error value. You can use this example as a framework for a cell-error-value error handler.</P>

<pre><code>Worksheets("Sheet1").Activate
If IsError(ActiveCell.Value) Then
    errval = ActiveCell.Value
    Select Case errval
        Case CVErr(xlErrDiv0)
            MsgBox "#DIV/0! error"
        Case CVErr(xlErrNA)
            MsgBox "#N/A error"
        Case CVErr(xlErrName)
            MsgBox "#NAME? error"
        Case CVErr(xlErrNull)
            MsgBox "#NULL! error"
        Case CVErr(xlErrNum)
            MsgBox "#NUM! error"
        Case CVErr(xlErrRef)
            MsgBox "#REF! error"
        Case CVErr(xlErrValue)
            MsgBox "#VALUE! error"
        Case Else
            MsgBox "This should never happen!!"
    End Select
End If</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
