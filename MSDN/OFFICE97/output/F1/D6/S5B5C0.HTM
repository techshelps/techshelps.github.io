<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Range Object</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Range Object</H1>Description</P>
Represents a cell, a row, a column, or a selection of cells that contains one or more contiguous blocks of cells.</P>
Using the Range Object</P>
The following properties for returning a <SPAN CLASS="lee">Range</SPAN> object are described in this section:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1"><SPAN CLASS="lee">Range</SPAN> property</LI><LI CLASS="ULI1"><SPAN CLASS="lee">Cells</SPAN> property
</LI></UL></SPAN>Range Property</P>
Use <SPAN CLASS="lee">Range</SPAN>(<SPAN CLASS="p">arg</SPAN>), where <SPAN CLASS="p">arg</SPAN> is the name of the range, to return a <SPAN CLASS="lee">Range</SPAN> object that represents a single cell or a range of cells. The following example places the value of cell A1 in cell A5.</P>

<pre><code>myChart.Application.DataSheet.Range("A5").Value = _
    myChart.Application.DataSheet.Range("A1").Value</code></pre>
The following example fills the range A1:H8 with the value 20.</P>

<pre><code>myChart.Application.DataSheet.Range("A1:H8").Value = 20</code></pre>
Cells Property</P>
Use <SPAN CLASS="lee">Cells</SPAN>(<SPAN CLASS="p">row</SPAN>, <SPAN CLASS="p">column</SPAN>), where <SPAN CLASS="p">row</SPAN> is the row's index number and <SPAN CLASS="p">column</SPAN> is the column's index number, to return a single cell. The following example sets the value of cell A1 to 24 (column A is the second column on the datasheet, and row 1 is the second row on the datasheet).</P>

<pre><code>myChart.Application.DataSheet.Cells(2, 2).Value = 24</code></pre>
Although you can also use <SPAN CLASS="cte">Range("A1")</SPAN> to return cell A1, there may be times when the <SPAN CLASS="lee">Cells</SPAN> property is more convenient because you can use a variable for the row or column. The following example creates column and row headings on the datasheet.</P>

<pre><code>Sub SetUpTable()
With myChart.Application.DataSheet
    For theYear = 1 To 5
        .Cells(1, theYear + 1).Value = 1990 + theYear
    Next theYear
    For theQuarter = 1 To 4
        .Cells(theQuarter + 1, 1).Value = "Q" &amp; theQuarter
    Next theQuarter
End With
End Sub</code></pre>
Although you can use Visual&nbsp;Basic string functions to alter A1-style references, it's much easier (and much better programming practice) to use the <SPAN CLASS="cte">Cells(1, 1)</SPAN> notation.</P>
Use <SPAN CLASS="p">expression</SPAN>.<SPAN CLASS="lee">Cells</SPAN>(<SPAN CLASS="p">row</SPAN>, <SPAN CLASS="p">column</SPAN>), where <SPAN CLASS="p">expression</SPAN> is an expression that returns a <SPAN CLASS="lee">Range</SPAN> object, and <SPAN CLASS="p">row</SPAN> and <SPAN CLASS="p">column</SPAN> are relative to the upper-left corner of the range, to return part of a range. The following example sets the value for cell C5.</P>

<pre><code>myChart.Application.Range("C5:C10").Cells(1, 1).Value = 35</code></pre>
Properties</P>
<SPAN CLASS="eln">Application</SPAN> property, <SPAN CLASS="eln">Cells</SPAN> property, <SPAN CLASS="eln">Columns</SPAN> property, <SPAN CLASS="eln">ColumnWidth</SPAN> property, <SPAN CLASS="eln">Creator</SPAN> property, <SPAN CLASS="eln">Include</SPAN> property, <SPAN CLASS="eln">Item</SPAN> property, <SPAN CLASS="eln">NumberFormat</SPAN> property, <SPAN CLASS="eln">Parent</SPAN> property, <SPAN CLASS="eln">Rows</SPAN> property, <SPAN CLASS="eln">Value</SPAN> property.</P>
Methods</P>
<SPAN CLASS="eln">AutoFit</SPAN> method, <SPAN CLASS="eln">Clear</SPAN> method, <SPAN CLASS="eln">ClearContents</SPAN> method, <SPAN CLASS="eln">ClearFormats</SPAN> method, <SPAN CLASS="eln">Copy</SPAN> method, <SPAN CLASS="eln">Cut</SPAN> method, <SPAN CLASS="eln">Delete</SPAN> method, <SPAN CLASS="eln">Insert</SPAN> method, <SPAN CLASS="eln">Paste</SPAN> method.</P>
<HR CLASS="rr"></FONT></BODY>
</HTML>
