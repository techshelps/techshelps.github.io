<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Clear Method</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>Clear Method</H2>Applies To</P>
<SPAN CLASS="eln">Err</SPAN> object.</P>
Description</P>
Clears all <SPAN CLASS="pop">property</SPAN> settings of the <SPAN CLASS="lee">Err</SPAN> object. </P>
Syntax</P>
<SPAN CLASS="p">object</SPAN><SPAN CLASS="lee">.Clear</SPAN></P>
The <SPAN CLASS="p">object</SPAN> is always the <SPAN CLASS="lee">Err</SPAN> object.</P>
Remarks</P>
Use <SPAN CLASS="lee">Clear</SPAN> to explicitly clear the <SPAN CLASS="lee">Err</SPAN> object after an error has been handled, for example, when you use deferred error handling with <SPAN CLASS="lee">On Error Resume Next</SPAN>. The <SPAN CLASS="lee">Clear </SPAN>method is called automatically whenever any of the following <SPAN CLASS="pop">statements</SPAN> is executed:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">Any type of <SPAN CLASS="lee">Resume</SPAN> statement.</LI><LI CLASS="ULI1"><SPAN CLASS="lee">Exit Sub</SPAN>, <SPAN CLASS="lee">Exit Function</SPAN>, <SPAN CLASS="lee">Exit Property</SPAN>.</LI><LI CLASS="ULI1">Any <SPAN CLASS="lee">On Error </SPAN>statement.
</LI></UL></SPAN><SPAN CLASS="nh">Note</SPAN>&nbsp;&nbsp;&nbsp;The <SPAN CLASS="lee">On Error Resume Next</SPAN> construct may be preferable to <SPAN CLASS="lee">On Error GoTo</SPAN> when handling errors generated during access to other objects. Checking <SPAN CLASS="lee">Err</SPAN> after each interaction with an object removes ambiguity about which object was accessed by the code. You can be sure which object placed the error code in <SPAN CLASS="lee">Err.Number</SPAN>, as well as which object originally generated the error (the object specified in <SPAN CLASS="lee">Err.Source</SPAN>).</P>
See Also</P>
<SPAN CLASS="eln">Description</SPAN> property, <SPAN CLASS="eln">Err</SPAN> object, <SPAN CLASS="eln">HelpContext</SPAN> property, <SPAN CLASS="eln">HelpContextID</SPAN> property ("Extensibility Object Model Language Reference"), <SPAN CLASS="eln">HelpFile</SPAN> property, <SPAN CLASS="eln">LastDLLError</SPAN> property, <SPAN CLASS="eln">Number</SPAN> property, <B>On </B><SPAN CLASS="eln">Error</SPAN> statement, <SPAN CLASS="eln">Raise</SPAN> method, <SPAN CLASS="eln">Source</SPAN> property.</P>
Example </P>
This example uses the <SPAN CLASS="lee">Err </SPAN>objects <SPAN CLASS="lee">Clear </SPAN>method to reset the numeric properties of the <SPAN CLASS="lee">Err</SPAN> object to zero and its string properties to zero-length strings. If <SPAN CLASS="lee">Clear</SPAN> were omitted from the following code, the error message dialog box would be displayed on every iteration of the loop (after an error occurs) whether or not a successive calculation generated an error. You can single-step through the code to see the effect.</P>

<pre><code>Dim Result(10) As Integer            ' Declare array whose elements 
                                            ' will overflow easily.
Dim indx
On Error Resume Next                    ' Defer error trapping.
Do Until indx = 10
    ' Generate an occasional error or store result if no error.
    Result(indx) = Rnd * indx * 20000
    If Err.Number &lt;&gt; 0 Then
        MsgBox Err, , "Error Generated: ", Err.HelpFile, Err.HelpContext
        Err.Clear                        ' Clear Err object properties.
    End If
    indx = indx + 1
Loop</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
