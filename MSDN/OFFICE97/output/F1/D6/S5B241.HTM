<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>If...Then...Else Statement</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>If...Then...Else Statement</H2>Description</P>
Conditionally executes a group of <SPAN CLASS="pop">statements</SPAN>, depending on the value of an <SPAN CLASS="pop">expression</SPAN>.</P>
Syntax</P>
<SPAN CLASS="lee">If</SPAN> <SPAN CLASS="p">condition</SPAN> <SPAN CLASS="lee">Then</SPAN> [<SPAN CLASS="p">statements</SPAN>] [<SPAN CLASS="lee">Else</SPAN> <SPAN CLASS="p">elsestatements</SPAN>]</P>
Or, you can use the block form syntax:</P>
<SPAN CLASS="lee">If</SPAN> <SPAN CLASS="p">condition</SPAN> <SPAN CLASS="lee">Then</SPAN><BR>[<SPAN CLASS="p">statements</SPAN>]</P>
[<SPAN CLASS="lee">ElseIf</SPAN> <SPAN CLASS="p">condition-n</SPAN> <SPAN CLASS="lee">Then</SPAN><BR>[<SPAN CLASS="p">elseifstatements</SPAN>] <SPAN CLASS="cte">...</SPAN></P>
[<SPAN CLASS="lee">Else</SPAN><BR>[<SPAN CLASS="p">elsestatements</SPAN>]]</P>
<SPAN CLASS="lee">End If</SPAN></P>
The <SPAN CLASS="lee">If…Then…Else</SPAN> statement syntax has these parts</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="81pt" VALIGN="TOP"><COL WIDTH="278pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD COLSPAN="3" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">condition</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Required. One or more of the following two types of expressions:</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">A <SPAN CLASS="pop">numeric expression</SPAN> or <SPAN CLASS="pop">string expression</SPAN> that evaluates to <SPAN CLASS="lee">True</SPAN> or <SPAN CLASS="lee">False</SPAN>. If <SPAN CLASS="p">condition</SPAN> is <SPAN CLASS="lee">Null</SPAN>, <SPAN CLASS="p">condition</SPAN> is treated as <SPAN CLASS="lee">False</SPAN>.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">An expression of the form <SPAN CLASS="lee">TypeOf</SPAN> <SPAN CLASS="p">objectname</SPAN> <SPAN CLASS="lee">Is</SPAN> <SPAN CLASS="p">objecttype</SPAN>. The <SPAN CLASS="p">objectname</SPAN> is any object reference and <SPAN CLASS="p">objecttype</SPAN> is any valid object type. The expression is <SPAN CLASS="lee">True</SPAN> if <SPAN CLASS="p">objectname</SPAN> is of the <SPAN CLASS="pop">object type</SPAN> specified by <SPAN CLASS="p">objecttype</SPAN>; otherwise it is <SPAN CLASS="lee">False</SPAN>.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">statements</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional in block form; required in single-line form that has no <SPAN CLASS="lee">Else </SPAN>clause. One or more statements separated by colons; executed if <SPAN CLASS="p">condition</SPAN> is <SPAN CLASS="lee">True</SPAN>.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">condition-n</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. Same as <SPAN CLASS="p">condition</SPAN>.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">elseifstatements</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. One or more statements executed if associated <SPAN CLASS="p">condition-n</SPAN> is <SPAN CLASS="lee">True</SPAN>.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">elsestatements</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. One or more statements executed if no previous <SPAN CLASS="p">condition</SPAN> or <SPAN CLASS="p">condition-n</SPAN> expression is <SPAN CLASS="lee">True</SPAN>.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
You can use the single-line form (first syntax) for short, simple tests. However, the block form (second syntax) provides more structure and flexibility than the single-line form and is usually easier to read, maintain, and debug.</P>
<SPAN CLASS="nh">Note</SPAN>&nbsp;&nbsp;&nbsp;With the single-line form, it is possible to have multiple statements executed as the result of an <SPAN CLASS="lee">If...Then</SPAN> decision. All statements must be on the same line and separated by colons, as in the following statement:</P>

<pre><code>If A &gt; 10 Then A = A + 1 : B = B + A : C = C + B</code></pre>
A block form <SPAN CLASS="lee">If</SPAN> statement must be the first statement on a line. The <SPAN CLASS="lee">Else</SPAN>, <SPAN CLASS="lee">ElseIf</SPAN>, and <SPAN CLASS="lee">End If</SPAN> parts of the statement can have only a <SPAN CLASS="pop">line number</SPAN> or <SPAN CLASS="pop">line label</SPAN> preceding them. The block <SPAN CLASS="lee">If</SPAN> must end with an <SPAN CLASS="lee">End If</SPAN> statement.</P>
To determine whether or not a statement is a block <SPAN CLASS="lee">If</SPAN><SPAN CLASS="l">,</SPAN> examine what follows the <SPAN CLASS="lee">Then</SPAN> <SPAN CLASS="pop">keyword</SPAN>. If anything other than a <SPAN CLASS="pop">comment</SPAN> appears after <SPAN CLASS="lee">Then</SPAN> on the same line, the statement is treated as a single-line <SPAN CLASS="lee">If</SPAN> statement.</P>
The <SPAN CLASS="lee">Else</SPAN> and <SPAN CLASS="lee">ElseIf</SPAN> clauses are both optional. You can have as many <SPAN CLASS="lee">ElseIf</SPAN> clauses as you want in a block <SPAN CLASS="lee">If</SPAN>, but none can appear after an <SPAN CLASS="lee">Else</SPAN> clause. Block <SPAN CLASS="lee">If</SPAN> statements can be nested; that is, contained within one another.</P>
When executing a block <SPAN CLASS="lee">If</SPAN> (second syntax), <SPAN CLASS="p">condition</SPAN> is tested. If <SPAN CLASS="p">condition</SPAN> is <SPAN CLASS="lee">True</SPAN>, the statements following <SPAN CLASS="lee">Then</SPAN> are executed. If <SPAN CLASS="p">condition</SPAN> is <SPAN CLASS="lee">False</SPAN>, each <SPAN CLASS="lee">ElseIf</SPAN> condition (if any) is evaluated in turn. When a <SPAN CLASS="lee">True</SPAN> condition is found, the statements immediately following the associated <SPAN CLASS="lee">Then</SPAN> are executed. If none of the <SPAN CLASS="lee">ElseIf</SPAN> conditions are <SPAN CLASS="lee">True</SPAN> (or if there are no <SPAN CLASS="lee">ElseIf</SPAN> clauses), the statements following <SPAN CLASS="lee">Else</SPAN> are executed. After executing the statements following <SPAN CLASS="lee">Then</SPAN> or <SPAN CLASS="lee">Else</SPAN>, execution continues with the statement following <SPAN CLASS="lee">End If</SPAN>.</P>
<SPAN CLASS="nh">Tip</SPAN>&nbsp;&nbsp;&nbsp;<SPAN CLASS="lee">Select Case</SPAN> may be more useful when evaluating a single expression that has several possible actions. However, the <SPAN CLASS="lee">TypeOf</SPAN> <SPAN CLASS="p">objectname</SPAN> <SPAN CLASS="lee">Is</SPAN> <SPAN CLASS="p">objecttype</SPAN> clause can't be used with the <SPAN CLASS="lee">Select Case</SPAN> statement.</P>
See Also</P>
<B>#If...Then...#</B><SPAN CLASS="eln">Else</SPAN> directive, <SPAN CLASS="eln">Choose</SPAN> function, <B>Select</B> <SPAN CLASS="eln">Case</SPAN> statement, <SPAN CLASS="eln">Switch</SPAN> function.</P>
Example</P>
This example shows both the block and single-line forms of the <SPAN CLASS="lee">If...Then...Else </SPAN>statement. It also illustrates the use of <SPAN CLASS="lee">If TypeOf...Then...Else</SPAN>.</P>

<pre><code>Dim Number, Digits, MyString
Number = 53                                ' Initialize variable.
If Number &lt; 10 Then
    Digits = 1
ElseIf Number &lt; 100 Then
' Condition evaluates to True so the next statement is executed.
    Digits = 2
Else
    Digits = 3
End If</code></pre>

<pre><code>' Assign a value using the single-line form of syntax.
If Digits = 1 Then MyString = "One" Else MyString = "More than one" </code></pre>
Use <SPAN CLASS="lee">If TypeOf</SPAN> construct to determine whether the Control passed into a procedure is a text box.</P>

<pre><code>Sub ControlProcessor(MyControl As Control)
    If TypeOf MyControl Is CommandButton Then
        Debug.Print "You passed in a " &amp; TypeName(MyControl)
    ElseIf TypeOf MyControl Is CheckBox Then
        Debug.Print "You passed in a " &amp; TypeName(MyControl)
    ElseIf TypeOf MyControl Is TextBox Then
        Debug.Print "You passed in a " &amp; TypeName(MyControl)
    End If
End Sub</code></pre>
Example (Microsoft Excel)</P>
This example loops on cells A1:D10 on Sheet1. If one of the cells has a value less than 0.001, the code replaces the value with 0 (zero).</P>

<pre><code>For Each c in Worksheets("Sheet1").Range("A1:D10")
    If c.Value &lt; .001 Then
        c.Value = 0
    End If
Next c</code></pre>
This example loops on the range named "TestRange" and then displays the number of empty cells in the range.</P>

<pre><code>numBlanks = 0
For Each c In Range("TestRange")
    If c.Value = "" Then
        numBlanks = numBlanks + 1
    End If
Next c
MsgBox "There are " &amp; numBlanks &amp; " empty cells in this range."</code></pre>
This example sets the standard font to Geneva (on the Macintosh) or Arial (in Windows).</P>

<pre><code>If Application.OperatingSystem Like "*Macintosh*" Then
    Application.StandardFont = "Geneva"
Else
    Application.StandardFont = "Arial"
End If</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
