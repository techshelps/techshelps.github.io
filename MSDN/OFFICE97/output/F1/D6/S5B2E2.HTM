<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Add Method (CommandBarControls Collection)</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Add Method (CommandBarControls Collection)</H1>Applies To</P>
<SPAN CLASS="eln">CommandBarControls</SPAN> collection object.</P>
Description</P>
Creates a new <SPAN CLASS="pop">command bar control</SPAN> and adds it to the collection of controls on the specified <SPAN CLASS="pop">command bar.</SPAN> Returns a <SPAN CLASS="lee">CommandBarButton</SPAN>, <SPAN CLASS="lee">CommandBarComboBox</SPAN>, or <SPAN CLASS="lee">CommandBarPopup</SPAN> object.</P>
Syntax</P>
<SPAN CLASS="p">expression</SPAN><SPAN CLASS="l">.</SPAN><SPAN CLASS="lee">Add</SPAN><SPAN CLASS="l">(</SPAN><SPAN CLASS="narg">Type,</SPAN> <SPAN CLASS="narg">Id,</SPAN> <SPAN CLASS="narg">Parameter,</SPAN> <SPAN CLASS="narg">Before,</SPAN> <SPAN CLASS="narg">Temporary</SPAN><SPAN CLASS="l">)</SPAN></P>
<SPAN CLASS="p">expression</SPAN>   Required. An expression that returns a <SPAN CLASS="lee">CommandBarControls</SPAN> object.</P>
<SPAN CLASS="narg">Type</SPAN>   Optional <SPAN CLASS="lee">Variant</SPAN>. The type of control to be added to the specified command bar. Can be one of the following <SPAN CLASS="lee">MsoControlType</SPAN> constants: <SPAN CLASS="lee">msoControlButton</SPAN>, <SPAN CLASS="lee">msoControlEdit</SPAN>, <SPAN CLASS="lee">msoControlDropdown</SPAN>, <SPAN CLASS="lee">msoControlComboBox</SPAN>, or <SPAN CLASS="lee">msoControlPopup</SPAN>.</P>
<SPAN CLASS="narg">Id</SPAN>   Optional <SPAN CLASS="lee">Variant</SPAN>. An integer that specifies a built-in control. If the value of this argument is 1, or if this argument is omitted, a blank custom control of the specified type will be added to the command bar.</P>
<SPAN CLASS="narg">Parameter</SPAN>   Optional <SPAN CLASS="lee">Variant</SPAN>. For built-in controls, this argument is used by the container application to run the command. For custom controls, you can use this argument to send information to Visual&nbsp;Basic procedures, or you can use it to store information about the control (similar to a second <SPAN CLASS="lee">Tag</SPAN> property value).</P>
<SPAN CLASS="narg">Before</SPAN>   Optional <SPAN CLASS="lee">Variant</SPAN>. A number that indicates the position of the new control on the command bar. The new control will be inserted before the control at this position. If this argument is omitted, the control is added at the end of the specified command bar.</P>
<SPAN CLASS="narg">Temporary</SPAN>   Optional <SPAN CLASS="lee">Variant</SPAN>. <SPAN CLASS="lee">True</SPAN> to make the new control temporary. Temporary controls are automatically deleted when the container application is closed. The default value is <SPAN CLASS="lee">False</SPAN>.</P>
See Also</P>
<SPAN CLASS="eln">CustomizationContext</SPAN> property.</P>
Specifics (Microsoft Access)</P>
You can set the <SPAN CLASS="p">Id</SPAN> argument of this method to an Integer value that corresponds to a built-in <SPAN CLASS="pop">command button</SPAN> or <SPAN CLASS="pop">menu</SPAN> item. This will cause the new control to have the appearance and functionality of the existing command button or menu item.</P>
However, if you set the <SPAN CLASS="p">Id</SPAN> argument to the <SPAN CLASS="eln">Integer</SPAN> value of a Microsoft Office command button or menu item that has been modified by Microsoft Access (for example, Microsoft Access uses a different label, different shortcut text, or uses text instead of an icon), you won't see the Microsoft Access modifications to the command button or menu item. If you want to make sure a control you're adding to a <SPAN CLASS="pop">command bar</SPAN> looks and functions exactly like the Microsoft Access version of the control, use the <SPAN CLASS="eln">Copy</SPAN> method to copy the control to the command bar.</P>
Example</P>
This example adds a button control with a charting face to the command bar named "Custom," and then it assigns the control the procedure named "Analyze."</P>

<pre><code>Set custBar = CommandBars("Custom")
custBar.Visible = True
Set graphBtn = custBar.Controls.Add(Type:=msoControlButton)
graphBtn.FaceId = 17
graphBtn.OnAction = "Analyze"</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
