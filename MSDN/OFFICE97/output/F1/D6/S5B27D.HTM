<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Open Statement</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Open Statement</H1>Description</P>
Enables input/output (I/O) to a file.</P>
Syntax</P>
<SPAN CLASS="lee">Open</SPAN> <SPAN CLASS="p">pathname</SPAN> <SPAN CLASS="lee">For</SPAN> <SPAN CLASS="p">mode</SPAN> [<SPAN CLASS="lee">Access </SPAN><SPAN CLASS="p">access</SPAN>] [<SPAN CLASS="p">lock</SPAN>] <SPAN CLASS="lee">As</SPAN> [<SPAN CLASS="lee">#</SPAN>]<SPAN CLASS="p">filenumber</SPAN> [<SPAN CLASS="lee">Len</SPAN>=<SPAN CLASS="p">reclength</SPAN>]</P>
The <SPAN CLASS="lee">Open</SPAN> statement syntax has these parts:</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="63pt" VALIGN="TOP"><COL WIDTH="296pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD COLSPAN="3" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">pathname</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Required. String expression that specifies a file name — may include directory or folder, and drive.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">mode</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Required. <SPAN CLASS="pop">Keyword</SPAN> specifying the file mode: <SPAN CLASS="lee">Append</SPAN>, <SPAN CLASS="lee">Binary</SPAN>, <SPAN CLASS="lee">Input</SPAN>, <SPAN CLASS="lee">Output</SPAN>, or <SPAN CLASS="lee">Random</SPAN>. If unspecified, the file is opened for <SPAN CLASS="lee">Random</SPAN> access.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">access</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. Keyword specifying the operations permitted on the open file: <SPAN CLASS="lee">Read</SPAN>, <SPAN CLASS="lee">Write</SPAN>, or <SPAN CLASS="lee">Read Write</SPAN>.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">lock</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. Keyword specifying the operations permitted on the open file by other processes: <SPAN CLASS="lee">Shared</SPAN>, <SPAN CLASS="lee">Lock Read</SPAN>, <SPAN CLASS="lee">Lock Write</SPAN>, and <SPAN CLASS="lee">Lock Read Write</SPAN>.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">filenumber</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Required. A valid <SPAN CLASS="pop">file number</SPAN> in the range 1 to 511, inclusive. Use the <SPAN CLASS="lee">FreeFile</SPAN> function to obtain the next available file number.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">reclength</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. Number less than or equal to 32,767 (bytes). For files opened for random access, this value is the record length. For sequential files, this value is the number of characters buffered.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
You must open a file before any I/O operation can be performed on it. <SPAN CLASS="lee">Open</SPAN> allocates a buffer for I/O to the file and determines the mode of access to use with the buffer.</P>
If the file specified by <SPAN CLASS="p">pathname</SPAN> doesn't exist, it is created when a file is opened for <SPAN CLASS="lee">Append</SPAN>, <SPAN CLASS="lee">Binary</SPAN>, <SPAN CLASS="lee">Output</SPAN>, or <SPAN CLASS="lee">Random</SPAN> modes.</P>
If the file is already opened by another process and the specified type of access is not allowed, the <SPAN CLASS="lee">Open</SPAN> operation fails and an error occurs.</P>
The <SPAN CLASS="lee">Len</SPAN> clause is ignored if <SPAN CLASS="p">mode</SPAN> is <SPAN CLASS="lee">Binary</SPAN>.</P>
<SPAN CLASS="ih">Important</SPAN>&nbsp;&nbsp;&nbsp;In <SPAN CLASS="lee">Binary</SPAN>, <SPAN CLASS="lee">Input</SPAN>, and <SPAN CLASS="lee">Random</SPAN> modes, you can open a file using a different file number without first closing the file. In <SPAN CLASS="lee">Append</SPAN> and <SPAN CLASS="lee">Output</SPAN> modes, you must close a file before opening it with a different file number.</P>
See Also</P>
<SPAN CLASS="eln">Close</SPAN> statement, <SPAN CLASS="eln">FreeFile</SPAN> function.</P>
Example</P>
This example illustrates various uses of the <SPAN CLASS="lee">Open</SPAN> statement to enable input and output to a file.</P>
The following code opens the file <SPAN CLASS="cte">TESTFILE</SPAN> in sequential-input mode.</P>

<pre><code>Open "TESTFILE" For Input As #1
' Close before reopening in another mode.
Close #1</code></pre>
This example opens the file in Binary mode for writing operations only.</P>

<pre><code>Open "TESTFILE" For Binary Access Write As #1
' Close before reopening in another mode.
Close #1</code></pre>
The following example opens the file in Random mode. The file contains records of the user-defined type <SPAN CLASS="cte">Record</SPAN>.</P>

<pre><code>Type Record                                ' Define user-defined type.
    ID As Integer
    Name As String * 20
End Type</code></pre>

<pre><code>Dim MyRecord As Record                ' Declare variable.
Open "TESTFILE" For Random As #1 Len = Len(MyRecord)
' Close before reopening in another mode.
Close #1</code></pre>
This code example opens the file for sequential output; any process can read or write to file.</P>

<pre><code>Open "TESTFILE" For Output Shared As #1
' Close before reopening in another mode.
Close #1</code></pre>
This code example opens the file in Binary mode for reading; other processes can't read file.</P>

<pre><code>Open "TESTFILE" For Binary Access Read Lock Read As #1</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
