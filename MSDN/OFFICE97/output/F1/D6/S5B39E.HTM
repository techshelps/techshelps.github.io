<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BoundColumn Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>BoundColumn Property</H1>Applies To</P>
<SPAN CLASS="crkt">ComboBox</SPAN> control, <SPAN CLASS="crkt">ListBox</SPAN> control.</P>
Description</P>
Identifies the source of data in a multicolumn <SPAN CLASS="lee">ComboBox</SPAN> or <SPAN CLASS="lee">ListBox</SPAN>.</P>
Syntax</P>
<SPAN CLASS="p">object</SPAN>.<SPAN CLASS="lee">BoundColumn</SPAN> [= <SPAN CLASS="p">Variant</SPAN>]</P>
The <SPAN CLASS="lee">BoundColumn</SPAN> property syntax has these parts:</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="73pt" VALIGN="TOP"><COL WIDTH="286pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD COLSPAN="3" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">object</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Required. A valid object.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">Variant</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. Indicates how the <SPAN CLASS="lee">BoundColumn</SPAN> value is selected.</P></TD></TR></TBODY></TABLE>
<BR></P>Settings</P>
The settings for <SPAN CLASS="p">Variant</SPAN> are:</P>

<TABLE COLS="4" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="72pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"><COL WIDTH="287pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Value</P></TD><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD COLSPAN="4" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">0</P></TD><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Assigns the value of the <SPAN CLASS="lee">ListIndex</SPAN> property to the control.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">1 or greater</P></TD><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Assigns the value from the specified column to the control. Columns are numbered from 1 when using this property (default).</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
When the user chooses a row in a multicolumn <SPAN CLASS="lee">ListBox</SPAN> or <SPAN CLASS="lee">ComboBox</SPAN>, the <SPAN CLASS="lee">BoundColumn</SPAN> property identifies which item from that row to store as the value of the control. For example, if each row contains 8 items and <SPAN CLASS="lee">BoundColumn</SPAN> is 3, the system stores the information in the third column of the currently-selected row as the value of the object.</P>
You can display one set of data to users but store different, associated values for the object by using the <SPAN CLASS="lee">BoundColumn</SPAN> and the <SPAN CLASS="lee">TextColumn</SPAN> properties. <SPAN CLASS="lee">TextColumn</SPAN> identifies the column of data displayed in a <SPAN CLASS="lee">ComboBox</SPAN> or <SPAN CLASS="lee">ListBox</SPAN>; <SPAN CLASS="lee">BoundColumn</SPAN> identifies the column of associated data values stored for the control. For example, you could set up a multicolumn <SPAN CLASS="lee">ListBox</SPAN> that contains the names of holidays in one column and dates for the holidays in a second column. To present the holiday names to users, specify the first column as the <SPAN CLASS="lee">TextColumn</SPAN>. To store the dates of the holidays, specify the second column as the <SPAN CLASS="lee">BoundColumn</SPAN>.</P>
If the control is <SPAN CLASS="pop">bound</SPAN> to a <SPAN CLASS="pop">data source</SPAN>, the value in the column specified by <SPAN CLASS="lee">BoundColumn</SPAN> is stored in the data source named in the <SPAN CLASS="lee">ControlSource</SPAN> property.</P>
The <SPAN CLASS="lee">ListIndex</SPAN> value retrieves the number of the selected row. For example, if you want to know the row of the selected item, set <SPAN CLASS="lee">BoundColumn</SPAN> to 0 to assign the number of the selected row as the value of the control. Be sure to retrieve a current value, rather than relying on a previously saved value, if you are referencing a list whose contents might change.</P>
The <SPAN CLASS="lee">Column</SPAN><SPAN CLASS="lee">,</SPAN> <SPAN CLASS="lee">List</SPAN>, and <SPAN CLASS="lee">ListIndex</SPAN> properties all use zero-based numbering. That is, the value of the first item (column or row) is zero; the value of the second item is one, and so on. This means that if <SPAN CLASS="lee">BoundColumn</SPAN> is set to 3, you could access the value stored in that column using the expression Column(2).</P>
See Also</P>
<SPAN CLASS="eln">ControlSource</SPAN> property, <SPAN CLASS="eln">ListIndex</SPAN> property, <SPAN CLASS="eln">TextColumn</SPAN> property, <SPAN CLASS="eln">Value</SPAN> property.</P>
Example</P>
The following example demonstrates how the <SPAN CLASS="lee">BoundColumn</SPAN> property influences the value of a <SPAN CLASS="lee">ListBox</SPAN>. The user can choose to set the value of the <SPAN CLASS="lee">ListBox</SPAN> to the index value of the specified row, or to a specified column of data in the <SPAN CLASS="lee">ListBox</SPAN>.</P>
To use this example, copy this sample code to the Declarations portion of a form. Make sure that the form contains:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">A <SPAN CLASS="lee">ListBox</SPAN> named ListBox1.</LI><LI CLASS="ULI1">A <SPAN CLASS="lee">Label</SPAN> named Label1.</LI><LI CLASS="ULI1">Three <SPAN CLASS="lee">OptionButton</SPAN> controls named OptionButton1, OptionButton2, and OptionButton3.



<pre><code>Private Sub UserForm_Initialize()
    ListBox1.ColumnCount = 2

    ListBox1.AddItem "Item 1, Column 1"
    ListBox1.List(0, 1) = "Item 1, Column 2"
    ListBox1.AddItem "Item 2, Column 1"
    ListBox1.List(1, 1) = "Item 2, Column 2"
    
    ListBox1.Value = "Item 1, Column 1"
    
    OptionButton1.Caption = "List Index"
    OptionButton2.Caption = "Column 1"
    OptionButton3.Caption = "Column 2"
    OptionButton2.Value = True
End Sub

Private Sub OptionButton1_Click()
    ListBox1.BoundColumn = 0
    Label1.Caption = ListBox1.Value
End Sub

Private Sub OptionButton2_Click()
    ListBox1.BoundColumn = 1
    Label1.Caption = ListBox1.Value
End Sub

Private Sub OptionButton3_Click()
    ListBox1.BoundColumn = 2
    Label1.Caption = ListBox1.Value
End Sub

Private Sub ListBox1_Click()
    Label1.Caption = ListBox1.Value
End Sub</code></pre>
</LI></UL></SPAN><HR CLASS="rr"></FONT></BODY>
</HTML>
