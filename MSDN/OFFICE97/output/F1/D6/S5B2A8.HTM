<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Set Statement</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Set Statement</H1>Description</P>
Assigns an object reference to a <SPAN CLASS="pop">variable</SPAN> or <SPAN CLASS="pop">property</SPAN>.</P>
Syntax</P>
<SPAN CLASS="lee">Set</SPAN> <SPAN CLASS="p">objectvar</SPAN> <SPAN CLASS="lee">=</SPAN> {[<SPAN CLASS="lee">New</SPAN>] <SPAN CLASS="p">objectexpression</SPAN> | <SPAN CLASS="lee">Nothing</SPAN>}</P>
The <SPAN CLASS="lee">Set</SPAN> statement syntax has these parts:</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="97pt" VALIGN="TOP"><COL WIDTH="262pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD COLSPAN="3" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">objectvar</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Required. Name of the variable or property; follows standard variable naming conventions.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">New</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. <SPAN CLASS="lee">New</SPAN> is usually used during declaration to enable implicit object creation. When <SPAN CLASS="lee">New</SPAN> is used with <SPAN CLASS="lee">Set</SPAN>, it creates a new instance of the <SPAN CLASS="pop">class</SPAN>. If <SPAN CLASS="p">objectvar </SPAN>contained a reference to an object, that reference is released when the new one is assigned. The <SPAN CLASS="lee">New</SPAN> <SPAN CLASS="pop">keyword</SPAN> can't be used to create new instances of any intrinsic <SPAN CLASS="pop">data type</SPAN> and can't be used to create dependent objects.</P></TD></TR></TBODY></TABLE>
<BR></P><I>(continued)</I></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="97pt" VALIGN="TOP"><COL WIDTH="262pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">objectexpression</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Required. <SPAN CLASS="pop">Expression</SPAN> consisting of the name of an object, another declared variable of the same <SPAN CLASS="pop">object type</SPAN>, or a function or <SPAN CLASS="pop">method</SPAN> that returns an object of the same object type.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">Nothing</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. Discontinues association of <SPAN CLASS="p">objectvar</SPAN> with any specific object. Assigning <SPAN CLASS="lee">Nothing</SPAN> to <SPAN CLASS="p">objectvar</SPAN> releases all the system and memory resources associated with the previously referenced object when no other variable refers to it.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
To be valid, <SPAN CLASS="p">objectvar</SPAN> must be an object type consistent with the object being assigned to it.</P>
The <SPAN CLASS="lee">Dim</SPAN>, <SPAN CLASS="lee">Private</SPAN>, <SPAN CLASS="lee">Public</SPAN>, <SPAN CLASS="lee">ReDim</SPAN>, and <SPAN CLASS="lee">Static</SPAN> statements only declare a variable that refers to an object. No actual object is referred to until you use the <SPAN CLASS="lee">Set</SPAN> statement to assign a specific object.</P>
The following example illustrates how <SPAN CLASS="lee">Dim</SPAN> is used to declare an <SPAN CLASS="pop">array</SPAN> with the type <SPAN CLASS="cte">Form1</SPAN>. No instance of <SPAN CLASS="cte">Form1</SPAN> actually exists. <SPAN CLASS="lee">Set</SPAN> then assigns references to new instances of <SPAN CLASS="cte">Form1</SPAN> to the <SPAN CLASS="cte">myChildForms</SPAN> variable. Such code might be used to create child forms in an MDI application.</P>

<pre><code>Dim myChildForms(1 to 4) As Form1
Set myChildForms(1) = New Form1
Set myChildForms(2) = New Form1
Set myChildForms(3) = New Form1
Set myChildForms(4) = New Form1</code></pre>
Generally, when you use <SPAN CLASS="lee">Set</SPAN> to assign an object reference to a variable, no copy of the object is created for that variable. Instead, a reference to the object is created. More than one <SPAN CLASS="pop">object variable</SPAN> can refer to the same object. Because such variables are references to the object rather than copies of the object, any change in the object is reflected in all variables that refer to it. However, when you use the <SPAN CLASS="lee">New</SPAN> keyword in the <SPAN CLASS="lee">Set</SPAN> statement, you are actually creating an instance of the object.</P>
See Also</P>
<SPAN CLASS="eln">Dim</SPAN> statement, <SPAN CLASS="eln">Let</SPAN> statement, <SPAN CLASS="eln">Private</SPAN> statement, <SPAN CLASS="eln">Public</SPAN> statement, <SPAN CLASS="eln">ReDim</SPAN> statement, <SPAN CLASS="eln">Static</SPAN> statement.</P>
Example</P>
This example uses the <SPAN CLASS="lee">Set</SPAN> statement to assign object references to variables. <SPAN CLASS="cte">YourObject</SPAN> is assumed to be a valid object with a <SPAN CLASS="lee">Text</SPAN> property.</P>

<pre><code>Dim YourObject, MyObject, MyStr
Set MyObject = YourObject            ' Assign object reference.
' MyObject and YourObject refer to the same object.
YourObject.Text = "Hello World"    ' Initialize property.
MyStr = MyObject.Text                    ' Returns "Hello World".

' Discontinue association. MyObject no longer refers to YourObject.
Set MyObject = Nothing                ' Release the object.</code></pre>
Example (Microsoft Excel)</P>
This example adds a new worksheet to the active workbook and then sets the name of the worksheet.</P>

<pre><code>Set newSheet = Worksheets.Add
newSheet.Name = "1995 Budget"</code></pre>
This example creates a new worksheet and then inserts into it a list of all the names in the active workbook, including their formulas in A1-style notation in the language of the user.</P>

<pre><code>Set newSheet = ActiveWorkbook.Worksheets.Add
i = 1
For Each nm In ActiveWorkbook.Names
    newSheet.Cells(i, 1).Value = nm.NameLocal
    newSheet.Cells(i, 2).Value = "'" &amp; nm.RefersToLocal
    i = i + 1
Next</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
