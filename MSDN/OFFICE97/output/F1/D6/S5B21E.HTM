<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Err Object</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>Err Object</H2>Description</P>
Contains information about <SPAN CLASS="pop">run-time errors</SPAN>.</P>
Remarks</P>
The <SPAN CLASS="pop">properties</SPAN> of the <SPAN CLASS="lee">Err</SPAN> object are set by the generator of an error Visual Basic, an object, or the Visual Basic programmer.</P>
The default property of the <SPAN CLASS="lee">Err </SPAN>object is <SPAN CLASS="lee">Number</SPAN>. Because the default property can be represented by the object name <SPAN CLASS="lee">Err</SPAN>, earlier code written using the <B>Err </B>function or <B>Err</B> statement doesn't have to be modified.</P>
When a <SPAN CLASS="pop">run-time error</SPAN> occurs, the properties of the <SPAN CLASS="lee">Err</SPAN> object are filled with information that uniquely identifies the error and information that can be used to handle it. To generate a run-time error in your code, use the <SPAN CLASS="lee">Raise </SPAN>method.</P>
The <SPAN CLASS="lee">Err</SPAN> object's properties are reset to zero or zero-length strings ("&nbsp;") after any form of the <SPAN CLASS="lee">Resume</SPAN> or <SPAN CLASS="lee">On Error</SPAN> statement and after an <SPAN CLASS="lee">Exit Sub</SPAN>, <SPAN CLASS="lee">Exit Function</SPAN>, or <SPAN CLASS="lee">Exit Property</SPAN> statement within an error-handling routine. The <SPAN CLASS="lee">Clear</SPAN> method can be used to explicitly reset <SPAN CLASS="lee">Err</SPAN>.</P>
Use the <SPAN CLASS="lee">Raise</SPAN> method, rather than the <SPAN CLASS="lee">Error</SPAN> statement, to generate run-time errors for a class module. Using the <SPAN CLASS="lee">Raise</SPAN> method in other code depends on the richness of the information you want to return. In code that uses <SPAN CLASS="lee">Error</SPAN> statements instead of the <SPAN CLASS="lee">Raise</SPAN> method to generate errors, the properties of the <SPAN CLASS="lee">Err </SPAN>object are assigned the following default values when <SPAN CLASS="lee">Error</SPAN> is executed</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="82pt" VALIGN="TOP"><COL WIDTH="277pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Property</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Value</P></TD></TR><TR><TD COLSPAN="3" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">Number</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Value specified as <SPAN CLASS="pop">argument</SPAN> to <SPAN CLASS="lee">Error</SPAN> statement. Can be any valid <SPAN CLASS="pop">error number</SPAN>.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">Source</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Name of the current Visual Basic <SPAN CLASS="pop">project</SPAN>.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">Description</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">A string corresponding to the return of the <SPAN CLASS="lee">Error </SPAN>function for the specified <SPAN CLASS="lee">Number</SPAN>, if this string exists. If the string doesn't exist, <SPAN CLASS="lee">Description</SPAN> contains "Application-defined or object-defined error".</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">HelpFile</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The fully qualified drive, path, and file name of the Visual Basic Help file.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">HelpContext</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The Visual Basic Help file context ID for the error corresponding to the <SPAN CLASS="lee">Number</SPAN> property.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">LastDLLError</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">On 32-bit Microsoft Windows operating systems only, contains the system error code for the last call to a <SPAN CLASS="pop">dynamic-link library</SPAN> (DLL). The <SPAN CLASS="lee">LastDLLError</SPAN> property is read-only.</P></TD></TR></TBODY></TABLE>
<BR></P>You don't have to change existing code that uses the <SPAN CLASS="lee">Err</SPAN> object and the <SPAN CLASS="lee">Error </SPAN>statement. However, using both the <SPAN CLASS="lee">Err</SPAN> object and the <SPAN CLASS="lee">Error</SPAN> statement can result in unintended consequences. For example, even if you fill in properties for the <SPAN CLASS="lee">Err</SPAN> object, they are reset to the default values indicated in the preceding table as soon as the <SPAN CLASS="lee">Error</SPAN> statement is executed. Although you can still use the <SPAN CLASS="lee">Error</SPAN> statement to generate Visual Basic run-time errors, it is retained principally for compatibility with existing code. Use the <SPAN CLASS="lee">Err </SPAN>object, the <SPAN CLASS="lee">Raise</SPAN> method, and the <SPAN CLASS="lee">Clear</SPAN> method for system errors and in new code, especially for class modules.</P>
The <SPAN CLASS="lee">Err </SPAN>object is an intrinsic object with global <SPAN CLASS="pop">scope</SPAN>. There is no need to create an instance of it in your code.</P>
Properties</P>
<SPAN CLASS="eln">Description</SPAN> property, <SPAN CLASS="eln">HelpContext</SPAN> property, <SPAN CLASS="eln">HelpContextID</SPAN> property, <SPAN CLASS="eln">HelpFile</SPAN> property, <SPAN CLASS="eln">LastDLLError</SPAN> property, <SPAN CLASS="eln">Number</SPAN> property, <SPAN CLASS="eln">Source</SPAN> property.</P>
Methods</P>
<SPAN CLASS="eln">Clear</SPAN> method, <SPAN CLASS="eln">Raise</SPAN> method.</P>
See Also</P>
<SPAN CLASS="eln">Error</SPAN> function, <SPAN CLASS="eln">Error</SPAN> object ("DAO Language Reference" in Volume 1), <SPAN CLASS="eln">Error</SPAN> statement, <B>On</B> <SPAN CLASS="eln">Error</SPAN> statement, <SPAN CLASS="eln">Resume</SPAN> statement.</P>
Example</P>
This example uses the properties of the <SPAN CLASS="lee">Err</SPAN> object in constructing an error-message dialog box. Note that if you use the <SPAN CLASS="lee">Clear</SPAN> method first, when you generate a Visual Basic error with the <SPAN CLASS="lee">Raise</SPAN> method, Visual Basic's default values become the properties of the <SPAN CLASS="lee">Err</SPAN> object. </P>

<pre><code>Dim Msg
' If an error occurs, construct an error message
On Error Resume Next                    ' Defer error handling.
Err.Clear
Err.Raise 6                                ' Generate an "Overflow" error.
' Check for error, then show message.
If Err.Number &lt;&gt; 0 Then
    Msg = "Error # " &amp; Str(Err.Number) &amp; " was generated by " _
        &amp; Err.Source &amp; Chr(13) &amp; Err.Description
    MsgBox Msg, , "Error", Err.Helpfile, Err.HelpContext
End If</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
