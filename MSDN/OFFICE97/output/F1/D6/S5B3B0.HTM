<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Controls Collection</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Controls Collection</H1>Applies To</P>
<SPAN CLASS="crkt">Frame</SPAN> control, <SPAN CLASS="crkt">MultiPage</SPAN> control, <SPAN CLASS="lee">Page</SPAN> object.</P>
Description</P>
Includes all the controls contained in an object.</P>
Remarks</P>
Each control in the <SPAN CLASS="lee">Controls</SPAN> collection of an object has a unique index whose value can be either an integer or a string. The index value for the first control in a <SPAN CLASS="pop">collection</SPAN> is 0; the value for the second control is 1, and so on. This value indicates the order in which controls were added to the collection.</P>
If the index is a string, it represents the name of the control. The <SPAN CLASS="lee">Name</SPAN> property of a control also specifies a control's name.</P>
You can use the <SPAN CLASS="lee">Controls</SPAN> collection to enumerate or count individual controls, and to set their properties. For example, you can enumerate the <SPAN CLASS="lee">Controls</SPAN> collection of a particular form and set the <SPAN CLASS="lee">Height</SPAN> property of each control to a specified value.</P>
<SPAN CLASS="nh">Note</SPAN>   The <B>For Each...Next</B> statement is useful for enumerating a collection.</P>
Properties</P>
<SPAN CLASS="eln">Count</SPAN> property.</P>
Methods</P>
<SPAN CLASS="eln">Add</SPAN> method, <SPAN CLASS="eln">Clear</SPAN> method, <SPAN CLASS="eln">Item</SPAN> method, <SPAN CLASS="eln">Move</SPAN> method, <SPAN CLASS="eln">Remove</SPAN> method.</P>
See Also</P>
<SPAN CLASS="eln">Name</SPAN> property.</P>
Example</P>
The following example accesses individual controls from the <SPAN CLASS="lee">Controls</SPAN> collection using a <B>For Each...Next</B> loop. When the user presses CommandButton1, the other controls are placed in a column along the left edge of the form using the <SPAN CLASS="lee">Move</SPAN> method.</P>
To use this example, copy this sample code to the Declarations portion of a form. Make sure that the form contains a <SPAN CLASS="lee">CommandButton</SPAN> named CommandButton1 and several other controls.</P>

<pre><code>Dim CtrlHeight As Single
Dim CtrlTop As Single
Dim CtrlGap As Single

Private Sub CommandButton1_Click()
    Dim MyControl As Control
    CtrlTop = 5

    For Each MyControl In Controls
        If MyControl.Name = "CommandButton1" Then
            'Don't move or resize this control.
        Else
            'Move method using named arguments
        MyControl.Move Top:=CtrlTop, Height:=CtrlHeight, Left:=5

        'Move method using unnamed arguments (left, top, width, height)
        'MyControl.Move 5, CtrlTop, ,CtrlHeight
            
            'Calculate top coordinate for next control
            CtrlTop = CtrlTop + CtrlHeight + CtrlGap
        End If
    Next

End Sub

Private Sub UserForm_Initialize()
    CtrlHeight = 20
    CtrlGap = 5
    
    CommandButton1.Caption = "Click to move controls"
    CommandButton1.AutoSize = True
    CommandButton1.Left = 120
    CommandButton1.Top = CtrlTop
End Sub</code></pre>
Example</P>
See the <B>Move</B> method example.</P>
<HR CLASS="rr"></FONT></BODY>
</HTML>
