<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Balloon Object</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Balloon Object</H1>Description</P>
Represents the balloon in which the Office&nbsp;Assistant displays headings and text information. A balloon can contain controls such as check boxes and labels.</P>
Using the Balloon Object</P>
Use the <SPAN CLASS="lee">NewBalloon</SPAN> property to return a <SPAN CLASS="lee">Balloon</SPAN> object. There's no collection for the <SPAN CLASS="lee">Balloon</SPAN> object; only one balloon can be visible at a time. However, it's possible to define several balloons and call any one of them when needed. For more information, see "Defining and Reusing Balloons" later in this topic.</P>
Use the <SPAN CLASS="lee">Show</SPAN> method to make the specified balloon visible. Use the <SPAN CLASS="lee">Callback</SPAN> property to run procedures based on selections from modeless balloons (balloons that remain visible while a user works in the application). Use the <SPAN CLASS="lee">Close</SPAN> method to close modeless balloons.</P>
The following example creates a balloon that contains tips for saving entered data.</P>

<pre><code>With Assistant.NewBalloon
    .BalloonType = msoBalloonTypeBullets
    .Icon = msoIconTip
    .Button = msoButtonSetOkCancel
    .Heading = "Tips for Saving Information."
    .Labels(1).Text = "Save your work often."
    .Labels(2).Text = "Install a surge protector."
    .Labels(3).Text = "Exit your application properly."
    .Show
End With</code></pre>
Defining and Reusing Balloons</P>
You can reuse balloons by assigning them to object variables and calling them when needed throughout your procedure. This example defines <SPAN CLASS="cte">balloon1</SPAN>, <SPAN CLASS="cte">balloon2</SPAN>, and <SPAN CLASS="cte">balloon3</SPAN> as separate balloons, and it displays the balloons at various points in the procedure.</P>

<pre><code>Set balloon1 = Assistant.NewBalloon
balloon1.Heading = "First balloon"
Set balloon2 = Assistant.NewBalloon
balloon2.Heading = "Second balloon"
Set balloon3 = Assistant.NewBalloon
balloon3.Heading = "Third balloon"
balloon1.Show
balloon3.Show
balloon2.Show</code></pre>
You can also combine balloon object variables in an array and index into the array.</P>
Properties</P>
<SPAN CLASS="eln">Animation</SPAN> property, <SPAN CLASS="eln">Application</SPAN> property, <SPAN CLASS="eln">BalloonType</SPAN> property, <SPAN CLASS="eln">Button</SPAN> property, <SPAN CLASS="eln">Callback</SPAN> property, <SPAN CLASS="eln">Checkboxes</SPAN> property, <SPAN CLASS="eln">Creator</SPAN> property, <SPAN CLASS="eln">Heading</SPAN> property, <SPAN CLASS="eln">Icon</SPAN> property, <SPAN CLASS="eln">Labels</SPAN> property, <SPAN CLASS="eln">Mode</SPAN> property, <SPAN CLASS="eln">Name</SPAN> property, <SPAN CLASS="eln">Parent</SPAN> property, <SPAN CLASS="eln">Private</SPAN> property, <SPAN CLASS="eln">Text</SPAN> property.</P>
Methods</P>
<SPAN CLASS="eln">Close</SPAN> method, <SPAN CLASS="eln">SetAvoidRectangle</SPAN> method, <SPAN CLASS="eln">Show</SPAN> method.</P>
Example (Microsoft Access)</P>
See the <SPAN CLASS="eln">Assistant</SPAN> object example (Microsoft Access).</P>
<HR CLASS="rr"></FONT></BODY>
</HTML>
