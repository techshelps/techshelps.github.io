<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Array Function</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>Array Function</H2>Description</P>
Returns a <SPAN CLASS="lee">Variant</SPAN> containing an array.</P>
Syntax</P>
<SPAN CLASS="lee">Array(</SPAN><SPAN CLASS="p">arglist</SPAN><SPAN CLASS="lee">)</SPAN></P>
The required <SPAN CLASS="p">arglist</SPAN> <SPAN CLASS="pop">argument</SPAN> is a comma-delimited list of values that are assigned to the elements of the array contained within the <SPAN CLASS="lee">Variant</SPAN>. If no arguments are specified, an array of zero length is created.</P>
Remarks</P>
The notation used to refer to an element of an array consists of the <SPAN CLASS="pop">variable</SPAN> name followed by parentheses containing an index number indicating the desired element. In the following example, the first <SPAN CLASS="pop">statement</SPAN> creates a variable named <SPAN CLASS="cte">A</SPAN> as a <SPAN CLASS="lee">Variant</SPAN>. The second statement assigns an array to variable <SPAN CLASS="cte">A</SPAN>. The last statement assigns the value contained in the second array element to another variable.</P>

<pre><code>Dim A As Variant
A = Array(10,20,30)
B = A(2)</code></pre>
The lower bound of an array created using the <SPAN CLASS="lee">Array</SPAN> function is always zero. Unlike other types of arrays, it is not affected by the lower bound specified with the <SPAN CLASS="lee">Option Base</SPAN> statement.</P>
<SPAN CLASS="nh">Note</SPAN>&nbsp;&nbsp;&nbsp;A <SPAN CLASS="lee">Variant</SPAN> that is not declared as an array can still contain an array. A <SPAN CLASS="lee">Variant </SPAN>variable can contain an array of any type, except fixed-length strings and <SPAN CLASS="pop">user-defined types</SPAN>. Although a <SPAN CLASS="lee">Variant</SPAN> containing an array is conceptually different from an array whose elements are of type <SPAN CLASS="lee">Variant</SPAN>, the array elements are accessed in the same way. </P>
See Also</P>
<SPAN CLASS="eln">Def</SPAN><SPAN CLASS="eln">type</SPAN> statements, <SPAN CLASS="eln">Dim</SPAN> statement, <SPAN CLASS="eln">Let</SPAN> statement, <B>Option</B> <SPAN CLASS="eln">Base</SPAN> statement, <SPAN CLASS="eln">Variant</SPAN> data type.</P>
Example </P>
This example uses the <SPAN CLASS="lee">Array</SPAN> function to return a <SPAN CLASS="lee">Variant</SPAN> containing an array.</P>

<pre><code>Dim MyWeek, MyDay
MyWeek = Array("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")
' Return values assume lower bound set to 1 (using Option Base
' statement).
MyDay = MyWeek(2)                        ' MyDay contains "Tue".
MyDay = MyWeek(4)                        ' MyDay contains "Thu".</code></pre>
Example (Microsoft Excel)</P>
This example fills the range A1:C5 on Sheet1, Sheet5, and Sheet7 with the contents of the same range on Sheet1.</P>

<pre><code>x = Array("Sheet1", "Sheet5", "Sheet7")
Sheets(x).FillAcrossSheets _
    Worksheets("Sheet1").Range("A1:C5")</code></pre>
This example consolidates data from Sheet2 and Sheet3 onto Sheet1, using the SUM function.</P>

<pre><code>Worksheets("Sheet1").Range("A1").Consolidate _
    sources:=Array("Sheet2!R1C1:R37C6", "Sheet3!R1C1:R37C6"), _
    Function:=xlSum</code></pre>
This example adds an array of strings as a custom list.</P>

<pre><code>Application.AddCustomList Array("cogs", "sprockets", _
    "widgets", "gizmos")</code></pre>
This example hides Chart1, Chart3, and Chart5. Note that in this example, the <SPAN CLASS="lee">Charts</SPAN> property returns a <SPAN CLASS="lee">Sheets</SPAN> object instead of a <SPAN CLASS="lee">Charts</SPAN> object.</P>

<pre><code>Charts(Array("Chart1", "Chart3", "Chart5")).Visible = False</code></pre>
This example sets the entries in list box one on Dialog1.</P>

<pre><code>DialogSheets("Dialog1").ListBoxes(1).List = _
    Array("cogs", "widgets", "sprockets", "gizmos")</code></pre>
This example creates a group that includes drawing objects one, three, and five on Sheet1.</P>

<pre><code>Set myGroup = Worksheets("Sheet1").DrawingObjects(Array(1, 3, 5)).Group
Worksheets("Sheet1").Activate
myGroup.Select</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
