<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IIf Function</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>IIf Function</H2>Description</P>
Returns one of two parts, depending on the evaluation of an <SPAN CLASS="pop">expression</SPAN>.</P>
Syntax</P>
<SPAN CLASS="lee">IIf(</SPAN><SPAN CLASS="narg">expr</SPAN><SPAN CLASS="lee">,</SPAN> <SPAN CLASS="narg">truepart</SPAN><SPAN CLASS="lee">,</SPAN> <SPAN CLASS="narg">falsepart</SPAN><SPAN CLASS="lee">)</SPAN></P>
The <SPAN CLASS="lee">IIf</SPAN> function syntax has these <SPAN CLASS="pop">named arguments</SPAN></P>

<TABLE COLS="4" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="56pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"><COL WIDTH="303pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</P></TD><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD COLSPAN="4" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="narg">expr</SPAN></P></TD><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Required. Expression you want to evaluate.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="narg">truepart</SPAN></P></TD><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Required. Value or expression returned if <SPAN CLASS="narg">expr</SPAN> is <SPAN CLASS="lee">True</SPAN>.</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="narg">falsepart</SPAN></P></TD><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Required. Value or expression returned if <SPAN CLASS="narg">expr</SPAN> is <SPAN CLASS="lee">False</SPAN>.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
<SPAN CLASS="lee">IIf</SPAN> always evaluates both <SPAN CLASS="narg">truepart</SPAN> and <SPAN CLASS="narg">falsepart</SPAN>, even though it returns only one of them. Because of this, you should watch for undesirable side effects. For example, if evaluating <SPAN CLASS="narg">falsepart</SPAN> results in a division by zero error, an error occurs even if <SPAN CLASS="narg">expr</SPAN> is <SPAN CLASS="lee">True</SPAN>.</P>
See Also</P>
<SPAN CLASS="eln">Choose</SPAN> function, <B>If...Then...</B><SPAN CLASS="eln">Else</SPAN> statement, <B>Select</B> <SPAN CLASS="eln">Case</SPAN> statement, <SPAN CLASS="eln">Switch</SPAN> function.</P>
Specifics (Microsoft Access)</P>
You can also use the <SPAN CLASS="eln">IIf</SPAN> function (immediate if) in a <SPAN CLASS="pop">calculated control</SPAN> on a Microsoft Access form or report. You can use the <SPAN CLASS="eln">IIf</SPAN> function to evaluate an expression and return either of two other values, depending on whether the expression evaluates to <SPAN CLASS="eln">True</SPAN> (–1) or <SPAN CLASS="eln">False</SPAN> (0). For example, you can use the <SPAN CLASS="eln">IIf</SPAN> function to inspect a field on a form and determine whether its value is Null. If it is, you can force the function return an empty string. If the field has a value that is not <SPAN CLASS="eln">Null</SPAN>, the function could return the field's contents. </P>
The following example checks the ShipCountry field in an Orders table, and returns an empty string if it is <SPAN CLASS="eln">Null</SPAN>.</P>

<pre><code>=IIf(IsNull(Forms!Orders![ShipCountry]), "", Forms!Orders![ShipCountry])</code></pre>
In Visual Basic, the <SPAN CLASS="eln">IIf</SPAN> function evaluates both <SPAN CLASS="p">truepart</SPAN> and <SPAN CLASS="p">falsepart</SPAN>, even though it returns only one of them. In a Microsoft Access form or report, however, the <SPAN CLASS="eln">IIf</SPAN> function evaluates either <SPAN CLASS="p">truepart</SPAN> or <SPAN CLASS="p">falsepart</SPAN>, whichever is appropriate. Therefore, you need not be concerned about the undesirable side effects of evaluating both arguments if you use the <SPAN CLASS="eln">IIf</SPAN> function in a calculated control, query expression, or macro.</P>
<SPAN CLASS="nh">Note</SPAN>&nbsp;&nbsp;&nbsp;The Microsoft Access <SPAN CLASS="eln">Nz</SPAN> function converts <SPAN CLASS="eln">Null</SPAN> values to zero, a <SPAN CLASS="pop">zero-length string</SPAN>, or another value that you specify. If your expression handles <SPAN CLASS="eln">Null</SPAN> values, you may be able use the <SPAN CLASS="eln">Nz</SPAN> function as an alternative to the <SPAN CLASS="eln">IIf</SPAN> function.</P>
The <SPAN CLASS="eln">IIf</SPAN> function is most useful within expressions that are in a form or report, rather than in Visual Basic code. In Visual Basic, the more full-featured <SPAN CLASS="eln">If...Then...Else</SPAN> statement offers greater versatility.</P>
Example</P>
This example uses the <SPAN CLASS="lee">IIf</SPAN> function to evaluate the <SPAN CLASS="cte">TestMe</SPAN> parameter of the <SPAN CLASS="cte">CheckIt</SPAN> procedure and returns the word "Large" if the amount is greater than 1000; otherwise, it returns the word "Small".</P>

<pre><code>Function CheckIt (TestMe As Integer)
    CheckIt = IIf(TestMe &gt; 1000, "Large", "Small")
End Function</code></pre>
Example (Microsoft Access)</P>
This example uses the <SPAN CLASS="eln">IIf</SPAN> function to evaluate an OrderAmount field and returns the word "Large" if the amount is greater than 1000; otherwise, it returns the word "Small". You can enter the following expression in the <SPAN CLASS="eln">ControlSource</SPAN> property of a calculated control.</P>

<pre><code>=IIf([OrderAmount] &gt; 1000, "Large", "Small")</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
