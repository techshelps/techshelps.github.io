<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Seek Function</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Seek Function</H1>Description</P>
Returns a <SPAN CLASS="lee">Long </SPAN>specifying the current read/write position within a file opened using the <SPAN CLASS="lee">Open</SPAN> statement.</P>
Syntax</P>
<SPAN CLASS="lee">Seek(</SPAN><SPAN CLASS="p">filenumber</SPAN><SPAN CLASS="lee">)</SPAN></P>
The required <SPAN CLASS="p">filenumber</SPAN> <SPAN CLASS="pop">argument</SPAN> is an <SPAN CLASS="lee">Integer </SPAN>containing a valid <SPAN CLASS="pop">file number</SPAN>.</P>
Remarks</P>
<SPAN CLASS="lee">Seek</SPAN> returns a value between 1 and 2,147,483,647 (equivalent to 2^31 – 1), inclusive.</P>
The following describes the return values for each file access mode.</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="56pt" VALIGN="TOP"><COL WIDTH="303pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Mode</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Return Value</P></TD></TR><TR><TD COLSPAN="3" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">Random</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Number of the next record read or written.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">Binary</SPAN>,<BR><SPAN CLASS="lee">Output</SPAN>,<BR><SPAN CLASS="lee">Append</SPAN>,<BR><SPAN CLASS="lee">Input</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Byte position at which the next operation takes place. The first byte in a file is at position 1, the second byte is at position 2, and so on.</P></TD></TR></TBODY></TABLE>
<BR></P>See Also</P>
<SPAN CLASS="eln">Get</SPAN> statement, <SPAN CLASS="eln">Loc</SPAN> function, <SPAN CLASS="eln">Open</SPAN> statement, <SPAN CLASS="eln">Put</SPAN> statement, <SPAN CLASS="eln">Seek</SPAN> statement.</P>
Example</P>
This example uses the <SPAN CLASS="lee">Seek</SPAN> function to return the current file position. The example assumes <SPAN CLASS="cte">TESTFILE</SPAN> is a file containing records of the user-defined type <SPAN CLASS="cte">Record</SPAN>.</P>

<pre><code>Type Record                                ' Define user-defined type.
    ID As Integer
    Name As String * 20
End Type</code></pre>
For files opened in Random mode, <SPAN CLASS="lee">Seek</SPAN> returns number of next record.</P>

<pre><code>Dim MyRecord As Record                ' Declare variable.
Open "TESTFILE" For Random As #1 Len = Len(MyRecord)
Do While Not EOF(1)                    ' Loop until end of file.
    Get #1, , MyRecord                    ' Read next record.
    Debug.Print Seek(1)                ' Print record number to Debug 
                                            ' window.
Loop
Close #1                                    ' Close file.</code></pre>
For files opened in modes other than Random mode, <SPAN CLASS="lee">Seek</SPAN> returns the byte position at which the next operation takes place. Assume <SPAN CLASS="cte">TESTFILE</SPAN> is a file containing a few lines of text.</P>

<pre><code>Dim MyChar
Open "TESTFILE" For Input As #1    ' Open file for reading.
Do While Not EOF(1)                    ' Loop until end of file.
    MyChar = Input(1, #1)                ' Read next character of data.
    Debug.Print Seek(1)                ' Print byte position to Debug
                                            ' window.
Loop
Close #1                                    ' Close file.</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
