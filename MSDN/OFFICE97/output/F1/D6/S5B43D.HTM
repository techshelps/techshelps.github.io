<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ToggleButton Control</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>ToggleButton Control</H1>Description</P>
Shows the selection state of an item.</P>
Remarks</P>
Use a <SPAN CLASS="lee">ToggleButton</SPAN> to show whether an item is selected. If a <SPAN CLASS="lee">ToggleButton</SPAN> is <SPAN CLASS="pop">bound</SPAN> to a <SPAN CLASS="pop">data source</SPAN>, the <SPAN CLASS="lee">ToggleButton</SPAN> shows the current value of that data source as either <SPAN CLASS="p">Yes</SPAN>/<SPAN CLASS="p">No</SPAN>, <SPAN CLASS="p">True</SPAN>/<SPAN CLASS="p">False</SPAN>, <SPAN CLASS="p">On</SPAN>/<SPAN CLASS="p">Off</SPAN>, or some other choice of two settings. If the user selects the <SPAN CLASS="lee">ToggleButton</SPAN>, the current setting is <SPAN CLASS="p">Yes</SPAN>, <SPAN CLASS="p">True</SPAN>, or <SPAN CLASS="p">On</SPAN>; if the user does not select the <SPAN CLASS="lee">ToggleButton</SPAN>, the setting is <SPAN CLASS="p">No</SPAN>, <SPAN CLASS="p">False</SPAN>, or <SPAN CLASS="p">Off</SPAN>. If the <SPAN CLASS="lee">ToggleButton</SPAN> is bound to a data source, changing the setting changes the value of that data source. A disabled <SPAN CLASS="lee">ToggleButton</SPAN> shows a value, but is dimmed and does not allow changes from the user interface.</P>
You can also use a <SPAN CLASS="lee">ToggleButton</SPAN> inside a <SPAN CLASS="lee">Frame</SPAN> to select one or more of a group of related items. For example, you can create an order form with a list of available items, with a <SPAN CLASS="lee">ToggleButton</SPAN> preceding each item. The user can select a particular item by selecting the appropriate <SPAN CLASS="lee">ToggleButton</SPAN>.</P>
The default property of a <SPAN CLASS="lee">ToggleButton</SPAN> is the <SPAN CLASS="lee">Value</SPAN> property.</P>
The default event of a <SPAN CLASS="lee">ToggleButton</SPAN> is the Click event.</P>
Properties</P>
<SPAN CLASS="eln">Accelerator</SPAN> property, <SPAN CLASS="eln">Alignment</SPAN> property, <SPAN CLASS="eln">AutoSize</SPAN> property, <SPAN CLASS="eln">BackColor</SPAN> property, <SPAN CLASS="eln">BackStyle</SPAN> property, <SPAN CLASS="eln">BoundValue</SPAN> property, <SPAN CLASS="eln">Caption</SPAN> property, <SPAN CLASS="eln">ControlSource</SPAN> property, <SPAN CLASS="eln">ControlTipText</SPAN> property, <SPAN CLASS="eln">Enabled</SPAN> property, <SPAN CLASS="eln">Font</SPAN> object, <SPAN CLASS="eln">ForeColor</SPAN> property, <SPAN CLASS="eln">Height</SPAN>, <SPAN CLASS="eln">Width</SPAN> properties, <SPAN CLASS="eln">HelpContextID</SPAN> property, <SPAN CLASS="eln">LayoutEffect</SPAN> property, <SPAN CLASS="eln">Left</SPAN>, <SPAN CLASS="eln">Top</SPAN> properties, <SPAN CLASS="eln">Locked</SPAN> property, <SPAN CLASS="eln">MouseIcon</SPAN> property, <SPAN CLASS="eln">MousePointer</SPAN> property, <SPAN CLASS="eln">Name</SPAN> property, <SPAN CLASS="eln">Object</SPAN> property, <SPAN CLASS="eln">OldHeight</SPAN>, <SPAN CLASS="eln">OldWidth</SPAN> properties, <SPAN CLASS="eln">OldLeft</SPAN>, <SPAN CLASS="eln">OldTop</SPAN> properties, <SPAN CLASS="eln">Parent</SPAN> property, <SPAN CLASS="eln">Picture</SPAN> property, <SPAN CLASS="eln">PicturePosition</SPAN> property, <SPAN CLASS="eln">SpecialEffect</SPAN> property, <SPAN CLASS="eln">TabIndex</SPAN> property, <SPAN CLASS="eln">TabStop</SPAN> property, <SPAN CLASS="eln">Tag</SPAN> property, <SPAN CLASS="eln">TripleState</SPAN> property, <SPAN CLASS="eln">Value</SPAN> property, <SPAN CLASS="eln">Visible</SPAN> property, <SPAN CLASS="eln">WordWrap</SPAN> property.</P>
Methods</P>
<SPAN CLASS="eln">Move</SPAN> method, <SPAN CLASS="eln">SetFocus</SPAN> method, <SPAN CLASS="eln">ZOrder</SPAN> method.</P>
Events</P>
AfterUpdate event, BeforeDragOver event, BeforeDropOrPaste event, BeforeUpdate event, Change event, Click event, DblClick event, Enter, Exit events, Error event, KeyDown, KeyUp events, KeyPress event, MouseDown, MouseUp events, MouseMove event.</P>
Example</P>
The following example uses the <SPAN CLASS="lee">TripleState</SPAN> property to allow <SPAN CLASS="lee">Null</SPAN> as a legal value of a <SPAN CLASS="lee">CheckBox</SPAN> and a <SPAN CLASS="lee">ToggleButton</SPAN>. The user controls the value of <SPAN CLASS="lee">TripleState</SPAN> through ToggleButton2. The user can set the value of a <SPAN CLASS="lee">CheckBox</SPAN> or <SPAN CLASS="lee">ToggleButton</SPAN> based on the value of <SPAN CLASS="lee">TripleState</SPAN>.</P>
To use this example, copy this sample code to the Declarations portion of a form. Make sure that the form contains:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">A <SPAN CLASS="lee">CheckBox</SPAN> named CheckBox1.</LI><LI CLASS="ULI1">A <SPAN CLASS="lee">ToggleButton</SPAN> named ToggleButton1.</LI><LI CLASS="ULI1">A <SPAN CLASS="lee">ToggleButton</SPAN> named ToggleButton2.



<pre><code>Private Sub UserForm_Initialize()
    CheckBox1.Caption = "Value is True"
    CheckBox1.Value = True
    CheckBox1.TripleState = False
    
    ToggleButton1.Caption = "Value is True"
    ToggleButton1.Value = True
    ToggleButton1.TripleState = False

    ToggleButton2.Value = False
    ToggleButton2.Caption = "Triple State Off"
End Sub

Private Sub ToggleButton2_Click()
    If ToggleButton2.Value = True Then
        ToggleButton2.Caption = "Triple State On"
        CheckBox1.TripleState = True
        ToggleButton1.TripleState = True
    Else
        ToggleButton2.Caption = "Triple State Off"
        CheckBox1.TripleState = False
        ToggleButton1.TripleState = False
    End If
End Sub

Private Sub CheckBox1_Change()
    If IsNull(CheckBox1.Value) Then
        CheckBox1.Caption = "Value is Null"
    ElseIf CheckBox1.Value = False Then
        CheckBox1.Caption = "Value is False"
    ElseIf CheckBox1.Value = True Then
        CheckBox1.Caption = "Value is True"
    End If
End Sub

Private Sub ToggleButton1_Change()
    If IsNull(ToggleButton1.Value) Then
        ToggleButton1.Caption = "Value is Null"
    ElseIf ToggleButton1.Value = False Then
        ToggleButton1.Caption = "Value is False"
    ElseIf ToggleButton1.Value = True Then
        ToggleButton1.Caption = "Value is True"
    End If
End Sub</code></pre>
</LI></UL></SPAN><HR CLASS="rr"></FONT></BODY>
</HTML>
