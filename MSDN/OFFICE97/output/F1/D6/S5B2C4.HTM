<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Timer Function</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Timer Function</H1>Description</P>
Returns a <SPAN CLASS="lee">Single </SPAN>representing the number of seconds elapsed since midnight.</P>
Syntax</P>
<SPAN CLASS="lee">Timer</SPAN></P>
See Also</P>
<SPAN CLASS="eln">Randomize</SPAN> statement, <SPAN CLASS="eln">Time</SPAN> function.</P>
Example</P>
This example uses the <SPAN CLASS="lee">Timer</SPAN> function to pause the application. The example also uses <SPAN CLASS="lee">DoEvents</SPAN> to yield to other processes during the pause.</P>

<pre><code>Dim PauseTime, Start, Finish, TotalTime
If (MsgBox("Press Yes to pause for 5 seconds", 4)) = vbYes Then
    PauseTime = 5                            ' Set duration.
    Start = Timer                            ' Set start time.
    Do While Timer &lt; Start + PauseTime
        DoEvents                                ' Yield to other processes.
    Loop
    Finish = Timer                            ' Set end time.
    TotalTime = Finish - Start            ' Calculate total time.
    MsgBox "Paused for " &amp; TotalTime &amp; " seconds"
Else
    End
End If</code></pre>
Example (Microsoft Access)</P>
You can use the <SPAN CLASS="eln">Timer</SPAN> function to time operations and events in your Microsoft Access application by placing the <SPAN CLASS="eln">Timer</SPAN> function immediately before and after the operation in your code that you wish to time. The following example uses the name of a query as its argument, then calculates how long it takes the query to run.</P>

<pre><code>Sub QueryTimer (strQueryName As String)
    Dim sngStart As Single, sngEnd As Single
    Dim sngElapsed As Single

    sngStart = Timer                            ' Get start time.
    DoCmd.OpenQuery strQueryName, acNormal        ' Run query.
    sngEnd = Timer                                ' Get end time.
    sngElapsed = Format(sngEnd - sngStart, "Fixed")    ' Elapsed time.
    MsgBox ("The query " &amp; strQueryName &amp; " took " &amp; sngElapsed _
        &amp; " seconds to run.")
End Sub</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
