<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>While...Wend Statement</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>While...Wend Statement</H1>Description</P>
Executes a series of <SPAN CLASS="pop">statements</SPAN> as long as a given condition is <SPAN CLASS="lee">True</SPAN>.</P>
Syntax</P>
<SPAN CLASS="lee">While</SPAN> <SPAN CLASS="p">condition</SPAN><BR>[<SPAN CLASS="p">statements</SPAN>]</P>
<SPAN CLASS="lee">Wend</SPAN></P>
The <SPAN CLASS="lee">While...Wend</SPAN> statement syntax has these parts:</P>

<TABLE COLS="4" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="66pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"><COL WIDTH="293pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</P></TD><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD COLSPAN="4" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">condition</SPAN></P></TD><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Required. <SPAN CLASS="pop">Numeric expression</SPAN> or <SPAN CLASS="pop">string expression</SPAN> that evaluates to <SPAN CLASS="lee">True</SPAN> or <SPAN CLASS="lee">False</SPAN>. If <SPAN CLASS="p">condition</SPAN> is <SPAN CLASS="lee">Null</SPAN>, <SPAN CLASS="p">condition</SPAN> is treated as <SPAN CLASS="lee">False</SPAN>.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">statements</SPAN></P></TD><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. One or more statements executed while condition is <SPAN CLASS="lee">True</SPAN>.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
If <SPAN CLASS="p">condition</SPAN> is <SPAN CLASS="lee">True</SPAN>, all <SPAN CLASS="p">statements</SPAN> are executed until the <SPAN CLASS="lee">Wend</SPAN> statement is encountered. Control then returns to the <SPAN CLASS="lee">While</SPAN> statement and <SPAN CLASS="p">condition</SPAN> is again checked. If <SPAN CLASS="p">condition</SPAN> is still <SPAN CLASS="lee">True</SPAN>, the process is repeated. If it is not <SPAN CLASS="lee">True</SPAN>, execution resumes with the statement following the <SPAN CLASS="lee">Wend</SPAN> statement. </P>
<SPAN CLASS="lee">While...Wend</SPAN> loops can be nested to any level. Each <SPAN CLASS="lee">Wend</SPAN> matches the most recent <SPAN CLASS="lee">While</SPAN>.</P>
<SPAN CLASS="nh">Tip</SPAN>&nbsp;&nbsp;&nbsp;The <SPAN CLASS="lee">Do...Loop</SPAN> statement provides a more structured and flexible way to perform looping.</P>
See Also</P>
<B>Do...</B><SPAN CLASS="eln">Loop</SPAN> statement, <SPAN CLASS="eln">With</SPAN> statement.</P>
Example</P>
This example uses the <SPAN CLASS="lee">While...Wend</SPAN> statement to increment a counter variable. The statements in the loop are executed as long as the condition evaluates to <SPAN CLASS="lee">True</SPAN>. </P>

<pre><code>Dim Counter
Counter = 0                                ' Initialize variable.
While Counter &lt; 20                        ' Test value of Counter.
    Counter = Counter + 1                ' Increment Counter.
Wend                                        ' End While loop when Counter &gt; 19.
Debug.Print Counter                    ' Prints 20 in Debug window.</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
