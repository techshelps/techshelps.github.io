<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Option Compare Statement</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Option Compare Statement</H1>Description</P>
Used at <SPAN CLASS="pop">module level</SPAN> to declare the default comparison method to use when string data is compared.</P>
Syntax</P>
<SPAN CLASS="lee">Option Compare</SPAN> {<SPAN CLASS="lee">Binary</SPAN> | <SPAN CLASS="lee">Text</SPAN> | <SPAN CLASS="lee">Database</SPAN>}</P>
Remarks</P>
If used, the <SPAN CLASS="lee">Option</SPAN> <SPAN CLASS="lee">Compare</SPAN> statement must appear in a <SPAN CLASS="pop">module</SPAN> before any <SPAN CLASS="pop">procedures</SPAN>.</P>
The <SPAN CLASS="lee">Option Compare</SPAN> statement specifies the <SPAN CLASS="pop">string comparison</SPAN> method (<SPAN CLASS="lee">Binary</SPAN>, <SPAN CLASS="lee">Text</SPAN>, or <SPAN CLASS="lee">Database</SPAN>) for a module. If a module doesn't include an <SPAN CLASS="lee">Option</SPAN> <SPAN CLASS="lee">Compare</SPAN> statement, the default text comparison method is <SPAN CLASS="lee">Binary</SPAN>.</P>
<SPAN CLASS="lee">Option Compare Binary</SPAN> results in string comparisons based on a <SPAN CLASS="pop">sort order</SPAN> derived from the internal binary representations of the characters. In Microsoft Windows, sort order is determined by the code page. A typical binary sort order is shown in the following example:</P>

<pre><code>A &lt; B &lt; E &lt; Z &lt; a &lt; b &lt; e &lt; z &lt; À &lt; Ê &lt; Ø &lt; à &lt; ê &lt; ø</code></pre>
<SPAN CLASS="lee">Option Compare Text</SPAN> results in string comparisons based on a case-insensitive text sort order determined by your system's <SPAN CLASS="pop">locale</SPAN>. When the same characters are sorted using <SPAN CLASS="lee">Option Compare Text</SPAN>, the following text sort order is produced:</P>

<pre><code>(A=a) &lt; ( À=à) &lt; (B=b) &lt; (E=e) &lt; (Ê=ê) &lt; (Z=z) &lt; (Ø=ø)</code></pre>
<SPAN CLASS="lee">Option</SPAN> <SPAN CLASS="lee">Compare</SPAN> <SPAN CLASS="lee">Database</SPAN> can only be used within Microsoft Access. This results in string comparisons based on the sort order determined by the locale ID of the database where the string comparisons occur.</P>
See Also</P>
Comparison operators, <SPAN CLASS="eln">InStr</SPAN> function, <B>Option</B> <SPAN CLASS="eln">Base</SPAN> statement, <B>Option</B> <SPAN CLASS="eln">Explicit</SPAN> statement, <B>Option</B> <SPAN CLASS="eln">Private</SPAN> statement, <SPAN CLASS="eln">StrComp</SPAN> function.</P>
Specifics (Macintosh)</P>
On the Macintosh, <SPAN CLASS="pop">sort order</SPAN> is determined by the character set.</P>
Specifics (Microsoft Access)</P>
In Microsoft Access, all modules by default contain the <SPAN CLASS="eln">Option Compare Database</SPAN> statement in the <SPAN CLASS="pop">Declarations section</SPAN>. This statement sets the string comparison method for the module to the one specified for the entire database.</P>
You can change the string comparison method for all new databases by clicking <SPAN CLASS="eln">Options</SPAN> on the <SPAN CLASS="eln">Tools</SPAN> menu and changing the value in the <SPAN CLASS="eln">New Database Sort Order</SPAN> box on the <SPAN CLASS="eln">General</SPAN> tab of the <SPAN CLASS="eln">Options</SPAN> dialog box. By default this value is set to General, which specifies a case-insensitive sort order based on the English alphabet.</P>
Changing the <SPAN CLASS="eln">New Database Sort Order</SPAN> option doesn't affect the string comparison method for the current database. It only affects databases that are created after the option has been set.</P>
To specify a string comparison method for an individual module that is different from the one specified for the database, change <SPAN CLASS="eln">Option Compare Database</SPAN> to <SPAN CLASS="eln">Option Compare Binary</SPAN> or <SPAN CLASS="eln">Option Compare Text</SPAN>. The <SPAN CLASS="eln">Option Compare Binary</SPAN> statement compares strings by evaluating the ASCII values corresponding to the characters they contain, so the statement is case-sensitive. <SPAN CLASS="eln">Option Compare Text</SPAN> is case-insensitive.</P>
<SPAN CLASS="nh">Note</SPAN>&nbsp;&nbsp;&nbsp;If you are using the <SPAN CLASS="eln">Bookmark</SPAN> property of a <SPAN CLASS="eln">Recordset</SPAN> object, you must include an <SPAN CLASS="eln">Option Compare Binary</SPAN> statement in the Declarations section of the module. The setting and return value for the <SPAN CLASS="eln">Bookmark</SPAN> property is a <SPAN CLASS="eln">Variant</SPAN> array of <SPAN CLASS="eln">Byte</SPAN> data. If you use a case-insensitive string comparison method, the <SPAN CLASS="eln">Bookmark</SPAN> property may point you to the wrong record.</P>
Example</P>
This example uses the <SPAN CLASS="lee">Option Compare</SPAN> statement to set the default string comparison method. The <SPAN CLASS="lee">Option Compare</SPAN> statement is used at the module level only.</P>

<pre><code>' Set the string comparison method to Binary.
Option compare Binary                    ' That is, "AAA" is less than "aaa"
' Set the string comparison method to Text.
Option compare Text                    ' That is, "AAA" is equal to "aaa".</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
