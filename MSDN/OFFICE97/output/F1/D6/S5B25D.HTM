<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Len Function</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Len Function</H1>Description</P>
Returns a <SPAN CLASS="lee">Long</SPAN> containing the number of characters in a string or the number of bytes required to store a <SPAN CLASS="pop">variable</SPAN>.</P>
Syntax</P>
<SPAN CLASS="lee">Len</SPAN><B>(</B><SPAN CLASS="p">string</SPAN> | <SPAN CLASS="p">varname</SPAN><B>)</B></P>
The <SPAN CLASS="lee">Len</SPAN> function syntax has these parts:</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="54pt" VALIGN="TOP"><COL WIDTH="305pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD COLSPAN="3" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">string</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Any valid <SPAN CLASS="pop">string expression</SPAN>. If <SPAN CLASS="p">string</SPAN> contains <SPAN CLASS="lee">Null</SPAN>, Null is returned.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">Varname</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Any valid <SPAN CLASS="pop">variable</SPAN> name. If <SPAN CLASS="p">varname</SPAN> contains <SPAN CLASS="lee">Null</SPAN>, <SPAN CLASS="lee">Null</SPAN> is returned. If <SPAN CLASS="p">varname</SPAN> is a <SPAN CLASS="lee">Variant</SPAN>, <SPAN CLASS="lee">Len</SPAN> treats it the same as a <SPAN CLASS="lee">String</SPAN> and always returns the number of characters it contains.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
One (and only one) of the two possible <SPAN CLASS="pop">arguments</SPAN> must be specified. With <SPAN CLASS="pop">user-defined types</SPAN>, <SPAN CLASS="lee">Len</SPAN> returns the size as it will be written to the file.</P>
<SPAN CLASS="nh">Note</SPAN>&nbsp;&nbsp;&nbsp;Use the <SPAN CLASS="lee">LenB</SPAN> function with byte data contained in a string. Instead of returning the number of characters in a string, <SPAN CLASS="lee">LenB</SPAN> returns the number of bytes used to represent that string. With user-defined types,<SPAN CLASS="lee"> LenB</SPAN> returns the in-memory size, including any padding between elements.</P>
<SPAN CLASS="nh">Note</SPAN>&nbsp;&nbsp;&nbsp;<SPAN CLASS="lee">Len</SPAN> may not be able to determine the actual number of storage bytes required when used with variable-length strings in <SPAN CLASS="pop">user-defined</SPAN> <SPAN CLASS="pop">data types</SPAN>.</P>
See Also</P>
Data type summary, <SPAN CLASS="eln">InStr</SPAN> function.</P>
Example</P>
This example uses the <SPAN CLASS="lee">Len</SPAN> function to return the number of characters in a string or the number of bytes required to store a variable. The <SPAN CLASS="lee">Type...End Type</SPAN> block defining <SPAN CLASS="cte">CustomerRecord</SPAN> must be preceded by the keyword <SPAN CLASS="lee">Private</SPAN> if it appears in a class module. In a standard module, a <SPAN CLASS="lee">Type</SPAN> statement can be <SPAN CLASS="lee">Public</SPAN>.</P>

<pre><code>Type CustomerRecord                    ' Define user-defined type.
    ID As Integer                        ' Place this definition in a 
    Name As String * 10                ' standard module.
    Address As String * 30
End Type

Dim Customer As CustomerRecord    ' Declare variables.
Dim MyInt As Integer, MyCur As Currency
Dim MyString, MyLen
MyString = "Hello World"                ' Initialize variable.
MyLen = Len(MyInt)                        ' Returns 2.
MyLen = Len(Customer)                    ' Returns 42.
MyLen = Len(MyString)                    ' Returns 11.
MyLen = Len(MyCur)                        ' Returns 8.</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
