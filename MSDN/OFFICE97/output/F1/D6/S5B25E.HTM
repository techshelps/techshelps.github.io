<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Let Statement</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Let Statement</H1>Description</P>
Assigns the value of an <SPAN CLASS="pop">expression</SPAN> to a <SPAN CLASS="pop">variable</SPAN> or <SPAN CLASS="pop">property</SPAN>.</P>
Syntax</P>
[<SPAN CLASS="lee">Let</SPAN>] <SPAN CLASS="p">varname</SPAN> <SPAN CLASS="lee">=</SPAN> <SPAN CLASS="p">expression</SPAN></P>
The <SPAN CLASS="lee">Let</SPAN> statement syntax has these parts:</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="66pt" VALIGN="TOP"><COL WIDTH="293pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD COLSPAN="3" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">Let</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. Explicit use of the <SPAN CLASS="lee">Let</SPAN> <SPAN CLASS="pop">keyword</SPAN> is a matter of style, but it is usually omitted.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">varname</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Required. Name of the variable or property; follows standard variable naming conventions.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">expression</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Required. Value assigned to the variable or property.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
A value expression can be assigned to a variable or property only if it is of a <SPAN CLASS="pop">data type</SPAN> that is compatible with the variable. You can't assign <SPAN CLASS="pop">string expressions</SPAN> to numeric variables, and you can't assign <SPAN CLASS="pop">numeric expressions</SPAN> to string variables. If you do, an error occurs at <SPAN CLASS="pop">compile time</SPAN>.</P>
<SPAN CLASS="lee">Variant</SPAN> variables can be assigned either string or numeric expressions. However, the reverse is not always true. Any <SPAN CLASS="lee">Variant</SPAN> except a Null can be assigned to a string variable, but only a <SPAN CLASS="lee">Variant</SPAN> whose value can be interpreted as a number can be assigned to a numeric variable. Use the <SPAN CLASS="lee">IsNumeric</SPAN> function to determine if the <SPAN CLASS="lee">Variant</SPAN> can be converted to a number.</P>
<HR CLASS="cas">
<SPAN CLASS="cah">Caution</SPAN>&nbsp;&nbsp;&nbsp;Assigning an expression of one <SPAN CLASS="pop">numeric type</SPAN> to a variable of a different numeric type coerces the value of the expression into the numeric type of the resulting variable.</P>
<HR CLASS="cae">
<SPAN CLASS="lee">Let</SPAN> statements can be used to assign one record variable to another only when both variables are of the same <SPAN CLASS="pop">user-defined type</SPAN>. Use the <SPAN CLASS="lee">LSet</SPAN> statement to assign record variables of different user-defined types. Use the <SPAN CLASS="lee">Set</SPAN> statement to assign object references to variables.</P>
See Also</P>
<SPAN CLASS="eln">Const</SPAN> statement, Data type summary, <SPAN CLASS="eln">IsNumeric</SPAN> function, <SPAN CLASS="eln">LSet</SPAN> statement, <SPAN CLASS="eln">Set</SPAN> statement, <SPAN CLASS="eln">Variant</SPAN> data type.</P>
Example </P>
This example assigns the values of expressions to variables using both the explicit and implicit <SPAN CLASS="lee">Let</SPAN> statement.</P>

<pre><code>Dim MyStr, MyInt
' The following variable assignments use the Let statement.
Let MyStr = "Hello World"
Let MyInt = 5</code></pre>
The following are the same assignments without the <SPAN CLASS="lee">Let</SPAN> statement.</P>

<pre><code>Dim MyStr, MyInt
MyStr = "Hello World"
MyInt = 5 </code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
