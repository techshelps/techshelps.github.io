<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Update Method</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Update Method</H1>Applies To</P>
Dynamic-Type <SPAN CLASS="eln">Recordset</SPAN> object, Dynaset-Type <SPAN CLASS="eln">Recordset</SPAN> object, Forward-Only-Type <SPAN CLASS="eln">Recordset</SPAN> object, <SPAN CLASS="eln">Recordset</SPAN> object, Snapshot-Type <SPAN CLASS="eln">Recordset</SPAN> object, Table-Type <SPAN CLASS="eln">Recordset</SPAN> object.</P>
Description</P>
Saves the contents of the <SPAN CLASS="pop">copy buffer</SPAN> to an updatable Recordset object.</P>
Syntax</P>
<SPAN CLASS="p">recordset</SPAN><SPAN CLASS="eln">.Update(</SPAN><SPAN CLASS="eln">type</SPAN><SPAN CLASS="l">,</SPAN><SPAN CLASS="eln"> </SPAN><SPAN CLASS="eln">force</SPAN><SPAN CLASS="eln"> </SPAN><SPAN CLASS="eln">)</SPAN></P>
The <SPAN CLASS="eln">Update</SPAN> method syntax has the following parts.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="61pt" VALIGN="TOP"><COL WIDTH="299pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">recordset</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">An <SPAN CLASS="pop">object variable</SPAN> that represents an open, updatable <SPAN CLASS="eln">Recordset</SPAN> object.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">type</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. A constant indicating the type of update, as specified in Settings (<SPAN CLASS="pop">ODBCDirect workspaces</SPAN> only). </P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">force</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. A Boolean value indicating whether or not to force the changes into the database, regardless of whether the underlying data has been changed by another user since the <SPAN CLASS="eln">AddNew</SPAN>, Delete, or <SPAN CLASS="eln">Edit</SPAN> call. If <B>True</B>, the changes are forced and changes made by other users are simply overwritten. If <B>False</B> (default), changes made by another user while the update is pending will cause the update to fail for those changes that are in conflict. No error occurs, but the <B>BatchCollisionCount</B> and <B>BatchCollisions</B> properties will indicate the number of conflicts and the rows affected by conflicts, respectively (ODBCDirect workspaces only).</P></TD></TR></TBODY></TABLE>
<BR></P>Settings</P>
You can use the following values for the <SPAN CLASS="p">type</SPAN> argument. You can use the non-default values only if batch updating is enabled.</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="121pt" VALIGN="TOP"><COL WIDTH="238pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Constant</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"> </P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B>dbUpdateRegular</B></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Default. Pending changes aren't cached and are written to disk immediately.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B>dbUpdateBatch</B></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">All pending changes in the update cache are written to disk.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B>dbUpdateCurrentRecord</B></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Only the current record's pending changes are written to disk.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
Use <SPAN CLASS="eln">Update</SPAN> to save the <SPAN CLASS="pop">current record</SPAN> and any changes you've made to it.</P>
<HR CLASS="cas">
<SPAN CLASS="cah">Caution</SPAN>   Changes to the current record are lost if:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">You use the <SPAN CLASS="eln">Edit</SPAN> or <SPAN CLASS="eln">AddNew</SPAN> method, and then move to another record without first using <SPAN CLASS="eln">Update</SPAN>.</LI><LI CLASS="ULI1">You use <SPAN CLASS="eln">Edit</SPAN> or <SPAN CLASS="eln">AddNew</SPAN>, and then use <SPAN CLASS="eln">Edit</SPAN> or <SPAN CLASS="eln">AddNew</SPAN> again without first using <SPAN CLASS="eln">Update</SPAN>.</LI><LI CLASS="ULI1">You set the Bookmark property to another record.</LI><LI CLASS="ULI1">You close <SPAN CLASS="p">recordset</SPAN> without first using <SPAN CLASS="eln">Update</SPAN>.</LI><LI CLASS="ULI1">You cancel the <SPAN CLASS="eln">Edit</SPAN> operation by using CancelUpdate.</LI></UL></SPAN><HR CLASS="cae">
To edit a record, use the <SPAN CLASS="eln">Edit</SPAN> method to copy the contents of the current record to the <SPAN CLASS="pop">copy buffer</SPAN>. If you don't use <SPAN CLASS="eln">Edit</SPAN> first, an error occurs when you use <SPAN CLASS="eln">Update</SPAN> or attempt to change a field's value.</P>
In an <SPAN CLASS="pop">ODBCDirect workspace</SPAN>, you can do batch updates, provided the cursor library supports batch updates, and the <B>Recordset</B> was opened with the optimistic batch locking option.</P>
In a <SPAN CLASS="pop">Microsoft Jet workspace</SPAN>, when the <SPAN CLASS="eln">Recordset</SPAN> object's <SPAN CLASS="eln">LockEdits</SPAN> property setting is <SPAN CLASS="eln">True</SPAN> (<SPAN CLASS="pop">pessimistically</SPAN> locked) in a multiuser environment, the record remains locked from the time <SPAN CLASS="eln">Edit</SPAN> is used until the <SPAN CLASS="eln">Update</SPAN> method is executed or the edit is canceled. If the <SPAN CLASS="eln">LockEdits</SPAN> property setting is <SPAN CLASS="eln">False</SPAN> (<SPAN CLASS="pop">optimistically</SPAN> locked), the record is locked and compared with the pre-edited record just before it is updated in the database. If the record has changed since you used the <SPAN CLASS="eln">Edit</SPAN> method, the <SPAN CLASS="eln">Update</SPAN> operation fails. <SPAN CLASS="pop">Microsoft Jet-connected ODBC</SPAN> and <SPAN CLASS="pop">installable ISAM</SPAN> databases always use optimistic locking. To continue the <SPAN CLASS="eln">Update</SPAN> operation with your changes, use the <SPAN CLASS="eln">Update</SPAN> method again. To revert to the record as the other user changed it, refresh the current record by using <SPAN CLASS="cte">Move 0</SPAN>.</P>
<B>Note</B>   To add, edit, or delete a record, there must be a unique index on the record in the underlying data source. If not, a "Permission denied" error will occur on the <B>AddNew</B>, <B>Delete,</B> or <B>Edit</B> method call in a Microsoft Jet workspace, or an "Invalid argument" error will occur on the <B>Update</B> call in an ODBCDirect workspace.</P>
See Also</P>
<SPAN CLASS="eln">AddNew</SPAN> method, <SPAN CLASS="eln">LockEdits</SPAN> property, <SPAN CLASS="eln">OpenRecordset</SPAN> method.</P>
Specifics (Microsoft Access)</P>
When you use a <SPAN CLASS="pop">bookmark</SPAN> in a Microsoft Access module, you must include an <SPAN CLASS="eln">Option Compare</SPAN> <SPAN CLASS="eln">Binary</SPAN> statement in the <SPAN CLASS="pop">Declarations section</SPAN> of the module. A&nbsp;bookmark is a <SPAN CLASS="pop">Variant</SPAN> array of <SPAN CLASS="pop">Byte</SPAN> data, so the <SPAN CLASS="pop">string comparison</SPAN> method for the&nbsp;module must be binary. If a bookmark is evaluated with a text-based string comparison method, such as the <SPAN CLASS="eln">Option Compare Text</SPAN> statement or the default setting for the <SPAN CLASS="eln">Option Compare Database</SPAN> statement, the current record may be set&nbsp;to&nbsp;an incorrect record.</P>
Example</P>
This example demonstrates the <SPAN CLASS="eln">Update</SPAN> method in conjunction with <SPAN CLASS="eln">Edit</SPAN> method.</P>

<pre><code>Sub UpdateX()

    Dim dbsNorthwind As Database
    Dim rstEmployees As Recordset
    Dim strOldFirst As String
    Dim strOldLast As String
    Dim strMessage As String

    Set dbsNorthwind = OpenDatabase("Northwind.mdb")
    Set rstEmployees = _
        dbsNorthwind.OpenRecordset("Employees")

    With rstEmployees
        .Edit
        ' Store original data.
        strOldFirst = !FirstName
        strOldLast = !LastName
        ' Change data in edit buffer.
        !FirstName = "Linda"
        !LastName = "Kobara"

        ' Show contents of buffer and get user input.
        strMessage = "Edit in progress:" &amp; vbCr &amp; _
            "    Original data = " &amp; strOldFirst &amp; " " &amp; _
            strOldLast &amp; vbCr &amp; "    Data in buffer = " &amp; _
            !FirstName &amp; " " &amp; !LastName &amp; vbCr &amp; vbCr &amp; _
            "Use Update to replace the original data with " &amp; _
            "the buffered data in the Recordset?"

        If MsgBox(strMessage, vbYesNo) = vbYes Then
            .Update
        Else
            .CancelUpdate
        End If

        ' Show the resulting data.
        MsgBox "Data in recordset = " &amp; !FirstName &amp; " " &amp; _
            !LastName

        ' Restore original data because this is a demonstration.
        If Not (strOldFirst = !FirstName And _
                strOldLast = !LastName) Then
            .Edit
            !FirstName = strOldFirst
            !LastName = strOldLast
            .Update
        End If

        .Close
    End With

    dbsNorthwind.Close

End Sub</code></pre>
This example demonstrates the <SPAN CLASS="eln">Update</SPAN> method in conjunction with the <SPAN CLASS="eln">AddNew</SPAN> method.</P>

<pre><code>Sub UpdateX2()

    Dim dbsNorthwind As Database
    Dim rstEmployees As Recordset
    Dim strOldFirst As String
    Dim strOldLast As String
    Dim strMessage As String

    Set dbsNorthwind = OpenDatabase("Northwind.mdb")
    Set rstEmployees = _
        dbsNorthwind.OpenRecordset("Employees")

    With rstEmployees
        .AddNew
        !FirstName = "Bill"
        !LastName = "Sornsin"

        ' Show contents of buffer and get user input.
        strMessage = "AddNew in progress:" &amp; vbCr &amp; _
            "    Data in buffer = " &amp; !FirstName &amp; " " &amp; _
            !LastName &amp; vbCr &amp; vbCr &amp; _
            "Use Update to save buffer to recordset?"

        If MsgBox(strMessage, vbYesNoCancel) = vbYes Then
            .Update
            ' Go to the new record and show the resulting data.
            .Bookmark = .LastModified
            MsgBox "Data in recordset = " &amp; !FirstName &amp; _
                " " &amp; !LastName
            ' Delete new data because this is a demonstration.
            .Delete
        Else
            .CancelUpdate
            MsgBox "No new record added."
        End If

        .Close
    End With

    dbsNorthwind.Close

End Sub</code></pre>
Example (Microsoft Access)</P>
See the <SPAN CLASS="eln">AddNew</SPAN> method example (Microsoft Access).</P>
Example (Microsoft Excel)</P>
This example opens Product.dbf (a dBASE IV table located in the C:\Program Files<BR>\Common Files\Microsoft Shared\MSquery folder), finds a record with the PRODUCT value 1, and then sets the CATEGORY field to the value in cell B2 on Sheet1. (In Windows&nbsp;NT, Product.dbf is located in the C:\Windows\Msapps\Msquery folder.)</P>

<pre><code>Dim db As Database, rs As Recordset, categoryCell As Range
Sheets("Sheet1").Activate
Set categoryCell = ActiveSheet.Cells(2, 2)
categoryCell.Value = "BEVR"
Set db = OpenDatabase("C:\Program Files\Common Files\Microsoft Shared\MSquery", _
    False, False, "dBASE IV")
Set rs = db.OpenRecordset("PRODUCT.DBF", dbOpenTable)
With rs
    .Index = "PRODUCT"
    .Seek "=", "1"
    .Edit
    .Fields("CATEGORY").Value = categoryCell.Value
    .Update
End With
MsgBox "The field has been updated with " &amp; categoryCell.Value
rs.Close
db.Close</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
