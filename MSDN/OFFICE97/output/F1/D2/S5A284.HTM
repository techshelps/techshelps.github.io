<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CreateGroup Method</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>CreateGroup Method</H2>Applies To</P>
<SPAN CLASS="eln">User</SPAN> object, <SPAN CLASS="eln">Workspace</SPAN> object.</P>
Description</P>
Creates a new <SPAN CLASS="eln">Group</SPAN> object (<SPAN CLASS="pop">Microsoft&nbsp;Jet workspaces</SPAN> only).</P>
Syntax</P>
<SPAN CLASS="eln">Set</SPAN> <SPAN CLASS="p">group</SPAN><SPAN CLASS="l"> = </SPAN><SPAN CLASS="p">object</SPAN><SPAN CLASS="eln">.CreateGroup(</SPAN><SPAN CLASS="p">name</SPAN><SPAN CLASS="l">, </SPAN><SPAN CLASS="p">pid</SPAN><SPAN CLASS="eln">)</SPAN></P>
The <SPAN CLASS="eln">CreateGroup</SPAN> method syntax has these parts.</P>
</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="61pt" VALIGN="TOP"><COL WIDTH="299pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">group</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">An <SPAN CLASS="pop">object variable</SPAN> that represents the <SPAN CLASS="eln">Group</SPAN> you want to create.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">object</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">An object variable that represents the User or Workspace object for which you want to create the new <SPAN CLASS="eln">Group</SPAN> object.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">name</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. A Variant (<SPAN CLASS="eln">String</SPAN> subtype) that uniquely names the new <SPAN CLASS="eln">Group</SPAN> object. See the <SPAN CLASS="eln">Name</SPAN> property for details on valid <SPAN CLASS="eln">Group</SPAN> names.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">pid</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. A <SPAN CLASS="eln">Variant</SPAN> (<SPAN CLASS="eln">String</SPAN> subtype) containing the <SPAN CLASS="pop">PID</SPAN> of a <SPAN CLASS="pop">group account</SPAN>. The identifier must contain from 4 to 20 alphanumeric characters. See the <SPAN CLASS="eln">PID</SPAN> property for more information on valid personal identifiers.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
You can use the <SPAN CLASS="eln">CreateGroup</SPAN> method to create a new <SPAN CLASS="eln">Group</SPAN> object for a <SPAN CLASS="eln">User</SPAN> or <SPAN CLASS="eln">Workspace</SPAN>. If you omit one or both of the optional parts when you use <SPAN CLASS="eln">CreateGroup</SPAN>, you can use an appropriate assignment statement to set or reset the corresponding property before you append the new object to a collection. After you append the object, you can alter some but not all of its property settings. See the individual property topics for more details.</P>
If <SPAN CLASS="p">name</SPAN> refers to an object that is already a member of the collection, a run-time error occurs when you use the <SPAN CLASS="eln">Append</SPAN> method.</P>
To remove a <SPAN CLASS="eln">Group</SPAN> object from a collection, use the <SPAN CLASS="eln">Delete</SPAN> method on the <SPAN CLASS="eln">Groups</SPAN> collection.</P>
See Also</P>
<SPAN CLASS="eln">Append</SPAN> method, <SPAN CLASS="eln">Delete</SPAN> method, <SPAN CLASS="eln">Group</SPAN> object, <SPAN CLASS="eln">Name</SPAN> property, <SPAN CLASS="eln">PID</SPAN> property.</P>
Specifics (Microsoft&nbsp;Access)</P>
Once you have created a new <SPAN CLASS="l">Group</SPAN> object and appended it to the <SPAN CLASS="l">Groups</SPAN> collection of a <SPAN CLASS="l">Workspace</SPAN> or <SPAN CLASS="l">User</SPAN> object, you can verify that the new group exists by examining the <B>Name</B> list box on the <B>Groups</B> tab of the <B>User And Group Accounts</B> dialog box. This dialog box is available by pointing to <B>Security</B> on the <B>Tools</B> menu and clicking <B>User And Group Accounts</B>.</P>
Example</P>
This example uses the <SPAN CLASS="eln">CreateGroup</SPAN> method to create a new <SPAN CLASS="eln">Group</SPAN> object; it then makes the "admin" user a member of the new <SPAN CLASS="eln">Group</SPAN> object and lists its properties and users.</P>

<pre><code>Sub CreateGroupX()

    Dim wrkDefault As Workspace
    Dim grpNew As Group
    Dim grpTemp As Group
    Dim prpLoop As Property
    Dim usrLoop As User

    Set wrkDefault = DBEngine.Workspaces(0)

    With wrkDefault

        ' Create and append new group.
        Set grpNew = .CreateGroup("NewGroup", _
            "AAA123456789")
        .Groups.Append grpNew

        ' Make the user "admin" a member of the
        ' group NewGroup by creating and adding the
        ' appropriate Group object to the user's Groups
        ' collection.
        Set grpTemp = .Users("admin").CreateGroup("NewGroup")
        .Users("admin").Groups.Append grpTemp

        Debug.Print "Properties of " &amp; grpNew.Name

        ' Enumerate the Properties collection of NewGroup. The
        ' PID property is not readable.
        For Each prpLoop In grpNew.Properties
            On Error Resume Next
            If prpLoop &lt;&gt; "" Then Debug.Print "    " &amp; _
                prpLoop.Name &amp; " = " &amp; prpLoop
            On Error GoTo 0
        Next prpLoop

        Debug.Print "Users collection of " &amp; grpNew.Name

        ' Enumerate the Users collection of NewGroup.
        For Each usrLoop In grpNew.Users
            Debug.Print "    " &amp; _
                usrLoop.Name
        Next usrLoop

        ' Delete the new Group object because this
        ' is a demonstration.
        .Groups.Delete "NewGroup"

    End With

End Sub</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
