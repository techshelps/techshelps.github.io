<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Selected Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>Selected Property</H2>Applies To</P>
List Box control.</P>
Description</P>
You can use the <SPAN CLASS="eln">Selected</SPAN> property in Visual Basic to determine if an item in a <SPAN CLASS="pop">list box</SPAN> is selected.</P>
Setting</P>
The <SPAN CLASS="eln">Selected</SPAN> property is a zero-based array that contains the selected state of each item in a list box.</P>

<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="72pt" VALIGN="TOP"><COL WIDTH="287pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Setting</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">True</SPAN> (–1)</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The list box item is selected.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">False</SPAN> (0)</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The list box item isn't selected.</P></TD></TR></TBODY></TABLE>
<BR></P>You can get or set the <SPAN CLASS="eln">Selected</SPAN> property by using <SPAN CLASS="jump">Visual Basic</SPAN>.</P>
This property is available only at <SPAN CLASS="pop">run time</SPAN>.</P>
Remarks</P>
When a list box control's MultiSelect property is set to None, only one item can have its <SPAN CLASS="eln">Selected</SPAN> property set to <SPAN CLASS="eln">True</SPAN>. When a list box control's <SPAN CLASS="eln">MultiSelect</SPAN> property is set to Simple or Extended, any or all of the items can have their <SPAN CLASS="eln">Selected</SPAN> property set to <SPAN CLASS="eln">True</SPAN>. A multiple-selection list box bound to a field will always have a Value property equal to Null. You use the <SPAN CLASS="eln">Selected</SPAN> property or the ItemsSelected collection to retrieve information about which items are selected.</P>
You can use the <SPAN CLASS="eln">Selected</SPAN> property to select items in a list box by using Visual Basic. For example, the following expression selects the fifth item in the list:</P>

<pre><code>Me!Listbox.Selected(4) = True</code></pre>
See Also</P>
<SPAN CLASS="eln">Column</SPAN> property, <SPAN CLASS="eln">ItemsSelected</SPAN> collection, <SPAN CLASS="eln">ListIndex</SPAN> property, <SPAN CLASS="eln">MultiSelect</SPAN> property.</P>
Example</P>
The following example uses the <SPAN CLASS="eln">Selected</SPAN> property to move selected items in the lstSource list box to the lstDestination list box. The lstDestination list box's <SPAN CLASS="eln">RowSourceType</SPAN> property is set to Value List and the control's <SPAN CLASS="eln">RowSource</SPAN> property is constructed from all the selected items in the lstSource control. The lstSource list box's <SPAN CLASS="eln">MultiSelect</SPAN> property is set to Extended. The CopySelected( ) function is called from the cmdCopyItem command button.</P>

<pre><code>Sub cmdCopyItem_Click()
    CopySelected Me
End Sub

Function CopySelected(frm As Form) As Integer
    Dim ctlSource As Control
    Dim ctlDest As Control
    Dim strItems As String
    Dim intCurrentRow As Integer
    Set ctlSource = frm!lstSource
    Set ctlDest = frm!lstDestination
    For intCurrentRow = 0 To ctlSource.Listcount - 1
        If ctlSource.Selected(intCurrentRow) Then
            strItems = strItems &amp; ctlSource.Column(0, intCurrentRow) &amp; ";"
        End If
    Next intCurrentRow
    ' Reset destination control's RowSource property.
    ctlDest.RowSource = ""
    ctlDest.RowSource = strItems
End Function</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
