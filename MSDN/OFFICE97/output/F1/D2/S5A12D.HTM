<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ItemRemoved Event -- Event Procedures</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>ItemRemoved Event — Event Procedures</H2>Description</P>
To create an <SPAN CLASS="pop">event procedure</SPAN> that runs when the ItemRemoved event occurs, follow the steps included in the Remarks section of this topic.</P>
Syntax</P>
<SPAN CLASS="l">Private Sub </SPAN><SPAN CLASS="p">evtReferences</SPAN><SPAN CLASS="l">_ItemRemoved(</SPAN><SPAN CLASS="p">reference</SPAN><SPAN CLASS="l">)</SPAN></P>
The ItemRemoved event procedure has the following arguments.</P>

<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="90pt" VALIGN="TOP"><COL WIDTH="269pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Argument</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">evtReferences</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">An object variable representing the References collection. You must declare this object variable in a <SPAN CLASS="pop">class module</SPAN> by using the WithEvents keyword.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">reference</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The Reference object that has been removed from the <SPAN CLASS="eln">References</SPAN> collection.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
The ItemRemoved event procedure can contain code that you want to run when a reference to a <SPAN CLASS="pop">type library</SPAN> is removed from the project. You can remove a reference from Visual Basic by using the Remove method to remove a <SPAN CLASS="eln">Reference</SPAN> object from the <SPAN CLASS="eln">References</SPAN> collection.</P>
To create the ItemRemoved event procedure:</P>
<SPAN CLASS="list"><OL><LI CLASS="OLI1">Using the <SPAN CLASS="eln">WithEvents</SPAN> keyword, declare an object variable of type <SPAN CLASS="eln">References</SPAN> in the <SPAN CLASS="pop">Declarations section</SPAN> of a class module. Microsoft Access uses this object variable to define the event procedure for the ItemRemoved event. The following line of code shows a typical <SPAN CLASS="eln">WithEvents</SPAN> declaration:

<pre><code>Public WithEvents evtReferences As References</code></pre>
</LI><LI CLASS="OLI1">2.    Create an event procedure definition within the class module by selecting the name of the <SPAN CLASS="eln">References</SPAN> object variable from the <SPAN CLASS="eln">Object</SPAN> box in the <SPAN CLASS="pop">Module window</SPAN>. For example, if you use the declaration shown in the preceding step, you'll see <SPAN CLASS="cte">evtReferences</SPAN> in the <SPAN CLASS="eln">Object</SPAN> drop-down box. Then select the ItemRemoved event in the <SPAN CLASS="eln">Procedure</SPAN> box.</LI><LI CLASS="OLI1">3.    Add the code that will run when the event occurs. For example, if you want to display a message box stating that a reference has been removed from the project, add that code to the event procedure.</LI><LI CLASS="OLI1">4.    Assign the <SPAN CLASS="eln">References</SPAN> collection to the <SPAN CLASS="eln">References</SPAN> object variable that you declared with the <SPAN CLASS="eln">WithEvents</SPAN> keyword. This assignment statement should be within a procedure that runs before the ItemRemoved event will occur.
For example, you could include this statement within the Initialize event of the class module in which you declared the object variable. Then when you create an instance of the class, the object variable is automatically initialized. If you're using the <SPAN CLASS="cte">evtReferences</SPAN> object variable, this event procedure would appear as follows:</P>


<pre><code>Private Sub Class_Initialize()
    Set evtReferences = Application.References
End Sub</code></pre>
</LI></OL></SPAN><SPAN CLASS="nh">Note</SPAN>   If you've already followed the preceding steps to create an event procedure for the <SPAN CLASS="jump">ItemAdded</SPAN> event, you don't need to repeat them for the ItemRemoved event. You can use the same <SPAN CLASS="eln">References</SPAN> object variable for both.</P>
In order to trigger the ItemRemoved event, you must remove the existing reference by using the <SPAN CLASS="eln">References</SPAN> object variable that you declared with the <SPAN CLASS="eln">WithEvents</SPAN> keyword.</P>
To remove a reference and trigger the event:</P>
<SPAN CLASS="list"><OL><LI CLASS="OLI1">1.    Within a <SPAN CLASS="pop">standard module</SPAN>, create a new <SPAN CLASS="pop">instance</SPAN> of the class within which you declared the <SPAN CLASS="eln">References</SPAN> object variable. For example, if the name of the class is RefEvents, you can create a new instance of the class and assign it to an object variable with the following declaration statement. This statement can exist at the module level or within a procedure.

<pre><code>Dim objRefEvents As New RefEvents</code></pre>
</LI><LI CLASS="OLI1">Within a Sub or Function procedure, create a new <SPAN CLASS="eln">Reference</SPAN> object by using the <SPAN CLASS="eln">Remove</SPAN> method of the object variable that represents the <SPAN CLASS="eln">References</SPAN> collection (<SPAN CLASS="cte">evtReferences</SPAN>). Since the ItemRemoved event in the class module is defined in association with a particular <SPAN CLASS="eln">References</SPAN> object variable, you must create the new <SPAN CLASS="eln">Reference</SPAN> object by using this variable. Otherwise, the event won't occur.
</LI></OL></SPAN>Note that you must qualify the <SPAN CLASS="eln">References</SPAN> object variable with the name of the class in which it's declared.</P>
Once you've completed all the preceding steps, you can remove an existing reference with a procedure such as the following:</P>

<pre><code>Function RemoveReference(strRefName As String)
    Dim ref As Reference
    ' Create new instance of RefEvents class.
    Dim objRefEvents As New RefEvents

    ' Creates reference on References collection
    ' variable defined in RefEvents class.
    Set ref = objRefEvents.evtReferences(strRefName)
    objRefEvents.evtReferences.Remove ref
End Function</code></pre>
<SPAN CLASS="nh">Notes</SPAN></P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">The procedure that initializes the <SPAN CLASS="eln">References</SPAN> object variable must be within the same scope as the object variable declaration. For example, if you declared the <SPAN CLASS="eln">References</SPAN> object variable as <SPAN CLASS="eln">Private</SPAN> within a class module, then you must initialize the variable in a procedure within that same class module.</LI><LI CLASS="ULI1">You can include the ItemRemoved event procedure only in a class module.</LI><LI CLASS="ULI1">Once you declare a <SPAN CLASS="pop">module-level variable</SPAN> to represent the <SPAN CLASS="eln">References</SPAN> collection, you can use that variable to create event procedure definitions for both the ItemRemoved event and the ItemAdded event.</LI><LI CLASS="ULI1">If you have multiple ItemRemoved event procedures within a single project, each one will run when the event occurs, but they won't run in any specified order. Therefore, it's advisable to create only one ItemRemoved event procedure in a project and to include all code to run when the event occurs in that event procedure.</LI><LI CLASS="ULI1">The ItemRemoved event occurs after the reference has been removed from the project.
</LI></UL></SPAN>See Also</P>
ItemAdded event, ItemRemoved event.</P>
Example</P>
See the Initialize event — event procedures example.</P>
<HR CLASS="rr"></FONT></BODY>
</HTML>
