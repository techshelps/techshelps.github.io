<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Undo Method</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>Undo Method</H2>Applies To</P>
Check Box control, Combo Box control, <SPAN CLASS="eln">Control</SPAN> object, <SPAN CLASS="eln">Form</SPAN> object, List Box control, Text Box control.</P>
Description</P>
You can use the <SPAN CLASS="eln">Undo</SPAN> method to reset a <SPAN CLASS="pop">control</SPAN> or <SPAN CLASS="pop">form</SPAN> when its value has been changed. For example, you can use the <SPAN CLASS="eln">Undo</SPAN> method to clear a change to a record that contains an invalid entry.</P>
Syntax</P>
<SPAN CLASS="p">object</SPAN><SPAN CLASS="l">.Undo</SPAN></P>
The <SPAN CLASS="eln">Undo</SPAN> method has the following argument.</P>

<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="91pt" VALIGN="TOP"><COL WIDTH="268pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Argument</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">object</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">A Form object or a Control object.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
If the <SPAN CLASS="eln">Undo</SPAN> method is applied to a form, all changes to the current record are lost. If the <SPAN CLASS="eln">Undo</SPAN> method is applied to a control, only the control itself is affected.</P>
This method must be applied before the form or control is updated. You may want to include this method in a form's <SPAN CLASS="eln">BeforeUpdate</SPAN> event or in a control's <SPAN CLASS="eln">Change</SPAN> event.</P>
The <SPAN CLASS="eln">Undo</SPAN> method offers an alternative to using the SendKeys statement to send the value of the ESC key in an event procedure.</P>
See Also</P>
<SPAN CLASS="eln">OldValue</SPAN> property.</P>
Example</P>
The following example shows how you can use the <SPAN CLASS="eln">Undo</SPAN> method within a control's <SPAN CLASS="eln">Change</SPAN> event procedure to force a field named LastName to reset to its original value, if it changed.</P>

<pre><code>Private Sub LastName_Change()
    Me!LastName.Undo
End Sub</code></pre>
The next example uses the <SPAN CLASS="eln">Undo</SPAN> method to reset all changes to a form before the form is updated.</P>

<pre><code>Private Sub Form_BeforeUpdate(Cancel As Integer)
    Me.Undo
End Sub</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
