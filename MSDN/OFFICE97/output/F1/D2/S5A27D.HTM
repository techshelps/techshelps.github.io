<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Container Object</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>Container Object</H2>Description</P>
A <SPAN CLASS="eln">Container</SPAN> object groups similar types of <SPAN CLASS="eln">Document</SPAN> objects together.</P>
Remarks</P>
Each <SPAN CLASS="eln">Database</SPAN> object has a <SPAN CLASS="eln">Containers</SPAN> collection consisting of built-in <SPAN CLASS="eln">Container</SPAN> objects. Applications can define their own document types and corresponding containers (<SPAN CLASS="pop">Microsoft&nbsp;Jet databases</SPAN> only); however, these objects may not always be supported through DAO.</P>
Some of these <SPAN CLASS="eln">Container</SPAN> objects are defined by the <SPAN CLASS="pop">Microsoft&nbsp;Jet database engine</SPAN> while others may be defined by other applications. The following table lists the name of each <SPAN CLASS="eln">Container</SPAN> object defined by the Microsoft&nbsp;Jet database engine and what type of information it contains.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="150pt" VALIGN="TOP"><COL WIDTH="210pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Container name</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Contains information about</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Databases</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Saved databases</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Tables</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Saved tables and queries</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Relations</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Saved relationships</P></TD></TR></TBODY></TABLE>
<BR></P><SPAN CLASS="nh">Note</SPAN>&nbsp;&nbsp;&nbsp;Don't confuse the <SPAN CLASS="eln">Container</SPAN> objects listed in the preceding table with the collections of the same name. The Databases <SPAN CLASS="eln">Container</SPAN> object refers to all saved database objects, but the <SPAN CLASS="eln">Databases</SPAN> collection refers only to database objects that are open in a particular workspace.</P>
Each <SPAN CLASS="eln">Container</SPAN> object has a <SPAN CLASS="eln">Documents</SPAN> collection containing <SPAN CLASS="eln">Document</SPAN> objects that describe instances of built-in objects of the type specified by the <SPAN CLASS="eln">Container</SPAN>. You typically use a <SPAN CLASS="eln">Container</SPAN> object as an intermediate link to the information in the <SPAN CLASS="eln">Document</SPAN> object. You can also use the <SPAN CLASS="eln">Containers</SPAN> collection to set security for all <SPAN CLASS="eln">Document</SPAN> objects of a given type.</P>
With an existing <SPAN CLASS="eln">Container</SPAN> object, you can:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">Use the <SPAN CLASS="eln">Name</SPAN> property to return the predefined name of the <SPAN CLASS="eln">Container</SPAN> object.</LI><LI CLASS="ULI1">Use the <SPAN CLASS="eln">Owner</SPAN> property to set or return the owner of the <SPAN CLASS="eln">Container</SPAN> object. To set the <SPAN CLASS="eln">Owner</SPAN> property, you must have write <SPAN CLASS="pop">permission</SPAN> for the <SPAN CLASS="eln">Container</SPAN> object, and you must set the property to the name of an existing <SPAN CLASS="eln">User</SPAN> or <SPAN CLASS="eln">Group</SPAN> object.</LI><LI CLASS="ULI1">Use the <SPAN CLASS="eln">Permissions</SPAN> and <SPAN CLASS="eln">UserName</SPAN> properties to set access permissions for the <SPAN CLASS="eln">Container</SPAN> object; any <SPAN CLASS="eln">Document</SPAN> object created in the <SPAN CLASS="eln">Documents</SPAN> collection of a <SPAN CLASS="eln">Container</SPAN> object inherits these access permission settings.
</LI></UL></SPAN>Because <SPAN CLASS="eln">Container</SPAN> objects are built-in, you can't create new <SPAN CLASS="eln">Container</SPAN> objects or delete existing ones.</P>
To refer to a <SPAN CLASS="eln">Container</SPAN> object in a collection by its ordinal number or by its <SPAN CLASS="eln">Name</SPAN> property setting, use any of the following syntax forms:</P>
<SPAN CLASS="eln">Containers</SPAN><SPAN CLASS="l">(</SPAN>0<SPAN CLASS="l">)</SPAN></P>
<SPAN CLASS="eln">Containers</SPAN><SPAN CLASS="l">("</SPAN><SPAN CLASS="p">name</SPAN><SPAN CLASS="l">")</SPAN></P>
<SPAN CLASS="eln">Containers</SPAN><SPAN CLASS="l">![</SPAN><SPAN CLASS="p">name</SPAN><SPAN CLASS="l">]</SPAN></P>
Properties</P>
<SPAN CLASS="eln">AllPermissions</SPAN> property, <SPAN CLASS="eln">Inherit</SPAN> property, <SPAN CLASS="eln">Name</SPAN> property, <SPAN CLASS="eln">Owner</SPAN> property, <SPAN CLASS="eln">Permissions</SPAN> property, <SPAN CLASS="eln">UserName</SPAN> property.</P>
See Also</P>
<SPAN CLASS="eln">User</SPAN> object.</P>
Specifics (Microsoft&nbsp;Access)</P>
In addition to the <SPAN CLASS="eln">Container</SPAN> objects defined by the <SPAN CLASS="pop">Microsoft&nbsp;Jet database engine</SPAN>, the following four <SPAN CLASS="eln">Container</SPAN> objects are defined by Microsoft&nbsp;Access.</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="150pt" VALIGN="TOP"><COL WIDTH="209pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Container name</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Contains information about</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Forms</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Saved forms</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Modules</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Saved modules</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Reports</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Saved reports</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Scripts</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Saved macros</P></TD></TR></TBODY></TABLE>
<BR></P>The <SPAN CLASS="eln">Container</SPAN> objects defined by Microsoft&nbsp;Access are Microsoft&nbsp;Access <SPAN CLASS="pop">database objects</SPAN>, not <SPAN CLASS="pop">Data Access Objects (DAO)</SPAN>. These <SPAN CLASS="eln">Container</SPAN> objects provide the Jet database engine with information about Microsoft&nbsp;Access objects. The Jet database engine uses this information to implement security on Microsoft&nbsp;Access database objects in the same way it does for DAO objects.</P>
The <SPAN CLASS="eln">Container</SPAN> objects defined by Microsoft&nbsp;Access and the <SPAN CLASS="eln">Container</SPAN> objects defined by the Jet database engine are all included in the <SPAN CLASS="eln">Containers</SPAN> collection in Microsoft&nbsp;Access.</P>
The <SPAN CLASS="eln">Documents</SPAN> collection of a <SPAN CLASS="eln">Container</SPAN> object contains <SPAN CLASS="eln">Document</SPAN> objects representing the individual objects of the type described by the <SPAN CLASS="eln">Container</SPAN> object. For example, the Forms <SPAN CLASS="eln">Container</SPAN> object has a <SPAN CLASS="eln">Documents</SPAN> collection that might include a <SPAN CLASS="eln">Document</SPAN> object corresponding to a form named Orders.</P>
You can use <SPAN CLASS="eln">Container</SPAN> objects to establish and enforce <SPAN CLASS="pop">permissions</SPAN> for Microsoft Access database objects. To set permissions for a <SPAN CLASS="eln">Container</SPAN> object, set the <SPAN CLASS="eln">UserName</SPAN> property of the <SPAN CLASS="eln">Container</SPAN> object to the name of an existing <SPAN CLASS="eln">User</SPAN> or <SPAN CLASS="eln">Group</SPAN> object. Then set the <SPAN CLASS="eln">Permissions</SPAN> property for the <SPAN CLASS="eln">Container</SPAN> object.</P>
<SPAN CLASS="nh">Note</SPAN>&nbsp;&nbsp;&nbsp;Don't confuse the particular types of <SPAN CLASS="eln">Container</SPAN> objects with the collection types of the same name. The Forms and Reports <SPAN CLASS="eln">Container</SPAN> objects each contain <SPAN CLASS="eln">Documents</SPAN> collections, which include individual <SPAN CLASS="eln">Document</SPAN> objects representing each saved form or report. The <SPAN CLASS="eln">Forms</SPAN> and <SPAN CLASS="eln">Reports</SPAN> collections refer only to open forms or reports.</P>
Example</P>
This example enumerates the <SPAN CLASS="eln">Containers</SPAN> collection of the Northwind database and the <SPAN CLASS="eln">Properties</SPAN> collection of each <SPAN CLASS="eln">Container</SPAN> object in the collection.</P>

<pre><code>Sub ContainerObjectX()

    Dim dbsNorthwind As Database
    Dim ctrLoop As Container
    Dim prpLoop As Property

    Set dbsNorthwind = OpenDatabase("Northwind.mdb")

    With dbsNorthwind

        ' Enumerate Containers collection.
        For Each ctrLoop In .Containers
            Debug.Print "Properties of " &amp; ctrLoop.Name _
                &amp; " container"

            ' Enumerate Properties collection of each
            ' Container object.
            For Each prpLoop In ctrLoop.Properties
                Debug.Print "    " &amp; prpLoop.Name _
                    &amp; " = " prpLoop
            Next prpLoop

        Next ctrLoop

        .Close
    End With

End Sub</code></pre>
Example (Microsoft&nbsp;Access)</P>
The following example grants programmers full access to all modules in a database, and grants all other users read-only permissions on modules:</P>

<pre><code>Sub SetModulePermissions()
    Dim dbs As Database, wsp As Workspace, ctr As Container
    Dim grp As Group

    ' Return reference to default workspace.
    Set wsp = DBEngine.Workspaces(0)
    ' Return reference to current database.
    Set dbs = CurrentDb
    ' Return reference to Modules container.
    Set ctr = dbs.Containers!Modules
    wsp.Groups.Refresh
    For Each grp In wsp.Groups
        ctr.UserName = grp.Name
        If ctr.UserName = "Programmers" Then
            ctr.Permissions = ctr.Permissions Or dbSecFullAccess
        Else
            ctr.Permissions = ctr.Permissions Or acSecModReadDef
        End If
    Next grp
    Set dbs = Nothing
End Sub</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
