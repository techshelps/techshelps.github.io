<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ProcBodyLine Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>ProcBodyLine Property</H2>Applies To</P>
<SPAN CLASS="eln">Module</SPAN> object.</P>
Description</P>
The <SPAN CLASS="eln">ProcBodyLine</SPAN> property returns a Long value containing the number of the line at which the body of a specified <SPAN CLASS="pop">procedure</SPAN> begins in a <SPAN CLASS="pop">standard module</SPAN> or a <SPAN CLASS="pop">class module</SPAN>. The body of a procedure begins with the procedure definition, denoted by one of the following:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">A Sub statement.</LI><LI CLASS="ULI1">A Function statement.</LI><LI CLASS="ULI1">A Property Get statement.</LI><LI CLASS="ULI1">A Property Let statement.</LI><LI CLASS="ULI1">A Property Set statement.
</LI></UL></SPAN>Setting</P>
<SPAN CLASS="p">object</SPAN><SPAN CLASS="l">.ProcBodyLine(</SPAN><SPAN CLASS="p">procname</SPAN><SPAN CLASS="l">, </SPAN><SPAN CLASS="p">prockind</SPAN><SPAN CLASS="l">)</SPAN></P>
The <SPAN CLASS="eln">ProcBodyLine</SPAN> property uses the following settings.</P>

<TABLE COLS="4" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="73pt" VALIGN="TOP"><COL WIDTH="89pt" VALIGN="TOP"><COL WIDTH="196pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Setting</P></TD><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">object</SPAN></P></TD><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">A Module object.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">procname</SPAN></P></TD><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">A <SPAN CLASS="pop">string expression</SPAN> that evaluates to the name of a procedure in the module.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">prockind</SPAN></P></TD><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">An <SPAN CLASS="pop">intrinsic constant</SPAN> that specifies the type of procedure. The constant may be one of the following values.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Constant</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">vbext_pk_Get</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">A <SPAN CLASS="eln">Property Get</SPAN> procedure.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">vbext_pk_Let</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">A <SPAN CLASS="eln">Property Let</SPAN> procedure.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">vbext_pk_Proc</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">A <SPAN CLASS="eln">Sub</SPAN> or <SPAN CLASS="eln">Function</SPAN> procedure.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">vbext_pk_Set</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">A <SPAN CLASS="eln">Property Set</SPAN> procedure.</P></TD></TR></TBODY></TABLE>
<BR></P>The <SPAN CLASS="eln">ProcBodyLine</SPAN> property is available only by using Visual Basic and is read-only.</P>
Remarks</P>
The <SPAN CLASS="eln">ProcBodyLine</SPAN> property returns a number that identifies the line on which the procedure definition begins. In contrast, the ProcStartLine property returns a number that identifies the line at which a procedure is separated from the preceding procedure in a module. Any comments or compilation constants that precede the procedure definition (the body of a procedure) are considered part of the procedure, but the <SPAN CLASS="eln">ProcBodyLine</SPAN> property ignores them.</P>
<SPAN CLASS="nh">Note</SPAN>   The <SPAN CLASS="eln">ProcBodyLine</SPAN> property treats <SPAN CLASS="eln">Sub</SPAN> and <SPAN CLASS="eln">Function</SPAN> procedures similarly, but distinguishes between each type of Property procedure.</P>
See Also</P>
<SPAN CLASS="eln">Function</SPAN> statement, <SPAN CLASS="eln">ProcCountLines</SPAN> property, <SPAN CLASS="eln">ProcOfLine</SPAN> property, <SPAN CLASS="eln">ProcStartLine</SPAN> property, <B>Property</B> <SPAN CLASS="eln">Get</SPAN> statement, <B>Property</B> <SPAN CLASS="eln">Let</SPAN> statement, <B>Property</B> <SPAN CLASS="eln">Set</SPAN> statement, <SPAN CLASS="eln">Sub</SPAN> statement.</P>
Example</P>
The following function prints information about a specified procedure in a module to the Debug window:</P>

<pre><code>Function ProcLineInfo(strModuleName As String, strProcName As String)
    Dim mdl As Module
    Dim lngStartLine As Long, lngBodyLine As Long
    Dim lngCount As Long, lngEndProc As Long

    ' Open specified Module object.
    DoCmd.OpenModule strModuleName
    ' Return reference to Module object.
    Set mdl = Modules(strModuleName)

    ' Count lines in procedure.
    lngCount = mdl.ProcCountLines(strProcName, vbext_pk_Proc)
    ' Determine start line.
    lngStartLine = mdl.ProcStartLine(strProcName, vbext_pk_Proc)
    ' Determine body line.
    lngBodyLine = mdl.ProcBodyLine(strProcName, vbext_pk_Proc)
    Debug.Print

    ' Print all lines in procedure preceding body line.
    Debug.Print "Lines preceding procedure " &amp; strProcName &amp; ": "
    Debug.Print mdl.Lines(lngStartLine, lngBodyLine - lngStartLine)

    ' Determine line number of last line in procedure.
    lngEndProc = (lngBodyLine + lngCount - 1) - Abs(lngBodyLine - lngStartLine)

    ' Print all lines in body of procedure.
    Debug.Print "Body lines: "
    Debug.Print mdl.Lines(lngBodyLine, (lngEndProc - lngBodyLine) + 1)
End Function</code></pre>
You could call this function from the Northwind sample database with a procedure such as the following:</P>

<pre><code>Sub GetProcInfo()
    ProcLineInfo "Utility Functions", "IsLoaded"
End Sub</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
