<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ForeignTable Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>ForeignTable Property</H1>Applies To</P>
<SPAN CLASS="eln">Relation</SPAN> object.</P>
Description</P>
Sets or returns the name of the <SPAN CLASS="pop">foreign table</SPAN> in a <SPAN CLASS="pop">relationship</SPAN> (<SPAN CLASS="pop">Microsoft&nbsp;Jet workspaces</SPAN> only).</P>
Settings and Return Values</P>
The setting or return value is a <SPAN CLASS="eln">String</SPAN> data type that evaluates to the name of a table in&nbsp;the Database object's TableDefs collection. This property is read/write for a new Relation object not yet appended to a collection and read-only for an existing <SPAN CLASS="eln">Relation</SPAN> object in the Relations collection.</P>
Remarks</P>
The <SPAN CLASS="eln">ForeignTable</SPAN> property setting of a <SPAN CLASS="eln">Relation</SPAN> object is the <SPAN CLASS="eln">Name</SPAN> property setting of the <SPAN CLASS="eln">TableDef</SPAN> or <SPAN CLASS="eln">QueryDef</SPAN> object that represents the foreign table or query; the <SPAN CLASS="eln">Table</SPAN> property setting is the <SPAN CLASS="eln">Name</SPAN> property setting of the <SPAN CLASS="eln">TableDef</SPAN> or <SPAN CLASS="eln">QueryDef</SPAN> object that represents the <SPAN CLASS="pop">primary table</SPAN> or query.</P>
For example, if you had a list of valid part codes (in a field named PartNo) stored in a ValidParts table, you could establish a relationship with an OrderItem table such that if a part code were entered into the OrderItem table, it would have to already be in the ValidParts table. If the part code didn't exist in the ValidParts table and you had not set the Attributes property of the <SPAN CLASS="eln">Relation</SPAN> object to <SPAN CLASS="eln">dbRelationDontEnforce</SPAN>, a trappable error would occur.</P>
In this case, the ValidParts table is the <SPAN CLASS="pop">primary table</SPAN>, so the <SPAN CLASS="eln">Table</SPAN> property of the <SPAN CLASS="eln">Relation</SPAN> object would be set to ValidParts and the <B>Foreign</B><SPAN CLASS="eln">Table</SPAN> property of the <SPAN CLASS="eln">Relation</SPAN> object would be set to OrderItem. The <SPAN CLASS="eln">Name</SPAN> and <SPAN CLASS="eln">ForeignName</SPAN> properties of the <SPAN CLASS="eln">Field</SPAN> object in the <SPAN CLASS="eln">Relation</SPAN> object's <SPAN CLASS="eln">Fields</SPAN> collection would be set to PartNo.</P>
See Also</P>
<SPAN CLASS="eln">ForeignName</SPAN> property, <SPAN CLASS="eln">Name</SPAN> property, <SPAN CLASS="eln">Table</SPAN> property, <SPAN CLASS="eln">TableDef</SPAN> object.</P>
Example</P>
See the <SPAN CLASS="eln">ForeignName</SPAN> property example.</P>
Example (Microsoft&nbsp;Access)</P>
See the <SPAN CLASS="eln">ForeignName</SPAN> property example (Microsoft&nbsp;Access).</P>
<HR CLASS="rr"></FONT></BODY>
</HTML>
