<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DoMenuItem Method</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>DoMenuItem Method</H2>Applies To</P>
<SPAN CLASS="eln">DoCmd</SPAN> object.</P>
Description</P>
The <SPAN CLASS="eln">DoMenuItem</SPAN> method carries out the <SPAN CLASS="jump">DoMenuItem</SPAN> action in Visual Basic. For more information on how the action and its arguments work, see the action topic.</P>
<SPAN CLASS="nh">Note</SPAN>   In Microsoft Access&nbsp;97, the <SPAN CLASS="eln">DoMenuItem</SPAN> method has been replaced by the RunCommand method. The <SPAN CLASS="eln">DoMenuItem</SPAN> method is included in this version of Microsoft Access only for compatibility with previous versions. When you run existing Visual Basic code containing a <SPAN CLASS="eln">DoMenuItem</SPAN> method, Microsoft Access will display the appropriate <SPAN CLASS="pop">menu</SPAN> or <SPAN CLASS="pop">toolbar</SPAN> command for Microsoft Access&nbsp;97. However, unlike the DoMenuItem action in a <SPAN CLASS="pop">macro</SPAN>, a <SPAN CLASS="eln">DoMenuItem</SPAN> method in Visual Basic code isn't converted to a <SPAN CLASS="eln">RunCommand</SPAN> method when you convert a database created in a previous version of Microsoft Access.</P>
Some commands from previous versions of Microsoft Access aren't available in Microsoft Access&nbsp;97, and <SPAN CLASS="eln">DoMenuItem</SPAN> methods that run these commands will cause an error when they're executed in Visual Basic. You must edit your Visual Basic code to replace or delete occurrences of such <SPAN CLASS="eln">DoMenuItem</SPAN> methods.</P>
Syntax</P>
<SPAN CLASS="l">DoCmd.DoMenuItem </SPAN><SPAN CLASS="p">menubar</SPAN><SPAN CLASS="l">, </SPAN><SPAN CLASS="p">menuname</SPAN><SPAN CLASS="l">, </SPAN><SPAN CLASS="p">command</SPAN>[<SPAN CLASS="l">, </SPAN><SPAN CLASS="p">subcommand</SPAN>][<SPAN CLASS="l">, </SPAN><SPAN CLASS="p">version</SPAN>]</P>
The <SPAN CLASS="eln">DoMenuItem</SPAN> method has the following arguments.</P>

<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="73pt" VALIGN="TOP"><COL WIDTH="286pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Argument</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">menubar</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Use the <SPAN CLASS="pop">intrinsic constant</SPAN> <SPAN CLASS="eln">acFormBar</SPAN> for the <SPAN CLASS="pop">menu bar</SPAN> in <SPAN CLASS="pop">Form view</SPAN>.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">For other views, use the number of the view in the Menu Bar argument list, as shown in the Macro window in previous versions of Microsoft Access (count down the list, starting from 0).</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">menuname</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">You can use one of the following intrinsic constants:</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">acFile</SPAN><BR><SPAN CLASS="eln">acEditMenu</SPAN><BR><SPAN CLASS="eln">acRecordsMenu</SPAN></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">You can use <SPAN CLASS="eln">acRecordsMenu</SPAN> only for the Form view menu bar in Microsoft Access version 2.0 and Microsoft Access&nbsp;95 databases.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">For other menus, use the number of the menu in the Menu Name argument list, as shown in the Macro window in previous versions of Microsoft Access (count down the list, starting from 0).</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">command</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">You can use one of the following intrinsic constants:</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">acNew</SPAN><BR><SPAN CLASS="eln">acSaveForm</SPAN><BR><SPAN CLASS="eln">acSaveFormAs</SPAN><BR><SPAN CLASS="eln">acSaveRecord</SPAN><BR><SPAN CLASS="eln">acUndo</SPAN><BR><SPAN CLASS="eln">acCut</SPAN><BR><SPAN CLASS="eln">acCopy</SPAN><BR><SPAN CLASS="eln">acPaste</SPAN><BR><SPAN CLASS="eln">acDelete</SPAN><BR><SPAN CLASS="eln">acSelectRecord</SPAN><BR><SPAN CLASS="eln">acSelectAllRecords</SPAN><BR><SPAN CLASS="eln">acObject</SPAN><BR><SPAN CLASS="eln">acRefresh</SPAN></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">For other commands, use the number of the command in the Command argument list, as shown in the Macro window in previous versions of Microsoft Access (count down the list, starting from 0).</P></TD></TR></TBODY></TABLE>
<BR></P><I>(continued)</I></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="73pt" VALIGN="TOP"><COL WIDTH="286pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">subcommand</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">You can use one of the following intrinsic constants:</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">acObjectVerb</SPAN><BR><SPAN CLASS="eln">acObjectUpdate</SPAN></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The <SPAN CLASS="eln">acObjectVerb</SPAN> constant represents the first command on the <SPAN CLASS="pop">submenu</SPAN> of the <SPAN CLASS="eln">Object</SPAN> command on the <SPAN CLASS="eln">Edit</SPAN> menu. The type of object determines the first command on the submenu. For example, this command is <SPAN CLASS="eln">Edit</SPAN> for a Paintbrush object that can be edited.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">For other commands on submenus, use the number of the subcommand in the Subcommand argument list, as shown in the Macro window in previous versions of Microsoft Access (count down the list, starting from 0).</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">version</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Use the intrinsic constant <SPAN CLASS="eln">acMenuVer70</SPAN> for code written for Microsoft Access&nbsp;95 databases, the intrinsic constant <SPAN CLASS="eln">acMenuVer20</SPAN> for code written for Microsoft Access version 2.0 databases, and the intrinsic constant <SPAN CLASS="eln">acMenuVer1X</SPAN> for code written for Microsoft Access version 1.<SPAN CLASS="p">x</SPAN> databases. This argument is available only in Visual Basic.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="nh">Note</SPAN>   The default for this argument is <SPAN CLASS="eln">acMenuVer1X</SPAN>, so that any code written for Microsoft Access version 1.<SPAN CLASS="p">x</SPAN> databases will run unchanged. If you're writing code for a Microsoft Access&nbsp;95 or version 2.0 database and want to use the Microsoft Access&nbsp;95 or version 2.0 menu commands with the <SPAN CLASS="eln">DoMenuItem</SPAN> method, you must set this argument to <SPAN CLASS="eln">acMenuVer70</SPAN> or <SPAN CLASS="eln">acMenuVer20</SPAN>.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Also, when you are counting down the lists for the Menu Bar, Menu Name, Command, and Subcommand action arguments in the Macro window to get the numbers to use for the arguments in the <SPAN CLASS="eln">DoMenuItem</SPAN> method, you must use the Microsoft Access&nbsp;95 lists if the <SPAN CLASS="p">version</SPAN> argument is <SPAN CLASS="eln">acMenuVer70</SPAN>, the Microsoft Access version 2.0 lists if the <SPAN CLASS="p">version</SPAN> argument is <SPAN CLASS="eln">acMenuVer20</SPAN>, and the Microsoft Access version 1.<SPAN CLASS="p">x</SPAN> lists if <SPAN CLASS="p">version</SPAN> is <SPAN CLASS="eln">acMenuVer1X</SPAN> (or blank).</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="nh">Note</SPAN>   There is no acMenuVer80 setting for this argument. You can't use the DoMenuItem method to display Microsoft Access&nbsp;97 commands (although existing DoMenuItem methods in Visual Basic code will still work). Use the RunCommand method instead.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
The selections in the lists for the Menu Name, Command, and Subcommand action arguments in the Macro window depend on what you've selected for the previous arguments. You must use numbers or intrinsic constants that are appropriate for each <SPAN CLASS="p">menubar</SPAN>, <SPAN CLASS="p">menuname</SPAN>, <SPAN CLASS="p">command</SPAN>, and <SPAN CLASS="p">subcommand</SPAN> argument.</P>
If you leave the <SPAN CLASS="p">subcommand</SPAN> argument blank but specify the <SPAN CLASS="p">version</SPAN> argument, you must include the <SPAN CLASS="p">subcommand</SPAN> argument's comma. If you leave the <SPAN CLASS="p">subcommand</SPAN> and <SPAN CLASS="p">version</SPAN> arguments blank, don't use a comma following the <SPAN CLASS="p">command</SPAN> argument.</P>
See Also</P>
AddMenu action, <SPAN CLASS="eln">DoCmd</SPAN> object, DoMenuItem action, <SPAN CLASS="eln">RunCommand</SPAN> method, <SPAN CLASS="eln">SendKeys</SPAN> statement.</P>
Example</P>
The following example uses the <SPAN CLASS="eln">DoMenuItem</SPAN> method to carry out the <SPAN CLASS="eln">Paste</SPAN> command on the <SPAN CLASS="eln">Edit</SPAN> menu in Form view in a Microsoft Access&nbsp;95 database:</P>

<pre><code>DoCmd.DoMenuItem acFormBar, acEditMenu, acPaste, , acMenuVer70</code></pre>
The next example carries out the <SPAN CLASS="eln">Tile</SPAN> command on the <SPAN CLASS="eln">Window</SPAN> menu in Form view in a Microsoft Access version 2.0 database:</P>

<pre><code>DoCmd.DoMenuItem acFormBar, 4, 0, , acMenuVer20</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
