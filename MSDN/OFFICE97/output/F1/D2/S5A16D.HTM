<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>KeyPreview Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>KeyPreview Property</H2>Applies To</P>
Form.</P>
Description</P>
You can use the <SPAN CLASS="eln">KeyPreview</SPAN> property to specify whether the form-level keyboard <SPAN CLASS="pop">event procedures</SPAN> are invoked before a <SPAN CLASS="pop">control's</SPAN> keyboard event procedures.</P>
<SPAN CLASS="nh">Note</SPAN>   The keyboard events are <SPAN CLASS="jump">KeyDown</SPAN>, <SPAN CLASS="jump">KeyUp</SPAN>, and <SPAN CLASS="jump">KeyPress</SPAN>.</P>
Setting</P>
The <SPAN CLASS="eln">KeyPreview</SPAN> property uses the following settings.</P>

<TABLE COLS="4" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="72pt" VALIGN="TOP"><COL WIDTH="200pt" VALIGN="TOP"><COL WIDTH="87pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Setting</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Visual Basic</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Yes</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The form receives keyboard events first, then the active control receives keyboard events.</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">True</SPAN> (–1)</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">No</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">(Default) Only the active control receives keyboard events.</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">False</SPAN> (0)</P></TD></TR></TBODY></TABLE>
<BR></P>You can set the <SPAN CLASS="eln">KeyPreview</SPAN> property by using the form's <SPAN CLASS="jump">property sheet</SPAN>, a <SPAN CLASS="jump">macro</SPAN>, or <SPAN CLASS="jump">Visual Basic</SPAN>.</P>
You can set the <SPAN CLASS="eln">KeyPreview</SPAN> property in any view.</P>
Remarks</P>
You can use the <SPAN CLASS="eln">KeyPreview</SPAN> property to create a keyboard-handling procedure for a form. For example, when an application uses function keys, setting the <SPAN CLASS="eln">KeyPreview</SPAN> property to <SPAN CLASS="eln">True</SPAN> allows you to process keystrokes at the form level rather than writing code for each control that might receive keystroke events.</P>
To handle keyboard events only at the form level and prevent controls from receiving keyboard events, set the KeyAscii argument to 0 in the form's KeyPress event procedure, and set the KeyCode argument to 0 in the form's KeyDown and KeyUp event procedures.</P>
If a form has no visible or enabled controls, it automatically receives all keyboard events.</P>
See Also</P>
KeyDown, KeyUp events, KeyPress event.</P>
Example</P>
In the following example, the <SPAN CLASS="eln">KeyPreview</SPAN> property is set to <SPAN CLASS="eln">True</SPAN> (–1) in the form's Load event procedure. This causes the form to receive keyboard events before they are received by any control. The form KeyDown event then checks the KeyCode argument value to determine if the <SPAN CLASS="kn">F2</SPAN>, <SPAN CLASS="kn">F3</SPAN>, or <SPAN CLASS="kn">F4</SPAN> keys were pushed.</P>

<pre><code>Private Sub Form_Load()
    Me.KeyPreview = True
End Sub

Private Sub Form_KeyDown(KeyCode As Integer, Shift As Integer)
    Select Case KeyCode
        Case vbKeyF2
            ' Process F2 key events.
        Case vbKeyF3
            ' Process F3 key events.
        Case vbKeyF4
            ' Process F4 key events.
        Case Else
    End Select
End Sub</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
