<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DLookup Function</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>DLookup Function</H2>Description</P>
You can use the <SPAN CLASS="eln">DLookup</SPAN> function to get the value of a particular field from a specified set of records (a <SPAN CLASS="pop">domain</SPAN>). Use the <SPAN CLASS="eln">DLookup</SPAN> function in Visual Basic, a <SPAN CLASS="pop">macro</SPAN>, a query expression, or a <SPAN CLASS="pop">calculated control</SPAN> on a form or report.</P>
You can use the <SPAN CLASS="eln">DLookup</SPAN> function to display the value of a field that isn't in the record source for your form or report. For example, suppose you have a form based on an Order Details table. The form displays the OrderID, ProductID, UnitPrice, Quantity, and Discount fields. However, the ProductName field is in another table, the Products table. You could use the <SPAN CLASS="eln">DLookup</SPAN> function in a calculated control to display the ProductName on the same form.</P>
Syntax</P>
<SPAN CLASS="l">DLookup(</SPAN><SPAN CLASS="p">expr</SPAN><SPAN CLASS="l">, </SPAN><SPAN CLASS="p">domain</SPAN>[<SPAN CLASS="l">, </SPAN><SPAN CLASS="p">criteria</SPAN>]<SPAN CLASS="l">)</SPAN></P>
The <SPAN CLASS="eln">DLookup</SPAN> function has the following arguments.</P>

<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="90pt" VALIGN="TOP"><COL WIDTH="269pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Argument</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">expr</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">An expression that identifies the field whose value you want to return. It can be a <SPAN CLASS="pop">string expression</SPAN> identifying a field in a table or query, or it can be an expression that performs a <SPAN CLASS="jump">calculation on data in that field</SPAN>. In <SPAN CLASS="p">expr</SPAN>, you can include the name of a field in a table, a control on a form, a constant, or a function. If <SPAN CLASS="p">expr</SPAN>  includes a function, it can be either built-in or user-defined, but not another domain aggregate or <SPAN CLASS="jump">SQL aggregate</SPAN> function.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">domain</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">A string expression identifying the set of records that constitutes the domain. It can be a table name or a query name.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">criteria</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">An optional string expression used to restrict the range of data on which the <SPAN CLASS="eln">DLookup</SPAN> function is performed. For example, <SPAN CLASS="p">criteria</SPAN> is often equivalent to the WHERE clause in an SQL expression, without the word WHERE. If <SPAN CLASS="p">criteria</SPAN> is omitted, the <SPAN CLASS="eln">DLookup</SPAN> function evaluates <SPAN CLASS="p">expr</SPAN>  against the entire domain. Any field that is included in <SPAN CLASS="p">criteria</SPAN> must also be a field in <SPAN CLASS="p">domain</SPAN>; otherwise, the <SPAN CLASS="eln">DLookup</SPAN> function returns a Null.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
The <SPAN CLASS="eln">DLookup</SPAN> function returns a single field value based on the information specified in <SPAN CLASS="p">criteria</SPAN>. Although <SPAN CLASS="p">criteria</SPAN> is an optional argument, if you don't supply a value for <SPAN CLASS="p">criteria</SPAN>, the <SPAN CLASS="eln">DLookup</SPAN> function returns a random value in the domain.</P>
If no record satisfies <SPAN CLASS="p">criteria</SPAN> or if <SPAN CLASS="p">domain</SPAN> contains no records, the <SPAN CLASS="eln">DLookup</SPAN> function returns a <SPAN CLASS="eln">Null</SPAN>.</P>
If more than one field meets criteria, the <SPAN CLASS="eln">DLookup</SPAN> function returns the first occurrence. You should specify criteria that will ensure that the field value returned by the <SPAN CLASS="eln">DLookup</SPAN> function is unique. You may want to use a <SPAN CLASS="pop">primary key</SPAN> value for your criteria, such as <SPAN CLASS="cte">[EmployeeID]</SPAN> in the following example, to ensure that the <SPAN CLASS="eln">DLookup</SPAN> function returns a unique value:</P>

<pre><code>Dim varX As Variant
varX = DLookup("[LastName]", "Employees", "[EmployeeID] = 1")</code></pre>
Whether you use the <SPAN CLASS="eln">DLookup</SPAN> function in a macro or module, a query expression, or a calculated control, you must construct the <SPAN CLASS="p">criteria</SPAN> argument carefully to ensure that it will be evaluated correctly.</P>
You can use the <SPAN CLASS="eln">DLookup</SPAN> function to specify criteria in the <SPAN CLASS="eln">Criteria</SPAN> row of a query, within a calculated field expression in a query, or in the <SPAN CLASS="eln">Update To</SPAN> row in an <SPAN CLASS="pop">update query</SPAN>.</P>
You can also use the <SPAN CLASS="eln">DLookup</SPAN> function in an expression in a calculated control on a form or report if the field that you need to display isn't in the record source on which your form or report is based. For example, suppose you have an Order Details form based on an Order Details table with a text box called ProductID that displays the ProductID field. To look up ProductName from a Products table based on the value in the text box, you could create another text box and set its ControlSource property to the following expression:</P>

<pre><code>=DLookup("[ProductName]", "Products", "[ProductID] ="
&amp; Forms![Order Details]!ProductID)</code></pre>
<SPAN CLASS="nh">Tips</SPAN></P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">Although you can use the <SPAN CLASS="eln">DLookup</SPAN> function to display a value from a field in a <SPAN CLASS="pop">foreign table</SPAN>, it may be more efficient to create a query that contains the fields that you need from both tables and then to base your form or report on that query.</LI><LI CLASS="ULI1">You can also use the Lookup Wizard to find values in a foreign table.
</LI></UL></SPAN><SPAN CLASS="nh">Note</SPAN>   Unsaved changes to records in <SPAN CLASS="p">domain</SPAN> aren't included when you use this function. If you want the <SPAN CLASS="eln">DLookup</SPAN> function to be based on the changed values, you must first save the changes by clicking <SPAN CLASS="eln">Save Record</SPAN> on the <SPAN CLASS="eln">File</SPAN> menu, moving the focus to another record, or by using the Update method.</P>
Example</P>
The following example returns name information from the CompanyName field of the record satisfying <SPAN CLASS="p">criteria</SPAN>. The domain is a Shippers table. The <SPAN CLASS="p">criteria</SPAN> argument restricts the resulting set of records to those for which ShipperID equals 1.</P>

<pre><code>Dim varX As Variant
varX = DLookup("[CompanyName]", "Shippers", "[ShipperID] = 1")</code></pre>
The next example from the Shippers table uses the form control ShipperID to provide <SPAN CLASS="p">criteria</SPAN> for the <SPAN CLASS="eln">DLookup</SPAN> function. Note that the reference to the control isn't included in the quotation marks that denote the strings. This ensures that each time the <SPAN CLASS="eln">DLookup</SPAN> function is called, Microsoft Access will obtain the current value from the control.</P>

<pre><code>Dim varX As Variant
varX = DLookup("[CompanyName]", "Shippers", "[ShipperID] = " _
    &amp; Forms!Shippers!ShipperID)</code></pre>
The next example uses a variable, <SPAN CLASS="cte">intSearch</SPAN>, to get the value.</P>

<pre><code>Dim intSearch As Integer, varX As Variant
intSearch = 1
varX = DLookup("[CompanyName]", "Shippers", _
    "[ShipperID] = " &amp; intSearch)</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
