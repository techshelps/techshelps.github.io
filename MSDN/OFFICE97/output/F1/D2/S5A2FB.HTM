<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Source Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Source Property</H1>Applies To</P>
<SPAN CLASS="eln">Error</SPAN> object.</P>
Description</P>
Returns the name of the object or application that originally generated the error.</P>
Return Values</P>
The return value is a <SPAN CLASS="eln">String</SPAN> representing the object or application that generated the error.</P>
Remarks</P>
The <SPAN CLASS="eln">Source</SPAN> property value is usually the object's <SPAN CLASS="pop">class</SPAN> name or programmatic ID. Use the <SPAN CLASS="eln">Source</SPAN> property to provide your users with information when your code is unable to handle an error generated in an object in another application.</P>
For example, if you access Microsoft Excel and it generates a "Division by zero" error, Microsoft Excel sets <SPAN CLASS="eln">Error.Number</SPAN> to the Microsoft Excel code for that error and sets the&nbsp;<SPAN CLASS="eln">Source</SPAN> property to <SPAN CLASS="cte">Excel.Application</SPAN>. Note that if the error is generated in another object called by Microsoft Excel, Microsoft Excel intercepts the error and still sets <SPAN CLASS="eln">Error.Number</SPAN> to the Microsoft Excel code. However, the other <SPAN CLASS="eln">Error</SPAN> object properties (including <SPAN CLASS="eln">Source</SPAN>) will retain the values as set by the object that generated the&nbsp;error. The <SPAN CLASS="eln">Source</SPAN> property always contains the name of the object that originally generated the error.</P>
Based on all of the error documentation, you can write code that will handle the error appropriately. If your error handler fails, you can use the Error object information to describe the error to your user, using the <SPAN CLASS="eln">Source</SPAN> property and the other <SPAN CLASS="eln">Error</SPAN> properties to give the user information about which object originally caused the error, the description of the error, and so forth.</P>
<SPAN CLASS="nh">Note</SPAN>   The <SPAN CLASS="eln">On Error Resume Next</SPAN> construct may be preferable to <SPAN CLASS="eln">On Error GoTo</SPAN> when dealing with errors generated during access to other objects. Checking the <SPAN CLASS="eln">Error</SPAN> object property after each interaction with an object removes ambiguity about which object your code was accessing when the error occurred. Thus, you can be sure which object placed the error code in <SPAN CLASS="eln">Error.Number</SPAN>, as&nbsp;well as which object originally generated the error (<SPAN CLASS="eln">Error.Source</SPAN>).</P>
See Also</P>
<SPAN CLASS="eln">Description</SPAN> property.</P>
Specifics (Microsoft Access)</P>
The DAO <SPAN CLASS="eln">Source</SPAN> property applies to the <SPAN CLASS="eln">Error</SPAN> object and can be read only from Visual&nbsp;Basic.</P>
<SPAN CLASS="nh">Note</SPAN>&nbsp;&nbsp;&nbsp;Don't confuse this property with the Microsoft Access <SPAN CLASS="eln">Source</SPAN> property, which applies to a query and specifies the source <SPAN CLASS="pop">connection string</SPAN> and source database for the query's input table or query.</P>
Example</P>
See the <SPAN CLASS="eln">Description</SPAN> property example.</P>
<HR CLASS="rr"></FONT></BODY>
</HTML>
