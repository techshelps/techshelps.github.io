<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MouseDown, MouseUp Events</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>MouseDown, MouseUp Events</H2>Applies To</P>
Bound Object Frame control, Chart control, Check Box control, Combo Box control, Command Button control, Form, Form section, Image control, Label control, List Box control, Option Button control, Option Group control, Page, Rectangle control, Tab control, Text Box control, Toggle Button control, Unbound Object Frame control.</P>
Description</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">The MouseDown event occurs when the user presses a mouse button.</LI><LI CLASS="ULI1">The MouseUp event occurs when the user releases a mouse button.
</LI></UL></SPAN><SPAN CLASS="nh">Notes</SPAN></P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">The MouseDown and MouseUp events apply only to <SPAN CLASS="pop">forms</SPAN>, <SPAN CLASS="jump">form sections</SPAN>, and <SPAN CLASS="pop">controls</SPAN> on a form, not controls on a report.</LI><LI CLASS="ULI1">These events don't apply to a <SPAN CLASS="pop">label</SPAN> attached to another control, such as the label for a <SPAN CLASS="pop">text box</SPAN>. They apply only to "freestanding" labels. Pressing and releasing a mouse button in an attached label has the same effect as pressing and releasing the button in the associated control. The normal events for the control occur; no separate events occur for the attached label.
</LI></UL></SPAN>Remarks</P>
To run a <SPAN CLASS="pop">macro</SPAN> or <SPAN CLASS="pop">event procedure</SPAN> when these events occur, set the OnMouseUp<SPAN CLASS="jump"> or </SPAN>OnMouseDown property to the name of the macro or to [Event Procedure].</P>
You can use a MouseDown or MouseUp event to specify what happens when a particular mouse button is pressed or released. Unlike the <SPAN CLASS="jump">Click</SPAN> and <SPAN CLASS="jump">DblClick</SPAN> events, the MouseDown and MouseUp events enable you to distinguish between the left, right, and middle mouse buttons. You can also write code for mouse-keyboard combinations that use the <SPAN CLASS="kn">SHIFT</SPAN>, <SPAN CLASS="kn">CTRL</SPAN>, and <SPAN CLASS="kn">ALT</SPAN> keys.</P>
To cause a MouseDown or MouseUp event for a form to occur, press the mouse button in a blank area or <SPAN CLASS="pop">record selector</SPAN> on the form. To cause a MouseDown or MouseUp event for a form section to occur, press the mouse button in a blank area of the form section.</P>
The following apply to both MouseDown and MouseUp events:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">If a mouse button is pressed while the pointer is over a form or control, that object receives all mouse events up to and including the last MouseUp event.</LI><LI CLASS="ULI1">If mouse buttons are pressed in succession, the object that receives the mouse event after the first press receives all mouse events until all buttons are released.
</LI></UL></SPAN>To respond to an event caused by moving the mouse, you use a <SPAN CLASS="jump">MouseMove</SPAN> event.</P>
See Also</P>
Click event, DblClick event, Enter, Exit events, Event properties, GotFocus, LostFocus events, MouseMove event.</P>
<HR CLASS="rr"></FONT></BODY>
</HTML>
