<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SetMenuItem Method</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>SetMenuItem Method</H2>Applies To</P>
<SPAN CLASS="eln">DoCmd</SPAN> object.</P>
Description</P>
The <SPAN CLASS="eln">SetMenuItem</SPAN> method carries out the <SPAN CLASS="jump">SetMenuItem</SPAN> action in Visual Basic. For more information on how the action and its arguments work, see the action topic.</P>
<SPAN CLASS="nh">Note</SPAN>   The <SPAN CLASS="eln">SetMenuItem</SPAN> method works only with custom <SPAN CLASS="pop">menu bars</SPAN> and <SPAN CLASS="pop">global menu bars</SPAN> created by using <SPAN CLASS="pop">menu bar macros</SPAN>. The <SPAN CLASS="eln">SetMenuItem</SPAN> method is included in this version of Microsoft Access only for compatibility with previous versions. It doesn't work with the new <SPAN CLASS="pop">command bars</SPAN> functionality.</P>
Syntax</P>
<SPAN CLASS="l">DoCmd.SetMenuItem </SPAN><SPAN CLASS="p">menuindex</SPAN>[<SPAN CLASS="l">, </SPAN><SPAN CLASS="p">commandindex</SPAN>][<SPAN CLASS="l">, </SPAN><SPAN CLASS="p">subcommandindex</SPAN>][<SPAN CLASS="l">, </SPAN><SPAN CLASS="p">flag</SPAN>]</P>
The <SPAN CLASS="eln">SetMenuItem</SPAN> method has the following arguments.</P>

<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="93pt" VALIGN="TOP"><COL WIDTH="266pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Argument</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">menuindex</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">An integer, counting from 0, that's the valid index of a menu on the custom menu bar or global menu bar for the active window, as defined in the menu bar macro for the custom menu bar or global menu bar.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">If you select a menu with this argument and leave the <SPAN CLASS="p">commandindex</SPAN> and <SPAN CLASS="p">subcommandindex</SPAN> arguments blank (or set them to –1), you can enable or disable the menu name itself. You can't, however, check or uncheck a menu name (Microsoft Access ignores the <SPAN CLASS="eln">acMenuCheck</SPAN> and <SPAN CLASS="eln">acMenuUncheck</SPAN> settings for the <SPAN CLASS="p">flag</SPAN> argument for menu names).</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">commandindex</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">An integer, counting from 0, that's the valid index of a command on the menu selected by the <SPAN CLASS="p">menuindex</SPAN> argument, as defined in the <SPAN CLASS="pop">macro group</SPAN> that defines the selected menu for the custom menu bar or global menu bar for the active window.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">subcommandindex</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">An integer, counting from 0, that's the valid index of a subcommand in the submenu selected by the <SPAN CLASS="p">commandindex</SPAN> argument, as defined in the macro group that defines the selected submenu for the custom menu bar or global menu bar for the active window.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">flag</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">One of the following <SPAN CLASS="pop">intrinsic constants</SPAN>:</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">acMenuCheck</SPAN><BR><SPAN CLASS="eln">acMenuGray</SPAN><BR><SPAN CLASS="eln">acMenuUncheck</SPAN><BR><SPAN CLASS="eln">acMenuUngray</SPAN> (default)</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">If you leave this argument blank, the default constant<BR>(<SPAN CLASS="eln">acMenuUngray</SPAN>) is assumed.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
You can leave an optional argument blank in the middle of the syntax, but you must include the argument's comma. If you leave a trailing argument blank, don't use a comma following the last argument you specify.</P>
See Also</P>
AddMenu action, <SPAN CLASS="eln">DoMenuItem</SPAN> method, <SPAN CLASS="eln">MenuBar</SPAN> property, SetMenuItem action.</P>
Example</P>
The following example uses the <SPAN CLASS="eln">SetMenuItem</SPAN> method to disable the second command in the first menu on the custom menu bar for the active window:</P>

<pre><code>DoCmd.SetMenuItem 0, 1, , acMenuGray</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
