<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Updatable Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Updatable Property</H1>Applies To</P>
<SPAN CLASS="eln">Connection</SPAN> object, <SPAN CLASS="eln">Database</SPAN> object, Dynamic-Type <SPAN CLASS="eln">Recordset</SPAN> object, Dynaset-Type <SPAN CLASS="eln">Recordset</SPAN> object, Forward-Only-Type <SPAN CLASS="eln">Recordset</SPAN> object, <SPAN CLASS="eln">QueryDef</SPAN> object, <SPAN CLASS="eln">Recordset</SPAN> object, Snapshot-Type <SPAN CLASS="eln">Recordset</SPAN> object, Table-Type <SPAN CLASS="eln">Recordset</SPAN> object, <SPAN CLASS="eln">TableDef</SPAN> object.</P>
Description</P>
Returns a value that indicates whether you can change a <SPAN CLASS="pop">DAO object</SPAN>.</P>
Return Values</P>
The return value is a<SPAN CLASS="eln"> </SPAN>Boolean data type that is<SPAN CLASS="eln"> True</SPAN> if the object can be changed or updated. (Snapshot- and forward-only-type Recordset objects always return <SPAN CLASS="eln">False</SPAN>.)</P>
Remarks</P>
Depending on the object, if the <SPAN CLASS="eln">Updatable</SPAN> property setting is <SPAN CLASS="eln">True</SPAN>, the associated statement in the following table is true.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="90pt" VALIGN="TOP"><COL WIDTH="270pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Object</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Type indicates</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">Database</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The object can be changed.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">QueryDef</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The query definition can be changed.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">Recordset</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The records can be updated.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">TableDef</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The table definition can be changed.</P></TD></TR></TBODY></TABLE>
<BR></P>The <SPAN CLASS="eln">Updatable</SPAN> property setting is always <SPAN CLASS="eln">True</SPAN> for a newly created <SPAN CLASS="eln">TableDef</SPAN> object and <SPAN CLASS="eln">False</SPAN> for a <SPAN CLASS="pop">linked</SPAN> <SPAN CLASS="eln">TableDef</SPAN> object. A new <SPAN CLASS="eln">TableDef</SPAN> object can be appended only to a database for which the current user has write <SPAN CLASS="pop">permission</SPAN>.</P>
Many types of objects can contain fields that can't be updated. For example, you can create a dynaset-type <SPAN CLASS="eln">Recordset</SPAN> object in which only some fields can be changed. These fields can be fixed or contain data that increments automatically, or the dynaset can result from a query that combines updatable and nonupdatable tables.</P>
If the object contains only read-only fields, the value of the <SPAN CLASS="eln">Updatable</SPAN> property is <SPAN CLASS="eln">False</SPAN>. When one or more fields are updatable, the property's value is <SPAN CLASS="eln">True</SPAN>. You can edit only the updatable fields. A trappable error occurs if you try to assign a new value to a read-only field.</P>
The <SPAN CLASS="eln">Updatable</SPAN> property of a <SPAN CLASS="eln">QueryDef</SPAN> object is set to <SPAN CLASS="eln">True</SPAN> if the query definition can be updated, even if the resulting <SPAN CLASS="eln">Recordset</SPAN> object isn't updatable.</P>
Because an updatable object can contain read-only fields, check the DataUpdatable property of each field in the <SPAN CLASS="eln">Fields</SPAN> collection of a <SPAN CLASS="eln">Recordset</SPAN> object before you edit a&nbsp;record.</P>
See Also</P>
<SPAN CLASS="eln">Field</SPAN> object.</P>
Example</P>
This example demonstrates the <SPAN CLASS="eln">Updatable</SPAN> property for a <SPAN CLASS="eln">Database</SPAN>, four types of <SPAN CLASS="eln">Recordset</SPAN> objects, a <SPAN CLASS="eln">TableDef</SPAN>, and a <SPAN CLASS="eln">QueryDef</SPAN>.</P>

<pre><code>Sub UpdatableX()

    Dim dbsNorthwind As Database
    Dim rstEmployees As Recordset

    Set dbsNorthwind = OpenDatabase("Northwind.mdb")

    With dbsNorthwind
        Debug.Print .Name
        Debug.Print "    Updatable = " &amp; .Updatable

        ' Default is dbOpenTable.
        Set rstEmployees = .OpenRecordset("Employees")
        Debug.Print _
            "Table-type recordset from Employees table"
        Debug.Print "    Updatable = " &amp; _
            rstEmployees.Updatable
        rstEmployees.Close

        Set rstEmployees = .OpenRecordset("Employees", _
            dbOpenDynaset)
        Debug.Print _
            "Dynaset-type recordset from Employees table"
        Debug.Print "    Updatable = " &amp; _
            rstEmployees.Updatable
        rstEmployees.Close

        Set rstEmployees = .OpenRecordset("Employees", _
            dbOpenSnapshot)
        Debug.Print _
            "Snapshot-type recordset from Employees table"
        Debug.Print "    Updatable = " &amp; _
            rstEmployees.Updatable
        rstEmployees.Close
        Set rstEmployees = .OpenRecordset("Employees", _
            dbOpenForwardOnly)
        Debug.Print _
            "Forward-only-type recordset from Employees table"
        Debug.Print "    Updatable = " &amp; _
            rstEmployees.Updatable
        rstEmployees.Close

        Debug.Print "'" &amp; .TableDefs(0).Name &amp; "' TableDef"
        Debug.Print "    Updatable = " &amp; _
            .TableDefs(0).Updatable

        Debug.Print "'" &amp; .QueryDefs(0).Name &amp; "' QueryDef"
        Debug.Print "    Updatable = " &amp; _
            .QueryDefs(0).Updatable

        .Close
    End With

End Sub</code></pre>
Example (Microsoft Access)</P>
The following example adds a record to a <SPAN CLASS="eln">Recordset</SPAN> object if the object's <SPAN CLASS="eln">Updatable</SPAN> property setting is <SPAN CLASS="eln">True</SPAN> ( – 1).</P>

<pre><code>Sub UpdateData()
    Dim dbs As Database, rstUnknown As Recordset

    ' Return reference to current database.
    Set dbs = CurrentDb
    ' Open table-type Recordset object.
    Set rstUnknown = dbs.OpenRecordset("Unfamiliar Table")
    ' Check Updatable property before adding new record.
    If rstUnknown.Updatable = True Then
        With rstUnknown
            .AddNew
            !SomeField = "Some new data"
            .Update
        End With
    End If
    rstUnknown.Close
    Set dbs = Nothing
End Sub</code></pre>
Example (Microsoft Excel)</P>
This example prompts the user to select a cell that contains a value for the CONTACT field of the Customer recordset in the Nwindex.mdb database. The example then checks to see whether the recordset can be updated. If so, the example adds a new record to the recordset, using the value in the selected cell.</P>
To create the Nwindex.mdb database, run the Microsoft Excel example for the <SPAN CLASS="lee">CreateDatabase</SPAN> method.</P>

<pre><code>Dim db As Database, rs As Recordset
Sheets("Sheet1").Activate
cellToCopy = Application.InputBox("What cell value do you want" _
    &amp; " to update as contact?", Type:=8)
If cellToCopy = False Then        ' User cancelled InputBox.
    Exit Sub
End If
Set db = Workspaces(0).OpenDatabase(Application.Path &amp; "\NWINDEX.MDB")
Set rs = db.OpenRecordset("Customer")
If rs.Updatable = True Then
    rs.AddNew
    rs("CONTACT") = cellToCopy
    rs.Update
    rs.MoveLast
    MsgBox "The new contact is " &amp; rs("CONTACT").Value
Else
    MsgBox "The recordset cannot be modified."
End If
rs.Close
db.Close</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
