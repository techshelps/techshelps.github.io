<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BeforeUpdate, AfterUpdate Events -- Event Procedures</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>BeforeUpdate, AfterUpdate Events — Event Procedures</H2>Description</P>
To create an <SPAN CLASS="pop">event procedure</SPAN> that runs when the BeforeUpdate or AfterUpdate event occurs, set the BeforeUpdate<SPAN CLASS="jump"> or </SPAN>AfterUpdate property to <SPAN CLASS="eln">[Event Procedure]</SPAN>, and click the <SPAN CLASS="eln">Build</SPAN> button.</P>
Syntax</P>
<SPAN CLASS="l">Private Sub Form_BeforeUpdate(</SPAN>Cancel<SPAN CLASS="l"> As Integer)</SPAN></P>
<SPAN CLASS="l">Private Sub </SPAN><SPAN CLASS="p">controlname</SPAN><SPAN CLASS="l">_BeforeUpdate(</SPAN>Cancel<SPAN CLASS="l"> As Integer)</SPAN></P>
<SPAN CLASS="eln">Private Sub Form_AfterUpdate( )</SPAN></P>
<SPAN CLASS="eln">Private Sub </SPAN><SPAN CLASS="p">controlname</SPAN><SPAN CLASS="eln">_AfterUpdate( )</SPAN></P>
The BeforeUpdate event procedure has the following arguments.</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="87pt" VALIGN="TOP"><COL WIDTH="272pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Argument</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">controlname</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The name of the <SPAN CLASS="pop">control</SPAN> whose BeforeUpdate event procedure you want to run.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Cancel</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The setting determines if the BeforeUpdate event occurs. Setting the Cancel argument to <SPAN CLASS="eln">True</SPAN> (–1) cancels the BeforeUpdate event.</P></TD></TR></TBODY></TABLE>
<BR></P>The AfterUpdate event procedure has the following argument.</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="87pt" VALIGN="TOP"><COL WIDTH="272pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Argument</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">controlname</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The name of the control whose AfterUpdate event procedure you want to run.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
You can't cancel the AfterUpdate event.</P>
You can use an AfterUpdate event procedure to display a different page in the <SPAN CLASS="pop">form</SPAN> or move the focus to a particular control or record. For example, when the user enters a value in a Category control on a form, you can use the GoToPage method in the AfterUpdate event procedure for the form to move the focus to the page of the form that contains the controls for that category.</P>
See Also</P>
BeforeUpdate, AfterUpdate events&nbsp;— macros.</P>
Example</P>
The following example shows how you can use a BeforeUpdate event procedure to check whether a product name has already been entered in the database. After the user types a product name in the ProductName box, the value is compared to the ProductName field in the Products table. If there is a matching value in the Products table, a message is displayed that informs the user that the product has already been entered.</P>
To try the example, add the following event procedure to a form named Products that contains a text box called ProductName.</P>

<pre><code>Private Sub ProductName_BeforeUpdate(Cancel As Integer)
    If(Not IsNull(DLookup("[ProductName]", "Products", _
            "[ProductName] ='" &amp; Me!ProductName &amp; "'"))) Then
        MsgBox "Product has already been entered in the database."
        Cancel = True
        Me!ProductName.Undo
    End If
End Sub</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
