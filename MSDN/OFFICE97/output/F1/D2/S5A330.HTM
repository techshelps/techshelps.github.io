<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ORDER BY Clause</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>ORDER BY Clause</H1>Description</P>
Sorts a query's resulting records on a specified field or fields in ascending or descending order.</P>
Syntax</P>
SELECT <SPAN CLASS="p">fieldlist</SPAN><BR>FROM <SPAN CLASS="p">table</SPAN><BR>WHERE <SPAN CLASS="p">selectcriteria</SPAN><BR>[ORDER BY <SPAN CLASS="p">field1</SPAN> [ASC | DESC ][, <SPAN CLASS="p">field2</SPAN> [ASC | DESC ]][, ...]]]</P>
A SELECT statement containing an ORDER BY clause has these parts:</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="76pt" VALIGN="TOP"><COL WIDTH="284pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">fieldlist</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The name of the field or fields to be retrieved along with any field-name <SPAN CLASS="pop">aliases</SPAN>, <SPAN CLASS="jump">SQL aggregate functions</SPAN>, selection predicates (<SPAN CLASS="jump">ALL, DISTINCT, DISTINCTROW, or TOP</SPAN>), or other <SPAN CLASS="jump">SELECT</SPAN> statement options.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">table</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The name of the table from which records are retrieved. For more information, see the <SPAN CLASS="jump">FROM</SPAN> clause.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">selectcriteria</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Selection criteria. If the statement includes a <SPAN CLASS="jump">WHERE</SPAN> clause, the <SPAN CLASS="pop">Microsoft Jet database engine</SPAN> orders values after applying the WHERE conditions to the records.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">field1</SPAN>, <SPAN CLASS="p">field2</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The names of the fields on which to sort records.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
ORDER BY is optional. However, if you want your data displayed in sorted order, then you must use ORDER BY.</P>
The default <SPAN CLASS="pop">sort order</SPAN> is ascending (A&nbsp;to&nbsp;Z, 0&nbsp;to&nbsp;9). Both of the following examples sort employee names in last name order:</P>

<pre><code>SELECT LastName, FirstName
FROM Employees
ORDER BY LastName;</code></pre>

<pre><code>SELECT LastName, FirstName
FROM Employees
ORDER BY LastName ASC;</code></pre>
To sort in descending order (Z&nbsp;to&nbsp;A, 9&nbsp;to&nbsp;0), add the DESC reserved word to the end of each field you want to sort in descending order. The following example selects salaries and sorts them in descending order:</P>

<pre><code>SELECT LastName, Salary
FROM Employees
ORDER BY Salary DESC, LastName;</code></pre>
If you specify a field containing <SPAN CLASS="pop">Memo</SPAN> or <SPAN CLASS="pop">OLE Object</SPAN> data in the ORDER BY clause, an error occurs. The Microsoft Jet database engine doesn't sort on fields of these types.</P>
ORDER BY is usually the last item in an <SPAN CLASS="pop">SQL statement</SPAN>.</P>
You can include additional fields in the ORDER BY clause. Records are sorted first by the first field listed after ORDER BY. Records that have equal values in that field are then sorted by the value in the second field listed, and so on.</P>
See Also</P>
ALL, DISTINCT, DISTINCTROW, TOP predicates, FROM clause, GROUP BY clause, HAVING clause, SELECT statement, SELECT...INTO statement, WHERE clause.</P>
Specifics (Microsoft Access)</P>
In Microsoft Access, an ORDER BY clause sorts the displayed data on a specified field or fields in ascending or descending order. The use of an ORDER BY clause is equivalent to clicking <SPAN CLASS="eln">Ascending</SPAN> or <SPAN CLASS="eln">Descending</SPAN> in a <SPAN CLASS="eln">Sort</SPAN> cell in the <SPAN CLASS="pop">query design grid</SPAN>.</P>
Example</P>
The SQL statement shown in the following example uses the ORDER BY clause to sort records by last name in descending order (Z&nbsp;to&nbsp;A).</P>
This example calls the EnumFields procedure, which you can find in the SELECT statement example.</P>

<pre><code>Sub OrderByX()

    Dim dbs As Database, rst As Recordset

    ' Modify this line to include the path to Northwind
    ' on your computer.
    Set dbs = OpenDatabase("Northwind.mdb")

    ' Select the last name and first name values from
    ' the Employees table, and sort them in descending
    ' order.
    Set rst = dbs.OpenRecordset("SELECT LastName, " _
        &amp; "FirstName FROM Employees " _
        &amp; "ORDER BY LastName DESC;")

    ' Populate the Recordset.
    rst.MoveLast

    ' Call EnumFields to print recordset contents.
    EnumFields rst, 12

    dbs.Close

End Sub</code></pre>
Example (Microsoft Access)</P>
To try the following examples in Microsoft Access, first create a new query in the Northwind sample database. Close the <SPAN CLASS="eln">Show Table</SPAN> dialog box without specifying a table or query. Switch to SQL view, paste an individual example into the SQL window, and run the query.</P>
The following SQL statements use the ORDER BY clause to sort records alphabetically and then by category.</P>
This example sorts the records by last name in descending order (Z&nbsp;to&nbsp;A):</P>

<pre><code>SELECT LastName, FirstName FROM Employees ORDER BY LastName DESC;</code></pre>
The next example sorts by category ID first, and then by product name:</P>

<pre><code>SELECT CategoryID, ProductName, UnitPrice FROM Products
ORDER BY CategoryID, ProductName;</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
