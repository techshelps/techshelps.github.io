<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OutputTo Method</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>OutputTo Method</H2>Applies To</P>
<SPAN CLASS="eln">DoCmd</SPAN> object.</P>
Description</P>
The <SPAN CLASS="eln">OutputTo</SPAN> method carries out the <SPAN CLASS="jump">OutputTo</SPAN> action in Visual Basic. For more information on how the action and its arguments work, see the action topic.</P>
Syntax</P>
<SPAN CLASS="l">DoCmd.OutputTo </SPAN><SPAN CLASS="p">objecttype</SPAN>[<SPAN CLASS="l">, </SPAN><SPAN CLASS="p">objectname</SPAN>][<SPAN CLASS="l">, </SPAN><SPAN CLASS="p">outputformat</SPAN>][<SPAN CLASS="l">, </SPAN><SPAN CLASS="p">outputfile</SPAN>][<SPAN CLASS="l">, </SPAN><SPAN CLASS="p">autostart</SPAN>]<BR>ú[<SPAN CLASS="l">, </SPAN><SPAN CLASS="p">templatefile</SPAN>]</P>
The <SPAN CLASS="eln">OutputTo</SPAN> method has the following arguments.</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="91pt" VALIGN="TOP"><COL WIDTH="268pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Argument</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">  </P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">objecttype</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">One of the following <SPAN CLASS="pop">intrinsic constants</SPAN>:</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">acOutputForm</SPAN><BR><SPAN CLASS="eln">acOutputModule</SPAN><BR><SPAN CLASS="eln">acOutputQuery</SPAN><BR><SPAN CLASS="eln">acOutputReport</SPAN><BR><SPAN CLASS="eln">acOutputTable</SPAN></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">objectname</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">A <SPAN CLASS="pop">string expression</SPAN> that's the valid name of an object of the type selected by the <SPAN CLASS="p">objecttype</SPAN> argument. If you want to output the active object, specify the object's type for the <SPAN CLASS="p">objecttype</SPAN> argument and leave this argument blank.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">If you run Visual Basic code containing the <SPAN CLASS="eln">OutputTo</SPAN> method in a <SPAN CLASS="pop">library database</SPAN>, Microsoft Access looks for the object with this name first in the library database, then in the current database.</P></TD></TR></TBODY></TABLE>
<BR></P><I>(continued)</I></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="91pt" VALIGN="TOP"><COL WIDTH="268pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Argument</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">  </P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">outputformat</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">One of the following intrinsic constants:</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">acFormatActiveXServer<BR>acFormatHTML</SPAN><BR><SPAN CLASS="eln">acFormatIIS<BR>acFormatRTF</SPAN><BR><SPAN CLASS="eln">acFormatTXT</SPAN><BR><SPAN CLASS="eln">acFormatXLS</SPAN></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">If you leave this argument blank, Microsoft Access prompts you for the output format.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">outputfile</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">A string expression that's the full name, including the path, of the file you want to output the object to.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">If you leave this argument blank, Microsoft Access prompts you for an output file name.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">autostart</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Use <SPAN CLASS="eln">True</SPAN> (–1) to start the appropriate Microsoft Windows–based application immediately, with the file specified by the <SPAN CLASS="p">outputfile</SPAN> argument loaded. Use <SPAN CLASS="eln">False</SPAN> (0) if you don't want to start the application. This argument is ignored for Microsoft Internet Information Server (.htx, .idc) files and Microsoft ActiveX Server (*.asp) files.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">If you leave this argument blank, the default (<SPAN CLASS="eln">False</SPAN>) is assumed.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">templatefile</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">A string expression that's the full name, including the path, of the file you want to use as a template for an <SPAN CLASS="pop">HTML</SPAN>, <SPAN CLASS="pop">HTX</SPAN>, or <SPAN CLASS="pop">ASP</SPAN> file.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
<SPAN CLASS="pop">Modules</SPAN> can be output only in MS-DOS Text format, so if you specify <SPAN CLASS="eln">acOutputModule</SPAN> for the <SPAN CLASS="p">objecttype</SPAN> argument, you must specify <SPAN CLASS="eln">acFormatTXT</SPAN> for the <SPAN CLASS="p">outputformat</SPAN> argument. Microsoft Internet Information Server and Microsoft ActiveX Server formats are available only for tables, queries, and forms, so if you specify <SPAN CLASS="eln">acFormatIIS</SPAN> or <SPAN CLASS="eln">acFormatActiveXServer</SPAN> for the <SPAN CLASS="p">outputformat</SPAN> argument, you must specify <SPAN CLASS="eln">acOutputTable</SPAN>, <SPAN CLASS="eln">acOutputQuery</SPAN>, or <SPAN CLASS="eln">acOutputForm</SPAN> for the <SPAN CLASS="p">objecttype</SPAN> argument.</P>
You can leave an optional argument blank in the middle of the syntax, but you must include the argument's comma. If you leave a trailing argument blank, don't use a comma following the last argument you specify.</P>
See Also</P>
<SPAN CLASS="eln">DoCmd</SPAN> object, OutputTo action, <SPAN CLASS="eln">SendObject</SPAN> method.</P>
Example</P>
The following example outputs the Employees table in rich-text format (.rtf) to the Employee.rtf file and immediately opens the file in Microsoft Word for Windows:</P>

<pre><code>DoCmd.OutputTo acOutputTable, "Employees", acFormatRTF, _
    "Employee.rtf", True</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
