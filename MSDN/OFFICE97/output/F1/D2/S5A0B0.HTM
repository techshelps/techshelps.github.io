<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DAvg Function</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>DAvg Function</H2>Description</P>
You can use the <SPAN CLASS="eln">DAvg</SPAN> function to calculate the average of a set of values in a specified set of records (a <SPAN CLASS="pop">domain</SPAN>). Use the <SPAN CLASS="eln">DAvg</SPAN> function in Visual Basic code or in a <SPAN CLASS="pop">macro</SPAN>, in a query expression, or in a <SPAN CLASS="pop">calculated control</SPAN>.</P>
For example, you could use the <SPAN CLASS="eln">DAvg</SPAN> function in the criteria row of a select query on freight cost to restrict the results to those records where the freight cost exceeds the average. Or you could use an expression including the <SPAN CLASS="eln">DAvg</SPAN> function in a calculated control, and display the average value of previous orders next to the value of a new order.</P>
Syntax</P>
<SPAN CLASS="l">DAvg(</SPAN><SPAN CLASS="p">expr</SPAN><SPAN CLASS="l">, </SPAN><SPAN CLASS="p">domain</SPAN>[<SPAN CLASS="l">, </SPAN><SPAN CLASS="p">criteria</SPAN>]<SPAN CLASS="l">)</SPAN></P>
The <SPAN CLASS="eln">DAvg</SPAN> function has the following arguments.</P>

<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="90pt" VALIGN="TOP"><COL WIDTH="269pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Argument</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">expr</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">An expression that identifies the field containing the numeric data you want to average. It can be a <SPAN CLASS="pop">string expression</SPAN> identifying a field in a table or query, or it can be an expression that performs <SPAN CLASS="jump">a calculation on data in that field</SPAN>. In <SPAN CLASS="p">expr</SPAN>, you can include the name of a field in a table, a control on a form, a constant, or a function. If <SPAN CLASS="p">expr</SPAN>  includes a function, it can be either built-in or user-defined, but not another domain aggregate or <SPAN CLASS="jump">SQL aggregate</SPAN> function.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">domain</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">A string expression identifying the set of records that constitutes the domain. It can be a table name or a query name.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">criteria</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">An optional string expression used to restrict the range of data on which the <SPAN CLASS="eln">DAvg</SPAN> function is performed. For example, <SPAN CLASS="p">criteria</SPAN> is often equivalent to the WHERE clause in an SQL expression, without the word WHERE. If <SPAN CLASS="p">criteria</SPAN> is omitted, the <SPAN CLASS="eln">DAvg</SPAN> function evaluates <SPAN CLASS="p">expr </SPAN> against the entire domain. Any field that is included in <SPAN CLASS="p">criteria</SPAN> must also be a field in <SPAN CLASS="p">domain</SPAN>; otherwise the <SPAN CLASS="eln">DAvg</SPAN> function returns a Null.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
Records containing <SPAN CLASS="eln">Null</SPAN> values aren't included in the calculation of the average.</P>
Whether you use the <SPAN CLASS="eln">DAvg</SPAN> function in a macro or module, a query expression, or a calculated control, you must construct the <SPAN CLASS="p">criteria</SPAN> argument carefully to ensure that it will be evaluated correctly.</P>
You can use the <SPAN CLASS="eln">DAvg</SPAN> function to specify criteria in the <SPAN CLASS="eln">Criteria</SPAN> row of a query. For example, suppose you want to view a list of all products ordered in quantities above the average order quantity. You could create a query on the Orders, Order Details, and Products tables, and include the Product Name field and the Quantity field, with the following expression in the <SPAN CLASS="eln">Criteria</SPAN> row beneath the Quantity field:</P>

<pre><code>&gt;DAvg("[Quantity]", "Orders")</code></pre>
You can also use the <SPAN CLASS="eln">DAvg</SPAN> function within a calculated field expression in a query, or in the <SPAN CLASS="eln">Update To</SPAN> row of an <SPAN CLASS="pop">update query</SPAN>.</P>
<SPAN CLASS="nh">Note</SPAN>   You can use either the <SPAN CLASS="eln">DAvg</SPAN> or Avg function in a calculated field expression in a <SPAN CLASS="pop">totals query</SPAN>. If you use the <SPAN CLASS="eln">DAvg</SPAN> function, values are averaged before the data is grouped. If you use the <SPAN CLASS="eln">Avg</SPAN> function, the data is grouped before values in the field expression are averaged.</P>
Use the <SPAN CLASS="eln">DAvg</SPAN> function in a calculated control when you need to specify criteria to restrict the range of data on which the <SPAN CLASS="eln">DAvg</SPAN> function is performed. For example, to display the average cost of freight for shipments sent to California, set the ControlSource property of a text box to the following expression:</P>

<pre><code>=DAvg("[Freight]", "Orders", "[ShipRegion] = 'CA'")</code></pre>
If you simply want to average all records in <SPAN CLASS="p">domain</SPAN>, use the <SPAN CLASS="eln">Avg</SPAN> function.</P>
You can use the <SPAN CLASS="eln">DAvg</SPAN> function in a module or macro or in a calculated control on a form if a field that you need to display isn't in the record source on which your form is based. For example, suppose you have a form based on the Orders table, and you want to include the Quantity field from the Order Details table in order to display the average number of items ordered by a particular customer. You can use the <SPAN CLASS="eln">DAvg</SPAN> function to perform this calculation and display the data on your form.</P>
<SPAN CLASS="nh">Tips</SPAN></P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">If you use the <SPAN CLASS="eln">DAvg</SPAN> function in a calculated control, you may want to place the control on the form header or footer so that the value for this control is not recalculated each time you move to a new record.</LI><LI CLASS="ULI1">If the data type of the field from which <SPAN CLASS="p">expr</SPAN>  is derived is a number, the <SPAN CLASS="eln">DAvg</SPAN> function returns a Double data type. If you use the <SPAN CLASS="eln">DAvg</SPAN> function in a calculated control, include a <SPAN CLASS="jump">data type conversion function</SPAN> in the expression to improve performance.</LI><LI CLASS="ULI1">Although you can use the <SPAN CLASS="eln">DAvg</SPAN> function to determine the average of values in a field in a <SPAN CLASS="pop">foreign table</SPAN>, it may be more efficient to create a query that contains all of the fields that you need, and then base your form or report on that query.
</LI></UL></SPAN><SPAN CLASS="nh">Note</SPAN>   Unsaved changes to records in <SPAN CLASS="p">domain</SPAN> aren't included when you use this function. If you want the <SPAN CLASS="eln">DAvg</SPAN> function to be based on the changed values, you must first save the changes by clicking <SPAN CLASS="eln">Save Record</SPAN> on the <SPAN CLASS="eln">File</SPAN> menu, moving the focus to another record, or by using the Update method.</P>
See Also</P>
<SPAN CLASS="eln">Avg</SPAN> function ("SQL Language Reference"), <SPAN CLASS="eln">DCount</SPAN> function, <SPAN CLASS="eln">DSum</SPAN> function.</P>
Example</P>
The following example returns the average freight cost for orders shipped to the United Kingdom on or after January 1, 1996. The domain is an Orders table. The <SPAN CLASS="p">criteria</SPAN> argument restricts the resulting set of records to those for which ShipCountry equals UK and ShippedDate is greater than or equal to 1-1-96. Note that the keyword <SPAN CLASS="eln">AND</SPAN> is included in the string to separate the multiple fields in the <SPAN CLASS="p">criteria</SPAN> argument. All records included in the <SPAN CLASS="eln">DAvg</SPAN> function calculation will have both of these criteria.</P>

<pre><code>Dim dblX As Double
dblX = DAvg("[Freight]", "Orders", _
    "[ShipCountry] = 'UK' AND [ShippedDate] &gt;= #1-1-96#")</code></pre>
The next example calculates an average by using a variable, <SPAN CLASS="cte">strCountry</SPAN>, in the criteria argument. Note that single quotation marks (') are included in the string expressions, so that when all of the strings are concatenated, the string literal <SPAN CLASS="cte">UK</SPAN> will be enclosed in single quotation marks. In this example, the keyword <SPAN CLASS="eln">OR</SPAN> is used to separate the multiple fields. This example will return all records that have either or both criteria.</P>

<pre><code>Dim dblX As Double, strCountry As String
strCountry = "UK"
dblX = DAvg("[Freight]", "Orders", _
    "[ShipCountry] = '" &amp; strCountry &amp; "'OR [ShippedDate] &gt;= #1-1-96#")</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
