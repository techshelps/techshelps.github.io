<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Save Action</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>Save Action</H2>Description</P>
You can use the Save action to save either a specified <SPAN CLASS="pop">Microsoft Access object</SPAN> or the active object if none is specified. You can also save the active object with a new name in some cases (this functions the same as the <SPAN CLASS="eln">Save As</SPAN> command on the <SPAN CLASS="eln">File</SPAN> menu).</P>
Setting</P>
The Save action has the following arguments.</P>

<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="89pt" VALIGN="TOP"><COL WIDTH="270pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Action argument</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Object Type</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The type of object you want to save. Click <SPAN CLASS="eln">Table</SPAN>, <SPAN CLASS="eln">Query</SPAN>, <SPAN CLASS="eln">Form</SPAN>, <SPAN CLASS="eln">Report</SPAN>, <SPAN CLASS="eln">Macro</SPAN>, or <SPAN CLASS="eln">Module</SPAN> in the <SPAN CLASS="eln">Object Type</SPAN> box in the <SPAN CLASS="eln">Action Arguments</SPAN> section of the <SPAN CLASS="pop">Macro window</SPAN>. To select the active object, leave this argument blank. If you select an object type in this argument, you must select an existing object's name in the Object Name argument.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Object Name</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The name of the object to be saved. The <SPAN CLASS="eln">Object Name</SPAN> box shows all objects in the database of the type selected by the Object Type argument. If you leave the Object Type argument blank, you can leave this argument blank to save the active object, or, in some cases, enter a new name in this argument to save the active object with this name.</P>
If you enter a new name, the name must follow the <SPAN CLASS="pop">standard naming conventions</SPAN> for Microsoft Access objects.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
The Save action works on all <SPAN CLASS="pop">database objects</SPAN> that the user can explicitly open and save. The specified object must be open for the Save action to have any effect on the object. This action has the same effect as selecting an object and then saving it by clicking <SPAN CLASS="eln">Save</SPAN> on the <SPAN CLASS="eln">File</SPAN> menu, or clicking the <SPAN CLASS="eln">Save</SPAN> button on the <SPAN CLASS="pop">toolbar</SPAN>. Leaving the Object Type argument blank and entering a new name in the Object Name argument has the same effect as clicking <SPAN CLASS="eln">Save As/Export</SPAN> on the <SPAN CLASS="eln">File</SPAN> menu, and entering a new name for the active object. Using the Save action enables you to specify an object to save and to perform a <SPAN CLASS="eln">Save As</SPAN> command from a <SPAN CLASS="pop">macro</SPAN>.</P>
<SPAN CLASS="nh">Note</SPAN>   You can't use the Save action to save any of the following with a new name:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">A <SPAN CLASS="pop">form</SPAN> in <SPAN CLASS="pop">Form view</SPAN> or <SPAN CLASS="pop">Datasheet view</SPAN>.</LI><LI CLASS="ULI1">A <SPAN CLASS="pop">report</SPAN> in <SPAN CLASS="pop">Print Preview</SPAN>.</LI><LI CLASS="ULI1">A <SPAN CLASS="pop">module</SPAN>.
</LI></UL></SPAN>The Save action, whether it's carried out in a macro run in the current database or in a <SPAN CLASS="pop">library database</SPAN>, always saves the specified object or the active object in the database in which the object was created.</P>
If you save the active object with a new name, but the name is the same as the name of an existing object of this type, a dialog box asks if you want to overwrite the existing object. If you've set the Warnings On argument of the <SPAN CLASS="jump">SetWarnings</SPAN> action to <SPAN CLASS="eln">No</SPAN>, the dialog box isn't displayed and the old object is automatically overwritten.</P>
To run the Save action in Visual Basic, use the Save method of the DoCmd object.</P>
See Also</P>
Close action, CopyObject action, Quit action, Rename action, <SPAN CLASS="eln">Save</SPAN> method, TransferDatabase action.</P>
<HR CLASS="rr"></FONT></BODY>
</HTML>
