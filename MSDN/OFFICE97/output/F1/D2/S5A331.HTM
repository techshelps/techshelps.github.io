<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PARAMETERS Declaration</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>PARAMETERS Declaration</H1>Description</P>
Declares the name and data type of each <SPAN CLASS="pop">parameter</SPAN> in a <SPAN CLASS="pop">parameter query</SPAN>.</P>
Syntax</P>
PARAMETERS <SPAN CLASS="p">name datatype</SPAN> [, <SPAN CLASS="p">name datatype</SPAN> [, ...]]</P>
The PARAMETERS declaration has these parts:</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="56pt" VALIGN="TOP"><COL WIDTH="304pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">name</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The name of the parameter. Assigned to the <SPAN CLASS="eln">Name</SPAN> property of the <SPAN CLASS="eln">Parameter</SPAN> object and used to identify this parameter in the <SPAN CLASS="eln">Parameters</SPAN> collection. You can use <SPAN CLASS="p">name</SPAN> as a string that is displayed in a dialog box while your application runs the query. Use brackets ([ ]) to enclose text that contains spaces or punctuation. For example, [Low price] and [Begin report with which month?] are valid <SPAN CLASS="p">name</SPAN> arguments.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">datatype</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">One of the primary <SPAN CLASS="jump">Microsoft Jet SQL data types</SPAN> or their synonyms.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
For queries that you run regularly, you can use a PARAMETERS declaration to create a parameter query. A parameter query can help automate the process of changing query <SPAN CLASS="pop">criteria</SPAN>. With a parameter query, your code will need to provide the parameters each time the query is run.</P>
The PARAMETERS declaration is optional but when included precedes any other statement, including <SPAN CLASS="jump">SELECT</SPAN>.</P>
If the declaration includes more than one parameter, separate them with commas. The following example includes two parameters:</P>

<pre><code>PARAMETERS [Low price] Currency, [Beginning date] DateTime;</code></pre>
You can use <SPAN CLASS="p">name</SPAN> but not <SPAN CLASS="p">datatype</SPAN> in a <SPAN CLASS="jump">WHERE</SPAN> or <SPAN CLASS="jump">HAVING</SPAN> clause. The following example expects two parameters to be provided and then applies the criteria to records in the Orders table:</P>

<pre><code>PARAMETERS [Low price] Currency,
[Beginning date] DateTime;
SELECT OrderID, OrderAmount
FROM Orders
WHERE OrderAmount &gt; [Low price]
AND OrderDate &gt;= [Beginning date];</code></pre>
See Also</P>
HAVING clause, <SPAN CLASS="eln">Name</SPAN> property ("DAO Language Reference"), <SPAN CLASS="eln">Parameter</SPAN> object ("DAO Language Reference"), SELECT statement, WHERE clause.</P>
Specifics (Microsoft Access)</P>
With a <SPAN CLASS="pop">parameter query</SPAN>, Microsoft Access prompts you for the criteria when the query is run. This enables you to design a query that returns records based on criteria supplied by the user.</P>
The <SPAN CLASS="p">name</SPAN> argument that you supply with the PARAMETERS declaration provides the text that is displayed in a dialog box when you run the query. Microsoft Access automatically creates this dialog box for you.</P>
The use of the PARAMETERS declaration in <SPAN CLASS="pop">SQL view</SPAN> is equivalent to defining parameters in the <SPAN CLASS="eln">Criteria</SPAN> cell of the <SPAN CLASS="pop">query design grid</SPAN>.</P>
Example</P>
This example requires the user to provide a job title and then uses that job title as the criteria for the query.</P>
This example calls the EnumFields procedure, which you can find in the SELECT statement example.</P>

<pre><code>Sub ParametersX()

    Dim dbs As Database, qdf As QueryDef
    Dim rst As Recordset
    Dim strSql As String, strParm As String
    Dim strMessage As String
    Dim intCommand As Integer

    ' Modify this line to include the path to Northwind
    ' on your computer.
    Set dbs = OpenDatabase("NorthWind.mdb")

    ' Define the parameters clause.
    strParm = "PARAMETERS [Employee Title] TEXT; "

    ' Define an SQL statement with the parameters
    ' clause.
    strSql = strParm &amp; "SELECT LastName, FirstName, " _
        &amp; "EmployeeID " _
        &amp; "FROM Employees " _
        &amp; "WHERE Title =[Employee Title];"

    ' Create a QueryDef object based on the
    ' SQL statement.
    Set qdf = dbs.CreateQueryDef _
        ("Find Employees", strSql)

    Do While True
        strMessage = "Find Employees by Job " _
            &amp; "title:" &amp; Chr(13) _
            &amp; "  Choose Job Title:" &amp; Chr(13) _
            &amp; "   1 - Sales Manager" &amp; Chr(13) _
            &amp; "   2 - Sales Representative" &amp; Chr(13) _
            &amp; "   3 - Inside Sales Coordinator"

        intCommand = Val(InputBox(strMessage))

        Select Case intCommand
            Case 1
                qdf("Employee Title") = _
                    "Sales Manager"
            Case 2
                qdf("Employee Title") = _
                    "Sales Representative"
            Case 3
                qdf("Employee Title") = _
                    "Inside Sales Coordinator"
            Case Else
                Exit Do
        End Select

        ' Create a temporary snapshot-type Recordset.
        Set rst = qdf.OpenRecordset(dbOpenSnapshot)
        ' Populate the Recordset.
        rst.MoveLast

    ' Call EnumFields to print the contents of the
    ' Recordset. Pass the Recordset object and desired
    ' field width.
        EnumFields rst, 12
    Loop

    ' Delete the QueryDef because this is a
    ' demonstration.
    dbs.QueryDefs.Delete "Find Employees"

    dbs.Close

End Sub</code></pre>
Example (Microsoft Access)</P>
To try the following examples in Microsoft Access, first create a new query in the Northwind sample database. Close the <SPAN CLASS="eln">Show Table</SPAN> dialog box without specifying a table or query. Switch to SQL view, paste an individual example into the SQL window, and run the query.</P>
The following example prompts the user to provide an employee's last name and then uses that entry as the criteria for the query:</P>

<pre><code>PARAMETERS [Enter a Last Name:] Text;
SELECT *
FROM Employees
WHERE LastName = [Enter a Last Name:];</code></pre>
The next example prompts the user to provide a category ID and then uses that entry as the criteria for the query:</P>

<pre><code>PARAMETERS [Enter a Category ID:] Value;
SELECT CategoryID, ProductName, Count([Order Details].OrderID) AS Tally
FROM Products
INNER JOIN [Order Details]
ON Products.ProductID = [Order Details].ProductID
GROUP BY CategoryID, ProductName
HAVING CategoryID = [Enter a Category ID:];</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
