<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Required Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Required Property</H1>Applies To</P>
<SPAN CLASS="eln">Field</SPAN> object, <SPAN CLASS="eln">Index</SPAN> object.</P>
Description</P>
Sets or returns a value that indicates whether a Field object requires a non-<SPAN CLASS="eln">Null</SPAN> value or whether all the fields in an Index object must have a value.</P>
Settings and Return Values</P>
The setting or return value is a Boolean that is <SPAN CLASS="eln">True</SPAN> if a field can't contain a <SPAN CLASS="eln">Null</SPAN> value.</P>
For an object not yet appended to a collection, this property is read/write. For an <SPAN CLASS="eln">Index</SPAN> object, this property setting is read-only for objects appended to Indexes collections in <SPAN CLASS="eln">Recordset</SPAN> and <SPAN CLASS="eln">TableDef</SPAN> objects.</P>
Remarks</P>
The availability of the <SPAN CLASS="eln">Required</SPAN> property depends on the object that contains the Fields collection, as shown in the following table.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="143pt" VALIGN="TOP"><COL WIDTH="216pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">If the Fields collection belongs to a</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Then Required is</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">Index</SPAN> object</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Not supported</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">QueryDef</SPAN> object</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Read-only</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">Recordset</SPAN> object</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Read-only</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">Relation</SPAN> object</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Not supported</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">TableDef</SPAN> object</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Read/write</P></TD></TR></TBODY></TABLE>
<BR></P>For a <SPAN CLASS="eln">Field</SPAN> object, you can use the <SPAN CLASS="eln">Required</SPAN> property along with the <SPAN CLASS="eln">AllowZeroLength</SPAN>, <SPAN CLASS="eln">ValidateOnSet</SPAN>, or <SPAN CLASS="eln">ValidationRule</SPAN> property to determine the validity of the <SPAN CLASS="eln">Value</SPAN> property setting for that <SPAN CLASS="eln">Field</SPAN> object. If the <SPAN CLASS="eln">Required</SPAN> property is set to <SPAN CLASS="eln">False</SPAN>, the field can contain <SPAN CLASS="eln">Null</SPAN> values as well as values that meet the conditions specified by the <SPAN CLASS="eln">AllowZeroLength</SPAN> and <SPAN CLASS="eln">ValidationRule</SPAN> property settings.</P>
<SPAN CLASS="nh">Note</SPAN>   When you can set this property for either an <SPAN CLASS="eln">Index</SPAN> object or a <SPAN CLASS="eln">Field</SPAN> object, set it for the <SPAN CLASS="eln">Field</SPAN> object. The validity of the property setting for a <SPAN CLASS="eln">Field</SPAN> object is checked before that of an <SPAN CLASS="eln">Index</SPAN> object.</P>
See Also</P>
<SPAN CLASS="eln">AllowZeroLength</SPAN> property, <SPAN CLASS="eln">ValidateOnSet</SPAN> property, <SPAN CLASS="eln">ValidationRule</SPAN> property, <SPAN CLASS="eln">ValidationText</SPAN> property, <SPAN CLASS="eln">Value</SPAN> property.</P>
Example</P>
This example uses the <SPAN CLASS="eln">Required</SPAN> property to report which fields in three different tables must contain data in order for a new record to be added. The RequiredOutput procedure is required for this procedure to run.</P>

<pre><code>Sub RequiredX()
<B></B>
    Dim dbsNorthwind As Database
<B>    </B>Dim tdfloop As TableDef
<B></B>
    Set dbsNorthwind = OpenDatabase("Northwind.mdb")
<B></B>
    With dbsNorthwind
<B>        </B>' Show which fields are required in the Fields
        ' collections of three different TableDef objects.
<B>        </B>RequiredOutput .TableDefs("Categories")
<B>        </B>RequiredOutput .TableDefs("Customers")
<B>        </B>RequiredOutput .TableDefs("Employees")
<B>        </B>.Close
<B>    </B>End With

End Sub

Sub RequiredOutput(tdfTemp As TableDef)
<B></B>
    Dim fldLoop As Field
<B></B>
    ' Enumerate Fields collection of the specified TableDef
    ' and show the Required property.
<B>    </B>Debug.Print "Fields in " &amp; tdfTemp.Name &amp; ":"
<B>    </B>For Each fldLoop In tdfTemp.Fields
<B>        </B>Debug.Print , fldLoop.Name &amp; ", Required = " &amp; _
            fldLoop.Required
<B>    </B>Next fldLoop

End Sub</code></pre>
Example (Microsoft Access)</P>
The following example creates a new <SPAN CLASS="eln">Index</SPAN> object on an Employees table and sets the <SPAN CLASS="eln">Required</SPAN> property for the index. The new index consists of two fields, LastName and FirstName.</P>

<pre><code>Sub NewIndex()
    Dim dbs As Database, tdf As TableDef, idx As Index
    Dim fldLastName As Field, fldFirstName As Field

    ' Return reference to current database.
    Set dbs = CurrentDb
    ' Return reference to Employees table.
    Set tdf = dbs.TableDefs!Employees
    ' Create new index.
    Set idx = tdf.CreateIndex("FullName")
    ' Create and append index fields.
    Set fldLastName = idx.CreateField("LastName", dbText)
    Set fldFirstName = idx.CreateField("FirstName", dbText)
    idx.Fields.Append fldLastName
    idx.Fields.Append fldFirstName
    ' Ensure value is entered for each field in index.
    idx.Required = True
    ' Append Index object.
    tdf.Indexes.Append idx
    Set dbs = Nothing
End Sub</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
