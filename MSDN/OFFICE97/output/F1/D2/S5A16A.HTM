<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>KeyPress Event</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>KeyPress Event</H2>Applies To</P>
Bound Object Frame control, Check Box control, Combo Box control, Command Button control, Form, List Box control, Option Button control, Tab control, Toggle Button control.</P>
Description</P>
The KeyPress event occurs when the user presses and releases a key or key combination that corresponds to an <SPAN CLASS="pop">ANSI</SPAN> code while a <SPAN CLASS="pop">form</SPAN> or <SPAN CLASS="pop">control</SPAN> has the <SPAN CLASS="pop">focus</SPAN>. This event also occurs if you send an ANSI keystroke to a form or control by using the <SPAN CLASS="jump">SendKeys</SPAN> action in a <SPAN CLASS="pop">macro</SPAN> or the SendKeys statement in Visual Basic.</P>
<SPAN CLASS="nh">Note</SPAN>   The KeyPress event applies only to forms and controls on a form, not controls on a <SPAN CLASS="pop">report</SPAN>.</P>
Remarks</P>
To run a macro or <SPAN CLASS="pop">event procedure</SPAN> when this event occurs, set the OnKeyPress property to the name of the macro or to [Event Procedure].</P>
The object with the focus receives all keystrokes. A form can have the focus only if it has no controls or all its visible controls are disabled.</P>
A form will also receive all keyboard events, even those that occur for controls, if you set the KeyPreview property of the form to Yes. With this property setting, all keyboard events occur first for the form, and then for the control that has the focus. You can respond to specific keys pressed in the form, regardless of which control has the focus. For example, you may want the key combination <SPAN CLASS="kn">CTRL+X</SPAN> to always perform the same action on a form.</P>
If you press and hold down an ANSI key, the <SPAN CLASS="jump">KeyDown</SPAN> and KeyPress events alternate repeatedly (KeyDown, KeyPress, KeyDown, KeyPress, and so on) until you release the key, then the <SPAN CLASS="jump">KeyUp</SPAN> event occurs.</P>
A KeyPress event can involve any printable keyboard character, the <SPAN CLASS="kn">CTRL</SPAN> key combined with a character from the standard alphabet or a special character, and the <SPAN CLASS="kn">ENTER</SPAN> or <SPAN CLASS="kn">BACKSPACE</SPAN> key. You can use the KeyDown and KeyUp event procedures to handle any keystroke not recognized by the KeyPress event, such as function keys, navigation keys, and any combinations of these with keyboard modifiers (<SPAN CLASS="kn">ALT</SPAN>, <SPAN CLASS="kn">SHIFT</SPAN>, or <SPAN CLASS="kn">CTRL</SPAN> keys). Unlike the KeyDown and KeyUp events, the KeyPress event doesn't indicate the physical state of the keyboard; instead, it indicates the ANSI character that corresponds to the pressed key or key combinations.</P>
KeyPress interprets the uppercase and lowercase of each character as separate key codes and, therefore, as two separate characters.</P>
<SPAN CLASS="nh">Note</SPAN>   The <SPAN CLASS="kn">BACKSPACE</SPAN> key is part of the ANSI character set, but the <SPAN CLASS="kn">DEL</SPAN> key isn't. If you delete a character in a control by using the <SPAN CLASS="kn">BACKSPACE</SPAN> key, you cause a KeyPress event; if you use the <SPAN CLASS="kn">DEL</SPAN> key, you don't.</P>
The KeyDown and KeyPress events occur when you press or send an ANSI key. The KeyUp event occurs after any event for a control caused by pressing or sending the key. If a keystroke causes the focus to move from one control to another control, the KeyDown event occurs for the first control, while the KeyPress and KeyUp events occur for the second control.</P>
For example, if you go to a new record and type a character in the first control in the record, the following events occur:</P>
    Current (for the new record)</P>
     <img src="darrow.gif"></P>
    Enter (for the first control in the new record)</P>
     <img src="darrow.gif"></P>
    GotFocus (for the control)</P>
     <img src="darrow.gif"></P>
    KeyDown (for the control)</P>
     <img src="darrow.gif"></P>
    KeyPress (for the control)</P>
     <img src="darrow.gif"></P>
    BeforeInsert (for the new record in the form)</P>
     <img src="darrow.gif"></P>
    Change (for the control if it's a text box or combo box)</P>
     <img src="darrow.gif"></P>
    KeyUp (for the control)</P>
See Also</P>
<SPAN CLASS="eln">Asc</SPAN> function, Change event, <SPAN CLASS="eln">Chr</SPAN> function, Enter, Exit events, Event properties, GotFocus, LostFocus events, KeyDown, KeyUp events, <SPAN CLASS="eln">KeyPreview</SPAN> property, NotInList event, SendKeys action, <SPAN CLASS="eln">SendKeys</SPAN> statement.</P>
<HR CLASS="rr"></FONT></BODY>
</HTML>
