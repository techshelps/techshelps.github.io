<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>LockEdits Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>LockEdits Property</H1>Applies To</P>
Dynamic-Type <SPAN CLASS="eln">Recordset</SPAN> object, Dynaset-Type <SPAN CLASS="eln">Recordset</SPAN> object, <SPAN CLASS="eln">Recordset</SPAN> object, Snapshot-Type <SPAN CLASS="eln">Recordset</SPAN> object, Table-Type <SPAN CLASS="eln">Recordset</SPAN> object.</P>
Description</P>
Sets or returns a value indicating the type of <SPAN CLASS="pop">locking</SPAN> that is in effect while editing.</P>
Settings and Return Values</P>
The setting or return value is a Boolean that indicates the type of locking, as specified in the following table.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="82pt" VALIGN="TOP"><COL WIDTH="277pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Value</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">True</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Default. <SPAN CLASS="pop">Pessimistic</SPAN> locking is in effect. The 2K <SPAN CLASS="pop">page</SPAN> containing the record you're editing is locked as soon as you call the <SPAN CLASS="eln">Edit</SPAN> method.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">False</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="pop">Optimistic</SPAN> locking is in effect for editing. The 2K page containing the record is not locked until the Update method is executed.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
You can use the <SPAN CLASS="eln">LockEdits</SPAN> property with updatable Recordset objects.</P>
If a page is locked, no other user can edit records on the same page. If you set <SPAN CLASS="eln">LockEdits</SPAN> to <SPAN CLASS="eln">True</SPAN> and another user already has the page locked, an error occurs when you use the <SPAN CLASS="eln">Edit</SPAN> method. Other users can read data from locked pages.</P>
If you set the <SPAN CLASS="eln">LockEdits</SPAN> property to <SPAN CLASS="eln">False</SPAN> and later use the <SPAN CLASS="eln">Update</SPAN> method while another user has the page locked, an error occurs. To see the changes made to your record by another user, use the Move method with 0 as the argument; however, if you&nbsp;do this, you will lose your changes.</P>
When working with <SPAN CLASS="pop">Microsoft Jet-connected ODBC data sources</SPAN>, the <SPAN CLASS="eln">LockEdits</SPAN> property is always set to <SPAN CLASS="eln">False</SPAN>, or optimistic locking. The <SPAN CLASS="pop">Microsoft Jet database engine</SPAN> has no control over the locking mechanisms used in external database servers.</P>
<SPAN CLASS="nh">Note</SPAN>&nbsp;&nbsp;&nbsp;You can preset the value of <B>LockEdits</B> when you first open the <B>Recordset</B> by setting the&nbsp;<I>lockedits</I> argument of the OpenRecordset method. Setting the <I>lockedits</I> argument to <B>dbPessimistic</B> will set the <B>LockEdits</B> property to <B>True</B>, and setting <I>lockedits</I> to any other value&nbsp;will set the <B>LockEdits</B> property to <B>False.</B></P>
See Also</P>
<SPAN CLASS="eln">Bookmark</SPAN> property, <SPAN CLASS="eln">Close</SPAN> method, <SPAN CLASS="eln">FindFirst</SPAN>, <SPAN CLASS="eln">FindLast</SPAN>, <SPAN CLASS="eln">FindNext</SPAN>, <SPAN CLASS="eln">FindPrevious</SPAN> methods, <SPAN CLASS="eln">IsolateODBCTrans</SPAN> property, <SPAN CLASS="eln">MoveFirst</SPAN>, <SPAN CLASS="eln">MoveLast</SPAN>, <SPAN CLASS="eln">MoveNext</SPAN>, <SPAN CLASS="eln">MovePrevious</SPAN> methods.</P>
Example</P>
This example demonstrates <SPAN CLASS="pop">pessimistic locking</SPAN> by setting the <SPAN CLASS="eln">LockEdits</SPAN> property to <SPAN CLASS="eln">True</SPAN>, and then demonstrates <SPAN CLASS="pop">optimistic locking</SPAN> by setting the <SPAN CLASS="eln">LockEdits</SPAN> property to&nbsp;<SPAN CLASS="eln">False</SPAN>. It also demonstrates what kind of error handling is required in a multiuser database environment in order to modify a field. The PessimisticLock and OptimisticLock functions are required for this procedure to run.</P>

<pre><code>Sub LockEditsX()

    Dim dbsNorthwind As Database
    Dim rstCustomers As Recordset
    Dim strOldName As String

    Set dbsNorthwind = OpenDatabase("Northwind.mdb")
    Set rstCustomers = dbsNorthwind.OpenRecordset("Customers", _
        dbOpenDynaset)

    With rstCustomers
        ' Store original data.
        strOldName = !CompanyName

        If MsgBox("Pessimistic locking demonstration...", _
            vbOKCancel) = vbOK Then

            ' Attempt to modify data with pessimistic locking
            ' in effect.
            If PessimisticLock(rstCustomers, !CompanyName, _
                "Acme Foods") Then
                MsgBox "Record successfully edited."

                ' Restore original data...
                .Edit
                !CompanyName = strOldName
                .Update
            End If

        End If

        If MsgBox("Optimistic locking demonstration...", _
            vbOKCancel) = vbOK Then

            ' Attempt to modify data with optimistic locking
            ' in effect.
            If OptimisticLock(rstCustomers, !CompanyName, _
                "Acme Foods") Then
                MsgBox "Record successfully edited."

                ' Restore original data...
                .Edit
                !CompanyName = strOldName
                .Update
            End If

        End If

        .Close
    End With

    dbsNorthwind.Close

End Sub

Function PessimisticLock(rstTemp As Recordset, _
    fldTemp As Field, strNew As String) As Boolean

    dim ErrLoop as Error

    PessimisticLock = True

    With rstTemp
        .LockEdits = True

        ' When you set LockEdits to True, you trap for errors
        ' when you call the Edit method.
        On Error GoTo Err_Lock
        .Edit
        On Error GoTo 0

        ' If the Edit is still in progress, then no errors
        ' were triggered; you may modify the data.
        If .EditMode = dbEditInProgress Then
            fldTemp = strNew
            .Update
            .Bookmark = .LastModified
        Else
            ' Retrieve current record to see changes made by
            ' other user.
            .Move 0
        End If

    End With
    
    Exit Function
    
Err_Lock:

    If DBEngine.Errors.Count &gt; 0 Then
        ' Enumerate the Errors collection.
        For Each errLoop In DBEngine.Errors
            MsgBox "Error number: " &amp; errLoop.Number &amp; _
                vbCr &amp; errLoop.Description
        Next errLoop
        PessimisticLock = False
    End If
    
    Resume Next

End Function

Function OptimisticLock(rstTemp As Recordset, _
    fldTemp As Field, strNew As String) As Boolean

    dim ErrLoop as Error

    OptimisticLock = True

    With rstTemp
        .LockEdits = False
        .Edit
        fldTemp = strNew

        ' When you set LockEdits to False, you trap for errors
        ' when you call the Update method.
        On Error GoTo Err_Lock
        .Update
        On Error GoTo 0

        ' If there is no Edit in progress, then no errors were
        ' triggered; you may modify the data.
        If .EditMode = dbEditNone Then
            ' Move current record pointer to the most recently
            ' modified record.
            .Bookmark = .LastModified
        Else
            .CancelUpdate
            ' Retrieve current record to see changes made by
            ' other user.
            .Move 0
        End If

    End With
    
    Exit Function
    
Err_Lock:

    If DBEngine.Errors.Count &gt; 0 Then
        ' Enumerate the Errors collection.
        For Each errLoop In DBEngine.Errors
            MsgBox "Error number: " &amp; errLoop.Number &amp; _
                vbCr &amp; errLoop.Description
        Next errLoop
        OptimisticLock = False
    End If
    
    Resume Next

End Function</code></pre>
Example (Microsoft Access)</P>
The following example opens a dynaset<SPAN CLASS="pop">-</SPAN>type <SPAN CLASS="eln">Recordset</SPAN> object and sets its <SPAN CLASS="eln">LockEdits</SPAN> property to <SPAN CLASS="eln">False</SPAN> (0). This enables optimistic locking so other users can change the database records at any time. Microsoft Access triggers a trappable error if the data changes before you use the <SPAN CLASS="eln">Update</SPAN> method.</P>

<pre><code>Sub ShowLockStatus()
    Dim dbs As Database, rst As Recordset

    ' Return reference to current database.
    Set dbs = CurrentDb
    ' Open dynaset-type Recordset object.
    Set rst = dbs.OpenRecordset("Customers", dbOpenDynaset)
    rst.LockEdits = False
    On Error Goto ErrorLockEdits
    ' Enable editing.
    rst.Edit
    .                            ' Change records.
    .
    .
    rst.Update                ' Try to post changes.

ExitLockEdits:
    rst.Close
    Set dbs = Nothing
    Exit Sub

ErrorLockEdits:
        If Err.Number = 3197 Then
            MsgBox "Data changed by another user."
            Resume Next
        Else
            MsgBox "Some other error."
            Resume ExitLockEdits
        End If
End Sub</code></pre>
Example (Microsoft Excel)</P>
This example locks the Customer recordset in the Nwindex.mdb database before updating the value in the CUSTMR_ID field of the first record with the value in cell A1 on Sheet1. Locking the recordset ensures that no other user can modify the record while it's being updated.</P>
To create the Nwindex.mdb database, run the Microsoft Excel example for the <SPAN CLASS="lee">CreateDatabase</SPAN> method.</P>

<pre><code>Dim db As Database, rs As Recordset
Sheets("Sheet1").Cells(1, 1).Value = "ACRIM"
databasePath = Application.Path &amp; "\NWINDEX.MDB"
Set db = DBEngine.Workspaces(0).OpenDatabase(databasePath)
Set rs = db.OpenRecordset("Customer")
valueToAdd = Sheets("Sheet1").Cells(1, 1).Value
rs.LockEdits = False
rs.Edit
rs.fields("CUSTMR_ID").Value = valueToAdd
rs.Update
MsgBox "The new value of CUSTMR_ID is " &amp; rs.fields("CUSTMR_ID").Value
rs.Close
db.Close</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
