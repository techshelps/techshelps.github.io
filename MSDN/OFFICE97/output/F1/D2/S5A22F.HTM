<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SysCmd Function</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>SysCmd Function</H2>Description</P>
You can use the <SPAN CLASS="eln">SysCmd</SPAN> function to perform one of the following functions:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">Display a progress meter or optional specified text in the status bar.</LI><LI CLASS="ULI1">Return information about Microsoft Access and its associated files.</LI><LI CLASS="ULI1">Return the state of a specified <SPAN CLASS="pop">database object</SPAN> to indicate whether the object is open, is a new object, or has been changed but not saved.
</LI></UL></SPAN>For example, if you are building a custom wizard that creates a new form, you can use the <SPAN CLASS="eln">SysCmd</SPAN> function to display a progress meter indicating the progress of your wizard as it constructs the form.</P>
Syntax</P>
ReturnValue<SPAN CLASS="l"> = SysCmd(</SPAN><SPAN CLASS="p">action</SPAN>[<SPAN CLASS="l">, </SPAN><SPAN CLASS="p">text</SPAN>][<SPAN CLASS="l">, </SPAN><SPAN CLASS="p">value</SPAN>]<SPAN CLASS="l">)</SPAN></P>
ObjectState<SPAN CLASS="l"> = SysCmd(</SPAN><SPAN CLASS="p">action</SPAN>[<SPAN CLASS="l">, </SPAN><SPAN CLASS="p">objecttype</SPAN>][<SPAN CLASS="l">, </SPAN><SPAN CLASS="p">objectname</SPAN>]<SPAN CLASS="l">)</SPAN></P>
The <SPAN CLASS="eln">SysCmd</SPAN> function has the following arguments.</P>

<TABLE COLS="4" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="56pt" VALIGN="TOP"><COL WIDTH="130pt" VALIGN="TOP"><COL WIDTH="173pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Argument</P></TD><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">action</SPAN></P></TD><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">One of the following <SPAN CLASS="pop">intrinsic constants</SPAN> identifying the type of action to take.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The following set of constants applies to a progress meter. The <SPAN CLASS="eln">SysCmd</SPAN> function returns a <SPAN CLASS="eln">Null</SPAN> if these actions are successful. Otherwise, Microsoft Access generates a <SPAN CLASS="pop">run-time error</SPAN>.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">acSysCmdInitMeter</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Initializes the progress meter. You must specify the <SPAN CLASS="p">text</SPAN> and <SPAN CLASS="p">value</SPAN> arguments when you use this action.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">acSysCmdUpdateMeter</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Updates the progress meter with the specified value. You must specify the <SPAN CLASS="p">text</SPAN> argument when you use this action.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">acSysCmdRemoveMeter</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Removes the progress meter.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">acSysCmdSetStatus</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Sets the status bar text to the <SPAN CLASS="p">text</SPAN> argument.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">acSysCmdClearStatus</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Resets the status bar text.</P></TD></TR></TBODY></TABLE>
<BR></P><I>(continued)</I></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="56pt" VALIGN="TOP"><COL WIDTH="130pt" VALIGN="TOP"><COL WIDTH="173pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The following set of constants provides information about Microsoft Access.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">acSysCmdRuntime</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Returns <SPAN CLASS="eln">True</SPAN> (–1) if a run-time version of Microsoft Access is running.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">acSysCmdAccessVer</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Returns the version number of Microsoft Access.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">acSysCmdIniFile</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Returns the name of the .ini file associated with Microsoft Access.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">acSysCmdAccessDir</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Returns the name of the directory where Msaccess.exe is located.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">acSysCmdProfile</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Returns the <SPAN CLASS="eln">/profile</SPAN> setting specified by the user when starting Microsoft Access from the command line.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">acSysCmdGetWorkgroupFile</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Returns the path to the workgroup file (System.mdw).</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The following constant provides information on the state of a database object.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">acSysCmdGetObjectState</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Returns the state of the specified database object. You must specify the <SPAN CLASS="p">objecttype</SPAN> and <SPAN CLASS="p">objectname</SPAN> parts when you use this <SPAN CLASS="p">action</SPAN> value.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">text</SPAN></P></TD><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">A <SPAN CLASS="pop">string expression</SPAN> identifying the text to be displayed left-aligned in the status&nbsp;bar. This argument is required when the <SPAN CLASS="p">action</SPAN> argument is <SPAN CLASS="eln">acSysCmdInitMeter</SPAN>, <SPAN CLASS="eln">acSysCmdUpdateMeter</SPAN>, or <SPAN CLASS="eln">acSysCmdSetStatus</SPAN>; this&nbsp;argument isn't valid for other <SPAN CLASS="p">action</SPAN> argument values.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">value</SPAN></P></TD><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">A <SPAN CLASS="pop">numeric expression</SPAN> that controls the display of the progress meter. This argument is required when the <SPAN CLASS="p">action</SPAN> argument is <SPAN CLASS="eln">acSysCmdInitMeter</SPAN>; this argument isn't valid for other <SPAN CLASS="p">action</SPAN> argument values.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">objecttype</SPAN></P></TD><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">One of the following intrinsic constants:</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">acTable<BR>acQuery<BR>acForm<BR>acReport<BR>acMacro<BR>acModule</SPAN></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">This argument is required when the <SPAN CLASS="p">action</SPAN> argument is <SPAN CLASS="eln">acSysCmdGetObjectState</SPAN>; this argument isn't valid for other <SPAN CLASS="p">action</SPAN> argument&nbsp;values.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">objectname</SPAN></P></TD><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">A string expression that is the valid name of a database object of the type specified by the <SPAN CLASS="p">objecttype</SPAN> argument. This argument is required when the <SPAN CLASS="p">action</SPAN> argument is <SPAN CLASS="eln">acSysCmdGetObjectState</SPAN>; this argument isn't valid for other <SPAN CLASS="p">action</SPAN> argument values.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
By calling the <SPAN CLASS="eln">SysCmd</SPAN> function with the various progress meter actions, you can display a progress meter in the status bar for an operation that has a known duration or number of steps, and update it to indicate the progress of the operation.</P>
To display a progress meter in the status bar, you must first call the <SPAN CLASS="eln">SysCmd</SPAN> function with the <SPAN CLASS="eln">acSysCmdInitMeter</SPAN> <SPAN CLASS="p">action</SPAN> argument, and the <SPAN CLASS="p">text</SPAN> and <SPAN CLASS="p">value</SPAN> arguments. When the <SPAN CLASS="p">action</SPAN> argument is <SPAN CLASS="eln">acSysCmdInitMeter</SPAN>, the <SPAN CLASS="p">value</SPAN> argument is the maximum value of the meter, or 100&nbsp;percent.</P>
To update the meter to show the progress of the operation, call the <SPAN CLASS="eln">SysCmd</SPAN> function with the <SPAN CLASS="eln">acSysCmdUpdateMeter</SPAN> <SPAN CLASS="p">action</SPAN> argument and the <SPAN CLASS="p">value</SPAN> argument. When the <SPAN CLASS="p">action</SPAN> argument is <SPAN CLASS="eln">acSysCmdUpdateMeter</SPAN>, the <SPAN CLASS="eln">SysCmd</SPAN> function uses the <SPAN CLASS="p">value</SPAN> argument to calculate the percentage displayed by the meter. For example, if you set the maximum value to 200 and then update the meter with a value of 100, the progress meter will be half-filled.</P>
You can also change the text that's displayed in the status bar by calling the <SPAN CLASS="eln">SysCmd</SPAN> function with the <SPAN CLASS="eln">acSysCmdSetStatus</SPAN> <SPAN CLASS="p">action</SPAN> argument and the <SPAN CLASS="p">text</SPAN> argument. For example, during a sort you might change the text to "Sorting..." When the sort is complete, you would reset the status bar by removing the text. The <SPAN CLASS="p">text</SPAN> argument can contain approximately 80 characters. Because the status bar text is displayed by using a proportional font, the actual number of characters you can display is determined by the total width of all the characters specified by the <SPAN CLASS="p">text</SPAN> argument.</P>
As you increase the width of the status bar text, you decrease the length of the meter. If the text is longer than the status bar and the <SPAN CLASS="p">action</SPAN> argument is <SPAN CLASS="eln">acSysCmdInitMeter</SPAN>, the <SPAN CLASS="eln">SysCmd</SPAN> function ignores the text and doesn't display anything in the status bar. If the text is longer than the status bar and the <SPAN CLASS="p">action</SPAN> argument is <SPAN CLASS="eln">acSysCmdSetStatus</SPAN>, the <SPAN CLASS="eln">SysCmd</SPAN> function truncates the text to fit the status bar.</P>
You can't set the status bar text to a <SPAN CLASS="pop">zero-length string</SPAN> (" "). If you want to remove the existing text from the status bar, set the <SPAN CLASS="p">text</SPAN> argument to a single space. The following examples illustrate ways to remove the text from the status bar:</P>

<pre><code>varReturn = SysCmd(acSysCmdInitMeter, " ", 100)
varReturn = SysCmd(acSysCmdSetStatus, " ")</code></pre>
If the progress meter is already displayed when you set the text by calling the <SPAN CLASS="eln">SysCmd</SPAN> function with the <SPAN CLASS="eln">acSysCmdSetStatus</SPAN> <SPAN CLASS="p">action</SPAN><SPAN CLASS="p"> argument</SPAN>, the <SPAN CLASS="eln">SysCmd</SPAN> function automatically removes the meter.</P>
Call the <SPAN CLASS="eln">SysCmd</SPAN> function with other actions to determine system information about Microsoft Access, including which version number of Microsoft Access is running, whether it is a run-time version, the location of the Microsoft Access executable file, the setting for the <SPAN CLASS="eln">/profile</SPAN> argument specified in the command line, and the name of an .ini file associated with Microsoft Access.</P>
<SPAN CLASS="nh">Note</SPAN>   Both general and customized settings for Microsoft Access are now stored in the Windows Registry, so you probably won't need an .ini file with your Microsoft Access application. The <SPAN CLASS="eln">acSysCmdIniFile</SPAN> <SPAN CLASS="p">action</SPAN> argument exists for compatibility with earlier versions&nbsp;of Microsoft Access.</P>
Call the <SPAN CLASS="eln">SysCmd</SPAN> function with the <SPAN CLASS="eln">acSysCmdGetObjectState</SPAN> <SPAN CLASS="p">action</SPAN> argument and the <SPAN CLASS="p">objecttype</SPAN> and <SPAN CLASS="p">objectname</SPAN> arguments to return the state of a specified database object. An object can be in one of four possible states: not open or nonexistent, open, new, or changed but not saved.</P>
For example, if you are designing a wizard that inserts a new field in a table, you need to determine whether the structure of the table has been changed but not yet saved, so that you can save it before modifying its structure. You can check the value returned by the <SPAN CLASS="eln">SysCmd</SPAN> function to determine the state of the table.</P>
The <SPAN CLASS="eln">SysCmd</SPAN> function with the <SPAN CLASS="eln">acSysCmdGetObjectState</SPAN> <SPAN CLASS="p">action</SPAN> argument can return any combination of the following constants.</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="121pt" VALIGN="TOP"><COL WIDTH="238pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Constant</P></TD><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">State of database object</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B>acObjStateOpen</B></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Open</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B>acObjStateNew</B></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">New</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B>acObjStateDirty</B></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Changed but not saved</P></TD></TR></TBODY></TABLE>
<BR></P><SPAN CLASS="nh">Note</SPAN>   If the object referred to by the <SPAN CLASS="p">objectname</SPAN> argument is either not open or doesn't exist, the <SPAN CLASS="eln">SysCmd</SPAN> function returns a value of zero.</P>
See Also</P>
<B>CurrentObjectType</B>, <SPAN CLASS="eln">CurrentObjectName</SPAN> properties.</P>
Example</P>
The following example creates a snapshot-type <SPAN CLASS="eln">Recordset</SPAN> object, reads each record, and displays a progress meter showing the current relative position in the snapshot.</P>

<pre><code>Function ReadRecords(strTableName As String) As Integer
    Const conBadArgs = -1
    Dim dbs As Database, rst As Recordset
    Dim lngCount As Long, strMsg As String
    Dim varReturn As Variant, lngX As Long
    
    ReadRecords = 0
    If strTableName &lt;&gt; "" Then
        DoCmd.Hourglass True
        Set dbs = CurrentDb
        On Error Resume Next
        Set rst = dbs.OpenRecordSet(strTableName)
        ' Get record count.
        rst.MoveLast
        rst.MoveFirst
        If Err Then
            ReadRecords = conBadArgs
        End If
        lngCount = rst.RecordCount
        On Error GoTo 0
        If lngCount Then
            strMsg = "Reading " &amp; UCase$(strTableName) &amp; "..."
            varReturn = SysCmd(acSysCmdInitMeter, strMsg, lngCount)
            ' Display message in status bar.
            For lngX = 1 To lngCount
                varReturn = SysCmd(acSysCmdUpdateMeter, lngX)
            ' Update meter.
                .                            ' Do something with record.
                .
                .
                rst.MoveNext            ' Go to next record.
            Next lngX
            varReturn = SysCmd(acSysCmdClearStatus)
            GoSub CloseObjects
            ReadRecords = lngCount    ' Return number of records.
            Exit Function
        End If
    End If
    ' Not found or contains no records.
    strMsg = "Table '" &amp; strTableName &amp; "'not found or contains no records.'"
    MsgBox strMsg, vbInformation, "ReadRecords"
    GoSub CloseObjects
    Exit Function
CloseObjects:
    On Error Resume Next
    rst.Close
    dbs.Close
    On Error GoTo 0
    DoCmd.Hourglass False
    Return
End Function</code></pre>
The next example illustrates how you can use the <SPAN CLASS="eln">SysCmd</SPAN> function with the <SPAN CLASS="eln">acSysCmdGetObjectState</SPAN> <I>action</I> argument to determine the state of the active database object.</P>

<pre><code>Dim intObjType As Integer, strObjName As String, intObjState As Integer

intObjType = Application.CurrentObjectType
strObjName = Application.CurrentObjectName
intObjState = SysCmd(acSysCmdGetObjectState, intObjType, strObjName)
If intObjState &lt;&gt; 0 Then
    .
    .
    .
End If</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
