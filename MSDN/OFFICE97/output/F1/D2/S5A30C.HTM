<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>User Object</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>User Object</H1>Description</P>
A <SPAN CLASS="eln">User</SPAN> object represents a <SPAN CLASS="pop">user account</SPAN> that has access <SPAN CLASS="pop">permissions</SPAN> when a <SPAN CLASS="eln">Workspace</SPAN> object operates as a <SPAN CLASS="pop">secure workgroup</SPAN> (<SPAN CLASS="pop">Microsoft Jet workspaces</SPAN> only).</P>
Remarks</P>
You use <SPAN CLASS="eln">User</SPAN> objects to establish and enforce access permissions for the <SPAN CLASS="eln">Document</SPAN> objects that represent databases, tables, and queries. Also, if you know the properties of a specific <SPAN CLASS="eln">User</SPAN> object, you can create a new <SPAN CLASS="eln">Workspace</SPAN> object that has the same access permissions as the <SPAN CLASS="eln">User</SPAN> object.</P>
You can append an existing <SPAN CLASS="eln">User</SPAN> object to the <SPAN CLASS="eln">Users</SPAN> collection of a <SPAN CLASS="eln">Group</SPAN> object to give a user account the access permissions for that <SPAN CLASS="eln">Group</SPAN> object. Alternatively, you can append the <SPAN CLASS="eln">Group</SPAN> object to the <SPAN CLASS="eln">Groups</SPAN> collection in a <SPAN CLASS="eln">User</SPAN> object to establish membership of the user account in that group. If you use a <SPAN CLASS="eln">Users</SPAN> or <SPAN CLASS="eln">Groups</SPAN> collection other than the one to which you just appended an object, you may need to&nbsp;use the <SPAN CLASS="eln">Refresh</SPAN> method.</P>
With the properties of a <SPAN CLASS="eln">User</SPAN> object, you can:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">Use the <SPAN CLASS="eln">Name</SPAN> property to return the name of an existing user. You can't return the <SPAN CLASS="eln">PID</SPAN> and <SPAN CLASS="eln">Password</SPAN> properties of an existing <SPAN CLASS="eln">User</SPAN> object.</LI><LI CLASS="ULI1">Use the <SPAN CLASS="eln">Name</SPAN>, <SPAN CLASS="eln">PID</SPAN>, and <SPAN CLASS="eln">Password</SPAN> properties of a newly created, unappended <SPAN CLASS="eln">User</SPAN> object to establish the identity of that <SPAN CLASS="eln">User</SPAN> object. If you don't set the <SPAN CLASS="eln">Password</SPAN> property, it's set to a <SPAN CLASS="pop">zero-length string</SPAN> (" ").
</LI></UL></SPAN>The <SPAN CLASS="pop">Microsoft Jet database engine</SPAN> predefines two <SPAN CLASS="eln">User</SPAN> objects named Admin and Guest. The user Admin is a member of both of the <SPAN CLASS="eln">Group</SPAN> objects named Admins and Users; the user Guest is a member only of the <SPAN CLASS="eln">Group</SPAN> object named Guests.</P>
To create a new <SPAN CLASS="eln">User</SPAN> object, use the <SPAN CLASS="eln">CreateUser</SPAN> method.</P>
To refer to a <SPAN CLASS="eln">User</SPAN> object in a collection by its ordinal number or by its <SPAN CLASS="eln">Name</SPAN> property setting, use any of the following syntax forms:</P>
[<SPAN CLASS="p">workspace</SPAN> | <SPAN CLASS="p">group</SPAN>]<SPAN CLASS="l">.</SPAN><SPAN CLASS="eln">Users</SPAN><SPAN CLASS="l">(</SPAN>0<SPAN CLASS="l">)</SPAN></P>
[<SPAN CLASS="p">workspace</SPAN> | <SPAN CLASS="p">group</SPAN>]<SPAN CLASS="l">.</SPAN><SPAN CLASS="eln">Users</SPAN><SPAN CLASS="l">("</SPAN><SPAN CLASS="p">name</SPAN><SPAN CLASS="l">")</SPAN></P>
[<SPAN CLASS="p">workspace</SPAN> | <SPAN CLASS="p">group</SPAN>]<SPAN CLASS="l">.</SPAN><SPAN CLASS="eln">Users</SPAN><SPAN CLASS="l">![</SPAN><SPAN CLASS="p">name</SPAN><SPAN CLASS="l">]</SPAN></P>
Properties</P>
<SPAN CLASS="eln">Name</SPAN> property, <SPAN CLASS="eln">Password</SPAN> property, <SPAN CLASS="eln">PID</SPAN> property.</P>
Methods</P>
<SPAN CLASS="eln">CreateGroup</SPAN> method, <SPAN CLASS="eln">NewPassword</SPAN> method.</P>
See Also</P>
<SPAN CLASS="eln">CreateUser</SPAN> method.</P>
Specifics (Microsoft Access)</P>
You can create <SPAN CLASS="eln">User</SPAN> objects to establish and enforce <SPAN CLASS="pop">permissions</SPAN> for Microsoft Access <SPAN CLASS="pop">database objects</SPAN> as well as for <SPAN CLASS="pop">Data Access Objects</SPAN>. For example, you can set security for forms, reports, macros, and modules.</P>
A <SPAN CLASS="eln">User</SPAN> object has a <SPAN CLASS="eln">Name</SPAN> property that you can use in setting permissions for a <SPAN CLASS="eln">Container</SPAN> or <SPAN CLASS="eln">Document</SPAN> object. For example, you can assign the value of a <SPAN CLASS="eln">User</SPAN> object's <SPAN CLASS="eln">Name</SPAN> property to the <SPAN CLASS="eln">UserName</SPAN> property of a <SPAN CLASS="eln">Container</SPAN> or <SPAN CLASS="eln">Document</SPAN> object. You can then set the <SPAN CLASS="eln">Permissions</SPAN> property of the <SPAN CLASS="eln">Container</SPAN> or <SPAN CLASS="eln">Document</SPAN> object to establish permissions for the user defined by the <SPAN CLASS="eln">UserName</SPAN> property. Or you can read the <SPAN CLASS="eln">Permissions</SPAN> property to determine existing permissions for that user.</P>
Example</P>
See the <SPAN CLASS="eln">Group</SPAN> object example.</P>
Example (Microsoft Access)</P>
The following example creates a new <SPAN CLASS="eln">User</SPAN> object and appends it to the <SPAN CLASS="eln">Users</SPAN> collection of a <SPAN CLASS="eln">Workspace</SPAN> object. It then creates a new <SPAN CLASS="eln">Group</SPAN> object and appends it to the <SPAN CLASS="eln">Groups</SPAN> collection of the <SPAN CLASS="eln">Workspace</SPAN> object. The new <SPAN CLASS="eln">User</SPAN> object is also appended to the <SPAN CLASS="eln">Users</SPAN> collection of the <SPAN CLASS="eln">Group</SPAN> object. The new user is then given read-data permissions on tables.</P>
Note that in order to assign users to groups, you must either append a <SPAN CLASS="eln">User</SPAN> object to the <SPAN CLASS="eln">Users</SPAN> collection of a <SPAN CLASS="eln">Group</SPAN> object, or append a <SPAN CLASS="eln">Group</SPAN> object to the <SPAN CLASS="eln">Groups</SPAN> collection of a <SPAN CLASS="eln">User</SPAN> object. It doesn't matter which option you choose; either will result in the specified user being included in the specified group.</P>
<SPAN CLASS="nh">Note</SPAN>   When programming security, you should avoid including password and PID information in your code. The following example is intended for demonstration purposes only.</P>

<pre><code>Sub NewTablesUser()
    Dim wsp As Workspace, dbs As Database
    Dim usr As User, grp As Group, usrMember As User
    Dim ctr As Container, doc As Document

    ' Return reference to default workspace.
    Set wsp = DBEngine.Workspaces(0)
    ' Return reference to current database.
    Set dbs = CurrentDb
    ' Create User object and append to Users collection
    ' of Workspace object.
    Set usr = wsp.CreateUser("Chris Jones", "123abc456DEF", "Password")
    wsp.Users.Append usr
    ' Create Group object and append to Groups collection
    ' of Workspace object.
    Set grp = wsp.CreateGroup("Marketing", "321xyz654EFD")
    wsp.Groups.Append grp
    ' Append new User object to Users collection of new Group object.
    Set usrMember = grp.CreateUser("Chris Jones")
    grp.Users.Append usrMember
    ' Refresh Users collection of Group object.
    grp.Users.Refresh
    ' Return Container object.
    Set ctr = dbs.Containers!Tables
    ' Set UserName property of Container object.
    ctr.UserName = usrMember.Name
    ' Add retrieve permissions for new user on all tables.
    ctr.Permissions = ctr.Permissions Or dbSecRetrieveData
    Set dbs = Nothing
    Set wsp = Nothing
End Sub</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
