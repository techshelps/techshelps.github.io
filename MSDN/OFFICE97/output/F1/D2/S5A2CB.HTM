<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NoMatch Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>NoMatch Property</H1>Applies To</P>
Dynaset-Type <SPAN CLASS="eln">Recordset</SPAN> object, <SPAN CLASS="eln">Recordset</SPAN> object, Snapshot-Type <SPAN CLASS="eln">Recordset</SPAN> object, Table-Type <SPAN CLASS="eln">Recordset</SPAN> object.</P>
Description</P>
Indicates whether a particular record was found by using the <SPAN CLASS="eln">Seek</SPAN> method or one of the Find methods (<SPAN CLASS="pop">Microsoft Jet workspaces</SPAN> only).</P>
Return Values</P>
The return value is a Boolean that is <SPAN CLASS="eln">True</SPAN> if the desired record was not found. When you open or create a Recordset object, its <SPAN CLASS="eln">NoMatch</SPAN> property is set to <SPAN CLASS="eln">False</SPAN>.</P>
Remarks</P>
To locate a record, use the <SPAN CLASS="eln">Seek</SPAN> method on a table-type <SPAN CLASS="eln">Recordset</SPAN> object or one of the <SPAN CLASS="eln">Find</SPAN> methods on a dynaset- or snapshot-type <SPAN CLASS="eln">Recordset</SPAN> object. Check the <SPAN CLASS="eln">NoMatch</SPAN> property setting to see whether the record was found.</P>
If the <SPAN CLASS="eln">Seek</SPAN> or <SPAN CLASS="eln">Find</SPAN> method is unsuccessful and the <SPAN CLASS="eln">NoMatch</SPAN> property is <SPAN CLASS="eln">True</SPAN>, the <SPAN CLASS="pop">current record</SPAN> will no longer be valid. Be sure to obtain the current record's <SPAN CLASS="pop">bookmark</SPAN> before using the <SPAN CLASS="eln">Seek</SPAN> method or a <SPAN CLASS="eln">Find</SPAN> method if you'll need to return to that record.</P>
<SPAN CLASS="nh">Note</SPAN>   Using any of the Move methods on a <SPAN CLASS="eln">Recordset</SPAN> object won't affect its <SPAN CLASS="eln">NoMatch</SPAN> property setting.</P>
See Also</P>
<SPAN CLASS="eln">BOF</SPAN>, <SPAN CLASS="eln">EOF</SPAN> properties, <SPAN CLASS="eln">FindFirst</SPAN>, <SPAN CLASS="eln">FindLast</SPAN>, <SPAN CLASS="eln">FindNext</SPAN>, <SPAN CLASS="eln">FindPrevious</SPAN> methods, <SPAN CLASS="eln">Seek</SPAN> method.</P>
Example</P>
This example uses the <SPAN CLASS="eln">NoMatch</SPAN> property to determine whether a <SPAN CLASS="eln">Seek</SPAN> and a <SPAN CLASS="eln">FindFirst</SPAN> were successful, and if not, to give appropriate feedback. The SeekMatch and FindMatch procedures are required for this procedure to run.</P>

<pre><code>Sub NoMatchX()

    Dim dbsNorthwind As Database
    Dim rstProducts As Recordset
    Dim rstCustomers As Recordset
    Dim strMessage As String
    Dim strSeek As String
    Dim strCountry As String
    Dim varBookmark As Variant
    Set dbsNorthwind = OpenDatabase("Northwind.mdb")
    ' Default is dbOpenTable; required if Index property will
    ' be used.
    Set rstProducts = dbsNorthwind.OpenRecordset("Products")

    With rstProducts
        .Index = "PrimaryKey"

        Do While True
            ' Show current record information; ask user for
            ' input.
            strMessage = "NoMatch with Seek method" &amp; vbCr &amp; _
                "Product ID: " &amp; !ProductID &amp; vbCr &amp; _
                "Product Name: " &amp; !ProductName &amp; vbCr &amp; _
                "NoMatch = " &amp; .NoMatch &amp; vbCr &amp; vbCr &amp; _
                "Enter a product ID."
            strSeek = InputBox(strMessage)
            If strSeek = "" Then Exit Do

            ' Call procedure that seeks for a record based on
            ' the ID number supplied by the user.
            SeekMatch rstProducts, Val(strSeek)
        Loop

        .Close
    End With

    Set rstCustomers = dbsNorthwind.OpenRecordset( _
        "SELECT CompanyName, Country FROM Customers " &amp; _
        "ORDER BY CompanyName", dbOpenSnapshot)

    With rstCustomers

        Do While True
            ' Show current record information; ask user for
            ' input.
            strMessage = "NoMatch with FindFirst method" &amp; _
                vbCr &amp; "Customer Name: " &amp; !CompanyName &amp; _
                vbCr &amp; "Country: " &amp; !Country &amp; vbCr &amp; _
                "NoMatch = " &amp; .NoMatch &amp; vbCr &amp; vbCr &amp; _
                "Enter country on which to search."
            strCountry = Trim(InputBox(strMessage))
            If strCountry = "" Then Exit Do

            ' Call procedure that finds a record based on
            ' the country name supplied by the user.
            FindMatch rstCustomers, _
                "Country = '" &amp; strCountry &amp; "'"
        Loop

        .Close
    End With

    dbsNorthwind.Close

End Sub

Sub SeekMatch(rstTemp As Recordset, _
    intSeek As Integer)

    Dim varBookmark As Variant
    Dim strMessage As String

    With rstTemp
        ' Store current record location.
        varBookmark = .Bookmark
        .Seek "=", intSeek

        ' If Seek method fails, notify user and return to the
        ' last current record.
        If .NoMatch Then
            strMessage = _
                "Not found! Returning to current record." &amp; _
                vbCr &amp; vbCr &amp; "NoMatch = " &amp; .NoMatch
            MsgBox strMessage
            .Bookmark = varBookmark
        End If

    End With

End Sub

Sub FindMatch(rstTemp As Recordset, _
    strFind As String)

    Dim varBookmark As Variant
    Dim strMessage As String

    With rstTemp
        ' Store current record location.
        varBookmark = .Bookmark
        .FindFirst strFind

        ' If Find method fails, notify user and return to the
        ' last current record.
        If .NoMatch Then
            strMessage = _
                "Not found! Returning to current record." &amp; _
                vbCr &amp; vbCr &amp; "NoMatch = " &amp; .NoMatch
            MsgBox strMessage
            .Bookmark = varBookmark
        End If

    End With

End Sub</code></pre>
Example (Microsoft Access)</P>
The following example uses the <SPAN CLASS="eln">NoMatch</SPAN> property to determine whether a <SPAN CLASS="eln">FindFirst</SPAN> method process has been successful:</P>

<pre><code>Function FindCountry() As Integer
    Dim dbs As Database, rst As Recordset
    Dim strCountry As String

    ' Return reference to current database.
    Set dbs = CurrentDb
    ' Create dynaset-type Recordset object.
    Set rst = dbs.OpenRecordset("Orders", dbOpenDynaset)
    strCountry = InputBox("Please enter country name.")
    rst.FindFirst "ShipCountry = '" &amp; strCountry &amp; "'"
    If rst.NoMatch Then
        FindCountry = False
    Else
        FindCountry = True
        Debug.Print rst!OrderID
    End If
    rst.Close
    Set dbs = Nothing
End Function</code></pre>
Example (Microsoft Excel)</P>
This example adds all the names of contacts for the state of Washington to a list on worksheet one. The data is drawn from the Customer recordset in the Nwindex.mdb database.</P>
To create the Nwindex.mdb database, run the Microsoft Excel example for the <SPAN CLASS="lee">CreateDatabase</SPAN> method.</P>

<pre><code>Dim db As Database
Dim rs As Recordset
rw = 0
Set db = Workspaces(0).OpenDatabase(Application.Path &amp; "\NWINDEX.MDB")
Set rs = db.OpenRecordset("SELECT * FROM Customer")
criteria = "[REGION] = 'WA'"
Set wk = Worksheets.Add
rs.FindFirst criteria
Do Until rs.NoMatch
    rw = rw + 1
    wk.Range(rw, 1).Value = rs.fields("CONTACT").Value
    rs.FindNext criteria
Loop
rs.Close
db.Close</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
