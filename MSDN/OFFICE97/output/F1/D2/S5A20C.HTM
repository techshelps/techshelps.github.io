<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SendKeys Action</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>SendKeys Action</H2>Description</P>
You can use the SendKeys action to send keystrokes directly to Microsoft Access or to an active Windows-based application.</P>
Setting</P>
The SendKeys action has the following arguments.</P>

<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="91pt" VALIGN="TOP"><COL WIDTH="268pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Action argument</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Keystrokes</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The keystrokes you want Microsoft Access or the application to process. Enter the keystrokes in the <SPAN CLASS="eln">Keystrokes</SPAN> box in the <SPAN CLASS="eln">Action Arguments</SPAN> section of the <SPAN CLASS="pop">Macro window</SPAN>. You can type up to 255 characters. This is a required argument.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Wait</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Specifies whether the <SPAN CLASS="pop">macro</SPAN> should pause until the keystrokes have been processed. Click <SPAN CLASS="eln">Yes</SPAN> (to pause) or <SPAN CLASS="eln">No</SPAN> (not to pause). The default is No.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
Microsoft Access processes the keystrokes it receives through the SendKeys action exactly as if you had typed them directly in a Microsoft Access window.</P>
To specify the keystrokes, use the same syntax as the SendKeys statement.</P>
<SPAN CLASS="nh">Note</SPAN>   An error can occur if the Keystrokes argument contains incorrect syntax, misspelled text, or other values that aren't appropriate for the window the keystrokes are sent to.</P>
You can use this action to enter information in a dialog box, particularly if you don't want to interrupt the macro to respond manually to the dialog box. Some Microsoft Access actions, such as <SPAN CLASS="jump">PrintOut</SPAN> and <SPAN CLASS="jump">FindRecord</SPAN>, automatically select the options in certain frequently used dialog boxes. You can use the SendKeys action to select the options in less commonly used dialog boxes.</P>
<SPAN CLASS="nh">Notes</SPAN></P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">Because the dialog box suspends the macro, you must put the SendKeys action before the action that causes the dialog box to open and set the Wait argument to No.</LI><LI CLASS="ULI1">The timing of the keystrokes reaching Microsoft Access or another application can be tricky. As a result, it's recommended that if there's some other method (such as the FindRecord action) you can use to achieve a desired task, use that method rather than using the SendKeys action to fill in the options in a dialog box.
</LI></UL></SPAN>If you want to send more than 255 characters to Microsoft Access or another Windows-based application, you can use several SendKeys actions in succession in a macro.</P>
Using the SendKeys action to send keystrokes triggers the appropriate <SPAN CLASS="jump">KeyDown, KeyUp</SPAN>, and <SPAN CLASS="jump">KeyPress</SPAN> events. Sending non-<SPAN CLASS="pop">ANSI</SPAN> keystrokes (such as a function key) doesn't trigger the KeyPress event.</P>
This action isn't available from Visual Basic. Use the <SPAN CLASS="eln">SendKeys</SPAN> statement instead.</P>
See Also</P>
GoToControl action, KeyDown, KeyUp events, KeyPress event, PrintOut action, SelectObject action, <SPAN CLASS="eln">SendKeys</SPAN> statement, SetValue action.</P>
<HR CLASS="rr"></FONT></BODY>
</HTML>
