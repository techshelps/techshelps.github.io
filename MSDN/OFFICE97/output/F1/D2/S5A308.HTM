<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Unique Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Unique Property</H1>Applies To</P>
<SPAN CLASS="eln">Index</SPAN> object.</P>
Description</P>
Sets or returns a value that indicates whether an Index object represents a unique (key) index for a table (<SPAN CLASS="pop">Microsoft Jet workspaces</SPAN> only).</P>
Settings and Return Values</P>
The setting or return value is a Boolean that is <SPAN CLASS="eln">True</SPAN> if the <SPAN CLASS="eln">Index</SPAN> object represents a unique index. For an <SPAN CLASS="eln">Index</SPAN> object, this property setting is read/write until the object is appended to a collection, after which it's read-only.</P>
Remarks</P>
A unique index consists of one or more fields that logically arrange all records in a table in a unique, predefined order. If the index consists of one field, values in that field must be unique for the entire table. If the index consists of more than one field, each field can contain duplicate values, but each combination of values from all the indexed fields must be unique.</P>
If both the <SPAN CLASS="eln">Unique</SPAN> and <SPAN CLASS="eln">Primary</SPAN> properties of an <SPAN CLASS="eln">Index</SPAN> object are set to <SPAN CLASS="eln">True</SPAN>, the&nbsp;index is unique and primary: It uniquely identifies all records in the table in a&nbsp;predefined, logical order. If the <SPAN CLASS="eln">Primary</SPAN> property is set to <SPAN CLASS="eln">False</SPAN>, the index is a secondary index. Secondary indexes (both key and nonkey) logically arrange records in a predefined order without serving as an identifier for records in the table.</P>
<SPAN CLASS="eln">Notes</SPAN></P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">You don't have to create indexes for tables, but in large, unindexed tables, accessing a specific record can take a long time.</LI><LI CLASS="ULI1">Records retrieved from tables without indexes are returned in no particular sequence.</LI><LI CLASS="ULI1">The <SPAN CLASS="eln">Attributes</SPAN> property of each Field object in the <SPAN CLASS="eln">Index</SPAN> object determines the order of records and consequently determines the access techniques to use for that <SPAN CLASS="eln">Index</SPAN> object.</LI><LI CLASS="ULI1">A unique index helps optimize finding records.</LI><LI CLASS="ULI1">Indexes don't affect the physical order of a <SPAN CLASS="pop">base table</SPAN> — indexes affect only how the records are accessed by the table-type Recordset object when a particular index is chosen or when the <SPAN CLASS="pop">Microsoft Jet database engine</SPAN> creates <SPAN CLASS="eln">Recordset</SPAN> objects.</LI></UL></SPAN>See Also</P>
<SPAN CLASS="eln">Attributes</SPAN> property, <SPAN CLASS="eln">Clustered</SPAN> property, <SPAN CLASS="eln">Primary</SPAN> property.</P>
Example</P>
This example sets the <SPAN CLASS="eln">Unique</SPAN> property of a new <SPAN CLASS="eln">Index</SPAN> object to <SPAN CLASS="eln">True</SPAN>, and appends the <SPAN CLASS="eln">Index</SPAN> to the <SPAN CLASS="eln">Indexes</SPAN> collection of the Employees table. It then enumerates the <SPAN CLASS="eln">Indexes</SPAN> collection of the <SPAN CLASS="eln">TableDef</SPAN> and the <SPAN CLASS="eln">Properties</SPAN> collection of each <SPAN CLASS="eln">Index</SPAN>. The new <SPAN CLASS="eln">Index</SPAN> will only allow one record with a particular combination of Country, LastName, and FirstName in the <SPAN CLASS="eln">TableDef</SPAN>.</P>

<pre><code>Sub UniqueX()

    Dim dbsNorthwind As Database
    Dim tdfEmployees As TableDef
    Dim idxNew As Index
    Dim idxLoop As Index
    Dim prpLoop As Property

    Set dbsNorthwind = OpenDatabase("Northwind.mdb")
    Set tdfEmployees = dbsNorthwind!Employees

    With tdfEmployees
        ' Create and append new Index object to the Indexes
        ' collection of the Employees table.
        Set idxNew = .CreateIndex("NewIndex")

        With idxNew
            .Fields.Append .CreateField("Country")
            .Fields.Append .CreateField("LastName")
            .Fields.Append .CreateField("FirstName")
            .Unique = True
        End With

        .Indexes.Append idxNew
        .Indexes.Refresh

        Debug.Print .Indexes.Count &amp; " Indexes in " &amp; _
            .Name &amp; " TableDef"

        ' Enumerate Indexes collection of Employees table.
        For Each idxLoop In .Indexes
            Debug.Print "    " &amp; idxLoop.Name

            ' Enumerate Properties collection of each Index
            ' object.
            For Each prpLoop In idxLoop.Properties
                Debug.Print "        " &amp; prpLoop.Name &amp; _
                    " = " &amp; IIf(prpLoop = "", "[empty]", prpLoop)
            Next prpLoop

        Next idxLoop

        ' Delete new Index because this is a demonstration.
        .Indexes.Delete idxNew.Name
    End With

    dbsNorthwind.Close

End Sub</code></pre>
Example (Microsoft Access)</P>
See the <SPAN CLASS="eln">IgnoreNulls</SPAN> property example (Microsoft Access).</P>
<HR CLASS="rr"></FONT></BODY>
</HTML>
