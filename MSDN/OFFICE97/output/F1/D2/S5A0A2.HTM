<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Database Properties</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>Database Properties</H2>Applies To</P>
<SPAN CLASS="eln">Database</SPAN> object.</P>
Description</P>
The <SPAN CLASS="eln">Database</SPAN> properties allow you to provide additional information about your database. To view the <SPAN CLASS="eln">Database</SPAN> properties, click <SPAN CLASS="eln">Database Properties</SPAN> on the <SPAN CLASS="eln">File</SPAN> menu.</P>
Setting</P>
You can set these properties by entering information in the <SPAN CLASS="eln">Summary</SPAN> or <SPAN CLASS="eln">Custom</SPAN> tabs in the <SPAN CLASS="p">DatabaseName</SPAN><SPAN CLASS="eln"> Properties</SPAN> dialog box or by using <SPAN CLASS="jump">Visual Basic</SPAN>.</P>
In Visual Basic, if a <SPAN CLASS="eln">Database</SPAN> property hasn't already been set in the <SPAN CLASS="p">DatabaseName</SPAN><SPAN CLASS="eln"> Properties</SPAN> dialog box, you must create the property by using the CreateProperty method and append it to the Properties collection of a Document object. With Visual Basic, you can set the properties that appear on the <SPAN CLASS="eln">Summary</SPAN> tab by using the SummaryInfo <SPAN CLASS="eln">Document</SPAN> object in the Documents collection. You set properties in the <SPAN CLASS="eln">Custom</SPAN> tab by using the UserDefined <SPAN CLASS="eln">Document</SPAN> object in the <SPAN CLASS="eln">Documents</SPAN> collection. You must supply a name, data type, and default value for a custom <SPAN CLASS="eln">Database</SPAN> property before you can add it to your database. For more information, the <SPAN CLASS="eln">Documents</SPAN> collection specifics (Microsoft Access) in the "DAO Language Reference" part.</P>
<SPAN CLASS="nh">Note</SPAN>   You can only enter or edit the properties that appear on the <SPAN CLASS="eln">Summary</SPAN> or <SPAN CLASS="eln">Custom</SPAN> tabs. The other <SPAN CLASS="eln">Database</SPAN> properties are read-only.</P>
Remarks</P>
The <SPAN CLASS="eln">Database</SPAN> properties appear in the <SPAN CLASS="p">DatabaseName</SPAN><SPAN CLASS="eln"> Properties</SPAN> dialog box on the following tabs.</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="91pt" VALIGN="TOP"><COL WIDTH="268pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Tab</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">General</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">This is the same information that is displayed when you right-click the name of a file in Windows Explorer and then click <SPAN CLASS="eln">Properties</SPAN> on the shortcut menu. The only difference is that when these properties are viewed in Microsoft Access, the Attributes settings are read-only.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">Summary</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The information you enter on this tab is added to the SummaryInfo <SPAN CLASS="eln">Document</SPAN> object in the <SPAN CLASS="eln">Documents</SPAN> collection. This information is similar to the summary information you can provide in other Microsoft Office applications. Summary information allows the user to better identify a database both from within Microsoft Access and from other programs such as the Windows Find Files program.</P>
The <SPAN CLASS="eln">Hyperlink Base</SPAN> setting on the <SPAN CLASS="eln">Summary</SPAN> tab is used to create the base hyperlink path that is appended to the beginning of relative HyperlinkAddress property settings.</P></TD></TR></TBODY></TABLE>
<BR></P><I>(continued)</I></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="71pt" VALIGN="TOP"><COL WIDTH="300pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">Statistics</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">This information includes the date and time the active database was created, and the last date and time it was modified, accessed, and printed.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">Contents</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">This information includes the names of the objects contained in your database.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">Custom</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The custom properties you enter become properties of the UserDefined <SPAN CLASS="eln">Document</SPAN> object in the <SPAN CLASS="eln">Documents</SPAN> collection.</P></TD></TR></TBODY></TABLE>
<BR></P>See Also</P>
<SPAN CLASS="eln">Append</SPAN> method ("DAO Language Reference"), <SPAN CLASS="eln">Containers</SPAN> collection ("DAO Language Reference"), <SPAN CLASS="eln">CreateProperty</SPAN> method ("DAO Language Reference"), <SPAN CLASS="eln">Document</SPAN> object ("DAO Language Reference"), <SPAN CLASS="eln">Documents</SPAN> collection ("DAO Language Reference"), <SPAN CLASS="eln">Properties</SPAN> collection ("DAO Language Reference").</P>
Example</P>
In the following example, you can set or create a custom user-defined property that will appear on the <SPAN CLASS="eln">Custom</SPAN> tab of the <SPAN CLASS="p">DatabaseName</SPAN><SPAN CLASS="eln"> Properties</SPAN> dialog box. For example, you could call the SetCustomProperty function to add a new property called LastUserName to the UserDefined <SPAN CLASS="eln">Document</SPAN> object in the database. The arguments passed to the SetCustomProperty function are those required to execute the <SPAN CLASS="eln">CreateProperty</SPAN> method.</P>

<pre><code>Dim strName As String, strValue As String

' Set property name variable.
strName = "LastUserName"
' Set property value variable.
strValue = InputBox("Please enter your full name")
If SetCustomProperty(strName, dbText, strValue) &lt;&gt; True Then
    ' Error occurred trying to set property.
    MsgBox "Error occurred trying to set property."
End If

Function SetCustomProperty(strPropName As String, intPropType _
    As Integer, strPropValue As String) As Integer

    Dim dbs As Database, cnt As Container
    Dim doc As Document, prp As Property

    Const conPropertyNotFound = 3270        ' Property not found error.
    Set dbs = CurrentDb                    ' Define Database object.
    Set cnt = dbs.Containers!Databases        ' Define Container object.
    Set doc = cnt.Documents!UserDefined    ' Define Document object.
    On Error GoTo SetCustom_Err
    doc.Properties.Refresh
    ' Set custom property name. If error occurs here it means
    ' property doesn't exist and needs to be created and appended
    ' to Properties collection of Document object.
    Set prp = doc.Properties(strPropName)
    prp = strPropValue                        ' Set custom property value.
    SetCustomProperty = True
SetCustom_Bye:
    Exit Function

SetCustom_Err:
    If Err = conPropertyNotFound Then
        Set prp = doc.CreateProperty(strPropName, intPropType, strPropValue)
        doc.Properties.Append prp        ' Append to collection.
        Resume Next
    Else                                        ' Unknown error.
        SetCustomProperty = False    
        Resume SetCustom_Bye
    End If
End Function</code></pre>
The next example demonstrates how to display information from the <SPAN CLASS="eln">Summary</SPAN> tab of the <SPAN CLASS="p">DatabaseName</SPAN><SPAN CLASS="eln"> Properties</SPAN> dialog box. The application's title, subject, and author are displayed in text box controls on a form. In this example, if the property hasn't already been set, "None" is returned from the procedure. If an unknown error occurs, a zero-length string (" ") is returned.</P>

<pre><code>Private Sub Form_Open(Cancel As Integer)
    Dim strTitle As String, strSubject As String, strAuthor As String

    strTitle = "Title"
    strSubject = "Subject"
    strAuthor = "Author"

    Me!txtTitle = GetSummaryInfo(strTitle)
    Me!txtSubject = GetSummaryInfo(strSubject)
    Me!txtAuthor = GetSummaryInfo(strAuthor)
End Sub

Function GetSummaryInfo(strPropName As String) As String
    Dim dbs As Database, cnt As Container
    Dim doc As Document, prp As Property

    ' Property not found error.
    Const conPropertyNotFound = 3270
    On Error GoTo GetSummary_Err
    Set dbs = CurrentDb
    Set cnt = dbs.Containers!Databases
    Set doc = cnt.Documents!SummaryInfo
    doc.Properties.Refresh
    GetSummaryInfo = doc.Properties(strPropName)

GetSummary_Bye:
    Exit Function

GetSummary_Err:
    If Err = conPropertyNotFound Then
        Set prp = doc.CreateProperty(strPropName, dbText, "None")
        ' Append to collection.
        doc.Properties.Append prp
        Resume
    Else
        ' Unknown error.
        GetSummaryInfo = ""
        Resume GetSummary_Bye
    End If
End Function</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
