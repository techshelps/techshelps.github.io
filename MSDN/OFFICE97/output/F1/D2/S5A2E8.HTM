<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Refresh Method</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Refresh Method</H1>Applies To</P>
<SPAN CLASS="eln">Connections</SPAN> collection, <SPAN CLASS="eln">Databases</SPAN> collection, <SPAN CLASS="eln">Documents</SPAN> collection, <SPAN CLASS="eln">Errors</SPAN> collection, <SPAN CLASS="eln">Fields</SPAN> collection, <SPAN CLASS="eln">Groups</SPAN> collection, <SPAN CLASS="eln">Indexes</SPAN> collection, <SPAN CLASS="eln">Parameters</SPAN> collection, <SPAN CLASS="eln">Properties</SPAN> collection, <SPAN CLASS="eln">QueryDefs</SPAN> collection, <SPAN CLASS="eln">Recordsets</SPAN> collection, <SPAN CLASS="eln">Relations</SPAN> collection, <SPAN CLASS="eln">TableDefs</SPAN> collection, <SPAN CLASS="eln">Users</SPAN> collection, <SPAN CLASS="eln">Workspaces</SPAN> collection.</P>
Description</P>
Updates the objects in a collection to reflect the current database's schema.</P>
Syntax</P>
<SPAN CLASS="p">collection</SPAN><SPAN CLASS="eln">.Refresh</SPAN></P>
The <SPAN CLASS="p">collection</SPAN> placeholder is an <SPAN CLASS="pop">object variable</SPAN> that represents a <SPAN CLASS="pop">persistent</SPAN> collection.</P>
Remarks</P>
You can't use the <SPAN CLASS="eln">Refresh</SPAN> method with collections that aren't persistent, such as Connections, Databases, Recordsets, Workspaces, or the QueryDefs collection of a Connection object.</P>
To determine the position that the <SPAN CLASS="pop">Microsoft&nbsp;Jet database engine</SPAN> uses for <SPAN CLASS="eln">Field</SPAN> objects&nbsp;in the <SPAN CLASS="eln">Fields</SPAN> collection of a QueryDef, Recordset, or TableDef object, use the&nbsp;<SPAN CLASS="eln">OrdinalPosition</SPAN> property of each <SPAN CLASS="eln">Field</SPAN> object. Changing the <SPAN CLASS="eln">OrdinalPosition</SPAN> property of a <SPAN CLASS="eln">Field</SPAN> object may not change the order of the <SPAN CLASS="eln">Field</SPAN> objects in the collection until you use the <SPAN CLASS="eln">Refresh</SPAN> method.</P>
Use the <SPAN CLASS="eln">Refresh</SPAN> method in multiuser environments in which other users may change the database. You may also need to use it on any collections that are indirectly affected by changes to the database. For example, if you change a <SPAN CLASS="eln">Users</SPAN> collection, you may need to refresh a <SPAN CLASS="eln">Groups</SPAN> collection before using the <SPAN CLASS="eln">Groups</SPAN> collection.</P>
A collection is filled with objects the first time it's referred to and won't automatically reflect subsequent changes other users make. If it's likely that another user has changed a collection, use the <SPAN CLASS="eln">Refresh</SPAN> method on the collection immediately before carrying out any task in your application that assumes the presence or absence of a particular object in the collection. This will ensure that the collection is as up-to-date as possible. On the other hand, using <SPAN CLASS="eln">Refresh</SPAN> can unnecessarily slow performance.</P>
See Also</P>
<SPAN CLASS="eln">Append</SPAN> method, <SPAN CLASS="eln">Close</SPAN> method, <SPAN CLASS="eln">Delete</SPAN> method, <SPAN CLASS="eln">OrdinalPosition</SPAN> property, <SPAN CLASS="eln">Requery</SPAN>&nbsp;method.</P>
Example</P>
This example uses the <SPAN CLASS="eln">Refresh</SPAN> method to update the <SPAN CLASS="eln">Fields</SPAN> collection of the Categories table based on changes to the <SPAN CLASS="eln">OrdinalPosition</SPAN> data. The order of the <SPAN CLASS="eln">Fields</SPAN> in the collection changes only after the <SPAN CLASS="eln">Refresh</SPAN> method is used.</P>

<pre><code>Sub RefreshX()

    Dim dbsNorthwind As Database
    Dim tdfEmployees As TableDef
    Dim aintPosition() As Integer
    Dim astrFieldName() As String
    Dim intTemp As Integer
    Dim fldLoop As Field

    Set dbsNorthwind = OpenDatabase("Northwind.mdb")
    Set tdfEmployees = dbsNorthwind.TableDefs("Categories")

    With tdfEmployees
        ' Display original OrdinalPosition data and store it
        ' in an array.
        Debug.Print _
            "Original OrdinalPosition data in TableDef."
        ReDim aintPosition(0 To .Fields.Count - 1) As Integer
        ReDim astrFieldName(0 To .Fields.Count - 1) As String
        For intTemp = 0 To .Fields.Count - 1
            aintPosition(intTemp) = _
                .Fields(intTemp).OrdinalPosition
            astrFieldName(intTemp) = .Fields(intTemp).Name
            Debug.Print , aintPosition(intTemp), _
                astrFieldName(intTemp)
        Next intTemp
        ' Change OrdinalPosition data.
        For Each fldLoop In .Fields
            fldLoop.OrdinalPosition = _
                100 - fldLoop.OrdinalPosition
        Next fldLoop
        Set fldLoop = Nothing

        ' Print new data.
        Debug.Print "New OrdinalPosition data before Refresh."
        For Each fldLoop In .Fields
            Debug.Print , fldLoop.OrdinalPosition, fldLoop.Name
        Next fldLoop

        .Fields.Refresh

        ' Print new data, showing how the field order has been
        ' changed.
        Debug.Print "New OrdinalPosition data after Refresh."
        For Each fldLoop In .Fields
            Debug.Print , fldLoop.OrdinalPosition, fldLoop.Name
        Next fldLoop

        ' Restore original OrdinalPosition data.
        For intTemp = 0 To .Fields.Count - 1
            .Fields(astrFieldName(intTemp)).OrdinalPosition = _
                aintPosition(intTemp)
        Next intTemp
    End With

    dbsNorthwind.Close

End Sub</code></pre>
Example (Microsoft&nbsp;Access)</P>
The following example refreshes the <SPAN CLASS="eln">Indexes</SPAN> collection of a <SPAN CLASS="eln">TableDef</SPAN> object. In a database in a multiuser environment, you can use the <SPAN CLASS="eln">Refresh</SPAN> method to show changes made by other users to the <SPAN CLASS="eln">Index</SPAN> objects in a <SPAN CLASS="eln">TableDef</SPAN> object's <SPAN CLASS="eln">Indexes</SPAN> collection.</P>

<pre><code>Sub RefreshIndex()
    Dim dbs As Database, tdf As TableDef
    Dim idx As Index, fld As Field
    
    ' Return reference to current database.
    Set dbs = CurrentDb
    Set tdf = dbs.TableDefs!Employees
    tdf.Indexes.Refresh
    For Each idx In tdf.Indexes
        Debug.Print idx.Name; ":"
        For Each fld In idx.Fields
            Debug.Print "   "; fld.Name
        Next fld
    Next idx
    Set dbs = Nothing
End Sub</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
