<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RefreshLink Method</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>RefreshLink Method</H1>Applies To</P>
<SPAN CLASS="eln">TableDef</SPAN> object.</P>
Description</P>
Updates the connection information for a <SPAN CLASS="pop">linked table</SPAN> (<SPAN CLASS="pop">Microsoft&nbsp;Jet workspaces</SPAN> only).</P>
Syntax</P>
<SPAN CLASS="p">tabledef</SPAN><SPAN CLASS="eln">.RefreshLink</SPAN></P>
The <SPAN CLASS="p">tabledef</SPAN> placeholder specifies the TableDef object representing the linked table whose connection information you want to update.</P>
Remarks</P>
To change the connection information for a linked table, reset the <SPAN CLASS="eln">Connect</SPAN> property of the corresponding <SPAN CLASS="eln">TableDef</SPAN> object and then use the <SPAN CLASS="eln">RefreshLink</SPAN> method to update the information. Using <SPAN CLASS="eln">RefreshLink</SPAN> method doesn't change the linked table's properties and <SPAN CLASS="eln">Relation</SPAN> objects.</P>
For this connection information to exist in all collections associated with the <SPAN CLASS="eln">TableDef</SPAN> object that represents the linked table, you must use the <SPAN CLASS="eln">Refresh</SPAN> method on each collection.</P>
See Also</P>
<SPAN CLASS="eln">Connect</SPAN> property, <SPAN CLASS="eln">Refresh</SPAN> method.</P>
Example</P>
This example uses the <SPAN CLASS="eln">RefreshLink</SPAN> method to refresh the data in a linked table after its connection has been changed from one data source to another. The RefreshLinkOutput procedure is required for this procedure to run.</P>

<pre><code>Sub RefreshLinkX()

    Dim dbsCurrent As Database
    Dim tdfLinked As TableDef

    ' Open a database to which a linked table can be
    ' appended.
    Set dbsCurrent = OpenDatabase("DB1.mdb")

    ' Create a linked table that points to a Microsoft
    ' SQL Server database.
    Set tdfLinked = _
        dbsCurrent.CreateTableDef("AuthorsTable")
    tdfLinked.Connect = _
        "ODBC;DATABASE=pubs;UID=sa;PWD=;DSN=Publishers"
    tdfLinked.SourceTableName = "authors"
    dbsCurrent.TableDefs.Append tdfLinked

    ' Display contents of linked table.
    Debug.Print _
        "Data from linked table connected to first source:"
    RefreshLinkOutput dbsCurrent

    ' Change connection information for linked table and
    ' refresh the connection in order to make the new data
    ' available.
    tdfLinked.Connect = _
        "ODBC;DATABASE=pubs;UID=sa;PWD=;DSN=NewPublishers"
    tdfLinked.RefreshLink

    ' Display contents of linked table.
    Debug.Print _
        "Data from linked table connected to second source:"
    RefreshLinkOutput dbsCurrent

    ' Delete linked table because this is a demonstration.
    dbsCurrent.TableDefs.Delete tdfLinked.Name

    dbsCurrent.Close

End Sub

Sub RefreshLinkOutput(dbsTemp As Database)

    Dim rstRemote As Recordset
    Dim intCount As Integer

    ' Open linked table.
    Set rstRemote = _
        dbsTemp.OpenRecordset("AuthorsTable")

    intCount = 0

    ' Enumerate Recordset object, but stop at 50 records.
    With rstRemote
        Do While Not .EOF And intCount &lt; 50
            Debug.Print , .Fields(0), .Fields(1)
            intCount = intCount + 1
            .MoveNext
        Loop
        If Not .EOF Then Debug.Print , "[more records]"
        .Close
    End With

End Sub</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
