<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>AddNew Method</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>AddNew Method</H2>Applies To</P>
Dynamic-Type <SPAN CLASS="eln">Recordset</SPAN> object, Dynaset-Type <SPAN CLASS="eln">Recordset</SPAN> object, Forward-Only–Type <SPAN CLASS="eln">Recordset</SPAN> object, <SPAN CLASS="eln">Recordset</SPAN> object, Snapshot-Type <SPAN CLASS="eln">Recordset</SPAN> object, Table-Type <SPAN CLASS="eln">Recordset</SPAN> object.</P>
Description</P>
Creates a new record for an updatable Recordset object.</P>
Syntax</P>
<SPAN CLASS="p">recordset</SPAN><SPAN CLASS="eln">.AddNew</SPAN></P>
The <SPAN CLASS="p">recordset</SPAN> placeholder is an <SPAN CLASS="pop">object variable</SPAN> that represents an updatable <SPAN CLASS="eln">Recordset</SPAN> object to which you want to add a new record.</P>
Remarks</P>
Use the <SPAN CLASS="eln">AddNew</SPAN> method to create and add a new record in the <SPAN CLASS="eln">Recordset </SPAN>object named by <SPAN CLASS="p">recordset</SPAN>. This method sets the fields to default values, and if no default values are specified, it sets the fields to <SPAN CLASS="eln">Null</SPAN> (the default values specified for a table-type <SPAN CLASS="eln">Recordset</SPAN>).</P>
After you modify the new record, use the <SPAN CLASS="eln">Update</SPAN> method to save the changes and add the record to the <SPAN CLASS="eln">Recordset</SPAN>. No changes occur in the database until you use the <SPAN CLASS="eln">Update</SPAN> method.</P>
<HR CLASS="cas">
<SPAN CLASS="cah">Caution</SPAN>  &nbsp;&nbsp;&nbsp;If you issue an <SPAN CLASS="eln">AddNew</SPAN> and then perform any operation that moves to another record, but without using <SPAN CLASS="eln">Update</SPAN>, your changes are lost without warning. In addition, if you close the <SPAN CLASS="eln">Recordset</SPAN> or end the procedure that declares the <SPAN CLASS="eln">Recordset</SPAN> or its Database object, the new record is discarded without warning.</P>
<HR CLASS="cae">
<SPAN CLASS="nh">Note</SPAN>&nbsp;&nbsp;&nbsp;When you use <SPAN CLASS="eln">AddNew</SPAN> in a <SPAN CLASS="pop">Microsoft Jet workspace</SPAN> and the <SPAN CLASS="pop">database engine</SPAN> has to create a new <SPAN CLASS="pop">page</SPAN> to hold the <SPAN CLASS="pop">current record</SPAN>, page locking is <SPAN CLASS="pop">pessimistic</SPAN>. If the new record fits in an existing page, page locking is <SPAN CLASS="pop">optimistic</SPAN>.</P>
If you haven't moved to the last record of your <SPAN CLASS="eln">Recordset</SPAN>, records added to base tables by other processes may be included if they are positioned beyond the current record. If you add a record to your own <SPAN CLASS="eln">Recordset</SPAN>, however, the record is visible in the <SPAN CLASS="eln">Recordset</SPAN> and included in the underlying table where it becomes visible to any new <SPAN CLASS="eln">Recordset</SPAN> objects.</P>
The position of the new record depends on the type of <SPAN CLASS="eln">Recordset</SPAN>:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">In a dynaset-type <SPAN CLASS="eln">Recordset </SPAN>object, records are inserted at the end of the <SPAN CLASS="eln">Recordset</SPAN>, regardless of any sorting or ordering rules that were in effect when the <SPAN CLASS="eln">Recordset</SPAN> was opened.</LI><LI CLASS="ULI1">In a table-type <SPAN CLASS="eln">Recordset</SPAN> object whose <SPAN CLASS="eln">Index</SPAN> property has been set, records are returned in their proper place in the <SPAN CLASS="pop">sort order</SPAN>. If you haven't set the <SPAN CLASS="eln">Index</SPAN> property, new records are returned at the end of the <SPAN CLASS="eln">Recordset</SPAN>.
</LI></UL></SPAN>The record that was current before you used <SPAN CLASS="eln">AddNew</SPAN> remains current. If you want to make the new record current, you can set the Bookmark property to the <SPAN CLASS="pop">bookmark</SPAN> identified by the <SPAN CLASS="eln">LastModified</SPAN> property setting.</P>
<SPAN CLASS="nh">Note</SPAN>   To add, edit, or delete a record, there must be a unique index on the record in the underlying data source. If not, a "Permission denied" error will occur on the <SPAN CLASS="eln">AddNew</SPAN>, <SPAN CLASS="eln">Delete</SPAN>, or <SPAN CLASS="eln">Edit </SPAN>method call in a <SPAN CLASS="pop">Microsoft Jet workspace</SPAN>, or an "Invalid argument" error will occur on the <SPAN CLASS="eln">Update</SPAN> call in an <SPAN CLASS="pop">ODBCDirect workspace</SPAN>.</P>
See Also</P>
<SPAN CLASS="eln">Bookmark</SPAN> property, <SPAN CLASS="eln">CancelUpdate</SPAN> method, <SPAN CLASS="eln">Delete</SPAN> method, <SPAN CLASS="eln">EditMode</SPAN> property, <SPAN CLASS="eln">Index</SPAN> object, <SPAN CLASS="eln">LastModified</SPAN> property, <SPAN CLASS="eln">Move</SPAN> method, <SPAN CLASS="eln">MoveFirst</SPAN>, <SPAN CLASS="eln">MoveLast</SPAN>, <SPAN CLASS="eln">MoveNext</SPAN>, <SPAN CLASS="eln">MovePrevious</SPAN> methods, <SPAN CLASS="eln">Seek</SPAN> method, <SPAN CLASS="eln">Update</SPAN> method.</P>
Specifics (Microsoft Access)</P>
When you use a <SPAN CLASS="pop">bookmark</SPAN> in a Microsoft Access module, you must include an <SPAN CLASS="eln">Option Compare Binary</SPAN> statement in the <SPAN CLASS="pop">Declarations section</SPAN> of the module. A bookmark is a <SPAN CLASS="pop">Variant</SPAN> array of <SPAN CLASS="pop">Byte</SPAN> data, so the <SPAN CLASS="pop">string comparison</SPAN> method for the module must be binary. If a bookmark is evaluated with a text-based string comparison method, such as the <SPAN CLASS="eln">Option Compare Text</SPAN> statement or the default setting for the <SPAN CLASS="eln">Option Compare Database</SPAN> statement, the current record may be set to&nbsp;an incorrect record.</P>
Example</P>
This example uses the <SPAN CLASS="eln">AddNew</SPAN> method to create a new record with the specified name. The AddName function is required for this procedure to run.</P>

<pre><code>Sub AddNewX()

    Dim dbsNorthwind As Database
    Dim rstEmployees As Recordset
    Dim strFirstName As String
    Dim strLastName As String

    Set dbsNorthwind = OpenDatabase("Northwind.mdb")
    Set rstEmployees = _
        dbsNorthwind.OpenRecordset("Employees", dbOpenDynaset)

    ' Get data from the user.
    strFirstName = Trim(InputBox("Enter first name:"))
    strLastName = Trim(InputBox("Enter last name:"))

    ' Proceed only if the user actually entered something
    ' for both the first and last names.
    If strFirstName &lt;&gt; "" and strLastName &lt;&gt; "" Then

        ' Call the function that adds the record.
        AddName rstEmployees, strFirstName, strLastName

        ' Show the newly added data.
        With rstEmployees
            Debug.Print "New record: " &amp; !FirstName &amp; _
                " " &amp; !LastName
            ' Delete new record because this is a demonstration.
            .Delete
        End With

    Else
        Debug.Print _
            "You must input a string for first and last name!"
    End If

    rstEmployees.Close
    dbsNorthwind.Close

End Sub

Function AddName(rstTemp As Recordset,
    strFirst As String, strLast As String)

    ' Adds a new record to a Recordset using the data passed
    ' by the calling procedure. The new record is then made
    ' the current record.
    With rstTemp
        .AddNew
        !FirstName = strFirst
        !LastName = strLast
        .Update
        .Bookmark = .LastModified
    End With

End Function</code></pre>
Example (Microsoft Access)</P>
The following example creates a new record in an Employees table and saves the changes:</P>

<pre><code>Sub AddNewRecord(ByVal rst As Recordset, _
    strLast As String, strFirst As String)
    
    With rst
        .AddNew                                ' Add new record.
        !LastName = strLast                ' Add data.
        !FirstName = strFirst
        .Update                                ' Save changes.
    End With
End Sub</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
