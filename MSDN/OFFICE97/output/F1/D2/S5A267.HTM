<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BatchCollisionCount Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>BatchCollisionCount Property</H2>Applies To</P>
Dynamic-Type <SPAN CLASS="eln">Recordset</SPAN> object, Dynaset-Type <SPAN CLASS="eln">Recordset</SPAN> object, Forward-Only–Type <SPAN CLASS="eln">Recordset</SPAN> object, <SPAN CLASS="eln">Recordset</SPAN> object, Snapshot-Type <SPAN CLASS="eln">Recordset</SPAN> object.</P>
Description</P>
Returns the number of records that did not complete the last <SPAN CLASS="pop">batch update</SPAN> (<SPAN CLASS="pop">ODBCDirect workspaces</SPAN> only).</P>
Return Value</P>
The return value is a <SPAN CLASS="lee">Long</SPAN> that indicates the number of failing records, or 0 if all records were successfully updated.</P>
Remarks</P>
This property indicates how many records encountered collisions or otherwise failed to update during the last batch update attempt. The value of this property corresponds to the number of bookmarks in the <SPAN CLASS="lee">BatchCollisions</SPAN> property.</P>
If you set the working <SPAN CLASS="lee">Recordset</SPAN> object's <SPAN CLASS="lee">Bookmark</SPAN> property to bookmark values in the <SPAN CLASS="lee">BatchCollisions</SPAN> array, you can move to each record that failed to complete the most recent <SPAN CLASS="lee">batch </SPAN><SPAN CLASS="lee">Update</SPAN> operation.</P>
After the collision records are corrected, a batch-mode <SPAN CLASS="lee">Update</SPAN> method can be called again. At this point DAO attempts another batch update, and the <SPAN CLASS="lee">BatchCollisions</SPAN> property again reflects the set of records that failed the second attempt. Any records that succeeded in the previous attempt are not sent in the current attempt, because they now have a <SPAN CLASS="lee">RecordStatus</SPAN> property of <SPAN CLASS="lee">dbRecordUnmodified</SPAN>. This process can continue as long as collisions occur, or until you abandon the updates and close the result set.</P>
Example</P>
This example uses the <SPAN CLASS="eln">BatchCollisionCount</SPAN> property and the <SPAN CLASS="eln">Update</SPAN> method to demonstrate <SPAN CLASS="pop">batch updating</SPAN> where any <SPAN CLASS="pop">collisions</SPAN> are resolved by forcing the batch update.</P>

<pre><code>Sub BatchX()

    Dim wrkMain As Workspace
    Dim conMain As Connection
    Dim rstTemp As Recordset
    Dim intLoop As Integer
    Dim strPrompt As String

    Set wrkMain = CreateWorkspace("ODBCWorkspace", _
        "admin", "", dbUseODBC)
    ' This DefaultCursorDriver setting is required for
    ' batch updating.
    wrkMain.DefaultCursorDriver = dbUseClientBatchCursor

    Set conMain = wrkMain.OpenConnection("Publishers", _
        dbDriverNoPrompt, False, _
        "ODBC;DATABASE=pubs;UID=sa;PWD=;DSN=Publishers")
    ' The following locking argument is required for
    ' batch updating.
    Set rstTemp = conMain.OpenRecordset( _
        "SELECT * FROM roysched", dbOpenDynaset, 0, _
        dbOptimisticBatch)

    With rstTemp
        ' Modify data in local recordset.
        Do While Not .EOF
            .Edit
            If !royalty &lt;= 20 Then
                !royalty = !royalty - 4
            Else
                !royalty = !royalty + 2
            End If
            .Update
            .MoveNext
        Loop

        ' Attempt a batch update.
        .Update dbUpdateBatch

        ' If there are collisions, give the user the option
        ' of forcing the changes or resolving them
        ' individually.
        If .BatchCollisionCount &gt; 0 Then
            strPrompt = "There are collisions. " &amp; vbCr &amp; _
                "Do you want the program to force " &amp; _
                vbCr &amp; "an update using the local data?"
            If MsgBox(strPrompt, vbYesNo) = vbYes Then _
                .Update dbUpdateBatch, True
        End If

        .Close
    End With

    conMain.Close
    wrkMain.Close

End Sub</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
