<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OpenModule Action</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>OpenModule Action</H2>Description</P>
You can use the OpenModule action to open a specified Visual Basic <SPAN CLASS="pop">module</SPAN> at a specified <SPAN CLASS="pop">procedure</SPAN>. This can be a Sub<SPAN CLASS="pop"> procedure</SPAN>, a Function<SPAN CLASS="pop"> procedure</SPAN>, or an <SPAN CLASS="pop">event procedure</SPAN>.</P>
Setting</P>
The OpenModule action has the following arguments.</P>

<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="90pt" VALIGN="TOP"><COL WIDTH="269pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Action argument</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Module Name</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The name of the module you want to open. You can leave this argument blank if you want to search all the <SPAN CLASS="pop">standard modules</SPAN> in the database for a procedure, and open the appropriate module at that procedure.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">If you run a macro containing the OpenModule action in a <SPAN CLASS="pop">library database</SPAN>, Microsoft Access looks for the module with this name first in the library database, then in the current database.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Procedure Name</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The name of the procedure you want to open the module to. If you leave this argument blank, the module opens to the <SPAN CLASS="pop">Declarations section</SPAN>.</P></TD></TR></TBODY></TABLE>
<BR></P><SPAN CLASS="nh">Note</SPAN>   You must enter a valid name in either the Module Name or Procedure Name argument.</P>
Remarks</P>
You can use this action to open an event procedure by specifying the Module Name argument and the Procedure Name argument. For example, to open the Click event procedure of the PrintInvoice button on the form Orders, set the Module Name argument to Form.Orders and set the Procedure Name argument to PrintInvoice_Click. To view the event procedure for a form or report, the form or report must be open.</P>
Similarly, to open a procedure in a <SPAN CLASS="pop">class module</SPAN>, you must specify the module name, although the class module doesn't have to open.</P>
To open a <SPAN CLASS="pop">private procedure</SPAN>, the module containing it must be open.</P>
This action has the same effect as selecting a module in the <SPAN CLASS="pop">Database window</SPAN>, and then pressing the <SPAN CLASS="eln">Design</SPAN> button. This action also enables you to specify a procedure name and to search the standard modules in a database for procedures.</P>
<SPAN CLASS="nh">Tip</SPAN>   You can select a module in the Database window and drag it to a macro <SPAN CLASS="pop">action row</SPAN>. This automatically creates an OpenModule action that opens the module to the Declarations section.</P>
To run the OpenModule action in Visual Basic, use the OpenModule method of the DoCmd object.</P>
See Also</P>
<SPAN CLASS="eln">OpenModule</SPAN> method, RunCode action.</P>
<HR CLASS="rr"></FONT></BODY>
</HTML>
