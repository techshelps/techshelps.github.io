<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RecordCount Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>RecordCount Property</H1>Applies To</P>
Dynamic-Type <SPAN CLASS="eln">Recordset</SPAN> object, Dynaset-Type <SPAN CLASS="eln">Recordset</SPAN> object, Forward-Only-Type <SPAN CLASS="eln">Recordset</SPAN> object, <SPAN CLASS="eln">Recordset</SPAN> object, Snapshot-Type <SPAN CLASS="eln">Recordset</SPAN> object, Table-Type <SPAN CLASS="eln">Recordset</SPAN> object, <SPAN CLASS="eln">TableDef</SPAN> object.</P>
Description</P>
Returns the number of records accessed in a Recordset object, or the total number of records in a table-type <SPAN CLASS="eln">Recordset</SPAN> or TableDef object.</P>
Return Values</P>
The return value is a <SPAN CLASS="eln">Long</SPAN> data type.</P>
Remarks</P>
Use the <SPAN CLASS="eln">RecordCount</SPAN> property to find out how many records in a <SPAN CLASS="eln">Recordset</SPAN> or <SPAN CLASS="eln">TableDef</SPAN> object have been accessed. The <SPAN CLASS="eln">RecordCount</SPAN> property doesn't indicate how many records are contained in a dynaset-, snapshot-, or forward-only-type <SPAN CLASS="eln">Recordset</SPAN> object until all records have been accessed. Once the last record has been accessed, the <SPAN CLASS="eln">RecordCount</SPAN> property indicates the total number of undeleted records in the <SPAN CLASS="eln">Recordset</SPAN> or <SPAN CLASS="eln">TableDef</SPAN> object. To force the last record to be accessed, use the MoveLast method on the <SPAN CLASS="eln">Recordset</SPAN> object. You can also use an SQL <SPAN CLASS="eln">Count</SPAN> function to determine the approximate number of records your query will return.</P>
<SPAN CLASS="nh">Note</SPAN>   Using the <SPAN CLASS="eln">MoveLast</SPAN> method to populate a newly opened <SPAN CLASS="eln">Recordset</SPAN> negatively impacts performance. Unless it is necessary to have an accurate <SPAN CLASS="eln">RecordCount</SPAN> as soon as you open a <SPAN CLASS="eln">Recordset</SPAN>, it's better to wait until you populate the <SPAN CLASS="eln">Recordset</SPAN> with other portions of code before checking the <SPAN CLASS="eln">RecordCount</SPAN> property.</P>
As your application deletes records in a dynaset-type <SPAN CLASS="eln">Recordset</SPAN> object, the value of the <SPAN CLASS="eln">RecordCount</SPAN> property decreases. However, records deleted by other users aren't reflected by the <SPAN CLASS="eln">RecordCount</SPAN> property until the <SPAN CLASS="pop">current record</SPAN> is positioned to a deleted record. If you execute a <SPAN CLASS="pop">transaction</SPAN> that affects the <SPAN CLASS="eln">RecordCount</SPAN> property setting and you subsequently roll back the transaction, the <SPAN CLASS="eln">RecordCount</SPAN> property won't reflect the actual number of remaining records.</P>
The <SPAN CLASS="eln">RecordCount</SPAN> property of a snapshot- or forward-only-type <SPAN CLASS="eln">Recordset</SPAN> object isn't affected by changes in the underlying tables.</P>
A <SPAN CLASS="eln">Recordset</SPAN> or <SPAN CLASS="eln">TableDef</SPAN> object with no records has a <SPAN CLASS="eln">RecordCount</SPAN> property setting&nbsp;of 0.</P>
When you work with <SPAN CLASS="pop">linked</SPAN> <SPAN CLASS="eln">TableDef</SPAN> objects, the <SPAN CLASS="eln">RecordCount</SPAN> property setting is always  – 1.</P>
Using the <SPAN CLASS="eln">Requery</SPAN> method on a <SPAN CLASS="eln">Recordset</SPAN> object resets the <SPAN CLASS="eln">RecordCount</SPAN> property just as if the query were re-executed.</P>
See Also</P>
<SPAN CLASS="eln">Count</SPAN> function ("SQL Language Reference" in Volume 1), <SPAN CLASS="eln">MoveFirst</SPAN>, <SPAN CLASS="eln">MoveLast</SPAN>, <SPAN CLASS="eln">MoveNext</SPAN>, <SPAN CLASS="eln">MovePrevious</SPAN> methods, <SPAN CLASS="eln">Requery</SPAN> method.</P>
Example</P>
This example demonstrates the <SPAN CLASS="eln">RecordCount</SPAN> property with different types of <SPAN CLASS="eln">Recordsets</SPAN> before and after they're populated.</P>

<pre><code>Sub RecordCountX()

    Dim dbsNorthwind As Database
    Dim rstEmployees As Recordset

    Set dbsNorthwind = OpenDatabase("Northwind.mdb")
    With dbsNorthwind
        ' Open table-type Recordset and show RecordCount
        ' property.
        Set rstEmployees = .OpenRecordset("Employees")
        Debug.Print _
            "Table-type recordset from Employees table"
        Debug.Print "    RecordCount = " &amp; _
            rstEmployees.RecordCount
        rstEmployees.Close

        ' Open dynaset-type Recordset and show RecordCount
        ' property before populating the Recordset.
        Set rstEmployees = .OpenRecordset("Employees", _
            dbOpenDynaset)
        Debug.Print "Dynaset-type recordset " &amp; _
            "from Employees table before MoveLast"
        Debug.Print "    RecordCount = " &amp; _
            rstEmployees.RecordCount

        ' Show the RecordCount property after populating the
        ' Recordset.
        rstEmployees.MoveLast
        Debug.Print "Dynaset-type recordset " &amp; _
            "from Employees table after MoveLast"
        Debug.Print "    RecordCount = " &amp; _
            rstEmployees.RecordCount
        rstEmployees.Close

        ' Open snapshot-type Recordset and show RecordCount
        ' property before populating the Recordset.
        Set rstEmployees = .OpenRecordset("Employees", _
            dbOpenSnapshot)
        Debug.Print "Snapshot-type recordset " &amp; _
            "from Employees table before MoveLast"
        Debug.Print "    RecordCount = " &amp; _
            rstEmployees.RecordCount

        ' Show the RecordCount property after populating the
        ' Recordset.
        rstEmployees.MoveLast
        Debug.Print "Snapshot-type recordset " &amp; _
            "from Employees table after MoveLast"
        Debug.Print "    RecordCount = " &amp; _
            rstEmployees.RecordCount
        rstEmployees.Close

        ' Open forward-only-type Recordset and show
        ' RecordCount property before populating the
        ' Recordset.
        Set rstEmployees = .OpenRecordset("Employees", _
            dbOpenForwardOnly)
        Debug.Print "Forward-only-type recordset " &amp; _
            "from Employees table before MoveLast"
        Debug.Print "    RecordCount = " &amp; _
            rstEmployees.RecordCount
        ' Show the RecordCount property after calling the
        ' MoveNext method.
        rstEmployees.MoveNext
        Debug.Print "Forward-only-type recordset " &amp; _
            "from Employees table after MoveNext"
        Debug.Print "    RecordCount = " &amp; _
            rstEmployees.RecordCount
        rstEmployees.Close

        .Close
    End With

End Sub</code></pre>
Example (Microsoft&nbsp;Access)</P>
The following example creates a <SPAN CLASS="eln">Recordset</SPAN> object based on the Orders table and then&nbsp;determines the number of records in the <SPAN CLASS="eln">Recordset</SPAN> object:</P>

<pre><code>Sub CountRecords()
    Dim dbs As Database, rst As Recordset

    ' Return reference to current database.
    Set dbs = CurrentDb
    ' Open table-type Recordset object.
    Set rst = dbs.OpenRecordset("Orders")
    Debug.Print rst.RecordCount
    rst.Close
    Set dbs = Nothing
End Sub</code></pre>
Example (Microsoft&nbsp;Excel)</P>
This example displays the number of records in the Customer recordset in the Nwindex.mdb database.</P>
To create the Nwindex.mdb database, run the Microsoft&nbsp;Excel example for the <SPAN CLASS="lee">CreateDatabase</SPAN> method.</P>

<pre><code>Dim db As Database, rs As Recordset
Set db = Workspaces(0).OpenDatabase(Application.Path _
    &amp; "\Nwindex.mdb")
Set rs = db.OpenRecordset("Customer")
On Error GoTo errorHandler
rs.MoveLast
MsgBox "There are " &amp; rs.RecordCount &amp; " records in " _
    &amp; rs.Name
rs.Close
db.Close
    Exit Sub
errorHandler:
    MsgBox "There are no records in " &amp; rs.Name
    rs.Close
    db.Close</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
