<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PaintPalette Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>PaintPalette Property</H2>Applies To</P>
Form, Report.</P>
Description</P>
You can use the <SPAN CLASS="eln">PaintPalette</SPAN> property to specify a palette to be used by a <SPAN CLASS="pop">form</SPAN> or <SPAN CLASS="pop">report</SPAN>.</P>
Setting</P>
You can set the <SPAN CLASS="eln">PaintPalette</SPAN> property by using a <SPAN CLASS="jump">macro</SPAN> or <SPAN CLASS="jump">Visual Basic</SPAN>. The property setting must be a String data type containing the palette information.</P>
You can set the <B>PaintPalette</B> property by assigning the value of the ObjectPalette property to the <SPAN CLASS="eln">PaintPalette</SPAN> property in a macro or Visual Basic, by setting the PaletteSource property (in which case Microsoft Access automatically sets the <SPAN CLASS="eln">PaintPalette</SPAN> property to this <SPAN CLASS="eln">PaletteSource</SPAN>), or by setting the <SPAN CLASS="eln">PaintPalette</SPAN> property of one form or report to the <SPAN CLASS="eln">PaintPalette</SPAN> property of another form or report.</P>
For a form, you can set the <SPAN CLASS="eln">PaintPalette</SPAN> property in <SPAN CLASS="pop">form Design view</SPAN> and <SPAN CLASS="pop">Form view</SPAN>.</P>
For a report, you can set the <SPAN CLASS="eln">PaintPalette</SPAN> property in <SPAN CLASS="pop">report Design view</SPAN> only.</P>
Remarks</P>
When you set the <SPAN CLASS="eln">PaintPalette</SPAN> property, Microsoft Access makes a copy of the palette that you specify and saves it with the form or report. The palette is then available if you modify that form or report.</P>
Changes to the palette you specified when you set the <SPAN CLASS="eln">PaintPalette</SPAN> property don't affect the copy of the palette stored with the form or report. If you want to update the copy of the palette stored with the form or report, you must rerun the code or macro that sets the <SPAN CLASS="eln">PaintPalette</SPAN> property or reset the <SPAN CLASS="eln">PaletteSource</SPAN> property when the form or report is open.</P>
When you set the <SPAN CLASS="eln">PaintPalette</SPAN> property for a form or report, Microsoft Access automatically updates its <SPAN CLASS="eln">PaletteSource</SPAN> property. Conversely, when you set the <SPAN CLASS="eln">PaletteSource</SPAN> property for a form or report, the <SPAN CLASS="eln">PaintPalette</SPAN> property is also updated. For example, when you specify a custom palette with the <SPAN CLASS="eln">PaintPalette</SPAN> property, the <SPAN CLASS="eln">PaletteSource</SPAN> property setting is changed to (Custom). The <SPAN CLASS="eln">PaintPalette</SPAN> property (which is available only in a macro or Visual Basic) is used to set the palette for the form or report. The <SPAN CLASS="eln">PaletteSource</SPAN> property gives you a way to set the palette for the form or report in the property sheet by using an existing graphics file.</P>
<SPAN CLASS="nh">Note</SPAN>   Windows can have only one color palette active at a time. Microsoft Access allows you to have multiple graphics on a form, each using a different color palette. The <SPAN CLASS="eln">PaintPalette</SPAN> and <SPAN CLASS="eln">PaletteSource</SPAN> properties let you specify which color palette a form should use when displaying graphics.</P>
You can use the <SPAN CLASS="eln">ObjectPalette</SPAN> property to make the palette of an application associated with an <SPAN CLASS="pop">OLE object</SPAN>, <SPAN CLASS="pop">bitmap</SPAN>, or other graphic contained in a <SPAN CLASS="pop">control</SPAN> on a form or report available to the <SPAN CLASS="eln">PaintPalette</SPAN> property. For example, to make the palette used in Microsoft Graph available when you're designing a form in Microsoft Access, you set the form's <SPAN CLASS="eln">PaintPalette</SPAN> property to the <SPAN CLASS="eln">ObjectPalette</SPAN> value of an existing chart control.</P>
See Also</P>
<SPAN CLASS="eln">ObjectPalette</SPAN> property, <SPAN CLASS="eln">PaletteSource</SPAN> property, <SPAN CLASS="eln">Picture</SPAN> property.</P>
Example</P>
The following example sets the <SPAN CLASS="eln">PaintPalette</SPAN> property of the Seascape form to the <SPAN CLASS="eln">ObjectPalette</SPAN> property of the Ocean control on the DisplayPictures form. (Ocean can be a bound object frame, command button, chart, toggle button, or unbound object frame.)</P>

<pre><code>Forms!Seascape.PaintPalette = Forms!DisplayPictures!Ocean.ObjectPalette</code></pre>
The <SPAN CLASS="eln">ObjectPalette</SPAN> and <SPAN CLASS="eln">PaintPalette</SPAN> properties are useful for programmatically altering the color palette in use by an open form at run time. A common use of these properties is to set the current form's <SPAN CLASS="eln">PaintPalette</SPAN> property to the palette of a graphic displayed in a control that has the focus.</P>
For example, you can have a form with an ocean picture, showing many shades of blue, and a sunset picture, showing many shades of red. Since Windows only allows one color palette active at a time, one picture will look much better than the other. The following example uses a control's Enter event for setting the form's <SPAN CLASS="eln">PaintPalette</SPAN> property to the control's <SPAN CLASS="eln">ObjectPalette</SPAN> property so the graphic that has the focus will have an optimal appearance.</P>

<pre><code>Sub OceanPicture_Enter()
    Me.PaintPalette = Me!OceanPicture.ObjectPalette
End Sub

Sub SunsetPicture_Enter()
    Me.PaintPalette = Me!SunsetPicture.ObjectPalette
End Sub</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
