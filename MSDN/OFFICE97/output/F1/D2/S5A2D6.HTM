<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PartialReplica Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>PartialReplica Property</H1>Applies To</P>
<SPAN CLASS="eln">Relation</SPAN> object.</P>
Description</P>
Sets or returns a value on a <SPAN CLASS="lee">Relation</SPAN> object indicating whether that relation should be considered when populating a partial replica from a full replica. (<SPAN CLASS="pop">Microsoft&nbsp;Jet databases</SPAN> only.)</P>
Settings and Return Values</P>
The setting or return value is a <SPAN CLASS="lee">Boolean</SPAN> data type that is <SPAN CLASS="lee">True</SPAN> when the relation should be enforced during synchronization.</P>
Remarks</P>
This property enables you to replicate data from the full replica to the partial replica based on relationships between tables. You can use the <SPAN CLASS="lee">PartialReplica</SPAN> property when setting the <SPAN CLASS="lee">ReplicaFilter</SPAN> property alone can't adequately specify what data should be&nbsp;replicated to the partial. For example, suppose you have a database in which the Customers table has a <SPAN CLASS="pop">one-to-many relationship</SPAN> with the Orders table, and you want to configure a partial replica that only replicates orders from customers in the California region (instead of all orders). It is not possible to set the <SPAN CLASS="lee">ReplicaFilter</SPAN> property on the Orders table to <SPAN CLASS="cte">Region = 'CA'</SPAN> because the Region field is in the Customers table, not the Orders table.</P>
To replicate all orders from the California region, you must indicate that the relation between the Orders and Customers tables will be active during replication. Once you've created a partial replica, the following steps will populate it with all orders from the California region:</P>
<SPAN CLASS="list"><OL><LI CLASS="OLI1">Set the <SPAN CLASS="lee">ReplicaFilter</SPAN> property on the Customers <SPAN CLASS="lee">TableDef</SPAN> object to <SPAN CLASS="cte">"Region&nbsp;=&nbsp;'CA'"</SPAN>.</LI><LI CLASS="OLI1">Set the value of the <SPAN CLASS="lee">PartialReplica</SPAN> property to <SPAN CLASS="lee">True</SPAN> on the <SPAN CLASS="lee">Relation</SPAN> object corresponding to the relationship between Orders and Customers.</LI><LI CLASS="OLI1">Invoke the <SPAN CLASS="lee">PopulatePartial</SPAN> method.</LI></OL></SPAN><HR CLASS="cas">
<SPAN CLASS="nh">Caution</SPAN>&nbsp;&nbsp;&nbsp;When you set a replica filter or replica relation, be aware that records in the partial replica that don't satisfy the restriction criteria will be removed from the partial replica, but not&nbsp;from the full replica. For example, suppose you set the <SPAN CLASS="lee">ReplicaFilter</SPAN> property on the Customers <SPAN CLASS="lee">TableDef</SPAN> in the partial replica to <SPAN CLASS="cte">"Region = 'CA'"</SPAN> and you then repopulate the database. This will insert or update all records for California-based customers. If you then reset the <SPAN CLASS="lee">ReplicaFilter</SPAN> property to <SPAN CLASS="cte">"Region = 'FL'"</SPAN> and repopulate the database, all California region records in the partial replica will be removed, and all records from Florida-based customers will be inserted from the full replica. No records in the full replica will be deleted.</P>
Before setting either the <SPAN CLASS="lee">ReplicaFilter</SPAN> or <SPAN CLASS="lee">PartialReplica</SPAN> property, it's a good idea to synchronize the partial replica in which you are setting these properties with the full replica. This&nbsp;will ensure that pending changes in the partial replica will be merged into the full replica before any records are removed in the partial replica.</P>
<HR CLASS="cae">
Example</P>
The following code example uses the <SPAN CLASS="eln">PartialReplica</SPAN> property to replicate all records representing orders from customers in California:</P>

<pre><code>Sub PartialReplicaX()

    ' Assumptions: dbsTemp is the partial replica and
    ' appropriate relationships already exist between
    ' the tables.

    Dim tdfOrders As TableDef
    Dim relCustOrd As Relation
    Dim dbsTemp As Database
    Dim relLoop As Relation

    Set dbsTemp = OpenDatabase("Northwind.mdb")
    Set tdfOrders = dbsTemp.TableDefs("Orders")

    ' Find the "Customers to Orders" Relation object.
    For Each relLoop In dbsTemp.Relations
        If relLoop.Table = "Customers" And _
                relLoop.ForeignTable = "Orders" Then
            ' Set the Relation object's PartialReplica
            ' property to True.
            relLoop.PartialReplica = True
            Exit For
        End If
    Next relLoop

End Sub</code></pre>
<SPAN CLASS="nh">Note</SPAN>&nbsp;&nbsp;&nbsp;If you have set a replica filter and a replica relation on the same table, the two act in combination as a logical OR operation, not a logical AND operation. For instance, in the preceding example, the records exchanged during synchronization are all orders greater than $1,000 OR all orders from the California region, not all orders from the California region that are over $1,000.</P>
<HR CLASS="rr"></FONT></BODY>
</HTML>
