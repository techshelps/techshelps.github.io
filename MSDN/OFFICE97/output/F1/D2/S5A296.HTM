<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DefaultValue Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>DefaultValue Property</H1>Applies To</P>
<SPAN CLASS="eln">Field</SPAN> object.</P>
Description</P>
Sets or returns the default value of a Field object. For a <SPAN CLASS="eln">Field</SPAN> object not yet appended to the Fields collection, this property is read/write (<SPAN CLASS="pop">Microsoft Jet workspaces</SPAN> only).</P>
Settings and Return Values</P>
The setting or return value is a String data type that can contain a maximum of 255 characters. It can be either text or an <SPAN CLASS="pop">expression</SPAN>. If the property setting is an expression, it can't contain user-defined functions, <SPAN CLASS="pop">Microsoft Jet database engine</SPAN> SQL <SPAN CLASS="pop">aggregate functions</SPAN>, or references to queries, forms, or other <SPAN CLASS="eln">Field</SPAN> objects.</P>
<SPAN CLASS="nh">Note</SPAN>   You can also set the <SPAN CLASS="eln">DefaultValue</SPAN> property of a <SPAN CLASS="eln">Field</SPAN> object on a <SPAN CLASS="eln">TableDef</SPAN> object to a special value called "GenUniqueID( )." This causes a random number to be assigned to this field whenever a new record is added or created, thereby giving each record a unique identifier. The field's <SPAN CLASS="eln">Type</SPAN> property must be <SPAN CLASS="eln">Long</SPAN>.</P>
Remarks</P>
The availability of the <SPAN CLASS="eln">DefaultValue</SPAN> property depends on the object that contains the <SPAN CLASS="eln">Fields</SPAN> collection, as shown in the following table.</P>

<TABLE COLS="2" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="171pt" VALIGN="TOP"><COL WIDTH="189pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">If the Fields collection belongs to an</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Then DefaultValue is</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">Index </SPAN>object</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Not supported</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">QueryDef </SPAN>object</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Read-only</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">Recordset </SPAN>object</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Read-only</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">Relation </SPAN>object</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Not supported</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">TableDef </SPAN>object</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Read/write</P></TD></TR></TBODY></TABLE>
<BR></P>When a new record is created, the <SPAN CLASS="eln">DefaultValue</SPAN> property setting is automatically entered as the value for the field. You can change the field value by setting its Value property.</P>
The <SPAN CLASS="eln">DefaultValue</SPAN> property doesn't apply to <SPAN CLASS="pop">AutoNumber</SPAN> and <SPAN CLASS="pop">Long Binary</SPAN> fields.</P>
Specifics (Microsoft Access)</P>
In Microsoft Access, if you set the DAO <SPAN CLASS="eln">DefaultValue</SPAN> property to <SPAN CLASS="eln">GenUniqueID( )</SPAN> to create an AutoNumber field, you must also set the <SPAN CLASS="eln">Attributes</SPAN> property to <SPAN CLASS="eln">dbAutoIncrement</SPAN>. If you don't set the <SPAN CLASS="eln">Attributes</SPAN> property in this way, Microsoft Access won't assign the AutoNumber data type to the field, and you'll get an error when you try to view the table in <SPAN CLASS="pop">Datasheet view</SPAN>.</P>
The following code shows how you can create a field with the AutoNumber data type, given a <SPAN CLASS="eln">TableDef</SPAN> object variable <SPAN CLASS="cte">tdf</SPAN> and a <SPAN CLASS="eln">Field</SPAN> object variable <SPAN CLASS="cte">fld</SPAN>.</P>

<pre><code>Set fld = tdf.CreateField("EmployeeID", dbLong)
fld.DefaultValue = "GenUniqueID()"
fld.Attributes = dbAutoIncrField
tdf.Fields.Append fld</code></pre>
If the DAO <SPAN CLASS="eln">DefaultValue</SPAN> property setting is an expression, it can't contain user-defined functions, Microsoft Access <SPAN CLASS="pop">domain aggregate functions</SPAN>, SQL <SPAN CLASS="pop">aggregate&nbsp;functions</SPAN>, the <SPAN CLASS="eln">CurrentUser</SPAN> function, the <SPAN CLASS="eln">Eval</SPAN> function, or references to&nbsp;queries, forms, or other <SPAN CLASS="eln">Field</SPAN> objects.</P>
Example</P>
This example uses the <SPAN CLASS="eln">DefaultValue</SPAN> property to alert the user of a field's normal value while prompting for input. In addition<SPAN CLASS="eln">,</SPAN><SPAN CLASS="eln"> </SPAN>it demonstrates how new records will be&nbsp;filled using <SPAN CLASS="eln">DefaultValue</SPAN> in the absence of any other input. The DefaultPrompt function is required for this procedure to run.</P>

<pre><code>Sub DefaultValueX()

    Dim dbsNorthwind As Database
    Dim tdfEmployees As TableDef
    Dim strOldDefault As String
    Dim rstEmployees As Recordset
    Dim strMessage As String
    Dim strCode As String

    Set dbsNorthwind = OpenDatabase("Northwind.mdb")
    Set tdfEmployees = dbsNorthwind.TableDefs!Employees

    ' Store original DefaultValue information and set the
    ' property to a new value.
    strOldDefault = _
        tdfEmployees.Fields!PostalCode.DefaultValue
    tdfEmployees.Fields!PostalCode.DefaultValue = "98052"

    Set rstEmployees = _
        dbsNorthwind.OpenRecordset("Employees", _
        dbOpenDynaset)

    With rstEmployees
        ' Add a new record to the Recordset.
        .AddNew
        !FirstName = "Bruce"
        !LastName = "Oberg"
        ' Get user input. If user enters something, the field
        ' will be filled with that data; otherwise, it will be
        ' filled with the DefaultValue information.
        strMessage = "Enter postal code for " &amp; vbCr &amp; _
            !FirstName &amp; " " &amp; !LastName &amp; ":"
        strCode = DefaultPrompt(strMessage, !PostalCode)
        If strCode &lt;&gt; "" Then !PostalCode = strCode
        .Update

        ' Go to new record and print information.
        .Bookmark = .LastModified
        Debug.Print "    FirstName = " &amp; !FirstName
        Debug.Print "    LastName = " &amp; !LastName
        Debug.Print "    PostalCode = " &amp; !PostalCode

        ' Delete new record because this is a demonstration.
        .Delete
        .Close
    End With

    ' Restore original DefaultValue property because this is a
    ' demonstration.
    tdfEmployees.Fields!PostalCode.DefaultValue = _
        strOldDefault

    dbsNorthwind.Close

End Sub

Function DefaultPrompt(strPrompt As String, _
    fldTemp As Field) As String

    Dim strFullPrompt As String

    ' Ask user for new DefaultValue setting for the specified
    ' Field object.
    strFullPrompt = strPrompt &amp; vbCr &amp; _
        "[Default = " &amp; fldTemp.DefaultValue &amp; _
        ", Cancel - use default]"
    DefaultPrompt = InputBox(strFullPrompt)

End Function</code></pre>
Example (Microsoft Access)</P>
The following example creates a new <SPAN CLASS="eln">Field</SPAN> object and sets its <SPAN CLASS="eln">DefaultValue</SPAN> property. The procedure then appends the new object to the <SPAN CLASS="eln">Fields</SPAN> collection of the Employees table in the <SPAN CLASS="eln">TableDefs</SPAN> collection of the database.</P>

<pre><code>Sub NewField()
    Dim dbs As Database, tdf As TableDef
    Dim fld As Field

    ' Return reference to current database.
    Set dbs = CurrentDb
    ' Return reference to Employees table.
    Set tdf = dbs.TableDefs!Employees
    ' Create Field object.
    Set fld = tdf.CreateField("DaysOfVacation", dbText, 20)
    ' Set field properties.
    fld.DefaultValue = "10"
    ' Append fld to Fields collection.
    tdf.Fields.Append fld
    Set dbs = Nothing
End Sub</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
