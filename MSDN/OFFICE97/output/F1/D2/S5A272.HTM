<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Clone Method</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>Clone Method</H2>Applies To</P>
Dynaset-Type <SPAN CLASS="eln">Recordset</SPAN> object, <SPAN CLASS="eln">Recordset</SPAN> object, Snapshot-Type <SPAN CLASS="eln">Recordset</SPAN> object, Table-Type <SPAN CLASS="eln">Recordset</SPAN> object.</P>
Description</P>
Creates a duplicate Recordset object that refers to the original <SPAN CLASS="eln">Recordset</SPAN> object.</P>
Syntax</P>
<SPAN CLASS="eln">Set</SPAN> <SPAN CLASS="p">duplicate</SPAN><SPAN CLASS="l"> = </SPAN><SPAN CLASS="p">original</SPAN><SPAN CLASS="eln">.Clone</SPAN></P>
The <SPAN CLASS="eln">Clone</SPAN> method syntax has these parts.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="61pt" VALIGN="TOP"><COL WIDTH="299pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">duplicate</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">An <SPAN CLASS="pop">object variable</SPAN> identifying the duplicate <SPAN CLASS="eln">Recordset </SPAN>object you're creating.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">original</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">An object variable identifying the <SPAN CLASS="eln">Recordset </SPAN>object<SPAN CLASS="eln"> </SPAN>you want to duplicate.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
Use the <SPAN CLASS="eln">Clone</SPAN> method to create multiple, duplicate <SPAN CLASS="eln">Recordset </SPAN>objects. Each <B>Recordset</B> can have its own <SPAN CLASS="pop">current record</SPAN>. Using <SPAN CLASS="eln">Clone</SPAN> by itself doesn't change the data in the objects or in their underlying structures. When you use the <SPAN CLASS="eln">Clone</SPAN> method, you can share bookmarks between two or more <B>Recordset</B> objects because their <SPAN CLASS="pop">bookmarks</SPAN> are interchangeable.</P>
You can use the <SPAN CLASS="eln">Clone</SPAN> method when you want to perform an operation on a <B>Recordset</B><SPAN CLASS="eln"> </SPAN>that requires multiple current records. This is faster and more efficient than opening a second <SPAN CLASS="eln">Recordset</SPAN>. When you create a <B>Recordset</B> with the <SPAN CLASS="eln">Clone</SPAN> method, it initially lacks a current record. To make a record current before you use the <SPAN CLASS="eln">Recordset</SPAN> clone, you&nbsp;must set the <SPAN CLASS="eln">Bookmark</SPAN> property or use one of the <SPAN CLASS="jump">Move</SPAN> methods, one of the <SPAN CLASS="jump">Find</SPAN>&nbsp;methods, or the <SPAN CLASS="eln">Seek</SPAN> method.</P>
Using the <SPAN CLASS="eln">Close</SPAN> method on either the original or duplicate object doesn't affect the other object. For example, using <SPAN CLASS="eln">Close</SPAN> on the original <SPAN CLASS="eln">Recordset</SPAN> doesn't close the clone.</P>
<SPAN CLASS="nh">Notes</SPAN></P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">Closing a clone <B>Recordset</B> within a pending transaction will cause an implicit <B>Rollback </B>operation.</LI><LI CLASS="ULI1">When you clone a table-type <SPAN CLASS="eln">Recordset</SPAN> object in a <SPAN CLASS="pop">Microsoft Jet workspace</SPAN>, the Index property setting is not cloned on the new copy of the <SPAN CLASS="eln">Recordset</SPAN>. You must copy the <SPAN CLASS="eln">Index</SPAN> property setting manually.</LI><LI CLASS="ULI1">You can use the <SPAN CLASS="eln">Clone</SPAN> method with <SPAN CLASS="pop">forward-only</SPAN>–<SPAN CLASS="pop">type </SPAN>Recordset<SPAN CLASS="pop"> objects</SPAN> only in an <SPAN CLASS="pop">ODBCDirect workspace</SPAN>.
</LI></UL></SPAN>See Also</P>
<SPAN CLASS="eln">Bookmark</SPAN> property.</P>
Specifics (Microsoft Access)</P>
If you use the <SPAN CLASS="eln">Bookmark</SPAN> property of a <SPAN CLASS="eln">Recordset</SPAN> object in a Microsoft Access module, you must include an <SPAN CLASS="eln">Option Compare Binary</SPAN> statement in the <SPAN CLASS="pop">Declarations section</SPAN> of the module. A <SPAN CLASS="pop">bookmark</SPAN> is a <SPAN CLASS="pop">Variant</SPAN> array of <SPAN CLASS="pop">Byte</SPAN> data, so the <SPAN CLASS="pop">string comparison</SPAN> method for the module must be binary. If a bookmark is evaluated with a text-based string comparison method, such as the <SPAN CLASS="eln">Option Compare Text</SPAN> statement or the default setting for the <SPAN CLASS="eln">Option Compare Database</SPAN> statement, the current record may be set to an incorrect record.</P>
Example</P>
This example uses the <SPAN CLASS="eln">Clone</SPAN> method to create copies of a <SPAN CLASS="eln">Recordset</SPAN> and then lets the user position the record pointer of each copy independently.</P>

<pre><code>Sub CloneX()

    Dim dbsNorthwind As Database
    Dim arstProducts(1 To 3) As Recordset
    Dim intLoop As Integer
    Dim strMessage As String
    Dim strFind As String

    Set dbsNorthwind = OpenDatabase("Northwind.mdb")

    ' If the following SQL statement will be used often,
    ' creating a permanent QueryDef will result in better
    ' performance.
    Set arstProducts(1) = dbsNorthwind.OpenRecordset( _
        "SELECT ProductName FROM Products " &amp; _
        "ORDER BY ProductName", dbOpenSnapshot)

    ' Create two clones of the original Recordset.
    Set arstProducts(2) = arstProducts(1).Clone
    Set arstProducts(3) = arstProducts(1).Clone

    Do While True

        ' Loop through the array so that on each pass, the
        ' user is searching a different copy of the same
        ' Recordset.
        For intLoop = 1 To 3

            ' Ask for search string while showing where the
            ' current record pointer is for each Recordset.
            strMessage = _
                "Recordsets from Products table:" &amp; vbCr &amp; _
                "  1 - Original - Record pointer at " &amp; _
                arstProducts(1)!ProductName &amp; vbCr &amp; _
                "  2 - Clone - Record pointer at " &amp; _
                arstProducts(2)!ProductName &amp; vbCr &amp; _
                "  3 - Clone - Record pointer at " &amp; _
                arstProducts(3)!ProductName &amp; vbCr &amp; _
                "Enter search string for #" &amp; intLoop &amp; ":"
            strFind = Trim(InputBox(strMessage))
            If strFind = "" Then Exit Do

            ' Find the search string; if there's no match, jump
            ' to the last record.
            With arstProducts(intLoop)
                .FindFirst "ProductName &gt;= '" &amp; strFind &amp; "'"
                If .NoMatch Then .MoveLast
            End With

        Next intLoop

    Loop

    arstProducts(1).Close
    arstProducts(2).Close
    arstProducts(3).Close
    dbsNorthwind.Close

End Sub</code></pre>
Example (Microsoft Access)</P>
The following example creates a <SPAN CLASS="eln">Recordset</SPAN> object by using an SQL statement on an Employees table and then uses the <SPAN CLASS="eln">Clone</SPAN> method to create a clone of the <SPAN CLASS="eln">Recordset</SPAN> object so that bookmarks can be shared between the two objects. This technique is especially useful when you have to compare the results of a query from more than one point at the same time.</P>
The function reads and stores in a string variable the value of the <SPAN CLASS="eln">Bookmark</SPAN> property for the current record, in this case the second record in the original <SPAN CLASS="eln">Recordset</SPAN> object. The <SPAN CLASS="eln">Bookmark</SPAN> property of the duplicate <SPAN CLASS="eln">Recordset</SPAN> object is set to this string, making the second record the current record in this <SPAN CLASS="eln">Recordset</SPAN> object as well. The current values of the LastName field for both recordsets are identical, as you can see once they are printed in the Debug window.</P>

<pre><code>Sub CreateClone()
    Dim dbs As Database
    Dim rstEmployees As Recordset, rstDuplicate As Recordset
    Dim fldName As Field, varBook As Variant

    ' Return reference to current database.
    Set dbs = CurrentDb
    ' Open dynaset-type Recordset object.
    Set rstEmployees = dbs.OpenRecordset("SELECT * FROM Employees " _
        &amp; " ORDER BY LastName")
    ' Clone Recordset object.
    Set rstDuplicate = rstEmployees.Clone
    Set fldName = rstEmployees.Fields!LastName
    ' Set current record.
    rstEmployees.MoveFirst
    ' Move to second record.
    rstEmployees.MoveNext
    ' Get Bookmark property value and print current field value.
    If rstEmployees.Bookmarkable Then
        varBook = rstEmployees.Bookmark
        Debug.Print fldName.value
    Else
        ' If Recordset object doesn't support bookmarks, exit procedure.
        ExitCreateClone
    End If
    ' Set Bookmark property of clone to obtained value.
    rstDuplicate.Bookmark = varBook
    Debug.Print fldName.value

ExitCreateClone:
    rstEmployees.Close
    rstDuplicate.Close
    Set dbs = Nothing
End Sub</code></pre>
Example (Microsoft Excel)</P>
This example displays a custom dialog box that contains the lists of data from the CONTACTS and CUSTMR_ID fields in the Customer recordset of the Nwindex.mdb database.</P>
To create the Nwindex.mdb database, run the Microsoft Excel example for the <SPAN CLASS="lee">CreateDatabase</SPAN> method.</P>

<pre><code>Dim db As Database
Dim rs1 As Recordset, rs2 As Recordset
Set db = Workspaces(0).OpenDatabase(Application.Path &amp; "\NWINDEX.MDB")
Set rs1 = db.OpenRecordset("SELECT * FROM Customer" _
    &amp; " WHERE [REGION] = 'WA' ORDER BY [CUSTMR_ID];")
Set theDialog = DialogSheets.Add
Set list1 = theDialog.ListBoxes.Add(78, 42, 84, 80)
Set list2 = theDialog.ListBoxes.Add(183, 42, 84, 80)
Set rs2 = rs1.Clone()
rs2.MoveFirst
Do Until rs1.EOF
    list1.AddItem (rs1.Fields("CONTACT").Value)
    rs1.MoveNext
Loop
Do Until rs2.EOF
    list2.AddItem (rs2.Fields("CUSTMR_ID").Value)
    rs2.MoveNext
Loop
rs1.Close
rs2.Close
db.Close</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
