<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DefaultType Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>DefaultType Property</H1>Applies To</P>
<SPAN CLASS="eln">DBEngine</SPAN> object.</P>
Description</P>
Sets or returns a value that indicates what type of workspace (Microsoft Jet or <SPAN CLASS="pop">ODBCDirect</SPAN>) will be used by the next <SPAN CLASS="lee">Workspace</SPAN> object created.</P>
Settings And Return Values</P>
The setting or return value is a <SPAN CLASS="lee">Long</SPAN> that can be set to either of the following constants.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="105pt" VALIGN="TOP"><COL WIDTH="255pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Constant</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">  </P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">dbUseJet</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Creates <SPAN CLASS="lee">Workspace</SPAN> objects connected to the <SPAN CLASS="pop">Microsoft Jet database engine.</SPAN></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">dbUseODBC</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Creates <SPAN CLASS="lee">Workspace</SPAN> objects connected to an <SPAN CLASS="pop">ODBC data source.</SPAN></P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
The setting can be overridden for a single <SPAN CLASS="lee">Workspace</SPAN> by setting the <SPAN CLASS="narg">type</SPAN> argument to the <SPAN CLASS="lee">CreateWorkspace</SPAN> method.</P>
Example</P>
This example uses the <SPAN CLASS="eln">DefaultType</SPAN> property to predetermine what type of <SPAN CLASS="eln">Workspace</SPAN> object will be created when you call the <SPAN CLASS="eln">CreateWorkspace</SPAN> method. The TypeOutput function is required for this procedure to run.</P>

<pre><code>Sub DefaultTypeX()
<B></B>
    Dim wrkODBC As Workspace
<B>    </B>Dim wrkJet As Workspace
<B>    </B>Dim prpLoop As Property
<B></B>
    ' Set DefaultType property and create Workspace object
    ' without specifying a type.
<B>    </B>DBEngine.DefaultType = dbUseODBC
<B>    </B>Set wrkODBC = CreateWorkspace("ODBCWorkspace", _
        "admin", "")
<B></B>
    Debug.Print "DBEngine.DefaultType = " &amp; _
        TypeOutput(DBEngine.DefaultType)
<B>    </B>With wrkODBC
<B>        </B>' Enumerate Properties collection of Workspace object.
<B>        </B>Debug.Print "Properties of " &amp; .Name
<B>        </B>On Error Resume Next
<B>        </B>For Each prpLoop In .Properties
<B>            </B>Debug.Print "    " &amp; prpLoop.Name &amp; " = " &amp; prpLoop
<B>            </B>If prpLoop.Name = "Type" Then Debug.Print _
                "        (" &amp; TypeOutput(prpLoop.Value) &amp; ")"
<B>        </B>Next prpLoop
<B>        </B>On Error GoTo 0
<B>    </B>End With
<B></B>
    ' Set DefaultType property and create Workspace object
    ' without specifying a type.
    DBEngine.DefaultType = dbUseJet
<B>    </B>Set wrkJet = CreateWorkspace("JetWorkspace", "admin", "")
<B></B>
    Debug.Print "DBEngine.DefaultType = " &amp; _
        TypeOutput(DBEngine.DefaultType)
<B>    </B>With wrkJet
<B>        </B>' Enumerate Properties collection of Workspace object.
<B>        </B>Debug.Print "Properties of " &amp; .Name
<B>        </B>On Error Resume Next
<B>        </B>For Each prpLoop In .Properties
<B>            </B>Debug.Print "    " &amp; prpLoop.Name &amp; " = " &amp; prpLoop
<B>            </B>If prpLoop.Name = "Type" Then Debug.Print _
                "        (" &amp; TypeOutput(prpLoop.Value) &amp; ")"
<B>        </B>Next prpLoop
<B>        </B>On Error GoTo 0
<B>    </B>End With
<B>    </B>wrkODBC.Close
<B>    </B>wrkJet.Close
<B></B>
End Sub

Function TypeOutput(intTemp As Integer) As String
<B></B>
    If intTemp = dbUseJet Then
<B>        </B>TypeOutput = "dbUseJet"
<B>    </B>Else
<B>        </B>TypeOutput = "dbUseODBC"
<B>    </B>End If

End Function</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
