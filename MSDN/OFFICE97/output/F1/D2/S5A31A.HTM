<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ALTER TABLE Statement</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>ALTER TABLE Statement</H2>Description</P>
Modifies the design of a table after it has been created with the <SPAN CLASS="jump">CREATE TABLE</SPAN> statement.</P>
<SPAN CLASS="nh">Note</SPAN>&nbsp;&nbsp;&nbsp;The <SPAN CLASS="pop">Microsoft Jet database engine</SPAN> doesn't support the use of ALTER TABLE, or any of the <SPAN CLASS="pop">data definition language (DDL)</SPAN> statements, with non-Microsoft Jet databases. Use the <SPAN CLASS="pop">DAO</SPAN> Create methods instead.</P>
Syntax</P>
ALTER TABLE <SPAN CLASS="p">table</SPAN> {ADD {COLUMN <SPAN CLASS="p">field type</SPAN>[(<SPAN CLASS="p">size</SPAN>)] [NOT NULL][CONSTRAINT <SPAN CLASS="p">index</SPAN>] | CONSTRAINT <SPAN CLASS="p">multifieldindex</SPAN>} |DROP {COLUMN <SPAN CLASS="p">field</SPAN> I CONSTRAINT <SPAN CLASS="p">indexname</SPAN>} }</P>
The ALTER TABLE statement has these parts</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="100pt" VALIGN="TOP"><COL WIDTH="259pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">table</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The name of the table to be altered.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">field</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The name of the field to be added to or deleted from <SPAN CLASS="p">table</SPAN>.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">type</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The data type of <SPAN CLASS="p">field</SPAN>.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">size</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The field size in characters (Text and Binary fields only).</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">index</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The index for <SPAN CLASS="p">field</SPAN>. See the <SPAN CLASS="jump">CONSTRAINT</SPAN> clause topic for more information on how to construct this index.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">multifieldindex</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The definition of a multiple-field index to be added to <SPAN CLASS="p">table</SPAN>. See the CONSTRAINT clause topic for more information on how to construct this clause.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">indexname</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The name of the multiple-field index to be removed.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
Using the ALTER TABLE statement, you can alter an existing table in several ways. You can:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">Use ADD COLUMN to add a new field to the table. You specify the field name, data type, and (for Text and Binary fields) an optional size. For example, the following statement adds a 25-character Text field called Notes to the Employees table:

<pre><code>ALTER TABLE Employees ADD COLUMN Notes TEXT(25)</code></pre>


You can also define an index on that field. For more information on single-field indexes, see the CONSTRAINT clause topic.</P>

If you specify NOT NULL for a field, then new records are required to have valid data in that field.</P></LI><LI CLASS="ULI1">Use ADD CONSTRAINT to add a multiple-field index. For more information on multiple-field indexes, see the CONSTRAINT clause topic.</LI><LI CLASS="ULI1">Use DROP COLUMN to delete a field. You specify only the name of the field.</LI><LI CLASS="ULI1">Use DROP CONSTRAINT to delete a multiple-field index. You specify only the index name following the CONSTRAINT reserved word.
</LI></UL></SPAN><SPAN CLASS="nh">Notes</SPAN></P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">You can't add or delete more than one field or index at a time.</LI><LI CLASS="ULI1">You can use the <SPAN CLASS="jump">CREATE INDEX</SPAN> statement to add a single- or multiple-field index to a table, and you can use ALTER TABLE or the <SPAN CLASS="jump">DROP</SPAN> statement to delete an index created with ALTER TABLE or CREATE INDEX.</LI><LI CLASS="ULI1">You can use NOT NULL on a single field, or within a named CONSTRAINT clause that applies to either a single field or to a multiple-field named CONSTRAINT. However, you can apply the NOT NULL restriction only once to a field, or a run-time error occurs.</LI></UL></SPAN>See Also</P>
CONSTRAINT clause, CREATE INDEX statement, CREATE TABLE statement, <SPAN CLASS="eln">CreateField</SPAN> method ("DAO Language Reference"), <SPAN CLASS="eln">CreateIndex</SPAN> method ("DAO Language Reference"), <SPAN CLASS="eln">CreateTableDef</SPAN> method ("DAO Language Reference"), DROP statement.</P>
Example</P>
This example adds a Salary field with a data type of <SPAN CLASS="eln">Currency</SPAN> to the Employees table.</P>

<pre><code>Sub AlterTableX1()

    Dim dbs As Database

    ' Modify this line to include the path to Northwind
    ' on your computer.
    Set dbs = OpenDatabase("Northwind.mdb")

    ' Add the Salary field to the Employees table
    ' and make it a Currency data type.
    dbs.Execute "ALTER TABLE Employees " _
        &amp; "ADD COLUMN Salary CURRENCY;"

    dbs.Close

End Sub</code></pre>
This example removes the Salary field from the Employees table.</P>

<pre><code>Sub AlterTableX2()

    Dim dbs As Database

    ' Modify this line to include the path to Northwind
    ' on your computer.
    Set dbs = OpenDatabase("Northwind.mdb")

    ' Delete the Salary field from the Employees table.
    dbs.Execute "ALTER TABLE Employees " _
        &amp; "DROP COLUMN Salary;"

    dbs.Close

End Sub</code></pre>
This example adds a <SPAN CLASS="pop">foreign key</SPAN> to the Orders table. The foreign key is based on the EmployeeID field and refers to the EmployeeID field of the Employees table. In this example, you don't have to list the EmployeeID field after the Employees table in the REFERENCES clause because EmployeeID is the <SPAN CLASS="pop">primary key</SPAN> of the Employees table.</P>

<pre><code>Sub AlterTableX3()

    Dim dbs As Database

    ' Modify this line to include the path to Northwind
    ' on your computer.
    Set dbs = OpenDatabase("Northwind.mdb")

    ' Add a foreign key to the Orders table.
    dbs.Execute "ALTER TABLE Orders " _
        &amp; "ADD CONSTRAINT OrdersRelationship " _
        &amp; "FOREIGN KEY (EmployeeID) " _
        &amp; "REFERENCES Employees (EmployeeID);"

    dbs.Close

End Sub</code></pre>
This example removes the foreign key from the Orders table.</P>

<pre><code>Sub AlterTableX4()

    Dim dbs As Database

    ' Modify this line to include the path to Northwind
    ' on your computer.
    Set dbs = OpenDatabase("Northwind.mdb")

    ' Remove the OrdersRelationship foreign key from
    ' the Orders table.
    dbs.Execute "ALTER TABLE Orders " _
        &amp; "DROP CONSTRAINT OrdersRelationship;"

    dbs.Close

End Sub</code></pre>
Example (Microsoft Access)</P>
To try the following examples in Microsoft Access, first create a new query in the Northwind sample database. Close the <SPAN CLASS="eln">Show Table</SPAN> dialog box without specifying a table or query. Switch to SQL view, paste an individual example into the SQL window, and run the query.</P>
<HR CLASS="ws">
<SPAN CLASS="wh">Warning</SPAN>   These examples makes changes to the Northwind sample database. Before beginning, you may wish to make a backup copy of the sample database.</P>
<HR CLASS="we">
The following example adds a Salary field with a data type of Currency to the Employees table:</P>

<pre><code>ALTER TABLE Employees ADD COLUMN Salary CURRENCY;</code></pre>
The next example removes the Salary field from the Employees table:</P>

<pre><code>ALTER TABLE Employees DROP COLUMN Salary;</code></pre>
Once you've run the next two queries, click <SPAN CLASS="eln">Relationships</SPAN> on the <SPAN CLASS="eln">Tools</SPAN> menu to view the changed relationships.</P>
The following example removes the existing foreign key from the Orders table:</P>

<pre><code>ALTER TABLE Orders DROP CONSTRAINT EmployeesOrders;</code></pre>
The next example adds the foreign key back to the Orders table:</P>

<pre><code>ALTER TABLE Orders ADD CONSTRAINT EmployeesOrders
FOREIGN KEY (EmployeeID) REFERENCES Employees (EmployeeID);</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
