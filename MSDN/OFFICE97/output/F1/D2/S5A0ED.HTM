<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Event Properties</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>Event Properties</H2>Applies To</P>
Event Properties and Objects They Apply To.</P>
Description</P>
Event properties cause a <SPAN CLASS="pop">macro</SPAN> or the associated Visual Basic <SPAN CLASS="pop">event procedure</SPAN> to run when a particular <SPAN CLASS="pop">event</SPAN> occurs. For example, if you enter the name of a macro in a command button's <SPAN CLASS="eln">OnClick</SPAN> property, that macro runs when the command button is clicked.</P>
Setting</P>
To run a macro, enter the name of the macro. You can choose an existing macro in the list. If the macro is in a <SPAN CLASS="pop">macro group</SPAN>, it will be listed under the macro group name, as <SPAN CLASS="p">macrogroupname</SPAN><SPAN CLASS="l">.</SPAN><SPAN CLASS="p">macroname</SPAN>.</P>
To run the event procedure associated with the event, select <SPAN CLASS="eln">[Event Procedure]</SPAN> in the list.</P>
<SPAN CLASS="nh">Note</SPAN>   Although using an event procedure is the recommended method for running Visual Basic code in response to an event, you can also run a user-defined function when an event occurs. To run a user-defined function, place an equal sign (=) before the function name and parentheses after it, as in <SPAN CLASS="l">=</SPAN><SPAN CLASS="p">functionname</SPAN><SPAN CLASS="l">( )</SPAN>.</P>
You can set event properties in the <SPAN CLASS="jump">property sheet</SPAN> for an object, in a <SPAN CLASS="jump">macro</SPAN>, or by using <SPAN CLASS="jump">Visual Basic</SPAN>. Note that you can't set any event properties while you're formatting or printing a form or report.</P>
<SPAN CLASS="nh">Tip</SPAN>   You can use builders to help you set an event property. To use them, click the <SPAN CLASS="eln">Build</SPAN> button to the right of the property box, or right-click the property box and then click <SPAN CLASS="eln">Build</SPAN> on the shortcut menu. In the <SPAN CLASS="eln">Choose Builder</SPAN> dialog box, select:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">The Macro Builder to create and specify a macro for this event property. You can also use the Macro Builder to edit a macro already specified by the property.</LI><LI CLASS="ULI1">The Code Builder to create and specify an event procedure for this event property. You can also use the Code Builder to edit an event procedure already specified by the property.</LI><LI CLASS="ULI1">The Expression Builder to choose and specify a user-defined function for this event property.
</LI></UL></SPAN>In Visual Basic, set the property to a string expression.</P>

<TABLE COLS="4" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="68pt" VALIGN="TOP"><COL WIDTH="97pt" VALIGN="TOP"><COL WIDTH="193pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">To run this</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Use this syntax</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Example</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Macro</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="l">"</SPAN><SPAN CLASS="p">macroname</SPAN><SPAN CLASS="l">"</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Button1.OnClick = "MyMacro"</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Event procedure</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="l">"[Event Procedure]"</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Button1.OnClick = "[Event Procedure]"</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">User-defined function</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="l">"=</SPAN><SPAN CLASS="p">functionname</SPAN><SPAN CLASS="l">( )"</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Button1.OnClick = "=MyFunction()"</P></TD></TR></TBODY></TABLE>
<BR></P>Example</P>
The following example shows how you can use the value entered in the Country control to determine which of two different macros to run when you click the Print Country Report button.</P>

<pre><code>Private Sub Country_AfterUpdate()
    If Country = "Canada" Then
        [Print Country Report].OnClick = "PrintCanadaReport"
    ElseIf Country = "USA" Then
        [Print Country Report].OnClick = "PrintUSAReport"
    End If
End Sub</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
