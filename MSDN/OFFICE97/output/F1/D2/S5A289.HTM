<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CreateTableDef Method</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>CreateTableDef Method</H2>Applies To</P>
<SPAN CLASS="eln">Database</SPAN> object.</P>
Description</P>
Creates a new TableDef object (<SPAN CLASS="pop">Microsoft&nbsp;Jet workspaces</SPAN> only).</P>
Syntax</P>
<SPAN CLASS="eln">Set</SPAN> <SPAN CLASS="p">tabledef</SPAN><SPAN CLASS="l"> = </SPAN><SPAN CLASS="p">database</SPAN><SPAN CLASS="eln">.CreateTableDef(</SPAN><SPAN CLASS="p">name</SPAN><SPAN CLASS="l">,</SPAN> <SPAN CLASS="p">attributes</SPAN><SPAN CLASS="l">,</SPAN> <SPAN CLASS="p">source</SPAN><SPAN CLASS="l">,</SPAN> <SPAN CLASS="p">connect</SPAN><SPAN CLASS="eln">)</SPAN></P>
The <SPAN CLASS="eln">CreateTableDef</SPAN> method syntax has these parts.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="89pt" VALIGN="TOP"><COL WIDTH="271pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">tabledef</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">An <SPAN CLASS="pop">object variable</SPAN> that represents the <SPAN CLASS="eln">TableDef</SPAN> object you want to&nbsp;create.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">database</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">An object variable that represents the Database object you want to use&nbsp;to create the new <SPAN CLASS="eln">TableDef</SPAN> object.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">name</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. A Variant (String subtype) that uniquely names the new <SPAN CLASS="eln">TableDef</SPAN> object. See the Name property for details on valid <SPAN CLASS="eln">TableDef</SPAN>&nbsp;names.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">attributes</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. A constant or combination of constants that indicates one or more characteristics of the new <SPAN CLASS="eln">TableDef</SPAN> object. See the Attributes property for more information.</P></TD></TR></TBODY></TABLE>
<BR></P><I>(continued)</I></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="89pt" VALIGN="TOP"><COL WIDTH="271pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">source</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. A <SPAN CLASS="eln">Variant</SPAN> (<SPAN CLASS="eln">String</SPAN> subtype) containing the name of a table in an external database that is the original source of the data. The <SPAN CLASS="p">source</SPAN> string becomes the SourceTableName property setting of the new <SPAN CLASS="eln">TableDef</SPAN> object.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">connect</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. A <SPAN CLASS="eln">Variant</SPAN> (<SPAN CLASS="eln">String</SPAN> subtype) containing information about the source of an open database, a database used in a <SPAN CLASS="pop">pass-through query</SPAN>, or a <SPAN CLASS="pop">linked table</SPAN>. See the Connect property for more information about valid <SPAN CLASS="pop">connection strings</SPAN>.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
If you omit one or more of the optional parts when you use the <SPAN CLASS="eln">CreateTableDef </SPAN>method, you can use an appropriate assignment statement to set or reset the corresponding property before you append the new object to a collection. After you append the object, you can alter some but not all of its properties. See the individual property topics for more details.</P>
If <SPAN CLASS="p">name</SPAN> refers to an object that is already a member of the collection, or you specify an invalid property in the <SPAN CLASS="eln">TableDef</SPAN> or Field object you're appending, a run-time error occurs when you use the Append method. Also, you can't append a <SPAN CLASS="eln">TableDef</SPAN> object to the <SPAN CLASS="eln">TableDefs</SPAN> collection until you define at least one <SPAN CLASS="eln">Field</SPAN> for the <SPAN CLASS="eln">TableDef</SPAN> object.</P>
To remove a <SPAN CLASS="eln">TableDef</SPAN> object from the TableDefs collection, use the Delete method on the collection.</P>
See Also</P>
<SPAN CLASS="eln">Append</SPAN> method, <SPAN CLASS="eln">Attributes</SPAN> property, <SPAN CLASS="eln">Connect</SPAN> property, <SPAN CLASS="eln">Delete</SPAN> method, <SPAN CLASS="eln">Name</SPAN> property, <SPAN CLASS="eln">TableDef</SPAN> object.</P>
Example</P>
This example creates a new <SPAN CLASS="eln">TableDef</SPAN> object in the Northwind database.</P>

<pre><code>Sub CreateTableDefX()

    Dim dbsNorthwind As Database
    Dim tdfNew As TableDef
    Dim prpLoop As Property

    Set dbsNorthwind = OpenDatabase("Northwind.mdb")

    ' Create a new TableDef object.
    Set tdfNew = dbsNorthwind.CreateTableDef("Contacts")

    With tdfNew
        ' Create fields and append them to the new TableDef
        ' object. This must be done before appending the
        ' TableDef object to the TableDefs collection of the
        ' Northwind database.
        .Fields.Append .CreateField("FirstName", dbText)
        .Fields.Append .CreateField("LastName", dbText)
        .Fields.Append .CreateField("Phone", dbText)
        .Fields.Append .CreateField("Notes", dbMemo)

        Debug.Print "Properties of new TableDef object " &amp; _
            "before appending to collection:"

        ' Enumerate Properties collection of new TableDef
        ' object.
        For Each prpLoop In .Properties
            On Error Resume Next
            If prpLoop &lt;&gt; "" Then Debug.Print "    " &amp; _
                prpLoop.Name &amp; " = " &amp; prpLoop
            On Error GoTo 0
        Next prpLoop

        ' Append the new TableDef object to the Northwind
        ' database.
        dbsNorthwind.TableDefs.Append tdfNew

        Debug.Print "Properties of new TableDef object " &amp; _
            "after appending to collection:"

        ' Enumerate Properties collection of new TableDef
        ' object.
        For Each prpLoop In .Properties
            On Error Resume Next
            If prpLoop &lt;&gt; "" Then Debug.Print "    " &amp; _
                prpLoop.Name &amp; " = " &amp; prpLoop
            On Error GoTo 0
        Next prpLoop

    End With

    ' Delete new TableDef object since this is a
    ' demonstration.
    dbsNorthwind.TableDefs.Delete "Contacts"

    dbsNorthwind.Close

End Sub</code></pre>
Example (Microsoft&nbsp;Access)</P>
The following example creates a new <SPAN CLASS="eln">TableDef</SPAN> object and appends it to the <SPAN CLASS="eln">TableDefs</SPAN> collection of the current database.</P>

<pre><code>Sub NewTable()
    Dim dbs As Database, tdf As TableDef, fld As Field
    
    ' Return reference to current database.
    Set dbs = CurrentDb
    ' Return TableDef object variable that points to new table.
    Set tdf = dbs.CreateTableDef("Contacts")
    ' Define new field in table.
    Set fld = tdf.CreateField("ContactName", dbText, 40)
    ' Append Field object to Fields collection of TableDef object.
    tdf.Fields.Append fld
    tdf.Fields.Refresh
    ' Append TableDef object to TableDefs collection of database.
    dbs.TableDefs.Append tdf
    dbs.TableDefs.Refresh
    Set dbs = Nothing
End Sub</code></pre>
Example (Microsoft&nbsp;Excel)</P>
This example creates a new database, Nwindex.mdb. The example attaches two tables from the C:\Program Files\Common Files\Microsoft&nbsp;Shared\MSquery folder to the database. (In Windows&nbsp;NT, the two tables are located in the C:\Windows\Msapps\Msquery folder.)</P>

<pre><code>Dim nWindEx As Database, customerTable As TableDef, supplierTable _
    As TableDef
Dim dataSource As String
dataSource = _
"dBASE IV;DATABASE=C:\Program Files\Common Files\Microsoft Shared\MSquery"
appPath = Application.Path
Set nWindEx = Workspaces(0).CreateDatabase(Application.Path _
    &amp; "\NWINDEX.MDB", dbLangGeneral)
Set customerTable = nWindEx.CreateTableDef("Customer")
customerTable.Connect = dataSource
customerTable.SourceTableName = "Customer"
nWindEx.TableDefs.Append customerTable
Set supplierTable = nWindEx.CreateTableDef("Supplier")
supplierTable.Connect = dataSource
supplierTable.SourceTableName = "Supplier"
nWindEx.TableDefs.Append supplierTable
MsgBox "The database " &amp; nWindEx.Name &amp; " has been created."
nWindEx.Close</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
