<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FieldSize Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>FieldSize Property</H1>Applies To</P>
<SPAN CLASS="eln">Field</SPAN> object.</P>
Description</P>
Returns the number of bytes used in the database (rather than in memory) of a <SPAN CLASS="pop">Memo</SPAN> or <SPAN CLASS="pop">Long Binary</SPAN> <SPAN CLASS="lee">Field</SPAN> object in the <SPAN CLASS="lee">Fields</SPAN> collection of a <SPAN CLASS="lee">Recordset</SPAN> object.</P>
Return Values</P>
The return value is a <SPAN CLASS="lee">Long</SPAN> that indicates the number of characters (for a Memo field) or the number of bytes (for a Long Binary field).</P>
Remarks</P>
You can use <SPAN CLASS="lee">FieldSize</SPAN> with the <SPAN CLASS="lee">AppendChunk</SPAN> and <SPAN CLASS="lee">GetChunk</SPAN> methods to manipulate large fields.</P>
Because the size of a Long Binary or Memo field can exceed 64K, you should assign the value returned by <SPAN CLASS="lee">FieldSize</SPAN> to a variable large enough to store a <SPAN CLASS="lee">Long</SPAN> variable.</P>
To determine the size of a <SPAN CLASS="lee">Field</SPAN> object other than Memo and Long Binary types, use the <SPAN CLASS="lee">Size</SPAN> property.</P>
<SPAN CLASS="nh">Note</SPAN>&nbsp;&nbsp;&nbsp;In an <SPAN CLASS="pop">ODBCDirect workspace</SPAN>, the <SPAN CLASS="lee">FieldSize</SPAN> property is not available in the following situations:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">If the database server or ODBC driver does not support <SPAN CLASS="pop">server-side cursors</SPAN>.</LI><LI CLASS="ULI1">If you are using the ODBC cursor library (that is, the <SPAN CLASS="lee">DefaultCursorDriver</SPAN> property is set to <SPAN CLASS="lee">dbUseODBC</SPAN>, or to <SPAN CLASS="lee">dbUseDefault</SPAN> when the server does not support server-side cursors).</LI><LI CLASS="ULI1">If you are using a cursorless query (that is, the <SPAN CLASS="lee">DefaultCursorDriver</SPAN> property is set to <SPAN CLASS="lee">dbUseNoCursor</SPAN>).</LI></UL></SPAN>For example, Microsoft&nbsp;SQL Server version 4.21 does not support server-side cursors, so the <SPAN CLASS="lee">FieldSize</SPAN> property is not available.</P>
See Also</P>
<SPAN CLASS="eln">AppendChunk</SPAN> method, <SPAN CLASS="eln">GetChunk</SPAN> method, <SPAN CLASS="eln">Size</SPAN> property, <SPAN CLASS="eln">Type</SPAN> property.</P>
Specifics (Microsoft&nbsp;Access)</P>
The DAO <SPAN CLASS="eln">FieldSize</SPAN> property is different from the Microsoft&nbsp;Access <SPAN CLASS="eln">FieldSize</SPAN> property, which is set in <SPAN CLASS="pop">table Design view</SPAN>. The DAO <SPAN CLASS="eln">FieldSize</SPAN> property returns the number of bytes in a <SPAN CLASS="eln">Field</SPAN> object of type <SPAN CLASS="pop">Memo</SPAN> or <SPAN CLASS="pop">OLE Object</SPAN>.</P>
You set the Microsoft&nbsp;Access <SPAN CLASS="eln">FieldSize</SPAN> property in order to limit the size of a field in&nbsp;a table. The <SPAN CLASS="eln">FieldSize</SPAN> property is only available in table Design view. From Visual&nbsp;Basic, use the <SPAN CLASS="eln">Size</SPAN> property to set the size of a field in a table.</P>
Example</P>
This example uses the <SPAN CLASS="eln">FieldSize</SPAN> property to list the number of bytes used by the <SPAN CLASS="pop">Memo</SPAN> and <SPAN CLASS="pop">Long Binary</SPAN> <SPAN CLASS="eln">Field</SPAN> objects in two different tables.</P>

<pre><code>Sub FieldSizeX()

    Dim dbsNorthwind As Database
    Dim rstCategories As Recordset
    Dim rstEmployees As Recordset

    Set dbsNorthwind = OpenDatabase("Northwind.mdb")
    Set rstCategories = _
        dbsNorthwind.OpenRecordset("Categories", _
        dbOpenDynaset)
    Set rstEmployees = _
        dbsNorthwind.OpenRecordset("Employees", _
        dbOpenDynaset)

    Debug.Print _
        "Field sizes from records in Categories table"

    With rstCategories
        Debug.Print "    CategoryName - " &amp; _
            "Description (bytes) - Picture (bytes)"

    ' Enumerate the Categories Recordset and print the size
    ' in bytes of the picture field for each record.
        Do While Not .EOF
            Debug.Print "        " &amp; !CategoryName &amp; " - " &amp; _
                !Description.FieldSize &amp; " - " &amp; _
                !Picture.FieldSize
            .MoveNext
        Loop

        .Close
    End With

    Debug.Print "Field sizes from records in Employees table"

    With rstEmployees
        Debug.Print "    LastName - Notes (bytes) - " &amp; _
            "Photo (bytes)"

    ' Enumerate the Employees Recordset and print the size
    ' in bytes of the picture field for each record.
        Do While Not .EOF
            Debug.Print "        " &amp; !LastName &amp; " - " &amp; _
                !Notes.FieldSize &amp; " - " &amp; !Photo.FieldSize
            .MoveNext
        Loop

        .Close
    End With

    dbsNorthwind.Close

End Sub</code></pre>
Example (Microsoft&nbsp;Access)</P>
The following example uses the <SPAN CLASS="eln">FieldSize</SPAN> property to return the size in bytes of two fields in an Employees table. The Notes field contains Memo data and the Photo field contains Long Binary (OLE Object) data.</P>

<pre><code>Sub GetFieldSize()
    Dim dbs As Database, rst As Recordset
    Dim fldNotes As Field, fldPhoto As Field
    Dim strSQL As String

    ' Return reference to current database.
    Set dbs = CurrentDb
    ' Construct SQL statement to return Notes and Photo fields.
    strSQL = "SELECT Notes, Photo FROM Employees;"
    ' Create dynaset-type Recordset object.
    Set rst = dbs.OpenRecordset(strSQL)
    Set fldNotes = rst!Notes
    Set fldPhoto = rst!Photo
    ' Move to first record.
    rst.MoveFirst
    Debug.Print "Size of Notes:"; "    "; "Size of Photo:"
    ' Print sizes of fields for each record in Recordset object.
    Do Until rst.EOF
        Debug.Print fldNotes.FieldSize; "        "; _
            fldPhoto.FieldSize
        rst.MoveNext
    Loop
    rst.Close
    Set dbs = Nothing
End Sub</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
