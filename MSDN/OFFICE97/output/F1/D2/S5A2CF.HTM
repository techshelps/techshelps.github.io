<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OpenDatabase Method</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>OpenDatabase Method</H1>Applies To</P>
<SPAN CLASS="eln">DBEngine</SPAN> object, <SPAN CLASS="eln">Workspace</SPAN> object.</P>
Description</P>
Opens a specified database in a Workspace object and returns a reference to the <SPAN CLASS="eln">Database</SPAN> object that represents it.</P>
Syntax</P>
<SPAN CLASS="eln">Set</SPAN> <SPAN CLASS="p">database</SPAN><SPAN CLASS="l"> = </SPAN><SPAN CLASS="p">workspace</SPAN><SPAN CLASS="eln">.OpenDatabase(</SPAN><SPAN CLASS="p">dbname</SPAN><SPAN CLASS="l">,</SPAN> <SPAN CLASS="p">options</SPAN><SPAN CLASS="l">,</SPAN> <SPAN CLASS="p">read-only</SPAN><SPAN CLASS="l">,</SPAN> <SPAN CLASS="p">connect</SPAN><SPAN CLASS="p">)</SPAN></P>
The <SPAN CLASS="eln">OpenDatabase</SPAN> method syntax has these parts.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="66pt" VALIGN="TOP"><COL WIDTH="294pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">database</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">An <SPAN CLASS="pop">object variable</SPAN> that represents the <SPAN CLASS="eln">Database</SPAN> object that you want to open.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">workspace</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. An object variable that represents the existing <SPAN CLASS="eln">Workspace</SPAN> object that will contain the database. If you don't include a value for <SPAN CLASS="p">workspace</SPAN>, <SPAN CLASS="eln">OpenDatabase</SPAN> uses the default workspace.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">dbname</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">A String that is the name of an existing <SPAN CLASS="pop">Microsoft Jet database</SPAN> file, or the data source name (DSN) of an <SPAN CLASS="pop">ODBC data source</SPAN>. See the <SPAN CLASS="eln">Name</SPAN> property for more information about setting this value.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">options</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. A Variant that sets various options for the database, as specified in&nbsp;Settings. </P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">read-only</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. A <SPAN CLASS="eln">Variant</SPAN> (Boolean subtype) value that is <SPAN CLASS="eln">True</SPAN> if you want to open the database with read-only access, or <SPAN CLASS="eln">False</SPAN> (default) if you want to open the database with read/write access. </P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"> <SPAN CLASS="p">connect</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. A <SPAN CLASS="eln">Variant</SPAN> (<SPAN CLASS="eln">String</SPAN> subtype) that specifies various connection information, including passwords. </P></TD></TR></TBODY></TABLE>
<BR></P>Settings</P>
For <SPAN CLASS="pop">Microsoft Jet workspaces</SPAN>, you can use the following values for the <SPAN CLASS="p">options</SPAN> argument.</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="66pt" VALIGN="TOP"><COL WIDTH="293pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Setting</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">True</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Opens the database in <SPAN CLASS="pop">exclusive</SPAN> mode.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">False</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">(Default) Opens the database in shared mode.</P></TD></TR></TBODY></TABLE>
<BR></P>For <SPAN CLASS="pop">ODBCDirect workspaces</SPAN>, the <SPAN CLASS="p">options</SPAN> argument determines if and when to prompt the user to establish the connection. You can use one of the following constants.</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="131pt" VALIGN="TOP"><COL WIDTH="228pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Constant</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">  </P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">dbDriverNoPrompt</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The <SPAN CLASS="pop">ODBC Driver Manager</SPAN> uses the <SPAN CLASS="pop">connection string</SPAN> provided in <SPAN CLASS="p">dbname</SPAN> and <SPAN CLASS="p">connect</SPAN>. If you don't provide sufficient information, a run-time error occurs.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">dbDriverPrompt</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The ODBC Driver Manager displays the <SPAN CLASS="eln">ODBC Data Sources</SPAN> dialog box, which displays any relevant information supplied in <SPAN CLASS="p">dbname</SPAN><I> </I>or <SPAN CLASS="p">connect</SPAN>. The connection string is made up of the DSN that the user selects via the dialog boxes, or, if the user doesn't specify a DSN, the default DSN is used.</P></TD></TR></TBODY></TABLE>
<BR></P><I>(continued)</I></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="131pt" VALIGN="TOP"><COL WIDTH="228pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">dbDriverComplete</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">(Default) If the <I>connect</I> and <I>dbname</I> arguments include all&nbsp;the necessary information to complete a connection, the&nbsp;ODBC Driver Manager uses the string in <I>connect</I>. Otherwise it behaves as it does when you specify <SPAN CLASS="eln">dbDriverPrompt</SPAN>.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">dbDriverCompleteRequired</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">This option behaves like <SPAN CLASS="eln">dbDriverComplete</SPAN> except the <SPAN CLASS="pop">ODBC driver</SPAN> disables the prompts for any information not required to complete the connection.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
When you open a database, it is automatically added to the <SPAN CLASS="eln">Databases </SPAN>collection. Further, in an <SPAN CLASS="pop">ODBCDirect workspace</SPAN>, the Connection object corresponding to the new <B>Database</B> object is also created and appended to the <B>Connections</B> collection of the same <B>Workspace</B> object.</P>
Some considerations apply when you use <SPAN CLASS="p">dbname</SPAN>:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">If it refers to a database that is already open for <SPAN CLASS="pop">exclusive</SPAN> access by another user, an error occurs.</LI><LI CLASS="ULI1">If it doesn't refer to an existing database or valid ODBC data source name, an error occurs.</LI><LI CLASS="ULI1">If it's a <SPAN CLASS="pop">zero-length string</SPAN> (" ") and <SPAN CLASS="p">connect</SPAN> is <SPAN CLASS="cte">"ODBC;"</SPAN>, a dialog box listing all registered ODBC data source names is displayed so the user can select a database.</LI><LI CLASS="ULI1">If you're opening a database through an <SPAN CLASS="pop">ODBCDirect workspace</SPAN> and you provide the DSN in <I>connect</I>, you can set <I>dbname</I> to a string of your choice that you can use to reference this database in subsequent code.
</LI></UL></SPAN>The <SPAN CLASS="p">connect</SPAN> argument is expressed in two parts: the database type, followed by a semicolon (;) and the optional arguments. You must first provide the database type, such as <SPAN CLASS="cte">"ODBC;"</SPAN> or <SPAN CLASS="cte">"FoxPro 2.5;"</SPAN>. The optional arguments follow in no particular order, separated by semicolons. One of the parameters may be the password (if one is assigned). For example:</P>

<pre><code>"FoxPro 2.5; pwd=mypassword"</code></pre>
Using the NewPassword method on a <SPAN CLASS="eln">Database</SPAN> object other than an ODBCDirect database changes the password parameter that appears in the <SPAN CLASS="cte">";pwd=..."</SPAN> part of this argument. You must supply the <SPAN CLASS="p">options </SPAN>and <SPAN CLASS="p">read-only</SPAN> arguments to supply a source string. See the <SPAN CLASS="eln">Connect</SPAN> property for syntax.</P>
To close a database, and thus remove the <SPAN CLASS="eln">Database</SPAN> object from the <SPAN CLASS="eln">Databases</SPAN> collection, use the <SPAN CLASS="eln">Close</SPAN> method on the object.</P>
<B>Note</B>   When you access a <SPAN CLASS="pop">Microsoft </SPAN>Jet-connected ODBC data source, you can improve your application's performance by opening a <B>Database</B> object connected to the ODBC data source, rather than by <SPAN CLASS="pop">linking</SPAN> individual <B>TableDef</B> objects to specific tables in the ODBC data source.</P>
See Also</P>
<SPAN CLASS="eln">Close</SPAN> method, <SPAN CLASS="eln">Connect</SPAN> property.</P>
Specifics (Microsoft Access)</P>
In Microsoft Access, use the <SPAN CLASS="eln">CurrentDb</SPAN> function to return a reference to the current database and assign it to a <SPAN CLASS="eln">Database</SPAN> variable, as shown in the following example.</P>

<pre><code>Dim dbsCurrent As Database
Set dbsCurrent = CurrentDb</code></pre>
Use the <SPAN CLASS="eln">OpenDatabase</SPAN> method to open a database other than the current database from Visual&nbsp;Basic.</P>
Example</P>
This example uses the <SPAN CLASS="eln">OpenDatabase</SPAN> method to open one <SPAN CLASS="pop">Microsoft Jet database</SPAN> and two <SPAN CLASS="pop">Microsoft Jet-connected ODBC databases</SPAN>.</P>

<pre><code>Sub OpenDatabaseX()

    Dim wrkJet As Workspace
    Dim dbsNorthwind As Database
    Dim dbsPubs As Database
    Dim dbsPubs2 As Database
    Dim dbsLoop As Database
    Dim prpLoop As Property

    ' Create Microsoft Jet Workspace object.
    Set wrkJet = CreateWorkspace("", "admin", "", dbUseJet)

    ' Open Database object from saved Microsoft Jet database
    ' for exclusive use.
    MsgBox "Opening Northwind..."
    Set dbsNorthwind = wrkJet.OpenDatabase("Northwind.mdb", True)

    ' Open read-only Database object based on information in
    ' the connect string.
    MsgBox "Opening pubs..."
    Set dbsPubs = wrkJet.OpenDatabase("Publishers", _
        dbDriverNoPrompt, True, _
        "ODBC;DATABASE=pubs;UID=sa;PWD=;DSN=Publishers")

    ' Open read-only Database object by entering only the
    ' missing information in the ODBC Driver Manager dialog
    ' box.
    MsgBox "Opening second copy of pubs..."
    Set dbsPubs2 = wrkJet.OpenDatabase("Publishers", _
        dbDriverCompleteRequired, True, _
        "ODBC;DATABASE=pubs;DSN=Publishers;")

    ' Enumerate the Databases collection.
    For Each dbsLoop In wrkJet.Databases
        Debug.Print "Database properties for " &amp; _
            dbsLoop.Name &amp; ":"

        On Error Resume Next
        ' Enumerate the Properties collection of each Database
        ' object.
        For Each prpLoop In dbsLoop.Properties
            If prpLoop.Name = "Connection" Then
                ' Property actually returns a Connection object.
                Debug.Print "    Connection[.Name] = " &amp; _
                    dbsLoop.Connection.Name
            Else
                Debug.Print "    " &amp; prpLoop.Name &amp; " = " &amp; _
                    prpLoop
            End If
        Next prpLoop
        On Error GoTo 0

    Next dbsLoop

    dbsNorthwind.Close
    dbsPubs.Close
    dbsPubs2.Close
    wrkJet.Close

End Sub</code></pre>
Example (Microsoft Access)</P>
The following example returns a Database variable that points to the current database. Then it opens a different database called Another.mdb by using the <SPAN CLASS="eln">OpenDatabase</SPAN> method. The procedure then enumerates all <SPAN CLASS="eln">TableDef</SPAN> objects in both databases.</P>
To try this example, create a new database called Another.mdb, close it, and place it in the same directory as the database from which you are running the code.</P>

<pre><code>Sub OpenAnother()
    Dim wsp As Workspace
    Dim dbs As Database, dbsAnother As Database
    Dim tdf As TableDef
    
    ' Return reference to current database.
    Set dbs = CurrentDb
    ' Return reference to default workspace.
    Set wsp = DBEngine.Workspaces(0)
    ' Return reference to Another.mdb.
    Set dbsAnother = wsp.OpenDatabase("Another.mdb")
    ' Enumerate all TableDef objects in each database.
    Debug.Print dbs.Name &amp; ":"
    For Each tdf in dbs.TableDefs
        Debug.Print tdf.Name
    Next tdf
    Debug.Print
    Debug.Print dbsAnother.Name &amp; ":"
    For Each tdf in dbsAnother.TableDefs
        Debug.Print tdf.Name
    Next tdf
    Set dbs = Nothing
    Set dbsAnother = Nothing
End Sub</code></pre>
Example (Microsoft Excel)</P>
This example displays a custom dialog box that contains a list of all the databases with the file name extension .mdb that are located in the Microsoft Excel folder, and then it opens the database selected by the user.</P>

<pre><code>Dim a(100), db As Database
i = 0
ChDrive "C"
ChDir Application.Path
a(i) = Dir("*.MDB")
If a(i) = "" Then
    MsgBox "You have no databases in the Microsoft Excel folder"
    Exit Sub
End If
Do
    i = i + 1
    a(i) = Dir()
Loop Until a(i) = ""
Set theDialog = DialogSheets.Add
Set list1 = theDialog.ListBoxes.Add(78, 42, 84, 80)
For counter = 0 To i - 1
    list1.AddItem a(counter)
Next
Application.ScreenUpdating = True
theDialog.Show
Set db = Workspaces(0).OpenDatabase(a(list1.Value - 1))
MsgBox "The " &amp; db.Name &amp; " database is now open"
' use database here
db.Close</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
