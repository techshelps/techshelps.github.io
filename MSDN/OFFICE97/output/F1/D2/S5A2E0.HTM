<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>QueryDef Object</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>QueryDef Object</H1>Description</P>
A <SPAN CLASS="eln">QueryDef</SPAN> object is a stored definition of a <SPAN CLASS="pop">query</SPAN> in a <SPAN CLASS="pop">Microsoft&nbsp;Jet</SPAN> database, or a temporary definition of a query in an <SPAN CLASS="pop">ODBCDirect workspace</SPAN>.</P>
Remarks</P>
You can use the <SPAN CLASS="eln">QueryDef</SPAN> object to define a query. For example, you can:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">Use the <SPAN CLASS="eln">SQL</SPAN> property to set or return the query definition.</LI><LI CLASS="ULI1">Use the <SPAN CLASS="eln">QueryDef</SPAN> object's <SPAN CLASS="eln">Parameters</SPAN> collection to set or return query parameters.</LI><LI CLASS="ULI1">Use the <SPAN CLASS="eln">Type</SPAN> property to return a value indicating whether the query selects records from an existing table, makes a new table, inserts records from one table into another table, deletes records, or updates records.</LI><LI CLASS="ULI1"></LI><LI CLASS="ULI1">Use the <SPAN CLASS="eln">MaxRecords</SPAN> property to limit the number of records returned from a query.</LI><LI CLASS="ULI1">Use the <SPAN CLASS="eln">ODBCTimeout</SPAN> property to indicate how long to wait before the query returns records. The <SPAN CLASS="eln">ODBCTimeout</SPAN> property applies to any query that accesses <SPAN CLASS="pop">ODBC</SPAN> data.
</LI></UL></SPAN>In a Microsoft&nbsp;Jet workspace, you can also:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">Use the <SPAN CLASS="eln">ReturnsRecords</SPAN> property to indicate that the query returns records. The <SPAN CLASS="eln">ReturnsRecords</SPAN> property is only valid on SQL pass-through queries.</LI><LI CLASS="ULI1">Use the <SPAN CLASS="eln">Connect</SPAN> property to make an SQL pass-through query to an ODBC database.
</LI></UL></SPAN>In an ODBCDirect workspace, you can also:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">Use the <SPAN CLASS="eln">Prepare</SPAN> property to determine whether to invoke the ODBC <B>SQLPrepare</B> API when the query is executed.</LI><LI CLASS="ULI1">Use the <B>CacheSize</B> property to cache records returned from a query.
</LI></UL></SPAN>You can also create temporary <SPAN CLASS="eln">QueryDef</SPAN> objects. Unlike permanent <SPAN CLASS="eln">QueryDef</SPAN> objects, temporary <SPAN CLASS="eln">QueryDef</SPAN> objects are not saved to disk or appended to the <SPAN CLASS="eln">QueryDefs</SPAN> collection. Temporary <SPAN CLASS="eln">QueryDef</SPAN> objects are useful for queries that you must run repeatedly during run time but do not need to save to disk, particularly if you&nbsp;create their <SPAN CLASS="pop">SQL statements</SPAN> during run time.</P>
You can think of a permanent <SPAN CLASS="eln">QueryDef</SPAN> object in a Microsoft&nbsp;Jet workspaces as a compiled SQL statement. If you execute a query from a permanent <SPAN CLASS="eln">QueryDef</SPAN> object, the query will run faster than if you run the equivalent SQL statement from the <SPAN CLASS="eln">OpenRecordset</SPAN> method. This is because the <SPAN CLASS="pop">Microsoft&nbsp;Jet database engine</SPAN> doesn't need to compile the query before executing it.</P>
The preferred way to use the native SQL dialect of an external database engine accessed through the <SPAN CLASS="pop">Microsoft&nbsp;Jet database engine</SPAN> is through <SPAN CLASS="eln">QueryDef</SPAN> objects. For example, you can create a Microsoft&nbsp;SQL Server query and store it in a <SPAN CLASS="eln">QueryDef</SPAN> object. When you need to use a non-Microsoft&nbsp;Jet database engine SQL query, you must provide a <SPAN CLASS="eln">Connect</SPAN> property string that points to the external data source. Queries with valid <SPAN CLASS="eln">Connect</SPAN> properties bypass the Microsoft&nbsp;Jet database engine and&nbsp;pass the query directly to the external database server for processing.</P>
To create a new <SPAN CLASS="eln">QueryDef</SPAN> object, use the <SPAN CLASS="eln">CreateQueryDef</SPAN> method. In a Microsoft&nbsp;Jet workspace, if you supply a string for the <SPAN CLASS="p">name</SPAN> argument or if you explicitly set the <SPAN CLASS="eln">Name</SPAN> property of the new <SPAN CLASS="eln">QueryDef</SPAN> object to a non-<SPAN CLASS="pop">zero-length string</SPAN>, you will create a permanent <SPAN CLASS="eln">QueryDef</SPAN> that will automatically be appended to the <SPAN CLASS="eln">QueryDefs</SPAN> collection and saved to disk. Supplying a zero-length string as the <SPAN CLASS="p">name</SPAN> argument or explicitly setting the <SPAN CLASS="eln">Name</SPAN> property to a zero-length string will result in a temporary <SPAN CLASS="eln">QueryDef</SPAN> object.</P>
In an ODBCDirect workspace, a <B>QueryDef </B>is always temporary. The <B>QueryDefs</B> collection contains all open <B>QueryDef</B> objects. When a <B>QueryDef</B> is closed, it is automatically removed from the <B>QueryDefs</B> collection.</P>
To refer to a <SPAN CLASS="eln">QueryDef</SPAN> object in a collection by its ordinal number or by its <SPAN CLASS="eln">Name</SPAN> property setting, use any of the following syntax forms:</P>
<SPAN CLASS="eln">QueryDefs</SPAN><SPAN CLASS="l">(</SPAN>0<SPAN CLASS="l">)</SPAN></P>
<SPAN CLASS="eln">QueryDefs</SPAN><SPAN CLASS="l">("</SPAN><SPAN CLASS="p">name</SPAN><SPAN CLASS="l">")</SPAN></P>
<SPAN CLASS="eln">QueryDefs</SPAN><SPAN CLASS="l">![</SPAN><SPAN CLASS="p">name</SPAN><SPAN CLASS="l">]</SPAN></P>
You can refer to temporary <SPAN CLASS="eln">QueryDef</SPAN> objects only by the <SPAN CLASS="pop">object variables</SPAN> that you have assigned to them.</P>
Properties</P>
<SPAN CLASS="eln">CacheSize</SPAN> property, <SPAN CLASS="eln">Connect</SPAN> property, <SPAN CLASS="eln">DateCreated</SPAN>, <SPAN CLASS="eln">LastUpdated</SPAN> properties, <SPAN CLASS="eln">KeepLocal</SPAN> property, <SPAN CLASS="eln">LogMessages</SPAN> property, <SPAN CLASS="eln">MaxRecords</SPAN> property, <SPAN CLASS="eln">Name</SPAN> property, <SPAN CLASS="eln">ODBCTimeout</SPAN> property, <SPAN CLASS="eln">Prepare</SPAN> property, <SPAN CLASS="eln">RecordsAffected</SPAN> property, <SPAN CLASS="eln">Replicable</SPAN> property, <SPAN CLASS="eln">ReturnsRecords</SPAN> property, <SPAN CLASS="eln">SQL</SPAN> property, <SPAN CLASS="eln">StillExecuting</SPAN> property, <SPAN CLASS="eln">Type</SPAN> property, <SPAN CLASS="eln">Updatable</SPAN> property.</P>
Methods</P>
<SPAN CLASS="eln">Cancel</SPAN> method, <SPAN CLASS="eln">Close</SPAN> method, <SPAN CLASS="eln">CreateProperty</SPAN> method, <SPAN CLASS="eln">Execute</SPAN> method, <SPAN CLASS="eln">OpenRecordset</SPAN> method.</P>
See Also</P>
<SPAN CLASS="eln">CreateQueryDef</SPAN> method.</P>
Specifics (Microsoft&nbsp;Access)</P>
In addition to the properties defined by the <SPAN CLASS="pop">Microsoft&nbsp;Jet database engine</SPAN>, a <SPAN CLASS="eln">QueryDef</SPAN> object may also contain these Microsoft&nbsp;Access application–defined properties. For details on checking and setting these properties, see the individual properties and the <SPAN CLASS="eln">Property</SPAN> object.</P>
</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="180pt" VALIGN="TOP"><COL WIDTH="180pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="list"><UL><LI CLASS="ULI1"><SPAN CLASS="eln">DatasheetFontHeight</SPAN></LI></UL></SPAN></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="list"><UL><LI CLASS="ULI1"><SPAN CLASS="eln">DatasheetFontItalic</SPAN></LI></UL></SPAN></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="list"><UL><LI CLASS="ULI1"><SPAN CLASS="eln">DatasheetFontName</SPAN></LI></UL></SPAN></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="list"><UL><LI CLASS="ULI1"><SPAN CLASS="eln">DatasheetFontUnderline</SPAN></LI></UL></SPAN></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="list"><UL><LI CLASS="ULI1"><SPAN CLASS="eln">DatasheetFontWeight</SPAN></LI></UL></SPAN></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="list"><UL><LI CLASS="ULI1"><SPAN CLASS="eln">Description</SPAN></LI></UL></SPAN></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="list"><UL><LI CLASS="ULI1"><SPAN CLASS="eln">FrozenColumns</SPAN></LI></UL></SPAN></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="list"><UL><LI CLASS="ULI1"><SPAN CLASS="eln">LogMessages</SPAN></LI></UL></SPAN></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="list"><UL><LI CLASS="ULI1"><SPAN CLASS="eln">RecordLocks</SPAN></LI></UL></SPAN></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="list"><UL><LI CLASS="ULI1"><SPAN CLASS="eln">RowHeight</SPAN></LI></UL></SPAN></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="list"><UL><LI CLASS="ULI1"><SPAN CLASS="eln">ShowGrid</SPAN></LI></UL></SPAN></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="list"><UL><LI CLASS="ULI1"><SPAN CLASS="eln">UseTransaction</SPAN></LI></UL></SPAN></TD></TR></TBODY></TABLE>
<BR></P>Example</P>
This example creates a new <SPAN CLASS="eln">QueryDef</SPAN> object and appends it to the <SPAN CLASS="eln">QueryDefs</SPAN> collection of the Northwind <SPAN CLASS="eln">Database</SPAN> object. It then enumerates the <SPAN CLASS="eln">QueryDefs</SPAN> collection and the <SPAN CLASS="eln">Properties</SPAN> collection of the new <SPAN CLASS="eln">QueryDef</SPAN>.</P>

<pre><code>Sub QueryDefX()

    Dim dbsNorthwind As Database
    Dim qdfNew As QueryDef
    Dim qdfLoop As QueryDef
    Dim prpLoop As Property

    Set dbsNorthwind = OpenDatabase("Northwind.mdb")

    ' Create new QueryDef object. Because it has a
    ' name, it is automatically appended to the
    ' QueryDefs collection.
    Set qdfNew = dbsNorthwind.CreateQueryDef("NewQueryDef", _
            "SELECT * FROM Categories")

    With dbsNorthwind
        Debug.Print .QueryDefs.Count &amp; _
            " QueryDefs in " &amp; .Name

        ' Enumerate QueryDefs collection.
        For Each qdfLoop In .QueryDefs
            Debug.Print "    " &amp; qdfLoop.Name
        Next qdfLoop

        With qdfNew
            Debug.Print "Properties of " &amp; .Name

            ' Enumerate Properties collection of new
            ' QueryDef object.
            For Each prpLoop In .Properties
                On Error Resume Next
                Debug.Print "    " &amp; prpLoop.Name &amp; " - " &amp; _
                    IIf(prpLoop = "", "[empty]", prpLoop)
                On Error Goto 0
            Next prpLoop
        End With

        ' Delete new QueryDef because this is a
        ' demonstration.
        .QueryDefs.Delete qdfNew.Name
        .Close
    End With

End Sub</code></pre>
Example (Microsoft&nbsp;Access)</P>
The following example checks to see if there is a query called RecentHires in the current database, and deletes it from the <SPAN CLASS="eln">QueryDefs</SPAN> collection if it exists. Then the procedure creates a new <SPAN CLASS="eln">QueryDef</SPAN> object and opens it in Datasheet view.</P>

<pre><code>Sub NewQuery()
    Dim dbs As Database, qdf As QueryDef
    Dim strSQL As String

    ' Return reference to current database.
    Set dbs = CurrentDb
    ' Refresh QueryDefs collection.
    dbs.QueryDefs.Refresh
    ' If RecentHires query exists, delete it.
    For Each qdf in dbs.QueryDefs
        If qdf.Name = "RecentHires" Then
            dbs.QueryDefs.Delete qdf.Name
        End If
    Next qdf
    ' Create SQL string to select employees hired on or after 1-1-94.
    strSQL = "SELECT * FROM Employees WHERE HireDate &gt;= #1-1-94#;"
    ' Create new QueryDef object.
    Set qdf = dbs.CreateQueryDef("RecentHires", strSQL)
    ' Open query in Datasheet view.
    DoCmd.OpenQuery qdf.Name
    Set dbs = Nothing
End Sub</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
