<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BeforeUpdate, AfterUpdate Events -- Macros</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>BeforeUpdate, AfterUpdate Events — Macros</H2>Description</P>
To run a <SPAN CLASS="pop">macro</SPAN> when the BeforeUpdate or AfterUpdate event occurs, set the BeforeUpdate<SPAN CLASS="jump"> or </SPAN>AfterUpdate property to the name of the macro. Microsoft Access runs the macro specified by the <SPAN CLASS="eln">BeforeUpdate</SPAN> or <SPAN CLASS="eln">AfterUpdate</SPAN> property for a <SPAN CLASS="pop">control</SPAN> or <SPAN CLASS="pop">form</SPAN> before or after the data in the control or in the current record on the form is <SPAN CLASS="pop">updated</SPAN>. If the data in the control or record isn't updated, the macro doesn't run.</P>
Remarks</P>
You can use BeforeUpdate macros if you want to store all the validations for a form in one <SPAN CLASS="pop">macro group</SPAN> or if you use a validation expression on several forms.</P>
For example, suppose you have a form on which the user enters the name of a country in a Country control and its corresponding postal code in a Postal Code control. You use <SPAN CLASS="pop">conditional expressions</SPAN> in the macro to make sure that the data entered in the Country control corresponds to the data entered in the Postal Code control and to display a message if invalid data is entered in the Postal Code control.</P>
You can use an AfterUpdate macro to display a different page in the form or move the focus to a particular control or record. For example, when the user enters a value in a Category control on a form, you can use the <SPAN CLASS="jump">GoToPage</SPAN> action in an AfterUpdate macro to move the focus to the page of the form that contains the controls for that category.</P>
You can use the <SPAN CLASS="jump">CancelEvent</SPAN> action in a BeforeUpdate macro to cancel the update. If the BeforeUpdate macro is attached to a control, the CancelEvent action returns the focus to the control, and the data the user entered remains in the control.</P>
If a BeforeUpdate macro is attached to a form (in which it runs each time a record is changed), the CancelEvent action returns the focus to the record.</P>
You can't use the CancelEvent action in an AfterUpdate macro to cancel the AfterUpdate event.</P>
See Also</P>
BeforeUpdate, AfterUpdate events&nbsp;— event procedures.</P>
<HR CLASS="rr"></FONT></BODY>
</HTML>
