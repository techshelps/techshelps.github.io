<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TableDef Object</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>TableDef Object</H1>Description</P>
A <SPAN CLASS="eln">TableDef</SPAN> object represents the stored definition of a <SPAN CLASS="pop">base table</SPAN> or a <SPAN CLASS="pop">linked table</SPAN> (<SPAN CLASS="pop">Microsoft Jet workspaces</SPAN> only).</P>
Remarks</P>
You manipulate a table definition using a <SPAN CLASS="eln">TableDef</SPAN> object and its methods and properties. For example, you can:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">Examine the field and <SPAN CLASS="pop">index</SPAN> structure of any local, linked, or external table in a database.</LI><LI CLASS="ULI1">Use the <SPAN CLASS="eln">Connect</SPAN> and <SPAN CLASS="eln">SourceTableName</SPAN> properties to set or return information about linked tables, and use the <SPAN CLASS="eln">RefreshLink</SPAN> method to update connections to linked tables.</LI><LI CLASS="ULI1">Use the <SPAN CLASS="eln">ValidationRule</SPAN> and <SPAN CLASS="eln">ValidationText</SPAN> properties to set or return validation conditions.</LI><LI CLASS="ULI1">Use the <SPAN CLASS="eln">OpenRecordset</SPAN> method to create a table-, dynaset-, dynamic-, snapshot-, or forward-only-type <SPAN CLASS="eln">Recordset</SPAN> object, based on the table definition.
</LI></UL></SPAN>For base tables, the <SPAN CLASS="eln">RecordCount</SPAN> property contains the number of records in the specified database table. For linked tables, the <SPAN CLASS="eln">RecordCount</SPAN> property setting is always – 1.</P>
To create a new <SPAN CLASS="eln">TableDef</SPAN> object, use the CreateTableDef method.</P>
To add a field to a table</P>
<SPAN CLASS="list"><OL><LI CLASS="OLI1">Make sure any Recordset objects based on the table are all closed.</LI><LI CLASS="OLI1">Use the <SPAN CLASS="eln">CreateField</SPAN> method to create a <SPAN CLASS="eln">Field</SPAN> <SPAN CLASS="pop">object variable</SPAN> and set its properties.</LI><LI CLASS="OLI1">Use the <SPAN CLASS="eln">Append</SPAN> method to add the <SPAN CLASS="eln">Field</SPAN> object to the <SPAN CLASS="eln">Fields</SPAN> collection of the <SPAN CLASS="eln">TableDef</SPAN> object.
</LI></OL></SPAN>You can delete a <SPAN CLASS="eln">Field</SPAN> object from a <SPAN CLASS="eln">TableDefs</SPAN> collection if it doesn't have any indexes assigned to it, but you will lose the field's data.</P>
To create a table that is ready for new records in a database</P>
<SPAN CLASS="list"><OL><LI CLASS="OLI1">Use the <SPAN CLASS="eln">CreateTableDef</SPAN> method to create a <SPAN CLASS="eln">TableDef</SPAN> object.</LI><LI CLASS="OLI1">Set its properties.</LI><LI CLASS="OLI1">For each field in the table, use the <SPAN CLASS="eln">CreateField</SPAN> method to create a <SPAN CLASS="eln">Field</SPAN> object variable and set its properties.</LI><LI CLASS="OLI1">Use the <SPAN CLASS="eln">Append</SPAN> method to add the fields to the <SPAN CLASS="eln">Fields</SPAN> collection of the <SPAN CLASS="eln">TableDef</SPAN> object.</LI><LI CLASS="OLI1">Use the <SPAN CLASS="eln">Append</SPAN> method to add the new <SPAN CLASS="eln">TableDef</SPAN> object to the <SPAN CLASS="eln">TableDefs</SPAN> collection of the <SPAN CLASS="eln">Database</SPAN> object.
</LI></OL></SPAN>A linked table is connected to the database by the <SPAN CLASS="eln">SourceTableName</SPAN> and <SPAN CLASS="eln">Connect</SPAN> properties of the <SPAN CLASS="eln">TableDef</SPAN> object.</P>
To link a table to a database</P>
<SPAN CLASS="list"><OL><LI CLASS="OLI1">Use the <SPAN CLASS="eln">CreateTableDef</SPAN> method to create a <SPAN CLASS="eln">TableDef</SPAN> object.</LI><LI CLASS="OLI1">Set its <SPAN CLASS="eln">Connect</SPAN> and <SPAN CLASS="eln">SourceTableName</SPAN> properties (and optionally, its <SPAN CLASS="eln">Attributes</SPAN> property).</LI><LI CLASS="OLI1">Use the <SPAN CLASS="eln">Append</SPAN> method to add it to the <SPAN CLASS="eln">TableDefs</SPAN> collection of a <SPAN CLASS="eln">Database</SPAN>.
</LI></OL></SPAN>To refer to a <SPAN CLASS="eln">TableDef</SPAN> object in a collection by its ordinal number or by its <SPAN CLASS="eln">Name</SPAN> property setting, use any of the following syntax forms:</P>
<SPAN CLASS="eln">TableDefs</SPAN><SPAN CLASS="l">(</SPAN>0<SPAN CLASS="l">)</SPAN></P>
<SPAN CLASS="eln">TableDefs</SPAN><SPAN CLASS="l">("</SPAN><SPAN CLASS="p">name</SPAN><SPAN CLASS="l">")</SPAN></P>
<SPAN CLASS="eln">TableDefs</SPAN><SPAN CLASS="l">![</SPAN><SPAN CLASS="p">name</SPAN><SPAN CLASS="l">]</SPAN></P>
Properties</P>
<SPAN CLASS="eln">Attributes</SPAN> property, <SPAN CLASS="eln">ConflictTable</SPAN> property, <SPAN CLASS="eln">Connect</SPAN> property, <SPAN CLASS="eln">DateCreated</SPAN>, <SPAN CLASS="eln">LastUpdated</SPAN> properties, <SPAN CLASS="eln">KeepLocal</SPAN> property, <SPAN CLASS="eln">Name</SPAN> property, <SPAN CLASS="eln">RecordCount</SPAN> property, <SPAN CLASS="eln">Replicable</SPAN> property, <SPAN CLASS="eln">ReplicaFilter</SPAN> property, <SPAN CLASS="eln">SourceTableName</SPAN> property, <SPAN CLASS="eln">Updatable</SPAN> property, <SPAN CLASS="eln">ValidationRule</SPAN> property, <SPAN CLASS="eln">ValidationText</SPAN> property.</P>
Methods</P>
<SPAN CLASS="eln">CreateField</SPAN> method, <SPAN CLASS="eln">CreateIndex</SPAN> method, <SPAN CLASS="eln">CreateProperty</SPAN> method, <SPAN CLASS="eln">OpenRecordset</SPAN> method, <SPAN CLASS="eln">RefreshLink</SPAN> method.</P>
See Also</P>
<SPAN CLASS="eln">CreateTableDef</SPAN> method.</P>
Specifics (Microsoft Access)</P>
In addition to the properties defined by the <SPAN CLASS="pop">Microsoft Jet database engine</SPAN>, a <SPAN CLASS="eln">TableDef</SPAN> object may also contain the following Microsoft Access application–defined properties. For details on reading and setting these properties, see the individual properties and the <SPAN CLASS="eln">Property</SPAN> object.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="180pt" VALIGN="TOP"><COL WIDTH="180pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="list"><UL><LI CLASS="ULI1"><SPAN CLASS="eln">DatasheetFontHeight</SPAN></LI></UL></SPAN></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="list"><UL><LI CLASS="ULI1"><SPAN CLASS="eln">DatasheetFontItalic</SPAN></LI></UL></SPAN></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="list"><UL><LI CLASS="ULI1"><SPAN CLASS="eln">DatasheetFontName</SPAN></LI></UL></SPAN></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="list"><UL><LI CLASS="ULI1"><SPAN CLASS="eln">DatasheetFontUnderline</SPAN></LI></UL></SPAN></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="list"><UL><LI CLASS="ULI1"><SPAN CLASS="eln">DatasheetFontWeight</SPAN></LI></UL></SPAN></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="list"><UL><LI CLASS="ULI1"><SPAN CLASS="eln">Description</SPAN></LI></UL></SPAN></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="list"><UL><LI CLASS="ULI1"><SPAN CLASS="eln">FrozenColumns</SPAN></LI></UL></SPAN></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="list"><UL><LI CLASS="ULI1"><SPAN CLASS="eln">RowHeight</SPAN></LI></UL></SPAN></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="list"><UL><LI CLASS="ULI1"><SPAN CLASS="eln">ShowGrid</SPAN></LI></UL></SPAN></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="list"><UL><LI CLASS="ULI1"></LI></UL></SPAN></TD></TR></TBODY></TABLE>
<BR></P>Example</P>
This example creates a new <SPAN CLASS="eln">TableDef</SPAN> object and appends it to the <SPAN CLASS="eln">TableDefs</SPAN> collection of the Northwind <SPAN CLASS="eln">Database</SPAN> object. It then enumerates the <SPAN CLASS="eln">TableDefs</SPAN> collection and the <SPAN CLASS="eln">Properties</SPAN> collection of the new <SPAN CLASS="eln">TableDef</SPAN>.</P>

<pre><code>Sub TableDefX()

    Dim dbsNorthwind As Database
    Dim tdfNew As TableDef
    Dim tdfLoop As TableDef
    Dim prpLoop As Property

    Set dbsNorthwind = OpenDatabase("Northwind.mdb")

    ' Create new TableDef object, append Field objects
    ' to its Fields collection, and append TableDef
    ' object to the TableDefs collection of the
    ' Database object.
    Set tdfNew = dbsNorthwind.CreateTableDef("NewTableDef")
    tdfNew.Fields.Append tdfNew.CreateField("Date", dbDate)
    dbsNorthwind.TableDefs.Append tdfNew

    With dbsNorthwind
        Debug.Print .TableDefs.Count &amp; _
            " TableDefs in " &amp; .Name

        ' Enumerate TableDefs collection.
        For Each tdfLoop In .TableDefs
            Debug.Print "    " &amp; tdfLoop.Name
        Next tdfLoop

        With tdfNew
            Debug.Print "Properties of " &amp; .Name

            ' Enumerate Properties collection of new
            ' TableDef object, only printing properties
            ' with non-empty values.
            For Each prpLoop In .Properties
                Debug.Print "    " &amp; prpLoop.Name &amp; " - " &amp; _
                    IIf(prpLoop = "", "[empty]", prpLoop)
            Next prpLoop

        End With

        ' Delete new TableDef since this is a
        ' demonstration.
        .TableDefs.Delete tdfNew.Name
        .Close
    End With

End Sub</code></pre>
Example (Microsoft Access)</P>
The following example creates a new <SPAN CLASS="eln">TableDef</SPAN> object, defines a field within it, and appends it to the <SPAN CLASS="eln">TableDefs</SPAN> collection of the current database:</P>

<pre><code>Sub NewTable()
    Dim dbs As Database, tdf As TableDef, fld As Field

    ' Return reference to current database.
    Set dbs = CurrentDb
    ' Create new TableDef object.
    Set tdf = dbs.CreateTableDef("Contacts")
    ' Create new Field object.
    Set fld = tdf.CreateField("ContactName", dbText, 30)
    ' Append new objects.
    tdf.Fields.Append fld
    dbs.TableDefs.Append tdf
    Set dbs = Nothing
End Sub</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
