<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SetMenuItem Action</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>SetMenuItem Action</H2>Description</P>
You can use the SetMenuItem action to set the state of menu items (enabled or disabled, checked or unchecked) on the custom menu bar or <SPAN CLASS="pop">global menu bar</SPAN> for the active window.</P>
<SPAN CLASS="nh">Note</SPAN>   The SetMenuItem action works only with custom menu bars and global menu bars created by using <SPAN CLASS="pop">menu bar macros</SPAN>. The SetMenuItem action is included in this version of Microsoft Access only for compatibility with previous versions. It doesn't work with the new <SPAN CLASS="pop">command bars</SPAN> functionality. However, you can use the Enabled and State properties in Visual Basic to disable or enable and check or uncheck items on the new <SPAN CLASS="pop">menu bars</SPAN>, <SPAN CLASS="pop">toolbars</SPAN>, and <SPAN CLASS="pop">shortcut menus</SPAN>.</P>
Setting</P>
The SetMenuItem action has the following arguments.</P>

<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="95pt" VALIGN="TOP"><COL WIDTH="264pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Action argument</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Menu Index</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The index of the menu that contains the command for which you want to set the state. Enter an Integer value, starting from 0, for the index of the desired menu in the custom menu bar or global menu bar for the active window. Enter the index value in the <SPAN CLASS="eln">Menu Index</SPAN> box in the <SPAN CLASS="eln">Action Arguments</SPAN> section of the <SPAN CLASS="pop">Macro window</SPAN>. The index is relative to the menu's position in the menu bar macro for the custom menu bar or global menu bar (the position of this menu's <SPAN CLASS="jump">AddMenu</SPAN> action in the menu bar macro, counting from 0). The menu bar's display may be somewhat different, since you can use <SPAN CLASS="pop">conditional expressions</SPAN> in the menu bar macro to hide or display custom menu items. This is a required argument.</P>
If you select a menu with this argument and leave the Command Index and Subcommand Index arguments blank, you can enable or disable the menu name itself. You can't, however, check or uncheck a menu name (Microsoft Access ignores the Check and Uncheck settings for the Flag argument for menu names).</P></TD></TR></TBODY></TABLE>
<BR></P><I>(continued)</I></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="95pt" VALIGN="TOP"><COL WIDTH="264pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Action argument</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Command Index</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The index of the command for which you want to set the state. Enter an <SPAN CLASS="eln">Integer</SPAN> value, starting from 0, for the index of the desired command in the menu selected by the Menu Index argument. The index is relative to the command's position in the <SPAN CLASS="pop">macro group</SPAN> that defines the selected menu for the custom menu bar or global menu bar (the position of this command's macro in the macro group, counting from 0). The menu's display may be somewhat different, since you can use conditional expressions in the menu's macro group to hide or display custom menu commands.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Subcommand Index</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The index of the subcommand for which you want to set the state. This applies only if the desired command has a <SPAN CLASS="pop">submenu</SPAN>. Enter an&nbsp;<SPAN CLASS="eln">Integer</SPAN> value, starting from 0, for the index of the desired subcommand in the submenu selected by the Command Index argument. The index is relative to the subcommand's position in the&nbsp;macro group that defines the selected submenu for the custom menu bar or global menu bar (the position of this subcommand's macro in the macro group, counting from 0).</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Flag</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The state you want to set the command or subcommand to. Click <SPAN CLASS="eln">Gray</SPAN> (to disable the command — it appears dimmed), <SPAN CLASS="eln">Ungray</SPAN> (to enable it), <SPAN CLASS="eln">Check</SPAN> (to place a check by the command — typically indicating it has been selected or toggled), or <SPAN CLASS="eln">Uncheck</SPAN> (to remove the check). The default is Ungray.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
The SetMenuItem action works only on a custom menu bar or global menu bar for the active window. It doesn't work on the built-in Microsoft Access menu bars, and if the active window doesn't have a custom menu bar or global menu bar, running a macro containing the SetMenuItem action causes a <SPAN CLASS="pop">run-time error</SPAN>. Note that a global menu bar, if you've defined one, replaces the built-in menu bar for all Microsoft Access windows, except where you've added a custom menu bar for a form or report.</P>
You can use this action to set the state of menu commands and subcommands, but not subcommands of subcommands.</P>
To run the SetMenuItem action in Visual Basic, use the SetMenuItem method of the DoCmd object.</P>
See Also</P>
AddMenu action, DoMenuItem action, <SPAN CLASS="eln">Enabled</SPAN> property ("Microsoft Office Language Reference" in Volume 5), <SPAN CLASS="eln">MenuBar</SPAN> property, <SPAN CLASS="eln">SetMenuItem</SPAN> method.</P>
<HR CLASS="rr"></FONT></BODY>
</HTML>
