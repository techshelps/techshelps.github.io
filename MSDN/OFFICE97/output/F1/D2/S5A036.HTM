<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Alias Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>Alias Property</H2>Applies To</P>
Action query, Crosstab query, Parameter query, Query field, Select query, SQL-Specific query.</P>
Description</P>
You can use the <SPAN CLASS="eln">Alias</SPAN> property to specify a custom name for a source table or query when you use the same table or query more than once in the same query.</P>
<SPAN CLASS="nh">Note</SPAN>   The <SPAN CLASS="eln">Alias</SPAN> property applies only to tables or queries when they are used as the source of data in a query.</P>
Setting</P>
You can use a <SPAN CLASS="pop">string expression</SPAN> to set the <SPAN CLASS="eln">Alias</SPAN> property to any name not currently being used in the database. You set this property in <SPAN CLASS="pop">query Design view</SPAN> by right-clicking the <SPAN CLASS="pop">field list</SPAN> in the <SPAN CLASS="pop">query design grid</SPAN> and clicking <SPAN CLASS="eln">Properties</SPAN>.</P>
You can set the <SPAN CLASS="eln">Alias</SPAN> property in <SPAN CLASS="pop">SQL view</SPAN> of the <SPAN CLASS="pop">Query window</SPAN> by using an AS clause in the <SPAN CLASS="pop">SQL statement</SPAN>.</P>
Remarks</P>
You must use an <SPAN CLASS="pop">alias</SPAN> when creating a <SPAN CLASS="pop">self-join</SPAN> in an SQL statement.</P>
When you add a table or query to a query, Microsoft Access automatically sets the <SPAN CLASS="eln">Alias</SPAN> property to the name of the table or query. If a second instance of the same table or query is added, Microsoft Access sets the <SPAN CLASS="eln">Alias</SPAN> property to the object name plus an underscore and a 1 ("_1").</P>
Creating an alias doesn't change the name of the table or query — it only specifies another name that can also be used to refer to the table or query. For example, in a query containing a self-join that shows employees and their managers, you would use two copies of the Employees table. Microsoft Access automatically calls the duplicate table Employees_1. To give this table a more meaningful name, you could set its <SPAN CLASS="eln">Alias</SPAN> property to Managers.</P>
Example</P>
The following example sets the <SPAN CLASS="eln">RecordSource</SPAN> property for a form to an SQL statement that uses the AS clause to specify Managers as the alias for the Employees table.</P>

<pre><code>Dim strGetSQL AS String
strGetSQL = "SELECT Employees.FirstName, Employees.LastName, " _
    &amp; "Employees.Title, Managers.FirstName, Managers.LastName " _
    &amp; "FROM Employees INNER JOIN Employees AS Managers " _
    &amp; "ON Employees.ReportsTo = Managers.EmployeeID; "
Forms!Form1.RecordSource = strGetSQL</code></pre>
The next example uses a self-join to show employees and their managers. It uses the AS clause to set the <SPAN CLASS="eln">Alias</SPAN> property of the duplicate Employees table to Managers. You enter the following SQL statement in SQL view of the Query window.</P>

<pre><code>SELECT Employees.FirstName, Employees.LastName, Employees.Title, Managers.FirstName, Managers.LastName
FROM Employees INNER JOIN Employees AS Managers
ON Employees.ReportsTo = Managers.EmployeeID;</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
