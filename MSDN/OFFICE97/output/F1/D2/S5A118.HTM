<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IgnoreNulls Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>IgnoreNulls Property</H2>Applies To</P>
Index.</P>
Description</P>
You can use the <SPAN CLASS="eln">IgnoreNulls</SPAN> property to specify that records with Null values in the indexed fields not be included in the <SPAN CLASS="pop">index</SPAN>.</P>
Setting</P>
The <SPAN CLASS="eln">IgnoreNulls</SPAN> property uses the following settings.</P>

<TABLE COLS="4" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="72pt" VALIGN="TOP"><COL WIDTH="200pt" VALIGN="TOP"><COL WIDTH="87pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Setting</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Visual Basic</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Yes</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Records that contain <SPAN CLASS="eln">Null</SPAN> values in the indexed fields aren't included in the index.</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">True</SPAN> (–1)</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">No</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">(Default) Records that contain <SPAN CLASS="eln">Null</SPAN> values in the indexed fields are included in the index.</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">False</SPAN> (0)</P></TD></TR></TBODY></TABLE>
<BR></P>You can set this property by using the <SPAN CLASS="pop">Indexes window</SPAN> of <SPAN CLASS="pop">table Design view</SPAN> or <SPAN CLASS="jump">Visual Basic</SPAN>.</P>
To access the <SPAN CLASS="eln">IgnoreNulls</SPAN> property of an index by using Visual Basic, use the DAO IgnoreNulls property.</P>
Remarks</P>
You can define an index for a field to facilitate faster searches for records indexed on that field. If you allow <SPAN CLASS="eln">Null</SPAN> entries in the indexed field and expect to have many of them, set the <SPAN CLASS="eln">IgnoreNulls</SPAN> property for the index to Yes to reduce the amount of storage space that the index uses.</P>
See Also</P>
<SPAN CLASS="eln">IgnoreNulls</SPAN> property ("DAO Language Reference"), <SPAN CLASS="eln">Index</SPAN> object ("DAO Language Reference"), <SPAN CLASS="eln">Indexed</SPAN> property, <SPAN CLASS="eln">Indexes</SPAN> collection ("DAO Language Reference"), <SPAN CLASS="eln">Primary</SPAN> property, <SPAN CLASS="eln">Primary</SPAN> property ("DAO Language Reference"), <SPAN CLASS="eln">Unique</SPAN> property, <SPAN CLASS="eln">Unique</SPAN> property ("DAO Language Reference").</P>
Example</P>
The following example adds a new index to a <SPAN CLASS="eln">TableDef</SPAN> object and sets the <SPAN CLASS="eln">IgnoreNulls</SPAN> and <SPAN CLASS="eln">Unique</SPAN> properties to <SPAN CLASS="eln">True</SPAN> (–1):</P>

<pre><code>Sub NewIndex()
    Dim dbs As Database, tdf As TableDef
    Dim idx As Index, fldID As Field, fldName As Field

    ' Return reference to current database.
    Set dbs = CurrentDb
    ' Return reference to Products table.
    Set tdf = dbs.TableDefs!Products
    ' Return Index object that points to new index.
    Set idx = tdf.CreateIndex("IDName")
    ' Create and append index fields.
    Set fldID = idx.CreateField("ProductID")
    Set fldName = idx.CreateField("ProductName")
    idx.Fields.Append fldID
    idx.Fields.Append fldName
    ' Set index properties.
    idx.IgnoreNulls = True
    idx.Unique = True
    ' Append new Index object to Indexes collection.
    tdf.Indexes.Append idx
    Set dbs = Nothing
End Sub</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
