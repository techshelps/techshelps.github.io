<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Table Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Table Property</H1>Applies To</P>
<SPAN CLASS="eln">Relation</SPAN> object.</P>
Description</P>
Indicates the name of a Relation object's <SPAN CLASS="pop">primary table</SPAN>. This should be equal to the&nbsp;Name property setting of a TableDef or QueryDef object (<SPAN CLASS="pop">Microsoft Jet workspaces</SPAN> only).</P>
Settings and Return Values</P>
The setting or return value is a <SPAN CLASS="eln">String</SPAN><SPAN CLASS="pop"> </SPAN>that evaluates to the name of a table in the TableDefs collection or query in the QueryDefs collection. The <SPAN CLASS="eln">Table</SPAN> property setting is read/write for a new <SPAN CLASS="eln">Relation</SPAN> object not yet appended to a collection and read-only for an existing <SPAN CLASS="eln">Relation</SPAN> object in a Relations collection.</P>
Remarks</P>
Use the <SPAN CLASS="eln">Table</SPAN> property with the <SPAN CLASS="eln">ForeignTable</SPAN> property to define a <SPAN CLASS="eln">Relation</SPAN> object, which represents the <SPAN CLASS="pop">relationship</SPAN> between fields in two tables or queries. Set the <SPAN CLASS="eln">Table</SPAN> property to the <SPAN CLASS="eln">Name</SPAN> property setting of the primary <SPAN CLASS="eln">TableDef</SPAN> or <SPAN CLASS="eln">QueryDef</SPAN> object, and set the <SPAN CLASS="eln">ForeignTable</SPAN> property to the <SPAN CLASS="eln">Name</SPAN> property setting of the foreign (referencing) <SPAN CLASS="eln">TableDef</SPAN> or <SPAN CLASS="eln">QueryDef</SPAN> object. The <SPAN CLASS="eln">Attributes</SPAN> property determines the&nbsp;type of relationship between the two objects.</P>
For example, if you had a list of valid part codes (in a field named PartNo) stored in a ValidParts table, you could establish a <SPAN CLASS="pop">one-to-many relationship</SPAN> with an OrderItem table such that if a part code were entered into the OrderItem table, it would have to already be in the ValidParts table. If the part code didn't exist in the ValidParts table and you had not set the <SPAN CLASS="eln">Attributes</SPAN> property of the <SPAN CLASS="eln">Relation</SPAN> object to <SPAN CLASS="eln">dbRelationDontEnforce</SPAN>, a trappable error would occur.</P>
In this case, the ValidParts table is the <SPAN CLASS="pop">primary table</SPAN>, so the <SPAN CLASS="eln">Table</SPAN> property of the <SPAN CLASS="eln">Relation</SPAN> object would be set to ValidParts and the <SPAN CLASS="eln">ForeignTable</SPAN> property of the <SPAN CLASS="eln">Relation</SPAN> object would be set to OrderItem. The <SPAN CLASS="eln">Name</SPAN> and <SPAN CLASS="eln">ForeignName</SPAN> properties of the Field object in the <SPAN CLASS="eln">Relation</SPAN> object's Fields collection would be set to PartNo.</P>
The following illustration depicts this relation.</P>
See Also</P>
<SPAN CLASS="eln">Attributes</SPAN> property, <SPAN CLASS="eln">Field</SPAN> object, <SPAN CLASS="eln">ForeignTable</SPAN> property, <SPAN CLASS="eln">Name</SPAN> property.</P>
Example</P>
See the <SPAN CLASS="eln">ForeignName</SPAN> property example.</P>
Example (Microsoft Access)</P>
See the <SPAN CLASS="eln">ForeignName</SPAN> property example (Microsoft Access).</P>
<HR CLASS="rr"></FONT></BODY>
</HTML>
