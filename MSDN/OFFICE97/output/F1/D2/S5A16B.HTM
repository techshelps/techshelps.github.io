<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>KeyPress Event -- Event Procedures</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>KeyPress Event — Event Procedures</H2>Description</P>
To create an <SPAN CLASS="pop">event procedure</SPAN> that runs when the <SPAN CLASS="jump">KeyPress</SPAN> event occurs, set the OnKeyPress property to [Event Procedure], and click the <SPAN CLASS="eln">Build</SPAN> button.</P>
Syntax</P>
<SPAN CLASS="l">Private Sub Form_KeyPress(</SPAN>KeyAscii<SPAN CLASS="l"> As Integer)</SPAN></P>
<SPAN CLASS="l">Private Sub </SPAN><SPAN CLASS="p">controlname</SPAN><SPAN CLASS="l">_KeyPress(</SPAN>KeyAscii<SPAN CLASS="l"> As Integer)</SPAN></P>
The KeyPress event has the following arguments.</P>

<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="91pt" VALIGN="TOP"><COL WIDTH="268pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Argument</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">controlname</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The name of the <SPAN CLASS="pop">control</SPAN> whose KeyPress event procedure you want to run.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">KeyAscii</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Returns a numeric <SPAN CLASS="pop">ANSI</SPAN> key code. The KeyAscii argument is passed by reference; changing it sends a different character to the object. Setting the KeyAscii argument to 0 cancels the keystroke so that the object doesn't recognize that a key was pressed.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
A KeyPress event procedure is useful for intercepting keystrokes entered in a <SPAN CLASS="pop">text box</SPAN> or <SPAN CLASS="pop">combo box</SPAN>. It enables you to test keystrokes for validity or to format characters as they're typed. Changing the value of the KeyAscii argument changes the character displayed.</P>
You can convert the KeyAscii argument to a character by using the following expression.</P>
<SPAN CLASS="l">Chr(</SPAN>KeyAscii<SPAN CLASS="l">)</SPAN></P>
You can then perform string operations and translate the character back to an ANSI number that the control can recognize by using the following syntax.</P>
KeyAscii<SPAN CLASS="l"> = Asc(</SPAN><SPAN CLASS="p">character</SPAN><SPAN CLASS="l">)</SPAN></P>
<SPAN CLASS="nh">Note</SPAN>   The ANSI number for the keyboard combination <SPAN CLASS="kn">CTRL+@</SPAN> is 0. Because Microsoft Access recognizes a KeyAscii value of 0 as a <SPAN CLASS="pop">zero-length string</SPAN> (" "), you should avoid using <SPAN CLASS="kn">CTRL+@</SPAN> in your applications.</P>
You can respond to specific keys pressed while a <SPAN CLASS="pop">form</SPAN> is open, regardless of which control has the <SPAN CLASS="pop">focus</SPAN>. For example, you may want the key combination <SPAN CLASS="kn">CTRL+X</SPAN> to always perform the same action on a form. To make sure a form receives all keyboard events, even those that occur for controls, before they occur for the controls, set the KeyPreview property of the form to Yes. With this property setting, all keyboard events occur first for the form, and then for the control that has the focus. You can respond to specific keystrokes in the form's <SPAN CLASS="jump">KeyDown</SPAN>, KeyPress, and <SPAN CLASS="jump">KeyUp</SPAN> events. You can prevent a control from receiving keystrokes you've responded to, and prevent the keyboard events from occurring for the control, by setting the KeyCode argument to 0 for both the KeyDown and KeyUp events, and setting the KeyAscii argument to 0 for the KeyPress event. You must set all three arguments to 0 if you don't want the control to receive the keystrokes.</P>
You can use the arguments for the KeyDown, KeyPress, and KeyUp events, in conjunction with the arguments for the <SPAN CLASS="jump">MouseDown</SPAN>, <SPAN CLASS="jump">MouseUp</SPAN>, and <SPAN CLASS="jump">MouseMove</SPAN> events, to make your application work smoothly for both keyboard and mouse users.</P>
You can't cancel the KeyPress event in an event procedure, but you can cancel it in a <SPAN CLASS="pop">macro</SPAN>.</P>
See Also</P>
KeyPress event&nbsp;— macros.</P>
Example</P>
The following example converts text entered in a text box to uppercase as the text is typed in, one character at a time.</P>
To try the example, add the following event procedure to a form that contains a text box named ShipRegion.</P>

<pre><code>Private Sub ShipRegion_KeyPress(KeyAscii As Integer)
    Dim strCharacter As String

    ' Convert ANSI value to character string.
    strCharacter = Chr(KeyAscii)
    ' Convert character to upper case, then to ANSI value.
    KeyAscii = Asc(UCase(strCharacter))
End Sub</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
