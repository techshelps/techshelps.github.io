<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SELECT Statement</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<HR CLASS="rr">
<H1>SELECT Statement</H1>Description</P>
Instructs the <SPAN CLASS="pop">Microsoft Jet database engine</SPAN> to return information from the database as a set of records.</P>
Syntax</P>
SELECT [<SPAN CLASS="p">predicate</SPAN>] { * | <SPAN CLASS="p">table</SPAN>.* | [<SPAN CLASS="p">table</SPAN>.]<SPAN CLASS="p">field1</SPAN> [AS <SPAN CLASS="p">alias1</SPAN>] [, [<SPAN CLASS="p">table</SPAN>.]<SPAN CLASS="p">field2</SPAN> [AS <SPAN CLASS="p">alias2</SPAN>] [, ...]]}<BR>FROM <SPAN CLASS="p">tableexpression</SPAN> [, ...] [IN <SPAN CLASS="p">externaldatabase</SPAN>]<BR>[WHERE... ]<BR>[GROUP BY... ]<BR>[HAVING... ]<BR>[ORDER BY... ]<BR>[WITH OWNERACCESS OPTION]</P>
The SELECT statement has these parts:</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="86pt" VALIGN="TOP"><COL WIDTH="274pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">predicate</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">One of the following predicates: <SPAN CLASS="jump">ALL, DISTINCT, DISTINCTROW, or TOP</SPAN>. You use the predicate to restrict the number of records returned. If none is specified, the default is ALL.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">*</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Specifies that all fields from the specified table or tables are selected.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">table</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The name of the table containing the fields from which records are selected.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">field1</SPAN>, <SPAN CLASS="p">field2</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The names of the fields containing the data you want to retrieve. If you include more than one field, they are retrieved in the order listed.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">alias1</SPAN>, <SPAN CLASS="p">alias2</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The names to use as column headers instead of the original column names in <SPAN CLASS="p">table</SPAN>.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">tableexpression</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The name of the table or tables containing the data you want to retrieve.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">externaldatabase</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The name of the database containing the tables in <SPAN CLASS="p">tableexpression</SPAN> if they are not in the current database.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
To perform this operation, the Microsoft Jet database engine searches the specified table or tables, extracts the chosen columns, selects rows that meet the criterion, and sorts or groups the resulting rows into the order specified.</P>
SELECT statements don't change data in the database.</P>
SELECT is usually the first word in an <SPAN CLASS="pop">SQL statement</SPAN>. Most SQL statements are either SELECT or <SPAN CLASS="jump">SELECT...INTO</SPAN> statements.</P>
The minimum syntax for a SELECT statement is:</P>
SELECT <SPAN CLASS="p">fields</SPAN> FROM <SPAN CLASS="p">table</SPAN></P>
You can use an <SPAN CLASS="pop">asterisk</SPAN> (*) to select all fields in a table. The following example selects all of the fields in the Employees table:</P>

<pre><code>SELECT * FROM Employees;</code></pre>
If a field name is included in more than one table in the FROM clause, precede it with the&nbsp;table name and the <SPAN CLASS="eln">.</SPAN> (dot) operator. In the following example, the Department field is&nbsp;in both the Employees table and the Supervisors table. The SQL statement selects departments from the Employees table and supervisor names from the Supervisors table:</P>

<pre><code>SELECT Employees.Department, Supervisors.SupvName
FROM Employees INNER JOIN Supervisors
WHERE Employees.Department = Supervisors.Department;</code></pre>
When a Recordset object is created, the Microsoft Jet database engine uses the table's field name as the Field object name in the <SPAN CLASS="eln">Recordset</SPAN> object. If you want a different field name or a name isn't implied by the expression used to generate the field, use the AS <SPAN CLASS="pop">reserved word</SPAN>. The following example uses the title Birth to name the returned <SPAN CLASS="eln">Field</SPAN> object in the resulting <SPAN CLASS="eln">Recordset</SPAN> object:</P>

<pre><code>SELECT BirthDate
AS Birth FROM Employees;</code></pre>
Whenever you use <SPAN CLASS="pop">aggregate functions</SPAN> or queries that return ambiguous or duplicate <SPAN CLASS="eln">Field</SPAN> object names, you must use the AS clause to provide an alternate name for the <SPAN CLASS="eln">Field</SPAN> object. The following example uses the title HeadCount to name the returned <SPAN CLASS="eln">Field</SPAN> object in the resulting <SPAN CLASS="eln">Recordset</SPAN> object:</P>

<pre><code>SELECT COUNT(EmployeeID)
AS HeadCount FROM Employees;</code></pre>
You can use the other clauses in a SELECT statement to further restrict and organize your returned data. For more information, see the topic for the clause you're using.</P>
See Also</P>
ALL, DISTINCT, DISTINCTROW, TOP predicates, DELETE statement, <SPAN CLASS="eln">Execute</SPAN> method ("DAO Language Reference"), <SPAN CLASS="eln">Field</SPAN> object ("DAO Language Reference"), FROM clause, GROUP BY clause, HAVING clause, IN clause, INSERT INTO statement, ORDER BY clause, <SPAN CLASS="eln">Recordset</SPAN> object ("DAO Language Reference"), SELECT...INTO statement, <SPAN CLASS="eln">SQL</SPAN> property ("DAO Language Reference"), UNION operation, UPDATE statement, WHERE clause, WITH OWNERACCESS OPTION Declaration.</P>
Specifics (Microsoft Access)</P>
In Microsoft Access, if you are working in <SPAN CLASS="pop">SQL view</SPAN> in the <SPAN CLASS="pop">Query window</SPAN>, field names (<SPAN CLASS="p">field1</SPAN>, <SPAN CLASS="p">field2</SPAN>) are used as column headings in <SPAN CLASS="pop">Datasheet view</SPAN>. To display a different column heading for a column in the datasheet, use the AS reserved word. If you use the AS reserved word, then the <SPAN CLASS="p">alias1</SPAN>, <SPAN CLASS="p">alias2</SPAN> arguments provide the column names to use in displaying the retrieved data in Datasheet view. The use of the AS clause is equivalent to setting the <SPAN CLASS="eln">Alias</SPAN> property in the field list property sheet in <SPAN CLASS="pop">query Design view</SPAN>.</P>
The following example uses the title "Birthday" to head the column in the resulting datasheet:</P>

<pre><code>SELECT [BirthDate] AS Birthday FROM Employees;</code></pre>
When you use <SPAN CLASS="pop">aggregate functions</SPAN> or queries that return ambiguous or duplicate field names, you must also use the AS clause to provide an alternate name for the field. The following example creates the column heading "Head Count" in Datasheet view:</P>

<pre><code>SELECT COUNT([EmployeeID])
AS [Head Count] FROM Employees;</code></pre>
If you are working with <SPAN CLASS="pop">Data Access Objects (DAO)</SPAN> in Visual Basic code, the <SPAN CLASS="p">field1</SPAN>, <SPAN CLASS="p">field2</SPAN> arguments are used to name the <SPAN CLASS="eln">Field</SPAN> objects in the <SPAN CLASS="eln">Recordset</SPAN> object returned by the query. If you include the AS reserved word, then the <SPAN CLASS="p">alias1</SPAN>, <SPAN CLASS="p">alias2</SPAN> arguments provide the column headings to return as <SPAN CLASS="eln">Field</SPAN> object names in the resulting <SPAN CLASS="eln">Recordset</SPAN> object.</P>
Example</P>
See the FROM clause example.</P>
Example (Microsoft Access)</P>
See the FROM clause example (Microsoft&nbsp;Access).</P>
<HR CLASS="rr"></FONT></BODY>
</HTML>
