<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Direction Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Direction Property</H1>Applies To</P>
<SPAN CLASS="eln">Parameter</SPAN> object.</P>
Description</P>
Sets or returns a value that indicates whether a <SPAN CLASS="lee">Parameter</SPAN> object represents an input parameter, an output parameter, both, or the return value from the procedure (<SPAN CLASS="pop">ODBCDirect workspaces</SPAN> only).</P>
Settings And Return Values</P>
The setting or return value is a <SPAN CLASS="lee">Long</SPAN> that can be set to one of the following constants.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="123pt" VALIGN="TOP"><COL WIDTH="237pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Constant</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">dbParamInput</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">(Default) Passes information to the procedure.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">dbParamInputOutput</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Passes information both to and from the procedure.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">dbParamOutput</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Returns information from the procedure as in an output parameter in SQL.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="lee">dbParamReturnValue</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Passes the return value from a procedure.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
Use the <SPAN CLASS="lee">Direction</SPAN> property to determine whether the parameter is an input parameter, output parameter, both, or the return value from the procedure. Some ODBC drivers do not provide information on the direction of parameters to a SELECT statement or procedure call. In these cases, it is necessary to set the direction prior to executing the query.</P>
For example, the following procedure returns a value from a stored procedure named "get_employees":</P>

<pre><code>{? = call get_employees}</code></pre>
This call produces one parameter — the return value. You need to set the direction of this parameter to <SPAN CLASS="lee">dbParamOutput</SPAN> or <SPAN CLASS="lee">dbParamReturnValue</SPAN> before executing the <SPAN CLASS="lee">QueryDef</SPAN>.</P>
You need to set all parameter directions except <SPAN CLASS="lee">dbParamInput</SPAN> before accessing or setting the values of the parameters and before executing the <SPAN CLASS="lee">QueryDef</SPAN>.</P>
You should use <SPAN CLASS="lee">dbParamReturnValue</SPAN> for return values, but in cases where that option is not supported by the driver or the server, you can use <SPAN CLASS="lee">dbParamOutput</SPAN> instead.</P>
<SPAN CLASS="nh">Note</SPAN>&nbsp;&nbsp;&nbsp;The Microsoft SQL Server 6.0 driver automatically sets the <SPAN CLASS="lee">Direction</SPAN> property for all procedure parameters. Not all ODBC drivers can determine the direction of a query parameter. In these cases, it is necessary to set the direction prior to executing the query.</P>
Example</P>
This example uses the <SPAN CLASS="eln">Direction</SPAN> property to configure the parameters of a query to an ODBC data source.</P>

<pre><code>Sub DirectionX()

    Dim wrkMain As Workspace
    Dim conMain As Connection
    Dim qdfTemp As QueryDef
    Dim rstTemp As Recordset
    Dim strSQL As String
    Dim intLoop As Integer

    ' Create ODBC workspace and open a connection to a
    ' Microsoft SQL Server database.
    Set wrkMain = CreateWorkspace("ODBCWorkspace", _
        "admin", "", dbUseODBC)
    Set conMain = wrkMain.OpenConnection("Publishers", _
        dbDriverNoPrompt, False, _
        "ODBC;DATABASE=pubs;UID=sa;PWD=;DSN=Publishers")

    ' Set SQL string to call the stored procedure
    ' getempsperjob.
    strSQL = "{ call getempsperjob (?, ?) }"

    Set qdfTemp = conMain.CreateQueryDef("", strSQL)

    With qdfTemp
        ' Indicate that the two query parameters will only
        ' pass information to the stored procedure.
        .Parameters(0).Direction = dbParamInput
        .Parameters(1).Direction = dbParamInput

        ' Assign initial parameter values.
        .Parameters(0) = "0877"
        .Parameters(1) = 0

        Set rstTemp = .OpenRecordset()

        With rstTemp
            ' Loop through all valid values for the second
            ' parameter. For each value, requery the recordset
            ' to obtain the correct results and then print out
            ' the contents of the recordset.
            For intLoop = 1 To 14
                qdfTemp.Parameters(1) = intLoop
                .Requery
                Debug.Print "Publisher = " &amp; _
                    qdfTemp.Parameters(0) &amp; _
                    ", job = " &amp; intLoop
                Do While Not .EOF
                    Debug.Print , .Fields(0), .Fields(1)
                    .MoveNext
                Loop
            Next intLoop
            .Close
        End With
    End With

    conMain.Close
    wrkMain.Close

End Sub</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
