<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DataUpdatable Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>DataUpdatable Property</H1>Applies To</P>
<SPAN CLASS="eln">Field</SPAN> object.</P>
Description</P>
Returns a value that indicates whether the data in the field represented by a Field object is updatable.</P>
Return Values</P>
The return value is a Boolean data type that returns <SPAN CLASS="eln">True</SPAN> if the data in the field is updatable.</P>
Remarks</P>
Use this property to determine whether you can change the Value property setting of a <SPAN CLASS="eln">Field</SPAN> object. This property is always <B>False</B> on a <SPAN CLASS="eln">Field</SPAN> object whose Attributes property is <SPAN CLASS="eln">dbAutoIncrField</SPAN>.</P>
You can use the <SPAN CLASS="eln">DataUpdatable</SPAN> property on <SPAN CLASS="eln">Field</SPAN> objects that are appended to the Fields collection of QueryDef, Recordset, and Relation objects, but not the <SPAN CLASS="eln">Fields</SPAN> collection of Index or TableDef objects.</P>
See Also</P>
<SPAN CLASS="eln">Attributes</SPAN> property, <SPAN CLASS="eln">Updatable</SPAN> property, <SPAN CLASS="eln">Value</SPAN> property.</P>
Example</P>
This example demonstrates the <SPAN CLASS="eln">DataUpdatable</SPAN> property using the first field from six different <SPAN CLASS="eln">Recordsets</SPAN>. The DataOutput function is required for this procedure to run.</P>

<pre><code>Sub DataUpdatableX()

    Dim dbsNorthwind As Database
    Dim rstNorthwind As Recordset

    Set dbsNorthwind = OpenDatabase("Northwind.mdb")

    With dbsNorthwind
        ' Open and print report about a table-type Recordset.
        Set rstNorthwind = .OpenRecordset("Employees")
        DataOutput rstNorthwind

        ' Open and print report about a dynaset-type Recordset.
        Set rstNorthwind = .OpenRecordset("Employees", _
            dbOpenDynaset)
        DataOutput rstNorthwind

        ' Open and print report about a snapshot-type Recordset.
        Set rstNorthwind = .OpenRecordset("Employees", _
            dbOpenSnapshot)
        DataOutput rstNorthwind
        ' Open and print report about a forward-only-type Recordset.
        Set rstNorthwind = .OpenRecordset("Employees", _
            dbOpenForwardOnly)
        DataOutput rstNorthwind

        ' Open and print report about a Recordset based on
        ' a select query.
        Set rstNorthwind = _
            .OpenRecordset("Current Product List")
        DataOutput rstNorthwind

        ' Open and print report about a Recordset based on a
        ' select query that calculates totals.
        Set rstNorthwind = .OpenRecordset("Order Subtotals")
        DataOutput rstNorthwind

        .Close
    End With

End Sub

Function DataOutput(rstTemp As Recordset)

    With rstTemp
        Debug.Print "Recordset: " &amp; .Name &amp; ", ";
        Select Case .Type
            Case dbOpenTable
                Debug.Print "dbOpenTable"
            Case dbOpenDynaset
                Debug.Print "dbOpenDynaset"
            Case dbOpenSnapshot
                Debug.Print "dbOpenSnapshot"
            Case dbOpenForwardOnly
                Debug.Print "dbOpenForwardOnly"
        End Select
        Debug.Print "    Field: " &amp; .Fields(0).Name &amp; ", " &amp; _
            "DataUpdatable = " &amp; .Fields(0).DataUpdatable
        Debug.Print
        .Close
    End With

End Function</code></pre>
Example (Microsoft Access)</P>
The following example creates two <SPAN CLASS="eln">Recordset</SPAN> objects, a dynaset-type <SPAN CLASS="eln">Recordset</SPAN> object and a snapshot-type <SPAN CLASS="eln">Recordset</SPAN> object, from the same table. The procedure then&nbsp;checks the <SPAN CLASS="eln">DataUpdatable</SPAN> property for the LastName field in each <SPAN CLASS="eln">Recordset</SPAN> object. The setting of the <SPAN CLASS="eln">DataUpdatable</SPAN> property is <SPAN CLASS="eln">True</SPAN> (–1) for the dynaset-type <SPAN CLASS="eln">Recordset</SPAN> object, and <SPAN CLASS="eln">False</SPAN> (0) for the snapshot-type <SPAN CLASS="eln">Recordset</SPAN> object.</P>

<pre><code>Sub CheckUpdatable()
    Dim dbs As Database
    Dim rstDynaset As Recordset, rstSnapshot As Recordset
    Dim fldDynaset As Field, fldSnapshot As Field

    ' Return reference to current database.
    Set dbs = CurrentDb
    ' Open dynaset-type Recordset object.
    Set rstDynaset = dbs.OpenRecordset("Employees", dbOpenDynaset)
    ' Open snapshot-type Recordset object.
    Set rstSnapshot = dbs.OpenRecordset("Employees", dbOpenSnapshot)
    ' Get Field object variables pointing to 
    ' field in each Recordset object.
    Set fldDynaset = rstDynaset.Fields!LastName
    Set fldSnapshot = rstSnapshot.Fields!LastName
    ' Get current record.
    rstDynaset.MoveFirst
    rstSnapshot.MoveFirst
    ' Display value of DataUpdatable property for each 
    ' Recordset object.
    Debug.Print "DataUpdatable (Dynaset-type Recordset): "; _
        fldDynaset.DataUpdatable
    Debug.Print "DataUpdatable (Snapshot-type Recordset): "; _
        fldSnapshot.DataUpdatable
    rstDynaset.Close
    rstSnapshot.Close
    Set dbs = Nothing
End Sub</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
