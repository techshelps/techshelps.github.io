<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OrderBy Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>OrderBy Property</H2>Applies To</P>
Form, Parameter query, Report, Select query, Table.</P>
Description</P>
You can use the <SPAN CLASS="eln">OrderBy</SPAN> property to specify how you want to sort records in a <SPAN CLASS="pop">form</SPAN>, <SPAN CLASS="pop">query</SPAN>, <SPAN CLASS="pop">report</SPAN>, or <SPAN CLASS="pop">table</SPAN>.</P>
Setting</P>
The <SPAN CLASS="eln">OrderBy</SPAN> property is a <SPAN CLASS="pop">string expression</SPAN> that is the name of the field or fields on which you want to sort records. When you use more than one field name, separate the names with a comma (,).</P>
When you set the <SPAN CLASS="eln">OrderBy</SPAN> property by entering one or more field names, the records are sorted in ascending order. Similarly, Visual Basic sorts these fields in ascending order by default.</P>
If you want to sort records in descending order, type <SPAN CLASS="l">DESC</SPAN> at the end of the string expression. For example, to sort customer records in descending order by contact name, set the <SPAN CLASS="eln">OrderBy</SPAN> property to "ContactName DESC".</P>
You can set the <SPAN CLASS="eln">OrderBy</SPAN> property by using the object's <SPAN CLASS="jump">property sheet</SPAN>, a <SPAN CLASS="jump">macro</SPAN>, or <SPAN CLASS="jump">Visual Basic</SPAN>.</P>
Remarks</P>
For reports, the OrderByOn property must be set to Yes to apply the sort order specified by the object's <SPAN CLASS="eln">OrderBy</SPAN> property. For forms, select the field by which you want to sort the records and either click the appropriate Sort button on the <SPAN CLASS="pop">toolbar</SPAN>, or point to <SPAN CLASS="eln">Sort</SPAN> on the <SPAN CLASS="eln">Records</SPAN> menu and click the appropriate command on the submenu. You can also set the <SPAN CLASS="eln">OrderByOn</SPAN> property for either forms or reports by using Visual Basic.</P>
Setting the <SPAN CLASS="lee">OrderBy</SPAN> property for an open report will run the report's Close and Open event procedures.</P>
<SPAN CLASS="nh">Note</SPAN>   When a new object is created, it inherits the RecordSource, Filter, <SPAN CLASS="eln">OrderBy</SPAN>, and <SPAN CLASS="eln">OrderByOn</SPAN> properties of the table or query it was created from. For forms and reports, inherited filters aren't automatically applied when an object is opened.</P>
See Also</P>
<SPAN CLASS="eln">AllowFilters</SPAN> property, ApplyFilter action, <SPAN CLASS="eln">ApplyFilter</SPAN> method, <SPAN CLASS="eln">Filter</SPAN> property, <SPAN CLASS="eln">Filter</SPAN> property ("DAO Language Reference"), <SPAN CLASS="eln">FilterOn</SPAN> property, <SPAN CLASS="eln">OrderByOn</SPAN> property.</P>
<HR CLASS="rr"></FONT></BODY>
</HTML>
