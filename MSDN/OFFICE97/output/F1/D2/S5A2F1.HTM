<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Requery Method</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Requery Method</H1>Applies To</P>
Dynamic-Type <SPAN CLASS="eln">Recordset</SPAN> object, Dynaset-Type <SPAN CLASS="eln">Recordset</SPAN> object, Forward-Only–Type <SPAN CLASS="eln">Recordset</SPAN> object, <SPAN CLASS="eln">Recordset</SPAN> object, Snapshot-Type <SPAN CLASS="eln">Recordset</SPAN> object.</P>
Description</P>
Updates the data in a Recordset object by re-executing the query on which the object is based.</P>
Syntax</P>
<I>recordset</I><SPAN CLASS="l">.</SPAN><SPAN CLASS="eln">Requery </SPAN><SPAN CLASS="eln">newquerydef</SPAN></P>
The <SPAN CLASS="eln">Requery</SPAN> method syntax has the following parts.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="90pt" VALIGN="TOP"><COL WIDTH="270pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">recordset</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">An <SPAN CLASS="pop">object variable</SPAN> that represents an existing <SPAN CLASS="pop">Microsoft Jet</SPAN> dynaset-, snapshot-, or forward-only–type <SPAN CLASS="eln">Recordset</SPAN> object, or an <SPAN CLASS="pop">ODBCDirect</SPAN> <SPAN CLASS="eln">Recordset</SPAN> object.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">newquerydef</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. A Variant that represents the <SPAN CLASS="eln">Name</SPAN> property value of a QueryDef object (<SPAN CLASS="pop">Microsoft Jet workspaces</SPAN> only).</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
Use this method to make sure that a <SPAN CLASS="eln">Recordset</SPAN> contains the most recent data. This method re-populates the current <SPAN CLASS="eln">Recordset</SPAN> by using either the current query parameters or (in a Microsoft Jet workspace) the new ones supplied by the <SPAN CLASS="p">newquerydef</SPAN> argument.</P>
In an <SPAN CLASS="pop">ODBCDirect workspace</SPAN>, if the original query was <SPAN CLASS="pop">asynchronous</SPAN>, then <B>Requery</B> will also execute an asynchronous query.</P>
If you don't specify a <I>newquerydef</I> argument, the <SPAN CLASS="eln">Recordset </SPAN>is re-populated based on the&nbsp;same query definition and parameters used to originally populate the <SPAN CLASS="eln">Recordset</SPAN>. Any changes to the underlying data will be reflected during this re-population. If you didn't use a <SPAN CLASS="eln">QueryDef</SPAN> to create the <SPAN CLASS="eln">Recordset</SPAN>, the <SPAN CLASS="eln">Recordset</SPAN> is re-created from scratch.</P>
If you specify the original <SPAN CLASS="eln">QueryDef</SPAN> in the <I>newquerydef</I> argument, then the <SPAN CLASS="eln">Recordset</SPAN> is requeried using the parameters specified by the <SPAN CLASS="eln">QueryDef</SPAN>. Any changes to the underlying data will be reflected during this re-population. To reflect any changes to the query parameter values in the <SPAN CLASS="eln">Recordset</SPAN>, you must supply the <SPAN CLASS="p">newquerydef</SPAN><SPAN CLASS="eln"> </SPAN>argument.</P>
If you specify a different <SPAN CLASS="eln">QueryDef</SPAN> than what was originally used to create the <SPAN CLASS="eln">Recordset</SPAN>, the <SPAN CLASS="eln">Recordset</SPAN> is re-created from scratch.</P>
When you use <SPAN CLASS="eln">Requery</SPAN>, the first record in the <SPAN CLASS="eln">Recordset</SPAN> becomes the <SPAN CLASS="pop">current record</SPAN>.</P>
You can't use the <SPAN CLASS="eln">Requery</SPAN> method on dynaset- or snapshot-type <SPAN CLASS="eln">Recordset</SPAN> objects whose <SPAN CLASS="eln">Restartable</SPAN> property is set to <SPAN CLASS="eln">False</SPAN>. However, if you supply the optional <SPAN CLASS="p">newquerydef</SPAN><SPAN CLASS="eln"> </SPAN>argument, the <SPAN CLASS="eln">Restartable</SPAN> property is ignored.</P>
If both the <SPAN CLASS="eln">BOF</SPAN> and <SPAN CLASS="eln">EOF</SPAN> property settings of the <SPAN CLASS="eln">Recordset</SPAN> object are <SPAN CLASS="eln">True</SPAN> after you use the <SPAN CLASS="eln">Requery</SPAN> method, the query didn't return any records and the <SPAN CLASS="eln">Recordset</SPAN> contains no data.</P>
See Also</P>
<SPAN CLASS="eln">BOF</SPAN>, <SPAN CLASS="eln">EOF</SPAN> properties, <SPAN CLASS="eln">QueryDef</SPAN> object, <SPAN CLASS="eln">Restartable</SPAN> property.</P>
Example</P>
This example shows how the <SPAN CLASS="eln">Requery</SPAN> method can be used to refresh a query after underlying data has been changed.</P>

<pre><code>Sub RequeryX()

    Dim dbsNorthwind As Database
    Dim qdfTemp As QueryDef
    Dim rstView As Recordset
    Dim rstChange As Recordset

    Set dbsNorthwind = OpenDatabase("Northwind.mdb")
    Set qdfTemp = dbsNorthwind.CreateQueryDef("", _
        "PARAMETERS ViewCountry Text; " &amp; _
        "SELECT FirstName, LastName, Country FROM " &amp; _
        "Employees WHERE Country = [ViewCountry] " &amp; _
        "ORDER BY LastName")

    qdfTemp.Parameters!ViewCountry = "USA"
    Debug.Print "Data after initial query, " &amp; _
        [ViewCountry] = USA"
    Set rstView = qdfTemp.OpenRecordset
    Do While Not rstView.EOF
        Debug.Print "    " &amp; rstView!FirstName &amp; " " &amp; _
            rstView!LastName &amp; ", " &amp; rstView!Country
        rstView.MoveNext
    Loop

    ' Change underlying data.
    Set rstChange = dbsNorthwind.OpenRecordset("Employees")
    rstChange.AddNew
    rstChange!FirstName = "Nina"
    rstChange!LastName = "Roberts"
    rstChange!Country = "USA"
    rstChange.Update

    rstView.Requery
    Debug.Print "Requery after changing underlying data"
    Set rstView = qdfTemp.OpenRecordset
    Do While Not rstView.EOF
        Debug.Print "    " &amp; rstView!FirstName &amp; " " &amp; _
            rstView!LastName &amp; ", " &amp; rstView!Country
        rstView.MoveNext
    Loop

    ' Restore original data because this is only a
    ' demonstration.
    rstChange.Bookmark = rstChange.LastModified
    rstChange.Delete
    rstChange.Close

    rstView.Close
    dbsNorthwind.Close

End Sub</code></pre>
This example shows how the <SPAN CLASS="eln">Requery</SPAN> method can be used to refresh a query after the query parameters have been changed.</P>

<pre><code>Sub RequeryX2()

    Dim dbsNorthwind As Database
    Dim qdfTemp As QueryDef
    Dim prmCountry As Parameter
    Dim rstView As Recordset

    Set dbsNorthwind = OpenDatabase("Northwind.mdb")
    Set qdfTemp = dbsNorthwind.CreateQueryDef("", _
        "PARAMETERS ViewCountry Text; " &amp; _
        "SELECT FirstName, LastName, Country FROM " &amp; _
        "Employees WHERE Country = [ViewCountry] " &amp; _
        "ORDER BY LastName")
    Set prmCountry = qdfTemp.Parameters!ViewCountry

    qdfTemp.Parameters!ViewCountry = "USA"
    Debug.Print "Data after initial query, " &amp; _
        [ViewCountry] = USA"
    Set rstView = qdfTemp.OpenRecordset
    Do While Not rstView.EOF
        Debug.Print "    " &amp; rstView!FirstName &amp; " " &amp; _
            rstView!LastName &amp; ", " &amp; rstView!Country
        rstView.MoveNext
    Loop
    ' Change query parameter.
    qdfTemp.Parameters!ViewCountry = "UK"
    ' QueryDef argument must be included so that the
    ' resulting Recordset reflects the change in the query
    ' parameter.
    rstView.Requery qdfTemp
    Debug.Print "Requery after changing parameter, " &amp; _
        "[ViewCountry] = UK"
    Do While Not rstView.EOF
        Debug.Print "    " &amp; rstView!FirstName &amp; " " &amp; _
            rstView!LastName &amp; ", " &amp; rstView!Country
        rstView.MoveNext
    Loop

    rstView.Close
    dbsNorthwind.Close

End Sub</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
