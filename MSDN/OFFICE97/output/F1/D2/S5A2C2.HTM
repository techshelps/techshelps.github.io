<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>LoginTimeout Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>LoginTimeout Property</H1>Applies To</P>
<SPAN CLASS="eln">DBEngine</SPAN> object, <SPAN CLASS="eln">Workspace</SPAN> object.</P>
Description</P>
Sets or returns the number of seconds before an error occurs when you attempt to log on to an <SPAN CLASS="pop">ODBC</SPAN> database.</P>
Settings and Return Values</P>
The setting or return value is an <SPAN CLASS="eln">Integer</SPAN> representing the number of seconds before a login timeout error occurs. The default <SPAN CLASS="eln">LoginTimeout</SPAN> property setting is 20 seconds. When the <SPAN CLASS="eln">LoginTimeout</SPAN> property is set to 0, no timeout occurs.</P>
Remarks</P>
When you're attempting to log on to an ODBC database, such as Microsoft SQL Server, the connection can fail as a result of network errors or because the server isn't running. Rather than waiting for the default 20 seconds to connect, you can specify how long to wait before raising an error. Logging on to the server happens implicitly as part of a number of different events, such as running a query on an external server database.</P>
You can use <SPAN CLASS="eln">LoginTimeout</SPAN> on the DBEngine object in both <SPAN CLASS="pop">Microsoft Jet</SPAN> and <SPAN CLASS="pop">ODBCDirect</SPAN> workspaces. You can use <SPAN CLASS="eln">LoginTimeout</SPAN> on the Workspace object only in ODBCDirect workspaces. Setting the property to –1 on a <SPAN CLASS="eln">Workspace</SPAN> will default to the current setting of <B>DBEngine.LoginTimeout</B>. You can change this property in a <B>Workspace</B> at any time, and the new setting will take effect with the next Connection or Database object opened.</P>
The default value is determined by the ODBC driver. In a Microsoft Jet workspace, you can override the driver's default value by creating a new "ODBC" key in the Registry path <SPAN CLASS="eln">\HKEY_LOCAL_MACHINE\SOFTWARE\Jet\3.5</SPAN><SPAN CLASS="eln">\, creating a </SPAN><SPAN CLASS="eln">LoginTimeout</SPAN> parameter in this key, and setting the value as desired.</P>
See Also</P>
<SPAN CLASS="eln">ODBCTimeout</SPAN> property, <SPAN CLASS="eln">QueryDef</SPAN> object, <SPAN CLASS="eln">QueryTimeout</SPAN> property.</P>
Example</P>
This example sets the <SPAN CLASS="eln">LoginTimeout</SPAN> property of the <SPAN CLASS="eln">DBEngine</SPAN> object to 120 seconds. It then opens three <SPAN CLASS="pop">ODBCDirect workspaces</SPAN> and modifies their <SPAN CLASS="eln">LoginTimeout</SPAN> properties from the default inherited from the <SPAN CLASS="eln">DBEngine</SPAN> object.</P>

<pre><code>Sub LoginTimeoutX()
<B></B>
    ' Change the default LoginTimeout value.
<B>    </B>DBEngine.LoginTimeout = 120
<B></B>
    Dim wrkODBC1 As Workspace
<B>    </B>Dim wrkODBC2 As Workspace
<B>    </B>Dim wrkODBC3 As Workspace
<B></B>
    Set wrkODBC1 = CreateWorkspace("", "admin", "", _
        dbUseODBC)
<B>    </B>Set wrkODBC2 = CreateWorkspace("", "admin", "", _
        dbUseODBC)
<B>    </B>Set wrkODBC3 = CreateWorkspace("", "admin", "", _
        dbUseODBC)
<B></B>
    ' Change the LoginTimeout of the individual ODBCDirect
    ' workspaces for 60 seconds, the default time (120
    ' seconds), and no timeout.
<B>    </B>wrkODBC1.LoginTimeout = 60
<B>    </B>wrkODBC2.LoginTimeout = -1
<B>    </B>wrkODBC2.LoginTimeout = 0
<B></B>
    wrkODBC1.Close
<B>    </B>wrkODBC2.Close
<B>    </B>wrkODBC3.Close
<B></B>
End Sub</code></pre>
Example (Microsoft Access)</P>
The following example sets the <SPAN CLASS="eln">LoginTimeout</SPAN> property to 120 seconds, then creates a query, and runs it on a database on an ODBC server:</P>

<pre><code>Sub Login()
    Dim dbs As Database
    Dim qdf As QueryDef, rst As Recordset

    ' Set timeout to 120 seconds.
    DBEngine.LoginTimeout = 120
    ' Return reference to current database.
    Set dbs = CurrentDb
    ' Create new QueryDef object.
    Set qdf = dbs.CreateQueryDef("All Employees", _
        "SELECT * FROM Employees;")
    qdf.Connect = "ODBC;DSN=Human Resources; " _
        &amp; "Database=HRSRVR; UID=Smith; PWD=Sesame"
    ' Log on to server and run query.
    Set rst = qdf.OpenRecordset()
    ' Perform operations with recordset.
    .
    .
    .
    rst.Close
    Set dbs = Nothing
End Sub</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
