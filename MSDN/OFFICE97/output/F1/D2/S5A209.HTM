<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SelLength, SelStart, SelText Properties</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>SelLength, SelStart, SelText Properties</H2>Applies To</P>
Combo Box control, Text Box control.</P>
Description</P>
You can use these properties for tasks such as positioning the insertion point, establishing an insertion range, selecting parts of strings in a <SPAN CLASS="pop">text box</SPAN> or <SPAN CLASS="pop">combo box</SPAN> <SPAN CLASS="pop">control</SPAN>, and deleting text.</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">The <SPAN CLASS="eln">SelLength</SPAN> property specifies or determines the number of characters selected in a text box or the text box portion of a combo box.</LI><LI CLASS="ULI1">The <SPAN CLASS="eln">SelStart</SPAN> property specifies or determines the starting point of the selected text or the position of the insertion point if no text is selected.</LI><LI CLASS="ULI1">The <SPAN CLASS="eln">SelText</SPAN> property returns a string containing the selected text. If no text is selected, the <B>SelText</B> property contains a Null value.
</LI></UL></SPAN>Setting</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">The <SPAN CLASS="eln">SelLength</SPAN> and <SPAN CLASS="eln">SelStart</SPAN> properties use an Integer in the range 0 to the total number of characters in a text box or text box portion of a combo box.</LI><LI CLASS="ULI1">The <SPAN CLASS="eln">SelText</SPAN> property uses a <SPAN CLASS="pop">string expression</SPAN> that contains the text selected in the control. If the control contains selected text when this property is set, the selected text is replaced by the new <B>SelText</B> setting.
</LI></UL></SPAN>You can set the <SPAN CLASS="eln">SelLength</SPAN> and <SPAN CLASS="eln">SelStart</SPAN> properties by using a <SPAN CLASS="jump">macro</SPAN> or <SPAN CLASS="jump">Visual Basic</SPAN>. The <SPAN CLASS="eln">SelText</SPAN> property is read-only.</P>
Remarks</P>
To set or return these properties for a control, the control must have the <SPAN CLASS="pop">focus</SPAN>. To move the focus to a control, use the <SPAN CLASS="jump">SetFocus</SPAN> method.</P>
Setting the <SPAN CLASS="eln">SelLength</SPAN> property to a number less than 0 produces a <SPAN CLASS="pop">run-time error</SPAN>.</P>
Setting the <SPAN CLASS="eln">SelStart</SPAN> property to a number greater than the number of characters in the control sets the property to the existing text length.</P>
Changing the <SPAN CLASS="eln">SelStart</SPAN> property cancels the selection, places an insertion point in the text, and sets the <SPAN CLASS="eln">SelLength</SPAN> property to 0.</P>
See Also</P>
<SPAN CLASS="eln">SetFocus</SPAN> method, <SPAN CLASS="eln">Text</SPAN> property.</P>
Example</P>
The following example uses two event procedures to search for text specified by a user. The text to search is set in the form's Load event procedure. The Click event procedure for the Find button (which the user clicks to start the search) prompts the user for the text to search for and selects the text in the text box if the search is successful.</P>

<pre><code>Sub Form_Load()
    Dim ctlTextToSearch As Control
    Set ctlTextToSearch = Forms!Form1!TextBox1
    ctlTextToSearch.SetFocus      ' SetFocus to text box.
    ctlTextToSearch.Text = "This company places large orders " _
        &amp; "twice a year for garlic, oregano, chilies and cumin."
End Sub

Sub Find_Click()
    Dim strSearch As String, intWhere As Integer
    Dim ctlTextToSearch As Control
    ' Get search string from user.
    With Me!Textbox1
        strSearch = InputBox("Enter text to find:")
        ' Find string in text.
        intWhere = InStr(.Value, strSearch)
        If intWhere Then
            ' If found.
            .SetFocus
            .SelStart = intWhere - 1
            .SelLength = Len(strSearch)
        Else
            ' Notify user.
            MsgBox "String not found."
        End If
    End With
End Sub</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
