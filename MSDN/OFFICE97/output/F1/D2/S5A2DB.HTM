<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PopulatePartial Method</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>PopulatePartial Method</H1>Applies To</P>
<SPAN CLASS="eln">Database</SPAN> object.</P>
Description</P>
Synchronizes any changes in a partial replica with the full replica, clears all records in the partial replica, and then repopulates the <SPAN CLASS="pop">partial replica</SPAN> based on the current replica filters. (<SPAN CLASS="pop">Microsoft&nbsp;Jet databases</SPAN> only.)</P>
Syntax</P>
<SPAN CLASS="p">database</SPAN><SPAN CLASS="l">.</SPAN><SPAN CLASS="lee">PopulatePartial</SPAN> <SPAN CLASS="p">dbname</SPAN></P>
The <SPAN CLASS="lee">PopulatePartial</SPAN> method syntax has the following parts.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="76pt" VALIGN="TOP"><COL WIDTH="284pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">database</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">An <SPAN CLASS="pop">object variable</SPAN> that references the partial replica <SPAN CLASS="lee">Database</SPAN> object that you want to populate.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">dbname</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">A <SPAN CLASS="lee">string</SPAN> specifying the path and name of the full replica from which to populate records.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
When you synchronize a partial replica with a full replica, it is possible to create "orphaned" records in the partial replica. For example, suppose you have a Customers table with its <SPAN CLASS="lee">ReplicaFilter</SPAN> set to <SPAN CLASS="cte">"Region = 'CA'"</SPAN>. If a user changes a customer's region from CA to NY in the partial replica, and then a synchronization occurs via the <SPAN CLASS="lee">Synchronize</SPAN> method, the change is propagated to the full replica but the record containing NY in the partial replica is orphaned because it now doesn't meet the replica filter criteria.</P>
To solve the problem of orphaned records, you can use the <SPAN CLASS="lee">PopulatePartial</SPAN> method. The <SPAN CLASS="lee">PopulatePartial</SPAN> method is similar to the <SPAN CLASS="lee">Synchronize</SPAN> method, but it synchronizes any changes with the full replica, removes all records in the partial replica, and then repopulates the partial replica based on the current replica filters. Even if your replica filters have not changed, <SPAN CLASS="lee">PopulatePartial</SPAN><SPAN CLASS="eln"> </SPAN>will always clear all records in the partial replica and repopulate it based on the current filters.</P>
Generally, you should use the <SPAN CLASS="lee">PopulatePartial</SPAN> method when you create a partial replica and whenever you change your replica filters. If your application changes replica filters, you should follow these steps:</P>
<SPAN CLASS="list"><OL><LI CLASS="OLI1">Synchronize your full replica with the partial replica in which the filters are being changed.</LI><LI CLASS="OLI1">Use the <SPAN CLASS="lee">ReplicaFilter</SPAN> and <SPAN CLASS="lee">PartialReplica</SPAN> properties to make the desired changes to the replica filter.</LI><LI CLASS="OLI1">Call the <SPAN CLASS="lee">PopulatePartial</SPAN><SPAN CLASS="eln"> </SPAN>method to remove all records from the partial replica and transfer all records from the full replica that meet the new replica filter criteria.
</LI></OL></SPAN>If a replica filter has changed, and the <SPAN CLASS="lee">Synchronize</SPAN><SPAN CLASS="eln"> </SPAN>method is invoked without first invoking <SPAN CLASS="lee">PopulatePartial</SPAN>, a trappable error occurs.</P>
The <SPAN CLASS="lee">PopulatePartial</SPAN> method can only be invoked on a partial replica that has been opened for exclusive access. Furthermore, you can't call the <SPAN CLASS="lee">PopulatePartial</SPAN> method from code running within the partial replica itself. Instead, open the partial replica exclusively from the full replica or another database, then call <SPAN CLASS="lee">PopulatePartial</SPAN>.</P>
<SPAN CLASS="nh">Note</SPAN>&nbsp;&nbsp;&nbsp;Although <SPAN CLASS="lee">PopulatePartial</SPAN> performs a one-way synchronization before clearing and repopulating the partial replica, it is still a good idea to call <SPAN CLASS="lee">Synchronize</SPAN> before calling <SPAN CLASS="lee">PopulatePartial</SPAN>. This is because if the call to <SPAN CLASS="lee">Synchronize</SPAN> fails, a trappable error occurs. You can use this error to decide whether or not to proceed with the <SPAN CLASS="lee">PopulatePartial</SPAN> method (which removes all records in the partial replica). If <SPAN CLASS="lee">PopulatePartial</SPAN><SPAN CLASS="eln"> </SPAN>is called by itself and an error occurs while records are being synchronized, records in the partial replica will still be cleared, which may not be the desired result.</P>
See Also</P>
<SPAN CLASS="eln">Synchronize</SPAN> method.</P>
Example</P>
The following example uses the <SPAN CLASS="eln">PopulatePartial</SPAN> method after changing a replica filter.</P>

<pre><code>Sub PopulatePartialX()

    Dim tdfCustomers As TableDef
    Dim strFilter As String
    Dim dbsTemp As Database

    ' Open the partial replica in exclusive mode.
    Set dbsTemp = OpenDatabase("F:\Sales\Fy96ca.mdb", True)

    With dbsTemp
        Set tdfCustomers = .TableDefs("Customers")

        ' Synchronize with full replica
        ' before setting replica filter.
        .Synchronize "C:\Sales\Fy96.mdb"

        strFilter = "Region = 'CA'"
        tdfCustomers.ReplicaFilter = strFilter

        ' Populate records from the full replica.
        .PopulatePartial "C:\Sales\Fy96.mdb"

        .Close
    End With

End Sub</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
