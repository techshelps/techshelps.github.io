<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ApplyFilter Action</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>ApplyFilter Action</H2>Description</P>
You can use the ApplyFilter action to apply a <SPAN CLASS="pop">filter</SPAN>, a <SPAN CLASS="pop">query</SPAN>, or an <SPAN CLASS="pop">SQL WHERE clause</SPAN> to a <SPAN CLASS="pop">table</SPAN>, <SPAN CLASS="pop">form</SPAN>, or <SPAN CLASS="pop">report</SPAN> to restrict or sort the records in the table, or the records from the underlying table or query of the form or report. For reports, you can use this action only in a <SPAN CLASS="pop">macro</SPAN> specified by the report's <SPAN CLASS="eln">OnOpen</SPAN> <SPAN CLASS="jump">event property</SPAN>.</P>
Setting</P>
The ApplyFilter action has the following arguments.</P>

<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="90pt" VALIGN="TOP"><COL WIDTH="269pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Action argument</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Filter Name</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The name of a filter or query that restricts or sorts the records of the table, form, or report. You can enter the name of either an existing query or a filter that has been saved as a query in the <SPAN CLASS="eln">Filter Name</SPAN> box in the <SPAN CLASS="eln">Action Arguments</SPAN> section of the <SPAN CLASS="pop">Macro window</SPAN>.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Where Condition</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">A valid SQL WHERE clause (without the word WHERE) or an <SPAN CLASS="pop">expression</SPAN> that restricts the records of the table, form or report.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="nh">Note</SPAN>   In a Where Condition argument expression, the left side of the expression typically contains a field name from the underlying table or query for the form or report. The right side of the expression typically contains the <SPAN CLASS="pop">criteria</SPAN> you want to apply to this field in order to restrict or sort the records. For example, the criteria can be the name of a control on another form that contains the value you want the records in the first form to match. The name of the control should be fully qualified, for example:</P>
<SPAN CLASS="l">Forms!</SPAN><SPAN CLASS="p">formname</SPAN><SPAN CLASS="l">!</SPAN><SPAN CLASS="p">controlname</SPAN></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The maximum length of the Where Condition argument is 256 characters. If you need to enter a longer SQL WHERE clause, use the ApplyFilter method of the DoCmd object in Visual Basic. You can enter SQL WHERE clause statements of up to 32,768 characters in Visual Basic.</P></TD></TR></TBODY></TABLE>
<BR></P><SPAN CLASS="nh">Note</SPAN>   You must use one or both arguments. You can use the Filter Name argument if you've already defined a filter that provides the appropriate data. You can use the Where Condition argument to enter the restriction criteria directly. If you use both arguments, Microsoft Access applies the WHERE clause to the results of the filter.</P>
Remarks</P>
You can apply a filter or query to a form in <SPAN CLASS="pop">Form view</SPAN> or <SPAN CLASS="pop">Datasheet view</SPAN>.</P>
The filter and WHERE condition you apply become the setting of the form's or report's Filter property.</P>
For tables and forms, this action is similar to clicking <SPAN CLASS="eln">Apply Filter/Sort</SPAN> on the <SPAN CLASS="eln">Records</SPAN> menu or clicking the <SPAN CLASS="eln">Apply Filter</SPAN> button on the <SPAN CLASS="pop">toolbar</SPAN>. The menu command or button applies the most recently created filter to the table or form, whereas the ApplyFilter action applies a specified filter or query.</P>
If you point to <SPAN CLASS="eln">Filter</SPAN> on the <SPAN CLASS="eln">Records</SPAN> menu and then click <SPAN CLASS="eln">Advanced Filter/Sort</SPAN> after running the ApplyFilter action, the <SPAN CLASS="pop">Advanced Filter/Sort window</SPAN> shows the filter criteria you've selected with this action.</P>
To remove a filter and display all of the records for a table or form, you can use the <SPAN CLASS="jump">ShowAllRecords</SPAN> action, the <SPAN CLASS="eln">Remove Filter/Sort</SPAN> command on the <SPAN CLASS="eln">Records</SPAN> menu, or the <SPAN CLASS="eln">Remove Filter</SPAN> button on the toolbar.</P>
When you save a table or form, Microsoft Access saves any filter currently defined in that object, but won't apply the filter automatically the next time the object is opened (although it will automatically apply any sort you applied to the object before it was saved). If you want to apply a filter automatically when a form is first opened, specify a macro containing the ApplyFilter action or an event procedure containing the <SPAN CLASS="eln">ApplyFilter</SPAN> method of the <SPAN CLASS="eln">DoCmd</SPAN> object as the <SPAN CLASS="eln">OnOpen</SPAN> event property setting of the form. You can also apply a filter by using the <SPAN CLASS="jump">OpenForm</SPAN> or <SPAN CLASS="jump">OpenReport</SPAN> action, or their corresponding methods. To apply a filter automatically when a table is first opened, you can open the table by using a macro containing the <SPAN CLASS="jump">OpenTable</SPAN> action, followed immediately by the ApplyFilter action.</P>
See Also</P>
<SPAN CLASS="eln">ApplyFilter</SPAN> method, <SPAN CLASS="eln">Filter</SPAN> property, <SPAN CLASS="eln">FilterOn</SPAN> property, OpenForm action, OpenQuery action, OpenReport action, ShowAllRecords action, WHERE clause ("SQL Language Reference").</P>
<HR CLASS="rr"></FONT></BODY>
</HTML>
