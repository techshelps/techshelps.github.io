<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Column Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>Column Property</H2>Applies To</P>
Combo Box control, List Box control.</P>
Description</P>
You can use the <SPAN CLASS="eln">Column</SPAN> property to refer to a specific <SPAN CLASS="pop">column</SPAN>, or column and row combination, in a multiple-column <SPAN CLASS="pop">combo box</SPAN> or <SPAN CLASS="pop">list box</SPAN>. Use 0 to refer to the first column, 1 to refer to the second column, and so on. Use 0 to refer to the first row, 1 to refer to the second row, and so on. For example, in a list box containing a column of customer IDs and a column of customer names, you could refer to the customer name in the second column and fifth row as:</P>

<pre><code>Forms!Contacts!Customers.Column(1, 4)</code></pre>
Setting</P>
<SPAN CLASS="p">control</SPAN><SPAN CLASS="l">.Column(</SPAN><SPAN CLASS="p">column</SPAN><SPAN CLASS="l">, </SPAN><SPAN CLASS="p">row</SPAN><SPAN CLASS="l">)</SPAN></P>
The <SPAN CLASS="eln">Column</SPAN> property uses the following settings.</P>

<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="71pt" VALIGN="TOP"><COL WIDTH="288pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Setting</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">control</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">A Control object that represents the active combo box or list box control.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">column</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">An integer that can range from 0 to the setting of the ColumnCount property minus one.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">row</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. An integer that can range from 0 to the setting of the ListCount property minus 1.</P></TD></TR></TBODY></TABLE>
<BR></P>This property setting is only available by using a <SPAN CLASS="jump">macro</SPAN> or <SPAN CLASS="jump">Visual&nbsp;Basic</SPAN>. This property setting isn't available in <SPAN CLASS="pop">Design view</SPAN> and is read-only in other views.</P>
Remarks</P>
You can use the <SPAN CLASS="eln">Column</SPAN> property to assign the contents of a combo box or list box to another control, such as a <SPAN CLASS="pop">text box</SPAN>. For example, to set the ControlSource property of a text box to the value in the second column of a list box, you could use the following expression:</P>

<pre><code>=Forms!Customers!CompanyName.Column(1)</code></pre>
If the user has made no selection when you refer to a column in a combo box or list box, the <SPAN CLASS="eln">Column</SPAN> property setting will be Null. You can use the IsNull function to determine if a selection has been made, as in the following example:</P>

<pre><code>If IsNull(Forms!Customers!Country)
    Then MsgBox "No selection."
End If</code></pre>
<SPAN CLASS="nh">Note</SPAN>   To determine how many columns a combo box or list box has, you can inspect the <SPAN CLASS="eln">ColumnCount</SPAN> property setting.</P>
See Also</P>
<SPAN CLASS="eln">BoundColumn</SPAN> property, <SPAN CLASS="eln">ColumnCount</SPAN> property, <SPAN CLASS="eln">ColumnHeads</SPAN> property, <SPAN CLASS="eln">ColumnWidths</SPAN> property, <SPAN CLASS="eln">ListCount</SPAN> property, <SPAN CLASS="eln">MultiSelect</SPAN> property, <SPAN CLASS="eln">Nz</SPAN> function, <SPAN CLASS="eln">Selected</SPAN> property.</P>
Example</P>
The following example uses the <SPAN CLASS="eln">Column</SPAN> property and the <SPAN CLASS="eln">ColumnCount</SPAN> property to print the values of a list box selection.</P>

<pre><code>Sub Read_ListBox()
    Dim intNumColumns As Integer, inti As Integer
    Dim frmCust As Form

    Set frmCust = Forms!frmCustomers
    If frmCust!lstCustomerNames.ItemsSelected.Count &gt; 0 Then
        ' Any selection?
        intNumColumns = frmCust!lstCustomerNames.ColumnCount
        Debug.Print "The list box contains "; intNumColumns; _
            IIf(intNumColumns = 1, " column", " columns"); " of data."
        Debug.Print "The current selection contains:"
        For inti = 0 To intNumColumns - 1
            ' Print column data.
            Debug.Print frmCust!lstCustomerNames.Column(inti)
        Next inti
    Else
        Debug.Print "You haven't selected an entry in the list box."
    End If
End Sub</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
