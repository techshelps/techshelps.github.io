<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Properties Collection</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Properties Collection</H1>Description</P>
A <SPAN CLASS="eln">Properties</SPAN> collection contains all the Property objects for a specific instance of an object.</P>
Remarks</P>
Every DAO object except the <B>Connection</B> and <B>Error</B> objects contains a <SPAN CLASS="eln">Properties</SPAN> collection, which has certain built-in <SPAN CLASS="eln">Property</SPAN> objects. These <SPAN CLASS="eln">Property</SPAN> objects (which are often just called properties) uniquely characterize that instance of the object.</P>
In addition to the built-in properties, you can also create and add your own user-defined properties. To add a user-defined property to an existing instance of an object, first define its characteristics with the <SPAN CLASS="eln">CreateProperty</SPAN> method, then add it to the collection with the <SPAN CLASS="eln">Append</SPAN> method. Referencing a user-defined <SPAN CLASS="eln">Property</SPAN> object that has not yet been appended to a <SPAN CLASS="eln">Properties</SPAN> collection will cause an error, as will appending a user-defined <SPAN CLASS="eln">Property</SPAN> object to a <SPAN CLASS="eln">Properties</SPAN> collection containing a <SPAN CLASS="eln">Property</SPAN> object of the same name.</P>
You can use the <SPAN CLASS="eln">Delete</SPAN> method to remove user-defined properties from the <SPAN CLASS="eln">Properties</SPAN> collection, but you can't remove built-in properties.</P>
<SPAN CLASS="nh">Note</SPAN>&nbsp;&nbsp;&nbsp;A user-defined <SPAN CLASS="eln">Property</SPAN> object is associated only with the specific instance of an object. The property isn't defined for all instances of objects of the selected type.</P>
You can use the <SPAN CLASS="eln">Properties</SPAN> collection of an object to enumerate the object's built-in and user-defined properties. You don't need to know beforehand exactly which properties exist or what their characteristics (<SPAN CLASS="eln">Name</SPAN> and <SPAN CLASS="eln">Type</SPAN> properties) are to manipulate them. However, if you try to read a write-only property, such as the <SPAN CLASS="eln">Password</SPAN> property of a <SPAN CLASS="eln">Workspace</SPAN> object, or try to read or write a property in an inappropriate context, such as the <SPAN CLASS="eln">Value</SPAN> property setting of a <SPAN CLASS="eln">Field</SPAN> object in the <SPAN CLASS="eln">Fields</SPAN> collection of a <SPAN CLASS="eln">TableDef</SPAN> object, an error occurs.</P>
To refer to a built-in <SPAN CLASS="eln">Property</SPAN> object in a collection by its ordinal number or by its <SPAN CLASS="eln">Name</SPAN> property setting, use any of the following syntax forms:</P>
<SPAN CLASS="p">object</SPAN><SPAN CLASS="l">.</SPAN><SPAN CLASS="eln">Properties</SPAN><SPAN CLASS="l">(</SPAN>0<SPAN CLASS="l">)</SPAN></P>
<SPAN CLASS="p">object</SPAN><SPAN CLASS="l">.</SPAN><SPAN CLASS="eln">Properties</SPAN><SPAN CLASS="l">("</SPAN><SPAN CLASS="p">name</SPAN><SPAN CLASS="l">")</SPAN></P>
<SPAN CLASS="p">object</SPAN><SPAN CLASS="l">.</SPAN><SPAN CLASS="eln">Properties</SPAN><SPAN CLASS="l">![</SPAN><SPAN CLASS="p">name</SPAN><SPAN CLASS="l">]</SPAN></P>
For a built-in property, you can also use this syntax:</P>
<SPAN CLASS="p">object</SPAN><SPAN CLASS="l">.</SPAN><SPAN CLASS="p">name</SPAN></P>
<SPAN CLASS="nh">Note</SPAN>&nbsp;&nbsp;&nbsp;For a user-defined property, you must use the full <SPAN CLASS="p">object</SPAN><SPAN CLASS="eln">.Properties</SPAN><SPAN CLASS="l">("</SPAN><SPAN CLASS="p">name</SPAN><SPAN CLASS="l">")</SPAN> syntax.</P>
With the same syntax forms, you can also refer to the <SPAN CLASS="eln">Value</SPAN> property of a <SPAN CLASS="eln">Property</SPAN> object. The context of the reference will determine whether you are referring to the <SPAN CLASS="eln">Property</SPAN> object itself or the <SPAN CLASS="eln">Value</SPAN> property of the <SPAN CLASS="eln">Property</SPAN> object.</P>
Properties</P>
<SPAN CLASS="eln">Count</SPAN> property.</P>
Methods</P>
<SPAN CLASS="eln">Append</SPAN> method, <SPAN CLASS="eln">Delete</SPAN> method, <SPAN CLASS="eln">Refresh</SPAN> method.</P>
Specifics (Microsoft&nbsp;Access)</P>
See the <SPAN CLASS="eln">Property</SPAN> object specifics (Microsoft&nbsp;Access).</P>
Example</P>
See the <SPAN CLASS="eln">Property</SPAN> object example.</P>
Example (Microsoft&nbsp;Access)</P>
See the <SPAN CLASS="eln">Property</SPAN> object example (Microsoft&nbsp;Access).</P>
<HR CLASS="rr"></FONT></BODY>
</HTML>
