<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GROUP BY Clause</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>GROUP BY Clause</H1>Description</P>
Combines records with identical values in the specified field list into a single record. A summary value is created for each record if you include an <SPAN CLASS="jump">SQL aggregate function</SPAN>, such as <SPAN CLASS="eln">Sum</SPAN> or <SPAN CLASS="eln">Count</SPAN>, in the <SPAN CLASS="jump">SELECT</SPAN> statement.</P>
Syntax</P>
SELECT <SPAN CLASS="p">fieldlist</SPAN><BR>FROM <SPAN CLASS="p">table</SPAN><BR>WHERE <SPAN CLASS="p">criteria</SPAN><BR>[GROUP BY <SPAN CLASS="p">groupfieldlist</SPAN><SPAN CLASS="p">]</SPAN></P>
A SELECT statement containing a GROUP BY clause has these parts:</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="76pt" VALIGN="TOP"><COL WIDTH="284pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">fieldlist</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The name of the field or fields to be retrieved along with any field-name <SPAN CLASS="pop">aliases</SPAN>, SQL aggregate functions, selection predicates (<SPAN CLASS="jump">ALL, DISTINCT, DISTINCTROW, or TOP</SPAN>), or other SELECT statement options.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">table</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The name of the table from which records are retrieved. For more information, see the <SPAN CLASS="jump">FROM</SPAN> clause.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">criteria</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Selection criteria. If the statement includes a <SPAN CLASS="jump">WHERE</SPAN> clause, the <SPAN CLASS="pop">Microsoft Jet database engine</SPAN> groups values after applying the WHERE conditions to the records.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">groupfieldlist</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The names of up to 10 fields used to group records. The order of the field names in <SPAN CLASS="p">groupfieldlist</SPAN> determines the grouping levels from the highest to the lowest level of grouping.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
GROUP BY is optional.</P>
Summary values are omitted if there is no SQL aggregate function in the SELECT statement.</P>
<SPAN CLASS="eln">Null</SPAN> values in GROUP BY fields are grouped and aren't omitted. However, <SPAN CLASS="eln">Null</SPAN> values aren't evaluated in any SQL aggregate function.</P>
Use the WHERE clause to exclude rows you don't want grouped, and use the <SPAN CLASS="jump">HAVING</SPAN> clause to filter records after they've been grouped.</P>
Unless it contains <SPAN CLASS="pop">Memo</SPAN> or <SPAN CLASS="pop">OLE Object</SPAN> data, a field in the GROUP BY field list can&nbsp;refer to any field in any table listed in the FROM clause, even if the field isn't included in the SELECT statement, provided the SELECT statement includes at least one SQL aggregate function. The Microsoft Jet database engine can't group on Memo or OLE Object fields.</P>
All fields in the SELECT field list must either be included in the GROUP BY clause or be included as arguments to an SQL aggregate function.</P>
See Also</P>
ALL, DISTINCT, DISTINCTROW, TOP predicates, FROM clause, HAVING clause, ORDER BY clause, SELECT statement, SELECT...INTO statement, WHERE clause.</P>
Specifics (Microsoft Access)</P>
Including a GROUP BY clause in an <SPAN CLASS="pop">SQL</SPAN> statement is equivalent to creating a <SPAN CLASS="pop">totals query</SPAN> in the <SPAN CLASS="pop">Query window</SPAN> and setting the <SPAN CLASS="eln">Total</SPAN> cell to Group By for the appropriate field.</P>
Example</P>
This example creates a list of unique job titles and the number of employees with each&nbsp;title.</P>
This example calls the EnumFields procedure, which you can find in the SELECT statement example.</P>

<pre><code>Sub GroupByX1()

    Dim dbs As Database, rst As Recordset

    ' Modify this line to include the path to Northwind
    ' on your computer.
    Set dbs = OpenDatabase("Northwind.mdb")

    ' For each title, count the number of employees 
    ' with that title. 
    Set rst = dbs.OpenRecordset("SELECT Title, " _
        &amp; "Count([Title]) AS Tally " _
        &amp; "FROM Employees GROUP BY Title;")
    
    ' Populate the Recordset.
    rst.MoveLast
    
    ' Call EnumFields to print the contents of the 
    ' Recordset. Pass the Recordset object and desired
    ' field width.
    EnumFields rst, 25

    dbs.Close

End Sub</code></pre>
For each unique job title, this example calculates the number of employees in Washington who have that title.</P>

<pre><code>Sub GroupByX2()

    Dim dbs As Database, rst As Recordset

    ' Modify this line to include the path to Northwind
    ' on your computer.
    Set dbs = OpenDatabase("Northwind.mdb")

    ' For each title, count the number of employees 
    ' with that title. Only include employees in the 
    ' Washington region.
    Set rst = dbs.OpenRecordset("SELECT Title, " _
        &amp; "Count(Title) AS Tally " _
        &amp; "FROM Employees WHERE Region = 'WA' " _
        &amp; "GROUP BY Title;")

    ' Populate the Recordset.
    rst.MoveLast

    ' Call EnumFields to print the contents of the 
    ' Recordset. Pass the Recordset object and desired
    ' field width.
    EnumFields rst, 25

    dbs.Close

End Sub</code></pre>
Example (Microsoft Access)</P>
To try the following examples in Microsoft Access, first create a new query in the Northwind sample database. Close the <SPAN CLASS="eln">Show Table</SPAN> dialog box without specifying a table or query. Switch to SQL view, paste an individual example into the SQL window, and run the query.</P>
The following example finds the average of the unit price for all products from each supplier and groups the list of prices by supplier:</P>

<pre><code>SELECT SupplierID, Avg(UnitPrice) AS AvgOfUnitPrice
FROM Products GROUP BY SupplierID;</code></pre>
The next example finds the maximum unit price for a product in each category:</P>

<pre><code>SELECT CategoryID, Max(UnitPrice) AS MaxOfUnitPrice
FROM Products GROUP BY CategoryID;</code></pre>
The following example counts the number of orders attributed to each employee in the database:</P>

<pre><code>SELECT EmployeeID, Count(OrderID) AS CountOfOrderID
FROM Orders GROUP BY EmployeeID;</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
