<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Change Event</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>Change Event</H2>Applies To</P>
Combo Box control, Tab control, Text Box control.</P>
Description</P>
The Change event occurs when the contents of a <SPAN CLASS="pop">text box</SPAN> or the text portion of a <SPAN CLASS="pop">combo box</SPAN> changes. It also occurs when you move from one page to another page in a <SPAN CLASS="pop">tab control</SPAN>. Examples of this event include entering a character directly in the text box or combo box or changing the control's Text property setting by using a <SPAN CLASS="pop">macro</SPAN> or Visual&nbsp;Basic.</P>
<SPAN CLASS="nh">Notes</SPAN></P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">Setting the value of a <SPAN CLASS="pop">control</SPAN> by using a macro or Visual&nbsp;Basic doesn't trigger this event for the control. You must type the data directly into the control, or set the control's <SPAN CLASS="eln">Text</SPAN> property.</LI><LI CLASS="ULI1">This event applies only to controls on a <SPAN CLASS="pop">form</SPAN>, not controls on a <SPAN CLASS="pop">report</SPAN>.</LI></UL></SPAN>Remarks</P>
To run a macro or <SPAN CLASS="pop">event procedure</SPAN> when this event occurs, set the OnChange property to the name of the macro or to [Event Procedure].</P>
By running a macro or event procedure when a Change event occurs, you can coordinate data display among controls. You can also display data or a formula in one control and the results in another control.</P>
The Change event doesn't occur when a value changes in a calculated control or when you select an item from the combo box list.</P>
<SPAN CLASS="nh">Note</SPAN>   A Change event can cause a <SPAN CLASS="pop">cascading event</SPAN>. This occurs when a macro or event procedure that runs in response to the control's Change event alters the control's contents — for example, by changing a property setting that determines the control's value, such as the <SPAN CLASS="eln">Text</SPAN> property for a text box. To prevent a cascading event:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">If possible, avoid attaching a Change macro or event procedure to a control that alters the control's contents.</LI><LI CLASS="ULI1">Avoid creating two or more controls having Change events that affect each other — for example, two text boxes that update each other.
</LI></UL></SPAN>Changing the data in a text box or combo box by using the keyboard causes <SPAN CLASS="jump">keyboard events</SPAN> to occur in addition to control events like the Change event. For example, if you move to a new record and type an <SPAN CLASS="pop">ANSI</SPAN> character in a text box in the record, the following events occur in this order:</P>
    KeyDown <img src="rarrow.gif"> KeyPress <img src="rarrow.gif"> BeforeInsert <img src="rarrow.gif"> Change <img src="rarrow.gif"> KeyUp</P>
The <SPAN CLASS="jump">BeforeUpdate and AfterUpdate</SPAN> events for the text box or combo box control occur after you have entered the new or changed data in the control and moved to another control (or clicked <SPAN CLASS="eln">Save Record</SPAN> on the <SPAN CLASS="eln">Records</SPAN> menu), and therefore after all of the Change events for the control.</P>
In combo boxes for which the LimitToList property is set to Yes, the <SPAN CLASS="jump">NotInList</SPAN> event occurs after you enter a value that isn't in the list and attempt to move to another control or save the record. It occurs after all the Change events for the combo box. In this case, the BeforeUpdate and AfterUpdate events for the combo box don't occur, because Microsoft Access doesn't accept a value that is not in the list.</P>
See Also</P>
BeforeUpdate, AfterUpdate events, Enter, Exit events, Event properties, GotFocus, LostFocus events, KeyDown, KeyUp events, KeyPress event, NotInList event, Open, Close events, <SPAN CLASS="eln">Text</SPAN> property.</P>
<HR CLASS="rr"></FONT></BODY>
</HTML>
