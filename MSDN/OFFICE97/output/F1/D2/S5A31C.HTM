<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Between...And Operator</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>Between...And Operator</H2>Description</P>
Determines whether the value of an expression falls within a specified range of values. You can use this operator within <SPAN CLASS="pop">SQL statements</SPAN>.</P>
Syntax</P>
<SPAN CLASS="p">expr</SPAN> [<SPAN CLASS="eln">Not</SPAN>] <SPAN CLASS="eln">Between</SPAN> <SPAN CLASS="p">value1</SPAN> <SPAN CLASS="eln">And</SPAN> <SPAN CLASS="p">value2</SPAN></P>
The <SPAN CLASS="eln">Between...And</SPAN> operator syntax has these parts</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="76pt" VALIGN="TOP"><COL WIDTH="284pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">expr</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Expression identifying the field that contains the data you want to evaluate.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">value1</SPAN>, <SPAN CLASS="p">value2</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Expressions against which you want to evaluate <SPAN CLASS="p">expr</SPAN>.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
If the value of <SPAN CLASS="p">expr</SPAN> is between <SPAN CLASS="p">value1</SPAN> and <SPAN CLASS="p">value2</SPAN> (inclusive), the <SPAN CLASS="eln">Between...And</SPAN> operator returns <SPAN CLASS="eln">True</SPAN>; otherwise, it returns <SPAN CLASS="eln">False</SPAN>. You can include the <SPAN CLASS="eln">Not</SPAN> logical operator to evaluate the opposite condition (that is, whether <SPAN CLASS="p">expr</SPAN> lies outside the range defined by <SPAN CLASS="p">value1</SPAN> and <SPAN CLASS="p">value2</SPAN>).</P>
You might use <SPAN CLASS="eln">Between...And</SPAN> to determine whether the value of a field falls within a specified numeric range. The following example determines whether an order was shipped to a location within a range of postal codes. If the postal code is between 98101 and 98199, the <SPAN CLASS="eln">IIf</SPAN> function returns "Local". Otherwise, it returns "Nonlocal".</P>

<pre><code>SELECT IIf(PostalCode Between 98101 And 98199, "Local", "Nonlocal")
FROM Publishers</code></pre>
If <SPAN CLASS="p">expr</SPAN>, <SPAN CLASS="p">value1</SPAN>, or <SPAN CLASS="p">value2</SPAN> is <SPAN CLASS="eln">Null</SPAN>, <SPAN CLASS="eln">Between...And</SPAN> returns a <SPAN CLASS="eln">Null</SPAN><SPAN CLASS="eln"> value</SPAN>.</P>
Because <SPAN CLASS="pop">wildcard characters</SPAN>, such as *, are treated as literals, you cannot use them with the <SPAN CLASS="eln">Between...And</SPAN> operator. For example, you cannot use 980* and 989* to find all postal codes that start with 980 to 989. Instead, you have two alternatives for accomplishing this. You can add an expression to the query that takes the left three characters of the text field and use <SPAN CLASS="eln">Between...And</SPAN> on those characters. Or you can pad the high and low values with extra characters — in this case, 98000 to 98999, or 98000 to 98999 9999 if using extended postal codes. (You must omit the – 0000 from the low values because otherwise 98000 is dropped if some postal codes have extended sections and others do not.)</P>
See Also</P>
IN clause, SQL Expressions, WHERE clause.</P>
Specifics (Microsoft Access)</P>
In Microsoft Access, you can use the <SPAN CLASS="op">Between...And</SPAN> operator in a query expression or in a <SPAN CLASS="pop">calculated control</SPAN> on a form or report.</P>
You can use the <SPAN CLASS="op">Between...And</SPAN> operator in the <SPAN CLASS="eln">Criteria</SPAN> row in the <SPAN CLASS="pop">query design grid</SPAN> to create a <SPAN CLASS="pop">parameter query</SPAN>. The <SPAN CLASS="op">Between...And</SPAN> operator enables you to prompt the user to enter a range of values by which the query is restricted. The expression supplied for the <SPAN CLASS="p">value1</SPAN> argument serves as the prompt for the beginning of the range, and the expression supplied for the <SPAN CLASS="p">value2</SPAN> argument serves as the prompt for the end of the range.</P>
For example, suppose you have an Orders table that has an OrderDate field. Create a new query in the query design grid and drag the OrderDate field to the first <SPAN CLASS="eln">Field</SPAN> cell in the grid. In the <SPAN CLASS="eln">Criteria</SPAN> cell, enter the following statement:</P>

<pre><code>Between [Enter beginning date:] And [Enter ending date:]</code></pre>
When you run the query, you will first be prompted with a dialog box that says "Enter beginning date:". Once you enter a value in that dialog and click OK, you will be prompted by a second dialog box that says "Enter ending date:". Assuming you enter valid dates, your results will include all the values in the OrderDate field that either match or fall between the dates you specified as parameters.</P>
You can also use the <SPAN CLASS="op">Between...And</SPAN> operator in a calculated control to determine whether the value of the control falls within a specified numeric range. The following example determines whether an order was shipped to a location within a range of postal codes. If the&nbsp;ShipPostalCode field is between 98101 and 98199, the <SPAN CLASS="eln">IIf</SPAN> function returns "Local". Otherwise, it returns "Nonlocal".</P>

<pre><code>= IIf([ShipPostalCode] Between "98101" And "98199", "Local", "Nonlocal")</code></pre>
If any of the arguments supplied for the <SPAN CLASS="op">Between...And</SPAN> operator expression is Null, the <SPAN CLASS="op">Between...And</SPAN> operator returns a <SPAN CLASS="eln">Null</SPAN>.</P>
Example</P>
This example lists the name and contact of every customer who placed an order in the second quarter of 1995.</P>
This example calls the EnumFields procedure, which you can find in the SELECT statement example.</P>

<pre><code>Sub SubQueryX()

    Dim dbs As Database, rst As Recordset

    ' Modify this line to include the path to Northwind
    ' on your computer.
    Set dbs = OpenDatabase("Northwind.mdb")
    
    ' List the name and contact of every customer
    ' who placed an order in the second quarter of
    ' 1995.
    Set rst = dbs.OpenRecordset("SELECT ContactName," _
        &amp; " CompanyName, ContactTitle, Phone" _
        &amp; " FROM Customers" _
        &amp; " WHERE CustomerID" _
        &amp; " IN (SELECT CustomerID FROM Orders" _
        &amp; " WHERE OrderDate Between #04/1/95#" _
        &amp; " And #07/1/95#);")
    ' Populate the Recordset.
    rst.MoveLast
    
    ' Call EnumFields to print the contents of the
    ' Recordset. Pass the Recordset object and desired
    ' field width.
    EnumFields rst, 25

    dbs.Close

End Sub</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
