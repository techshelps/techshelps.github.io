<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CreateWorkspace Method</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->
<H1>CreateWorkspace Method</H1>Applies To</P>
<SPAN CLASS="eln">DBEngine</SPAN> object.</P>
Description</P>
Creates a new Workspace object.</P>
Syntax</P>
<SPAN CLASS="eln">Set</SPAN> <SPAN CLASS="p">workspace</SPAN><SPAN CLASS="l"> = </SPAN><SPAN CLASS="eln">CreateWorkspace(</SPAN><SPAN CLASS="p">name</SPAN><SPAN CLASS="l">,</SPAN> <SPAN CLASS="p">user</SPAN><SPAN CLASS="l">,</SPAN> <SPAN CLASS="p">password</SPAN><SPAN CLASS="l">,</SPAN><SPAN CLASS="p"> </SPAN><SPAN CLASS="p">type</SPAN><SPAN CLASS="eln">)</SPAN></P>
The <SPAN CLASS="eln">CreateWorkspace</SPAN> method syntax has these parts.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="71pt" VALIGN="TOP"><COL WIDTH="289pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">workspace</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">An <SPAN CLASS="pop">object variable</SPAN> that represents the <SPAN CLASS="eln">Workspace</SPAN> object you want to create.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">name</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">A String that uniquely names the new <SPAN CLASS="eln">Workspace</SPAN> object. See the Name property for details on valid <SPAN CLASS="eln">Workspace</SPAN> names.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">user</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">A <SPAN CLASS="eln">String</SPAN> that identifies the owner of the new <SPAN CLASS="eln">Workspace</SPAN> object. See the UserName property for more information.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">password</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">A <SPAN CLASS="eln">String</SPAN> containing the password for the new <SPAN CLASS="eln">Workspace</SPAN> object. The password can be up to 14 characters long and can include any characters except <SPAN CLASS="pop">ASCII</SPAN> character 0 (null). See the Password property for more information on valid passwords.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">type</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. A constant that indicates the type of workspace, as described in&nbsp;Settings.</P></TD></TR></TBODY></TABLE>
<BR></P>Settings</P>
You can use the following constants for <SPAN CLASS="p">type</SPAN>.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="71pt" VALIGN="TOP"><COL WIDTH="289pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Constant</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"> </P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">dbUseJet</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Creates a <SPAN CLASS="pop">Microsoft Jet workspace</SPAN>.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="eln">dbUseODBC</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Creates an <SPAN CLASS="pop">ODBCDirect workspace</SPAN>.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
Once you use the <SPAN CLASS="eln">CreateWorkspace</SPAN> method to create a new <SPAN CLASS="eln">Workspace</SPAN> object, a <SPAN CLASS="eln">Workspace</SPAN> <SPAN CLASS="pop">session</SPAN> is started, and you can refer to the <SPAN CLASS="eln">Workspace</SPAN> object in your application.</P>
<SPAN CLASS="eln">Workspace</SPAN> objects aren't permanent, and you can't save them to disk. Once you create a <SPAN CLASS="eln">Workspace</SPAN> object, you can't alter any of its property settings, except for the <SPAN CLASS="eln">Name</SPAN> property, which you can modify before appending the <SPAN CLASS="eln">Workspace</SPAN> object to the Workspaces collection.</P>
You don't have to append the new <SPAN CLASS="eln">Workspace</SPAN> object to a collection before you can use it. You append a newly created <SPAN CLASS="eln">Workspace</SPAN> object only if you need to refer to it through the <SPAN CLASS="eln">Workspaces</SPAN> collection.</P>
The<I> type</I> option determines whether the new <B>Workspace</B> is a Microsoft Jet or ODBCDirect workspace. If you set <SPAN CLASS="p">type</SPAN> to <B>dbUseODBC</B> and you haven't already created any Microsoft Jet workspaces, then the Microsoft Jet database engine will not be loaded into memory, and all activity will occur with the ODBC data source subsequently identified in a Connection object. If you omit <SPAN CLASS="p">type</SPAN>, the DefaultType property of DBEngine will determine which type of data source the <B>Workspace</B> is connected to. You can have both Microsoft Jet and ODBCDirect workspaces open at the same time.</P>
To remove a <SPAN CLASS="eln">Workspace</SPAN> object from the <SPAN CLASS="eln">Workspaces</SPAN> collection, close all open databases and connections and then use the <SPAN CLASS="eln">Close</SPAN> method on the <SPAN CLASS="eln">Workspace</SPAN> object.</P>
See Also</P>
<SPAN CLASS="eln">Close</SPAN> method, <SPAN CLASS="eln">Name</SPAN> property, <SPAN CLASS="eln">Password</SPAN> property, <SPAN CLASS="eln">UserName</SPAN> property, <SPAN CLASS="eln">Workspace</SPAN> object.</P>
Example</P>
This example uses the <SPAN CLASS="eln">CreateWorkspace</SPAN> method to create both a <SPAN CLASS="pop">Microsoft Jet workspace</SPAN> and an <SPAN CLASS="pop">ODBCDirect workspace</SPAN>. It then lists the properties of both types of workspace.</P>

<pre><code>Sub CreateWorkspaceX()

    Dim wrkODBC As Workspace
    Dim wrkJet As Workspace
    Dim wrkLoop As Workspace
    Dim prpLoop As Property

    ' Create an ODBCDirect workspace. Until you create
    ' Microsoft Jet workspace, the Microsoft Jet database
    ' engine will not be loaded into memory.
    Set wrkODBC = CreateWorkspace("ODBCWorkspace", "admin", _
        "", dbUseODBC)
    Workspaces.Append wrkODBC

    DefaultType = dbUseJet
    ' Create an unnamed Workspace object of the type
    ' specified by the DefaultType property of DBEngine
    ' (dbUseJet).
    Set wrkJet = CreateWorkspace("", "admin", "")

    ' Enumerate Workspaces collection.
    Debug.Print "Workspace objects in Workspaces collection:"
    For Each wrkLoop In Workspaces
        Debug.Print "    " &amp; wrkLoop.Name
    Next wrkLoop

    With wrkODBC
        ' Enumerate Properties collection of ODBCDirect
        ' workspace.
        Debug.Print "Properties of " &amp; .Name
        On Error Resume Next
        For Each prpLoop In .Properties
            Debug.Print "    " &amp; prpLoop.Name &amp; " = " &amp; prpLoop
        Next prpLoop
        On Error GoTo 0
    End With

    With wrkJet
        ' Enumerate Properties collection of Microsoft Jet
        ' workspace.
        Debug.Print _
            "Properties of unnamed Microsoft Jet workspace"
        On Error Resume Next
        For Each prpLoop In .Properties
            Debug.Print "    " &amp; prpLoop.Name &amp; " = " &amp; prpLoop
        Next prpLoop
        On Error GoTo 0
    End With

    wrkODBC.Close
    wrkJet.Close

End Sub</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
