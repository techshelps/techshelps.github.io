<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Database Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Database Property</H1>Applies To</P>
<SPAN CLASS="eln">Connection</SPAN> object.</P>
Description</P>
Returns the <SPAN CLASS="lee">Database</SPAN> object that corresponds to this connection (<SPAN CLASS="pop">ODBCDirect workspaces</SPAN> only).</P>
Return Values</P>
The return value is an <SPAN CLASS="pop">object variable</SPAN> that represents a <SPAN CLASS="lee">Database</SPAN> object.</P>
Remarks</P>
On a <SPAN CLASS="lee">Connection</SPAN> object, use the <SPAN CLASS="lee">Database</SPAN> property to obtain a reference to a <SPAN CLASS="lee">Database</SPAN> object that corresponds to the <SPAN CLASS="lee">Connection</SPAN>. In DAO, a <SPAN CLASS="lee">Connection</SPAN> object and its corresponding <SPAN CLASS="lee">Database</SPAN> object are simply two different object variable references to the same object. The <SPAN CLASS="lee">Database</SPAN> property of a <SPAN CLASS="lee">Connection</SPAN> object and the <SPAN CLASS="lee">Connection</SPAN> property of a <SPAN CLASS="lee">Database</SPAN> object make it easier to change connections to an ODBC data<SPAN CLASS="pop"> source</SPAN> through the <SPAN CLASS="pop">Microsoft Jet database engine</SPAN> to use <SPAN CLASS="pop">ODBCDirect</SPAN>.</P>
See Also</P>
<SPAN CLASS="eln">Connection</SPAN> property.</P>
Example</P>
This example uses the <SPAN CLASS="eln">Database</SPAN> property to show how code that used to access ODBC data through the <SPAN CLASS="pop">Microsoft Jet database engine</SPAN> can be converted to use ODBCDirect <SPAN CLASS="eln">Connection</SPAN> objects.</P>
The OldDatabaseCode procedure uses a <SPAN CLASS="pop">Microsoft Jet-connected data source</SPAN> to access an ODBC database.</P>

<pre><code>Sub OldDatabaseCode()
<B></B>
    Dim wrkMain As Workspace
<B>    </B>Dim dbsPubs As Database
<B>    </B>Dim prpLoop As Property
<B></B>
    ' Create Microsoft Jet Workspace object.
<B>    </B>Set wrkMain = CreateWorkspace("", "admin", "", dbUseJet)
<B></B>
    ' Open a Database object based on information in
<B>    </B>' the connect string.
<B>    </B>Set dbsPubs = wrkMain.OpenDatabase("Publishers", _
<B>        </B>dbDriverNoPrompt, False, _
<B>        </B>"ODBC;DATABASE=pubs;UID=sa;PWD=;DSN=Publishers")
<B></B>
    ' Enumerate the Properties collection of the Database
    ' object.
<B>    </B>With dbsPubs
<B>        </B>Debug.Print "Database properties for " &amp; _
<B>            </B>.Name &amp; ":"
<B></B>
        On Error Resume Next
<B>        </B>For Each prpLoop In .Properties
<B>            </B>If prpLoop.Name = "Connection" Then
<B>                </B>' Property actually returns a Connection object.
<B>                </B>Debug.Print "    Connection[.Name] = " &amp; _
<B>                    </B>.Connection.Name
<B>            </B>Else
<B>                </B>Debug.Print "    " &amp; prpLoop.Name &amp; " = " &amp; prpLoop
<B>            </B>End If
<B>        </B>Next prpLoop
<B>        </B>On Error GoTo 0
<B></B>
    End With
<B></B>
    dbsPubs.Close
<B>    </B>wrkMain.Close

End Sub</code></pre>
The NewDatabaseCode example opens a <SPAN CLASS="eln">Connection</SPAN> object in an <SPAN CLASS="pop">ODBCDirect workspace</SPAN>. It then assigns the <SPAN CLASS="eln">Database</SPAN> property of the <SPAN CLASS="eln">Connection</SPAN> object to an <SPAN CLASS="pop">object variable</SPAN> with the same name as the data source in the old procedure. None of the subsequent code has to be changed as long as it doesn't use any features specific to <SPAN CLASS="pop">Microsoft Jet workspaces</SPAN>.</P>

<pre><code>Sub NewDatabaseCode()
<B></B>
    Dim wrkMain As Workspace
<B>    </B>Dim conPubs As Connection
<B>    </B>Dim dbsPubs As Database
<B>    </B>Dim prpLoop As Property
<B></B>
    ' Create ODBCDirect Workspace object instead of Microsoft
    ' Jet Workspace object.
<B>    </B>Set wrkMain = CreateWorkspace("", "admin", "", dbUseODBC)
<B></B>
    ' Open Connection object based on information in
<B>    </B>' the connect string.
<B>    </B>Set conPubs = wrkMain.OpenConnection("Publishers", _
<B>        </B>dbDriverNoPrompt, False, _
<B>        </B>"ODBC;DATABASE=pubs;UID=sa;PWD=;DSN=Publishers")
<B>    </B>' Assign the Database property to the same object
    ' variable as in the old code.
<B>    </B>Set dbsPubs = conPubs.Database
<B></B>
    ' Enumerate the Properties collection of the Database
    ' object. From this point on, the code is the same as the
    ' old example.
<B>    </B>With dbsPubs
<B>        </B>Debug.Print "Database properties for " &amp; _
<B>            </B>.Name &amp; ":"
<B></B>
        On Error Resume Next
<B>        </B>For Each prpLoop In .Properties
<B>            </B>If prpLoop.Name = "Connection" Then
<B>                </B>' Property actually returns a Connection object.
<B>                </B>Debug.Print "    Connection[.Name] = " &amp; _
<B>                    </B>.Connection.Name
<B>            </B>Else
<B>                </B>Debug.Print "    " &amp; prpLoop.Name &amp; " = " &amp; _
<B>                    </B>prpLoop
<B>            </B>End If
<B>        </B>Next prpLoop
<B>        </B>On Error GoTo 0
<B></B>
    End With
<B></B>
    dbsPubs.Close
<B>    </B>wrkMain.Close

End Sub</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
