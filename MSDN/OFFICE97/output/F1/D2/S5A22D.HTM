<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>StringFromGUID Function</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>StringFromGUID Function</H2>Description</P>
The <SPAN CLASS="eln">StringFromGUID</SPAN> function converts a <SPAN CLASS="pop">GUID</SPAN>, which is an <SPAN CLASS="pop">array</SPAN> of type Byte, to a <SPAN CLASS="pop">string</SPAN>.</P>
Syntax</P>
<SPAN CLASS="l">StringFromGUID(</SPAN><SPAN CLASS="p">guid</SPAN><SPAN CLASS="l">)</SPAN></P>
The <SPAN CLASS="eln">StringFromGUID</SPAN> function has the following argument.</P>

<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="90pt" VALIGN="TOP"><COL WIDTH="269pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Argument</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">guid</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">An array of <SPAN CLASS="eln">Byte</SPAN> data used to uniquely identify an application, component, or item of data to the operating system.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
The <SPAN CLASS="pop">Microsoft Jet database engine</SPAN> stores GUIDs as arrays of type <SPAN CLASS="eln">Byte</SPAN>. However, Microsoft Access can't return <SPAN CLASS="eln">Byte</SPAN> data from a <SPAN CLASS="pop">control</SPAN> on a <SPAN CLASS="pop">form</SPAN> or <SPAN CLASS="pop">report</SPAN>. In order to return the value of a GUID from a control, you must convert it to a string. To convert a GUID to a string, use the <SPAN CLASS="eln">StringFromGUID</SPAN> function. To convert a string back to a GUID, use the GUIDFromString function.</P>
For example, you may need to refer to a field that contains a GUID when using database replication. To return the value of a control on a form bound to a field that contains a GUID, use the <SPAN CLASS="eln">StringFromGUID</SPAN> function to convert the GUID to a string.</P>
Note that in order to bind a control to the s_GUID field of a replicated table, you must click <SPAN CLASS="eln">Options</SPAN> on the <SPAN CLASS="eln">Tools</SPAN> menu and select the <SPAN CLASS="eln">System Objects</SPAN> check box on the <SPAN CLASS="eln">View</SPAN> tab of the <SPAN CLASS="eln">Options</SPAN> dialog box.</P>
See Also</P>
<SPAN CLASS="eln">GUIDFromString</SPAN> function.</P>
Example</P>
The following example returns the value of the s_GUID control on an Employees form in string form and assigns it to a string variable. The s_GUID control is bound to&nbsp;the s_GUID field, one of the system fields added to each replicated table in a replicated database.</P>

<pre><code>Sub StringValueOfGUID()
    Dim ctl As Control, strGUID As String

    Set ctl = Forms!Employees!s_GUID
    Debug.Print TypeName(ctl.Value)
    strGUID = StringFromGUID(ctl.Value)
    Debug.Print TypeName(strGUID)
End Sub</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
