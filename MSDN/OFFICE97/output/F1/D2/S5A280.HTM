<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CopyQueryDef Method</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>CopyQueryDef Method</H2>Applies To</P>
Dynaset-Type <SPAN CLASS="eln">Recordset</SPAN> object, Forward-Only–Type <SPAN CLASS="eln">Recordset</SPAN> object, <SPAN CLASS="eln">Recordset</SPAN> object, Snapshot-Type <SPAN CLASS="eln">Recordset</SPAN> object.</P>
Description</P>
Returns a QueryDef object that is a copy of the <SPAN CLASS="eln">QueryDef</SPAN> used to create the Recordset object represented by the <SPAN CLASS="p">recordset</SPAN> placeholder (<SPAN CLASS="pop">Microsoft&nbsp;Jet workspaces</SPAN>&nbsp;only).</P>
Syntax</P>
<SPAN CLASS="eln">Set</SPAN><SPAN CLASS="crbt"> querydef</SPAN><SPAN CLASS="l"> = </SPAN><SPAN CLASS="crbt">recordset</SPAN><SPAN CLASS="crbt">.</SPAN><SPAN CLASS="eln">CopyQueryDef</SPAN></P>
The <SPAN CLASS="eln">CopyQueryDef</SPAN> method syntax has these parts.</P>
</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="90pt" VALIGN="TOP"><COL WIDTH="270pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">querydef</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">An <SPAN CLASS="pop">object variable</SPAN> that represents the copy of a <SPAN CLASS="eln">QueryDef</SPAN> object you want to create. </P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">recordset</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">An object variable that represents the <SPAN CLASS="eln">Recordset</SPAN> object created with the original <SPAN CLASS="eln">QueryDef</SPAN> object.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
You can use the <SPAN CLASS="eln">CopyQueryDef</SPAN> method to create a new <SPAN CLASS="eln">QueryDef</SPAN> that is a duplicate of the <SPAN CLASS="eln">QueryDef</SPAN> used to create the <SPAN CLASS="eln">Recordset</SPAN>.</P>
If a <SPAN CLASS="eln">QueryDef</SPAN> wasn't used to create this <SPAN CLASS="eln">Recordset</SPAN>, an error occurs. You must first open a <SPAN CLASS="eln">Recordset</SPAN> with the <SPAN CLASS="eln">OpenRecordset</SPAN> method before using the <SPAN CLASS="eln">CopyQueryDef</SPAN> method.</P>
This method is useful when you create a <SPAN CLASS="eln">Recordset</SPAN> object from a <SPAN CLASS="eln">QueryDef</SPAN>, and pass the <SPAN CLASS="eln">Recordset</SPAN> to a function, and the function must re-create the SQL equivalent of the query, for example, to modify it in some way.</P>
See Also</P>
<SPAN CLASS="eln">QueryDef</SPAN> object.</P>
Example</P>
This example uses the <SPAN CLASS="eln">CopyQueryDef</SPAN> method to create a copy of a <SPAN CLASS="eln">QueryDef</SPAN> from an existing <SPAN CLASS="eln">Recordset</SPAN> and modifies the copy by adding a clause to the <SPAN CLASS="eln">SQL</SPAN> property. When you create a permanent <SPAN CLASS="eln">QueryDef,</SPAN><SPAN CLASS="eln"> </SPAN>spaces, semicolons, or linefeeds may be added to the <SPAN CLASS="eln">SQL</SPAN> property; these extra characters must be stripped before any new clauses can be attached to the SQL statement.</P>

<pre><code>Function CopyQueryNew(rstTemp As Recordset, _
    strAdd As String) As QueryDef

    Dim strSQL As String
    Dim strRightSQL As String

    Set CopyQueryNew = rstTemp.CopyQueryDef
    With CopyQueryNew
        ' Strip extra characters.
        strSQL = .SQL
        strRightSQL = Right(strSQL, 1)
        Do While strRightSQL = " " Or strRightSQL = ";" Or _
                strRightSQL = Chr(10) Or strRightSQL = vbCr
            strSQL = Left(strSQL, Len(strSQL) - 1)
            strRightSQL = Right(strSQL, 1)
        Loop
        .SQL = strSQL &amp; strAdd
    End With

End Function</code></pre>
This example shows a possible use of CopyQueryNew( ).</P>

<pre><code>Sub CopyQueryDefX()

    Dim dbsNorthwind As Database
    Dim qdfEmployees As QueryDef
    Dim rstEmployees As Recordset
    Dim intCommand As Integer
    Dim strOrderBy As String
    Dim qdfCopy As QueryDef
    Dim rstCopy As Recordset

    Set dbsNorthwind = OpenDatabase("Northwind.mdb")
    Set qdfEmployees = dbsNorthwind.CreateQueryDef( _
        "NewQueryDef", "SELECT FirstName, LastName, " &amp; _
        "BirthDate FROM Employees")
    Set rstEmployees = qdfEmployees.OpenRecordset( _
        dbOpenForwardOnly)

    Do While True
        intCommand = Val(InputBox( _
            "Choose field on which to order a new " &amp; _
            "Recordset:" &amp; vbCr &amp; "1 - FirstName" &amp; vbCr &amp; _
            "2 - LastName" &amp; vbCr &amp; "3 - BirthDate" &amp; vbCr &amp; _
            "[Cancel - exit]"))
        Select Case intCommand
            Case 1
                strOrderBy = " ORDER BY FirstName"
            Case 2
                strOrderBy = " ORDER BY LastName"
            Case 3
                strOrderBy = " ORDER BY BirthDate"
            Case Else
                Exit Do
        End Select
        Set qdfCopy = CopyQueryNew(rstEmployees, strOrderBy)
        Set rstCopy = qdfCopy.OpenRecordset(dbOpenSnapshot, _
            dbForwardOnly)
        With rstCopy
            Do While Not .EOF
                Debug.Print !LastName &amp; ", " &amp; !FirstName &amp; _
                    " - " &amp; !BirthDate
                .MoveNext
            Loop
            .Close
        End With
        Exit Do
    Loop

    rstEmployees.Close
    ' Delete new QueryDef because this is a demonstration.
    dbsNorthwind.QueryDefs.Delete qdfEmployees.Name
    dbsNorthwind.Close

End Sub</code></pre>
Example (Microsoft&nbsp;Access)</P>
The following example uses the <SPAN CLASS="eln">CopyQueryDef</SPAN> method to return a copy of a <SPAN CLASS="eln">QueryDef</SPAN> object representing an Invoices query, and prints the <SPAN CLASS="eln">SQL</SPAN> property of that&nbsp;<SPAN CLASS="eln">QueryDef</SPAN> object.</P>

<pre><code>Sub GetQueryDefCopy()
    Dim dbs As Database, rst As Recordset
    Dim qdfOriginal As QueryDef, qdfCopy As QueryDef

    ' Return reference to current database.
    Set dbs = CurrentDb
    ' Return reference to Invoices query.
    Set qdfOriginal = dbs.QueryDefs!Invoices
    ' Open dynaset-type Recordset object.
    Set rst = qdfOriginal.OpenRecordset
    ' Get copy of original QueryDef object.
    Set qdfCopy = rst.CopyQueryDef
    ' Print value of SQL property for copy.
    Debug.Print qdfCopy.SQL
    rst.Close
    Set dbs = Nothing
End Sub</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
