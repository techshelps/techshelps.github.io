<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>UNION Operation</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>UNION Operation </H1>Description</P>
Creates a <SPAN CLASS="pop">union query</SPAN>, which combines the results of two or more independent queries or tables.</P>
Syntax</P>
[TABLE] <SPAN CLASS="p">query1</SPAN> UNION [ALL] [TABLE] <SPAN CLASS="p">query2</SPAN> [UNION [ALL] [TABLE] <SPAN CLASS="p">queryn</SPAN> [ ... ]]</P>
The UNION operation has these parts:</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="61pt" VALIGN="TOP"><COL WIDTH="299pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">query1-n</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">A <SPAN CLASS="jump">SELECT statement</SPAN>, the name of a stored query, or the name of a stored table preceded by the TABLE keyword.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
You can merge the results of two or more queries, tables, and SELECT statements, in any combination, in a single UNION operation. The following example merges an existing table named New Accounts and a SELECT statement:</P>

<pre><code>TABLE [New Accounts] UNION ALL
SELECT *
FROM Customers
WHERE OrderAmount &gt; 1000;</code></pre>
By default, no duplicate records are returned when you use a UNION operation; however, you can include the <SPAN CLASS="jump">ALL</SPAN> predicate to ensure that all records are returned. This also makes the query run faster.</P>
All queries in a UNION operation must request the same number of fields; however, the fields don't have to be of the same size or <SPAN CLASS="pop">data type</SPAN>.</P>
Use aliases only in the first SELECT statement because they are ignored in any others. In the ORDER BY clause, refer to fields by what they are called in the first SELECT statement.</P>
<SPAN CLASS="nh">Notes</SPAN></P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">You can use a <SPAN CLASS="jump">GROUP BY</SPAN> or <SPAN CLASS="jump">HAVING</SPAN> clause in each <SPAN CLASS="p">query</SPAN> argument to group the returned data.</LI><LI CLASS="ULI1">You can use an <SPAN CLASS="jump">ORDER BY</SPAN> clause at the end of the last <SPAN CLASS="p">query</SPAN> argument to display the returned data in a specified order.
</LI></UL></SPAN>See Also</P>
ALL, DISTINCT, DISTINCTROW, TOP predicates, GROUP BY clause, HAVING clause, INNER JOIN operation, LEFT JOIN, RIGHT JOIN operations, ORDER BY clause, SELECT statement, SQL subqueries, WHERE clause.</P>
Specifics (Microsoft Access)</P>
In Microsoft Access, the arguments for the UNION operation (<SPAN CLASS="p">query1</SPAN>, <SPAN CLASS="p">query2</SPAN>,...<SPAN CLASS="p">queryn</SPAN>) can be a SELECT statement, the name of a stored Microsoft Access query, or the name of a stored Microsoft Access table preceded by the TABLE reserved word.</P>
You can view a union query only in <SPAN CLASS="pop">SQL view</SPAN>, not in the <SPAN CLASS="pop">query design grid</SPAN>.</P>
Example</P>
This example retrieves the names and cities of all suppliers and customers in Brazil.</P>
This example calls the EnumFields procedure, which you can find in the SELECT statement example.</P>

<pre><code>Sub UnionX()

    Dim dbs As Database, rst As Recordset

    ' Modify this line to include the path to Northwind
    ' on your computer.
    Set dbs = OpenDatabase("Northwind.mdb")

    ' Retrieve the names and cities of all suppliers 
    ' and customers in Brazil.
    Set rst = dbs.OpenRecordset("SELECT CompanyName," _
        &amp; " City FROM Suppliers" _
        &amp; " WHERE Country = 'Brazil' UNION" _
        &amp; " SELECT CompanyName, City FROM Customers" _
        &amp; " WHERE Country = 'Brazil';")

    ' Populate the Recordset.
    rst.MoveLast
    
    ' Call EnumFields to print the contents of the 
    ' Recordset. Pass the Recordset object and desired
    ' field width.
    EnumFields rst, 12

    dbs.Close

End Sub</code></pre>
Example (Microsoft Access)</P>
To try the following examples in Microsoft Access, first create a new query in the Northwind sample database. Close the <SPAN CLASS="eln">Show Table</SPAN> dialog box without specifying a table or query. Switch to SQL view, paste an individual example into the SQL window, and run the query.</P>
The following example retrieves the names and cities of all suppliers and customers in&nbsp;Brazil:</P>

<pre><code>SELECT CompanyName, City FROM Suppliers
WHERE Country = 'Brazil'
UNION SELECT CompanyName, City FROM Customers
WHERE Country = 'Brazil';</code></pre>
The next example retrieves the names and cities of all suppliers and customers located in Brazil:</P>

<pre><code>SELECT CompanyName, City, 'Supplier' AS Source
FROM Suppliers
WHERE Country = 'Brazil'
UNION SELECT CompanyName, City, 'Customer'
FROM Customers
WHERE Country = 'Brazil'
ORDER BY City, Source;</code></pre>
The following example retrieves the names and IDs of all suppliers and customers. This union assumes that there are the same number of columns in each table.</P>

<pre><code>TABLE Customers UNION TABLE Suppliers;</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
