<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Min, Max Functions</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Min, Max Functions</H1>Description</P>
Return the minimum or maximum of a set of values contained in a specified field on a&nbsp;query.</P>
Syntax</P>
<SPAN CLASS="eln">Min(</SPAN><SPAN CLASS="p">expr</SPAN><SPAN CLASS="eln">)</SPAN></P>
<SPAN CLASS="eln">Max(</SPAN><SPAN CLASS="p">expr</SPAN><SPAN CLASS="eln">)</SPAN></P>
The <SPAN CLASS="p">expr</SPAN> placeholder represents a <SPAN CLASS="pop">string expression</SPAN> identifying the field that contains the data you want to evaluate or an expression that performs a calculation using the data in that field. Operands in <SPAN CLASS="p">expr</SPAN> can include the name of a table field, a constant, or a function (which can be either intrinsic or user-defined but not one of the other <SPAN CLASS="pop">SQL</SPAN> <SPAN CLASS="pop">aggregate</SPAN> functions).</P>
Remarks</P>
You can use <SPAN CLASS="eln">Min</SPAN> and <SPAN CLASS="eln">Max</SPAN> to determine the smallest and largest values in a field based on the specified aggregation, or grouping. For example, you could use these functions to return the lowest and highest freight cost. If there is no aggregation specified, then the entire table is used.</P>
You can use <SPAN CLASS="eln">Min</SPAN> and <SPAN CLASS="eln">Max</SPAN> in a query expression and in the <SPAN CLASS="eln">SQL</SPAN> property of a <SPAN CLASS="eln">QueryDef</SPAN> object or when creating a <SPAN CLASS="eln">Recordset</SPAN> object based on an SQL query.</P>
See Also</P>
<SPAN CLASS="eln">QueryDef</SPAN> object ("DAO Language Reference"), <SPAN CLASS="eln">SQL</SPAN> property ("DAO Language Reference").</P>
Specifics (Microsoft Access)</P>
In Microsoft Access, you can use the <SPAN CLASS="eln">Min</SPAN> and <SPAN CLASS="eln">Max</SPAN> functions in the <SPAN CLASS="pop">query design grid</SPAN>, in&nbsp;an <SPAN CLASS="pop">SQL</SPAN> statement in <SPAN CLASS="pop">SQL view</SPAN> of the <SPAN CLASS="pop">Query window</SPAN>, or in an SQL statement within Visual Basic code. You can also use the <SPAN CLASS="eln">Min</SPAN> and <SPAN CLASS="eln">Max</SPAN> functions in a <SPAN CLASS="pop">calculated control</SPAN> on&nbsp;a form or report.</P>
The <SPAN CLASS="eln">Min</SPAN> and <SPAN CLASS="eln">Max</SPAN> functions are most useful in <SPAN CLASS="pop">totals queries</SPAN> and <SPAN CLASS="pop">crosstab queries</SPAN>. They function the same way whether you create the query in the query design grid or as an SQL statement in SQL view.</P>
In the query design grid, you can create a new totals query by clicking the <SPAN CLASS="eln">Totals</SPAN> button on the <SPAN CLASS="eln">Query Design</SPAN> <SPAN CLASS="pop">toolbar</SPAN>. The <SPAN CLASS="eln">Total</SPAN> row is then inserted in the grid. You can set the <SPAN CLASS="eln">Total</SPAN> cell beneath a field to the aggregate function to perform on the data in that field.</P>
For example, suppose you have an Orders table that has both a Freight field and a ShipCity field. You can create a query that displays the minimum freight cost for orders sent to each city. Create a new totals query, and drag the ShipCity field to the query design grid. The <SPAN CLASS="eln">Total</SPAN> cell beneath the ShipCity field should be set to Group By. Drag the Freight field to the query design grid, and set the <SPAN CLASS="eln">Total</SPAN> cell beneath it to Min. When you run the query, it will display the minimum freight cost for orders sent to each city.</P>
You can view the SQL statement for this query by switching to SQL view. In this example, Microsoft Access creates the following SQL statement:</P>

<pre><code>SELECT ShipCity, Min(Freight) AS MinOfFreight
FROM Orders GROUP BY ShipCity;</code></pre>
You can also use an SQL statement within Visual Basic code. For example, the following code creates a dynaset-type <SPAN CLASS="eln">Recordset</SPAN> object from the preceding SQL statement:</P>

<pre><code>Sub MinFreight()
    Dim dbs As Database, rst As Recordset, strSQL As String

    Set dbs = CurrentDb
    strSQL = "SELECT ShipCity, Min(Freight) AS MinOfFreight " _
        &amp; "FROM Orders GROUP BY ShipCity;"
    Set rst = dbs.OpenRecordset(strSQL)
    rst.MoveLast
    Debug.Print rst.RecordCount
    Set dbs = Nothing
End Sub</code></pre>
To use the <SPAN CLASS="eln">Min</SPAN> and <SPAN CLASS="eln">Max</SPAN> functions in a calculated control, set the control's <SPAN CLASS="eln">ControlSource</SPAN> property to an expression containing either of these functions. For example, to display the minimum freight cost for a set of orders in a text box, enter the&nbsp;following expression in the <SPAN CLASS="eln">ControlSource</SPAN> property of the text box:</P>

<pre><code>=Min([Freight])</code></pre>
If you use the <SPAN CLASS="eln">Min</SPAN> or <SPAN CLASS="eln">Max</SPAN> function in a calculated control, you can restrict the set of records against which the function is performed by setting the form's <SPAN CLASS="eln">Filter</SPAN> property.</P>
Example</P>
This example uses the Orders table to return the lowest and highest freight charges for orders shipped to the United Kingdom.</P>
This example calls the EnumFields procedure, which you can find in the SELECT statement example.</P>

<pre><code>Sub MinMaxX()

    Dim dbs As Database, rst As Recordset

    ' Modify this line to include the path to Northwind
    ' on your computer.
    Set dbs = OpenDatabase("Northwind.mdb")

    ' Return the lowest and highest freight charges for
    ' orders shipped to the United Kingdom.
    Set rst = dbs.OpenRecordset("SELECT " _
        &amp; "Min(Freight) AS [Low Freight], " _
        &amp; "Max(Freight) AS [High Freight] " _
        &amp; "FROM Orders WHERE ShipCountry = 'UK';")

    ' Populate the Recordset.
    rst.MoveLast

    ' Call EnumFields to print the contents of the
    ' Recordset. Pass the Recordset object and desired
    ' field width.
    EnumFields rst, 12

    dbs.Close

End Sub</code></pre>
Example (Microsoft Access)</P>
The following example assumes that you have an Orders table that contains fields called Freight and ShipCountry. You can use the <SPAN CLASS="eln">Min</SPAN> and <SPAN CLASS="eln">Max</SPAN> functions to return the lowest and highest freight charges for orders shipped to the United Kingdom. Enter the following expressions in SQL view in the Query window:</P>

<pre><code>SELECT Min([Freight]) AS [LowFreight] FROM Orders WHERE [ShipCountry] = 'UK';

SELECT Max([Freight]) AS [HighFreight] FROM Orders WHERE [ShipCountry] = 'UK';</code></pre>
The next example creates a calculated control that displays the lowest freight charge for&nbsp;all records in the same Orders table. Open a new form and set its <SPAN CLASS="eln">RecordSource</SPAN> property to Orders. Enter the following expression in the <SPAN CLASS="eln">ControlSource</SPAN> property of a text box on the form. To apply a condition that limits the search to only some records, such as those for orders shipped to the United Kingdom, set the form's <SPAN CLASS="eln">Filter</SPAN> property.</P>

<pre><code>=Min([Freight])</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
