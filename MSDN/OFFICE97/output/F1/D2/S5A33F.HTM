<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WHERE Clause</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>WHERE Clause</H1>Description</P>
Specifies which records from the tables listed in the <SPAN CLASS="jump">FROM</SPAN> clause are affected by a <SPAN CLASS="jump">SELECT</SPAN>, <SPAN CLASS="jump">UPDATE</SPAN>, or <SPAN CLASS="jump">DELETE</SPAN> statement.</P>
Syntax</P>
SELECT <SPAN CLASS="p">fieldlist</SPAN><BR>FROM <SPAN CLASS="p">tableexpression</SPAN><BR>WHERE <SPAN CLASS="p">criteria</SPAN></P>
A SELECT statement containing a WHERE clause has these parts:</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="76pt" VALIGN="TOP"><COL WIDTH="284pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">fieldlist</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The name of the field or fields to be retrieved along with any field&nbsp;name <SPAN CLASS="pop">aliases</SPAN>, selection predicates (<SPAN CLASS="jump">ALL, DISTINCT, DISTINCTROW, or TOP</SPAN>), or other SELECT statement options.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">tableexpression</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The name of the table or tables from which data is retrieved.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">criteria</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">An <SPAN CLASS="pop">expression</SPAN> that records must satisfy to be included in the query results.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
The <SPAN CLASS="pop">Microsoft Jet database engine</SPAN> selects the records that meet the conditions listed in&nbsp;the WHERE clause. If you don't specify a WHERE clause, your query returns all rows from the table. If you specify more than one table in your query and you haven't included a WHERE clause or a JOIN clause, your query generates a <SPAN CLASS="pop">Cartesian product</SPAN> of the tables.</P>
WHERE is optional, but when included, follows FROM. For example, you can select all employees in the sales department (<SPAN CLASS="cte">WHERE Dept = 'Sales'</SPAN>) or all customers between the ages of 18 and 30 (<SPAN CLASS="cte">WHERE Age Between 18 And 30</SPAN>).</P>
If you don't use a JOIN clause to perform SQL join operations on multiple tables, the resulting <SPAN CLASS="eln">Recordset</SPAN> object won't be updatable.</P>
WHERE is similar to <SPAN CLASS="jump">HAVING</SPAN>. WHERE determines which records are selected. Similarly, once records are grouped with <SPAN CLASS="jump">GROUP BY</SPAN>, HAVING determines which records are displayed.</P>
Use the WHERE clause to eliminate records you don't want grouped by a GROUP BY clause.</P>
Use various expressions to determine which records the SQL statement returns. For example, the following SQL statement selects all employees whose salaries are more than $21,000:</P>

<pre><code>SELECT LastName, Salary
FROM Employees
WHERE Salary &gt; 21000;</code></pre>
A WHERE clause can contain up to 40 expressions linked by logical operators, such as <SPAN CLASS="eln">And</SPAN> and <SPAN CLASS="eln">Or</SPAN>.</P>
When you enter a field name that contains a space or punctuation, surround the name with brackets ([ ]). For example, a customer information table might include information about specific customers :</P>

<pre><code>SELECT [Customer's Favorite Restaurant]</code></pre>
When you specify the <SPAN CLASS="p">criteria</SPAN> argument, <SPAN CLASS="pop">date literals</SPAN> must be in U.S. format, even if you're not using the U.S. version of the Microsoft Jet database engine. For example, May 10, 1996, is written 10/5/96 in the United Kingdom and 5/10/96 in the United States. Be sure to enclose your date literals with the number sign (#) as shown in the following examples.</P>
To find records dated May 10, 1996 in a United Kingdom database, you must use the following SQL statement:</P>

<pre><code>SELECT *
FROM Orders
WHERE ShippedDate = #5/10/96#;</code></pre>
You can also use the <SPAN CLASS="eln">DateValue</SPAN> function which is aware of the international settings established by Microsoft&nbsp;Windows. For example, use this code for the United States:</P>

<pre><code>SELECT *
FROM Orders
WHERE ShippedDate = DateValue('5/10/96');</code></pre>
And use this code for the United Kingdom:</P>

<pre><code>SELECT *
FROM Orders
WHERE ShippedDate = DateValue('10/5/96');</code></pre>
<SPAN CLASS="nh">Note</SPAN>   If the column referenced in the criteria string is of type <SPAN CLASS="pop">GUID</SPAN>, the criteria expression uses a slightly different syntax:</P>
WHERE ReplicaID = {GUID {12345678-90AB-CDEF-1234-567890ABCDEF}}</P>
<SPAN CLASS="eln">Be</SPAN> sure to include the nested braces and hyphens as shown.</P>
See Also</P>
ALL, DISTINCT, DISTINCTROW, TOP predicates, DELETE statement, FROM clause,&nbsp;GROUP BY clause, HAVING clause, IN clause, INNER JOIN operation, LEFT&nbsp;JOIN, RIGHT JOIN operations, ORDER BY clause, SELECT statement, SELECT...INTO statement, UPDATE statement.</P>
Specifics (Microsoft Access)</P>
In Microsoft&nbsp;Access, the conditions that you establish in a WHERE clause in <SPAN CLASS="pop">SQL view</SPAN> are the same as those you might enter in the <SPAN CLASS="eln">Criteria</SPAN> cell in the <SPAN CLASS="pop">query design grid</SPAN>. If you enter criteria in the query design grid, you can change to SQL view to see&nbsp;the WHERE clause.</P>
Conversely, if you enter a WHERE clause in an <SPAN CLASS="pop">SQL</SPAN> statement in SQL view, you can&nbsp;change to <SPAN CLASS="pop">Design view</SPAN> to see the criteria in the query design grid, unless you are creating a <SPAN CLASS="pop">union query</SPAN>. Union queries can only be viewed in SQL view.</P>
Example</P>
The following example assumes the existence of a hypothetical Salary field in an Employees table. Note that this field does not actually exist in the Northwind database Employees table.</P>
This example selects the LastName and FirstName fields of each record in which the last name is King. </P>
This example calls the EnumFields procedure, which you can find in the SELECT statement example.</P>

<pre><code>Sub WhereX()

    Dim dbs As Database, rst As Recordset

    ' Modify this line to include the path to Northwind
    ' on your computer.
    Set dbs = OpenDatabase("Northwind.mdb")

    ' Select records from the Employees table where the
    ' last name is King.
    Set rst = dbs.OpenRecordset("SELECT LastName, " _
        &amp; "FirstName FROM Employees " _
        &amp; "WHERE LastName = 'King';")
    ' Populate the Recordset.
    rst.MoveLast

    ' Call EnumFields to print the contents of the
    ' Recordset.
    EnumFields rst, 12

    dbs.Close

End Sub</code></pre>
Example (Microsoft Access)</P>
To try the following examples in Microsoft Access, first create a new query in the Northwind sample database. Close the <SPAN CLASS="eln">Show Table</SPAN> dialog box without specifying a table or query. Switch to SQL view, paste an individual example into the SQL window, and run the query.</P>
The following example selects the LastName and FirstName fields of each record in which the last name is King:</P>

<pre><code>SELECT LastName, FirstName FROM Employees
WHERE LastName = 'King';</code></pre>
The next example selects the LastName and FirstName fields for employees whose last names begin with the letter S:</P>

<pre><code>SELECT LastName, FirstName FROM Employees
WHERE LastName Like 'S*';</code></pre>
The following example selects products whose unit prices are between $20 and $50, inclusive:</P>

<pre><code>SELECT ProductName, UnitPrice FROM Products
WHERE (UnitPrice &gt;=20.00 And UnitPrice &lt;= 50.00);</code></pre>
The next example selects all products whose names fall in alphabetic order between "Cha" and "Out", inclusive. It doesn't retrieve "Outback Lager" because "Outback Lager" follows "Out" and therefore is outside the specified range.</P>

<pre><code>SELECT ProductName, UnitPrice FROM Products
WHERE ProductName Between 'Cha' And 'Out';</code></pre>
The following example selects orders placed during the first half of 1995:</P>

<pre><code>SELECT OrderID, OrderDate FROM Orders
WHERE OrderDate Between #1-1-95# And #6-30-95#;</code></pre>
The next example selects orders shipped to Idaho, Oregon, or Washington:</P>

<pre><code>SELECT OrderID, ShipRegion FROM Orders
WHERE ShipRegion In ('ID', 'OR', 'WA');</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
