<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OpenForm Action</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>OpenForm Action</H2>Description</P>
You can use the OpenForm action to open a <SPAN CLASS="pop">form</SPAN> in <SPAN CLASS="pop">Form view</SPAN>, form <SPAN CLASS="pop">Design view</SPAN>, <SPAN CLASS="pop">Print Preview</SPAN>, or <SPAN CLASS="pop">Datasheet view</SPAN>. You can select data entry and window modes for the form and restrict the <SPAN CLASS="pop">records</SPAN> that the form displays.</P>
Setting</P>
The OpenForm action has the following arguments.</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="89pt" VALIGN="TOP"><COL WIDTH="270pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Action argument</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Form Name</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The name of the form to open. The <SPAN CLASS="eln">Form Name</SPAN> box in the <SPAN CLASS="eln">Action Arguments</SPAN> section of the <SPAN CLASS="pop">Macro window</SPAN> shows all forms in the current database. This is a required argument.</P>
If you run a macro containing the OpenForm action in a <SPAN CLASS="pop">library database</SPAN>, Microsoft Access looks for the form with this name first in the library database, then in the current database.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">View</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The <SPAN CLASS="pop">view</SPAN> in which the form will open. Click <SPAN CLASS="eln">Form</SPAN>, <SPAN CLASS="eln">Design</SPAN>, <SPAN CLASS="eln">Print Preview</SPAN>, or <SPAN CLASS="eln">Datasheet</SPAN> in the <SPAN CLASS="eln">View</SPAN> box. The default is Form.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="nh">Note</SPAN>   The View argument setting overrides the settings of the form's DefaultView<SPAN CLASS="jump"> and </SPAN>ViewsAllowed properties. For example, if a form's <SPAN CLASS="eln">ViewsAllowed</SPAN> property is set to Datasheet, you can still use the OpenForm action to open the form in Form view.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Filter Name</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">A <SPAN CLASS="pop">filter</SPAN> that restricts or sorts the form's records. You can enter the name of either an existing <SPAN CLASS="pop">query</SPAN> or a filter that was saved as a query. However, the query must include all the fields in the form you are opening or have its OutputAllFields property set to Yes.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Where Condition</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">A valid <SPAN CLASS="pop">SQL WHERE clause</SPAN> (without the word WHERE) or <SPAN CLASS="pop">expression</SPAN> that Microsoft Access uses to select records from the form's underlying table or query. If you select a filter with the Filter Name argument, Microsoft Access applies this WHERE clause to the results of the filter.</P></TD></TR></TBODY></TABLE>
<BR></P><I>(continued)</I></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="89pt" VALIGN="TOP"><COL WIDTH="270pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Action argument</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><I>(continued)<BR></I>Where Condition</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">To open a form and restrict its records to those specified by the value of a control on another form, use the following expression:</P>
<SPAN CLASS="l">[</SPAN><SPAN CLASS="p">fieldname</SPAN><SPAN CLASS="l">] = Forms![</SPAN><SPAN CLASS="p">formname</SPAN><SPAN CLASS="l">]![</SPAN><SPAN CLASS="p">controlname on other form</SPAN><SPAN CLASS="l">]</SPAN></P>
The <SPAN CLASS="p">fieldname</SPAN> argument is the name of a field in the underlying table or query of the form you want to open. The <SPAN CLASS="p">controlname on other form</SPAN> argument is the name of the control on the other form that contains the value you want records in the first form to match.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="nh">Note</SPAN>   The maximum length of the Where Condition argument is 256 characters. If you need to enter a more complex SQL WHERE clause longer than this, use the OpenForm method of the DoCmd object in Visual Basic instead. You can enter SQL WHERE clause statements of up to 32,768 characters in Visual Basic.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Data Mode</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The data entry mode for the form. This applies only to forms opened in Form view or Datasheet view. Click <SPAN CLASS="eln">Add</SPAN> (the user can add new records but can't edit existing records), <SPAN CLASS="eln">Edit</SPAN> (the user can edit existing records and add new records), or <SPAN CLASS="eln">Read Only</SPAN> (the user can only view records). The default is Edit.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="nh">Notes</SPAN></P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">The Data Mode argument setting overrides the settings of the form's AllowEdits, AllowDeletions, AllowAdditions, and DataEntry properties. For example, if a form's <SPAN CLASS="eln">AllowEdits</SPAN> property is set to No, you can still use the OpenForm action to open the form in Edit mode.</LI><LI CLASS="ULI1">If you leave this argument blank, Microsoft Access opens the form in the data entry mode set by the form's <SPAN CLASS="eln">AllowEdits</SPAN>, <SPAN CLASS="eln">AllowDeletions</SPAN>, <SPAN CLASS="eln">AllowAdditions</SPAN>, and <SPAN CLASS="eln">DataEntry</SPAN> properties.
</LI></UL></SPAN></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Window Mode</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The window mode in which the form opens. Click <SPAN CLASS="eln">Normal</SPAN> so the form is in the mode set by its <SPAN CLASS="pop">properties</SPAN>, <SPAN CLASS="eln">Hidden</SPAN> (the form is hidden), <SPAN CLASS="eln">Icon</SPAN> (the form opens minimized as a small title bar at the bottom of the screen), or <SPAN CLASS="eln">Dialog</SPAN> (the form's Modal and PopUp properties are set to Yes). The default is Normal.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
This action is similar to clicking the <SPAN CLASS="eln">Open</SPAN> button or <SPAN CLASS="eln">Design</SPAN> button in the <SPAN CLASS="pop">Database window</SPAN> after selecting a form on the <SPAN CLASS="eln">Forms</SPAN> tab.</P>
A form can be <SPAN CLASS="pop">modal</SPAN> (it must be closed or hidden before the user can perform any other action) or modeless (the user can move to other windows while the form is open). It can also be a <SPAN CLASS="pop">pop-up form</SPAN> (a form used to collect or display information that remains on top of all other Microsoft Access windows). You set the <SPAN CLASS="eln">Modal</SPAN> and <SPAN CLASS="eln">PopUp</SPAN> properties when you design the form. If you use Normal for the Window Mode argument, the form opens in the mode specified by these property settings. If you use Dialog for the Window Mode argument, these properties are both set to Yes. A form opened as hidden or as an icon returns to the mode specified by its property settings when you show or restore it.</P>
When you open a form with the Window Mode argument set to Dialog, Microsoft Access suspends the macro until the form is closed or hidden. You can hide a form by setting its Visible property to No by using the <SPAN CLASS="jump">SetValue</SPAN> action.</P>
<SPAN CLASS="nh">Tip</SPAN>   You can select a form in the Database window and drag it to a macro <SPAN CLASS="pop">action row</SPAN>. This automatically creates an OpenForm action that opens the form in Form view.</P>
Switching to Design view while the form is open removes most of the argument settings for the form, such as the Data Mode and Window Mode argument settings. They aren't in effect even if the user returns to Form view or Datasheet view.</P>
The filter and WHERE condition you apply become the setting of the form's Filter property.</P>
See Also</P>
ApplyFilter action, Close action, Open, Close events, <SPAN CLASS="eln">OpenArgs</SPAN> property, <SPAN CLASS="eln">OpenForm</SPAN> method, SelectObject action, SetValue action, WHERE clause ("SQL Language Reference").</P>
<HR CLASS="rr"></FONT></BODY>
</HTML>
