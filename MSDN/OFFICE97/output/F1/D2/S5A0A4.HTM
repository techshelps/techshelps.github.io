<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DatasheetBackColor, DatasheetForeColor Properties</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>DatasheetBackColor, DatasheetForeColor Properties</H2>Applies To</P>
<SPAN CLASS="eln">Form</SPAN> object, <SPAN CLASS="eln">QueryDef</SPAN> object, <SPAN CLASS="eln">TableDef</SPAN> object.</P>
Description</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">You can use the <SPAN CLASS="eln">DatasheetBackColor</SPAN> property in <SPAN CLASS="jump">Visual Basic</SPAN> to specify or determine the background color of an entire <SPAN CLASS="pop">table</SPAN>, <SPAN CLASS="pop">query</SPAN>, or <SPAN CLASS="pop">form</SPAN> in <SPAN CLASS="pop">Datasheet view</SPAN>.</LI><LI CLASS="ULI1">You can use the <SPAN CLASS="eln">DatasheetForeColor</SPAN> property in Visual Basic to specify or determine the color of all text in a table, query, or form in Datasheet view.
</LI></UL></SPAN>Setting</P>
The <SPAN CLASS="eln">DatasheetBackColor</SPAN> and <SPAN CLASS="eln">DatasheetForeColor</SPAN> properties are a Long Integer value representing the background color and font color setting for a datasheet.</P>
You can also set these properties by clicking the <SPAN CLASS="eln">Fill/BackColor</SPAN> button or the <SPAN CLASS="eln">Font/ForeColor</SPAN> button on the <SPAN CLASS="eln">Formatting (Datasheet)</SPAN> <SPAN CLASS="pop">toolbar</SPAN> and clicking the desired color displayed on the color palette.</P>
You can also set the default <SPAN CLASS="eln">DatasheetBackColor</SPAN> and <SPAN CLASS="eln">DatasheetForeColor</SPAN> properties by using the <SPAN CLASS="eln">Datasheet</SPAN> tab of the <SPAN CLASS="eln">Options</SPAN> dialog box, available by clicking <SPAN CLASS="eln">Options</SPAN> on the <SPAN CLASS="eln">Tools</SPAN> menu.</P>
Remarks</P>
Setting the <SPAN CLASS="eln">DatasheetBackColor</SPAN> or <SPAN CLASS="eln">DatasheetForeColor</SPAN> properties for a table or query won't affect these property settings for a form that uses the table or query as its source of data.</P>
The following list contains the properties that don't exist in the Properties collection for TableDef or QueryDef objects until you add them by using the CreateProperty method or set them by using the <SPAN CLASS="eln">Formatting (Datasheet)</SPAN> toolbar.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="180pt" VALIGN="TOP"><COL WIDTH="180pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="list"><UL><LI CLASS="ULI1"><SPAN CLASS="eln">DatasheetBackColor</SPAN></LI></UL></SPAN></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="list"><UL><LI CLASS="ULI1">DatasheetCellsEffect</LI></UL></SPAN></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="list"><UL><LI CLASS="ULI1">DatasheetFontHeight*</LI></UL></SPAN></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="list"><UL><LI CLASS="ULI1">DatasheetFontItalic*</LI></UL></SPAN></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="list"><UL><LI CLASS="ULI1">DatasheetFontName*</LI></UL></SPAN></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="list"><UL><LI CLASS="ULI1">DatasheetFontUnderline*</LI></UL></SPAN></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="list"><UL><LI CLASS="ULI1">DatasheetFontWeight *</LI></UL></SPAN></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="list"><UL><LI CLASS="ULI1"><SPAN CLASS="eln">DatasheetForeColor</SPAN>*</LI></UL></SPAN></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="list"><UL><LI CLASS="ULI1">DatasheetGridlinesBehavior</LI></UL></SPAN></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="list"><UL><LI CLASS="ULI1">DatasheetGridlinesColor</LI></UL></SPAN></TD></TR></TBODY></TABLE>
<BR></P><SPAN CLASS="nh">Note</SPAN>   When you add or set any property listed with an asterisk, Microsoft Access automatically adds it to the <SPAN CLASS="eln">Properties</SPAN> collection.</P>
See Also</P>
<SPAN CLASS="eln">BackColor</SPAN> property, <SPAN CLASS="eln">DatasheetCellsEffect</SPAN> property, <B>DatasheetFontItalic</B>, <SPAN CLASS="eln">DatasheetFontUnderline</SPAN> properties, <B>DatasheetFontName</B>, <SPAN CLASS="eln">DatasheetFontHeight</SPAN> properties, <SPAN CLASS="eln">DatasheetFontWeight</SPAN> property, <SPAN CLASS="eln">DatasheetGridlinesBehavior</SPAN> property, <SPAN CLASS="eln">DatasheetGridlinesColor</SPAN> property, <SPAN CLASS="eln">ForeColor</SPAN> property.</P>
Example</P>
The following example uses the SetTableProperty procedure to set a table's font color to dark blue and its background color to light gray. If a "Property not found" error occurs when the property is set, the <SPAN CLASS="eln">CreateProperty</SPAN> method is used to add the property to the object's <SPAN CLASS="eln">Properties</SPAN> collection.</P>

<pre><code>Dim dbs As Database, tdfProducts As TableDef
Const lngForeColor As Long = 8388608        ' Dark blue.
Const lngBackColor As Long = 12632256        ' Light gray.

Set dbs = CurrentDb
Set tdfProducts = dbs!Products
SetTableProperty tdfProducts, "DatasheetBackColor", dbLong, lngBackColor
SetTableProperty tdfProducts, "DatasheetForeColor", dbLong, lngForeColor

Sub SetTableProperty(tdfTableObj As TableDef, strPropertyName As String, _
        intPropertyType As Integer, varPropertyValue As Variant)
    Const conErrPropertyNotFound = 3270
    Dim prpProperty As Property
    On Error Resume Next                    ' Don't trap errors.
    tdfTableObj.Properties(strPropertyName) = varPropertyValue
    If Err &lt;&gt; 0 Then                        ' Error occurred when value set.
        If Err &lt;&gt; conErrPropertyNotFound Then
            ' Error is unknown.
            MsgBox "Couldn't set property '" &amp; strPropertyName _
                &amp; "' on table '" &amp; tdfTableObj.Name &amp; "'", vbExclamation, _
                Err.Description
            Err.Clear
        Else
            ' Error is "Property not found", so add it to collection.
            Set prpProperty = tdfTableObj.CreateProperty(strPropertyName, _
                intPropertyType, varPropertyValue)
            tdfTableObj.Properties.Append prpProperty
            Err.Clear
        End If
    End If
    tdfTableObj.Properties.Refresh
End Sub</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
