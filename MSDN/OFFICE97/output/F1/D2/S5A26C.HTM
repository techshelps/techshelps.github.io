<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Bookmark Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>Bookmark Property</H2>Applies To</P>
Dynamic-Type <SPAN CLASS="eln">Recordset</SPAN> object, Dynaset-Type <SPAN CLASS="eln">Recordset</SPAN> object, <SPAN CLASS="eln">Recordset</SPAN> object, Snapshot-Type <SPAN CLASS="eln">Recordset</SPAN> object, Table-Type <SPAN CLASS="eln">Recordset</SPAN> object.</P>
Description</P>
Sets or returns a <SPAN CLASS="pop">bookmark</SPAN> that uniquely identifies the <SPAN CLASS="pop">current record</SPAN> in a Recordset object.</P>
Settings and Return Values</P>
The setting or return value is a <SPAN CLASS="pop">string expression</SPAN> or <SPAN CLASS="pop">variant expression</SPAN> that evaluates to a valid bookmark. The data type is a <SPAN CLASS="eln">Variant</SPAN> array of <SPAN CLASS="eln">Byte</SPAN> data.</P>
Remarks</P>
For a <SPAN CLASS="eln">Recordset</SPAN> object based entirely on <SPAN CLASS="pop">Microsoft Jet</SPAN> tables, the value of the <SPAN CLASS="eln">Bookmarkable</SPAN> property is <SPAN CLASS="eln">True</SPAN>, and you can use the <SPAN CLASS="eln">Bookmark</SPAN> property with that <SPAN CLASS="eln">Recordset</SPAN>. Other database products may not support bookmarks, however. For example, you can't use bookmarks in any <SPAN CLASS="eln">Recordset</SPAN> object based on a linked Paradox table that has no <SPAN CLASS="pop">primary key</SPAN>.</P>
When you create or open a <SPAN CLASS="eln">Recordset</SPAN> object, each of its records already has a unique bookmark. You can save the bookmark for the current record by assigning the value of the <SPAN CLASS="eln">Bookmark</SPAN> property to a variable. To quickly return to that record at any time after moving to a different record, set the <SPAN CLASS="eln">Recordset</SPAN> object's <SPAN CLASS="eln">Bookmark</SPAN> property to the value of that variable.</P>
There is no limit to the number of bookmarks you can establish. To create a bookmark for a record other than the current record, move to the desired record and assign the value of the <SPAN CLASS="eln">Bookmark</SPAN> property to a <SPAN CLASS="eln">String</SPAN> variable that identifies the record.</P>
To make sure the <SPAN CLASS="eln">Recordset</SPAN> object supports bookmarks, check the value of its <SPAN CLASS="eln">Bookmarkable</SPAN> property before you use the <SPAN CLASS="eln">Bookmark</SPAN> property. If the <SPAN CLASS="eln">Bookmarkable</SPAN> property is <SPAN CLASS="eln">False</SPAN>, the <SPAN CLASS="eln">Recordset</SPAN> object doesn't support bookmarks,&nbsp;and using the <SPAN CLASS="eln">Bookmark</SPAN> property results in a trappable error.</P>
If you use the <SPAN CLASS="eln">Clone</SPAN> method to create a copy of a <SPAN CLASS="eln">Recordset</SPAN> object, the <SPAN CLASS="eln">Bookmark</SPAN> property settings for the original and the duplicate <SPAN CLASS="eln">Recordset</SPAN> objects are identical and can be used interchangeably. However, you can't use bookmarks from different <SPAN CLASS="eln">Recordset</SPAN> objects interchangeably, even if they were created by using the same object or the same <SPAN CLASS="pop">SQL statement</SPAN>.</P>
If you set the <SPAN CLASS="eln">Bookmark</SPAN> property to a value that represents a deleted record, a trappable error occurs.</P>
The value of the <SPAN CLASS="eln">Bookmark</SPAN> property isn't the same as a record number.</P>
See Also</P>
<SPAN CLASS="eln">Bookmarkable</SPAN> property, <SPAN CLASS="eln">RecordCount</SPAN> property.</P>
Specifics (Microsoft Access)</P>
When you write Visual&nbsp;Basic code that uses the DAO <SPAN CLASS="eln">Bookmark</SPAN> property, you must&nbsp;include an <SPAN CLASS="eln">Option Compare Binary</SPAN> statement in the <SPAN CLASS="pop">Declarations section</SPAN> of the&nbsp;module. The DAO <SPAN CLASS="eln">Bookmark</SPAN> property sets and returns a bookmark, which is a&nbsp;<SPAN CLASS="eln">Variant</SPAN> array of <SPAN CLASS="eln">Byte</SPAN> data. The <SPAN CLASS="pop">string comparison</SPAN> method for the module must therefore be binary. If a bookmark is evaluated with a text-based string comparison method, such as the <SPAN CLASS="eln">Option Compare Text</SPAN> statement or the default setting for the <SPAN CLASS="eln">Option Compare Database</SPAN> statement, the current record may be set to an incorrect record.</P>
<SPAN CLASS="nh">Note</SPAN>&nbsp;&nbsp;&nbsp;Don't confuse this property with the Microsoft Access <SPAN CLASS="eln">Bookmark</SPAN> property, which applies to a <SPAN CLASS="eln">Form</SPAN> object and stores a bookmark for a particular record in the table or query underlying the form. These two properties don't interfere with each other; you can have separate bookmarks on a form and on a <SPAN CLASS="eln">Recordset</SPAN> object at the same time.</P>
Example</P>
This example uses the <SPAN CLASS="eln">Bookmark</SPAN> and <SPAN CLASS="eln">Bookmarkable</SPAN> properties to let the user flag a record in a <SPAN CLASS="eln">Recordset</SPAN> and return to it later.</P>

<pre><code>Sub BookmarkX()

    Dim dbsNorthwind As Database
    Dim rstCategories As Recordset
    Dim strMessage As String
    Dim intCommand As Integer
    Dim varBookmark As Variant

    Set dbsNorthwind = OpenDatabase("Northwind.mdb")
    Set rstCategories = _
        dbsNorthwind.OpenRecordset("Categories", _
        dbOpenSnapshot)

    With rstCategories

        If .Bookmarkable = False Then
            Debug.Print "Recordset is not Bookmarkable!"
        Else
            ' Populate Recordset.
            .MoveLast
            .MoveFirst

            Do While True
                ' Show information about current record and get
                ' user input.
                strMessage = "Category: " &amp; !CategoryName &amp; _
                    " (record " &amp; (.AbsolutePosition + 1) &amp; _
                    " of " &amp; .RecordCount &amp; ")" &amp; vbCr &amp; _
                    "Enter command:" &amp; vbCr &amp; _
                    "[1 - next / 2 - previous /" &amp; vbCr &amp; _
                    "3 - set bookmark / 4 - go to bookmark]"
                intCommand = Val(InputBox(strMessage))

                Select Case intCommand
                    ' Move forward or backward, trapping for BOF
                    ' or EOF.
                    Case 1
                        .MoveNext
                        If .EOF Then .MoveLast
                    Case 2
                        .MovePrevious
                        If .BOF Then .MoveFirst

                    ' Store the bookmark of the current record.
                    Case 3
                        varBookmark = .Bookmark

                    ' Go to the record indicated by the stored
                    ' bookmark.
                    Case 4
                        If IsEmpty(varBookmark) Then
                            MsgBox "No Bookmark set!"
                        Else
                            .Bookmark = varBookmark
                        End If
                    Case Else
                        Exit Do
                End Select

            Loop

        End If

        .Close
    End With

    dbsNorthwind.Close

End Sub</code></pre>
Example (Microsoft Access)</P>
The following example moves through the records of the Employees table from the beginning of the file to the end and stores the value of the <SPAN CLASS="eln">Bookmark</SPAN> property for each record in an array.</P>

<pre><code>' Include this statement in Declarations section of module.
Option Compare Binary

Sub RecordPositions()
    Dim dbs As Database, rst As Recordset, fld As Field
    Dim intI As Integer
    ' Declare array to hold bookmarks.
    Dim varRecord() As Variant

    ' Return reference to current database.
    Set dbs = CurrentDb
    ' Open table-type Recordset object.
    Set rst = dbs.OpenRecordset("Employees")
    ' Return reference to LastName field.
    Set fld = rst.Fields!LastName
    ' Redimension array with value of RecordCount property as upperbound.
    ReDim varRecord(0 To rst.RecordCount - 1)
    intI = 0
    ' Check Bookmarkable property of Recordset object.
    If rst.Bookmarkable Then
        Do Until rst.EOF
            ' Populate array with bookmarks.
            varRecord(intI) = rst.Bookmark
            ' Increment counter.
            intI = intI + 1
            rst.MoveNext
        Loop
    End If
    rst.Close
    Set dbs = Nothing
End Sub</code></pre>
Example (Microsoft Excel)</P>
This example prompts the user for a two-letter abbreviation for a state. The example uses this value to find up to 101 matching records in the Customer recordset in the Nwindex.mdb database. It then marks each record with a bookmark and copies the values of the first and third fields to Sheet1.</P>
To create the Nwindex.mdb database, run the Microsoft Excel example for the <SPAN CLASS="lee">CreateDatabase</SPAN> method.</P>

<pre><code>Dim Found(100)
i = 0
Set db = Workspaces(0).OpenDatabase(Application.Path &amp; "\NWINDEX.MDB")
Set rs = db.OpenRecordset("Customer")
Sheets("Sheet1").Activate
regionWanted = Application.InputBox("Input state you want data from", _
    "Specify two letters (e.g. 'WA')", Type:=2)
If regionWanted = False Then        ' user cancelled InputBox
    Exit Sub
End If
criteria = "[REGION] = '" &amp; regionWanted &amp; "'"
rs.FindFirst criteria
If rs.NoMatch Or rs.Bookmarkable = False Then
    MsgBox "No records for this state"
    Exit Sub
Else
    Do Until rs.NoMatch = True
        i = i + 1
        Found(i) = rs.Bookmark
        rs.FindNext criteria
    Loop
End If
For n = 1 To i
    rs.Bookmark = Found(n)
    Cells(n + 1, 1).Value = rs.fields(0).Value
    Cells(n + 1, 2).Value = rs.fields(2).Value
Next
MsgBox "There are " &amp; i &amp; " records from this region"
rs.Close
db.Close</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
