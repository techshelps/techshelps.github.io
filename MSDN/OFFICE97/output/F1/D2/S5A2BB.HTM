<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Inherited Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Inherited Property</H1>Applies To</P>
<SPAN CLASS="eln">Property</SPAN> object.</P>
Description</P>
Returns a value that indicates whether a Property object is inherited from an underlying object.</P>
Return Values</P>
The return value is a Boolean data type that is <SPAN CLASS="eln">True</SPAN> if the <SPAN CLASS="eln">Property</SPAN> object is inherited. For built-in <SPAN CLASS="eln">Property</SPAN> objects that represent predefined properties, the only possible return value is <SPAN CLASS="eln">False</SPAN>. This property is always <SPAN CLASS="eln">False</SPAN> in an <SPAN CLASS="pop">ODBCDirect workspace</SPAN>.</P>
Remarks</P>
You can use the <SPAN CLASS="eln">Inherited</SPAN> property to determine whether a user-defined <SPAN CLASS="eln">Property</SPAN> was created for the object it applies to, or whether the <SPAN CLASS="eln">Property</SPAN> was inherited from another object. For example, suppose you create a new <SPAN CLASS="eln">Property</SPAN> for a <SPAN CLASS="eln">QueryDef</SPAN> object and then open a <SPAN CLASS="eln">Recordset</SPAN> object from the <SPAN CLASS="eln">QueryDef</SPAN> object. This new <SPAN CLASS="eln">Property</SPAN> will be part of the <SPAN CLASS="eln">Recordset</SPAN> object's <SPAN CLASS="eln">Properties</SPAN> collection, and its <SPAN CLASS="eln">Inherited</SPAN> property will be set to <SPAN CLASS="eln">True</SPAN> because the property was created for the <SPAN CLASS="eln">QueryDef</SPAN> object, not the <SPAN CLASS="eln">Recordset</SPAN> object.</P>
See Also</P>
<SPAN CLASS="eln">CreateProperty</SPAN> method.</P>
Specifics (Microsoft&nbsp;Access)</P>
Microsoft&nbsp;Access defines a number of properties that apply to <SPAN CLASS="pop">Data Access Objects</SPAN>. Because these properties are defined by Microsoft&nbsp;Access, the <SPAN CLASS="pop">Microsoft&nbsp;Jet database engine</SPAN> doesn't recognize them automatically. To set one of these properties by using Visual&nbsp;Basic, you must first create the property by using the <SPAN CLASS="eln">CreateProperty</SPAN> method and then append it to the <SPAN CLASS="eln">Properties</SPAN> collection of the object. For more information, see the <SPAN CLASS="eln">Property</SPAN> object.</P>
When you create an object based on another object, the derived object inherits the properties of the original object. You can use the <SPAN CLASS="eln">Inherited</SPAN> property to determine whether one of these properties was created for the object it is applied to, or if the property was inherited from another object.</P>
For example, suppose you want to set the Microsoft&nbsp;Access <SPAN CLASS="eln">DatasheetFontName</SPAN> property for a <SPAN CLASS="eln">TableDef</SPAN> object. If you are setting this property for the first time, you will need to create a corresponding <SPAN CLASS="eln">Property</SPAN> object and append it to the <SPAN CLASS="eln">Properties</SPAN> collection of the <SPAN CLASS="eln">TableDef</SPAN> object. The <SPAN CLASS="eln">Inherited</SPAN> property of the new <SPAN CLASS="eln">Property</SPAN> object returns <SPAN CLASS="eln">False</SPAN> (0).</P>
If you then create a new <SPAN CLASS="eln">QueryDef</SPAN> object based on the table corresponding to the <SPAN CLASS="eln">TableDef</SPAN> object, the <SPAN CLASS="eln">DatasheetFontName</SPAN> property will be included in the <SPAN CLASS="eln">Properties</SPAN> collection of the <SPAN CLASS="eln">QueryDef</SPAN> object. The <SPAN CLASS="eln">Inherited</SPAN> property of a <SPAN CLASS="eln">Property</SPAN> object corresponding to this property returns <SPAN CLASS="eln">True</SPAN> (–1).</P>
Example</P>
This example use the <SPAN CLASS="eln">Inherited</SPAN> property to determine if a user-defined <SPAN CLASS="eln">Property</SPAN> object was created for a <SPAN CLASS="eln">Recordset</SPAN> object or for some underlying object.</P>

<pre><code>Sub InheritedX()
<B></B>
    Dim dbsNorthwind As Database
<B>    </B>Dim tdfTest As TableDef
<B>    </B>Dim rstTest As Recordset
<B>    </B>Dim prpNew As Property
<B>    </B>Dim prpLoop As Property
<B></B>
<B>    </B>' Create a new property for a saved TableDef object, then
    ' open a recordset from that TableDef object.
<B>    </B>Set dbsNorthwind = OpenDatabase("Northwind.mdb")
<B>    </B>Set tdfTest = dbsNorthwind.TableDefs(0)
<B>    </B>Set prpNew = tdfTest.CreateProperty("NewProperty", _
        dbBoolean, True)
<B>    </B>tdfTest.Properties.Append prpNew
<B>    </B>Set rstTest = tdfTest.OpenRecordset(dbOpenForwardOnly)
<B></B>
<B>    </B>' Show Name and Inherited property of the new Property
    ' object in the TableDef.
<B>    </B>Debug.Print "NewProperty of " &amp; tdfTest.Name &amp; _
        " TableDef:"
<B>    </B>Debug.Print "    Inherited = " &amp; _
<B>        </B>tdfTest.Properties("NewProperty").Inherited
<B></B>
<B>    </B>' Show Name and Inherited property of the new Property
    ' object in the Recordset.
<B>    </B>Debug.Print "NewProperty of " &amp; rstTest.Name &amp; _
        " Recordset:"
<B>    </B>Debug.Print "    Inherited = " &amp; _
<B>        </B>rstTest.Properties("NewProperty").Inherited
<B></B>
<B>    </B>' Delete new TableDef because this is a demonstration.
<B>    </B>tdfTest.Properties.Delete prpNew.Name
<B>    </B>dbsNorthwind.Close

End Sub</code></pre>
Example (Microsoft&nbsp;Access)</P>
The following example creates a <SPAN CLASS="eln">Property</SPAN> object in the <SPAN CLASS="eln">Properties</SPAN> collection of a <SPAN CLASS="eln">TableDef</SPAN> object, and then creates a new <SPAN CLASS="eln">QueryDef</SPAN> object based on the same table. The <SPAN CLASS="eln">Property</SPAN> object automatically exists in the <SPAN CLASS="eln">Properties</SPAN> collection of the new <SPAN CLASS="eln">QueryDef</SPAN> object. Next, the procedure checks the <SPAN CLASS="eln">Inherited</SPAN> property for the <SPAN CLASS="eln">Property</SPAN> objects in the <SPAN CLASS="eln">Properties</SPAN> collections of both the <SPAN CLASS="eln">TableDef</SPAN> and the <SPAN CLASS="eln">QueryDef</SPAN> objects.</P>
In this example, the Microsoft&nbsp;Access <SPAN CLASS="eln">DatasheetFontItalic</SPAN> property is created and appended to the <SPAN CLASS="eln">Properties</SPAN> collection of the <SPAN CLASS="eln">TableDef</SPAN> object. The <SPAN CLASS="eln">DatasheetFontItalic</SPAN> property is defined by Microsoft&nbsp;Access rather than by the Microsoft&nbsp;Jet database engine.&nbsp;However, the property applies to DAO objects. Therefore, in order to set it from Visual&nbsp;Basic code, you must first create a <SPAN CLASS="eln">Property</SPAN> object corresponding to that property and append it to the <SPAN CLASS="eln">Properties</SPAN> collection of the DAO object. It's necessary to create the property only the first time you set it.</P>

<pre><code>Sub CheckInherited()
    Dim dbs As Database, tdf As TableDef, qdf As QueryDef
    Dim strSQL As String

    ' Return reference to current database.
    Set dbs = CurrentDb
    ' Return reference to Orders table.
    Set tdf = dbs.TableDefs!Orders
    ' Call SetAccessProperty function.
    If SetAccessProperty(tdf, "DatasheetFontItalic", _
            dbBoolean, True) = True Then
        ' Create QueryDef object based on Orders table.
        strSQL = "SELECT * FROM Orders WHERE ShipCountry = 'USA';"
        Set qdf = dbs.CreateQueryDef("USAOrders", strSQL)
        ' Return Property object pointing to property.
        Debug.Print "Value of Inherited, TableDef object:", _
            tdf.Properties!DatasheetFontItalic.Inherited
        Debug.Print "Value of inherited, QueryDef object:", _
            qdf.Properties!DatasheetFontItalic.Inherited
            ExitCheckInherited
    Else
        MsgBox "Property not set successfully."
        ExitCheckInherited
    End If

ExitCheckInherited:
    Set dbs = Nothing
    Exit Sub
End Sub</code></pre>
This procedure calls the following function, which sets the property, creating it in the <SPAN CLASS="eln">Properties</SPAN> collection if necessary:</P>

<pre><code>Function SetAccessProperty(obj As Object, strName As String, _
        intType As Integer, varSetting As Variant) As Boolean
    Dim prp As Property
    Const conPropNotFound As Integer = 3270

    On Error GoTo ErrorSetAccessProperty
    ' Explicitly refer to Properties collection.
    obj.Properties(strName) = varSetting
    obj.Properties.Refresh
    SetAccessProperty = True

ExitSetAccessProperty:
    Exit Function

ErrorSetAccessProperty:
    If Err = conPropNotFound Then
        ' Create property, denote type, and set initial value.
        Set prp = obj.CreateProperty(strName, intType, varSetting)
        ' Append Property object to Properties collection.
        obj.Properties.Append prp
        obj.Properties.Refresh
        SetAccessProperty = True
        Resume ExitSetAccessProperty
    Else
        MsgBox Err &amp; ": " &amp; vbCrLf &amp; Err.Description
        SetAccessProperty = False
        Resume ExitSetAccessProperty
    End If
End Function</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
