<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RunMacro Method</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>RunMacro Method</H2>Applies To</P>
<SPAN CLASS="eln">DoCmd</SPAN> object.</P>
Description</P>
The <SPAN CLASS="eln">RunMacro</SPAN> method carries out the <SPAN CLASS="jump">RunMacro</SPAN> action in Visual Basic. For more information on how the action and its arguments work, see the action topic.</P>
Syntax</P>
<SPAN CLASS="l">DoCmd.RunMacro </SPAN><SPAN CLASS="p">macroname</SPAN>[<SPAN CLASS="l">, </SPAN><SPAN CLASS="p">repeatcount</SPAN>][<SPAN CLASS="l">, </SPAN><SPAN CLASS="p">repeatexpression</SPAN>]</P>
The <SPAN CLASS="eln">RunMacro</SPAN> method has the following arguments.</P>

<TABLE COLS="2" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="90pt" VALIGN="TOP"><COL WIDTH="270pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Argument</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">macroname</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">A <SPAN CLASS="pop">string expression</SPAN> that's the valid name of a <SPAN CLASS="pop">macro</SPAN> in the current database.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">If you run Visual Basic code containing the <SPAN CLASS="eln">RunMacro</SPAN> method in a <SPAN CLASS="pop">library database</SPAN>, Microsoft Access looks for the macro with this name in the library database and doesn't look for it in the current database.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">repeatcount</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">A <SPAN CLASS="pop">numeric expression</SPAN> that evaluates to an integer, which is the number of times the macro will run.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">repeatexpression</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">A numeric expression that's evaluated each time the macro runs. When it evaluates to <SPAN CLASS="eln">False</SPAN> (0), the macro stops running.</P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
You can use <SPAN CLASS="p">macrogroupname</SPAN><SPAN CLASS="l">.</SPAN><SPAN CLASS="p">macroname</SPAN> syntax for the <SPAN CLASS="p">macroname</SPAN> argument to run a particular macro in a <SPAN CLASS="pop">macro group</SPAN>.</P>
If you specify the <SPAN CLASS="p">repeatexpression</SPAN> argument and leave the <SPAN CLASS="p">repeatcount</SPAN> argument blank, you must include the <SPAN CLASS="p">repeatcount</SPAN> argument's comma. If you leave a trailing argument blank, don't use a comma following the last argument you specify.</P>
Example</P>
The following example runs the macro Print Sales:</P>

<pre><code>DoCmd.RunMacro "Print Sales"</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
