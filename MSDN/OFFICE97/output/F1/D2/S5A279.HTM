<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Connect Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>Connect Property</H2>Applies To</P>
<SPAN CLASS="eln">Connection</SPAN> object, <SPAN CLASS="eln">Database</SPAN> object, <SPAN CLASS="eln">QueryDef</SPAN> object, <SPAN CLASS="eln">TableDef</SPAN> object.</P>
Description</P>
Sets or returns a value that provides information about the source of an open connection, an open database, a database used in a <SPAN CLASS="pop">pass-through query</SPAN>, or a <SPAN CLASS="pop">linked table</SPAN>. For <SPAN CLASS="eln">Database</SPAN> objects, new <SPAN CLASS="eln">Connection</SPAN> objects, linked tables, and <SPAN CLASS="eln">TableDef</SPAN> objects not yet appended to a collection, this property setting is read/write. For <SPAN CLASS="eln">QueryDef</SPAN> objects and <SPAN CLASS="pop">base tables</SPAN>, this property is read-only.</P>
Syntax</P>
<SPAN CLASS="p">object</SPAN><SPAN CLASS="eln">.Connect</SPAN><SPAN CLASS="l"> = </SPAN><SPAN CLASS="p">databasetype</SPAN><SPAN CLASS="l">;</SPAN><SPAN CLASS="p">parameters</SPAN><SPAN CLASS="l">;</SPAN></P>
The <SPAN CLASS="eln">Connect</SPAN> property syntax has these parts.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="81pt" VALIGN="TOP"><COL WIDTH="279pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">object</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">An <SPAN CLASS="pop">object expression</SPAN> that evaluates to an object in the Applies To list.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">databasetype</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. A <SPAN CLASS="eln">String</SPAN> that specifies a database type. For <SPAN CLASS="pop">Microsoft&nbsp;Jet databases</SPAN>, exclude this argument; if you specify <SPAN CLASS="p">parameters</SPAN>, use a semicolon (;) as a placeholder. </P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">parameters</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional. A <SPAN CLASS="eln">String</SPAN> that specifies additional parameters to pass to <SPAN CLASS="pop">ODBC</SPAN> or <SPAN CLASS="pop">installable ISAM</SPAN> drivers. Use semicolons to separate parameters. </P></TD></TR></TBODY></TABLE>
<BR></P>Settings</P>
The <SPAN CLASS="eln">Connect</SPAN> property setting is a <SPAN CLASS="eln">String</SPAN> composed of a database type specifier and zero or more parameters separated by semicolons. The <SPAN CLASS="eln">Connect</SPAN> property passes additional information to ODBC and certain ISAM drivers as needed.</P>
To perform an SQL pass-through query on a table linked to your Microsoft&nbsp;Jet database (.mdb) file, you must first set the <SPAN CLASS="eln">Connect</SPAN> property of the linked table's database to a valid ODBC <SPAN CLASS="pop">connection string</SPAN>.</P>
For a <SPAN CLASS="eln">TableDef</SPAN> object that represents a linked table, the <SPAN CLASS="eln">Connect</SPAN> property setting consists of one or two parts (a database type specifier and a path to the database), each of which ends with a semicolon.</P>
The path as shown in the following table is the full path for the directory containing the database files and must be preceded by the identifier <SPAN CLASS="cte">DATABASE=</SPAN>. In some cases (as with Microsoft&nbsp;Excel and Microsoft&nbsp;Jet databases), you should include a specific file name in the database path argument.</P>
The following table shows possible database types and their corresponding database specifiers and paths for the <SPAN CLASS="eln">Connect</SPAN> property setting. You can also specify "FTP://<I>path</I>/<I>etc.</I>" or "HTTP://<I>path</I>/<I>etc.</I>" for the path. In an ODBCDirect workspace, only the "ODBC" specifier can be used.</P>

<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="94pt" VALIGN="TOP"><COL WIDTH="132pt" VALIGN="TOP"><COL WIDTH="133pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Database type</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Specifier</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Example</P></TD></TR><TR><TD  VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Microsoft&nbsp;Jet Database</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">[<SPAN CLASS="p">database</SPAN>];</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">drive:\path\filename.mdb</SPAN></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">dBASE III</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">dBASE III;</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">drive:\path</SPAN></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">dBASE IV</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">dBASE IV;</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">drive:\path</SPAN></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">dBASE 5</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">dBASE 5.0;</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">drive:\path</SPAN></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Paradox 3.<SPAN CLASS="p">x</SPAN> </P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Paradox 3.x;</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">drive:\path</SPAN></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Paradox 4.<SPAN CLASS="p">x</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Paradox 4.x;</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">drive:\path</SPAN></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Paradox 5.<SPAN CLASS="p">x</SPAN></P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Paradox 5.x;</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">drive:\path</SPAN></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">FoxPro 2.0</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">FoxPro 2.0;</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">drive:\path</SPAN></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">FoxPro 2.5</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">FoxPro 2.5;</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">drive:\path</SPAN></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">FoxPro 2.6</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">FoxPro 2.6;</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">drive:\path</SPAN></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Excel 3.0</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Excel 3.0;</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">drive:\path\filename.xls</SPAN></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Excel 4.0</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Excel 4.0;</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">drive:\path\filename.xls</SPAN></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Excel 5.0 or Excel 95</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Excel 5.0;</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">drive:\path\filename.xls</SPAN></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Excel 97</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Excel 97;</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">drive:\path\filename.xls</SPAN></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">HTML Import</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">HTML Import;</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">drive:\path\filename</SPAN></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">HTML Export</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">HTML Export;</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">drive:\path</SPAN></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Text</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Text;</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">drive:\path</SPAN></P></TD></TR></TBODY></TABLE>
<BR></P><I>(continued)</I></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="94pt" VALIGN="TOP"><COL WIDTH="132pt" VALIGN="TOP"><COL WIDTH="133pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">ODBC</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">ODBC;<BR>DATABASE=<SPAN CLASS="p">database</SPAN>;<BR>UID=<SPAN CLASS="p">user</SPAN>; <BR>PWD=<SPAN CLASS="p">password</SPAN>;<BR>DSN= <SPAN CLASS="p">datasourcename</SPAN>;<BR>[LOGINTIMEOUT<SPAN CLASS="p">=seconds</SPAN>;]</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">None </P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Exchange</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Exchange; <BR>MAPILEVEL=<I>folderpath</I>; [TABLETYPE={ 0 | 1 }];[PROFILE=<I>profile</I>;]<BR>[PWD=<I>password</I>;]<BR>[DATABASE=<I>database</I>;]</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><SPAN CLASS="p">drive:\path\filename.mdb</SPAN></P></TD></TR></TBODY></TABLE>
<BR></P>Remarks</P>
If the specifier is only <SPAN CLASS="cte">"ODBC;"</SPAN>, the <SPAN CLASS="pop">ODBC driver</SPAN> displays a dialog box listing all registered <SPAN CLASS="pop">ODBC data source</SPAN> names so that the user can select a database.</P>
If a password is required but not provided in the <SPAN CLASS="eln">Connect</SPAN> property setting, a login dialog box is displayed the first time a table is accessed by the ODBC driver and again if the connection is closed and reopened.</P>
For data in Microsoft&nbsp;Exchange, the required MAPILEVEL key should be set to a fully-resolved folder path (for example, "Mailbox - Pat SmithIAlpha/Today"). The path does not include the name of the folder that will be opened as a table; that folder's name should instead be specified as the <I>name</I> argument to the <B>CreateTable</B> method. The TABLETYPE key should be set to "0" to open a folder (default) or "1" to open an address book. The PROFILE key defaults to the profile currently in use.</P>
For base tables in a Microsoft&nbsp;Jet database (.mdb), the <SPAN CLASS="eln">Connect</SPAN> property setting is a <SPAN CLASS="pop">zero-length string</SPAN> (" ").</P>
You can set the <SPAN CLASS="eln">Connect</SPAN> property for a <SPAN CLASS="eln">Database</SPAN> object by providing a <SPAN CLASS="p">source</SPAN> argument to the OpenDatabase method. You can check the setting to determine the type, path, user ID, password, or ODBC data source of the database.</P>
On a <SPAN CLASS="eln">QueryDef</SPAN> object in a <SPAN CLASS="pop">Microsoft&nbsp;Jet workspace</SPAN>, you can use the <SPAN CLASS="eln">Connect</SPAN> property with the <SPAN CLASS="eln">ReturnsRecords</SPAN> property to create an ODBC SQL pass-through query. The <SPAN CLASS="p">databasetype</SPAN> of the connection string is <SPAN CLASS="cte">"ODBC;"</SPAN>, and the remainder of the string contains information specific to the ODBC driver used to access the remote data. For more information, see the documentation for the specific driver.</P>
<SPAN CLASS="nh">Notes</SPAN></P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">You must set the <SPAN CLASS="eln">Connect</SPAN> property before you set the <SPAN CLASS="eln">ReturnsRecords</SPAN> property.</LI><LI CLASS="ULI1">You must have access permissions to the computer that contains the database server you're trying to access.</LI></UL></SPAN>See Also</P>
<SPAN CLASS="eln">OpenDatabase</SPAN> method, <SPAN CLASS="eln">ReturnsRecords</SPAN> property.</P>
Example</P>
This example uses the <SPAN CLASS="eln">Connect</SPAN> and <SPAN CLASS="eln">SourceTableName</SPAN> properties to link various external tables to a Microsoft&nbsp;Jet database. The ConnectOutput procedure is required for this procedure to run.</P>

<pre><code>Sub ConnectX()

    Dim dbsTemp As Database
    Dim strMenu As String
    Dim strInput As String

    ' Open a Microsoft Jet database to which you will link
    ' a table.
    Set dbsTemp = OpenDatabase("DB1.mdb")

    ' Build menu text.
    strMenu = "Enter number for data source:" &amp; vbCr
    strMenu = strMenu &amp; _
        "   1. Microsoft Jet database" &amp; vbCr
    strMenu = strMenu &amp; _
        "   2. Microsoft FoxPro 3.0 table" &amp; vbCr
    strMenu = strMenu &amp; _
        "   3. dBASE table" &amp; vbCr
    strMenu = strMenu &amp; _
        "   4. Paradox table" &amp; vbCr
    strMenu = strMenu &amp; _
        "   M. (see choices 5-9)"

    ' Get user's choice.
    strInput = InputBox(strMenu)

    If UCase(strInput) = "M" Then

        ' Build menu text.
        strMenu = "Enter number for data source:" &amp; vbCr
        strMenu = strMenu &amp; _
            "   5. Microsoft Excel spreadsheet" &amp; vbCr
        strMenu = strMenu &amp; _
            "   6. Lotus spreadsheet" &amp; vbCr
        strMenu = strMenu &amp; _
            "   7. Comma-delimited text (CSV)" &amp; vbCr
        strMenu = strMenu &amp; _
            "   8. HTML table" &amp; vbCr
        strMenu = strMenu &amp; _
            "   9. Microsoft Exchange folder"

        ' Get user's choice.
        strInput = InputBox(strMenu)

    End If
    ' Call the ConnectOutput procedure. The third argument
    ' will be used as the Connect string, and the fourth
    ' argument will be used as the SourceTableName.
    Select Case Val(strInput)
        Case 1
            ConnectOutput dbsTemp, _
                "JetTable", _
                ";DATABASE=C:\My Documents\Northwind.mdb", _
                "Employees"
        Case 2
            ConnectOutput dbsTemp, _
                "FoxProTable", _
                "FoxPro 3.0;DATABASE=C:\FoxPro30\Samples", _
                "Q1Sales"
        Case 3
            ConnectOutput dbsTemp, _
                "dBASETable", _
                "dBase IV;DATABASE=C:\dBASE\Samples", _
                "Accounts"
        Case 4
            ConnectOutput dbsTemp, _
                "ParadoxTable", _
                "Paradox 3.X;DATABASE=C:\Paradox\Samples", _
                "Accounts"
        Case 5
            ConnectOutput dbsTemp, _
                "ExcelTable", _
                "Excel 5.0;" &amp; _
                    "DATABASE=C:\Excel\Samples\Q1Sales.xls", _
                "January Sales"
        Case 6
            ConnectOutput dbsTemp, _
                "LotusTable", _
                "Lotus WK3;" &amp; _
                    "DATABASE=C:\Lotus\Samples\Sales.xls", _
                "THIRDQTR"
        Case 7
            ConnectOutput dbsTemp, _
                "CSVTable", _
                "Text;DATABASE=C:\Samples", _
                "Sample.txt"
        Case 8
            ConnectOutput dbsTemp, _
                "HTMLTable", _
                "HTML Import;DATABASE=http://" &amp; _
                    "www.server1.com/samples/page1.html", _
                "Q1SalesData"
        Case 9
            ConnectOutput dbsTemp, _
                "ExchangeTable", _
                "Exchange 4.0;MAPILEVEL=" &amp; _
                    "Mailbox - Michelle Wortman (Exchange)" &amp; _
                    "|People\Important;", _
                "Jerry Wheeler"
    End Select

    dbsTemp.Close

End Sub

Sub ConnectOutput(dbsTemp As Database, _
    strTable As String, strConnect As String, _
    strSourceTable As String)

    Dim tdfLinked As TableDef
    Dim rstLinked As Recordset
    Dim intTemp As Integer

    ' Create a new TableDef, set its Connect and
    ' SourceTableName properties based on the passed
    ' arguments, and append it to the TableDefs collection.
    Set tdfLinked = dbsTemp.CreateTableDef(strTable)

    tdfLinked.Connect = strConnect
    tdfLinked.SourceTableName = strSourceTable
    dbsTemp.TableDefs.Append tdfLinked

    Set rstLinked = dbsTemp.OpenRecordset(strTable)

    Debug.Print "Data from linked table:"

    ' Display the first three records of the linked table.
    intTemp = 1
    With rstLinked
        Do While Not .EOF And intTemp &lt;= 3
            Debug.Print , .Fields(0), .Fields(1)
            intTemp = intTemp + 1
            .MoveNext
        Loop
        If Not .EOF Then Debug.Print , "[additional records]"
        .Close
    End With

    ' Delete the linked table because this is a demonstration.
    dbsTemp.TableDefs.Delete strTable

End Sub</code></pre>
Example (Microsoft&nbsp;Access)</P>
The following example creates a <SPAN CLASS="eln">TableDef</SPAN> object in the specified database. The procedure then sets its <SPAN CLASS="eln">Connect</SPAN> and <SPAN CLASS="eln">SourceTableName</SPAN> properties and appends the&nbsp;object to the <SPAN CLASS="eln">TableDefs</SPAN> collection.</P>

<pre><code>Sub ConnectSource()
    Dim dbs As Database, tdf As TableDef

    ' Return reference to current database.
    Set dbs = CurrentDb
    ' Create new TableDef object.
    Set tdf = dbs.CreateTableDef("PDXAuthor")
    ' Attach Paradox table Author in database C:\PDX\Publish.
    tdf.Connect = "Paradox 4.X;Database=C:\PDX\Publish"
    tdf.SourceTableName = "Author"
    dbs.TableDefs.Append tdf
    Set dbs = Nothing
End Sub</code></pre>
Example (Microsoft&nbsp;Excel)</P>
This example attaches the table Product.dbf (a dBASE IV table located in the C:\Program Files\Common Files\Microsoft&nbsp;Shared\MSquery folder) to the Nwindex.mdb database. (In Windows&nbsp;NT, Product.dbf is located in the C:\Windows\Msapps\Msquery folder.)</P>
To create the Nwindex.mdb database, run the Microsoft&nbsp;Excel example for the <SPAN CLASS="lee">CreateDatabase</SPAN> method.</P>

<pre><code>Dim nWindEx As Database, tDef As TableDef
Dim dataSource As String
dataSource = _
    "dBASE IV;DATABASE=C:\Program Files\Common Files\Microsoft _
        Shared\MSquery"
Set nWindEx = Workspaces(0).OpenDatabase(Application.Path _
    &amp; "\NWINDEX.MDB")
Set tDef = nWindEx.CreateTableDef("Product")
tDef.Connect = dataSource
tDef.SourceTableName = "Product"
nWindEx.TableDefs.Append tDef
nWindEx.Close</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
