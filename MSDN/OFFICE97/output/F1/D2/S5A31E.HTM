<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Count Function</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>Count Function</H2>Description</P>
Calculates the number of records returned by a query.</P>
Syntax</P>
<SPAN CLASS="eln">Count(</SPAN><SPAN CLASS="p">expr</SPAN><SPAN CLASS="eln">)</SPAN></P>
The <SPAN CLASS="p">expr</SPAN> placeholder represents a <SPAN CLASS="pop">string expression</SPAN> identifying the field that contains the data you want to count or an expression that performs a calculation using the data in the field. Operands in <SPAN CLASS="p">expr</SPAN> can include the name of a table field or function (which can be either intrinsic or user-defined but not other <SPAN CLASS="pop">SQL</SPAN> <SPAN CLASS="pop">aggregate functions</SPAN>). You can count any kind of data, including text.</P>
Remarks</P>
You can use <SPAN CLASS="eln">Count</SPAN> to count the number of records in an underlying query. For example, you could use <SPAN CLASS="eln">Count</SPAN> to count the number of orders shipped to a particular country.</P>
Although <SPAN CLASS="p">expr</SPAN> can perform a calculation on a field, <SPAN CLASS="eln">Count</SPAN> simply tallies the number of records. It doesn't matter what values are stored in the records.</P>
The <SPAN CLASS="eln">Count</SPAN> function doesn't count records that have Null<SPAN CLASS="eln"> </SPAN>fields unless <SPAN CLASS="p">expr</SPAN> is the asterisk (*) <SPAN CLASS="pop">wildcard character</SPAN>. If you use an asterisk, <SPAN CLASS="eln">Count</SPAN> calculates the total number of records, including those that contain <SPAN CLASS="eln">Null</SPAN> fields. <SPAN CLASS="eln">Count(</SPAN>*<SPAN CLASS="eln">)</SPAN> is considerably faster than <SPAN CLASS="eln">Count(</SPAN>[<SPAN CLASS="crbt">Column Name</SPAN>]<SPAN CLASS="eln">)</SPAN>. Don't enclose the asterisk in quotation marks&nbsp;('&nbsp;'). The following example calculates the number of records in the Orders table:</P>

<pre><code>SELECT Count(*)
AS TotalOrders FROM Orders;</code></pre>
If <SPAN CLASS="p">expr</SPAN> identifies multiple fields, the <SPAN CLASS="eln">Count</SPAN> function counts a record only if at least one of the fields is not <SPAN CLASS="eln">Null</SPAN>. If all of the specified fields are <SPAN CLASS="eln">Null</SPAN>, the record isn't counted. Separate the field names with an ampersand (&amp;). The following example shows how you can limit the count to records in which either ShippedDate or Freight isn't <SPAN CLASS="eln">Null</SPAN>:</P>

<pre><code>SELECT
Count('ShippedDate &amp; Freight')
AS [Not Null] FROM Orders;</code></pre>
You can use <SPAN CLASS="eln">Count</SPAN> in a query expression. You can also use this expression in the SQL property of a QueryDef object or when creating a Recordset object based on an SQL query.</P>
See Also</P>
<SPAN CLASS="eln">QueryDef</SPAN> object ("DAO Language Reference"), <SPAN CLASS="eln">RecordCount</SPAN> property ("DAO Language Reference"), SELECT statement, <SPAN CLASS="eln">SQL</SPAN> property ("DAO Language Reference"), <SPAN CLASS="eln">Sum</SPAN> function.</P>
Specifics (Microsoft Access)</P>
In Microsoft Access, you can use the <SPAN CLASS="eln">Count</SPAN> function in the <SPAN CLASS="pop">query design grid</SPAN>, in an <SPAN CLASS="pop">SQL</SPAN> statement in <SPAN CLASS="pop">SQL view</SPAN> of the <SPAN CLASS="pop">Query window</SPAN>, or in an SQL statement within Visual&nbsp;Basic code. You can also use the <SPAN CLASS="eln">Count</SPAN> function in a <SPAN CLASS="pop">calculated control</SPAN> on a form or report.</P>
The <SPAN CLASS="eln">Count</SPAN> function is most useful in <SPAN CLASS="pop">totals queries</SPAN> and <SPAN CLASS="pop">crosstab queries</SPAN>. It functions the same way whether you create the query in the query design grid or as an SQL statement in SQL view.</P>
In the query design grid, you can create a new totals query by clicking the <SPAN CLASS="eln">Totals</SPAN> button on the <SPAN CLASS="eln">Query Design</SPAN> <SPAN CLASS="pop">toolbar</SPAN>. The <SPAN CLASS="eln">Total</SPAN> row is then inserted in the grid. You can set the <SPAN CLASS="eln">Total</SPAN> cell beneath a field to the aggregate function to perform on the data in that field.</P>
The fastest way to count all the records in a query is to use the <SPAN CLASS="eln">Count(*)</SPAN> function, which you can use in a <SPAN CLASS="pop">calculated field</SPAN> in a query.</P>
For example, suppose you have an Orders table that has both an OrderID field and a ShipCity field. You can create a query that displays the number of orders sent to each city. Create a new totals query, and drag the ShipCity field to the query design grid. Set the <SPAN CLASS="eln">Total</SPAN> cell beneath the ShipCity field to Group By.</P>
Next, create a calculated field by typing the following expression into a new <SPAN CLASS="eln">Field</SPAN> cell:</P>

<pre><code>CountOfOrders: Count(*)</code></pre>
Then, set the <SPAN CLASS="eln">Total</SPAN> cell beneath this field to Expression. When you run the query, it will display the number of orders sent to each city.</P>
You can view the SQL statement for this query by switching to SQL view. In this example, Microsoft Access creates the following SQL statement:</P>

<pre><code>SELECT ShipCity, Count(*) AS CountOfOrders
FROM Orders GROUP BY ShipCity;</code></pre>
You can achieve the same results by dragging the OrderID field to the query design grid, and clicking <SPAN CLASS="eln">Count</SPAN> in the <SPAN CLASS="eln">Total</SPAN> cell beneath it. This query will be slightly slower than the one that uses the <SPAN CLASS="eln">Count(*)</SPAN> function. Note how the following differs from the preceding SQL statement:</P>

<pre><code>SELECT ShipCity, Count(OrderID) AS CountOfOrders FROM Orders GROUP BY ShipCity;</code></pre>
You can also use an SQL statement within Visual&nbsp;Basic code. For example, the following procedure creates a dynaset-type <SPAN CLASS="eln">Recordset</SPAN> object from the faster of the two preceding SQL statements:</P>

<pre><code>Sub CountOrders()
    Dim dbs As Database, rst As Recordset, strSQL As String
    Set dbs = CurrentDb
    strSQL = "SELECT ShipCity, Count(*) AS CountOfOrders " _
        &amp; "FROM Orders GROUP BY ShipCity;"
    Set rst = dbs.OpenRecordset(strSQL)
    rst.MoveLast
    Debug.Print rst.RecordCount
    Set dbs = Nothing
End Sub</code></pre>
To use the <SPAN CLASS="eln">Count</SPAN> function in a calculated control, set the control's <SPAN CLASS="eln">ControlSource</SPAN> property to an expression containing the <SPAN CLASS="eln">Count</SPAN> function. For example, to display the number of orders in a set of orders in a text box, enter the following expression in the <SPAN CLASS="eln">ControlSource</SPAN> property of the text box.</P>

<pre><code>=Count([OrderID])</code></pre>
If you use the <SPAN CLASS="eln">Count</SPAN> function in a calculated control, you can restrict the set of records against which the function is performed by setting the form's <SPAN CLASS="eln">Filter</SPAN> property.</P>
Example</P>
This example uses the Orders table to calculate the number of orders shipped to the United Kingdom.</P>
This example calls the EnumFields procedure, which you can find in the SELECT statement example.</P>

<pre><code>Sub CountX()

    Dim dbs As Database, rst As Recordset

    ' Modify this line to include the path to Northwind
    ' on your computer.
    Set dbs = OpenDatabase("Northwind.mdb")
    
    ' Calculate the number of orders shipped
    ' to the United Kingdom.
    Set rst = dbs.OpenRecordset("SELECT" _
        &amp; " Count (ShipCountry)" _
        &amp; " AS [UK Orders] FROM Orders" _
        &amp; " WHERE ShipCountry = 'UK';")
    
    ' Populate the Recordset.
    rst.MoveLast
    
    ' Call EnumFields to print the contents of the
    ' Recordset. Pass the Recordset object and desired
    ' field width.
    EnumFields rst, 25

    dbs.Close

End Sub</code></pre>
Example (Microsoft Access)</P>
The following example assumes that you have an Orders table that contains a field called ShipCountry. You can use the <SPAN CLASS="eln">Count</SPAN> function to calculate the number of orders shipped to the United Kingdom. Enter the following expression in SQL view in the Query window:</P>

<pre><code>SELECT Count([ShipCountry]) AS [UKOrders] FROM Orders WHERE [ShipCountry] = 'UK';</code></pre>
The next example creates a calculated control that displays the number of orders in the same Orders table. Open a new form and set its <SPAN CLASS="eln">RecordSource</SPAN> property to Orders. Enter the following expression in the <SPAN CLASS="eln">ControlSource</SPAN> property of a text box on the form. To apply a condition that limits the count to only some records, such as those for orders shipped to the United Kingdom, set the form's <SPAN CLASS="eln">Filter</SPAN> property.</P>

<pre><code>=Count([ShipCountry])</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
