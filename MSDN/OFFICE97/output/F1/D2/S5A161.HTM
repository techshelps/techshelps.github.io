<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OldValue Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>OldValue Property</H2>Applies To</P>
ActiveX control, Bound Object Frame control, Chart control, Check Box control, Combo Box control, Command Button control, Image control, List Box control, Option Button control, Option Group control, Tab control, Text Box control, Toggle Button control, Unbound Object Frame control.</P>
Description</P>
You can use the <SPAN CLASS="eln">OldValue</SPAN> property to determine the unedited value of a <SPAN CLASS="pop">bound control</SPAN>.</P>
Setting</P>
The <SPAN CLASS="eln">OldValue</SPAN> property contains the unedited data from a bound control and is read-only in all views.</P>
You can access this property only by using a <SPAN CLASS="jump">macro</SPAN> or <SPAN CLASS="jump">Visual Basic</SPAN>.</P>
The <SPAN CLASS="eln">OldValue</SPAN> property can be assigned to a variable by using the following syntax:</P>

<pre><code>OriginalValue = Forms!Customers!AmountPaid.OldValue</code></pre>
Remarks</P>
Microsoft Access uses the <SPAN CLASS="eln">OldValue</SPAN> property to store the original value of a bound control. When you edit a bound control on a form, your changes aren't saved until you move to another record. The <SPAN CLASS="eln">OldValue</SPAN> property contains the unedited version of the underlying data.</P>
You can provide your own undo capability by assigning the <SPAN CLASS="eln">OldValue</SPAN> property setting to a <SPAN CLASS="pop">control</SPAN>. The following example shows how you can undo any changes to <SPAN CLASS="pop">text box</SPAN> controls on a form:</P>

<pre><code>Sub btnUndo_Click()
    Dim ctlTextbox As Control
    For Each ctlTextbox in Me.Controls
    If ctlTextbox.ControlType = acTextBox Then
        ctlTextbox.Value = ctl.OldValue
    End If
    Next ctl
End Sub</code></pre>
If the control hasn't been edited, this code has no effect. When you move to another record, the record source is updated, so the current value and the <SPAN CLASS="eln">OldValue</SPAN> property will be the same.</P>
The <SPAN CLASS="eln">OldValue</SPAN> property setting has the same data type as the field to which the control is bound.</P>
See Also</P>
BeforeUpdate, AfterUpdate events, <SPAN CLASS="eln">ControlSource</SPAN> property, <SPAN CLASS="eln">RecordSource</SPAN> property, <SPAN CLASS="eln">Value</SPAN> property.</P>
Example</P>
The following example checks to determine if new data entered in a field is within 10 percent of the value of the original data. If the change is greater than 10 percent, the <SPAN CLASS="eln">OldValue</SPAN> property is used to restore the original value. This procedure could be called from the BeforeUpdate event of the control that contains data you want to validate.</P>

<pre><code>Sub Validate_Field()
    Dim curNewValue As Currency
    Dim curOriginalValue As Currency
    Dim curChange As Currency, strMsg As String
    
    curNewValue = Forms!Products!UnitPrice
    curOriginalValue = Forms!Products!UnitPrice.OldValue
    curChange = Abs(curNewValue - curOriginalValue)
    If curChange &gt; (curOriginalValue * .1) Then
        strMsg = "Change is more than 10% of original unit price. " _ 
        &amp; "Restoring original unit price."
        MsgBox strMsg, vbExclamation, "Invalid change"
        Forms!Products!UnitPrice = curOriginalValue
    End If
End Sub</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
