<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ConnectorFormat Object</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>ConnectorFormat Object</H1>Description</P>
Contains properties and methods that apply to connectors. A connector is a line that attaches two other shapes at points called connection sites. If you rearrange shapes that are connected, the geometry of the connector will be automatically adjusted so that the shapes remain connected.</P>
Using the ConnectorFormat Object</P>
Use the <SPAN CLASS="lee">ConnectorFormat</SPAN> property to return a <SPAN CLASS="lee">ConnectorFormat</SPAN> object. Use the <SPAN CLASS="lee">BeginConnect</SPAN> and <SPAN CLASS="lee">EndConnect</SPAN> methods to attach the ends of the connector to other shapes in the document. Use the <SPAN CLASS="lee">RerouteConnections</SPAN> method to automatically find the shortest path between the two shapes connected by the connector. Use the <SPAN CLASS="lee">Connector</SPAN> property to see whether a shape is a connector.</P>
Note that you assign a size and a position when you add a connector to the <SPAN CLASS="lee">Shapes</SPAN> collection, but the size and position are automatically adjusted when you attach the beginning and end of the connector to other shapes in the collection. Therefore, if you intend to attach a connector to other shapes, the initial size and position you specify are irrelevant. Likewise, you specify which connection sites on a shape to attach the connector to when you attach the connector, but using the <SPAN CLASS="lee">RerouteConnections</SPAN> method after the connector is attached may change which connection sites the connector attaches to, making your original choice of connection sites irrelevant.</P>
The following example adds two rectangles to <SPAN CLASS="cte">myDocument</SPAN> and connects them with a curved connector.</P>

<pre><code>Set myDocument = ActivePresentation.Slides(1)
Set s = myDocument.Shapes
Set firstRect = s.AddShape(msoShapeRectangle, 100, 50, 200, 100)
Set secondRect = s.AddShape(msoShapeRectangle, 300, 300, 200, 100)
With s.AddConnector(msoConnectorCurve, 0, 0, 0, 0).ConnectorFormat
    .BeginConnect ConnectedShape:=firstRect, ConnectionSite:=1
    .EndConnect ConnectedShape:=secondRect, ConnectionSite:=1
    .Parent.RerouteConnections
End With</code></pre>
Remarks</P>
Connection sites are generally numbered according to the rules presented in the following table. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="102pt" VALIGN="TOP"><COL WIDTH="258pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Shape type</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Connection site numbering scheme</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">AutoShapes, WordArt, pictures, and OLE objects</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The connection sites are numbered starting at the top and proceeding counterclockwise.</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Freeforms</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The connection sites are the vertices, and they correspond to the vertex numbers.</P></TD></TR></TBODY></TABLE>
<BR></P>To figure out which number corresponds to which connection site on a complex shape, you can experiment with the shape while the macro recorder is turned on and then examine the recorded code; or you can create a shape, select it, and then run the following example. This code will number each connection site and attach a connector to it.</P>

<pre><code>Set mainshape = ActiveWindow.Selection.ShapeRange(1)
With mainshape
    bx = .Left + .Width + 50
    by = .Top + .Height + 50
End With
With ActiveWindow.View.Slide
    For j = 1 To mainshape.ConnectionSiteCount
        With .Shapes.AddConnector(msoConnectorStraight, bx, by, bx _
                + 50, by + 50)
            .ConnectorFormat.EndConnect mainshape, j
            .ConnectorFormat.Type = msoConnectorElbow
            .Line.ForeColor.RGB = RGB(255, 0, 0)
            l = .Left
            t = .Top
        End With
        With .Shapes.AddTextbox(msoTextOrientationHorizontal, l, t, _
                36, 14)
            .Fill.Visible = False
            .Line.Visible = False
            .TextFrame.TextRange.Text = j
        End With
    Next j
End With</code></pre>
Properties</P>
<SPAN CLASS="eln">Application</SPAN> property, <SPAN CLASS="eln">BeginConnected</SPAN> property, <SPAN CLASS="eln">BeginConnectedShape</SPAN> property, <SPAN CLASS="eln">BeginConnectionSite</SPAN> property, <SPAN CLASS="eln">Creator</SPAN> property, <SPAN CLASS="eln">EndConnected</SPAN> property, <SPAN CLASS="eln">EndConnectedShape</SPAN> property, <SPAN CLASS="eln">EndConnectionSite</SPAN> property, <SPAN CLASS="eln">Parent</SPAN> property, <SPAN CLASS="eln">Type</SPAN> property.</P>
Methods</P>
<SPAN CLASS="eln">BeginConnect</SPAN> method, <SPAN CLASS="eln">BeginDisconnect</SPAN> method, <SPAN CLASS="eln">EndConnect</SPAN> method, <SPAN CLASS="eln">EndDisconnect</SPAN> method.</P>
<HR CLASS="rr"></FONT></BODY>
</HTML>
