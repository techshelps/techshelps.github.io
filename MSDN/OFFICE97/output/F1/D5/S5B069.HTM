<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Application Object</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Application Object</H1>Description</P>
Represents the entire Microsoft Outlook application. This is the only object in the hierarchy that can be returned by using the <SPAN CLASS="lee">CreateObject</SPAN> or <SPAN CLASS="lee">GetObject</SPAN> function.</P>
The Outlook <SPAN CLASS="lee">Application</SPAN> object has several purposes:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">As the root object, it allows access to other objects in the Outlook hierarchy.</LI><LI CLASS="ULI1">It allows direct access to new items created by using <SPAN CLASS="lee">CreateItem</SPAN>, without having to traverse the object hierarchy.</LI><LI CLASS="ULI1">It allows access to the active interface objects (the explorer and the inspector).
</LI></UL></SPAN>Using the Application Object</P>
When you use Automation to control Microsoft Outlook from another application, you use the <SPAN CLASS="lee">CreateObject</SPAN> function to create an Outlook <SPAN CLASS="lee">Application</SPAN> object. The following example starts Microsoft Outlook (if it's not already running) and opens the default Inbox folder.</P>

<pre><code>Set myOlApp = CreateObject("Outlook.Application")
Set olNameSpace = myOlApp.GetNameSpace("MAPI")
Set myFolder= _
    olNameSpace.GetDefaultFolder(olFolderInbox)
myFolder.Display</code></pre>
The following example uses the <SPAN CLASS="lee">Application</SPAN> object to create and open a new contact.</P>

<pre><code>Set myOlApp = CreateObject("Outlook.Application")
Set myItem = myOlApp.CreateItem(olContactItem)
myItem.Display</code></pre>
Properties</P>
<SPAN CLASS="eln">Assistant</SPAN> property.</P>
Methods</P>
<SPAN CLASS="eln">ActiveExplorer</SPAN> method, <SPAN CLASS="eln">ActiveInspector</SPAN> method, <SPAN CLASS="eln">CreateItem</SPAN> method, <SPAN CLASS="eln">CreateItemFromTemplate</SPAN> method, <SPAN CLASS="eln">CreateObject</SPAN> method, <SPAN CLASS="eln">GetNameSpace</SPAN> method, <SPAN CLASS="eln">Quit</SPAN> method.</P>
<HR CLASS="rr"></FONT></BODY>
</HTML>
