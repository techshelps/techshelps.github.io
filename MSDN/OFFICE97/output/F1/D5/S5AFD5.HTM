<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Selection Object</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Selection Object</H1>Description</P>
Represents the selection in the specified document window.</P>
Using the Selection Object</P>
Use the <SPAN CLASS="lee">Selection</SPAN> property to return the <SPAN CLASS="lee">Selection</SPAN> object. The following example places a copy of the selection in the active window on the Clipboard.</P>

<pre><code>ActiveWindow.Selection.Copy</code></pre>
Use the <SPAN CLASS="lee">ShapeRange</SPAN>, <SPAN CLASS="lee">SlideRange</SPAN>, or <SPAN CLASS="lee">TextRange</SPAN> property to return a range of shapes, slides, or text from the selection.</P>
The following example sets the fill foreground color for the selected shapes in window two, assuming that there's at least one shape selected, and assuming that all selected shapes have a fill whose forecolor can be set.</P>

<pre><code>With Windows(2).Selection.ShapeRange.Fill
    .Visible = True
    .ForeColor.RGB = RGB(255, 0, 255)
End With</code></pre>
The following example sets the text in the first selected shape in window two if that shape contains a text frame.</P>

<pre><code>With Windows(2).Selection.ShapeRange(1)
    If .HasTextFrame Then
        .TextFrame.TextRange = "Current Choice"
    End If
End With</code></pre>
The following example cuts the selected text in the active window and places it on the Clipboard.</P>

<pre><code>ActiveWindow.Selection.TextRange.Cut</code></pre>
The following example duplicates all the slides in the selection (if you're in slide view, this duplicates the current slide).</P>

<pre><code>ActiveWindow.Selection.SlideRange.Duplicate</code></pre>
If you don't have an object of the appropriate type selected when you use one of these properties (for instance, if you use the <SPAN CLASS="lee">ShapeRange</SPAN> property when there are no shapes selected), an error occurs. Use the <SPAN CLASS="lee">Type</SPAN> property to determine what kind of object or objects are selected. The following example checks to see whether the selection contains slides. If the selection does contain slides, the example sets the background for the first slide in the selection.</P>

<pre><code>With Windows(2).Selection
    If .Type = ppSelectionSlides Then
        With .SlideRange(1)
            .FollowMasterBackground = False
            .Background.Fill.PresetGradient msoGradientHorizontal, _
                1, msoGradientLateSunset
        End With
    End If
End With</code></pre>
Remarks</P>
The <SPAN CLASS="lee">Selection</SPAN> object is deleted whenever you change slides in an active slide view (the <SPAN CLASS="lee">Type</SPAN> property will return <SPAN CLASS="lee">ppSelectionNone</SPAN>).</P>
Properties</P>
<SPAN CLASS="eln">Application</SPAN> property, <SPAN CLASS="eln">Parent</SPAN> property, <SPAN CLASS="eln">ShapeRange</SPAN> property, <SPAN CLASS="eln">SlideRange</SPAN> property, <SPAN CLASS="eln">TextRange</SPAN> property, <SPAN CLASS="eln">Type</SPAN> property.</P>
Methods</P>
<SPAN CLASS="eln">Copy</SPAN> method, <SPAN CLASS="eln">Cut</SPAN> method, <SPAN CLASS="eln">Delete</SPAN> method, <SPAN CLASS="eln">Unselect</SPAN> method.</P>
See Also</P>
<SPAN CLASS="eln">Unselect</SPAN> method.</P>
<HR CLASS="rr"></FONT></BODY>
</HTML>
