<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CodeName Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>CodeName Property</H1>Applies To</P>
<SPAN CLASS="eln">Chart</SPAN> object, <SPAN CLASS="eln">Workbook</SPAN> object, <SPAN CLASS="eln">Worksheet</SPAN> object.</P>
Description</P>
Returns the code name for the object. Read-only <SPAN CLASS="lee">String</SPAN>.</P>
Remarks</P>
The code name for an object can be used in place of an expression that returns the object. For example, if the code name for worksheet one is "Sheet1", the following expressions are identical:</P>

<pre><code>Worksheets(1).Range("a1")
Sheet1.Range("a1")</code></pre>
It's possible for the sheet name to be different from the code name. When you create a sheet, the sheet name and code name are the same, but changing the sheet name doesn't change the code name, and changing the code name (using the <SPAN CLASS="eln">Properties</SPAN> window in the Visual&nbsp;Basic Editor) doesn't change the sheet name.</P>
Example</P>
This example displays the code name for worksheet one.</P>

<pre><code>MsgBox Worksheets(1).CodeName</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
