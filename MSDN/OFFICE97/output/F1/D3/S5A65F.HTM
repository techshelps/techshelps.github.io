<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Names Collection Object</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Names Collection Object</H1>Description</P>
A collection of all the <SPAN CLASS="lee">Name</SPAN> objects in the application or workbook. Each <SPAN CLASS="lee">Name</SPAN> object represents a defined name for a range of cells. Names can be either built-in names — such as Database, Print_Area, and Auto_Open — or custom names.</P>
Using the Names Collection</P>
Use the <SPAN CLASS="lee">Names</SPAN> property to return the <SPAN CLASS="lee">Names</SPAN> collection. The following example creates a list of all the names in the active workbook, plus the addresses they refer to.</P>

<pre><code>Set nms = ActiveWorkbook.Names
Set wks = Worksheets(1)
For r = 1 To nms.Count
    wks.Cells(r, 2).Value = nms(r).Name
    wks.Cells(r, 3).Value = nms(r).RefersToRange.Address
Next</code></pre>
Use the <SPAN CLASS="lee">Add</SPAN> method to create a name and add it to the collection. The following example creates a new name that refers to cells A1:C20 on the worksheet named "Sheet1."</P>

<pre><code>Names.Add Name:="Test", RefersTo:="=Sheet1!$A$1:$C$20"</code></pre>
The <SPAN CLASS="narg">RefersTo</SPAN> argument must be specified in A1-style notation, including dollar signs&nbsp;($) where appropriate. For example, if cell A10 is selected on Sheet1 and you define a name by using the <SPAN CLASS="narg">RefersTo</SPAN> argument "=Sheet1!A1:B1," the new name actually refers to cells A10:B10 (because you specified a relative reference). To specify an absolute reference, use "=Sheet1!$A$1:$B$1."</P>
Use <SPAN CLASS="lee">Names</SPAN>(<SPAN CLASS="p">index</SPAN>), where <SPAN CLASS="p">index</SPAN> is the name index number or defined name, to return a single <SPAN CLASS="lee">Name</SPAN> object. The following example deletes the name "mySortRange" from the active workbook.</P>

<pre><code>ActiveWorkbook.Names("mySortRange").Delete</code></pre>
Properties</P>
<SPAN CLASS="eln">Application</SPAN> property, <SPAN CLASS="eln">Count</SPAN> property, <SPAN CLASS="eln">Creator</SPAN> property, <SPAN CLASS="eln">Parent</SPAN> property.</P>
Methods</P>
<SPAN CLASS="eln">Add</SPAN> method (<SPAN CLASS="eln">Names</SPAN> collection), <SPAN CLASS="eln">Item</SPAN> method (<SPAN CLASS="eln">Names</SPAN> collection).</P>
<HR CLASS="rr"></FONT></BODY>
</HTML>
