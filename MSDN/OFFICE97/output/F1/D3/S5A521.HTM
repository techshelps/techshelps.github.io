<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Find Method</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Find Method</H1>Applies To</P>
<SPAN CLASS="eln">Range</SPAN> object.</P>
Description</P>
Finds specific information in a range, and returns a <SPAN CLASS="lee">Range</SPAN> object that represents the first cell where that information is found. Returns <SPAN CLASS="lee">Nothing</SPAN> if no match is found. Doesn't affect the selection or the active cell.</P>
Syntax</P>
<SPAN CLASS="p">expression</SPAN><SPAN CLASS="l">.</SPAN><SPAN CLASS="lee">Find</SPAN><SPAN CLASS="l">(</SPAN><SPAN CLASS="narg">What</SPAN><SPAN CLASS="l">, </SPAN><SPAN CLASS="narg">After</SPAN><SPAN CLASS="l">, </SPAN><SPAN CLASS="narg">LookIn</SPAN><SPAN CLASS="l">, </SPAN><SPAN CLASS="narg">LookAt</SPAN><SPAN CLASS="l">, </SPAN><SPAN CLASS="narg">SearchOrder</SPAN><SPAN CLASS="l">, </SPAN><SPAN CLASS="narg">SearchDirection</SPAN><SPAN CLASS="l">, </SPAN><SPAN CLASS="narg">MatchCase</SPAN><SPAN CLASS="l">,</SPAN><BR>ú<SPAN CLASS="narg">MatchByte</SPAN><SPAN CLASS="l">)</SPAN></P>
<SPAN CLASS="p">expression</SPAN>   Required. An expression that returns a <SPAN CLASS="lee">Range</SPAN> object.</P>
<SPAN CLASS="narg">What</SPAN>   Required <SPAN CLASS="lee">Variant</SPAN>. The data to search for. Can be a string or any Microsoft Excel data type.</P>
<SPAN CLASS="narg">After</SPAN>   Optional <SPAN CLASS="lee">Variant</SPAN>. The cell after which you want to search. This corresponds to the position of the active cell when a search is done from the user interface. Note that <SPAN CLASS="narg">After</SPAN> must be a single cell in the range. Remember that the search begins <I>after</I> this cell; the specified cell isn't searched until the method wraps back around to this cell. If this argument isn't specified, the search starts after the cell in the upper-left corner of the range.</P>
<SPAN CLASS="narg">LookIn</SPAN>   Optional <SPAN CLASS="lee">Variant</SPAN>. Can be one of the following <SPAN CLASS="lee">XlFindLookIn</SPAN> constants: <SPAN CLASS="lee">xlFormulas</SPAN>, <SPAN CLASS="lee">xlValues</SPAN>, or <SPAN CLASS="lee">xlNotes</SPAN>.</P>
<SPAN CLASS="narg">LookAt</SPAN>   Optional <SPAN CLASS="lee">Variant</SPAN>. Can be one of the following <SPAN CLASS="lee">XlLookAt</SPAN> constants: <SPAN CLASS="lee">xlWhole</SPAN> or <SPAN CLASS="lee">xlPart</SPAN>.</P>
<SPAN CLASS="narg">SearchOrder</SPAN>   Optional <SPAN CLASS="lee">Variant</SPAN>. Can be one of the following <SPAN CLASS="lee">XlSearchOrder</SPAN> constants: <SPAN CLASS="lee">xlByRows</SPAN> or <SPAN CLASS="lee">xlByColumns</SPAN>.</P>
<SPAN CLASS="narg">SearchDirection</SPAN>   Optional <SPAN CLASS="lee">Variant</SPAN>. Can be one of the following <SPAN CLASS="lee">XlSearchDirection</SPAN> constants: <SPAN CLASS="lee">xlNext</SPAN> or <SPAN CLASS="lee">xlPrevious</SPAN>. The default value is <SPAN CLASS="lee">xlNext</SPAN>.</P>
<SPAN CLASS="narg">MatchCase</SPAN>   Optional <SPAN CLASS="lee">Variant</SPAN>. <SPAN CLASS="lee">True</SPAN> to make the search case sensitive.</P>
<SPAN CLASS="narg">MatchByte</SPAN>   Optional <SPAN CLASS="lee">Variant</SPAN>. Used only in the Far East version of Microsoft Excel. <SPAN CLASS="lee">True</SPAN> to have double-byte characters match only double-byte characters. <SPAN CLASS="lee">False</SPAN> to have double-byte characters match their single-byte equivalents.</P>
Remarks</P>
The settings for <SPAN CLASS="narg">LookIn</SPAN>, <SPAN CLASS="narg">LookAt</SPAN>, <SPAN CLASS="narg">SearchOrder</SPAN>, <SPAN CLASS="narg">MatchCase</SPAN>, and <SPAN CLASS="narg">MatchByte</SPAN> are saved each time you use this method. If you don't specify values for these arguments the next time you call the method, the saved values are used. Setting these arguments changes the settings in the <SPAN CLASS="lee">Find</SPAN> dialog box, and changing the settings in the <SPAN CLASS="lee">Find</SPAN> dialog box changes the saved values that are used if you omit the arguments. To avoid problems, set these arguments explicitly each time you use this method.</P>
The <SPAN CLASS="lee">FindNext</SPAN> and <SPAN CLASS="lee">FindPrevious</SPAN> methods can be used to repeat the search.</P>
When the search reaches the end of the specified search range, it wraps around to the beginning of the range. To stop a search when this wraparound occurs, save the address of the first found cell, and then test each successive found-cell address against this saved address.</P>
To find cells that match more complicated patterns, use <SPAN CLASS="lee">For Each...Next</SPAN> with the <SPAN CLASS="lee">Like</SPAN> operator. For example, the following code searches for all cells in the range A1:C5 that use a font whose name starts with the letters "Cour". When Microsoft Excel finds a match, it changes the font to Times New Roman.</P>

<pre><code>For Each c In [A1:C5]
    If c.Font.Name Like "Cour*" Then
        c.Font.Name = "Times New Roman"
    End If
Next</code></pre>
See Also</P>
<SPAN CLASS="eln">FindNext</SPAN> method, <SPAN CLASS="eln">FindPrevious</SPAN> method, <SPAN CLASS="eln">Replace</SPAN> method.</P>
Example</P>
This example finds all cells in the range A1:A500 that contain the value 2 and makes those cells gray.</P>

<pre><code>With Worksheets(1).Range("a1:a500")
    Set c = .Find(2, lookin:=xlValues)
    If Not c Is Nothing Then
        firstAddress = c.Address
        Do
            c.Interior.Pattern = xlPatternGray50
            Set c = .FindNext(c)
        Loop While Not c Is Nothing And c.Address &lt;&gt; firstAddress
    End If
End With</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
