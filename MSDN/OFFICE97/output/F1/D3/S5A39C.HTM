<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Areas Collection Object</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Areas Collection Object</H1>Description</P>
A collection of the areas, or contiguous blocks of cells, within a selection. There's no singular Area object; individual members of the <SPAN CLASS="lee">Areas</SPAN> collection are <SPAN CLASS="lee">Range</SPAN> objects. The <SPAN CLASS="lee">Areas</SPAN> collection contains one <SPAN CLASS="lee">Range</SPAN> object for each discrete, contiguous range of cells within the selection. If the selection contains only one area, the <SPAN CLASS="lee">Areas</SPAN> collection contains a single <SPAN CLASS="lee">Range</SPAN> object that corresponds to that selection.</P>
Using the Areas Collection</P>
Use the <SPAN CLASS="lee">Areas</SPAN> property to return the <SPAN CLASS="lee">Areas</SPAN> collection. The following example clears the current selection if it contains more than one area.</P>

<pre><code>If Selection.Areas.Count &lt;&gt; 1 Then Selection.Clear</code></pre>
Use <SPAN CLASS="lee">Areas</SPAN>(<SPAN CLASS="p">index</SPAN>), where <SPAN CLASS="p">index</SPAN> is the area index number, to return a single <SPAN CLASS="lee">Range</SPAN> object from the collection. The index numbers correspond to the order in which the areas were selected. The following example clears the first area in the current selection if the selection contains more than one area.</P>

<pre><code>If Selection.Areas.Count &lt;&gt; 1 Then
    Selection.Areas(1).Clear
End If</code></pre>
Some operations cannot be performed on more than one area in a selection at the same time; you must loop through the individual areas in the selection and perform the operations on each area separately. The following example performs the operation named "myOperation" on the selected range if the selection contains only one area; if the selection contains multiple areas, the example performs myOperation on each individual area in the selection.</P>

<pre><code>Set rangeToUse = Selection
If rangeToUse.Areas.Count = 1 Then
    myOperation rangeToUse
Else
    For Each singleArea in rangeToUse.Areas
        myOperation singleArea
    Next
End If</code></pre>
Properties</P>
<SPAN CLASS="eln">Application</SPAN> property, <SPAN CLASS="eln">Count</SPAN> property, <SPAN CLASS="eln">Creator</SPAN> property, <SPAN CLASS="eln">Item</SPAN> property (<SPAN CLASS="eln">Areas</SPAN> collection), <SPAN CLASS="eln">Parent</SPAN> property.</P>
<HR CLASS="rr"></FONT></BODY>
</HTML>
