<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Columns Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Columns Property</H1>Applies To</P>
<SPAN CLASS="eln">Application</SPAN><SPAN CLASS="lee"> object, </SPAN><SPAN CLASS="eln">Range</SPAN><SPAN CLASS="lee"> object, </SPAN><SPAN CLASS="eln">Worksheet</SPAN><SPAN CLASS="lee"> object.</SPAN></P>
<SPAN CLASS="lee">Description</SPAN></P>
<SPAN CLASS="lee">Application</SPAN> object: Returns a <SPAN CLASS="lee">Range</SPAN> object that represents all the columns on the active worksheet. If the active document isn't a worksheet, the <SPAN CLASS="lee">Columns</SPAN> property fails. Read-only.</P>
<SPAN CLASS="lee">Range</SPAN> object: Returns a <SPAN CLASS="lee">Range</SPAN> object that represents the columns in the specified range. Read-only.</P>
<SPAN CLASS="lee">Worksheet</SPAN> object: Returns a <SPAN CLASS="lee">Range</SPAN> object that represents all the columns on the specified worksheet. Read-only.</P>
Remarks</P>
Using this property without an object qualifier is equivalent to using <SPAN CLASS="cte">ActiveSheet.Columns</SPAN>.</P>
When applied to a <SPAN CLASS="lee">Range</SPAN> object that's a multiple-area selection, this property returns columns from only the first area of the range. For example, if the <SPAN CLASS="lee">Range</SPAN> object has two areas — A1:B2 and C3:D4 — <SPAN CLASS="cte">Selection.Columns.Count</SPAN> returns 2, not 4. To use this property on a range that may contain a multiple-area selection, test <SPAN CLASS="cte">Areas.Count</SPAN> to determine whether the range contains more than one area. If it does, loop over each area in the range.</P>
See Also</P>
<SPAN CLASS="eln">Rows</SPAN> property.</P>
Example</P>
This example formats the font of column one (column A) on Sheet1 as bold.</P>

<pre><code>Worksheets("Sheet1").Columns(1).Font.Bold = True</code></pre>
This example sets the value of every cell in column one in the range named "myRange" to 0 (zero).</P>

<pre><code>Range("myRange").Columns(1).Value = 0</code></pre>
This example displays the number of columns in the selection on Sheet1. If more than one area is selected, the example loops through each area.</P>

<pre><code>Worksheets("Sheet1").Activate
areaCount = Selection.Areas.Count
If areaCount &lt;= 1 Then
    MsgBox "The selection contains " &amp; _
        Selection.Columns.Count &amp; " columns."
Else
    For i = 1 To areaCount
        MsgBox "Area " &amp; i &amp; " of the selection contains " &amp; _
            Selection.Areas(i).Columns.Count &amp; " columns."
    Next i
End If</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
