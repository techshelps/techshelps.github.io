<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Cells Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Cells Property</H1>Applies To</P>
<SPAN CLASS="eln">Application</SPAN><SPAN CLASS="lee"> object, </SPAN><SPAN CLASS="eln">Range</SPAN><SPAN CLASS="lee"> object, </SPAN><SPAN CLASS="eln">Worksheet</SPAN><SPAN CLASS="lee"> object.</SPAN></P>
<SPAN CLASS="lee">Description</SPAN></P>
<SPAN CLASS="lee">Application</SPAN> object: Returns a <SPAN CLASS="lee">Range</SPAN> object that represents all the cells on the active worksheet. If the active document isn't a worksheet, this property fails. Read-only.</P>
<SPAN CLASS="lee">Range</SPAN> object: Returns a <SPAN CLASS="lee">Range</SPAN> object that represents the cells in the specified range (in other words, it does nothing). Read-only.</P>
<SPAN CLASS="lee">Worksheet</SPAN> object: Returns a <SPAN CLASS="lee">Range</SPAN> object that represents all the cells on the worksheet (not just the cells that are currently in use). Read-only.</P>
Remarks</P>
Because the <SPAN CLASS="lee">Item</SPAN> property is the <SPAN CLASS="pop">default property</SPAN> for the <SPAN CLASS="lee">Range</SPAN> object, you can specify the row and column index immediately after the <SPAN CLASS="lee">Cells</SPAN> keyword. For more information, see the <SPAN CLASS="lee">Item</SPAN> property and the examples for this topic.</P>
Using this property without an object qualifier returns a <SPAN CLASS="lee">Range</SPAN> object that represents all the cells on the active worksheet.</P>
See Also</P>
<SPAN CLASS="eln">Range</SPAN> property.</P>
Example</P>
This example sets the font size for cell C5 on Sheet1 to 14 points.</P>

<pre><code>Worksheets("Sheet1").Cells(5, 3).Font.Size = 14</code></pre>
This example clears the formula in cell one on Sheet1.</P>

<pre><code>Worksheets("Sheet1").Cells(1).ClearContents</code></pre>
This example sets the font and font size for every cell on Sheet1 to 8-point Arial.</P>

<pre><code>With Worksheets("Sheet1").Cells.Font
    .Name = "Arial"
    .Size = 8
End With</code></pre>
This example loops through cells A1:J4 on Sheet1. If a cell contains a value less than 0.001, the example replaces that value with 0 (zero).</P>

<pre><code>For rwIndex = 1 to 4
    For colIndex = 1 to 10
        With Worksheets("Sheet1").Cells(rwIndex, colIndex)
            If .Value &lt; .001 Then .Value = 0
        End With
    Next colIndex
Next rwIndex</code></pre>
This example sets the font style for cells A1:C5 on Sheet1 to italic.</P>

<pre><code>Worksheets("Sheet1").Activate
Range(Cells(1, 1), Cells(5, 3)).Font.Italic = True</code></pre>
This example scans a column of data named "myRange." If a cell has the same value as the cell immediately above it, the example displays the address of the cell that contains the duplicate data.</P>

<pre><code>Set r = Range("myRange")
For n = 1 To r.Rows.Count
    If r.Cells(n, 1) = r.Cells(n + 1, 1) Then
        MsgBox "Duplicate data in " &amp; r.Cells(n + 1, 1).Address
    End If
Next n</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
