<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SQLExecQuery Function</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>SQLExecQuery Function</H1>Description</P>
Don't use <SPAN CLASS="lee">SQLExecQuery</SPAN> and the other ODBC functions in the XLODBC.XLA add-in; use the objects, methods, and properties in the Data Access Objects (DAO) library instead.</P>
<SPAN CLASS="lee">SQLExecQuery</SPAN> executes a query on a data source with a connection that has been established with <SPAN CLASS="lee">SQLOpen</SPAN>.</P>
<SPAN CLASS="lee">SQLExecQuery</SPAN> executes only the query. Use <SPAN CLASS="lee">SQLRetrieve</SPAN> or <SPAN CLASS="lee">SQLRetrieveToFile</SPAN> to get the results.</P>
This function is contained in the Xlodbc.xla add-in (ODBC Add-In on the Macintosh). Before you use the function, you must establish a reference to the add-in by using the <SPAN CLASS="eln">References</SPAN> command (<SPAN CLASS="eln">Tools</SPAN> menu).</P>
Syntax</P>
<SPAN CLASS="lee">SQLExecQuery</SPAN><SPAN CLASS="l">(</SPAN><SPAN CLASS="narg">ConnectionNum,</SPAN> <SPAN CLASS="narg">QueryText</SPAN><SPAN CLASS="l">)</SPAN></P>
<SPAN CLASS="narg">ConnectionNum</SPAN>   Required. The unique connection ID returned by <SPAN CLASS="lee">SQLOpen</SPAN> that identifies the data source you want to query.</P>
<SPAN CLASS="narg">QueryText</SPAN>   Required. The query to be executed on the data source. The query must follow the SQL syntax guidelines for the specific driver.</P>
Return Value</P>
The value returned by <SPAN CLASS="lee">SQLExecQuery</SPAN> depends on the SQL statement, as shown in the following table.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="154pt" VALIGN="TOP"><COL WIDTH="206pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">SQL statement</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Return value</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">SELECT</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The number of columns in the result set</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">UPDATE, INSERT, or DELETE</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The number of rows affected by the statement</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Any other valid SQL statement</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">0 (zero)</P></TD></TR></TBODY></TABLE>
<BR></P>If <SPAN CLASS="lee">SQLExecQuery</SPAN> is unable to execute the query on the specified data source, it returns Error 2042.</P>
If <SPAN CLASS="narg">ConnectionNum</SPAN> isn't valid, <SPAN CLASS="lee">SQLExecQuery</SPAN> returns Error 2015.</P>
Remarks</P>
Before calling <SPAN CLASS="lee">SQLExecQuery</SPAN>, you must establish a connection to a data source by using <SPAN CLASS="lee">SQLOpen</SPAN> The unique connection ID returned by <SPAN CLASS="lee">SQLOpen</SPAN> is used by <SPAN CLASS="lee">SQLExecQuery</SPAN> to send queries to the data source.</P>
If you call <SPAN CLASS="lee">SQLExecQuery</SPAN> using a previously used connection ID, any pending results on that connection are replaced by the new results.</P>
See Also</P>
<SPAN CLASS="eln">SQLBind</SPAN> function, <SPAN CLASS="eln">SQLClose</SPAN> function, <SPAN CLASS="eln">SQLError</SPAN> function, <SPAN CLASS="eln">SQLGetSchema</SPAN> function, <SPAN CLASS="eln">SQLOpen</SPAN> function, <SPAN CLASS="eln">SQLRequest</SPAN> function, <SPAN CLASS="eln">SQLRetrieve</SPAN> function, <SPAN CLASS="eln">SQLRetrieveToFile</SPAN> function.</P>
Example</P>
This example runs a query on the NWind sample database. The result of the query, displayed on Sheet1, is a list of all products that are currently on order.</P>

<pre><code>If Application.OperatingSystem Like "*Win*" Then
    databaseName = "NWind"
Else            'Macintosh.
    databaseName = "NorthWind"
End If
queryString = "SELECT * FROM product.dbf WHERE (product.ON_ORDER&lt;&gt;0)"
chan = SQLOpen("DSN=" &amp; databaseName)
SQLExecQuery chan, queryString
Set output = Worksheets("Sheet1").Range("A1")
SQLRetrieve chan, output, , , True
SQLClose chan</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
