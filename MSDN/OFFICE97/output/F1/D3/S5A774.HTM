<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Run Method</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Run Method</H1>Applies To</P>
<SPAN CLASS="eln">Application</SPAN> object, <SPAN CLASS="eln">Range</SPAN> object.</P>
Description</P>
Syntax 1: Runs a macro or calls a function. This can be used to run a macro written in Visual&nbsp;Basic or the Microsoft Excel&nbsp;4.0 macro language, or to run a function in a DLL or XLL.</P>
Syntax 2: Runs the Microsoft Excel&nbsp;4.0 macro at this location. The range must be on a macro sheet.</P>
Syntax 1</P>
<SPAN CLASS="p">expression</SPAN><SPAN CLASS="l">.</SPAN><SPAN CLASS="lee">Run</SPAN><SPAN CLASS="l">(</SPAN><SPAN CLASS="narg">Macro,</SPAN> <SPAN CLASS="p">Arg1,</SPAN> <SPAN CLASS="p">Arg2,</SPAN> <SPAN CLASS="p">...</SPAN><SPAN CLASS="l">)</SPAN></P>
Syntax 2</P>
<SPAN CLASS="p">expression</SPAN><SPAN CLASS="l">.</SPAN><SPAN CLASS="lee">Run</SPAN><SPAN CLASS="l">(</SPAN><SPAN CLASS="p">Arg1,</SPAN> <SPAN CLASS="p">Arg2,</SPAN> <SPAN CLASS="p">...</SPAN><SPAN CLASS="l">)</SPAN></P>
<SPAN CLASS="p">expression</SPAN>   Optional for <SPAN CLASS="lee">Application</SPAN>, required for <SPAN CLASS="lee">Range</SPAN>. An expression that returns the application that contains the macro, or a range on a macro sheet that contains a Microsoft Excel&nbsp;4.0 macro.</P>
<SPAN CLASS="narg">Macro</SPAN>   Required <SPAN CLASS="lee">Variant</SPAN> for Syntax 1 (not used with Syntax 2). The macro to run. This can be either a string with the macro name, a <SPAN CLASS="lee">Range</SPAN> object indicating where the function is, or a register ID for a registered DLL (XLL) function. If a string is used, the string will be evaluated in the context of the active sheet.</P>
<SPAN CLASS="p">Arg1, Arg2, ...</SPAN>   Optional <SPAN CLASS="lee">Variant</SPAN>. The arguments that should be passed to the function.</P>
Remarks</P>
You cannot use named arguments with this method. Arguments must be passed by position.</P>
The <SPAN CLASS="lee">Run</SPAN> method returns whatever the called macro returns. Objects passed as arguments to the macro are converted to values (by applying the <SPAN CLASS="lee">Value</SPAN> property to the object). This means that you cannot pass objects to macros by using the <SPAN CLASS="lee">Run</SPAN> method.</P>
Example</P>
This example shows how to call the function macro My_Func_Sum, which is defined on the macro sheet Mycustom.xlm (the macro sheet must be open). The function takes two numeric arguments (1 and 5, in this example).</P>

<pre><code>mySum = Application.Run("Mycustom.xlm!My_Func_Sum", 1, 5)
MsgBox "Macro result: " &amp; mySum</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
