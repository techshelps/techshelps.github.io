<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Sheets Collection Object</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Sheets Collection Object</H1>Description</P>
A collection of all the sheets in the specified or active workbook. The <SPAN CLASS="lee">Sheets</SPAN> collection can contain <SPAN CLASS="lee">Chart</SPAN> or <SPAN CLASS="lee">Worksheet</SPAN> objects.</P>
The <SPAN CLASS="lee">Sheets</SPAN> collection is useful when you want to return sheets of any type. If you need to work with sheets of only one type, see the object topic for that sheet type.</P>
Using the Sheets Collection</P>
Use the <SPAN CLASS="lee">Sheets</SPAN> property to return the <SPAN CLASS="lee">Sheets</SPAN> collection. The following example prints all sheets in the active workbook.</P>

<pre><code>Sheets.PrintOut</code></pre>
Use the <SPAN CLASS="lee">Add</SPAN> method to create a new sheet and add it to the collection. The following example adds two chart sheets to the active workbook, placing them after sheet two in the workbook.</P>

<pre><code>Sheets.Add type:=xlChart, count:=2, after:=Sheets(2)</code></pre>
Use <SPAN CLASS="lee">Sheets</SPAN>(<SPAN CLASS="p">index</SPAN>), where <SPAN CLASS="p">index</SPAN> is the sheet name or index number, to return a single <SPAN CLASS="lee">Chart</SPAN> or <SPAN CLASS="lee">Worksheet</SPAN> object. The following example activates the sheet named "Sheet1."</P>

<pre><code>Sheets("Sheet1").Activate</code></pre>
Use <SPAN CLASS="lee">Sheets</SPAN>(<SPAN CLASS="p">array</SPAN>) to specify more than one sheet. The following example moves the sheets named "Sheet4" and "Sheet5" to the beginning of the workbook.</P>

<pre><code>Sheets(Array("Sheet4", "Sheet5")).Move before:=Sheets(1)</code></pre>
Properties</P>
<SPAN CLASS="eln">Application</SPAN> property, <SPAN CLASS="eln">Count</SPAN> property, <SPAN CLASS="eln">Creator</SPAN> property, <SPAN CLASS="eln">HPageBreaks</SPAN> property, <SPAN CLASS="eln">Item</SPAN> property (<SPAN CLASS="eln">Sheets</SPAN> collection), <SPAN CLASS="eln">Parent</SPAN> property, <SPAN CLASS="eln">Visible</SPAN> property, <SPAN CLASS="eln">VPageBreaks</SPAN> property.</P>
Methods</P>
<SPAN CLASS="eln">Add</SPAN> method (<B>Sheets</B> collection), <SPAN CLASS="eln">Copy</SPAN> method, <SPAN CLASS="eln">Delete</SPAN> method, <SPAN CLASS="eln">FillAcrossSheets</SPAN> method, <SPAN CLASS="eln">Move</SPAN> method, <SPAN CLASS="eln">PrintOut</SPAN> method, <SPAN CLASS="eln">PrintPreview</SPAN> method, <SPAN CLASS="eln">Select</SPAN> method.</P>
<HR CLASS="rr"></FONT></BODY>
</HTML>
