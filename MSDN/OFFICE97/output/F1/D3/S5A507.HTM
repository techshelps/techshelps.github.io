<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Evaluate Method</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Evaluate Method</H1>Applies To</P>
<SPAN CLASS="eln">Application</SPAN> object, <SPAN CLASS="eln">Chart</SPAN> object, <SPAN CLASS="eln">Worksheet</SPAN> object.</P>
Description</P>
Converts a Microsoft Excel name to an object or a value.</P>
Syntax</P>
<SPAN CLASS="p">expression</SPAN><SPAN CLASS="l">.</SPAN><SPAN CLASS="lee">Evaluate</SPAN><SPAN CLASS="l">(</SPAN><SPAN CLASS="narg">Name</SPAN><SPAN CLASS="l">)</SPAN></P>
<SPAN CLASS="p">expression</SPAN>   Optional for <SPAN CLASS="lee">Application</SPAN>, required for <SPAN CLASS="lee">Chart</SPAN>, <SPAN CLASS="lee">DialogSheet</SPAN>, and <SPAN CLASS="lee">Worksheet</SPAN>. An expression that returns an object in the Applies To list.</P>
<SPAN CLASS="narg">Name</SPAN>   Required <SPAN CLASS="lee">String</SPAN>. The name of the object, using the naming convention of Microsoft Excel.</P>
Remarks</P>
The following types of names in Microsoft Excel can be used with this method:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">A1-style references. You can use any reference to a single cell in A1-style notation. All references are considered to be absolute references.</LI><LI CLASS="ULI1">Ranges. You can use the range, intersect, and union operators (colon, space, and comma, respectively) with references.</LI><LI CLASS="ULI1">Defined names. You can specify any name in the language of the macro.</LI><LI CLASS="ULI1">External references. You can use the ! operator to refer to a cell or to a name defined in another workbook — for example, <SPAN CLASS="cte">Evaluate("[BOOK1.XLS]Sheet1!A1")</SPAN>.
</LI></UL></SPAN><SPAN CLASS="nh">Note</SPAN>&nbsp;&nbsp;&nbsp;Using square brackets (for example, "[A1:C5]") is identical to calling the <SPAN CLASS="lee">Evaluate</SPAN> method with a string argument. For example, the following expression pairs are equivalent.</P>
[a1].Value = 25</P>
Evaluate("A1").Value = 25</P>
trigVariable = [SIN(45)]</P>
trigVariable = Evaluate("SIN(45)")</P>
Set firstCellInSheet = Workbooks("BOOK1.XLS").Sheets(4).[A1]</P>
Set firstCellInSheet = Workbooks("BOOK1.XLS").Sheets(4).Evaluate("A1")</P>
The advantage of using square brackets is that the code is shorter. The advantage of using <SPAN CLASS="lee">Evaluate</SPAN> is that the argument is a string, so you can either construct the string in your code or use a Visual&nbsp;Basic variable.</P>
Example</P>
This example turns on bold formatting in cell A1 on Sheet1.</P>

<pre><code>Worksheets("Sheet1").Activate
boldCell = "A1"
Application.Evaluate(boldCell).Font.Bold = True</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
