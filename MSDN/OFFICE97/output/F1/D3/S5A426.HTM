<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Charts Collection Object</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Charts Collection Object</H1>Description</P>
A collection of all the chart sheets in the specified or active workbook. Each chart sheet is represented by a <SPAN CLASS="lee">Chart</SPAN> object. This doesn't include charts embedded on worksheets or dialog sheets. For information about embedded charts, see the <SPAN CLASS="lee">Chart</SPAN> or <SPAN CLASS="lee">ChartObject</SPAN> object.</P>
Using the Charts Collection</P>
Use the <SPAN CLASS="lee">Charts</SPAN> property to return the <SPAN CLASS="lee">Charts</SPAN> collection. The following example prints all chart sheets in the active workbook.</P>

<pre><code>Charts.PrintOut</code></pre>
Use the <SPAN CLASS="lee">Add</SPAN> method to create a new chart sheet and add it to the workbook. The following example adds a new chart sheet to the active workbook and places the new chart sheet immediately after the worksheet named "Sheet1."</P>

<pre><code>Charts.Add after:=Worksheets("sheet1")</code></pre>
You can combine the <SPAN CLASS="lee">Add</SPAN> method with the <SPAN CLASS="lee">ChartWizard</SPAN> method to add a new chart that contains data from a worksheet. The following example adds a new line chart based on data in cells A1:A20 on the worksheet named "Sheet1."</P>

<pre><code>With Charts.Add
    .ChartWizard source:=Worksheets("sheet1").Range("a1:a20"), _
    gallery:=xlLine, title:="February Data"
End With</code></pre>
Use <SPAN CLASS="lee">Charts</SPAN>(<SPAN CLASS="p">index</SPAN>), where index is the chart-sheet index number or name, to return a single <SPAN CLASS="lee">Chart</SPAN> object. The following example changes the color of series one on chart sheet one to red.</P>

<pre><code>Charts(1).SeriesCollection(1).Interior.Color = RGB(255, 0, 0)</code></pre>
The <SPAN CLASS="lee">Sheets</SPAN> collection contains all the sheets in the workbook (both chart sheets and worksheets). Use <SPAN CLASS="lee">Sheets</SPAN>(<SPAN CLASS="p">index</SPAN>), where <SPAN CLASS="p">index</SPAN> is the sheet name or number, to return a single sheet.</P>
Properties</P>
<SPAN CLASS="eln">Application</SPAN> property, <SPAN CLASS="eln">Count</SPAN> property, <SPAN CLASS="eln">Creator</SPAN> property, <SPAN CLASS="eln">HPageBreaks</SPAN> property, <SPAN CLASS="eln">Item</SPAN> property (<SPAN CLASS="eln">Charts</SPAN> collection), <SPAN CLASS="eln">Parent</SPAN> property, <SPAN CLASS="eln">Visible</SPAN> property, <SPAN CLASS="eln">VPageBreaks</SPAN> property.</P>
Methods</P>
<SPAN CLASS="eln">Add</SPAN> method (<SPAN CLASS="eln">Charts</SPAN> collection), <SPAN CLASS="eln">Copy</SPAN> method, <SPAN CLASS="eln">Delete</SPAN> method, <SPAN CLASS="eln">Move</SPAN> method, <SPAN CLASS="eln">PrintOut</SPAN> method, <SPAN CLASS="eln">PrintPreview</SPAN> method, <SPAN CLASS="eln">Select</SPAN> method.</P>
<HR CLASS="rr"></FONT></BODY>
</HTML>
