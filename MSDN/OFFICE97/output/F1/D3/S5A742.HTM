<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RegisteredFunctions Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>RegisteredFunctions Property</H1>Applies To</P>
<SPAN CLASS="eln">Application</SPAN> object.</P>
Description</P>
Returns information about functions in either dynamic-link libraries (DLLs) or code resources that were registered with the REGISTER or REGISTER.ID macro functions. Read-only <B>Variant</B>.</P>
Syntax</P>
<SPAN CLASS="p">expression</SPAN><SPAN CLASS="l">.</SPAN><SPAN CLASS="lee">RegisteredFunctions</SPAN><SPAN CLASS="l">(</SPAN><SPAN CLASS="narg">Index1,</SPAN> <SPAN CLASS="narg">Index2</SPAN><SPAN CLASS="l">)</SPAN></P>
<SPAN CLASS="p">expression</SPAN>   Required. An expression that returns an <SPAN CLASS="lee">Application</SPAN> object.</P>
<SPAN CLASS="narg">Index1</SPAN>   Optional <SPAN CLASS="lee">Variant</SPAN>. The name of the DLL or code resource.</P>
<SPAN CLASS="narg">Index2</SPAN>   Optional <SPAN CLASS="lee">Variant</SPAN>. The name of the function.</P>
Remarks</P>
If you don't specify the index arguments, this property returns an array that contains a list of all registered functions. Each row in the array contains information about a single function, as shown in the following table.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="74pt" VALIGN="TOP"><COL WIDTH="286pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Column</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Contents</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"></P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">1</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The name of the DLL or code resource </P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">2</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">The name of the procedure in the DLL or code resource</P></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">3</P></TD><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Strings specifying the data types of the return values, and the number and data types of the arguments</P></TD></TR></TBODY></TABLE>
<BR></P>If there are no registered functions, this property returns <SPAN CLASS="lee">Null</SPAN>.</P>
Example</P>
This example creates a list of registered functions, placing one registered function in each row on Sheet1. Column A contains the full path and file name of the DLL or code resource, column B contains the function name, and column C contains the argument data type code.</P>

<pre><code>theArray = Application.RegisteredFunctions
If IsNull(theArray) Then
    MsgBox "No registered functions"
Else
    For i = LBound(theArray) To UBound(theArray)
        For j = 1 To 3
            Worksheets("Sheet1").Cells(i, j).Formula = theArray(i, j)
        Next j
    Next i
End If</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
