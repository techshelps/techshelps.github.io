<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SQLBind Function</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>SQLBind Function</H1>Description</P>
Don't use <SPAN CLASS="lee">SQLBind</SPAN> and the other ODBC functions in the Xlodbc.xla add-in; use the objects, methods, and properties in the Data Access Objects (DAO) library instead.</P>
<SPAN CLASS="lee">SQLBind</SPAN> specifies where results are placed when they're retrieved with <SPAN CLASS="lee">SQLRetrieve</SPAN> or <SPAN CLASS="lee">SQLRetrieveToFile</SPAN>. Use <SPAN CLASS="lee">SQLBind</SPAN> to change the column order of the result set from a query, or to place the result set columns in nonadjacent worksheet columns.</P>
This function is contained in the Xlodbc.xla add-in (ODBC Add-In on the Macintosh). Before you use the function, you must establish a reference to the add-in by using the <SPAN CLASS="eln">References</SPAN> command (<SPAN CLASS="eln">Tools</SPAN> menu).</P>
Syntax</P>
<SPAN CLASS="lee">SQLBind</SPAN><SPAN CLASS="l">(</SPAN><SPAN CLASS="narg">ConnectionNum,</SPAN> <SPAN CLASS="narg">Column,</SPAN> <SPAN CLASS="narg">Reference</SPAN><SPAN CLASS="l">)</SPAN></P>
<SPAN CLASS="narg">ConnectionNum</SPAN>   Required. The unique connection ID (returned by <SPAN CLASS="lee">SQLOpen</SPAN>) of the data source for which you want to bind results.</P>
<SPAN CLASS="narg">Column</SPAN>   Optional. The column number of the result set you want to bind. Columns in the result set are numbered from left to right, starting with 1. If you omit <SPAN CLASS="narg">Column</SPAN>, all bindings for <SPAN CLASS="narg">ConnectionNum</SPAN> are removed.</P>
Column 0 (zero) contains row numbers for the result set. You can return the row numbers by binding column 0 (zero).</P>
<SPAN CLASS="narg">Reference</SPAN>   Optional. A <SPAN CLASS="lee">Range</SPAN> object that specifies the location of a single cell on a worksheet where you want the results to be bound. If <SPAN CLASS="narg">Reference</SPAN> is omitted, binding is removed for the column.</P>
Return Value</P>
This function returns an array that lists the bound columns for the current connection, by column number.</P>
If <SPAN CLASS="lee">SQLBind</SPAN> is unable to bind the column to the cell in the specified reference, it returns Error 2042.</P>
If <SPAN CLASS="narg">ConnectionNum</SPAN> isn't valid or if you try to bind a cell that isn't available, <SPAN CLASS="lee">SQLBind</SPAN> returns Error 2015.</P>
If <SPAN CLASS="narg">Reference</SPAN> refers to more than a single cell, <SPAN CLASS="lee">SQLBind</SPAN> returns Error 2023.</P>
If <SPAN CLASS="lee">SQLRetrieve</SPAN> doesn't have a destination parameter, <SPAN CLASS="lee">SQLBind</SPAN> places the result set in the location indicated by <SPAN CLASS="narg">Reference</SPAN>.</P>
Remarks</P>
<SPAN CLASS="lee">SQLBind</SPAN> tells the ODBC Control Panel Administrator where to place results when they're received by way of <SPAN CLASS="lee">SQLRetrieve</SPAN> The results are placed in the reference cell and the cells immediately below it.</P>
Use <SPAN CLASS="lee">SQLBind</SPAN> if you want the results from different columns to be placed in disjoint worksheet areas.</P>
Use <SPAN CLASS="lee">SQLBind</SPAN> for each column in the result set. A binding remains valid as long as the connection specified by <SPAN CLASS="narg">ConnectionNum</SPAN> is open.</P>
Call <SPAN CLASS="lee">SQLBind</SPAN> after you call <SPAN CLASS="lee">SQLOpen</SPAN> and <SPAN CLASS="lee">SQLExecQuery</SPAN>, but before you call <SPAN CLASS="lee">SQLRetrieve</SPAN> or <SPAN CLASS="lee">SQLRetrieveToFile</SPAN>. Calls to <SPAN CLASS="lee">SQLBind</SPAN> don't affect results that have already been retrieved.</P>
See Also</P>
<SPAN CLASS="eln">SQLClose</SPAN> function, <SPAN CLASS="eln">SQLError</SPAN> function, <SPAN CLASS="eln">SQLExecQuery</SPAN> function, <SPAN CLASS="eln">SQLGetSchema</SPAN> function, <SPAN CLASS="eln">SQLOpen</SPAN> function, <SPAN CLASS="eln">SQLRequest</SPAN> function, <SPAN CLASS="eln">SQLRetrieve</SPAN> function, <SPAN CLASS="eln">SQLRetrieveToFile</SPAN> function.</P>
Example</P>
This example runs a query on the NWind sample database, and then it uses the <SPAN CLASS="lee">SQLBind</SPAN> function to display only the fourth and ninth columns of the query result set (the product name and the quantity on order) on Sheet1.</P>

<pre><code>If Application.OperatingSystem Like "*Win*" Then
    databaseName = "NWind"
Else            'Macintosh.
    databaseName = "NorthWind"
End If
queryString = "SELECT * FROM product.dbf WHERE (product.ON_ORDER&lt;&gt;0)"
chan = SQLOpen("DSN=" &amp; databaseName)
SQLExecQuery chan, queryString
Set output1 = Worksheets("Sheet1").Range("A1")
Set output2 = Worksheets("Sheet1").Range("B1")
SQLBind chan, 4, output1
SQLBind chan, 9, output2
SQLRetrieve chan
SQLClose chan</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
