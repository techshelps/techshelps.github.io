<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Range Property (Shapes Collection)</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Range Property (Shapes Collection)</H1>Applies To</P>
<B>Shapes</B> collection object.</P>
Description</P>
Returns a <SPAN CLASS="lee">ShapeRange</SPAN> object that represents a subset of the shapes in a <SPAN CLASS="lee">Shapes</SPAN> collection.</P>
Syntax</P>
<SPAN CLASS="p">expression</SPAN><SPAN CLASS="l">.</SPAN><SPAN CLASS="lee">Range</SPAN>(<SPAN CLASS="narg">Index</SPAN>)</P>
<SPAN CLASS="p">expression</SPAN>   Required. An expression that returns a <SPAN CLASS="lee">Shapes</SPAN> object.</P>
<SPAN CLASS="narg">Index</SPAN>   Required <SPAN CLASS="lee">Variant</SPAN>. The individual shapes to be included in the range. Can be an integer that specifies the index number of the shape, a string that specifies the name of the shape, or an array that contains either integers or strings.</P>
Remarks</P>
Although you can use the <SPAN CLASS="lee">Range</SPAN> property to return any number of shapes, it's simpler to use the <SPAN CLASS="lee">Item</SPAN> method if you only want to return a single member of the collection. For example, <SPAN CLASS="cte">Shapes(1)</SPAN> is simpler than <SPAN CLASS="cte">Shapes.Range(1)</SPAN>.</P>
To specify an array of integers or strings for <SPAN CLASS="narg">Index</SPAN>, you can use the <SPAN CLASS="lee">Array</SPAN> function. For example, the following instruction returns two shapes specified by name.</P>

<pre><code>Set myRange = myDocument.Shapes.Range(Array("Oval 4", "Rectangle 5"))</code></pre>
In Microsoft Excel, you cannot use this property to return a <B>ShapeRange</B> object containing all the <B>Shape</B> objects on a worksheet. Instead, use the following code:</P>

<pre><code>Worksheets(1).Shapes.Select        ' Select all shapes.
set sr = Selection.ShapeRange    ' Create ShapeRange.</code></pre>
Example</P>
This example sets the fill pattern for shapes one and three on <SPAN CLASS="cte">myDocument</SPAN>.</P>

<pre><code>Set myDocument = Worksheets(1)
myDocument.Shapes.Range(Array(1, 3)).Fill.Patterned msoPatternHorizontalBrick</code></pre>
This example sets the fill pattern for the shapes named "Oval 4" and "Rectangle 5" on <SPAN CLASS="cte">myDocument</SPAN>.</P>

<pre><code>Set myDocument = Worksheets(1)
Set myRange = myDocument.Shapes.Range(Array("Oval 4", "Rectangle 5"))
myRange.Fill.Patterned msoPatternHorizontalBrick</code></pre>
This example sets the fill pattern for shape one on <SPAN CLASS="cte">myDocument</SPAN>.</P>

<pre><code>Set myDocument = Worksheets(1)
Set myRange = myDocument.Shapes.Range(1)
myRange.Fill.Patterned msoPatternHorizontalBrick</code></pre>
This example creates an array that contains all the AutoShapes on <SPAN CLASS="cte">myDocument</SPAN>, uses that array to define a shape range, and then distributes all the shapes in that range horizontally.</P>

<pre><code>Set myDocument = Worksheets(1)
With myDocument.Shapes
    numShapes = .Count
    If numShapes &gt; 1 Then
        numAutoShapes = 1
        ReDim autoShpArray(1 To numShapes)
        For i = 1 To numShapes
            If .Item(i).Type = msoAutoShape Then
                autoShpArray(numAutoShapes) = .Item(i).Name
                numAutoShapes = numAutoShapes + 1
            End If
        Next
        If numAutoShapes &gt; 1 Then
            ReDim Preserve autoShpArray(1 To numAutoShapes)
            Set asRange = .Range(autoShpArray)
            asRange.Distribute msoDistributeHorizontally, False
        End If
    End If
End With</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
