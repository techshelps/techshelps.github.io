<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Add Method (FormatConditions Collection)</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Add Method (FormatConditions Collection)</H1>Applies To</P>
<SPAN CLASS="eln">FormatConditions</SPAN> collection object.</P>
Description</P>
Adds a new conditional format. Returns a <SPAN CLASS="lee">FormatCondition</SPAN> object that represents the new conditional format.</P>
Syntax</P>
<SPAN CLASS="p">expression</SPAN><SPAN CLASS="l">.</SPAN><SPAN CLASS="lee">Add</SPAN><SPAN CLASS="l">(</SPAN><SPAN CLASS="narg">Type,</SPAN> <SPAN CLASS="narg">Operator,</SPAN> <SPAN CLASS="narg">Formula1,</SPAN> <SPAN CLASS="narg">Formula2</SPAN><SPAN CLASS="l">)</SPAN></P>
<SPAN CLASS="p">expression</SPAN>   Required. An expression that returns a <SPAN CLASS="lee">FormatConditions</SPAN> object.</P>
<SPAN CLASS="narg">Type</SPAN>   Required <SPAN CLASS="lee">Long</SPAN>. Specifies whether the conditional format is based on a cell value or an expression. Can be either of the following <SPAN CLASS="lee">XlFormatConditionType</SPAN> constants: <SPAN CLASS="lee">xlCellValue</SPAN> or <SPAN CLASS="lee">xlExpression</SPAN>.</P>
<SPAN CLASS="narg">Operator</SPAN>   Optional <SPAN CLASS="lee">Variant</SPAN>. The conditional format operator. Can be one of the following <SPAN CLASS="lee">XlFormatConditionOperator</SPAN> constants: <SPAN CLASS="lee">xlBetween</SPAN>, <SPAN CLASS="lee">xlEqual</SPAN>, <SPAN CLASS="lee">xlGreater</SPAN>, <SPAN CLASS="lee">xlGreaterEqual</SPAN>, <SPAN CLASS="lee">xlLess</SPAN>, <SPAN CLASS="lee">xlLessEqual</SPAN>, <SPAN CLASS="lee">xlNotBetween</SPAN>, or <SPAN CLASS="lee">xlNotEqual</SPAN>. If <SPAN CLASS="narg">Type</SPAN> is <SPAN CLASS="lee">xlExpression</SPAN>, the <SPAN CLASS="narg">Operator</SPAN> argument is ignored.</P>
<SPAN CLASS="narg">Formula1</SPAN>   Optional <SPAN CLASS="lee">Variant</SPAN>. The value or expression associated with the conditional format. Can be a constant value, a string value, a cell reference, or a formula.</P>
<SPAN CLASS="narg">Formula2</SPAN>   Optional <SPAN CLASS="lee">Variant</SPAN>. The value or expression associated with the second part of the conditional format when <SPAN CLASS="narg">Operator</SPAN> is <SPAN CLASS="lee">xlBetween</SPAN> or <SPAN CLASS="lee">xlNotBetween</SPAN> (otherwise, this argument is ignored). Can be a constant value, a string value, a cell reference, or a formula.</P>
Remarks</P>
You cannot define more than three conditional formats for a range. Use the <SPAN CLASS="lee">Modify</SPAN> method to modify an existing conditional format, or use the <SPAN CLASS="lee">Delete</SPAN> method to delete an existing format before adding a new one.</P>
See Also</P>
<SPAN CLASS="eln">Formula1</SPAN> property, <SPAN CLASS="eln">Formula2</SPAN> property, <SPAN CLASS="eln">Modify</SPAN> method (<SPAN CLASS="eln">FormatCondition</SPAN> object), <SPAN CLASS="eln">Operator</SPAN> property.</P>
Example</P>
This example adds a conditional format to cells E1:E10.</P>

<pre><code>With Worksheets(1).Range("e1:e10").FormatConditions _
        .Add(xlCellValue, xlGreater, "=$a$1")
    With .Borders
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = 6
    End With
    With .Font
        .Bold = True
        .ColorIndex = 3
    End With
End With</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
