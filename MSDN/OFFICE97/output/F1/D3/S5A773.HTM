<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Rows Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>Rows Property</H1>Applies To</P>
<SPAN CLASS="eln">Application</SPAN><SPAN CLASS="lee"> object, </SPAN><SPAN CLASS="eln">Range</SPAN><SPAN CLASS="lee"> object, </SPAN><SPAN CLASS="eln">Worksheet</SPAN><SPAN CLASS="lee"> object.</SPAN></P>
<SPAN CLASS="lee">Description</SPAN></P>
<SPAN CLASS="lee">Application</SPAN> object: Returns a <SPAN CLASS="lee">Range</SPAN> object that represents all the rows on the active worksheet. If the active document isn't a worksheet, the <SPAN CLASS="lee">Rows</SPAN> property fails. Read-only.</P>
<SPAN CLASS="lee">Range</SPAN> object: Returns a <SPAN CLASS="lee">Range</SPAN> object that represents the rows in the specified range. Read-only.</P>
<SPAN CLASS="lee">Worksheet</SPAN> object: Returns a <SPAN CLASS="lee">Range</SPAN> object that represents all the rows on the specified worksheet. Read-only.</P>
Remarks</P>
Using this property without an object qualifier is equivalent to using <SPAN CLASS="cte">ActiveSheet.Rows</SPAN>.</P>
When applied to a <SPAN CLASS="lee">Range</SPAN> object that's a multiple selection, this property returns rows from only the first area of the range. For example, if the <SPAN CLASS="lee">Range</SPAN> object has two areas — A1:B2 and C3:D4 — <SPAN CLASS="cte">Selection.Rows.Count</SPAN> returns 2, not 4. To use this property on a range that may contain a multiple selection, test <SPAN CLASS="cte">Areas.Count</SPAN> to determine whether the range is a multiple selection. If it is, loop over each area in the range, as shown in the third example.</P>
See Also</P>
<SPAN CLASS="eln">Columns</SPAN> property, <B>Range</B> property (<B>Application</B>, <B>Range</B>, or <B>Worksheet</B> object).</P>
Example</P>
This example deletes row three on Sheet1.</P>

<pre><code>Worksheets("Sheet1").Rows(3).Delete</code></pre>
This example deletes rows in the current region on worksheet one where the value of cell one in the row is the same as the value in cell one in the previous row.</P>

<pre><code>For Each rw In Worksheets(1).Cells(1, 1).CurrentRegion.Rows
    this = rw.Cells(1, 1).Value
    If this = last Then rw.Delete
    last = this
Next</code></pre>
This example displays the number of rows in the selection on Sheet1. If more than one area is selected, the example loops through each area.</P>

<pre><code>Worksheets("Sheet1").Activate
areaCount = Selection.Areas.Count
If areaCount &lt;= 1 Then
    MsgBox "The selection contains " &amp; _
        Selection.Rows.Count &amp; " rows."
Else
    i = 1
    For Each a In Selection.Areas
        MsgBox "Area " &amp; i &amp; " of the selection contains " &amp; _
            a.Rows.Count &amp; " rows."
        i = i + 1
    Next a
End If</code></pre>
<HR CLASS="rr"></FONT></BODY>
</HTML>
