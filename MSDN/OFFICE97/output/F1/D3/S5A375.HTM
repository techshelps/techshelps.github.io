<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>AddIns Collection Object</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2>
	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H1>AddIns Collection Object</H1>Description</P>
A collection of <SPAN CLASS="lee">AddIn</SPAN> objects that represents all the add-ins available to Microsoft Excel, regardless of whether they're installed. This list corresponds to the list of add-ins displayed in the <SPAN CLASS="lee">Add-Ins</SPAN> dialog box (<SPAN CLASS="lee">Tools</SPAN> menu).</P>
Using the AddIns Collection</P>
Use the <SPAN CLASS="lee">AddIns</SPAN> method to return the <SPAN CLASS="lee">AddIns</SPAN> collection. The following example creates a list that contains the names and installed states of all the available add-ins.</P>

<pre><code>Sub DisplayAddIns()
    Worksheets("Sheet1").Activate
    rw = 1
    For Each ad In Application.AddIns
        Worksheets("Sheet1").Cells(rw, 1) = ad.Name
        Worksheets("Sheet1").Cells(rw, 2) = ad.Installed
        rw = rw + 1
    Next
End Sub</code></pre>
Use the <SPAN CLASS="lee">Add</SPAN> method to add an add-in to the list of available add-ins. The <SPAN CLASS="lee">Add</SPAN> method adds an add-in to the list but doesn't install the add-in. Set the <SPAN CLASS="lee">Installed</SPAN> property of the add-in to <SPAN CLASS="lee">True</SPAN> to install the add-in. To install an add-in that doesn't appear in the list of available add-ins, you must first use the <SPAN CLASS="lee">Add</SPAN> method and then set the <SPAN CLASS="lee">Installed</SPAN> property. This can be done in a single step, as shown in the following example (note that you use the name of the add-in, not its title, with the <SPAN CLASS="lee">Add</SPAN> method).</P>

<pre><code>AddIns.Add("generic.xll").Installed = True</code></pre>
Use <SPAN CLASS="lee">AddIns</SPAN>(<SPAN CLASS="p">index</SPAN>) where <SPAN CLASS="p">index</SPAN> is the add-in title or index number to return a single <SPAN CLASS="lee">AddIn</SPAN> object. The following example installs the Analysis Toolpak add-in.</P>

<pre><code>AddIns("analysis toolpak").Installed = True</code></pre>
Don't confuse the add-in title, which appears in the <SPAN CLASS="lee">Add-Ins</SPAN> dialog box, with the add<SPAN CLASS="lee">-</SPAN>in name, which is the file name of the add-in. You must spell the add-in title exactly as it's spelled in the <SPAN CLASS="lee">Add-Ins</SPAN> dialog box, but the capitalization doesn't have to match.</P>
Properties</P>
<SPAN CLASS="eln">Application</SPAN> property, <SPAN CLASS="eln">Count</SPAN> property, <SPAN CLASS="eln">Creator</SPAN> property, <SPAN CLASS="eln">Item</SPAN> property (<SPAN CLASS="eln">AddIns</SPAN> collection), <SPAN CLASS="eln">Parent</SPAN> property.</P>
Methods</P>
<SPAN CLASS="eln">Add</SPAN> method (<SPAN CLASS="eln">AddIns</SPAN> collection).</P>
<HR CLASS="rr"></FONT></BODY>
</HTML>
