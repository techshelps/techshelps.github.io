<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>STSHI:</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H3>STSHI:</H3>The STSHI structure has the following format:</P>
</P>
<P>// STSHI: STyleSHeet Information, as stored in a file</P>
<P>//   Note that new fields can be added to the STSHI without invalidating</P>
<P>//   the file format, because it is stored preceded by it's length.</P>
<P>//   When reading a STSHI from an older version, new fields will be zero.</P>
<P>typedef struct _STSHI</P>
<P>    {</P>
<P>    ushort    cstd;    // Count of styles in stylesheet</P>
<P>    ushort    cbSTDBaseInFile;    // Length of STD Base as stored in a file</P>
<P>    BF    fStdStylenamesWritten : 1;    // Are built-in stylenames stored?</P>
<P>    BF    : 15;    // Spare flags</P>
<P>    ushort    stiMaxWhenSaved;        // Max sti known when this file was written</P>
<P>    ushort    istdMaxFixedWhenSaved;    // How many fixed-index istds are there?</P>
<P>    ushort    nVerBuiltInNamesWhenSaved;    // Current version of built-in stylenames</P>
<P>    FTC    rgftcStandardChpStsh[3];        // ftc used by StandardChpStsh for this document</P>
<P>    } STSHI;</P>
</P>
The cb preceding the STSHI in the file is the length of the STSHI as stored in the file.<B> </B>The current definition of the STSHI structure might be longer or shorter than that stored in the file, the stylesheet reader routine needs to take this into account.</P>
</P>
stshi.cstd: The number of styles in this stylesheet.<B> </B>There will be stshi.cstd (cbSTD, STD) pairs in the file following the STSHI.<B> </B>Note that styles can be empty, i.e. cbSTD == 0.</P>
</P>
stshi.cbSTDBaseInFile: The STD structure (see below) is divided into a fixed-length "base", and a variable length part.<B> </B>The stshi.cbSTDBaseInFile indicates the size in bytes of the fixed-length base of the STD as it was written in this file.<B> </B>If the STD base is grown in a future version, the file format doesn't change, because the stylesheet reader can discard parts it doesn't know about, or use defaults if the file's STD is not as large as it was expecting.<B> </B>(Currently, stshi.cbSTDBaseInFile is 8.)</P>
</P>
stshi.fStdStylenamesWritten: Previous versions of Word did not store the style name if the style was a built-in style; Word 6.0 does, for compatibility with future versions.<B> </B>Note that the built-in stylenames may need to be "regenerated" if the file is opened in a different language or if stshi.nVerBuiltInNamesWhenSaved doesn't match the expected value.</P>
</P>
stshi.stiMaxWhenSaved: This indicates the last built-in style known to the version of Word that saved this file.</P>
</P>
stshi.istdMaxFixedWhenSaved: Each array of styles has some fixed-index styles at the beginning.<B> </B>This indicates the number of fixed-index positions reserved in the stylesheet when it was saved.</P>
</P>
stshi.nVerBuiltInNamesWhenSaved: Since built-in stylenames are saved with the document, this provides an way to see if the saved names are the same "version" as the names in the version of Word that is loading the file.<B> </B>If not, the built-in stylenames need to be "regenerated", i.e. the old names need to be replaced with the new.</P>
</P>
stshi.rgftcStandardChpStsh: This is the default fonts for this stylesheet.  The first is for Asci characters (0-127), the second is for Far East characters, and the third is the default font for non-Far East, non-Asci text. See notes on sprmCRgftcX for details.</P>
</P></BODY></HTML>
