<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Create your Debug Flag</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H2>Create your Debug Flag</H2><P CLASS="t">It's a good idea to create a global constant for debugging (for example: Dim Constant bDEBUG = True|False) and set up your error handling so you can turn specific error trapping on or off depending on the value of your constant. Before sending your add-in to be tested, you can set the constant to False and your project will handle errors in the exact manner your users will see. Sometimes a&nbsp;second flag is appropriate if you wish to turn on or off logging functions embedded in your code, and you want this code to run in both the debug and non-debug mode.</P>
<P CLASS="t">The use of a bDEBUG flag has many other applications. You can display developer-only message boxes, write to development-only log files, and/or control&nbsp;other operations you may wish to have available conditionally during development.</P></FONT>
</FONT></BODY></HTML>
