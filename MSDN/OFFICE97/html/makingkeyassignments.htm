<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Making Key Assignments</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<h2><a name="makingkeyassignments"></a>Making Key Assignments</h2>
<p>
You can assign actions to key combinations by using a special key assignment macro. For example, suppose you frequently print the currently selected record. You can assign this task to a key combination, such as CTRL+R. Then, whenever you want to print the current record—no matter what form is active—you can just press CTRL+R. You can make as many key assignments as you want in your application.</p>
<p>
When you press a key combination in an open database, Microsoft Access looks for a key assignment macro called AutoKeys. If it finds a macro that assigns actions to the key combination you pressed, Microsoft Access carries out the actions.</p>
<p>
<img src="abac01_26.gif" border=0></p>
<p>
Tip   For even greater control over keystrokes, you can use a form or control’s KeyDown or KeyPress events to check which key the user pressed and respond appropriately. Use these events, in conjunction with the <b>KeyPreview</b> property, when you want to have different key assignments for each form or control in your application. For more information, see Chapter 6, <a href="respondingtoevents.htm">“Responding to Events.”</a></p>
<p>
<b><font face="Symbol"><span style="font-family:symbol">&#219;</span></font>&#09;To assign a set of actions to a key combination</b>
<ol>
<li>
In the Database window, click the <b>Macro</b> tab and then click <b>New</b>.<p>
<img src="abac01_27.gif" border=0></p>
</li>
<li>
Display the <b>Macro Name</b> column by clicking <b>Macro Names</b> on the toolbar. In the <b>Macro Name</b> column, type the key combination you want from the table following this procedure.<p>
Important   You use a special syntax (the Visual Basic <b>SendKeys</b> statement syntax) to specify the key combination. For a full description and examples of the <b>SendKeys</b> statement syntax, search the Help index for “SendKeys statement.”</p>
</li>
<li>
In the <b>Action</b> column, enter the actions you want this key combination to carry out.</li>
<li>
Save the macro with the name AutoKeys.<p>
Microsoft Access makes the key assignment immediately. When you press the key combination, Microsoft Access carries out the actions.</p>
<p>
<img src="abac01_28.gif" border=0></p>
</li>
</ol>
<p>
If you want the key assignment to be active only under certain conditions, enter an expression that specifies the conditions in the <b>Condition</b> column. To display the <b>Condition</b> column, click <b>Conditions</b> on the toolbar.</p>
<p>
If you want to make several key assignments at once, create a macro for each key combination. Put the macros in a macro group named AutoKeys.</p>
<p>
The following table gives the <b>SendKeys</b> syntax for some commonly used key combinations.</p>
<table>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">SendKeys syntax example</b></td>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Key combination</b></td>
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">^A</b> or <b>^4</b></td>
<TD>
CTRL+ any letter or number key</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">{F1}</b></td>
<TD>
F1 (or other function key)</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">^{F1}</b></td>
<TD>
CTRL+F1 (or other function key)</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">+{F1}</b></td>
<TD>
SHIFT+F1 (or other function key)</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">%+{ F1}</b></td>
<TD>
ALT+SHIFT+F1 (or other function key)</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
</table>
<p>
<b>Note</b>&nbsp;&nbsp;&nbsp;If you assign a set of actions to a key combination that is already being used by Microsoft Access (for example, CTRL+C for <b>Copy</b>), the actions that you assign to this key combination in the key assignment macro replace the Microsoft Access key assignment in all Microsoft Access windows in the current database. If you have a custom menu command that you want associated with a key combination, you must define the key combination in the AutoKeys macro group. You can display text for the key combination with the menu command by specifying its <b>ShortcutText</b> property.</p>
<h5>Example</h5>
<h5>Assigning the Print Current Record Command to a Key Combination</h5>
<p>
Northwind sales representatives frequently want to print the current record in either the Orders form or the ProductsPopup form. You can provide a convenient way for them to perform this task without having to go through the selection and print procedures each time: Assign these actions to the CTRL+R key combination.</p>
<p>
Create a macro named AutoKeys. Type <b>^R</b> (the Visual Basic <b>SendKeys</b> statement syntax for CTRL+R) in the <b>Macro Name</b> column, then select the RunMacro action and enter the PrintCurrentRecord macro as the action argument. (The Orders database includes the PrintCurrentRecord macro, which selects and then prints the current record. You can see how this macro works by opening it in Design view; then you can import the macro into your database if you want.)</p>
<p>
If the user presses CTRL+R when the active window is not a form, such as while viewing a report in Print Preview, Microsoft Access displays an error message indicating that there is no current record. You can enter a condition to ensure that the key assignment is in effect only when a form is the active window.</p>
<p>
The UtilityFunctions module in the Orders database includes a Visual Basic function named IsForm that you can use to check whether the active window is a form.</p>
<p>
<img src="abac01_29.gif" border=0></p>
<p>
If the active window is a form, the IsForm function returns a value of -1, which means the condition is true. If the form isn’t open, the function returns a value of 0, which means the condition is false.</p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;For information on how to write and use Visual Basic functions, see Chapter 2, <a href="introducingvisualbasic.htm">“Introducing Visual Basic.”</a></p>
<p>
Save the AutoKeys macro. Whenever a form is the active window, pressing CTRL+R now runs the PrintCurrentRecord macro, which selects and prints the current record. This key assignment is in effect every time you open the Orders database.</p>
</FONT></FONT></BODY>
</HTML>
