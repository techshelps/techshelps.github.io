<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using a Worksheet to Store Workspaces</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H1>Using a Worksheet to Store Workspaces</H1><P CLASS="t">As an alternative to using type structures, you can add a worksheet to your project and record all the values that you wish to save. Ideally, you would give each cell a descriptive range name. You then read these values when you need to restore the workspace. In theory, it's much slower to read and write values from a worksheet rather than storing values in an array. In practice, there is almost no difference, as the number of items being stored is relatively small.</P>
<P CLASS="t">The advantage of using a worksheet is that the workspace settings will not be lost if something causes your variables to lose their initialization when a project is reset (also known as <I>state loss</I>). If you do use variables to store your workspace settings, make sure that your add-in includes reasonable defaults to fall back on if state loss occurs.</P>
<P></P>
<P></P>
<P></P>
<P CLASS="t">The user of your add-in should rarely experience state loss at run time, but during development this occurs every time a module is edited and/or compiled. Microsoft Excel will warn you before state loss occurs if you check the box labeled Notify Before State Loss in the Tools/Options/General dialog box under the VBE (shown&nbsp;below).</P>
<P CLASS="a">    <img src="CH1_04.gif"></P>
<P CLASS="t">If your add-in is performance-oriented and you need every millisecond, you can implement a dual storage routine. When in the debug mode, write the values to a worksheet. When your add-in is ready for distribution, have your code store the workspace values in an array.</P></FONT>
</FONT></BODY></HTML>
