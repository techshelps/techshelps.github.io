<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Getting the Instance and Windows Handles</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H2>Getting the Instance and Windows Handles</H2><P CLASS="t">To program in the Windows environment, it is sometimes helpful to find out the Microsoft Excel instance handle (hInst) or top-level window handle (hWnd). Two special functions, xlGetInst and xlGetHwnd, have been provided for this purpose. These functions require special care under Win32. This is because sizeof(HWND) on Win32 is a long but the field used to receive the HWND parameter in the XLOPER structure is a short. Consequently the high word of the actual Microsoft Excel HWND is truncated. To work around this problem call xlGetHwnd to get the low word of the actual hwnd, then iterate the list of top-level windows and look for a match with the returned low word. This code illustrates the technique:</P>

<pre><code><FONT FACE="Courier" SIZE="2"> typedef struct _EnumStruct {
    HWND        hwnd;
    unsigned short    wLoword;
} EnumStruct;

#define CLASS_NAME_BUFFER    50

/*
**
** Function: EnumProc
**
** Comments:  Used to find the hWnd in the Win32 version of Excel.
**            This is the callback routine that checks each hwnd.    
**
** Arguments: hwnd - The hwnd of the window currently being looked at
**            EnumStruct * - A structure containing loword of hwnd of
**                     interest and space to return full hwnd.
**
** Returns:   BOOL - indicates success or failure
**</FONT></code></pre>
<P></P>
<P></P>
<P></P>

<pre><code><FONT FACE="Courier" SIZE="2">** Date                Developer                Action
** --------------------------------------------------------
*/
BOOL CALLBACK EnumProc(HWND hwnd, EnumStruct * pEnum)
{
    // first check class of the window.  Must be "XLMAIN"
    char szClass[CLASS_NAME_BUFFER+1];

    GetClassName(hwnd, szClass, CLASS_NAME_BUFFER);

    if(!lstrcmpi(szClass, "XLMAIN"))
    {
        // if that is a match, check the loword of the window handle
        if(LOWORD((DWORD)hwnd) == pEnum-&gt;wLoword)
        {
            pEnum-&gt;hwnd = hwnd;
            return FALSE;
        }
    }
    // no match continue the enumeration
    return TRUE;
}

/*
**
** Function: GetHwnd
**
** Comments:  Used to find the hWnd in the Win32 version of Excel.
**            This routine sets up the callback and checks the results.
**
** Arguments: pHwnd - This is actually the returned hwnd
**
** Returns:   BOOL - Indicating success or failure.
**
** Date                Developer                Action
** --------------------------------------------------------
*/
BOOL GetHwnd(HWND *pHwnd)
{
    XLOPER x;</FONT></code></pre>
<P></P>
<P></P>
<P></P>

<pre><code><FONT FACE="Courier" SIZE="2">    // Get the loword of the hwnd
    if(Excel4(xlGetHwnd, &amp;x, 0) == xlretSuccess)
    {
        EnumStruct enm;

        // Set up the structure
        enm.hwnd = NULL;
        enm.wLoword = x.val.w;

        // Start the enumeration
        EnumWindows((WNDENUMPROC)EnumProc, (LPARAM) &amp;enm);

        // Check results
        if(enm.hwnd != NULL)
        {
            *pHwnd = enm.hwnd;
            return TRUE;
        }
    }
        return FALSE;
}
</FONT></code></pre>
<P CLASS="t">While it is possible to obtain the instance handle, under Win32 it is not as useful as it was under Win16. The window handle is useful for creating child windows and custom Windows dialog boxes.</P></FONT>
</FONT></BODY></HTML>
