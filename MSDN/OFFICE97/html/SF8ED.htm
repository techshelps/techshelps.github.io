<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>xlSet</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H2>xlSet</H2><P CLASS="t">This function puts constant values into cells or ranges very quickly.</P>
<P CLASS="t">If successful, returns TRUE (xltypeBool). If unsuccessful, returns FALSE.</P>
<H4 CLASS="h4"><A NAME="sec0"></A>Syntax</H4>
<pre><code><FONT FACE="Courier" SIZE="2">Excel4(xlSet, LPXLOPER pxRes, 2, LPXLOPER pxReference,<BR>LPXLOPER pxValue);
</FONT></code></pre>
<P CLASS="term1"><I>pxReference</I> (xltypeRef or xltypeSRef)</P>
<P CLASS="dt1">A rectangular reference describing the target cell or cells. The reference must describe adjacent cells.</P>
<P CLASS="term1"><I>pxValue</I></P>
<P CLASS="dt1">The value to put in the cell or cells. For more information, see the following "Remarks" section.</P>
<P></P>
<H4 CLASS="h4"><A NAME="sec1"></A>Remarks</H4><H5 CLASS="h5"><A NAME="sec2"></A>pxValue Argument</H5><P CLASS="t"><I>pxValue</I> can either be a value or an array. If it is a value, the entire destination range is filled with that value. If it is an array (xltypeMulti), the elements of the array are put into the corresponding locations in the rectangle.</P>
<P CLASS="t">If you use a horizontal array for the second argument, it is duplicated down to fill&nbsp;the entire rectangle. If you use a vertical array, it is duplicated right to fill the&nbsp;entire rectangle. If you use a rectangular array, and it is too small for the rectangular range you want to put it in, that range is padded with #N/As.</P>
<P CLASS="t">To clear an element of the destination rectangle, use an xltypeNil XLOPER in the source array. To clear the entire destination rectangle, omit the second argument.</P>
<H5 CLASS="h5"><A NAME="sec3"></A>Restrictions</H5><P CLASS="t">xlSet cannot be undone. In addition, it destroys any undo information that may have been available before.</P>
<P CLASS="t">xlSet can put only constants, not formulas, into cells.</P>
<P CLASS="t">xlSet behaves as a Class 3 command-equivalent function; that is, it is available only inside a DLL when the DLL is called from an object, macro, menu, toolbar, shortcut key, or the Run button in the Macro dialog box (accessed from the Tools&nbsp;menu).</P>
<P></P>
<P></P>
<P></P>
<H4 CLASS="h4"><A NAME="sec4"></A>Example</H4><P CLASS="t">The following example fills B205:B206 with the value that was passed in from a&nbsp;macro.</P>
<P CLASS="t">\SAMPLES\EXAMPLE\EXAMPLE.C</P>

<pre><code><FONT FACE="Courier" SIZE="2">short WINAPI xlSetExample(short int iVal)
{
    XLOPER xRef, xValue;

    xRef.xltype = xltypeSRef;
    xRef.val.sref.count = 1;
    xRef.val.sref.ref.rwFirst = 204;
    xRef.val.sref.ref.rwLast = 205;
    xRef.val.sref.ref.colFirst = 1;
    xRef.val.sref.ref.colLast = 1;
    xValue.xltype = xltypeInt;
    xValue.val.w = iVal;
    
    Excel4(xlSet, 0, 2, (LPXLOPER)&amp;xRef, (LPXLOPER)&amp;xValue);
    return 1;
}
</FONT></code></pre>
<H4 CLASS="h4"><A NAME="sec5"></A>Related Function</H4><P CLASS="t">xlCoerce</P></FONT>
</FONT></BODY></HTML>
