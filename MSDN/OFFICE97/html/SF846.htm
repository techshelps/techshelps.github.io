<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Excel</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H2>Excel</H2><P CLASS="t">Framework library function. This is a wrapper for the Excel4 function. It checks to see that none of the arguments is zero, which would indicate that a temporary XLOPER failed. If an error occurs, it prints a debug message. When finished, it frees all temporary memory.</P>
<P CLASS="t">Returns one of the following (int).</P>

<TABLE COLS="4" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="30pt" VALIGN="TOP"><COL WIDTH="70pt" VALIGN="TOP"><COL WIDTH="247pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="thf"><B>Value</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="th"><B>Return code</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="th"><B>Description</B></P></FONT></TD></TR><TR><TD COLSPAN="4" VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">0</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">xlretSuccess</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">The function was called successfully. This does not mean that the function did not return a Microsoft Excel error value; to find that out, you have to look at the resulting XLOPER.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">1</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">xlretAbort</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">An abort occurred (internal abort). You might get this if a macro closes its own macro sheet by calling CLOSE, or if Microsoft Excel is out of memory. In this case you must exit immediately. The DLL can call only xlFree before it exits. The user will be able to save any work interactively using the Save command on the File menu.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">2</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">xlretInvXlfn</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">An invalid function number was supplied. If you are using constants from XLCALL.H, this shouldn't happen.</P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P></P>
<P></P>
<P></P>

<TABLE COLS="4" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="30pt" VALIGN="TOP"><COL WIDTH="70pt" VALIGN="TOP"><COL WIDTH="247pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="thf"><B>Value</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="th"><B>Return code</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="th"><B>Description</B></P></FONT></TD></TR><TR><TD COLSPAN="4" VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">4</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">xlretInvCount</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">An invalid number of arguments was entered. Remember that&nbsp;no Microsoft Excel function can take more than 30 arguments, and some require a fixed number of arguments.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">8</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">xlretInvXloper</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">An invalid XLOPER structure or an argument of the wrong type was used.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">16</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">xlretStackOvfl</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">(Windows only)  A stack overflow occurred. Use xlStack to&nbsp;monitor the amount of room left on the stack. If possible, avoid allocating large local (automatic) arrays on the stack ; make them static. (Note that a stack overflow may occur without being detected.)</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">32</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">xlretFailed</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">A command-equivalent function failed. This is equivalent to a macro command displaying the macro error alert dialog&nbsp;box.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">64</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">xlretUncalced</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">An attempt was made to dereference a cell that has not been calculated yet, because it was scheduled to be recalculated after the current cell. In this case the DLL needs to exit immediately. It can call only xlFree before it exits. For more information, see "Dealing with Uncalculated Cells" on page&nbsp;196.</P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<H4 CLASS="h4"><A NAME="sec0"></A>Syntax</H4>
<pre><code><FONT FACE="Courier" SIZE="2">Excel(int iFunction, LPXLOPER pxRes, int iCount, <BR>LPXLOPER argument1,&nbsp;...)
</FONT></code></pre>
<P CLASS="term1"><I>iFunction </I>(int)</P>
<P CLASS="dt1">A number indicating the command, function, or special function you want to call. For a list of valid <I>iFunction</I> values and related information, see the<B> </B>"Remarks" section under "Excel4" on page 215.</P>
<P CLASS="term1"><I>pxRes</I> (LPXLOPER)</P>
<P CLASS="dt1">A pointer to an allocated XLOPER (10 bytes) that will hold the result of the evaluated function.</P>
<P CLASS="term1"><I>iCount</I> (int)</P>
<P CLASS="dt1">The number of arguments that will be passed to the function.</P>
<P CLASS="term1"><I>argument1</I>, ... (LPXLOPER)</P>
<P CLASS="dt1">The optional arguments to the function. All arguments must be pointers to XLOPERs.</P>
<P></P>
<P></P>
<P></P>
<P></P>
<H4 CLASS="h4"><A NAME="sec1"></A>Example</H4><P CLASS="t">This example passes a bad argument to the Excel function, which sends a message to the debugging terminal.</P>
<P CLASS="t">\SAMPLES\EXAMPLE\EXAMPLE.C</P>

<pre><code><FONT FACE="Courier" SIZE="2">short WINAPI ExcelExample(void)
{
    Excel(xlcDisplay, 0, 1, 0);
    return 1;
}
</FONT></code></pre>
<H4 CLASS="h4"><A NAME="sec2"></A>Related Function</H4><P CLASS="t">Excel4</P></FONT>
</FONT></BODY></HTML>
