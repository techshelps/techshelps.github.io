<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DAO Upgraded to Version 3.5</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H2>DAO Upgraded to Version 3.5</H2><P CLASS="t">Microsoft has upgraded the Data Access Object (DAO) to version&nbsp;3.5. If your application uses DAO&nbsp;3.0, you may still reference it. Because DAO&nbsp;3.5 is designed to work well with applications designed for DAO&nbsp;3.0, you will not be required to reference the newer version. Of course, applications written in Microsoft Excel&nbsp;97 with a reference to DAO&nbsp;3.5 will not reference DAO&nbsp;3.0 if saved in Microsoft Excel&nbsp;95 format.</P>
<H3><A NAME="sec0"></A>DAO 3.5 Will Be Default if DAO 3.0 Is Not Installed</H3><P CLASS="t">If DAO&nbsp;3.0 is not installed, then Microsoft Excel&nbsp;97 will default to DAO&nbsp;3.5. You&nbsp;will want to ensure that users of your applications have the appropriate installation of DAO, as there is functionality that is specific to each.</P>
<H3><A NAME="sec1"></A>CreateObject Method and DAO</H3><P CLASS="t">Objects in DAO&nbsp;3.5 are named slightly differently than their equivalents in DAO&nbsp;3.0. For example: the DBEngine in DAO&nbsp;3.0 is referred to as DAO.DBEngine while in DAO&nbsp;3.5 it is DAO.DBEngine.35. The best way to ensure application portability is to avoid using CreateObject in either Microsoft Excel&nbsp;95 or Microsoft Excel&nbsp;97.</P>
<H3><A NAME="sec2"></A>DAO and Named Arguments</H3><P CLASS="t">Although named arguments were never supported by DAO, in some cases they would work. We discouraged the use of this practice, but there may be code that works in Excel&nbsp;95 that uses named arguments with DAO, so you cannot be sure that these arguments will be correctly identified. For example, this working Microsoft Excel&nbsp;95 code:</P>

<pre><code><FONT FACE="Courier" SIZE="2">Set dbTest = DBEngine.OpenDatabase(Name:="C:\My Documents\MyDB.mdb", _
     Exclusive:=False, _ 
     ReadOnly:=False) 'Note that the second argument has changed
</FONT></code></pre>
<P CLASS="t">Should become the following in Microsoft Excel&nbsp;97:</P>

<pre><code><FONT FACE="Courier" SIZE="2">Set dbTest = DBEngine.OpenDatabase(Name:="C:\My Documents\MyDB.mdb", _
     Options:=dbDriverComplete, _ 
     ReadOnly:=False)  'Note the corrected argument
</FONT></code></pre>
<P></P>
<P></P>
<P></P></FONT>
</FONT></BODY></HTML>
