<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Preparing Your Add-in for Installation</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<h2><a name="preparingyouradd-inforinstallation"></a>Preparing Your Add-in for Installation</h2>
<p>
After you have completed the initial phase of testing and debugging, you’re almost ready to install your add-in by using the Add-in Manager, which is available from the <b>Add-ins</b> submenu (<b>Tools</b> menu). Your users will also use the Add-in Manager to install your add-in.</p>
<p>
After your add-in is installed, its name appears in the appropriate place in Microsoft Access. If your add-in is a form wizard, for example, it appears in the list of form wizards that users see when creating a new form. Users can run your add-in by choosing it from the list.</p>
<p>
However, before you can use the Add-in Manager, you must first set several database properties and create a USysRegInfo table in your add-in’s database.</p>
<h3>Setting Database Properties</h3>
<p>
The first step in preparing your add-in for installation is to set database properties which provide general information about your add-in.</p>
<p>
<b><font face="Symbol"><span style="font-family:symbol">&#219;</span></font>&#09;To set database properties before you install your add-in</b>
<ol>
<li>
In the Database window, click <b>Database Properties</b> on the <b>File</b> menu.</li>
<li>
Click the <b>Summary</b> tab (if it’s not already selected).</li>
<li>
In the <b>Title</b>, <b>Company</b>, and <b>Comments</b> boxes, enter values that provide information about your add-in.</li>
<li>
Click <b>OK</b> to close the dialog box and save the changes that you’ve made.</li>
</ol>
<h3>Creating the USysRegInfo Table</h3>
<p>
When users install your add-in, the Add-in Manager uses a table in the add-in’s database named USysRegInfo to determine what type of add-in to install and to get general information about the add-in to display for your users. You create the USysRegInfo table in the database that contains the add-in, and then you add records that give the Add-in Manager the information it needs to install your add-in.</p>
<p>
<b>Note</b>&nbsp;&nbsp;&nbsp;Table names that start with USys or MSys are system tables that aren’t displayed in the Database window unless you select the <b>System Objects</b> check box on the <b>View</b> tab of the <b>Options</b> dialog box (<b>Tools</b> menu). The built-in Microsoft Access system tables all start with MSys. You can use the prefix USys to create your own system tables and hide them by clearing the <b>System Objects</b> check box.</p>
<p>
The simplest way to create a USysRegInfo table is to import the table from one of the wizards that comes with Microsoft Access.</p>
<p>
<b><font face="Symbol"><span style="font-family:symbol">&#219;</span></font>&#09;To create the USysRegInfo table</b>
<ol>
<li>
If your system doesn’t currently display system objects, display them. On the <b>Tools</b> menu, click <b>Options</b>, then click the <b>View</b> tab. Under <b>Show</b>, select the <b>System Objects</b> check box, then click <b>OK</b>.<p>
Microsoft Access displays the system tables (tables with names that start with MSys or USys) in the Database window. With system objects showing, your USysRegInfo table will be displayed in the list of tables in the Database window.</p>
</li>
<li>
On the <b>File</b> menu, point to <b>Get External Data</b>, then click <b>Import</b>.<p>
Microsoft Access displays the <b>Import</b> dialog box.</p>
</li>
<li>
In the <b>Look In</b> box, click the folder where Microsoft Access is installed.</li>
<li>
Click <b>Wztool80</b>, then click <b>Import</b>.<p>
Microsoft Access displays the <b>Import Objects</b> dialog box.</p>
</li>
<li>
On the <b>Tables</b> tab of the <b>Import Objects</b> dialog box, click <b>USysRegInfo</b> in the list of table objects, then click <b>OK</b>.<p>
Microsoft Access imports the table.</p>
</li>
</ol>
<p>
The USysRegInfo table imported from Wztool80 is empty. You now need to add the records that will register your add-in. The next section describes how to do this.</p>
<h3>Adding Records to the USysRegInfo Table</h3>
<p>
After you have imported a copy of the USysRegInfo table from Wztool80, you need to add records to the table. There are four fields in your USysRegInfo table: Subkey, Type, ValName, and Value. When you add records to the table, you define values in these fields as described in the following sections.</p>
<h4>Adding the First Record</h4>
<p>
The value in the Subkey field defines the names of the subkeys that the Add-in Manager creates in the Windows Registry to register your add-in. This value must be the same for all records in the USysRegInfo table. The value you enter in the Subkey field consists of two parts; the first part is called the root key, which is followed by the subkeys below it.</p>
<p>
The root key can be either <b>HKEY_CURRENT_ACCESS_PROFILE</b> or <b>HKEY_LOCAL_MACHINE</b>. If you use <b>HKEY_CURRENT_ACCESS_ PROFILE</b> and the installation is using a user profile (an alternate set of Windows Registry keys that is invoked when Microsoft Access is started with the <b>/profile</b> command-line option), the Add-in Manager adds the keys and values required to register the add-in in the user profile. If you use <b>HKEY_CURRENT_ACCESS_ PROFILE</b> and a user profile is not in use, the Add-in Manager adds the keys and values required to register the add-in in the appropriate key below <b>HKEY_LOCAL_ MACHINE</b>. If you want to make sure that your add-in is registered for all users of Microsoft Access, use <b>HKEY_LOCAL_MACHINE</b> as your root key. If you use <b>HKEY_LOCAL_MACHINE</b>, the Add-in Manager always adds the keys and values to register the add-in in the appropriate key below <b>HKEY_LOCAL_MACHINE</b>.</p>
<p>
The format of the second part of this entry depends on the kind of add-in you’re installing.</p>
<p>
<b>Entering the Subkey Value for Control Wizards, ActiveX Control Wizards, or Builders</b></p>
<p>
<img src="abac17_1.gif" border=0></p>
<p>
<img src="abac17_2.gif" border=0></p>
<p>
<img src="abac17_3.gif" border=0></p>
<p>
If the <b>Control Wizards</b> tool in the toolbox is pressed in, a control wizard is invoked when a user adds a control to a form or report with one of the control tools in the toolbox. An ActiveX control wizard is invoked when a user adds an ActiveX control, formerly called OLE controls or custom controls, to a form or report with the <b>More Controls</b> tool in the toolbox. A builder is invoked when a user clicks the <b>Build</b> button next to a property box in a property sheet. To register a control wizard, ActiveX control wizard, or builder, the format for the value you enter in the Subkey field is:</p>
<p>
<b>HKEY_CURRENT_ACCESS_PROFILE\Wizards\</b><i>WizardType</i>\<i>WizardSubType\WizardName</i></p>
<p>
Note that the first part of the value you enter in the Subkey field can be either <b>HKEY_CURRENT_ACCESS_PROFILE</b> or <b>HKEY_LOCAL_MACHINE</b>, as described earlier. The second part of the entry must begin with <b>Wizards</b>. Assuming there is no user profile in use, this causes the <b>Add-in Manager</b> to write the keys and values to register the wizard or builder in the <b>HKEY_LOCAL_MACHINE \SOFTWARE\Microsoft\Office\8.0\Access\Wizards </b>key. <i>WizardType</i> defines whether the add-in is a control wizard, ActiveX control wizard, or a builder (called a property wizard in the Windows Registry). <i>WizardSubType</i> defines the specific type of wizard. <i>WizardName</i> is the name of the key where the values to register the wizard or builder will be added.</p>
<p>
<b>Note</b>&nbsp;&nbsp;&nbsp;<i>WizardName</i> must follow Microsoft Access object-naming rules. For information on Microsoft Access object-naming rules, search the Help index for “naming conventions.”</p>
<p>
The following table describes the possible values for <i>WizardType</i> and <i>WizardSubType</i>.</p>
<table>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><i>WizardType</i></b></td>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><i>WizardSubType</i></b></td>
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Control Wizards</b></td>
<TD>
The name of the tool in the toolbox that creates the control you want to associate your wizard with. This must be the name of the tool without spaces. The names of the tools are: <b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Label</b>, <b>TextBox</b>, <b>OptionGroup</b>, <b>ToggleButton</b>, <b>OptionButton</b>, <b>CheckBox</b>, <b>ComboBox</b>, <b>ListBox</b>, <b>CommandButton</b>, <b>Image</b>, <b>UnboundObjectFrame</b>, <b>BoundObjectFrame</b>, <b>PageBreak</b>, <b>TabControl</b>, <b>SubformSubreport</b>, <b>Line</b>, and <b>Rectangle</b>.</td>
</tr>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">ActiveX Control Wizards</b></td>
<TD>
The value of the <b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Class</b> property of the ActiveX control. To see this value, open a form or report in Design view, right-click the ActiveX control, click <b>Properties</b>, and then read the value in the <b>Class</b> box. For example, DBOutl.DataOutline is the value of the <b>Class</b> property for the Microsoft Data Outline Control 1.1 included with Microsoft Access.</td>
</tr>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Property Wizards</b></td>
<TD>
The name of the property that you want the builder to be associated with. This must be the name of the property without spaces. For example, the names entered for standard Microsoft Access builders are: <b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">BackColor</b>, <b>BorderColor</b>, <b>FieldName</b>, <b>ForeColor</b>, <b>InputMask</b>, <b>MenuBar</b>, <b>LinkChildFields</b>, <b>LinkMasterFields</b>, <b>ODBCConnectStr</b>, <b>Picture</b>, and <b>ShortcutMenuBar</b>.</td>
</tr>
</table>
<h5>Entering the Subkey Value for Object Wizards</h5>
<p>
An object wizard is used to create a table, query, form, or report. An object wizard is invoked when a user clicks its name in the corresponding<b> New </b><i>Object </i>dialog box. To register an object wizard, the format for the value you enter in the Subkey field is:</p>
<p>
<b>HKEY_CURRENT_ACCESS_PROFILE\Wizards\</b><i>WizardType</i>\<i>WizardName</i></p>
<p>
Note that the first part of the value you enter in the Subkey field can be either <b>HKEY_CURRENT_ACCESS_PROFILE</b> or <b>HKEY_LOCAL_MACHINE</b>, as described earlier. The second part must begin with <b>Wizards</b>. Assuming there is no user profile in use, this causes the Add-in Manager to write the keys and values to register the wizard in <b>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft \Office\8.0\Access\Wizards</b>. <i>WizardType</i> defines what kind of object wizard is being installed. <i>WizardName</i> is the name that displays in the corresponding <b>New </b><i>Object </i>dialog box and is also the name of the key where the values to register the wizard will be added. The following table describes the possible values for <i>WizardType</i> and <i>WizardName</i>.</p>
<table>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><i>WizardType</i></b></td>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><i>WizardName</i></b></td>
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Form Wizards</b></td>
<TD>
User-defined. The name you enter will be displayed in the <b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">New Form</b> dialog box. For example, the names entered for standard Microsoft Access form wizards are: AutoForm: Columnar; AutoForm: Datasheet; AutoForm: Tabular; Chart Wizard; Form Wizard; PivotTable Wizard.</td>
</tr>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Query Wizards</b></td>
<TD>
User-defined. The name you enter will be displayed in the <b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">New Query </b>dialog box. For example, the names entered for standard Microsoft Access query wizards are: Crosstab Query Wizard, Find Duplicates Query Wizard, Find Unmatched Query Wizard, Simple Query Wizard.</td>
</tr>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Report Wizards</b></td>
<TD>
User-defined. The name you enter will be displayed in the <b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">New Report</b> dialog box. For example, the names entered for standard Microsoft Access report wizards are: AutoReport: Columnar; AutoReport: Tabular; Chart Wizard; Label Wizard; Report Wizard.</td>
</tr>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Table Wizards</b></td>
<TD>
User-defined. The name you enter will be displayed in the <b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">New Table</b> dialog box. For example, the name entered for the standard Microsoft Access table wizard is: Table Wizard.</td>
</tr>
</table>
<h5>Entering the Subkey Value for Menu Add-ins</h5>
<p>
A menu add-in is invoked when a user clicks its name on the <b>Add-ins</b> submenu (<b>Tools</b> menu.) To register a menu add-in, the format for the value you enter in the Subkey field is:</p>
<p>
<b>HKEY_CURRENT_ACCESS_PROFILE\Menu Add-Ins\</b><i>MenuAddInName</i></p>
<p>
Note that the first part of the value you enter in the Subkey field can be either <b>HKEY_CURRENT_ACCESS_PROFILE</b> or <b>HKEY_LOCAL_MACHINE</b>, as described earlier. The second part must begin with<b> Menu Add-Ins</b>. Assuming there is no user profile in use, this will cause the Add-in Manager to write the keys and values to register the menu add-in in <b>HKEY_LOCAL_MACHINE\SOFTWARE \Microsoft\Office\8.0\Access\Menu Add-Ins</b>. <i>MenuAddInName</i> defines the name that displays on the <b>Add-ins</b> submenu and is also the name of the key where the values to register the add-in will be added. To define an access key for the menu add-in so that you can use the keyboard to choose the menu add-in, type an ampersand (&amp;) before the letter that you want to be the access key.</p>
<h5>The Type, ValName, and Value Fields</h5>
<p>
No matter what kind of add-in you’re installing, for the first record, the value in the Type field must be 0 (which means “add this key”), and the ValName and Value fields must be left blank.</p>
<h4>Adding the Second and Subsequent Records</h4>
<p>
The first record in the USysRegInfo table creates a key or keys used to register your add-in. Each record following the first record defines a value added to the last key in the Windows Registry subtree. The value in the Subkey field must be the same for all records in the table. You can simply copy the value you entered in the Subkey field of the first record to the subsequent records.</p>
<p>
The value in the Type field defines the type of the value created in the Windows Registry; you can either enter 1 to create a String value (REG_SZ in Windows NT Workstation 3.51) or 4 to create a DWORD value (REG_DWORD in Windows NT Workstation 3.51).</p>
<p>
The value in the ValName field defines the name of the value. The value in the Value field defines the value itself. The number of records you need to add depends on the type of add-in you are registering.</p>
<p>
The following table describes the records you need to add to define values for control wizards, builders, or ActiveX control wizards.</p>
<table>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Type</b></td>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">ValName</b></td>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Value</b></td>
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
4</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Can Edit</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Specifies whether or not a wizard or builder can be used to modify an existing control or property of the same type. 1 = Yes, 0 = No.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
1</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Description</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
User-defined. If more than one wizard has been defined for a control, or more than one builder has been defined for a property, this string appears in the <b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Choose Builder</b> dialog box so that users can select which wizard or builder to use.</td>
</tr>
<tr valign=top>
<TD>
1</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Function</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
The function used to start the wizard or builder.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
1</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Library</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Specifies the path and name of the add-in database: |ACCDIR\<i><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">AddInDBName.mda.</i> The first part is always the same. The Add-in Manager will substitute the path to the folder where Microsoft Access is installed. The second part is the name of the database that contains your wizard or builder.</td>
</tr>
</table>
<p>
The following table describes the records you need to add to define values for object wizards.</p>
<table>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Type</b></td>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">ValName</b></td>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Value</b></td>
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
1</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Bitmap</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Specifies the path to the bitmap (.bmp) that is displayed above the description on the left side of the<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"> New </b><i>Object </i>dialog box when the wizard is selected.</td>
</tr>
<tr valign=top>
<TD>
4</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Datasource Required</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Enter this record for form and report wizards only. Specifies whether the user must specify the table or query where the object’s data comes from in the <b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">New </b><i>Object </i>dialog box before running the wizard. 1 = Yes, 0 = No.</td>
</tr>
<tr valign=top>
<TD>
1</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Description</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
User-defined. Specifies the text that is displayed on the left side of the <b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">New </b><i>Object </i>dialog box when the wizard is selected.</td>
</tr>
<tr valign=top>
<TD>
1</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Function</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
The function used to start the wizard or builder.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
4</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Index</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Specifies the order in which the wizard is displayed in the list in the <b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">New </b><i>Object </i>dialog box, where 0 is the first item in the list.</td>
</tr>
<tr valign=top>
<TD>
1</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Library</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Specifies the path and name of the add-in database: |ACCDIR\<i><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">AddInDBName.mda. </i>The first part is always the same. The Add-in Manager substitutes the path to the folder where Microsoft Access is installed. The second part is the name of the database that contains your wizard.</td>
</tr>
</table>
<p>
The following table describes the records you need to add to define values for menu add-ins.</p>
<table>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Type</b></td>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">ValName</b></td>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Value</b></td>
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
1</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Expression</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
User-defined. The name of the function used to start the wizard or builder formatted as an expression: <i><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">=FunctionName</i>()</td>
</tr>
<tr valign=top>
<TD>
1</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Library</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Specifies the path and name of the add-in database:<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"> </b>|ACCDIR\<i>AddInDBName.mda. </i>The first part is always the same. The Add-in Manager substitutes the path to the folder where Microsoft Access is installed. The second part is the name of the database that contains your menu add-in.</td>
</tr>
</table>
<h3>Using the Add-in Manager to Install an Add-in</h3>
<p>
After you create your add-in and add the USysRegInfo table, you and your users can install the add-in by using the Add-in Manager.</p>
<p>
<b><font face="Symbol"><span style="font-family:symbol">&#219;</span></font>&#09;To install an add-in using the Add-in Manager</b>
<ol>
<li>
On the <b>Tools</b> menu, point to <b>Add-ins</b>, then click <b>Add-in Manager</b>.<p>
Microsoft Access displays the <b>Add-in Manager</b> dialog box.</p>
</li>
<li>
To make the add-in you want to install appear in the list, click <b>Add New</b>. Microsoft Access displays the <b>Open</b> dialog box. Click the add-in you want to add and click <b>Open</b>. (To add an add-in located on a floppy disk, insert the floppy disk in a disk drive, click the disk drive in the <b>Look In</b> box, click the file in the <b>File Name</b> box, and then click <b>Open</b>.)<p>
Microsoft Access copies the add-in to your Office folder and adds it to the list in the <b>Available Add-ins</b> box.</p>
</li>
<li>
In the <b>Available Add-ins</b> box, click the add-in you want to install.</li>
<li>
Click <b>Install</b>.<p>
The Add-in Manager installs the add-in, and puts an x beside the add-in in the list. If the database doesn’t contain a USysRegInfo table, then the Add-in Manager generates an error.</p>
</li>
<li>
When you’re finished installing the add-in, click <b>Close</b>.</li>
</ol>
<p>
To uninstall an add-in using the Add-in Manager, click the add-in in the <b>Available Add-ins</b> box and click <b>Uninstall</b>.</p>
<p>
Once you have installed your add-in, you need to perform the second phase of testing and debugging.</p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;For information on testing and debugging your add-in, see “Testing and Debugging Your Add-in” earlier in this chapter.</p>
</FONT></FONT></BODY>
</HTML>
