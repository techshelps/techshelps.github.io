<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Variants and Objects</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H2>Variants and Objects</H2><P CLASS="t">The VariantExample function shows how you declare and call a DLL function with a Variant passed by value. A Variant passed by reference would be declared in C as a pointer to a VARIANT structure.</P>

<pre><code><FONT FACE="Courier" SIZE="2">void VariantByRef(LPVARIANT *pvar)
</FONT></code></pre>
<P CLASS="t">While it is possible to pass an object as a Variant, it is also possible to specifically declare a function that accepts only an object. An object is passed as a dispatch pointer, either by value:</P>

<pre><code><FONT FACE="Courier" SIZE="2">void ObjectByVal(LPDISPATCH pdisp)
</FONT></code></pre>
<P CLASS="t">or by reference:</P>

<pre><code><FONT FACE="Courier" SIZE="2">void ObjectByRef(LPDISPATCH *ppdisp)
</FONT></code></pre>
<P CLASS="t">When you pass a variant or object by reference, you receive a pointer. If you change what the pointer is pointing to, remember that your DLL code must free any allocated object, string, or array first. Failure to free allocations results in memory leaks. More information about freeing allocated strings and arrays appears in the following sections, and the ReleaseVariant function example that&nbsp;appears in Chapter 6 shows how this can be done for a variant variable.</P>
<P></P>
<P></P>
<P></P>
<H3><A NAME="sec0"></A>Return Values</H3><P CLASS="t">When your function returns an object, it is declared as returning a dispatch pointer:</P>

<pre><code><FONT FACE="Courier" SIZE="2">LPDISPATCH ReturnsObject(void)
</FONT></code></pre>
<P CLASS="t">Returning a Variant is simple:</P>

<pre><code><FONT FACE="Courier" SIZE="2">VARIANT ReturnsVariant(void)
</FONT></code></pre></FONT>
</FONT></BODY></HTML>
