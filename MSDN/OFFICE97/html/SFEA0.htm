<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using User-Defined Data Structures</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H1>Using User-Defined Data Structures</H1><P CLASS="t">The Type statement in Visual Basic can be used to create user-defined data structures. For example, the following Visual Basic data type and C-language structure are equivalent.</P>
<P CLASS="t">In Visual Basic:</P>

<pre><code><FONT FACE="Courier" SIZE="2">Type ARG
    i as Integer
    str as String
End Type
</FONT></code></pre>
<P CLASS="t">In C:</P>

<pre><code><FONT FACE="Courier" SIZE="2">typedef struct 
{
    short i;
    BSTR str;
} ARG;
</FONT></code></pre>
<P CLASS="t">User-defined data types cannot be passed by value; they must be passed by reference. Your C function should declare the argument as a pointer to the structure. If the structure contains BSTR values (as this example does), the rules&nbsp;discussed above apply to those values; you must test the BSTR before you&nbsp;reassign it (and free it if it is already allocated). You should not manipulate it&nbsp;directly.</P>
<P></P>
<P></P>
<P></P>
<P CLASS="t">For example, this C-language function fills a structure with a string and the length of the string:</P>

<pre><code><FONT FACE="Courier" SIZE="2">short WINAPI StructArg(ARG *parg, char *szArg)
{
    BSTR bstr;

    if (parg == NULL)
        return -1;

    // allocate a local string first; if this fails, 
    // we have not touched the passed-in string
    
    if ((bstr = SysAllocString((BSTR)szArg)) == NULL)
        return -1;

    if (parg-&gt;bstr != NULL)    // string is already assigned
        SysFreeString(parg-&gt;bstr);

    parg-&gt;i = SysStringByteLen(bstr);
    parg-&gt;bstr = bstr;

    return parg-&gt;i;
}
</FONT></code></pre>
<P CLASS="t">Declared and called from Visual Basic:</P>

<pre><code><FONT FACE="Courier" SIZE="2">Declare Function StructArg Lib "debug\ADVDLL.DLL" _
    (a As ARG, ByVal s As String) As Integer

Sub StructArgTest()
    Dim x As ARG
    MsgBox StructArg(x, "abracadabra")
    MsgBox x.str &amp; ":" &amp; str$(x.i) 'displays string and length
End Sub
</FONT></code></pre></FONT>
</FONT></BODY></HTML>
