<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIND</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H1>FIND</H1><P CLASS="t">Finds one text string (find_text) within another text string (within_text), and returns the number of the starting position of find_text, from the leftmost character of within_text. You can also use SEARCH to find one text string within another, but unlike SEARCH, FIND is case-sensitive and doesn't allow wildcard characters.</P>
<P><B>Syntax</B></P>
<P CLASS="syn"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B>FIND</B></FONT>(<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B>find_text</B></FONT>,<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B>within_text</B></FONT>,start_num)</P>
<P CLASS="dt1"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B>Find_text</B></FONT>—is the text you want to find.</P>
<UL><LI>If find_text is "" (empty text), FIND matches the first character in the search string (that is, the character numbered start_num or 1).</LI><LI>Find_text cannot contain any wildcard characters.</LI></UL><P CLASS="dt1"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B>Within_text</B></FONT>—is the text containing the text you want to find.</P>
<P CLASS="dt1">Start_num—specifies the character at which to start the search. The first character in within_text is character number 1. If you omit start_num, it is assumed to be 1.</P>
<P><B>Remarks</B></P>
<UL><LI>If find_text does not appear in within_text, FIND returns the #VALUE! error value.</LI><LI>If start_num is not greater than zero, FIND returns the #VALUE! error value.</LI><LI>If start_num is greater than the length of within_text, FIND returns the #VALUE! error value.
</LI></UL><P><B>Examples</B></P>
<P CLASS="t"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><CODE>FIND("M","Miriam McGovern")</CODE></FONT> equals 1</P>
<P CLASS="t"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><CODE>FIND("m","Miriam McGovern")</CODE></FONT> equals 6</P>
<P CLASS="t"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><CODE>FIND("M","Miriam McGovern",3)</CODE></FONT> equals 8</P>
<P CLASS="t">Suppose you have a list of parts and serial numbers on a worksheet, and you want to extract the names of the parts, but not the serial numbers, from each cell. You can use the FIND function to find the # symbol and the MID function to omit the serial number. A2:A4 contain the following parts with serial numbers, respectively: "Ceramic Insulators #124-TD45-87", "Copper Coils #12-671-6772", "Variable Resistors #116010".</P>
<P CLASS="t"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><CODE>MID(A2,1,FIND(" #",A2,1)-1)</CODE></FONT> returns "Ceramic Insulators"</P>
<P CLASS="t"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><CODE>MID(A3,1,FIND(" #",A3,1)-1)</CODE></FONT> returns "Copper Coils"</P>
<P CLASS="t"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><CODE>MID(A4,1,FIND(" #",A4,1)-1)</CODE></FONT> returns "Variable Resistors"</P></FONT>
</FONT></BODY></HTML>
