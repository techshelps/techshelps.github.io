<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>xlAbort</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H2>xlAbort</H2><P CLASS="t">This function yields the processor to other tasks in the system and checks whether the user has pressed ESC to cancel a macro.</P>
<P CLASS="t">Returns TRUE (xltypeBool) if the user has pressed ESC.</P>
<H4 CLASS="h4"><A NAME="sec0"></A>Syntax</H4>
<pre><code><FONT FACE="Courier" SIZE="2">Excel4(xlAbort, LPXLOPER pxRes, 1, LPXLOPER pxRetain)
</FONT></code></pre>
<P CLASS="term1"><I>pxRetain</I> (xltypeBool)</P>
<P CLASS="dt1">If FALSE, this function will also clear any pending abort&nbsp;(if you want to continue despite the user abort). This argument is optional; if&nbsp;omitted, this function will check for a user abort without clearing it.</P>
<H4 CLASS="h4"><A NAME="sec1"></A>Remarks</H4><H5 CLASS="h5"><A NAME="sec2"></A>Frequent Calls May Be Needed</H5><P CLASS="t">Functions that will likely take a long time must call this function frequently to yield the processor to other tasks in the system.</P>
<H5 CLASS="h5"><A NAME="sec3"></A>Avoid Sensitive Language</H5><P CLASS="t">Microsoft recommends against using the term "Abort" in your user interface. Use&nbsp;"Cancel," "Halt," or "Stop."</P>
<P></P>
<P></P>
<P></P>
<H4 CLASS="h4"><A NAME="sec4"></A>Example</H4><P CLASS="t">The following code repetitively moves the active cell on a sheet until one minute has elapsed or until you press ESC. It calls the function xlAbort occasionally. This yields the processor, allowing cooperative multitasking.</P>
<P CLASS="t">\SAMPLES\FRAMEWRK\GENERIC.C</P>

<pre><code><FONT FACE="Courier" SIZE="2">int WINAPI fDance(void)
{
    DWORD dtickStart;
    XLOPER xAbort, xConfirm;
    int boolSheet;
    int col=0;
    char rgch[32];

    // Check what kind of sheet is active. If it is
    // a worksheet or XLM macro sheet, this function will
    // move the selection in a loop to show activity.
    // In any case, it will update the status bar
    // with a countdown.

    // Call xlSheetId; if that fails the current sheet
    // is not a macro sheet or worksheet. Next, get the
    // time at which to start. Then start a while loop
    // that will run for one minute. During the while loop,
    // check if the user has pressed ESC. If true, confirm
    // the abort. If the abort is confirmed, clear the message
    // bar and return; if the abort is not confirmed, clear
    // the abort state and continue. After checking for an
    // abort, move the active cell if on a worksheet or macro.
    // Then update the status bar with the time remaining.

    // This block uses TempActiveCell(), which creates a
    // temporary XLOPER. The XLOPER contains a reference to
    // a single cell on the active sheet.
    // This function is part of the framework library.

    boolSheet = (Excel4(xlSheetId, 0, 0) == xlretSuccess);

    dtickStart = GetTickCount();

    while (GetTickCount() &lt; dtickStart + 60000L)
    {
        Excel(xlAbort, &amp;xAbort, 0);
        if (xAbort.val.bool)
        {
            Excel(xlcAlert, &amp;xConfirm, 2,
                TempStr(" Are you sure you want to cancel?"),
                TempNum(1));
</FONT></code></pre>
<P></P>
<P></P>
<P></P>

<pre><code><FONT FACE="Courier" SIZE="2">            if (xConfirm.val.bool)
            {
                Excel(xlcMessage, 0, 1, TempBool(0));
                return 1;
            }
            else
            {
                Excel(xlAbort, 0, 1, TempBool(0));
            }
        }

        if (boolSheet)     
        {
            Excel(xlcSelect, 0, 1, TempActiveCell(0,(BYTE)col));
            col = (col + 1) &amp; 3;
        }
        wsprintf(rgch," 0:%lu",
            (60000 + dtickStart - GetTickCount()) / 1000L);
        Excel(xlcMessage, 0, 2, TempBool(1), TempStr(rgch));
    }
    Excel(xlcMessage, 0, 1, TempBool(0));

    return 1;
}
</FONT></code></pre></FONT>
</FONT></BODY></HTML>
