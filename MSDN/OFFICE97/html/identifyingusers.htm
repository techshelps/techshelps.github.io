<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Identifying Users</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<h2><a name="identifyingusers"></a>Identifying Users</h2>
<p>
In your multiuser application, you may want to identify the user currently logged on to the system. This is useful for administrative functions, such as storing the user’s name with edited records to create an audit trail. Several methods are available to achieve this functionality. One involves user-level security, and another requires you to maintain your own user information.</p>
<p>
If you establish user-level security in your database, users must log on to your application with predefined user names and passwords. The user names are then available to your application through the <b>UserName</b> property of the <b>Workspace</b> object. The following function writes audit information to a record. It is assumed that the recordset rst includes the fields UserLastModified and DateTimeLastModified.</p>
<pre><code>Function WriteAuditTrail(rst As Recordset) As Integer
&#09;On Error GoTo ErrorHandler

&#09;' Edit the current record in the recordset.
&#09;rst.Edit
&#09;rst!UserLastModified = Workspaces(0).UserName
&#09;rst!DateTimeLastModified = Now
&#09;rst.Update

ErrorHandler:
&#09;Select Case Err
&#09;&#09;Case 0
&#09;&#09;&#09;' conSuccess is defined at the module level as a public constant
&#09;&#09;&#09;' of type Integer with a value of zero.
&#09;&#09;&#09;WriteAuditTrail = conSuccess
&#09;&#09;&#09;Exit Function
&#09;&#09;Case Else
&#09;&#09;&#09;MsgBox &quot;Error &quot; &amp; Err &amp; &quot;: &quot; &amp; Error, vbOKOnly, &quot;ERROR&quot;
&#09;&#09;&#09;WriteAuditTrail = Err
&#09;&#09;&#09;Exit Function
&#09;End Select

End Function
</code></pre>
<p>
If you don’t want to establish user-level security, but still require user name functionality, you can have your application prompt the user for a name and password at startup and store those values in code variables or in a temporary table. This way, you still have access to the user’s name, but you don’t have to establish user-level security in your database.</p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;For information on establishing user-level security in your database, see Chapter 14, <a href="securingyourapplication.htm">“Securing Your Application.”</a></p>
</FONT></FONT></BODY>
</HTML>
