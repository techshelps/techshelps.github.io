<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Which Should I Use?</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H1>Which Should I Use?</H1><P CLASS="t">When Microsoft Excel 4.0 shipped this was not a question. A developer wishing to extend Microsoft Excel with C would use the C API. The question is not quite so simple any longer. We now have two different extension methods each with their own strengths and weaknesses. Beyond these strengths and weaknesses there is no reason to write to one API vs. the other. If you are starting a new project, OLE Automation is generally the best choice. If you have a lot of existing code implemented using the C API, don't blindly port it to use OLE Automation just because it is the newest of the two APIs. The following discussion focuses on the compromises experienced when selecting one of the APIs over the other.</P></FONT>
</FONT></BODY></HTML>
