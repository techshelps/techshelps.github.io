<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HLOOKUP</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H1>HLOOKUP</H1><P CLASS="t">Searches for a value in the top row of a table or an array of values, and then returns a value in the same column from a row you specify in the table or array. Use HLOOKUP when your comparison values are located in a row across the top of a table of data, and you want to look down a specified number of rows. Use VLOOKUP when your comparison values are located in a column to the left of the data you want to find.</P>
<P><B>Syntax</B></P>
<P CLASS="syn"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B>HLOOKUP</B></FONT>(<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B>lookup_value</B></FONT>,<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B>table_array</B></FONT>,<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B>row_index_num</B></FONT>,range_lookup)</P>
<P CLASS="dt1"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B>Lookup_value</B></FONT>&nbsp;&nbsp;&nbsp;is the value to be found in the first row of the table. Lookup_value can be a value, a reference, or a text string.</P>
<P CLASS="dt1"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B>Table_array</B></FONT>&nbsp;&nbsp;&nbsp;is a table of information in which data is looked up. Use a reference to a range or a range name.</P>
<UL><LI>The values in the first row of table_array can be text, numbers, or logical values.</LI><LI>If range_lookup is TRUE, the values in the first row of table_array must be placed in ascending order: ...-2, -1, 0), 1, 2,&nbsp;... , A-Z, FALSE, TRUE; otherwise, HLOOKUP may not give the correct value. If range_lookup is FALSE, table_array does not need to be sorted.</LI><LI>Uppercase and lowercase text are equivalent.</LI><LI>You can put values in ascending order, left to right, by selecting the values and then clicking <FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B>Sort</B></FONT> on the <FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B>Data</B></FONT> menu. Click <FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B>Options,</B></FONT> click <FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B>Sort left to right,</B></FONT> and then click <FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B>OK.</B></FONT> Under <FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B>Sort by,</B></FONT> click the row in the list, and then click <FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B>Ascending.</B></FONT></LI></UL><P CLASS="dt1"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B>Row_index_num</B></FONT>&nbsp;&nbsp;&nbsp;is the row number in table_array from which the matching value will be returned. A row_index_num of 1 returns the first row value in table_array, a row_index_num of 2 returns the second row value in table_array, and so on. If row_index_num is less than 1, HLOOKUP returns the #VALUE! error value; if row_index_num is greater than the number of rows on table_array, HLOOKUP returns the #REF! error value.</P>
<P CLASS="dt1">Range_lookup&nbsp;&nbsp;&nbsp;is a logical value that specifies whether you want HLOOKUP to find an exact match or an approximate match. If TRUE or omitted, an approximate match is returned. In other words, if an exact match is not found, the next largest value that is less than lookup_value is returned. If FALSE, HLOOKUP will find an exact match. If one is not found, the error value #N/A is returned.</P>
<P><B>Remarks</B></P>
<UL><LI>If HLOOKUP can't find lookup_value, and range_lookup is TRUE, it uses the largest value that is less than lookup_value.</LI><LI>If lookup_value is smaller than the smallest value in the first row of table_array, HLOOKUP returns the #N/A error value.
</LI></UL><P><B>Examples</B></P>
<P CLASS="t">Suppose you have an inventory worksheet of auto parts. A1:A4 contain "Axles", 4, 5, 6. B1:B4 contain "Bearings", 4, 7, 8. C1:C4 contain "Bolts", 9, 10, 11.</P>
<P CLASS="t"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><CODE>HLOOKUP("Axles", A1:C4,2,TRUE)</CODE></FONT> equals 4</P>
<P CLASS="t"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><CODE>HLOOKUP("Bearings",A1:C4,3,FALSE)</CODE></FONT> equals 7</P>
<P CLASS="t"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><CODE>HLOOKUP("Bearings",A1:C4,3,TRUE)</CODE></FONT> equals 7</P>
<P CLASS="t"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><CODE>HLOOKUP("Bolts",A1:C4,4,)</CODE></FONT> equals 11</P>
<P CLASS="t">Table_array can also be an array constant:</P>
<P CLASS="t"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><CODE>HLOOKUP(3,{1,2,3;"a","b","c";"d","e","f"},2,TRUE)</CODE></FONT> equals "c"</P></FONT>
</FONT></BODY></HTML>
