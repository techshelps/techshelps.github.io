<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>xlFree</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H2>xlFree</H2><P CLASS="t">Allows Microsoft Excel to free auxiliary memory associated with an XLOPER. xlFree frees the auxiliary memory and resets the pointer to NULL but does not destroy other parts of the XLOPER.</P>
<P CLASS="t">This function does not return a value.</P>
<H4 CLASS="h4"><A NAME="sec0"></A>Syntax</H4>
<pre><code><FONT FACE="Courier" SIZE="2">Excel4(xlFree, 0, n, LPXLOPER px, ...)
</FONT></code></pre>
<P CLASS="term1"><I>px</I>, ...</P>
<P CLASS="dt1">One or more XLOPERs to free.</P>
<P></P>
<P></P>
<P></P>
<H4 CLASS="h4"><A NAME="sec1"></A>Remarks</H4><P CLASS="t">You must free every XLOPER that you get as a return value from Excel4 or Excel4v if that XLOPER uses auxiliary memory (if it contains pointers). It is always safe to free XLOPERs even if they did not use auxiliary memory, as long as you got them from Excel4 or Excel4v.</P>
<H4 CLASS="h4"><A NAME="sec2"></A>Example</H4><P CLASS="t">This example calls GET.WORKSPACE(1) to return (as a string) the platform on which Microsoft Excel is currently running. The code copies this returned string into a buffer for later use. The standard strcpy function is not used to copy the string to the buffer because strcpy expects a null-terminated string and the returned value is a byte-counted string. The code places the buffer back into the XLOPER for later use with the Excel function. Finally, the code displays the string in an alert box.</P>
<P CLASS="t">\SAMPLES\EXAMPLE\EXAMPLE.C</P>

<pre><code><FONT FACE="Courier" SIZE="2">short WINAPI xlFreeExample(void)
{
    XLOPER xRes, xInt;
    char buffer[10];
    int i, len;

    xInt.xltype = xltypeInt;
    xInt.val.w = 1;
    Excel(xlfGetWorkspace, (LPXLOPER)&amp;xRes, 1, (LPXLOPER)&amp;xInt);
    len = (BYTE)xRes.val.str[0];
    for(i = 0; i &lt;= len; i++)
        buffer[i] = xRes.val.str[i];
    Excel(xlFree, 0, 1, (LPXLOPER)&amp;xRes);
    xRes.val.str = buffer;

    Excel(xlcAlert, 0, 1, (LPXLOPER)&amp;xRes);
    return 1;
}
</FONT></code></pre></FONT>
</FONT></BODY></HTML>
