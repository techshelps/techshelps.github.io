<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Microsoft Access Multiuser Model</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<h2><a name="themicrosoftaccessmultiusermodel"></a>The Microsoft Access Multiuser Model</h2>
<p>
To make your application available to multiple users, do one of the following:
<ul>
<li>
Place the entire application on a network server and allow multiple users to open the database. With this strategy, users share all the database objects that make up your application, including the tables it uses to store data.</li>
<li>
Split your application into two databases: a back-end database that contains your application’s tables, and a front-end database that contains your application’s other objects—its queries, forms, reports, macros, and modules. Then, place the back-end database on a network server and distribute the front-end database to your users. Base the objects in your front-end database on linked tables from the back-end database. This strategy keeps the data separate from the other objects in your application and reduces network traffic.<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;For more information on splitting your application into a front-end database and a back-end database, see “Separating Your Application’s Tables from Its Other Objects” in Chapter 15, “Delivering Your Application.” For information on linking tables, search the Help index for “linked tables.”</p>
</li>
</ul>
<p>
A Microsoft Access multiuser application consists of several important components. In addition to Microsoft Access itself and your application’s front-end and back-end database (.mdb) files, your multiuser application must have:
<ul>
<li>
A workgroup information (.mdw) file, which resides either on the network server or on each user’s workstation.</li>
<li>
A locking information (.ldb) file for each database; this file resides in the same folder as the database.</li>
</ul>
<h4>The Workgroup Information File</h4>
<p>
The workgroup information (.mdw) file is a Microsoft Access database that stores information about users in a workgroup, including their account names, their passwords, and the groups that they belong to. </p>
<p>
The location of the workgroup information file in multiuser environments is important. It can either be placed on each local workstation or shared on a network server. However, if it’s stored locally, you must take the steps necessary to update it when security settings change.</p>
<p>
The workgroup information file also stores a list of the most recently used databases. If you want your application’s users to have their own lists of the most recently used databases, you should either store the workgroup information file on the users’ local workstations or establish user-level security.</p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;For information on establishing user-level security, see Chapter 14, <a href="securingyourapplication.htm">“Securing Your Application.”</a></p>
<h4>The Locking Information File</h4>
<p>
The locking information (.ldb) file stores information about any records that are currently locked in the database.</p>
<p>
If the locking information file doesn’t exist when the database is opened, the Microsoft Jet database engine creates it. It creates one locking information file for every Microsoft Access database file that is opened in shared mode. Microsoft Jet gives the file the same name as the database that was opened, but with an .ldb file name extension. For example, Northwind.mdb has an associated locking information file called Northwind.ldb. The locking information file is stored in the same folder as the database. Microsoft Jet deletes the .ldb file when the database is closed. In a multiuser setting, this is when all users have exited the application.</p>
</FONT></FONT></BODY>
</HTML>
