<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Synchronous vs. Asynchronous</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H2>Synchronous vs. Asynchronous</H2><P CLASS="t">One of the most frustrating limitations of the C API is the synchronous nature it imposes. Many programmers want to exert control over Excel at arbitrary times. Perhaps the goal is to start a process in Microsoft Excel each time a stock price comes in on the Internet. The C API doesn't enable this scenario. It is necessary for Microsoft Excel to call the developer's code before the developer is allowed to&nbsp;utilize the C API to call functionality within Microsoft Excel. An example of&nbsp;the proper way to use the C API is when a function in your DLL is called as part of recalculation, your DLL utilizes the C API to get additional information and returns. An improper utilization would be to call your DLL as part of recalculation and then have your DLL set a timer and return. When the timer fires,&nbsp;the DLL will attempt to call back into Microsoft Excel. This will not work. The&nbsp;OLE Automation interface doesn't experience this limitation. Whenever Microsoft Excel is in a ready state, OLE Automation calls may be performed on it's methods and properties. There are a few times when Microsoft Excel appears to be in a ready state and will not respond to OLE Automation (for example, when dialogs are showing, menus are pulled down, or macro code is executing). These exceptions are much less limiting than the limits imposed by the C API. If you truly need asynchronous access to Excel you should choose the OLE Automation Interface.</P>
<P></P>
<P></P>
<P></P></FONT>
</FONT></BODY></HTML>
