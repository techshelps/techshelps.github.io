<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Benchmark Source Code</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H2>Benchmark Source Code</H2><P CLASS="t">The companion CD to this book contains all the source code needed to run and/or&nbsp;build the automation examples in this chapter. Both the Microsoft Visual Basic&nbsp;4.0 Automation servers (InProc and OutProc folders) and the VBA source code (UsingOle.xls) are included. The complete VBA code is listed below:</P>

<pre><code><FONT FACE="Courier" SIZE="2">Sub Button1_Click()
    ''' Early bind to objects
    Dim cOutProc As clsOutProc
    Dim cInProc As clsInProc
    ''' Late bind
    Dim oOutProc As Object
    Dim oInProc As Object
    Dim dStart As Date
    Dim dEnd As Date
    Dim iIter As Integer
    Dim iCount As Integer
    Dim szString1 As String
    Dim szString2 As String
    Dim szString3 As String
    Dim szRes As String
    </FONT></code></pre>
<P></P>
<P></P>
<P></P>

<pre><code><FONT FACE="Courier" SIZE="2">    ''' Instantiate objects
    Set cOutProc = New clsOutProc
    Set cInProc = New clsInProc
    ''' Get number of iterations and strings
    With ThisWorkbook.Sheets(1)
        iIter = .Range("Iterations").Value
        szString1 = .Range("String1").Value
        szString2 = .Range("String2").Value
        szString3 = .Range("String3").Value
    End With
    ''' Show what we are doing
    Application.StatusBar = "Early Bound InProc Running..."
    
    ''' Get start time. This is subject to the granularity
    ''' of Excel's Now() function. 
    ''' This is accurate only to the second
    ''' You may have to increase the iterations 
    ''' to get relevant comparisons
    dStart = Now()
    
    ''' Loop and call the object
    For iCount = 1 To iIter
        szRes = cInProc.ConcatStrings(szString1, _
            szString2, szString3)
    Next
    ''' Record ending time
    dEnd = Now()
    
    ''' Display difference
    ThisWorkbook.Sheets(1).Range("EarlyInProcTiming") _
        .Value = DateDiff("s", dStart, dEnd)
    
    ''' Display what we are doing
    Application.StatusBar = "Early Bound OutProc Running..."
    
    ''' Get next start time
    dStart = Now()
    
    ''' Loop and call the object
    For iCount = 1 To iIter
        szRes = cOutProc.ConcatStrings(szString1, _
        szString2, szString3)
    Next

    ''' Record ending time
    dEnd = Now()
</FONT></code></pre>
<P></P>
<P></P>
<P></P>

<pre><code><FONT FACE="Courier" SIZE="2">    ''' Display difference
    ThisWorkbook.Sheets(1).Range("EarlyOutProcTiming") _
        .Value = DateDiff("s", dStart, dEnd)

    ''' now do the late bound versions
    ''' Instantiate objects
    Set oInProc = CreateObject("EDKInProcess.clsInProc")
    Set oOutProc = CreateObject("EDKOutProc.clsOutProc")
    
    ''' Display what we are doing
    Application.StatusBar = "Late Bound InProc Running..."

    ''' Record starting time
    dStart = Now()
    
    ''' Loop and call the object
    For iCount = 1 To iIter
        szRes = oInProc.ConcatStrings(szString1, _
     szString2, szString3)
    Next

    ''' Record ending time
    dEnd = Now()

    ''' Display difference
    ThisWorkbook.Sheets(1).Range("LateInProcTiming") _
        .Value = DateDiff("s", dStart, dEnd)

    ''' Display what we are doing    
    Application.StatusBar = "Late Bound OutProc Running..."

    ''' Get next start time
    dStart = Now()
    
    ''' Loop and call the object
    For iCount = 1 To iIter
        szRes = oOutProc.ConcatStrings(szString1, _
     szString2, szString3)
    Next

    ''' Record ending time
    dEnd = Now()
    
    ''' Display difference
    ThisWorkbook.Sheets(1).Range("LateOutProcTiming") _
        .Value = DateDiff("s", dStart, dEnd)
    </FONT></code></pre>
<P></P>
<P></P>
<P></P>

<pre><code><FONT FACE="Courier" SIZE="2">    ''' Clear the status bar
    Application.StatusBar = False

    ''' Release the objects
    Set oOutProc = Nothing
    Set oInProc = Nothing
    Set cInProc = Nothing
    Set cOutProc = Nothing
End Sub
</FONT></code></pre>
<P CLASS="t"></P></FONT>
</FONT></BODY></HTML>
