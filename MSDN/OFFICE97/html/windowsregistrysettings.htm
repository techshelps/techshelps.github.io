<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Windows Registry Settings</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<h2><a name="windowsregistrysettings"></a>Windows Registry Settings</h2>
<p>
When you design a client/server application, you can change its performance by adjusting the following settings in the <b>HKEY_LOCAL_MACHINE\SOFTWARE \Microsoft\Office\8.0\Access\Jet\3.5\Engines\ODBC</b> key of the Windows Registry:</p>
<p>
TraceSQLMode   If queries on remote data are taking too long to complete, set the TraceSQLMode setting to 1 to inspect the SQL statements being sent to the server. If some of the statement’s clauses or restrictions aren’t being sent, you may be using functionality provided by Microsoft Jet but not supported by the server. The SQL statement log is written to the file SQLOut.txt located in the same folder as the currently active .mdb file.</p>
<p>
JetTryAuth   If your application doesn’t use Microsoft Access security, set the JetTryAuth setting to 0 to prevent Microsoft Access from attempting to log on to the server by using the active user name and password. On some servers, if an attempt to log on fails, it can take time and slow down the server.</p>
<p>
PreparedInsert and PreparedUpdate   These settings determine whether Microsoft Access inserts or updates data in all fields (including inserting <b>Null</b> values and updating unchanged fields). If you have triggers or defaults on your server tables, don’t set these settings to 1. However, if you don’t have triggers or defaults on your tables, setting the PreparedInsert and PreparedUpdate settings to 1 can marginally speed up insertions and updates.</p>
<p>
FastRequery   If you use subforms and aren’t concerned about the number of connections you use, you can set the FastRequery setting to 1. This may use more connections, but it marginally improves the speed of subforms and other requerying operations by using prepared SELECT statements with queries that have parameters.</p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;For information on other Windows Registry settings for Microsoft Access, see “Adjusting Windows Registry Settings to Improve Performance” in Chapter 13, “Optimizing Your Application.”</p>
</FONT></FONT></BODY>
</HTML>
