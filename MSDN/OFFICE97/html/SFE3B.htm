<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Declare Once, Use Many Times</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H2>Declare Once, Use Many Times</H2><P CLASS="t">If you are going to use an object more than once, declare and use object variables rather than using a fully qualified object reference each time. For instance, in the following example the FillCells2 procedure runs approximately three times as fast&nbsp;as the FillCells1 procedure. This is because the VBA engine doesn't have to&nbsp;resolve the entire object reference each time it runs through the loop.</P>
<P></P>
<P></P>
<P></P>

<pre><code><FONT FACE="Courier" SIZE="2">Sub FillCells1()
    Dim iCount As Integer
    For iCount = 1 To 1000
        ActiveWorkbook.Worksheets("Sheet1").Range("a1") _
            .Offset(iCount, 0).Value = iCount
    Next iCount
End Sub

Sub FillCells2()
    Dim iCount As Integer
    Dim oRange As Range
    Set oRange = ActiveWorkbook.Worksheets("Sheet1") _
        .Range("a1")
    For iCount = 1 To 1000
        oRange.Offset(iCount, 0).Value = iCount
    Next iCount
End Sub
</FONT></code></pre></FONT>
</FONT></BODY></HTML>
