<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Benchmark: Excel Calling Visual Basic 4.0</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H2>Benchmark: Excel Calling Visual Basic 4.0</H2><P CLASS="t">As an example of the above discussions, the CD contains samples of two VBA objects (with source code). These objects are called from VBA in early-bound and late-bound fashion as well as in-process and cross-process. The objects accept three string parameters, concatenate them, and return the result. The VBA source code listing is shown at the end of this chapter.</P>
<P></P>
<P></P>
<P></P>
<P CLASS="t">To create a meaningful benchmark, the code loops a variable number of times. The following results were obtained from running the code for 10,000 iterations.</P>

<TABLE COLS="4" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="65pt" VALIGN="TOP"><COL WIDTH="80pt" VALIGN="TOP"><COL WIDTH="202pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="thf"><B></B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="th"><B>In-Process</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="th"><B>Cross-Process</B></P></FONT></TD></TR><TR><TD COLSPAN="4" VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Early Bound</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">0 seconds</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">13 seconds</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Late Bound</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">3 seconds</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">32 seconds</P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P CLASS="t">The actual times are not important, as these can vary from machine to machine, depending on its configuration. The ratio between the times is the important factor. As the table above shows, the most important consideration when looking at this performance data is whether the object runs in-process versus cross-process. This single change can yield a 10x to 13x performance increase. Performance due to early versus late binding is not affected nearly as much, on the order of 3x in this test.</P>
<P CLASS="t">All this must be kept in perspective. If your code isn't running a loop and makes a single call or two, the difference between the two methods is often insignificant.</P></FONT>
</FONT></BODY></HTML>
