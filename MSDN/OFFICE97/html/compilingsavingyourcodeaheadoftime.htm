<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Compiling and Saving Your Code 
Ahead of Time</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<h2><a name="compilingsavingyourcodeaheadoftime"></a>Compiling and Saving Your Code Ahead of Time</h2>
<p>
The code in all modules is saved as <i>source</i> code and <i>compiled</i> code. Source code consists of the Visual Basic code you write in text form including declarations, procedure names, variable names, comments, blank lines, and spaces. Microsoft Access converts the source code you write through a process called <i>compiling</i> into a form that it uses to run your application. If you don’t explicitly compile your code by using the <b>Compile And Save All Modules</b> command (<b>Debug</b> menu), Microsoft Access must compile your code and load it into memory once for every user of your database. To avoid this, you should compile and save your code when you are ready to distribute your application to users, and before you do any performance testing with your application.</p>
<p>
<b><font face="Symbol"><span style="font-family:symbol">&#219;</span></font>&#09;To compile and save the code in all modules in your application</b>
<ol>
<li>
Open any module or the Debug window.</li>
<li>
On the <b>Debug</b> menu, click <b>Compile And Save All Modules</b>.<p>
<img src="abac13_6.gif" border=0></p>
</li>
</ol>
<p>
Tip   Only use the <b>Compile And Save All Modules</b> command when you are ready to distribute your application or check its performance. While you are developing your application, it will become <i>decompiled</i> (lose its fully compiled state) frequently. As a result, using the <b>Compile And Save All Modules</b> command during development wastes time. To quickly compile and check the syntax of code in changed modules without taking the time to compile modules that have not changed, use the <b>Compile Loaded Modules</b> command (<b>Debug</b> menu).</p>
<h3>Avoiding Decompiled Code</h3>
<p>
If you or the users of your application make certain changes to it, some of your application’s code may become <i>decompiled</i>, which means that Microsoft Access must recompile those portions before running them.</p>
<h4>Changes Made to Objects That May Decompile Code</h4>
<p>
Any of the following actions made to objects within a compiled database can decompile some of the code in your database:
<ul>
<li>
Adding a new form, report, control, or module</li>
<li>
Modifying the code in a form, report, control, or module</li>
<li>
Deleting or renaming a form, report, control, or module</li>
<li>
Adding or removing a reference to an object library or database by using the <b>References</b> command (<b>Tools</b> menu)</li>
</ul>
<p>
If the users of your application don’t need to perform these actions, you can ensure that your application runs as efficiently as possible by compiling your application with the <b>Compile And Save All Modules</b> command before you deliver it and after you make any subsequent changes to it. To prevent users from making changes that decompile the code in your application after you deliver it, you can save it as an MDE file, or establish user-level security.</p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;For more information on MDE files and user-level security, see Chapter 14, “Securing Your Application”</p>
<h4>Separating Decompiled Code from Standard Modules</h4>
<p>
If your users are likely to decompile your application’s code, and if a significant portion of your code resides in standard modules, you can improve your application’s performance by moving your standard modules to a library database. Then, establish a reference from your application to the new library database. Now when users open a form containing decompiled code, your application only needs to compile that code and can quickly open the library database containing the fully compiled code from your standard modules. Also, users can add new forms and reports without decompiling the code in the library database. Establishing a reference to a library database creates some additional memory overhead, so this method is most effective for applications with a significant amount of standard module code.</p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;For more information on library databases, see Chapter 12, <a href="usinglibrarydatabasesdynamic-linklibraries.htm">“Using Library Databases and Dynamic-Link Libraries.”</a></p>
<h4>Changes Made to Databases That Decompile Code</h4>
<p>
In Microsoft Access 95, the following actions decompile the code in a database:
<ul>
<li>
Renaming the database</li>
<li>
Compacting or repairing the database to a different name</li>
<li>
Copying the database to a new name (in this case, the copy is decompiled, not the original)</li>
</ul>
<p>
This occurs because in Microsoft Access 95, the name of the database is used as the Visual Basic for Applications <i>project name</i>. The project name is used to identify all the compiled code in a database. In Microsoft Access 95, performing any action that changes the name of a database containing compiled code effectively changes the name of the project and decompiles the code.</p>
<p>
These same changes do not decompile code in a Microsoft Access 97 database, because you can explicitly give your application a project name. To give your application a project name, click <b>Options</b> on the <b>Tools</b> menu, click the <b>Advanced</b> tab, and then type the name in the <b>Project Name</b> box. By default, when you create a new database, Microsoft Access 97 uses the name of the database for the project name. Whether you specify a custom project name or accept the default project name, if you perform any action that changes the name of the database, the project name doesn’t change and cause code to be decompiled. However, if you compile your application, and then change the project name by using the <b>Project Name</b> box in the <b>Options</b> dialog box, your code is decompiled.</p>
</FONT></FONT></BODY>
</HTML>
