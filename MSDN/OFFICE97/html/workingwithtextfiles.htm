<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Working with Text Files</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<h2><a name="workingwithtextfiles"></a>Working with Text Files</h2>
<p>
You can use the Text installable ISAM to link delimited and fixed-width text files and to open them directly from your Microsoft Access database. The procedure for doing this is very similar to the procedure for connecting to external databases. When you link a text file, you specify the source database type and the path to the text file in the <b>Connect</b> property, and the file name in the <b>SourceTableName</b> property. When you open a text file directly, you specify the source database type and the path to the text file as arguments of the <b>OpenDatabase</b> method, and the file name as an argument of the <b>OpenRecordset</b> method. When specifying a connection string for text files, use the specifications described in the following table.</p>
<table>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">For</b></td>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Use</b></td>
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
Source database type</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
<pre><code><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Text</code></pre>
</td>
</tr>
<tr valign=top>
<TD>
Path</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
The full path to the folder that contains the text file you want to access.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
Source table name</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
The name of the text file including the extension. If you don’t specify an extension, the default .txt extension is used.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
</table>
<p>
In fixed-width text files, Microsoft Access recognizes <b>Null</b> values by the absence of data (spaces) in the field. In delimited text files, Microsoft Access recognizes <b>Null</b> values by the presence of two consecutive delimiting characters.</p>
<p>
<b>Note</b>&nbsp;&nbsp;&nbsp;Commas, tabs, or user-defined delimiters are valid in the source file.</p>
<p>
The following table lists the size limitations of text files when linking or opening them.</p>
<table>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Item</b></td>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Maximum size per text file</b></td>
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
Field</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
255 fields</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
Field name</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
64 characters</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
Field width</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
32,766 characters</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
Record size</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
65,000 bytes</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
</table>
<p>
Important   Microsoft Access doesn’t support multiuser access to text files. When you open a text file by using Microsoft Access, you have exclusive access to the file.</p>
<h3>Creating a Schema Information File</h3>
<p>
Microsoft Access determines the format of a text file either by reading the file directly or by using a <i>schema information file</i> that overrides the default settings in the Windows Registry. The schema information file is always named Schema.ini. In order for Microsoft Access to use the information in the Schema.ini file, you must store it in the same folder as the text data source. A Schema.ini file is always required for accessing fixed-width data, and is recommended when your text file contains Date/Time, Currency, or numeric floating-point data, or any time you want more control over handling the data in the text file. You do not need a separate Schema.ini file for each text file you want to link.</p>
<p>
You can use any text editor to create a Schema.ini file. In your Schema.ini file, you add <i>entries</i>, each of which specifies one of five characteristics of the text file:
<ul>
<li>
The text file name</li>
<li>
The file format</li>
<li>
The field names, widths, and data types</li>
<li>
The character set</li>
<li>
Special data type formats and conversions</li>
</ul>
<h5>Specifying the File Name</h5>
<p>
The first entry in a Schema.ini file is always the name of the text source file enclosed in brackets. For example, to specify the file Sample.txt as your text data source, you would add the following text as the first entry in your Schema.ini file:</p>
<pre><code>[Sample.txt]
</code></pre>
<h5>Specifying the File Format</h5>
<p>
The Format entry in a Schema.ini file specifies the format of the text file, such as whether it is delimited or fixed-width. You can set the Format entry to any of the values listed in the following table.</p>
<table>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Format value</b></td>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">File format</b></td>
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
TabDelimited</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Fields in the text file are delimited by tabs.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
CSVDelimited</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Fields in the text file are delimited by commas.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
Delimited(*)</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Fields in the text file are delimited by asterisks. You can substitute any character for the asterisk except the double (&quot;) quotation mark.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
FixedLength</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Fields in the text file are of a fixed width.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
</table>
<p>
For example, to specify a comma-delimited format, you would add the following entry to the Schema.ini file:</p>
<pre><code>Format=CSVDelimited
</code></pre>
<h5>Specifying the Field Names, Widths, and Data Types</h5>
<p>
For delimited text files, you can specify field names in one of two ways: 
<ul>
<li>
Include the field names in the first record of the text file and set the ColNameHeader entry to <b>True</b> to indicate that the first record of data specifies field names.</li>
<li>
Specify each field by number and designate the field name and data type. </li>
</ul>
<p>
You can have Microsoft Access determine the data types of the fields for you. Set the MaxScanRows entry to the number of records Microsoft Access should scan when it determines the field data types. If you set the MaxScanRows entry to 0, Microsoft Access scans the entire file. For example, to specify that Microsoft Access should use the data in the first record in the text file as field names and should examine the entire file to determine the data type of each field, add the following entries to your Schema.ini file:</p>
<pre><code>ColNameHeader=True
MaxScanRows=0
</code></pre>
<p>
For fixed-width files, you must specify each field by number and designate the field name, data type, and width. To do so, set the Col<i>n</i> entry; the syntax of the Col<i>n</i> entry is:</p>
<p>
<b>Col</b><i>n</i><b>=</b><i>ColumnName</i> <i>type</i> [<b>Width</b> <i>#</i>]</p>
<p>
The following table describes each part of the Col<i>n</i> entry.</p>
<table>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</b></td>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</b></td>
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
<i><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">ColumnName</i></td>
<TD>
The name of the field. If the field name contains embedded spaces, you must enclose it in double quotation marks.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
<i><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">type</i></td>
<TD>
Specifies the data type for the field. It can be any of the following data types.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
<u><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Microsoft Jet SQL data types:</u><code>ByteLongCurrencySingleDoubleDateTimeTextMemo</code></td>
<TD>
<u><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">ODBC data types:</u><code>Char </code>(same as <code>Text</code>)<code>Float </code>(same as <code>Double</code>)<code>Integer </code>(same as <code>Short</code>)<code>LongChar </code>(same as <code>Memo</code>)<code>Date</code> <i>date format</i></td>
</tr>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Width</b></td>
<TD>
The literal string value <code><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Width</code>. Indicates that the number that follows specifies the width of the field (required for fixed-width files).</td>
</tr>
<tr valign=top>
<TD>
<i><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">#</i></td>
<TD>
The integer value that specifies the number of characters in the field (required if <b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Width</b> is specified).</td>
</tr>
</table>
<p>
For example, to specify two fields, a 10-character CustomerID text field and a 30-character CustomerName text field, add the following entries to your Schema.ini file:</p>
<pre><code>Col1=CustomerID Text Width 10
Col2=CustomerName Text Width 30
</code></pre>
<h5>Specifying a Character Set</h5>
<p>
The CharacterSet entry specifies which character set your computer uses. You can specify one of two character sets: ANSI or OEM. For example, to specify the ANSI character set, add the following entry to your Schema.ini file:</p>
<pre><code>CharacterSet=ANSI
</code></pre>
<h5>Specifying Data Type Formats and Conversions</h5>
<p>
The Schema.ini file contains a number of entries that you can use to specify how data is converted or displayed when Microsoft Access reads it. The following table describes each of these entries.</p>
<table>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Entry</b> </td>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</b></td>
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
DateTimeFormat</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
A format string that specifies the format for dates and times. You should specify this entry if all Date/Time fields have the same format. You can use any Date/Time format except A.M. and P.M. display formats.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
DecimalSymbol</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Specifies the character used to separate the integer from the fractional portion of a number.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
NumberDigits</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Specifies the number of decimal digits in the fractional portion of a number. </td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
NumberLeadingZeros</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Specifies whether a decimal value less than 1 and greater than –1 should contain leading zeros; you can set this entry to <b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">False</b> (no leading zeros) or <b>True</b>. </td>
</tr>
<tr valign=top>
<TD>
CurrencySymbol</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Specifies the currency symbol used for currency values in the text file; for example, the dollar sign ($) or Dm.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
CurrencyPosFormat</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Specifies the position of the currency symbol. You can set it to any of the following values: </td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
0123</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Currency symbol prefix with no separation ($1) Currency symbol suffix with no separation (1$)Currency symbol prefix with one character separation ($ 1)Currency symbol suffix with one character separation (1 $)</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
CurrencyDigits</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Specifies the number of digits used for the fractional portion of a currency value. </td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
CurrencyNegFormat</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Specifies the format of negative currency values. You can set it to any of the following numbers:</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
0     ($1)<p><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
1     –$1</p>
<p>
2     $–1</p>
<p>
3     $1–</p>
</td>
<TD>
4     (1$)<p><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
5     –1$</p>
<p>
6     1–$</p>
<p>
7     1$–</p>
</td>
<TD>
8     –1 $<p><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
9     –$ 1</p>
<p>
10    1 $–</p>
<p>
11    $ 1–</p>
</td>
<TD>
12    $ –1<p><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
13    1– $</p>
<p>
14    ($ 1)</p>
<p>
15    (1 $)</p>
</td>
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
The dollar sign ($) is shown only as an example; you should replace it with the appropriate currency symbol.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
CurrencyThousandSymbol</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Specifies the character used to separate thousands in currency values.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
CurrencyDecimalSymbol</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Specifies the character used to separate the whole from the fractional portion of a currency value.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
</table>
<p>
<b>Note</b>&nbsp;&nbsp;&nbsp;If you omit an entry, Microsoft Access uses the default value in Windows Control Panel.</p>
<h4>Example of a Schema Information File</h4>
<p>
The following example of a Schema.ini file specifies the format for the fixed-width file Filename.txt and the delimited file Delimit.txt:</p>
<pre><code>[Filename.txt]
ColNameHeader=False
Format=FixedLength
MaxScanRows=25
CharacterSet=OEM
Col1=columnname Char Width 24
Col2=columnname2 Date Width 9
Col3=columnname7 Float Width 10
Col4=columnname8 Integer Width 10
Col5=columnname9 LongChar Width 10

[Delimit.txt]
ColNameHeader=True
Format=Delimited(!)
MaxScanRows=0
CharacterSet=OEM
Col1=username Text
Col2=dateofbirth DateTime
</code></pre>
<h3>Linking Text Files</h3>
<p>
To link a text file to your Microsoft Access database, use the <b>CurrentDb</b> function to return an object variable that represents the current Microsoft Access database. Then create a <b>TableDef</b> object and set the connection string and source table name: set the <b>TableDef</b> object’s<b> Connect</b> property to specify the source database type and the full path to the text file, and set its <b>SourceTableName</b> property to the name of the text file.</p>
<p>
Important   If you want Microsoft Access to use the information in the schema information file, you must place the text file and the Schema.ini file in the same folder. For more information on schema information files, see “Creating a Schema Information File” earlier in this chapter.</p>
<p>
The following example links a text file to a Microsoft Access database. It assumes that you want to link the Sample text file located in the Data subfolder of the My Documents folder.</p>
<pre><code>Sub LinkTextFile()
&#09;Dim dbs As Database
&#09;Dim tdfSales As TableDef
&#09;Dim rstSales As Recordset

&#09;' Open the Microsoft Access database.
&#09;Set dbs = CurrentDb

&#09;' Create a TableDef object.
&#09;Set tdfSales = dbs.CreateTableDef(&quot;Central Division Sales&quot;)

&#09;' Set the connection string to specify the source database type and the
&#09;' full path to the file that you want to link.
&#09;tdfSales.Connect = &quot;Text;DATABASE=C:\My Documents\Data&quot;

&#09;' Set the SourceTableName property to the name of the file you want to access.
&#09;tdfSales.SourceTableName = &quot;Sample.txt&quot;

&#09;' Append the TableDef object to the TableDefs collection to create the link.
&#09;dbs.TableDefs.Append tdfSales

&#09;' Create a Recordset object from the linked text file.
&#09;Set rstSales = dbs.OpenRecordset(&quot;Central Division Sales&quot;)
End Sub
</code></pre>
<p>
<img src="abac18_3.gif" border=0></p>
<p>
Tip   Instead of specifying the connection string and source table name by setting properties of the <b>TableDef</b> object, you can specify them by using the<i> connect</i> and <i>source</i> arguments of the <b>CreateTableDef</b> method. You can also use the Microsoft Access user interface to link external data. For more information on using the<b> CreateTableDef</b> method or the user interface to link external data, see “Linking External Tables” earlier in this chapter.</p>
<h3>Opening Text Files</h3>
<p>
To open a text file directly from your Microsoft Access database, create a <b>Database</b> object and set the arguments of the <b>OpenDatabase</b> method to specify the full path to the text file, whether to open the text file exclusively, whether to open it with read/write or read-only permissions, and the source database type. Specify the file name as the <i>source</i> argument of the <b>OpenRecordset</b> method.</p>
<p>
The following example opens an external text file directly from a Microsoft Access database and then creates a <b>Recordset</b> object from the text file.</p>
<pre><code>Sub OpenTextFile()
&#09;Dim dbs As Database
&#09;Dim rstAwards As Recordset

&#09;' Point to a folder that contains the text file you want to open.
&#09;Set dbs = OpenDatabase(&quot;C:\My Documents\Data&quot;, False, False, &quot;Text;&quot;)

&#09;' Create a Recordset object from the Awards text file.
&#09;Set rstAwards = dbs.OpenRecordset(&quot;Awards.txt&quot;)
End Sub
</code></pre>
</FONT></FONT></BODY>
</HTML>
