<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Declaration Changes</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H2>Declaration Changes</H2><P CLASS="t">One of the first things you will need to change is the declaration of your functions and subroutines. Win32 uses the stdcall calling convention instead of the pascal calling convention. This means that the pascal keyword should be removed from the declaration. Far has no meaning in a 32-bit context and should be removed from the declaration also. The _export keyword has been replaced with _declspec(dllexport). See the next section for issues on using _declspec(dllexport). An example of how conditional compilation can be used to solve this problem follows. Function names are case-sensitive in Win32.</P>
<P></P>
<P></P>
<P></P>

<pre><code><FONT FACE="Courier" SIZE="2">#if defined(WIN32)
_declspec(dllexport) __stdcall int WINAPI SuperZoom(int Zoom, LPSTR UserHelpFile, LONG wCommand, LONG topic)
#else
int far pascal _export SuperZoom(int Zoom, LPSTR UserHelpFile, LONG wCommand, LONG topic)
#endif
</FONT></code></pre>
<P CLASS="t">An alternative method that you will see used throughout the samples is to use the WINAPI macro. The WINAPI macro is defined as __stdcall under Win32 and far pascal under Win16.</P></FONT>
</FONT></BODY></HTML>
