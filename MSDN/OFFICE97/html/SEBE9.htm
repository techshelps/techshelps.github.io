<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>LOOKUP (Array Form)</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H1>LOOKUP (Array Form)</H1><P>The LOOKUP function has two syntax forms: vector and array.</P>
<P>The array form of LOOKUP looks in the first row or column of an array for the specified value and returns a value from the same position in the last row or column of the array. Use this form of LOOKUP when the values you want to match are in the first row or column of the array. Use the other form of LOOKUP when you want to specify the location of the column or row.</P>
<P CLASS="tpt"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B>Tip</B></FONT>&nbsp;&nbsp;&nbsp;In general, it's best to use the HLOOKUP or VLOOKUP function instead of the array form of LOOKUP. This form of LOOKUP is provided for compatibility with other spreadsheet programs.</P>
<P><B>Syntax 2</B></P>
<P>Array form</P>
<P CLASS="syn"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B>LOOKUP</B></FONT>(<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B>lookup_value</B></FONT>,<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B>array</B></FONT>)</P>
<P CLASS="dt1"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B>Lookup_value</B></FONT>&nbsp;&nbsp;&nbsp;is a value that LOOKUP searches for in an array. Lookup_value can be a number, text, a logical value, or a name or reference that refers to a value.</P>
<UL><LI>If LOOKUP can't find the lookup_value, it uses the largest value in the array that is less than or equal to lookup_value.</LI><LI>If lookup_value is smaller than the smallest value in the first row or column (depending on the array dimensions), LOOKUP returns the #N/A error value.</LI></UL><P CLASS="dt1"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B>Array</B></FONT>&nbsp;&nbsp;&nbsp;is a range of cells that contains text, numbers, or logical values that you want to compare with lookup_value.</P>
<P CLASS="dt1">The array form of LOOKUP is very similar to the HLOOKUP and VLOOKUP functions. The difference is that HLOOKUP searches for lookup_value in the first row, VLOOKUP searches in the first column, and LOOKUP searches according to the dimensions of array.</P>
<UL><LI>If array covers an area that is wider than it is tall (more columns than rows), LOOKUP searches for lookup_value in the first row.</LI><LI>If array is square or is taller than it is wide (more rows than columns), LOOKUP searches in the first column.</LI><LI>With HLOOKUP and VLOOKUP, you can index down or across, but LOOKUP always selects the last value in the row or column.
</LI></UL><P CLASS="it"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B>Important</B></FONT>&nbsp;&nbsp;&nbsp;The values must be placed in ascending order: ...,-2, -1, 0, 1, 2, ..., A-Z, FALSE, TRUE; otherwise, LOOKUP may not give the correct value. Uppercase and lowercase text are equivalent.</P>
<P><B>Examples</B></P>
<P><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><CODE>LOOKUP("C",{"a","b","c","d";1,2,3,4})</CODE></FONT> equals 3</P>
<P><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><CODE>LOOKUP("bump",{"a",1;"b",2;"c",3})</CODE></FONT> equals 2</P></FONT>
</FONT></BODY></HTML>
