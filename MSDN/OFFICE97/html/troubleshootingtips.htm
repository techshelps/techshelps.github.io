<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Troubleshooting Tips</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<h2><a name="troubleshootingtips"></a>Troubleshooting Tips</h2>
<p>
This section discusses common problems you may encounter when connecting to external data sources.</p>
<h3>Resolving Connection Problems</h3>
<p>
If your application cannot connect to the external data source, you can check for the following:
<ul>
<li>
Make sure you can access the external table through Windows Explorer or File Manager. If the table is stored on a network share, for example, check that you have sufficient permissions to access that share.</li>
<li>
Check that the external table is accessible through its native application. For example, if you’re trying to open a Microsoft Excel worksheet, check that you can open the worksheet in Microsoft Excel.</li>
<li>
Check the code that establishes the connection to the external table carefully to make sure that it follows the guidelines given in “Specifying Connection Information” earlier in this chapter.</li>
<li>
If you were able to connect to the external table through your application before but you can’t now, check that the table is still in its original location. If the table is linked to your Microsoft Access database and it has been moved, you need to refresh the link before you can access the table.<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;For more information, see “Maintaining Links to External Tables” earlier in this chapter.</p>
</li>
<li>
If you receive the message “Unable to find installable ISAM,” check the source database type specified in your code against those in the table in “Specifying Source Database Types” earlier in this chapter. (Remember that <code>Excel 7.0</code> isn’t a valid source database type; use <code>Excel 5.0</code> instead.)</li>
<li>
If the source database type matches one of the values in the table in “Specifying Source Database Types,” check that the installable ISAM driver resides in the folder specified in the Windows Registry in the <b>\HKEY_LOCAL_MACHINE \SOFTWARE\Microsoft\Jet\3.5\Engines</b> key.</li>
<li>
If you are supplying arguments to a case-sensitive data source, check that the arguments are of the correct form and case.</li>
<li>
Make sure the system on which the external data source resides has sufficient disk space.</li>
<li>
If you are trying to access the table by using Visual Basic code, try to import the table by pointing to <b>Get External Data</b> on the <b>File</b> menu and clicking <b>Import</b>. Check the properties that are set in Design view of the imported table and compare them to the connection string that you are using in your code.</li>
</ul>
<h3>Understanding Temporary Space Needs</h3>
<p>
Microsoft Access creates temporary indexes on your local computer when you run a query. This occurs even when the data is located in an external data source and in a different file format. These indexes can be as small as a few kilobytes or as large as several megabytes, depending on the data source.</p>
<p>
You should make sure users of your application have sufficient resources to accommodate these temporary space needs. All users should have a subfolder named Temp in their Windows folder, and enough disk space to store the indexes that Microsoft Access may create.</p>
<p>
Important   If users don’t have the disk space necessary to store temporary indexes, your application may behave unpredictably.</p>
</FONT></FONT></BODY>
</HTML>
