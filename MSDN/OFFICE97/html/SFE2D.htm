<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class Modules</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H2>Class Modules</H2><P CLASS="t">Class Modules are very similar to UserForms except that they have no user interface and do not respond to any user-initiated events. You use Class Modules to create your own custom objects. Code written within the Class Module implements the object's properties and methods. Once you have written the code for your Class Module, you create instances of it by using the New keyword.</P>
<P CLASS="t">The following simple example demonstrates the use of Class Modules to create new objects. In this example, we will create a new object named MyClass, which has two properties, Title and DateCreated, and one method, TitleLength.</P>
<P CLASS="t">Open a new workbook and use the VBE to add one Standard Module and one Class Module. Using the Project Properties window, name the Class Module MyClass. Place the following code in MyClass:</P>

<pre><code><FONT FACE="Courier" SIZE="2">Public Title As String
Private datDate As Date

Property Get DateCreated() As Date
   DateCreated = datDate
End Property

Private Sub Class_Initialize()
    datDate = Now
End Sub

Public Function TitleLength() As Integer
    TitleLength = Len(Title)
End Function
</FONT></code></pre>
<P CLASS="t">Now place the following procedure in the Standard Module:</P>

<pre><code><FONT FACE="Courier" SIZE="2">Private clsMyClass As New MyClass

Sub CreateMyClassObject()
    clsMyClass.Title = "My Title"
    MsgBox "MyClass Title = " &amp; clsMyClass.Title &amp; _
        Chr(13) &amp; "Title Length = " &amp; _
        clsMyClass.TitleLength &amp; Chr(13) &amp; _
        "Date Created = " &amp; clsMyClass.DateCreated
    Set clsMyClass = Nothing
End Sub
</FONT></code></pre>
<P CLASS="t">When you run the CreateMyClassObject procedure, the code creates a new instance of MyClass assigned to the variable clsMyClass and sets the Title property of the new object. The code then uses a message box to display the Title and DateCreated properties, as well as the TitleLength method of the object.</P>
<P></P>
<P></P>
<P></P></FONT>
</FONT></BODY></HTML>
