<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Microsoft Excel Applications Programming Interface</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H1 CLASS="cht">The Microsoft Excel Applications Programming Interface</H1><P CLASS="t">This chapter describes the Applications Programming Interface (API) for&nbsp;Microsoft Excel. You can use the API to develop programs that call Microsoft&nbsp;Excel.</P>
<P CLASS="t">The first part of this chapter discusses writing DLL functions and calling them from a Microsoft Excel worksheet. For information about using DLL functions with Visual Basic, see, "Using DLLs from Visual Basic." The second part of this chapter, "Calling Microsoft Excel from C," discusses the API calls that allow a C-language application to call into Microsoft Excel.</P>
<P CLASS="t">Microsoft Excel exposes its objects as OLE Automation objects. OLE 2 allows another application, called an <I>OLE Automation Controller,</I> to access the exposed objects and use their properties and methods. For more information about using the Microsoft Excel OLE Automation interface, see, "Using the OLE Automation Interface."</P>
<P CLASS="t">Depending on your application, you may wish to use the C API, a DLL called from Visual Basic, the OLE Automation interface, or some hybrid combination. The introduction to this book discusses when each of these solutions is most appropriate and gives guidelines for selecting an approach best suited to your application.</P>
<P CLASS="t">Microsoft Excel 97 has two macro languages: the Microsoft Excel 4.0 macro language and Visual Basic for Applications. Throughout this chapter, we use the&nbsp;term "macro language" to mean the Microsoft Excel 4.0 macro language.</P>
<P></P>
<P></P>
<P></P></FONT>
</FONT></BODY></HTML>
