<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Excel4</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H2>Excel4</H2><P CLASS="t">This function calls an internal Microsoft Excel macro function or special command from a DLL or code resource.</P>
<P CLASS="t">Returns one of the following (int).</P>

<TABLE COLS="4" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="35pt" VALIGN="TOP"><COL WIDTH="71pt" VALIGN="TOP"><COL WIDTH="240pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="thf"><B>Value</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="th"><B>Return code</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="th"><B>Description</B></P></FONT></TD></TR><TR><TD COLSPAN="4" VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">0</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">xlretSuccess</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">The function was called successfully. This does not mean that the function did not return a Microsoft Excel error value; to find that out, you have to look at the resulting XLOPER.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">1</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">xlretAbort</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">An abort occurred (internal abort). You might get this if a macro closes its own macro sheet by calling CLOSE, or if Microsoft Excel is out of memory. In this case you must exit immediately. The DLL can call only xlFree before it exits. The user will be able to save any work interactively using the Save command on the File menu.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">2</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">xlretInvXlfn</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">An invalid function number was supplied. If you are using constants from XLCALL.H, this shouldn't happen.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">4</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">xlretInvCount</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">An invalid number of arguments was entered. Remember that no Microsoft Excel function can take more than 30 arguments, and some require a fixed number of arguments.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">8</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">xlretInvXloper</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">An invalid XLOPER structure or an argument of the wrong type was used.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">16</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">xlretStackOvfl</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">(Windows only)  A stack overflow occurred. Use xlStack to&nbsp;monitor the amount of room left on the stack. Don't allocate large local (automatic) arrays on the stack if possible; make them static. (Note that a stack overflow may&nbsp;occur without being detected.)</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">32</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">xlretFailed</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">A command-equivalent function failed. This is equivalent to a macro command displaying the macro error alert dialog&nbsp;box.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">64</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">xlretUncalced</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">An attempt was made to dereference a cell that has not been calculated yet, because it was scheduled to be recalculated after the current cell. In this case the DLL needs to exit immediately. It can call only xlFree before it exits. For more information, see "Dealing with Uncalculated Cells" on page 196.</P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<H4 CLASS="h4"><A NAME="sec0"></A>Syntax</H4>
<pre><code><FONT FACE="Courier" SIZE="2">Excel4(int iFunction, LPXLOPER pxRes, int iCount, <BR>LPXLOPER argument1,&nbsp;...)
</FONT></code></pre>
<P CLASS="term1"><I>iFunction</I> (int)</P>
<P CLASS="dt1">A number indicating the command, function, or special function you want to call. For a list of valid <I>iFunction</I> values, see the following "Remarks" section.</P>
<P CLASS="term1"><I>pxRes</I> (LPXLOPER)</P>
<P CLASS="dt1">A pointer to an allocated XLOPER (10 bytes) that will hold the result of the evaluated function.</P>
<P CLASS="term1"><I>iCount</I> (int)</P>
<P CLASS="dt1">The number of arguments that will be passed to the function.</P>
<P CLASS="term1"><I>argument1</I>, ... (LPXLOPER)</P>
<P CLASS="dt1">The optional arguments to the function. All arguments must be pointers to XLOPERs.</P>
<P></P>
<H4 CLASS="h4"><A NAME="sec1"></A>Remarks</H4><H5 CLASS="h5"><A NAME="sec2"></A>Valid<I> iFunction </I>values</H5><P CLASS="t">Valid <I>iFunction</I> values are any of the xlf... or xlc... constants defined in XLCALL.H or any of the following special functions:</P>

<TABLE COLS="4" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="87pt" VALIGN="TOP"><COL WIDTH="93pt" VALIGN="TOP"><COL WIDTH="81pt" VALIGN="TOP"><COL WIDTH="87pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">xlAbort</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">xlEnableXLMsgs</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">xlGetInst</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">xlSheetNm</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">xlCoerce</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">xlFree</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">xlSet</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">xlStack</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">xlDefineBinaryName</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">xlGetBinaryName</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">xlSheetId</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">xlUDF</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">xlDisableXLMsgs</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">xlGetHwnd</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"></P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P></P>
<P></P>
<P></P>
<H5 CLASS="h5"><A NAME="sec3"></A>Different Types of Functions</H5><P CLASS="t">Excel4 distinguishes between three classes of functions. The functions are classified according to the three states in which Microsoft Excel may be calling the DLL. Class 1 applies when the DLL is called from a worksheet as a result of recalculation. Class 2 applies when the DLL is called from within a function macro or from a worksheet where it was registered with a number sign (#) in the type text. Class 3 applies when a DLL is called from an object, macro, menu, toolbar, shortcut key, ExecuteExcel4Macro, or the Tools/Macro/Run command. The following table shows what functions are valid in each class.</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="120pt" VALIGN="TOP"><COL WIDTH="133pt" VALIGN="TOP"><COL WIDTH="94pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="thf"><B>Class 1</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="th"><B>Class 2</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="th"><B>Class 3</B></P></FONT></TD></TR><TR><TD COLSPAN="3" VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Any worksheet function</P>
<P CLASS="tt">Any xl... function except xlSet</P>
<P CLASS="tt">XlfCaller</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Any worksheet function</P>
<P CLASS="tt">Any xl... function except xlSet</P>
<P CLASS="tt">Macro sheet functions that return a value but perform no action</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Any function, including xlSet and command-equivalent functions</P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<H5 CLASS="h5"><A NAME="sec4"></A>Displaying the Dialog Box for a Command-Equivalent Function</H5><P CLASS="t">If a command-equivalent function has an associated dialog box, you can set the xlPrompt bit in <I>iFunction</I>. This means that Microsoft Excel will display the appropriate dialog box before carrying out the command.</P>
<H5 CLASS="h5"><A NAME="sec5"></A>Writing International DLLs</H5><P CLASS="t">If you set the xlIntl bit in <I>iFunction,</I> the function or command will be carried out as if it were being called from an International Macro Sheet. This means that the command will behave as it would on the U.S. version of Microsoft Excel, even if it is running on an international (localized) version.</P>
<H5 CLASS="h5"><A NAME="sec6"></A>xlretUncalced or xlretAbort</H5><P CLASS="t">After receiving one of these return values, your DLL needs to clean up and exit immediately. Callbacks into Microsoft Excel, except xlFree, are disabled after receiving one of these return values.</P>
<P></P>
<P></P>
<P></P>
<H4 CLASS="h4"><A NAME="sec7"></A>Example</H4><P CLASS="t">This example uses the Excel4 function to select the cell from which it was called.</P>
<P CLASS="t">\SAMPLES\EXAMPLE\EXAMPLE.C</P>

<pre><code><FONT FACE="Courier" SIZE="2">short WINAPI Excel4Example(void)
{
    XLOPER xRes;

    Excel4(xlfCaller, (LPXLOPER)&amp;xRes, 0);
    Excel4(xlcSelect, 0, 1, (LPXLOPER)&amp;xRes);
    Excel4(xlFree, 0, 1, (LPXLOPER)&amp;xRes);

    return 1;
}
</FONT></code></pre>
<H4 CLASS="h4"><A NAME="sec8"></A>Related Functions</H4><P CLASS="t">Excel4v, Excel</P></FONT>
</FONT></BODY></HTML>
