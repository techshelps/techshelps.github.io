<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Errors and Error Handling</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<h2><a name="errorserrorhandling"></a>Errors and Error Handling</h2>
<p>
In the world of programming, an error often isn’t the same as a mistake. An error may be the result of an event or an operation that doesn’t work out as expected, or the result of an attempt to carry out an impossible or invalid maneuver.</p>
<p>
Often, you can anticipate the errors that users will encounter when they work with your application. You can shield users from these errors by including <i>error-handling</i> code, also known as <i>error trapping</i>, in your application. You don’t have to use error handling in every procedure that you write, but it’s a good idea to include it whenever your application interacts with something external, like the user’s machine, a network, or a remote database. You should also use error handling when your application opens, updates, deletes, or adds a database record.</p>
<p>
Error-handling code typically <i>traps</i> a run-time error by interrupting the default Microsoft Access response to the error and instead running code that you specify. Your application can correct the error, or give the user an opportunity to correct the error.</p>
<p>
Run-time<i> </i>errors occur when the application is actually running; other types of errors can occur under different circumstances. For example, a syntax error can occur when you enter code in the Module window, and a compile error can occur when you compile code. In Microsoft Access, however, you can trap only run-time errors.</p>
<p>
Depending on where it occurs, you can handle a run-time error in one of two ways.</p>
<table>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Where the error occurs</b></td>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">How to handle the error</b> </td>
</tr>
<tr valign=top>
<TD>
 </td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
Microsoft Access interface or Microsoft Jet database engine</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Add error-handling code to the Error event procedure of a form or report.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
Visual Basic</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Add an <b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">On Error</b> statement and error-handling code to a procedure.</td>
</tr>
</table>
<p>
If your application uses Visual Basic code, you usually have to use both types of error handling.</p>
<p>
Both types of error handling require that you identify each error you want to handle by its error code. You usually declare a constant to represent the numeric error code, and then use the constant to refer to the error. You can create an Errors table in Microsoft Access that contains the error codes and strings used or reserved by Visual Basic. Search the Help index for “trapping errors,” and then click <b>Determine the Error Codes Reserved by Visual Basic</b>. You can copy and paste the CreateErrorsTable procedure from this Help topic into a module. </p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;For information on using Visual Basic to create tables, see Chapter 5, <a href="workingwithobjectscollections.htm">“Working with Objects and Collections,”</a> and Chapter 9, <a href="workingwithrecordsfields.htm">“Working with Records and Fields.”</a></p>
<p>
After you create the Errors table, you can find the error code for an error by looking up its corresponding error message. To do so, open the Errors table, select the Error String column, click <b>Find</b> on the <b>Edit</b> menu, type the error message in the<b> Find What</b> box, and then click<b> Find First</b>. You can also base a query or report on the table, or sort the Error String column.</p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;For a list of data access errors, search the Help index for “errors, trapping,” and then click <b>Trappable Data Access Errors</b>.</p>
<h3>The Err Object, the Errors Collection, and the Error Function</h3>
<p>
Microsoft Access provides the <b>Err</b> object and the <b>Errors</b> collection to help you retrieve information about run-time errors in your applications, and regenerate errors when necessary. </p>
<p>
Microsoft Access uses the <b>Err</b> object to store information about the most recent run-time error that has occurred. When a run-time error occurs, the properties of the <b>Err</b> object are filled with information that uniquely identifies the error’s number, description, and source. Depending on the type of error that is generated, you may also be able to obtain other information about the error.</p>
<p>
You can also use the <b>Err</b> object to regenerate errors that have occurred in your application.</p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;For information on regenerating errors with the <b>Err</b> object, see “The Raise Method” later in this chapter.</p>
<p>
The <b>Errors</b> collection is contained by the <b>DBEngine</b> object. It contains one <b>Error</b> object for each error that is generated by a single operation involving Data Access Objects (DAO). If multiple errors occur during a single operation, then the collection contains more than one <b>Error</b> object. When another operation generates an error or errors, the existing collection is cleared and refreshed with a new set of <b>Error</b> objects. Unlike other collections, the <b>Errors</b> collection doesn’t append objects to existing objects as subsequent operations occur.</p>
<p>
In addition to the <b>Error</b> object and the <b>Errors</b> collection, there is also an <b>Error</b> function. The <b>Error</b> function returns the error description that corresponds to a given error number. The <b>Error</b> function and the <b>Description</b> property of the <b>Err</b> object return the same value.</p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;For more information about the <b>Err</b> object, the <b>Error </b>object, the <b>Errors </b>collection, or the <b>Error</b> function, search the Help index for the name of the object, collection, or function.</p>
</FONT></FONT></BODY>
</HTML>
