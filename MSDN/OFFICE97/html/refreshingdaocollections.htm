<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Refreshing DAO Collections</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<h2><a name="refreshingdaocollections"></a>Refreshing DAO Collections</h2>
<p>
In a multiuser setting, users may be modifying collections by adding new tables or queries to the database, or by deleting existing objects. In this case, the Data Access Objects (DAO) library doesn’t automatically keep track of changes to collections.</p>
<p>
For example, the following code displays all of the <b>TableDef</b> objects in the current database:</p>
<pre><code>Sub ShowAllTables(dbsTest As Database)

&#09;Dim tdfTemp As TableDef

&#09;For Each tdfTemp In dbsTest.TableDefs
&#09;&#09;Debug.Print tdfTemp.Name
&#09;Next tdfTemp
End Sub
</code></pre>
<p>
When this code runs, it takes a snapshot of the <b>TableDefs</b> collection as it exists at that time. It iterates through each <b>TableDef</b> object and displays its name. Assume that you have to run this code twice. The first time you run it, 10 table names are displayed. But before you can run it again, another user on the network, who also has the database open, adds a new table. Now you run the code again. It still displays 10 table names. This is because DAO doesn’t automatically know about changes made to the collection by other users. To solve this problem, use the <b>Refresh</b> method to force DAO to update the collection with the most recent changes.</p>
<p>
To change the previous code so it always displays the most current list of <b>TableDef</b> objects, add the <b>Refresh</b> method, as follows:</p>
<pre><code>Sub BetterShowAllTables(dbsTest As Database)

&#09;Dim tdfTemp As TableDef

&#09;dbsTest.TableDefs.Refresh
&#09;For Each tdfTemp In dbsTest.TableDefs
&#09;&#09;Debug.Print tdfTemp.Name
&#09;Next tdfTemp
End Sub
</code></pre>
<p>
<b>Note</b>&nbsp;&nbsp;&nbsp;Use the <b>Refresh</b> method only if necessary. If a collection contains a large number of objects, refreshing the collection may take a long time.</p>
</FONT></FONT></BODY>
</HTML>
