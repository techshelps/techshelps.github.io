<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Replicating Your Database</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<h2><a name="replicatingyourdatabase"></a>Replicating Your Database</h2>
<p>
To make replicas of your database, you first convert it to a Design Master. The Design Master becomes the first replica of the new replica set. As you make additional replicas from the Design Master, they are added to the set. You can have only one Design Master in a replica set. If you want to make changes to the tables, queries, forms, reports, macros, or modules, you make those changes in the Design Master. This prevents users at multiple replicas from making conflicting changes to the database’s design and objects.</p>
<p>
You can convert a database to a Design Master in one of three ways:
<ul>
<li>
Use the <b>Create Replica</b> command (<b>Tools</b> menu, <b>Replication</b> submenu) in Microsoft Access.</li>
<li>
Drag the database file to the My Briefcase icon.</li>
<li>
Use DAO in your Visual Basic code, as described in the following section “Using DAO to Replicate a Database.”</li>
</ul>
<p>
Important   If you protect a database with a database password, you can’t sychronize replicas of that database. Before you begin using replication, remove any database password protection from the database. Setting permissions with Microsoft Access security does not interfere with synchronization. In addition, replicated objects retain the permissions that you give them in the Design Master.</p>
<h3>Using DAO to Replicate a Database</h3>
<p>
If you want to customize your replication system, you can use DAO to replicate your database.</p>
<p>
<b><font face="Symbol"><span style="font-family:symbol">&#219;</span></font>&#09;To replicate a database by using DAO</b>
<ol>
<li>
Open the database you want to replicate with exclusive access.</li>
<li>
Identify the objects in the database you don’t want replicated and set their <b>KeepLocal</b> property to <code>&quot;T&quot;</code>.</li>
<li>
Make your database a Design Master by setting its <b>ReplicableBool </b>property to <b>True</b>.</li>
<li>
Make additional replicas from the Design Master by using the <b>MakeReplica</b> method.</li>
</ol>
<p>
Important   Before you use the <b>KeepLocal</b> and <b>ReplicableBool </b>properties, create and append them to the <b>Properties</b> collection of the object. If you try to refer to these properties in your code before you create and append them, a run-time error occurs. For <b>TableDef</b> and <b>QueryDef</b> objects, you create and append the property to the object’s <b>Properties</b> collection. For forms, reports, macros, and modules, you create and append the properties to the <b>Properties</b> collection of the <b>Document</b> object that represents the database object.</p>
<h4>Keeping Objects Local</h4>
<p>
When you convert a database to a Design Master, all of the objects in the database are converted to objects you can replicate. If you don’t want all objects in your database copied throughout the replica set, you can append and set the <b>KeepLocal</b> property on any objects you don’t want replicated. You must do this before you convert the database to a Design Master. For example, if your database has a table that contains confidential personnel information, such as salaries, you can set that table’s <b>KeepLocal</b> property to <code>&quot;T&quot;</code> to keep it local while all other objects are replicated.</p>
<p>
<b>Note</b>&nbsp;&nbsp;&nbsp;The object on which you are setting the <b>KeepLocal</b> property may have already inherited that property from another object. However, the value set by the other object has no affect on the behavior of the object you want to keep local—you must directly set the property for each object.</p>
<p>
If you try to set the <b>KeepLocal</b> property and the property has not already been appended or inherited, you get an error. The following example sets the <b>KeepLocal</b> property to <code>&quot;T&quot;</code> and includes an error handler in case the “Property does not exist” error occurs. If called, the error handler both appends and sets the property.</p>
<pre><code>Sub SetKeepLocal(objParent As Object)
&#09;Const errPropNotFound = 3270

&#09;On Error GoTo KeepLocalPropHndlr
&#09;objParent.Properties(&quot;KeepLocal&quot;).Value = &quot;T&quot;
&#09;Exit Sub

KeepLocalPropHndlr:
&#09;If (Err = errPropNotFound) Then
&#09;&#09;' Create and append the KeepLocal property if it does
&#09;&#09;' not already exist.
&#09;&#09;objParent.Properties.Append _
&#09;&#09;&#09;objParent.CreateProperty(&quot;KeepLocal&quot;, dbText, &quot;T&quot;)
&#09;Else
&#09;&#09;GoSub UserDefinedErrorHandler
&#09;End If
&#09;Resume Next
End Sub
</code></pre>
<p>
If you have defined a relationship with enforced referential integrity between two tables in your database, set the <b>KeepLocal</b> property to the same value for both tables. If the property value is not the same for both tables, the conversion fails. You can’t set the <b>KeepLocal</b> property while the relationship is in effect. Before you set the property, remove the relationship between the tables. After you set the <b>KeepLocal</b> property, define the relationship between the two tables again and proceed with converting the database.</p>
<p>
After you convert a database to a Design Master, all new objects created in the Design Master replica, or in any other replica in the set, are treated as local objects. Local objects remain in the replica where they’re created and are not copied throughout the replica set. Each time you make a new replica in the set, all of the objects in the source replica that can be replicated are included in that new replica, but none of the local objects are included.</p>
<p>
A database that can have replicas containing both replicated and local objects is much more useful because users can share corporate, division, or workgroup data that is common to all their tasks, while maintaining location-specific data and custom queries and reports.</p>
<h4>Replicating New Objects</h4>
<p>
If you create a new object in a replica and want to replicate it so that all users can use it, import the object to or create it in the Design Master, and set the object’s <b>ReplicableBool</b> property to <b>True</b> in your code. You can also set the<b> ReplicableBool </b>property by selecting the <b>Replicable</b> check box in the object’s property sheet. Any local objects in other replicas in the set that have the same name as the newly replicated object are renamed to <i>objectname</i>_Local during the next synchronization. The next time you synchronize, the newly replicated object appears in the other replicas in the set.</p>
<p>
<img src="abac20_1.gif" border=0></p>
<p>
Tip   To open an object’s property sheet, right-click the object in the Database window, and then click <b>Properties</b> on the shortcut menu.</p>
<p>
Similarly, if there is an object that can be replicated and you want to make it local, set its <b>ReplicableBool</b> property to <b>False</b> in your code. You can also set the<b> ReplicableBool </b>property by clearing the <b>Replicable</b> check box in the object’s property sheet.</p>
<p>
Caution   When you change the setting of the object’s <b>ReplicableBool </b>property from <b>True</b> to <b>False</b>, the Microsoft Jet database engine deletes the object from all replicas in the replica set except the Design Master. Even if you temporarily set the <b>ReplicableBool </b>property to <b>False</b> in the Design Master and then set it to <b>True</b> again, the next synchronization deletes and re-creates the table in each replica. Unless you synchronize all replicas before you make the design change, you lose any data entered in the table in a replica since the last synchronization.</p>
</FONT></FONT></BODY>
</HTML>
