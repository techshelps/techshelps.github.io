<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Multiuser Applications and Locking</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<h2><a name="multiuserapplicationslocking"></a>Multiuser Applications and Locking</h2>
<p>
When working in a single-user environment, your application doesn’t encounter conflicting requests for resources. Because only one user is accessing data at a time, you can reasonably assume that the needed data will always be exclusively available. In a multiuser environment, on the other hand, multiple users may be accessing data at the same time, so the only reasonable assumption is that conflicts will occur when two or more users try to change the same data.</p>
<p>
You can prevent such conflicts by making sure that only one user at a time can change data. To protect shared data in this way, you can <i>lock </i>data while a user edits it. When data is locked, any number of users can read it, but only one user can make changes to it. </p>
<p>
There are two techniques you can use to lock data in your multiuser application: bound forms and Visual Basic code that makes direct updates to data in <b>Recordset</b> objects. When you use bound forms, Microsoft Access performs certain aspects of locking automatically. Alternatively, you can write your own locking procedures in Visual Basic; this approach gives you more control over your application’s locking behavior.</p>
</FONT></FONT></BODY>
</HTML>
