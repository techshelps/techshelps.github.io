<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Developing Applications for the
Internet and the World Wide Web</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<p>
<b>CHAPTER 21</b></p>
<h1><a name="developingapplicationsfortheinternetworldwideweb"></a>Developing Applications for theInternet and the World Wide Web</h1>
<p>
This chapter shows you how to use Microsoft Access to develop applications that retrieve, publish, and share information on the Internet or a local area network (LAN). For example, you can create applications that display HTML documents in forms, or you can publish or share information from a database located on a Web server. You can also create hyperlinks that you click to navigate to database objects and other Microsoft Office documents located on a local hard disk or a local area network.</p>
<h2><a name="whatisinternet"></a>What Is the Internet?</h2>
<p>
In all likelihood, you are well aware of what the Internet is, and you’ve had a chance to take advantage of its many resources. Even if you have used the Internet, the following overview will help to make sure you understand the terms used to describe it in this chapter.</p>
<p>
The <i>Internet</i> is a collection of computer networks that connects millions of computers around the world. The <i>World Wide Web</i> is a client/server technology used to access a vast variety of digital information from the Internet. Using a software client called a <i>Web browser</i>, such as Microsoft Internet Explorer, and a modem or other connection to an Internet Service Provider (ISP), you can easily access text, graphics, sound, and other digital information from practically any computer in the world that is running the appropriate server software on the Internet.</p>
<p>
Your Web browser uses a variety of standardized methods for addressing and communicating with Internet servers. These methods are called <i>protocols</i>. The most common protocol is <i>Hypertext Transfer Protocol</i> (HTTP), which was originally created to publish and view linked text documents, but has been extended to display and run a growing variety of graphics, sound, video, and other multimedia content. Other common protocols include File Transfer Protocol (FTP), Gopher, telnet, RealAudio™, as well as protocols used to start other applications such as e-mail and Usenet newsreaders.</p>
<p>
To run or display Internet content with a Web browser, you type an address called a <i>Uniform Resource Locator</i> (URL) into its address box. For example, this is the URL for the What’s New page on the Microsoft Access Developer Forum Web site:</p>
<p>
http://www.microsoft.com/accessdev/whatsnew.htm</p>
<p>
A URL specifies the location of a file on an Internet server. Your Web browser uses a URL to download and open the file, which is most typically a page formatted with <i>Hypertext Markup Language (HTML) tags</i>. HTML tags are codes enclosed in angle brackets that are used by a Web browser to determine the structure and appearance of an HTML document, such as graphic elements and text formatting. For example, the two HTML tags in the following sentence:</p>
<p>
Make &lt;B&gt;this text&lt;/B&gt; look bold.</p>
<p>
Cause the text to display like this when viewed with a Web browser:</p>
<p>
Make <b>this text</b> look bold. </p>
<p>
To navigate to other pages or multimedia content, a user clicks a <i>hyperlink</i> on a Web page. A hyperlink is colored and underlined text, or a graphic, that activates a URL to download and open another file, such as another Web page or some form of multimedia content, such as a picture or sound file.</p>
<p>
You can use HTML tags called <i>anchors</i> to create hyperlinks. An anchor with an HREF attribute jumps to a file outside of the current document. For example, the following anchor creates a hyperlink that jumps to the Microsoft home page:</p>
<p>
&lt;A HREF=&quot;http://www.microsoft.com&quot;&gt;Microsoft Home Page&lt;/A&gt;</p>
<p>
An anchor with a NAME attribute creates a bookmark at a location within the same document. Other hyperlinks can jump to the bookmark created with thistype of anchor.</p>
<p>
HTML was originally a simple system for publishing documents on the Web, but it’s rapidly evolving to include features that you can use to create sophisticated, interactive applications.</p>
<p>
<img src="abac21_1.gif" border=0></p>
<p>
Tip   You can view an HTML reference that describes the most commonly used HTML tags as well as recent additions supported by Microsoft Internet Explorer and Netscape™ Navigator at http://www.microsoft.com/workshop/author/newhtml/.</p>
<p>
If you install Internet server software on servers connected by a local area network (LAN), you can use these same Internet technologies to share data within an organization. Such a system is called an <i>intranet</i> or <i>internal Web</i>. For example, your organization could post human resources information for all employees on a Web page, or a project team could post information about its members and provide hyperlinks to important documentation about the project. All the features in Microsoft Access and Microsoft Office that are designed for the Internet can also be used on an intranet.</p>
<h3>Microsoft Office and Microsoft Access Internet Features</h3>
<p>
In all Microsoft Office 97 applications except Outlook™, you can create hyperlinks in documents or files to display and run standard Internet content. These Microsoft Office applications also extend hyperlink technology so that you can create hyperlinks to navigate between Microsoft Word documents, Microsoft Excel worksheets, Microsoft PowerPoint slides, and Microsoft Access database objects that are stored on a local hard disk or on a LAN. You don’t need Internet connections or servers to use hyperlinks to navigate between Microsoft Office documents or files. You can use both kinds of hyperlinks in the same application.</p>
<p>
Microsoft Access provides many ways to create applications that display and run content that is available on the Internet or an intranet. For example, you can use Microsoft Access to publish information from datasheets and reports as Web pages. You can also use Microsoft Access to create files that query a database on a Web server, and then return a Web page to display the results of the query. In addition, you can save a Microsoft Access form as a Web page that emulates many of the features of the form so that users can view, enter, and update information in your database.</p>
<p>
The following table summarizes the features available in Microsoft Access that you can use to work with content on the Internet or an intranet.</p>
<table>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Feature</b></td>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Uses</b></td>
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
Jumping to content on the Internet or an intranet</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Store hyperlinks in fields with the Hyperlink data type and follow the hyperlinks to display Internet content.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Browse the folders of FTP sites from the <b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Link To File </b>dialog box when inserting or editing hyperlinks. </td>
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Bind a text box control on a form to a field with the Hyperlink data type to enter, display, or follow a hyperlink.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Bind a text box control on a report to a field with the Hyperlink data type to create a hyperlink when you save a report as an HTML document or to print the hyperlink address.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Reference a hyperlink from a label, image control, or command button on a form or report.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Use Visual Basic methods and properties to work with hyperlinks. For example, use the <b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">FollowHyperlink</b> method to navigate to the address referenced in a hyperlink, and use the <b>AddToFavorites</b> method to add a hyperlink to the Favorites folder.</td>
</tr>
<tr valign=top>
<TD>
Jumping to Microsoft Office documents and files</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Navigate to Microsoft Access objects in the current database or other databases by using hyperlinks from the current Microsoft Access database or from another Microsoft Office application.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Navigate to documents from other Microsoft Office applications by using hyperlinks from Microsoft Access databases.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Use the <b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Back</b> and <b>Forward</b> buttons on the Web toolbar to navigate between followed hyperlinks to database objects and other Microsoft Office documents.</td>
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Locate Microsoft Access databases and other Microsoft Office documents with Web Find Fast.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
Publishing and sharing data in a database on the Web</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Save the data from table, query, and form datasheets, or reports as static HTML documents.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Create Internet Database Connector/HTML extension (IDC/HTX) files to query data from a table, query, or form datasheet in a database on an Internet server and display it in a Web page.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Save a Microsoft Access form as an Active Server Page (ASP) that emulates many of the features of the form so that users can view, enter, and update information in a database on an Internet server.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Create an Active Server Page (ASP) to query data from a table, query, or form datasheet in a database on an Internet server and display it in a Web page.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Use the Publish to the Web Wizard to automate the process of publishing and sharing data, store settings from previous publications, and call the Web Publishing Wizard to copy Web files to your Internet server.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Export HTML documents, IDC/HTX files, or Active Server Pages (ASP) by using the <b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">OutputTo</b> method or action.</td>
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Attach HTML documents, IDC/HTX files, or Active Server Pages (ASP) to e-mail messages by using the <b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">SendObject</b> method or action.</td>
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Export tables as HTML tables by using the <b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">TransferText</b> method or action.</td>
</tr>
<tr valign=top>
<TD>
Using the Internet with database replication</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Synchronize a database replica with a replica or Design Master on an Internet server.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
Importing, linking, and exporting data located on the Internet or an intranet</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Import and link HTML tables and lists by using the Import HTML Wizard and the Link HTML Wizard. When you link HTML tables, the data is read-only.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Import and link any data on an Internet server that is supported by a built-in Microsoft Access driver. When you link data on an Internet server, the data is read-only.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Use the <b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Import</b> and <b>Link</b> dialog boxes to browse FTP sites when you are importing or linking data. You can also use the <b>Import</b> and <b>Link</b> dialog boxes to enter an HTTP address when you are importing or linking data. </td>
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Import or link HTML tables by using the <b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">TransferText</b> method or action. When you link HTML tables, the data is read-only.</td>
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Import or link data by using HTTP and FTP addresses, and export data by using FTP addresses in the following Visual Basic properties, methods, and actions:<p><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b>Connect</b> property<b>CreateTableDef</b> method<b>OutputTo</b> method and action<b>TransferDatabase</b> method and action<b>TransferText</b> method and action<b>TransferSpreadsheet</b> method and action</p>
</td>
</tr>
<tr valign=top>
<TD>
Displaying Web pages and other documents in Microsoft Access forms</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Use the WebBrowser control on your application’s forms to browse Web sites, view Web pages and other documents, and download data located on the Internet. You can use the WebBrowser control to browse sites on the World Wide Web, as well as folders in the local file system and on a network. </td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
</table>
<p>
The following sections describe each of these features in more detail.</p>
<h2><a name="usinghyperlinksinmicrosoftaccessapplications"></a>Using Hyperlinks in Microsoft Access Applications</h2>
<p>
Hyperlinks can jump to two kinds of objects: a Web page or other content on the Internet or an intranet, or to a Microsoft Office document (Microsoft Word document, Microsoft Excel worksheet, Microsoft PowerPoint slide, or Microsoft Access database object) stored on a local hard disk or a LAN.</p>
<p>
There are two ways you can use hyperlinks in Microsoft Access applications:
<ul>
<li>
Create a field with the Hyperlink data type to store hyperlink addresses in a table, and then bind that field to a text box on a form. Like other bound fields, as the user moves from record to record, the value in the text box changes to display the current record’s hyperlink value. For example, you can use hyperlinks in this way to create an application in which users can jump to Web pages, or to other content on the Internet or an intranet, from a predefined list of addresses. You can also use hyperlinks in this way to create an application that displays and manages Microsoft Office documents.</li>
<li>
Create a label, image control, or command button on a form that references a specified hyperlink address. In this case, the hyperlink doesn’t change as you move from record to record. For example, you can use hyperlinks in this way to navigate to other database objects within the same database, or to open a Web page on an intranet that contains updated information on how to use your application.</li>
</ul>
<p>
Regardless of how a hyperlink is defined in your application, if the hyperlink jumps to a database object or opens another Microsoft Office document, you can use the Web toolbar to navigate between the hyperlinks you’ve previously followed. For example, in the following illustration, the Products form has a command button with a hyperlink that opens a report. Once you have clicked the hyperlink, you can use the Web toolbar to navigate between other objects you’ve opened with hyperlinks. </p>
<p>
<img src="abac21_2.gif" border=0></p>
<p>
Similarly, if you follow a hyperlink from a Microsoft Access form to open a Microsoft Word document, you can click the <b>Back</b> button on the Web toolbar in Microsoft Word to return to the form.</p>
<p>
<b>Note</b>&nbsp;&nbsp;&nbsp;By default, after a user clicks a hyperlink on a form, Microsoft Access continues to display the Web toolbar when the user closes the form. If you want to prevent this, you can use Visual Basic code in the OnClose event of the form to hide the toolbar. To see an example of Visual Basic code that does this, open the Products form in the Northwind sample application in Design view, and then display the event procedure in the OnClose event of the form. </p>
<h3>Storing Hyperlinks in Tables</h3>
<p>
In Microsoft Access 97, a field in a table can store hyperlinks as data. To create a Hyperlink field, add a field in table Design view and set its <b>DataType</b> property to Hyperlink. You can also create a Hyperlink field in table Datasheet view by clicking <b>Hyperlink Column</b> on the <b>Insert</b> menu.</p>
<p>
You can follow a hyperlink stored in a table by clicking it in the table, but more typically, the field will be bound to a text box control on a form.</p>
<p>
<b><font face="Symbol"><span style="font-family:symbol">&#219;</span></font>&#09;To add a text box that is bound to a Hyperlink field to a form</b>
<ol>
<li>
Open the form in Design view.</li>
<li>
Make sure the form’s <b>RecordSource</b> property is set to the table that contains the Hyperlink field, or to a query that includes the table.<p>
<img src="abac21_3.gif" border=0></p>
</li>
<li>
Click <b>Field List</b> on the toolbar.</li>
<li>
Drag the Hyperlink field from the field list to the form.</li>
</ol>
<p>
To see an example of how to use a Hyperlink field, open the Suppliers form in the Northwind sample application. The Home Page text box on the form is bound to the HomePage field in the Suppliers table. Clicking a hyperlink in the text box starts your Web browser and displays the supplier’s home page.</p>
<p>
<img src="abac21_4.gif" border=0></p>
<p>
You can also use hyperlinks in Microsoft Access to jump to database objects and other Microsoft Office documents. For example, you could create a document management application that uses a Hyperlink field to store paths to Microsoft Word documents on a network. Users of such an application could add records to track new documents, or click the hyperlink in a previously added record to open the specified document.</p>
<h4>The Hyperlink Field Storage Format</h4>
<p>
A Hyperlink field stores up to three pieces of information: the <i>displaytext</i>, the <i>address</i>, and the<i> subaddress</i>. Each piece is separated by the number sign (#), in the following format:</p>
<p>
<i>displaytext</i><b>#</b><i>address</i><b>#</b><i>subaddress</i></p>
<p>
The following table describes each piece of the Hyperlink field storage format.</p>
<table>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Piece</b></td>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</b></td>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Required</b>?</td>
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
<i><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">displaytext</i></td>
<TD>
The text the user sees in the Hyperlink field in a table, or in a text box bound to the Hyperlink field. You can set the display text to any text string. For example, you may want the display text to be a descriptive name for the Web site or object specified by the <i><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">address</i> and <i>subaddress</i>. If you do not specify display text, Microsoft Access displays the value of <i>address</i> instead.</td>
<TD>
No</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
<i><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">address</i> </td>
<TD>
A valid URL that points to a page or file on the Internet or an intranet, or the path to a file on a local hard drive or LAN. If you enter a path on a LAN, you can omit a mapped drive letter and use the universal naming convention (UNC) format: <b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">\\</b><i>server</i><b>\</b><i>share</i><b>\</b><i>path</i><b>\</b><i>filename.</i> This prevents the path from becoming invalid if the database is later copied to another computer’s hard drive or into a shared network folder.</td>
<TD>
Yes, unless <i><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">subaddress</i> points to an object in the current database (.mdb) file.</td>
</tr>
<tr valign=top>
<TD>
<i><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">subaddress</i> </td>
<TD>
The location within a file or document; for example, a database object, such as a form or report. When referring to a database object, the name of the object should be preceded by its type: Table, Query, Form, Report, Macro, or Module. Other possible values for<i><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"> subaddress</i> include a bookmark in a Microsoft Word document, an anchor in an HTML document, a Microsoft PowerPoint slide, or a cell in a Microsoft Excel worksheet.</td>
<TD>
No</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
</table>
<p>
Each piece of the Hyperlink field storage format can be up to 2,000 characters. The maximum length of the entire Hyperlink field value is 6,000 characters.</p>
<p>
The following table gives examples of valid Hyperlink field values.</p>
<table>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Hyperlink field value</b></td>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Jumps to</b></td>
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
Cajun Delights#http://www. cajundelights.com/cajun.htm#</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
The Cajun Delights Web page. Only the words “Cajun Delights” are displayed in the field or control.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
#http://www.cajundelights.com/cajun.htm#</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
The Cajun Delights Web page. The text “http://www.cajundelights.com” appears in the field or control because no display text is specified.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
#http://www.cajundelights. com/cajun.htm#Price</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
The HTML anchor with the NAME attribute Price on the Cajun Delights Web page. The text “http://www.cajundelights.com/ cajun.htm” is displayed in the field or control.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
Resume#c:\windows\personal\resume.doc#</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
A Microsoft Word file named Resume.doc located in the \Windows\Personal folder. Only the word “Resume” is displayed in the field or control.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
#c:\windows\personal\resume.doc#</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
A Microsoft Word file named Resume.doc located in the \Windows\Personal folder. The text “c:\windows\personal\resume.doc” appears in the field or control because no display text is specified.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
#c:\windows\personal\resume. doc#Qualifications</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
The section in the Resume.doc Microsoft Word file marked with the bookmark name Qualifications. The text “c:\windows\ personal\resume.doc” is displayed in the field or control.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
#\\databases\samples\northwind.mdb#Form Suppliers</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
The Suppliers form in the Northwind sample application located in the Samples share on the Databases server on a LAN (UNC format path). The text “\\databases\ samples\northwind.mdb” is displayed in the field or control.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
Suppliers Form##Form Suppliers</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
The Suppliers form in the current database. The words “Suppliers Form” are displayed in the field or control.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
#c:\windows\personal\1996 Sales.ppt#13</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Slide 13 in the 1996 Sales Microsoft PowerPoint presentation located in the \Windows\Personal folder. The text “c:\windows\personal\1996 Sales.ppt” is displayed in the field or control.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
#c:\windows\personal\budget.xls#Sheet1!A2</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
The A2 cell in Sheet1 of the Budget.xls file located in the \Windows\Personal folder. The text “c:\windows\personal\budget.xls” is displayed in the field or control.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
</table>
<p>
You can display the stored hyperlink format by pressing F2 when the insertion point is in the Hyperlink field. You can edit the stored hyperlink in this form as long as you enter number signs (#) in the appropriate locations. You can add or edit the <i>displaytext</i> part of a hyperlink field by right-clicking a hyperlink in a table, pointing to <b>Hyperlink</b> on the shortcut menu, and then typing the display text in the <b>Display Text</b> box.</p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;For more information on the Hyperlink field storage format, search the Help index for “hyperlinks, addresses.”</p>
<h4>Entering a URL as a Hyperlink Address</h4>
<p>
To create a hyperlink that jumps to a Web page or other Internet content, you must enter a valid URL as the hyperlink address. You can enter a URL that points to any Internet file type or resource supported by the browser or to an ActiveX control, such as the WebBrowser control, that will be used to display or run it. You enter most URLs in the following format:</p>
<p>
<i>protocol</i><b>://</b><i>serveraddress</i><b>/</b><i>path</i></p>
<p>
<i>Protocol</i> specifies the Internet protocol used to establish the connection to the server, and is generally followed by a colon and two slash marks. S<i>erveraddress</i> specifies what is usually called the <i>domain name</i> of the Internet server. <i>Path</i> specifies the location and name of the page or file on the Internet server. For example, the URL to the home page of the Microsoft Access Developer Forum is:</p>
<p>
http://www.microsoft.com/accessdev/</p>
<p>
When you type a URL into a Hyperlink field, Microsoft Access automatically recognizes the following Internet protocols.</p>
<table>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Protocol</b></td>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Protocol name</b></td>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</b></td>
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
http</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Hypertext Transfer Protocol</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Jumps to Web pages that contain text, graphics, sound, and other digital information from a Web server on the World Wide Web.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
ftp</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
File Transfer Protocol</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Transfers files between computers on the Internet.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
gopher</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Gopher protocol</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Displays information on a Gopher server.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
wais</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
WAIS protocol</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Accesses a Wide Area Information Servers database.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
file</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
File protocol</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Opens a file on a local hard drive or LAN.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
https</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Hypertext Transfer Protocol with privacy</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Establishes an HTTP connection that uses Secure Sockets Layer (SSL) encryption.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
</table>
<table>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Protocol</b></td>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Protocol name</b></td>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</b></td>
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
mailto</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
MailTo protocol</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Opens your electronic mail program to send a message to the specified Internet e-mail address. A URL that uses the MailTo protocol has a different format:(<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">mailto:</b><i>username</i><b>@</b><i>domain</i>)</td>
</tr>
<tr valign=top>
<TD>
msn</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Microsoft Network protocol</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Jumps to a location on The Microsoft Network.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
news</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
News protocol</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Starts a newsreader and opens the specified Usenet newsgroup. A URL that uses the News protocol has a different format:(<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">news:</b><i>newsgroupname</i>)</td>
</tr>
<tr valign=top>
<TD>
nntp</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Network News Transfer Protocol</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Performs the same function as News protocol, except two slashes follow the colon (<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">nntp://</b><i>newsgroupname</i>).</td>
</tr>
<tr valign=top>
<TD>
mid</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Musical Instrument Digital Interface (MIDI) protocol</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Plays MIDI sequencer files if the user’s computer has a sound card.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
cid</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
CompuServe&reg; Dialer (CID) protocol </td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Establishes a point-to-point protocol (PPP) connection with the Internet through CompuServe’s network.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
prospero</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Prospero protocol</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Opens files on the Prospero distributed file system.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
telnet</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Telnet protocol</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Starts a telnet <i><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">terminal emulation program</i>. A terminal emulation program is a command-line interface that you can use to issue commands on a remote computer. For example, by using telnet to connect to a UNIX server, you can issue UNIX commands to perform operations on that server.</td>
</tr>
<tr valign=top>
<TD>
rlogin</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Rlogin protocol</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Starts an Rlogin terminal emulation program.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
tn3270</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
TN3270 protocol</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Starts a TN3270 terminal emulation program.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
pnm</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
RealAudio protocol</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Plays RealAudio streaming audio from a RealAudio server. Streaming audio and other streaming media formats establish a connection to the server and start playing immediately without downloading an entire file.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
mms</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Microsoft Media Server (MMS) protocol</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Plays media such as ActiveMovie™ streaming format files (.asf) from an MMS server.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
</table>
<p>
If you create a field by importing a column of data and all records in the imported data begin with one of these protocols, Microsoft Access automatically sets the data type of the imported field to Hyperlink. Similarly, if you create a new table in Datasheet view, and every entry you make in a field begins with one of these protocols, Microsoft Access sets the data type of the new field to Hyperlink when you save the table.</p>
<h3>Creating a Label, Image Control, or Command Button That Follows a Hyperlink</h3>
<p>
To add a label, image control, or command button that follows a hyperlink to a form, set the <b>HyperlinkAddress</b> and <b>HyperlinkSubAddress</b> properties of the control to point to the content on the Internet or an intranet, or to the Microsoft Office document or Microsoft Access database object you want to jump to. </p>
<p>
<b>Note</b>&nbsp;&nbsp;&nbsp;The <b>HyperlinkAddress</b> and <b>HyperlinkSubAddress</b> property settings correspond to the <i>address</i> and <i>subaddress</i> values entered for a Hyperlink field. For more information on these values, see “The Hyperlink Field Storage Format” earlier in this chapter.</p>
<p>
Additionally, to create the hyperlink display text for a label or command button control, you must set the <b>Caption</b> property. No text displays for an image control, so there is no corresponding display text setting.</p>
<p>
You can also create a label that follows a hyperlink by opening the form in Design view, and then using the <b>Hyperlink</b> command (<b>Insert</b> menu). However, this method won’t define the display text. To define display text, you must set the label’s <b>Caption</b> property.</p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;For more information on creating a label, image control, or command button that follows a hyperlink, search the Help index for “hyperlinks, creating.”</p>
<h3>Using Visual Basic Methods and Properties to Work with Hyperlinks</h3>
<p>
Microsoft Access 97 provides a several methods and properties that you can use to work with hyperlinks in Visual Basic code. The following table summarizes these methods and properties.</p>
<table>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Method or property name</b></td>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</b></td>
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Follow</b> method</td>
<TD>
The <b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Follow</b> method has the same effect as clicking a hyperlink. When you use the <b>Follow</b> method, you don’t need to know the address specified by a control’s <b>HyperlinkAddress</b> or <b>HyperlinkSubAddress</b> property, or by the Hyperlink field that is bound to a text box control. You only need to know the name of the control that contains the hyperlink.</td>
</tr>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">FollowHyperlink</b> method</td>
<TD>
Follows a hyperlink specified in code or passed to the method from an unbound text box. For example, you can prompt a user to type a hyperlink address in a dialog box, and then use the <b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">FollowHyperlink</b> method to navigate to that address. You can also use the <b>FollowHyperlink</b> method to specify a hyperlink for controls other than labels, image controls, and command buttons, or text boxes bound to Hyperlink fields.</td>
</tr>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">AddToFavorites</b> method</td>
<TD>
Adds the hyperlink address specified in the referenced control to the Favorites folder.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Hyperlink</b> property</td>
<TD>
Returns a reference to a hyperlink object in code. You can use the <b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Hyperlink</b> property to access the properties and methods of any control that contains a hyperlink.</td>
</tr>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">HyperlinkAddress</b> property</td>
<TD>
Sets or returns the address of a hyperlink for a label, image control, or command button. The <b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">HyperlinkAddress</b> property is equivalent to setting or returning the <b>Address</b> property for the control in Visual Basic; for example, <i>object</i>.<b>HyperlinkAddress</b> is equivalent to <i>object</i>.<b>Hyperlink.Address</b>. You can also set the <b>HyperlinkAddress</b> property in the control’s property sheet.</td>
</tr>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">HyperlinkSubAddress</b> property</td>
<TD>
Sets or returns the location within the Microsoft Office document or object specified by the <b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">HyperlinkAddress</b> property. When no <b>HyperlinkAddress</b> property is specified, <b>HyperlinkSubAddress</b> specifies a database object in the current database. The <b>HyperlinkSubAddress</b> property is equivalent to setting or returning the <b>SubAddress</b> property for the control in Visual Basic; for example, <i>object</i>.<b>HyperlinkSubAddress</b> is equivalent to <i>object</i>.<b>Hyperlink.SubAddress</b>. You can also set the <b>HyperlinkSubAddress</b> property in the control’s property sheet.</td>
</tr>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">HyperlinkPart </b>function</td>
<TD>
Parses the three parts of a hyperlink stored in a table.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
</table>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;For more information on these methods and properties, search the Help index for the name of the method or property.</p>
<h4>Example of Using the Follow Method</h4>
<p>
This example uses the <b>Follow</b> method to automatically open the Web page specified in a text box bound to a Hyperlink field on a form. Add the following code to the OnCurrent event of a form. Note that you must use the <b>Hyperlink</b> property to return a reference to the object that contains the hyperlink.</p>
<pre><code>Private Sub Form_Current()
&#09;Dim txt As TextBox

&#09;On Error GoTo Error_Form1

&#09;' Set reference to the txtAddress text box bound to a Hyperlink field.
&#09;Set txt = txtAddress

&#09;' Follow the hyperlink.
&#09;txt.Hyperlink.Follow

Exit_Form1:
&#09;Exit Sub

Error_Form1: 
&#09;MsgBox Err &amp; &quot;: &quot; &amp; Err.Description
&#09;Resume Exit_Form1
End Sub
</code></pre>
<h4>Example of Using the FollowHyperlink Method</h4>
<p>
This example uses the <b>FollowHyperlink</b> method to add a hyperlink to a control that doesn’t support the <b>HyperlinkAddress</b> or <b>HyperlinkSubAddress</b> properties. Add the following code to the Click event of an unbound object frame named OLEUnbound1 to start a Web browser and open the specified hyperlink address when you click the image.</p>
<pre><code>Private Sub OLEUnbound1_Click()
&#09;Dim strAddress As String

&#09;On Error GoTo Error_OLEUnbound1

&#09;' Set reference to hyperlink address.
&#09;strAddress = &quot;http://www.microsoft.com&quot;

&#09;' Follow hyperlink address.
&#09;Application.FollowHyperlink strAddress, , True

Exit_OLEUnbound1:
&#09;Exit Sub

Error_OLEUnbound1:
&#09;MsgBox Err &amp; &quot;: &quot; &amp; Err.Description
&#09;Resume Exit_OLEUnbound1
End Sub
</code></pre>
<p>
<img src="abac21_5.gif" border=0></p>
<p>
Tip   Controls that don’t support the <b>HyperlinkAddress</b> or <b>HyperlinkSubAddress</b> properties don’t provide any feedback to the user to indicate that they contain a hyperlink. One way to inform a user that the control contains a hyperlink is to set the control’s <b>ControlTipText </b>property so that a text message appears when users rest the pointer on the control.</p>
<p>
<b>Note</b>&nbsp;&nbsp;&nbsp;You can also use the <b>FollowHyperlink</b> method to prompt a user to enter a hyperlink address and then to follow it. For an example of how to do this, search the Help index for “FollowHyperlink method.”</p>
<h4>The HyperlinkPart Function</h4>
<p>
The <b>HyperlinkPart</b> function returns information about data stored in a Hyperlink field. The syntax for the <b>HyperlinkPart</b> function is:</p>
<p>
<i>object</i><b>.HyperlinkPart(</b><i>hyperlink</i><b> As Variant,</b> <i>part</i> <b>As Integer)</b></p>
<p>
The following table describes the arguments of the <b>HyperlinkPart</b> function.</p>
<table>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Argument</b></td>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</b></td>
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
<i><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">object</i></td>
<TD>
Optional. The <b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Application</b> object.</td>
</tr>
<tr valign=top>
<TD>
<i><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">hyperlink</i></td>
<TD>
Required. A <b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Variant</b> that represents the data stored in a Hyperlink field.</td>
</tr>
<tr valign=top>
<TD>
<i><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">part</i></td>
<TD>
Optional. An intrinsic constant that represents the information you want returned by the <b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">HyperlinkPart</b> function.</td>
</tr>
</table>
<p>
You can set the <i>part</i> argument to the following constants.</p>
<table>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Constant</b></td>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Value</b></td>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</b></td>
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">acDisplayedValue</b></td>
<TD>
0</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
(Default) The underlined text displayed in a hyperlink.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">acDisplayText</b></td>
<TD>
1</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
The <i><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">displaytext</i> part of a Hyperlink field.</td>
</tr>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">acAddress</b></td>
<TD>
2</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
The <i><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">address</i> part of a Hyperlink field.</td>
</tr>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">acSubAddress</b></td>
<TD>
3</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
The <i><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">subaddress</i> part of a Hyperlink field.</td>
</tr>
</table>
<p>
<b>Note</b>&nbsp;&nbsp;&nbsp;If you use the <b>HyperlinkPart</b> function in an SQL statement or a query, the <i>part</i> argument is required and you can’t set it to the constants listed in the preceding table&nbsp;— you must use the value instead.</p>
<p>
You use the <b>HyperlinkPart</b> function to return one of three values stored in a Hyperlink field (<i>displaytext</i>, <i>address</i>, or <i>subaddress</i>) or the displayed value. The value returned depends on the setting of the <i>part</i> argument. If you don’t use the <i>part</i> argument, the<b> HyperlinkPart</b> function returns the value Microsoft Access displays for the hyperlink (which corresponds to the <b>acDisplayedValue</b> setting for the <i>part</i> argument).</p>
<p>
When a value is provided in the <i>displaytext</i> part of a Hyperlink field, the value displayed by Microsoft Access will be the same as the <i>displaytext</i> setting. When there’s no value in the <i>displaytext</i> part of a Hyperlink field, Microsoft Access displays the value of the <i>address</i> or <i>subaddress</i> part of the Hyperlink field, depending on which value is first present in the field.</p>
<p>
The following table shows the values returned by the <b>HyperlinkPart</b> function for data stored in a Hyperlink field.</p>
<table>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Hyperlink field data</b></td>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">HyperlinkPart function returned values</b></td>
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
#http://www.microsoft.com/#</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">acDisplayedValue</b>: http://www.microsoft.com/<b>acDisplayText</b>: No value returned.<b>acAddress</b>: http://www.microsoft.com/<b>acSubAddress</b>: No value returned.</td>
</tr>
<tr valign=top>
<TD>
Microsoft#http://www.microsoft.com/#</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">acDisplayedValue</b>: Microsoft<b>acDisplayText</b>: Microsoft<b>acAddress</b>: http://www.microsoft.com/<b>acSubAddress</b>: No value returned.</td>
</tr>
<tr valign=top>
<TD>
Customers##Form Customers</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">acDisplayedValue</b>: Customers<b>acDisplayText</b>: Customers<b>acAddress</b>: No value returned.<b>acSubAddress</b>: Form Customers</td>
</tr>
<tr valign=top>
<TD>
##Form Customers</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">acDisplayedValue</b>: Form Customers<b>acDisplayText</b>: No value returned.<b>acAddress</b>: No value returned.<b>acSubAddress</b>: Form Customers</td>
</tr>
</table>
<p>
The following example uses all four of the <i>part</i> argument constants to display information returned by the <b>HyperlinkPart</b> function for each record in a table containing a Hyperlink field. To try this example, paste the DisplayHyperlinkParts procedure into the Declarations section of a module. You can call the DisplayHyperlinkParts procedure from the Debug window, passing to it the name of a table that contains hyperlinks and the name of the field that contains Hyperlink data, as shown in the following example.</p>
<pre><code>DisplayHyperlinkParts &quot;MyHyperlinkTableName&quot;, &quot;MyHyperlinkFieldName&quot;

Sub DisplayHyperlinkParts(strTable As String, strField As String)
&#09;Dim dbs As Database, rst As Recordset
&#09;Dim strMsg As String

&#09;Set dbs = CurrentDb
&#09;Set rst = dbs.OpenRecordset(strTable)

&#09;While Not rst.EOF&#09;&#09;' For each record in table.
&#09;&#09;strMsg = &quot;DisplayValue = &quot; &amp; HyperlinkPart(rst(strField), acDisplayedValue) _
&#09;&#09;&#09;&amp; vbCrLf &amp; &quot;DisplayText = &quot; &amp; HyperlinkPart(rst(strField), acDisplayText) _
&#09;&#09;&#09;&amp; vbCrLf &amp; &quot;Address = &quot; &amp; HyperlinkPart(rst(strField), acAddress) _
&#09;&#09;&#09;&amp; vbCrLf &amp; &quot;SubAddress = &quot; &amp; HyperlinkPart(rst(strField), acSubAddress)
&#09;&#09;' Show parts returned by HyperlinkPart function.
&#09;&#09;MsgBox strMsg
&#09;&#09;rst.MoveNext
&#09;Wend
End Sub</code></pre>
<p>
When you use the <b>HyperlinkPart</b> function in a query, the <i>part</i> argument is required. For example, the following SQL statement uses the <b>HyperlinkPart</b> function to return information about data stored as a Hyperlink data type in the URL field of the Links table:</p>
<pre><code>SELECT Links.URL, HyperlinkPart([URL],0)
AS Display, HyperlinkPart([URL],1)
AS Name, HyperlinkPart([URL],2)
AS Addr, HyperlinkPart([URL],3) AS SubAddr
FROM Links;</code></pre>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;For another example of using the <b>HyperlinkPart</b> function, see “Displaying a Document in the WebBrowser Control by Using a Hyperlink Stored in a Table” later in this chapter.</p>
<h2><a name="makingmicrosoftaccessdataavailableoninternet"></a>Making Microsoft Access Data Available on the Internet</h2>
<p>
With Microsoft Access, you can make your data available on the Internet or an intranet by:
<ul>
<li>
Saving data as HTML documents.</li>
<li>
Synchronizing a database replica with a replica or Design Master on an HTTP or FTP server.</li>
</ul>
<h3>Saving Data as HTML Documents</h3>
<p>
Microsoft Access has four ways to save data from your database as HTML documents:</p>
<p>
Save data as static HTML documents   You can create <i>static</i> HTML documents from table, query, and form datasheets, and from reports. When you save data as static HTML documents, the resulting pages reflect the state of the data at the time it was saved, like a snapshot. If your data changes, you must save the pages again to share the new data.</p>
<p>
Save table, query, and form datasheets as IDC/HTX files   You can save your table, query, and form datasheets as Internet Database Connector/HTML extension (IDC/HTX) files that generate HTML documents by querying a copy of your database located on a Web server for current data.</p>
<p>
Save forms and datasheets as Active Server Pages   You can save your forms as Active Server Pages (ASP) that emulate most of the functionality of your forms and display data from a database located on a Web server. You can also save table, query, and form datasheets as Active Server Pages that display current data from a copy of your database located on a Web server.</p>
<p>
Automate the publishing of dynamic and static HTML documents   You can use the Publish to the Web Wizard to automate the process of saving multiple objects to any combination of all three file types. In the Publish to the Web Wizard, IDC/HTX files and Active Server Pages (ASP) files are collectively referred to as <i>dynamic</i> Web pages because these file types display current data to users.</p>
<p>
The following sections discuss each of these options in more detail.</p>
<h4>Saving Data as Static HTML Documents</h4>
<p>
With Microsoft Access 97, you can save table, query, and form datasheets, and reports as static HTML documents.</p>
<p>
<b><font face="Symbol"><span style="font-family:symbol">&#219;</span></font>&#09;To save a table, query, or form datasheet, or a report as a static HTML document</b>
<ol>
<li>
In the Database window, click the table, query, form, or report you want to save.</li>
<li>
On the <b>File</b> menu, click <b>Save As/Export</b>. </li>
<li>
In the <b>Save As</b> dialog box, click <b>To An External File Or Database</b>, and then click <b>OK</b>.</li>
<li>
In the <b>Save As Type</b> box, click <b>HTML Documents (*.html; *.htm)</b>.</li>
<li>
If you want to preserve formatting, select the <b>Save Formatted</b> check box. To automatically open the resulting HTML document in your Web browser, select the<b> Autostart</b> check box.</li>
<li>
Specify the file name and location to save the file, and then click <b>Export</b>. </li>
<li>
In the <b>HTML Output Options</b> dialog box, if you want Microsoft Access to merge an HTML template with the resulting HTML document, specify that as well, and then click <b>OK</b>.<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;For information on HTML templates, see “Using an HTML Template When You Save Data as HTML Documents” later in this chapter.</p>
</li>
</ol>
<p>
You can also save data as static HTML documents by using the Publish to the Web Wizard (available through the<b> Save As HTML</b> command on the <b>File</b> menu), the <b>OutputTo</b> method in code, or the OutputTo action in macros.</p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;For more information on saving table, query, or form datasheets, and reports as HTML documents, search the Help index for “Saving database objects, saving in Internet/Web formats” or “OutputTo method.”</p>
<p>
When saving table, query, and form datasheets, Microsoft Access saves each datasheet to a single HTML file. Microsoft Access saves reports as multiple HTML documents, with one HTML file per printed page. To name each page, Microsoft Access uses the name of the object and appends _Page<i>nn</i> to the end of each page’s file name after the first page; for example, ProductList.htm, ProductList_Page2.htm, ProductList_Page3.htm, and so on.</p>
<h5>Saving Table, Query, and Form Datasheets as Static HTML Documents</h5>
<p>
When you save a table, query, or form datasheet as an HTML document, the HTML document generated is based on the table or query associated with the datasheet, including any sorting or filtering specified by the current setting of the <b>OrderBy</b> or <b>Filter</b> property of the table or query. </p>
<p>
If you select the <b>Save Formatted</b> check box, the HTML document contains an HTML table that reflects as closely as possible the appearance of the datasheet by using the appropriate HTML tags to specify color, font, and alignment. The HTML document follows as closely as possible the page orientation and margins of the datasheet. Whenever you want to use settings that are different from the default orientation and margins for a datasheet, you must first open the datasheet, and then use the <b>Page Setup</b> command (<b>File</b> menu) to change settings before you save the datasheet as an HTML document.</p>
<p>
If you select the <b>Save Formatted</b> check box, and a field has a <b>Format</b> or <b>InputMask</b> property setting, those settings are reflected in the data in the HTML document. For example, if a field’s <b>Format</b> property is set to Currency, the data in the HTML document is formatted with a dollar sign, a comma as the thousand separator, and two decimal places; for example, $1,123.45.</p>
<h5>Saving Reports as Static HTML Documents</h5>
<p>
When you save a report as HTML documents, the series of HTML documents generated is based on the report’s underlying table or query, including the current <b>OrderBy</b> or <b>Filter</b> property settings of the table or query.</p>
<p>
The HTML documents simulate as closely as possible the appearance of the report by creating the appropriate HTML tags to retain attributes such as color, font, and alignment. The proportions and layout of the actual report follow as closely as possible the page orientation and margins set for the report. To change the page orientation and margins, open the report in Print Preview, and then use the <b>Page Setup</b> command to change settings before you save the report as HTML documents. These settings are saved from session to session for reports, so if you change them once, they will be used the next time you save the form or report as HTML documents.</p>
<h5>Navigation Controls When Saving Multiple HTML Documents Per Object</h5>
<p>
If you specify an HTML template that contains placeholders for navigation controls when you save a report as multiple HTML documents, Microsoft Access creates hyperlinks that the user can use to navigate to the first, previous, next, and last pages in the publication. Where Microsoft Access places the hyperlinks depends on where you locate the placeholders in the HTML template.</p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;For information on HTML templates and placeholders, see “Using an HTML Template When You Save Data as HTML Documents” later in this chapter.</p>
<h5>How Microsoft Access Saves Data Types in HTML Format</h5>
<p>
When you save data as static HTML documents, Microsoft Access saves values from most data types as strings and formats them as closely as possible to their appearance in the datasheet or report.  There are two exceptions:
<ul>
<li>
OLE Object fields are not saved. </li>
<li>
Hyperlink field values are saved as hyperlinks in the HTML document. The hyperlinks use HTML anchor tags with an HREF attribute, as described in the following table.<table>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">If</b></td>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Anchor tag format</b></td>
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
The hyperlink doesn’t include a subaddress</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
&lt;A HREF=&quot;<i><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">address</i>&quot;&gt;<i>displaytext</i>&lt;/A&gt; </td>
</tr>
<tr valign=top>
<TD>
The hyperlink includes a subaddress</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
&lt;A HREF=&quot;<i><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">address</i>#<i>subaddress</i>&quot;&gt;<i>displaytext</i>&lt;/A&gt; </td>
</tr>
<tr valign=top>
<TD>
Display text isn’t specified</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
 &lt;A HREF=&quot;<i><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">address</i>&quot;&gt;<i>address</i>&lt;/A&gt;</td>
</tr>
</table>
</li>
</ul>
<p>
Microsoft Access determines the <i>displaytext</i>, <i>address</i>, and <i>subaddress</i> values by parsing the value stored in the Hyperlink field.</p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;For information on the <i>displaytext</i>, <i>address</i>, and <i>subaddress</i> values, see “The Hyperlink Field Storage Format” earlier in this chapter.</p>
<h5>Using an HTML Template When You Save Data as HTML Documents</h5>
<p>
When you save data as HTML documents, you can use an HTML template to give a consistent look to the HTML documents you create. For example, you can include your company’s logo, name, and address in the page’s header, use the background that is used throughout your company, or include standard text in the header or footer of the HTML document.</p>
<p>
<b>Note</b>&nbsp;&nbsp;&nbsp;You can use an HTML template when you save data as static HTML documents, when you save datasheets as IDC/HTX files, when you save a form or datasheet as an Active Server Page, and when you use the Publish to the Web Wizard.</p>
<p>
The HTML template can be any HTML document; that is, a text file that includes HTML tags and user-specified text and references. In addition, the HTML template can include placeholders that tell Microsoft Access where to insert certain pieces of data in the HTML documents. When data is saved as HTML documents, the placeholders are replaced with data. The following table describes each of the placeholders that you can use in an HTML template.</p>
<table>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Placeholder</b></td>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</b></td>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Location</b></td>
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
&lt;!--AccessTemplate_Title--&gt;</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
The name of the object being saved</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Between &lt;TITLE&gt; and &lt;/TITLE&gt;</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
&lt;!--AccessTemplate_Body--&gt;</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
The data or object being saved</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Between &lt;BODY&gt; and &lt;/BODY&gt;</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
&lt;!--AccessTemplate_FirstPage--&gt;</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
An anchor tag to the first page</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Between &lt;BODY&gt; and &lt;/BODY&gt; or after &lt;/BODY&gt;</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
&lt;!--AccessTemplate_PreviousPage--&gt;</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
An anchor tag to the previous page</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Between &lt;BODY&gt; and &lt;/BODY&gt; or after &lt;/BODY&gt;</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
&lt;!--AccessTemplate_NextPage--&gt;</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
An anchor tag to the next page</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Between &lt;BODY&gt; and &lt;/BODY&gt; or after &lt;/BODY&gt;</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
&lt;!--AccessTemplate_LastPage--&gt;</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
An anchor tag to the last page</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Between &lt;BODY&gt; and &lt;/BODY&gt; or after &lt;/BODY&gt;</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
&lt;!--AccessTemplate_PageNumber--&gt;</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
The current page number </td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Between &lt;BODY&gt; and &lt;/BODY&gt; or after &lt;/BODY&gt;</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
</table>
<p>
When you install Microsoft Access, sample HTML template files and graphics files are installed in the Access subfolder of the Templates folder. The default location of this folder is C:\Program Files\Microsoft Office\Office\Templates\Access.</p>
<h4>Saving Table, Query, and Form Datasheets as IDC/HTX Files</h4>
<p>
With Microsoft Access, you can save a table, query, or form datasheet as Internet Database Connector/HTML extension<i> </i>(IDC/HTX) files that generate HTML documents by querying a copy of your database located on a Web server. In contrast to static HTML documents, which contain the data that was current at the time the HTML document was created, IDC/HTX files generate an HTML page with current data from your database; therefore, the HTML documents that they generate are called dynamic.</p>
<p>
<b><font face="Symbol"><span style="font-family:symbol">&#219;</span></font>&#09;To save a table, query, or form datasheet as IDC/HTX files</b>
<ol>
<li>
In the Database window, click the table, query, or form you want to save.</li>
<li>
On the <b>File</b> menu, click <b>Save As/Export.</b> </li>
<li>
In the <b>Save As</b> dialog box, click <b>To An External File Or Database</b>, and then click <b>OK</b>.</li>
<li>
In the <b>Save As Type </b>box, click <b>Microsoft IIS 1-2 (*.htx/*.idc)</b>.</li>
<li>
Specify the file name and location to save the files, and then click <b>Export</b>. </li>
<li>
In the <b>HTX/IDC Output Options</b> dialog box, specify:<ul>
<li>
The data source name that will be used for a copy of the current database.</li>
<li>
A user name and password, if required to open the database.</li>
<li>
An HTML template, if you want Microsoft Access to merge one with the HTML extension (HTX) file.</li>
</ul>
<p>
<b>Note</b>&nbsp;&nbsp;&nbsp;You can specify any of these items later, except the HTML template, by editing the resulting IDC file in a text editor such as Notepad.</p>
</li>
<li>
Click <b>OK</b>.</li>
</ol>
<p>
You can also save a table, query, or form datasheet as IDC/HTX files by using the Publish to the Web Wizard (available through the<b> Save As HTML</b> command on the <b>File</b> menu), the <b>OutputTo</b> method in code, or the OutputTo action in macros.</p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;For more information on saving table, query, or form datasheets as IDC/HTX files, search the Help index for “Saving database objects, saving in Internet/Web formats” or “OutputTo method.”</p>
<h5>How the Internet Database Connector Works</h5>
<p>
When you save a table, form, or query datasheet as Internet Connector files, Microsoft Access creates two files: an <i>Internet Database Connector (IDC) file</i> and <i>HTML extension (HTX) file</i>. These files are used to generate a Web page that displays current data from your database.</p>
<p>
An IDC file contains the necessary information to connect to a specified Open Database Connectivity (ODBC) data source and to run an SQL statement that queries the database. The information needed to connect to the database includes the data source name, and if user-level security is established for the database, the user name and password required to open the database. For example, if you save the Current Product List query datasheet from the Northwind sample application as IDC/HTX files, Microsoft Access creates the following IDC file:</p>
<pre><code>Datasource:Northwind
Template:Current Product List.htx
SQLStatement:SELECT [Product List].ProductID, [Product List].ProductName
+FROM Products AS [Product List]
+WHERE ((([Product List].Discontinued)=No))
+ORDER BY [Product List].ProductName;

Password:
Username:
</code></pre>
<p>
An IDC file also contains the name and location of an HTML extension (HTX) file. The HTX file is a template for the HTML document; it contains field merge codes that indicate where the values returned by the SQL statement should be inserted. For example, if you save the Current Product List query datasheet from the Northwind sample application as IDC/HTX files, Microsoft Access creates the following HTX file:</p>
<pre><code>&lt;HTML&gt;
&lt;TITLE&gt;Current Product List&lt;/TITLE&gt;
&lt;BODY&gt;
&lt;TABLE BORDER=1 BGCOLOR=#ffffff&gt;&lt;FONT FACE=&quot;Arial&quot; COLOR=#000000&gt;
&lt;CAPTION&gt;&lt;B&gt;Current Product List&lt;/B&gt;&lt;/CAPTION&gt;

&lt;THEAD&gt;
&lt;TR&gt;
&lt;TD&gt;&lt;FONT SIZE=2 FACE=&quot;Arial&quot; COLOR=#000000&gt;Product ID&lt;/FONT&gt;&lt;/TD&gt;
&lt;TD&gt;&lt;FONT SIZE=2 FACE=&quot;Arial&quot; COLOR=#000000&gt;Product Name&lt;/FONT&gt;&lt;/TD&gt;
&lt;/TR&gt;
&lt;/THEAD&gt;
&lt;TBODY&gt;
&lt;%BeginDetail%&gt;
&lt;TR VALIGN=TOP&gt;
&lt;TD ALIGN=RIGHT&gt;&lt;FONT SIZE=2 FACE=&quot;Arial&quot; COLOR=#000000&gt;&lt;%ProductID%&gt;&lt;BR&gt;&lt;/FONT&gt;&lt;/TD&gt;
&lt;TD&gt;&lt;FONT SIZE=2 FACE=&quot;Arial&quot; COLOR=#000000&gt;&lt;%ProductName%&gt;&lt;BR&gt;&lt;/FONT&gt;&lt;/TD&gt;
&lt;/TR&gt;
&lt;%EndDetail%&gt;
&lt;/TBODY&gt;
&lt;TFOOT&gt;&lt;/TFOOT&gt;
&lt;/BODY&gt;
&lt;/HTML&gt;
</code></pre>
<p>
Microsoft Access saves the HTX file to be used with an IDC file with the same name as the IDC file, except with an .htx file name extension rather than an .idc file name extension. After the database information has been merged into the HTML document, it is returned to the Web browser.</p>
<p>
If you open Current Product List.idc from a Microsoft Internet Information Server that has an appropriately defined Northwind data source name (DSN), the Web page shown in the following illustration is generated.</p>
<p>
<img src="abac21_6.gif" border=0></p>
<p>
<b>Note</b>&nbsp;&nbsp;&nbsp;You can also reference an HTML template when you create IDC and HTX files. An HTML template contains additional HTML code to enhance the appearance of the resulting pages. If you specify an HTML template, it is merged with the HTX file. For information on the format of an HTML template, see “Using an HTML Template When You Save Data as HTML Documents” earlier in this chapter.</p>
<h5>Requirements for Using IDC/HTX Files</h5>
<p>
To use IDC/HTX files, your database and the IDC/HTX files must reside on a computer running one of the following operating systems and Internet server platforms:
<ul>
<li>
Microsoft Windows NT Server version 3.51 or 4.0 running Microsoft Internet Information Server version 1.0, 2.0, or 3.0</li>
<li>
Microsoft Windows NT Workstation version 4.0 and Microsoft Peer Web Services</li>
<li>
Microsoft Windows&nbsp;95 and Microsoft Personal Web Server</li>
</ul>
<p>
Microsoft Internet Information Server, Microsoft Peer Web Services, and Personal Web Server use a component called the Internet Database Connector (Httpodbc.dll) to generate Web pages from IDC/HTX files.</p>
<p>
The Internet Database Connector component requires ODBC drivers to access a database. To access a Microsoft Access database, the Microsoft Access Desktop driver (Odbcjt32.dll) must be installed on your Web server. This driver is installed when you install Microsoft Internet Information Server if you select the <b>ODBC Drivers And Administration</b> check box during Setup.</p>
<p>
However, the Microsoft Access Desktop driver isn’t installed with Personal Web Server. If Microsoft Access is installed on the computer you are using to run Personal Web Server, and if you selected the driver when you installed Microsoft Access, the driver is already available. If you don’t have Microsoft Access installed on the computer you are using to run Personal Web Server, you must install the Microsoft Access Desktop driver.</p>
<p>
<b><font face="Symbol"><span style="font-family:symbol">&#219;</span></font>&#09;To install the Microsoft Access Desktop driver</b>
<ol>
<li>
Run the Microsoft Office or Microsoft Access Setup program.</li>
<li>
If you are running Setup for the first time, click <b>Custom</b>.<p>
If you are not running Setup for the first time, click <b>Add/Remove</b>.</p>
</li>
<li>
Select the <b>Data Access Controls </b>check box, and then click <b>Change Option</b>.<p>
Important   The <b>Microsoft Access</b> check box must also be selected or the driver will not be installed.</p>
</li>
<li>
Select the <b>Database Drivers</b> check box, and then click <b>Change Option</b>.</li>
<li>
Select the <b>Microsoft Access Driver</b> check box, and then click <b>OK</b>.</li>
<li>
Click <b>Continue</b>, and follow the instructions in the remaining Setup dialog boxes.</li>
</ol>
<p>
After the Microsoft Access Desktop driver is installed, you must create either a system DSN or a file DSN that specifies the name and connection information for each database you want to use on the server. You then specify that DSN when you generate the IDC/HTX files.</p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;For information on how to define a system DSN or a file DSN, search the Help index for “ODBC, setting up data sources.” For more information on Microsoft Internet Information Server, see the Microsoft Internet Information Server Web site, located at http://www.microsoft.com/infoserv/iisinfo.htm. For more information on using IDC/HTX files, search the Microsoft Internet Information Server Help index for “database connector.”</p>
<p>
<img src="abac21_7.gif" border=0></p>
<p>
Tip   You can learn more about applications that use IDC/HTX files by reading about the Job Forum application. For information on the Job Forum application, see the Job Forum white paper, located at http://www.microsoft.com/accessdev/accwhite/jobforpa.htm. For applications that require many users to access the database simultaneously, you should consider upsizing the Microsoft Access database back-end server to Microsoft SQL Server. For information about upsizing a Microsoft Access Web application to Microsoft SQL Server, see http://www.microsoft.com/accessdev/accwhite/upsizeweb.htm.</p>
<h4>Saving Forms and Datasheets as Active Server Pages </h4>
<p>
With Microsoft Access, you can save a form as an Active Server Page that emulates much of the functionality of your form. When saving a form as an Active Server Page, Microsoft Access saves most, but not all, controls on the form as ActiveX controls that perform the same or similar functions. Microsoft Access doesn’t save or run Visual Basic code behind the form or controls. To copy the layout of your form as closely as possible, Microsoft Access uses the Microsoft HTML Layout control to position the controls on Active Server Pages. The resulting page uses Visual Basic scripting and a feature of the Active Server Pages components called the Active Database Object (ADO) to connect to a copy of your database on an Internet server.</p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;For information on the Microsoft HTML Layout control, see http://www.microsoft.com/workshop/author/layout/layout.htm.</p>
<p>
Users who open a form saved as an Active Server Page can browse records, update or delete existing records, and add new records. </p>
<p>
You can also save table, query, and form datasheets as Active Server Pages. When you open a datasheet saved as an Active Server Page, Microsoft Access displays current data from a copy of your database located on an Internet server, much like IDC/HTX files do. However, unlike IDC/HTX files, Active Server Pages require only one file per datasheet. The ASP file uses Visual Basic scripting to establish a connection to the database on the server, and contains information that it uses to format the datasheet. Unlike a form saved as an Active Server Page, users can’t update existing records in or add new records to a datasheet saved as an Active Server Page.</p>
<p>
<b><font face="Symbol"><span style="font-family:symbol">&#219;</span></font>&#09;To save a form or datasheet as an Active Server Page</b>
<ol>
<li>
In the Database window, click the form or datasheet you want to save.</li>
<li>
On the <b>File</b> menu, click <b>Save As/Export.</b> </li>
<li>
In the <b>Save As</b> dialog box, click <b>To An External File Or Database</b>, and then click <b>OK</b>.</li>
<li>
In the <b>Save As Type </b>box, click <b>Microsoft Active Server Pages(*.asp)</b>.</li>
<li>
Specify the file name and location to save the file, and then click <b>Export</b>. </li>
<li>
In the <b>Microsoft Active Server Pages Output Options</b> dialog box, specify:<ul>
<li>
The data source name that will be used for a copy of the current database.</li>
<li>
A user name and password, if required to open the database.</li>
<li>
An HTML template, if you want Microsoft Access to merge one with the Active Server Page.<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;For information on HTML templates, see “Using an HTML Template When You Save Data as HTML Documents” earlier in this chapter.</p>
</li>
<li>
The URL for the server where the Active Server Page will reside.</li>
<li>
The<b> Session Timeout</b> setting, which determines how long a connection to the server is maintained after the user stops working with the Active Server Page.</li>
</ul>
</li>
<li>
Click <b>OK</b>.</li>
</ol>
<p>
You can also save forms and datasheets as Active Server Pages by using the Publish to the Web Wizard (available through the<b> Save As HTML</b> command on the <b>File</b> menu), the <b>OutputTo</b> method in code, or the OutputTo action in macros.</p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;For more information on saving forms and datasheets as Active Server Pages, search the Help index for “saving database objects, saving in Internet/Web formats” or “OutputTo method.”</p>
<h5>Form Views Supported for Active Server Pages</h5>
<p>
If the form you save as an Active Server Page has its <b>DefaultView</b> property set to Single Form or Continuous Forms, the Active Server Page displays as a single form, unless it is open in Datasheet view when you use the <b>Save As/Export</b> command (<b>File</b> menu). If the form has its <b>DefaultView</b> property set to Datasheet, the Active Server Page displays as a datasheet. Subforms always display as datasheets, regardless of their <b>DefaultView</b> property setting. All field data types are saved unformatted, that is, <b>Format</b> and <b>InputMask</b> property settings aren’t saved.</p>
<h5>Control Types Supported for Active Server Pages</h5>
<p>
When Microsoft Access saves a form as an Active Server Page, it replaces Microsoft Access controls with ActiveX controls, as described in the following table.</p>
<table>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Microsoft Access control</b></td>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">ActiveX control</b></td>
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
Text box</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Text box.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
Text box control bound to a Hyperlink field</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Text box that displays the hyperlink text, but the hyperlink can’t be followed.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
List box</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
List box.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
Combo box</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Combo box.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
Label</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Label. If the label has <b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">HyperlinkAddress</b> and/or <b>HyperlinkSubAddress</b> properties set, a hyperlink is created for the label.</td>
</tr>
<tr valign=top>
<TD>
Command button</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Command button, but any code behind the button isn’t saved. If the command button has <b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">HyperlinkAddress</b> and/or <b>HyperlinkSubAddress</b> properties set, a hyperlink is created for the button.</td>
</tr>
<tr valign=top>
<TD>
Option group</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Option group, but without a group frame.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
Option button</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Option button.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
Check box</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Check box.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
Toggle button</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Toggle button.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
ActiveX control</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
ActiveX control, but any code behind the control isn’t saved.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
Subform</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Subform as datasheet only.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
</table>
<p>
Microsoft Access doesn’t support the following controls when saving a form as an Active Server Page:
<ul>
<li>
Tab controls, and anything on tab controls</li>
<li>
Rectangles</li>
<li>
Lines</li>
<li>
Page breaks</li>
<li>
Unbound object frames</li>
<li>
Bound object frames</li>
<li>
Image controls</li>
<li>
The background of a form set with the <b>Picture</b> property</li>
</ul>
<p>
<b>Note</b>&nbsp;&nbsp;&nbsp;You can simulate a rectangle or a line by using a label control without a caption.</p>
<h5>Requirements for Using Active Server Pages</h5>
<p>
To display and use an Active Server Page, a copy of your database and Active Server Pages must reside on a computer running one of the following operating systems and Internet server platforms:
<ul>
<li>
Microsoft Windows NT Server version 3.51 or 4.0 running Microsoft Internet Information Server version 3.0</li>
<li>
Microsoft Windows NT Workstation version 4.0 and Microsoft Peer Web Services with the Active Server Pages components installed</li>
<li>
Microsoft Windows&nbsp;95 and Microsoft Personal Web Server with the Active Server Pages components installed</li>
</ul>
<p>
The Microsoft HTML Layout control must be installed on the computer opening the Active Server Page. The Active Server Pages components used to display Active Server Pages are available when installing Microsoft Internet Information Server version 3.0. To use Active Server Pages with Microsoft Peer Web Services or Microsoft Personal Web Server, you must install the Active Server Pages components as a separate add-in. Active Server Pages also require the Microsoft Access Desktop driver and a valid DSN to access a database. </p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;For more information on installing Microsoft Peer Web Services or Microsoft Personal Web Server see “Setting Up a Personal Web Server” later in this chapter. For information on installing the Microsoft Access Desktop driver and defining DSNs, see “Requirements for Using IDC/HTX Files” earlier in this chapter.</p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;For information on installing the Microsoft Access Desktop driver and defining DSNs, see “Requirements for Using IDC/HTX Files” earlier in this chapter.</p>
<h4>Using the Publish to the Web Wizard</h4>
<p>
With the Publish to the Web Wizard, you can publish a set of Microsoft Access database objects to any combination of static HTML documents, IDC/HTX files, or Active Server Pages (ASP). Using the wizard, you can:
<ul>
<li>
Pick any combination of tables, queries, forms, or reports to save.</li>
<li>
Specify an HTML template to use for the selected objects.</li>
<li>
Select any combination of static HTML documents, IDC/HTX files, or Active Server Pages (ASP).</li>
<li>
Create a home page to tie together the Web pages you create.</li>
<li>
Specify the folder where you save your files.</li>
<li>
Use the Web Publishing Wizard to move the files created by the Publish to the Web Wizard to a Web server.</li>
<li>
Save the answers you provide the wizard as a Web publication profile, and then select that profile the next time you use the wizard. This saves you from having to answer the wizard’s questions again.</li>
</ul>
<p>
To run the Publish to the Web Wizard, click<b> Save As HTML</b> on the <b>File</b> menu.</p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;For more information on using the Publish to the Web Wizard, search the Help index for “Saving database objects, saving in Internet/Web formats.”</p>
<h3>Synchronizing Database Replicas over the Internet</h3>
<p>
With Microsoft Access 97, you can synchronize replicas over the Internet. Before you can synchronize over the Internet, you must configure your Internet server for replication. To configure your Internet server, you need Replication Manager, which includes a wizard that takes you through the configuration process. </p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;For more information on Replication Manager, see “Replication Manager” in Chapter 20, “Using Replication in Your Application.”</p>
<h2><a name="importinglinkingexportingdataoninternet"></a>Importing, Linking, and Exporting Dataon the Internet</h2>
<p>
With Microsoft Access, you can import or link data from HTML tables or other data sources on an Internet server. You can also export data in your database to an Internet server.</p>
<h3>Importing and Linking Data from HTML Tables</h3>
<p>
You can import or link data formatted as an HTML table to a Microsoft Access database. Before Microsoft Access imports or links the data, it copies the data into the local cache. Whenever you open a linked table, Microsoft Access makes a local copy from the original on the Internet or an intranet before opening it. For this reason, the data in the table is read-only. Similarly, if you export the linked HTML table to an HTML file, Microsoft Access exports it to a local file, not the original file on the Internet.</p>
<p>
<b><font face="Symbol"><span style="font-family:symbol">&#219;</span></font>&#09;To import or link data from HTML tables</b>
<ol>
<li>
On the <b>File</b> menu, point to<b> Get External Data</b>, and then click either <b>Import</b> or <b>Link Tables</b>.</li>
<li>
In the <b>Files Of Type</b> list, click <b>HTML Documents (*.htm; *.html)</b>.</li>
<li>
Specify the file to import or link from by using any of the following methods:<ul>
<li>
Use the <b>Look In</b> box and the list of files below it to browse through the file system on your local hard drive or LAN.</li>
<li>
In the <b>File Name</b> box, type a valid http:// or ftp:// URL.</li>
<li>
In the <b>Look In</b> box, click <b>Internet Locations (FTP)</b> and select a previously defined FTP site.</li>
<li>
In the <b>Look In</b> box, click <b>Add/Modify FTP Locations</b>, then specify a new FTP site and browse its files.</li>
</ul>
</li>
<li>
Click <b>Import</b> or <b>Link</b>.<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;For information on linking HTML files by using Visual Basic, see “Working with HTML Files” in Chapter 18, “Accessing External Data.”</p>
</li>
</ol>
<p>
When you import or link data from an HTML table, Microsoft Access parses the information contained within the HTML tags. The primary HTML tags that define tables are:</p>
<table>
<tr valign=top>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">HTML tag pair</b></td>
<TD>
<b><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</b></td>
</tr>
<tr valign=top>
<TD>
</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
&lt;TABLE&gt;...&lt;/TABLE&gt;</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Specifies the beginning and end of the table.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
&lt;TH...&gt;...&lt;/TH&gt;</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Specifies table header cells.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
&lt;TR...&gt;...&lt;/TR&gt;</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Specifies a row in a table.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
&lt;TD...&gt;...&lt;/TD&gt;</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Specifies table data cells.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
<tr valign=top>
<TD>
&lt;CAPTION...&gt;...&lt;/CAPTION&gt;</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<TD>
Specifies the table’s caption, usually at the beginning or end of the table.</td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</tr>
</table>
<p>
Microsoft Access applies the following rules when it interprets the progression of tags and tag pairs within the HTML table it imports or links:
<ul>
<li>
The &lt;TD&gt; tag pair may be closed with either a &lt;/TD&gt; tag or a &lt;/TH&gt; tag.</li>
<li>
The &lt;TH&gt; tag pair may be closed with either a &lt;/TH&gt; tag or a &lt;/TD&gt; tag.</li>
<li>
The &lt;TR&gt; tag is not required to start a new row. If a &lt;TD&gt; tag follows a &lt;/TR&gt; tag, Microsoft Access assumes this is the beginning of a new row.</li>
<li>
If a &lt;/TABLE&gt; tag is not preceded by a &lt;/TR&gt; tag, then Microsoft Access assumes this is the end of the row.</li>
</ul>
<p>
In many cases, a table cell can display something other than text. If a table cell contains an embedded graphic file, there is a &lt;IMG SRC...&gt; tag associated with it. This tag may or may not have additional text that would be displayed. If additional text is present, Microsoft Access imports it, but Microsoft Access doesn’t import the embedded graphic and the tag that defines it. However, this is not true of embedded anchor &lt;A&nbsp;HREF&gt; tags; Microsoft Access imports anchor tags as Hyperlink fields.</p>
<p>
HTML tables can contain lists that are embedded within a table cell. Lists in an HTML table cell are formatted with the &lt;LI&gt; and &lt;/LI&gt; tags. Microsoft Access inserts a carriage return and line feed (&lt;CR&gt;&lt;LF&gt;) after each list item and imports each item in the list as a separate field for that record.</p>
<p>
HTML tables can also contain tables that are embedded within a table cell. You can import these as separate tables.</p>
<p>
To achieve the most predictable results, import simple HTML tables with a fixed number of fields per record, without embedded lists or tables.</p>
<h3>Exporting, Importing, and Linking Data fromOther Data Sources on Internet Servers</h3>
<p>
You can export any Microsoft Access-compatible external data file to an FTP server. You can’t export files to HTTP servers through the Internet, because you can’t write to them using the HTTP protocol.</p>
<p>
<b><font face="Symbol"><span style="font-family:symbol">&#219;</span></font>&#09;To export data from external data sources on Internet servers</b>
<ol>
<li>
On the <b>File</b> menu, click <b>Save As/Export</b>. </li>
<li>
In the <b>Save As</b> dialog box, click <b>To An External File Or Database</b>, and then click <b>OK</b>.</li>
<li>
In the <b>Save As Type </b>box, select the type of file you want to export.</li>
<li>
Specify an FTP server by using any of the following methods:<ul>
<li>
In the <b>File Name</b> box, type a valid ftp:// URL.</li>
<li>
In the <b>Save In</b> box, click <b>Internet Locations (FTP)</b> and select a previously defined FTP site.</li>
<li>
In the <b>Save In</b> box, click <b>Add/Modify FTP Locations</b>, then specify a new FTP site and browse its files. </li>
</ul>
</li>
<li>
Click <b>Export</b>.</li>
</ol>
<p>
You can also import and link any Microsoft Access-compatible external data file, except Microsoft Access databases and ODBC data sources, by using an FTP or HTTP connection. An FTP or HTTP connection is only maintained long enough to perform a single transaction. Therefore, when you import or link a file located on an FTP or HTTP server, Microsoft Access copies the data file to the user’s local cache. Microsoft Access then imports or links to the data file in the local cache. For this reason, files linked with an FTP or HTTP connection are read-only. </p>
<p>
<b><font face="Symbol"><span style="font-family:symbol">&#219;</span></font>&#09;To import or link data from external data sources on Internet servers</b>
<ol>
<li>
On the <b>File</b> menu, point to<b> Get External Data</b>, and then click either <b>Import</b> or <b>Link Tables</b>.</li>
<li>
In the <b>Files Of Type</b> list, select the type of file you want to import or link.</li>
<li>
To specify an FTP server, use any of the following methods:<ul>
<li>
In the <b>File Name</b> box, type a valid ftp:// URL.</li>
<li>
In the <b>Look In</b> box, click <b>Internet Locations (FTP)</b> and select a previously defined FTP site.</li>
<li>
In the <b>Look In</b> box, click <b>Add/Modify FTP Locations</b>, then specify a new FTP site and browse its files. </li>
</ul>
<p>
To specify an HTTP server: 
<ul>
<li>
In the <b>File Name</b> box, type a valid http:// URL.</li>
</ul>
</li>
<li>
Click <b>Import</b> or <b>Link</b>.</li>
</ol>
<h2><a name="usingwebbrowsercontrol"></a>Using the WebBrowser Control</h2>
<p>
The Microsoft WebBrowser control is an ActiveX control that you can use on your application’s forms to browse Web sites, view Web pages and other documents, and download data located on the Internet. The WebBrowser control is useful in situations where you don’t want to disrupt the work flow in your application by switching from Microsoft Access to a Web browser or other document-viewing application.</p>
<p>
The WebBrowser control can display any Web page that Microsoft Internet Explorer version 3.0 can display. For example, the WebBrowser control can display pages that include any of the following features:
<ul>
<li>
Standard HTML and HTML enhancements, such as floating frames and cascading style sheets</li>
<li>
Other ActiveX controls</li>
<li>
Most Netscape plug-ins</li>
<li>
Scripting, such as Microsoft Visual Basic Scripting Edition (VBScript) or JavaScript</li>
<li>
Java™ applets</li>
<li>
Multimedia content, such as video and audio playback</li>
<li>
Three-dimensional virtual worlds created with Virtual Reality Modeling Language (VRML)</li>
</ul>
<p>
In addition to opening Web pages, the WebBrowser control can open any ActiveX document, which includes most Microsoft Office documents. For example, if Microsoft Office is installed on a user’s computer, an application that uses the WebBrowser control can open and edit Microsoft Excel spreadsheets, Microsoft Word documents, and Microsoft PowerPoint presentations from within the control. Similarly, if Microsoft Excel Viewer, Microsoft Word Viewer, or Microsoft PowerPoint Viewer is installed, users can view those documents within the WebBrowser control.</p>
<p>
With the WebBrowser control, users of your application can browse sites on the World Wide Web, as well as folders on a local hard disk and on a local area network. Users can follow hyperlinks by clicking them or by typing a URL into a text box. Also, the WebBrowser control maintains a history list that users can browse through to view previously browsed sites, folders, and documents.</p>
<p>
<b>Note</b>&nbsp;&nbsp;&nbsp;Additional ActiveX controls that you can use to work with content on the Internet or an intranet are available in Microsoft Office 97, Developer Edition.</p>
<h3>Adding the WebBrowser Control to a Form</h3>
<p>
Before you can add the WebBrowser control to a form, you must have Microsoft Internet Explorer version 3.0 or later installed.</p>
<p>
If you purchased Microsoft Office&nbsp;97 on CD-ROM, you can install Microsoft Internet Explorer version 3.01 by running Msie301.exe from the Iexplore subfolder in the ValuPack folder.</p>
<p>
If you purchased Microsoft Access 97 on floppy disks, or if you prefer to install from the Web, you can download and install the latest version of Microsoft Internet Explorer from http://www.microsoft.com/ie/download/.</p>
<p>
Once you have Microsoft Internet Explorer version 3.01 installed, the WebBrowser control is automatically registered and is available in form Design view.</p>
<p>
<b><font face="Symbol"><span style="font-family:symbol">&#219;</span></font>&#09;To add the WebBrowser control to a form</b>
<ol>
<li>
Open the form in Design view.<p>
<img src="abac21_8.gif" border=0></p>
</li>
<li>
In the toolbox, click the <b>More Controls</b> tool.<p>
A menu appears that lists all the registered ActiveX controls in your system.</p>
</li>
<li>
On the menu of ActiveX controls, click <b>Microsoft WebBrowser Control</b>.</li>
<li>
On the form, click where you want to place the control.</li>
<li>
Move and size the control to the area you want to display.<p>
<img src="abac21_9.gif" border=0></p>
</li>
</ol>
<p>
Tip   If the WebBrowser control can’t display the full width or height of a Web page or document, it automatically displays scroll bars. However, in most cases, you should make the control wide enough to display the full width of a typical Web page so that users of your application don’t have to scroll horizontally.</p>
<p>
<b>Note</b>&nbsp;&nbsp;&nbsp;After you add a WebBrowser control to a form and save the form or display it in Form view, the control retains its original size even when you re-open the form in Design view and resize the control. To resize the control, delete the existing control, add a new control, and then resize the new control and set its properties before saving the form.</p>
<h3>Displaying Web Pages or Documents in the WebBrowser Control</h3>
<p>
To display a Web page or document in the WebBrowser control, use the <b>Navigate</b> method in Visual Basic. The syntax for the <b>Navigate</b> method is:</p>
<p>
<i>object</i>.<b>Navigate</b> <i>URL</i></p>
<p>
<i>Object</i> is either the name of the WebBrowser control on your form or an object variable that refers to it, and <i>URL</i> is a string expression that evaluates to a valid URL or path. <i>URL</i> can refer to a Web page or other content on the Internet or an intranet, as well as to an Office document, such as a Microsoft Word document.</p>
<p>
If <i>URL</i> refers to an Internet protocol and a location on the Internet, Microsoft Access must establish a connection before is can display the document. If the computer running your application is connected to a <i>proxy server</i> (a secure connection to the Internet through a LAN), or if it has a direct connection to the Internet, the WebBrowser control downloads and displays the Web page or other Internet content immediately. If the computer running your application uses a modem and dial-up connection to the Internet, and that connection hasn’t been established beforehand, the WebBrowser control initiates the connection. For example, if the user’s computer uses a modem and The Microsoft Network to connect to the Internet, the <b>Sign In</b> dialog box is displayed to establish the connection to the Internet before the WebBrowser control can display Internet content.</p>
<p>
If <i>URL</i> refers to an Internet protocol and a location on an intranet server, the computer running your application must be connected to the intranet and have permission to access that server.</p>
<p>
If <i>URL</i> refers to a standard file system path on a local hard drive or intranet, the WebBrowser control opens the document and displays it immediately. The WebBrowser control can open Microsoft Office documents, text files, and HTML documents that don’t require features supported only by an Internet server. For example, the WebBrowser control can’t open HTML documents that use IDC/HTX files or Active Server Pages (ASP) files from the standard file system, but it can open HTML documents that contain only the HTML tags supported by Microsoft Internet Explorer version 3.0.</p>
<p>
<b>Note</b>&nbsp;&nbsp;&nbsp;If <i>URL </i>refers to a path in the standard file system that doesn’t refer to a file name (for example, C:\Windows\System\), the WebBrowser control displays the file system itself, much like My Computer.</p>
<h4>Displaying a Document in the WebBrowser Control by Using an Address in a Text Box</h4>
<p>
Using the WebBrowser control, you can create a form that performs most of the functions of Microsoft Internet Explorer version 3.0. For example, the following illustration shows the Custom Browse form (WebBrowseWeb) in the Developer Solutions sample application.</p>
<p>
<img src="abac21_10.gif" border=0></p>
<p>
When a user types a valid URL in the text box at the top of the form (<code>txtLinks</code>) and presses ENTER, the WebBrowser control (<code>ActiveXCtl1</code>) displays the Web page or document. Pressing ENTER triggers the AfterUpdate event of the <code>txtLinks</code> text box; the AfterUpdate event contains the following code which navigates to the URL entered by the user:</p>
<pre><code>Private Sub txtLinks_AfterUpdate()
On Error Resume Next
&#09;If Len(Me!txtLinks) &gt; 0 Then
&#09;&#09;Me!ActiveXCtl1.Navigate Me!txtLinks
&#09;End If
End Sub
</code></pre>
<p>
Error handling is passed to the control itself because it displays the same error messages displayed by Microsoft Internet Explorer version 3.0.</p>
<p>
If you prefer to start navigation by clicking a command button instead pressing ENTER, you can use similar code in the button’s Click event.</p>
<p>
The Home, Back, Forward, Refresh, and Search buttons on the Custom Browse form use the corresponding <b>GoHome</b>, <b>GoBack</b>, <b>GoForward</b>, <b>Refresh</b>, and <b>GoSearch</b> methods of the WebBrowser control.</p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;For information on how to view brief descriptions about the properties, methods, and events of the WebBrowser control, see “Viewing Descriptions of the Properties, Methods, and Events of the WebBrowser Control” later in this chapter.</p>
<p>
With the Save Location button on the Custom Browse  form, you can save the address and a description of the current document to the Links table in the Developer Solutions database. When you click the Save Location button, Microsoft Access checks to see if the URL has been saved previously, and if not, uses the following statement to open the<b> Save Location To Table</b> dialog box:</p>
<pre><code>DoCmd.OpenForm &quot;frmSaveURLDialog&quot;, acWindowNormal, , , acFormEdit, acDialog, _&#09;ctlHyper.LocationName &amp; &quot;;&quot; &amp; ctlHyper.LocationURL
</code></pre>
<p>
The last argument of this statement (<code>ctlHyper.LocationName &amp; &quot;;&quot; &amp; ctlHyper.LocationURL</code>) sets the <b>OpenArgs</b> property to a concatenated string that contains the two values returned by the <b>LocationName</b> and <b>LocationURL</b> properties of the document currently displayed in the Custom Browse  form. When the <b>Save Location To Table</b> dialog box opens, code in its <b>Load</b> event parses the <b>OpenArgs</b> property value back into two parts and displays them as the default description and address. When the user clicks <b>OK</b>, the description and address in <b>the Save Location To Table</b> dialog box form are saved in the Hyperlink and Description fields in the Links table.</p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;For more information on the Custom Browse  form, open the Developer Solutions sample application located in the Samples subfolder of your Office folder.</p>
<h4>Displaying a Document in the WebBrowser Control by Using a Hyperlink Stored in a Table</h4>
<p>
Using the WebBrowser control, you can create a form that displays documents specified in hyperlinks stored in a table. For example, the following illustration shows the Browse Saved Hyperlinks (WebBrowseTable) form in the Developer Solutions sample application. You can use the Browse Saved Hyperlinks form to browse addresses saved in the Links table.</p>
<p>
<img src="abac21_11.gif" border=0></p>
<p>
When a user clicks a record navigation button at the bottom of the form to move to a new record, the following code in the form’s Current event displays the Web page or document whose address is stored in the current record.</p>
<pre><code>Private Sub Form_Current()
&#09;Dim varFull As Variant, varDescription As Variant
&#09;Dim HyperlinkAddress As String, HyperlinkSubAddress As String
&#09;Dim msg1 As String, msg2 As String, rst As Recordset, strDisplay As String
&#09;
&#09;On Error Resume Next

&#09;Set rst = Me.RecordsetClone
&#09;rst.Bookmark = Me.Bookmark
&#09;varFull = rst!HyperLink

&#09;If IsNull(varFull) Then GoTo Current_Err
&#09;varDescription = rst!Description
&#09;Me!ActiveXCtl1.Navigate HyperlinkPart(varFull, acAddress)

&#09;If Err = 438 Then Exit Sub

&#09;gvarBookMark = Me.Bookmark

Current_Bye:
&#09;Exit Sub
Current_Err:

msg1 = &quot;Invalid hyperlink address. Remove the record described as '&quot;
msg2 = &quot;' from the Links table or edit the hyperlink to supply a valid address.&quot;

MsgBox msg1 &amp; rst!Description &amp; msg2
&#09;
&#09;&#09;Me.Bookmark = gvarBookMark
&#09;&#09;Exit Sub
End Sub</code></pre>
<p>
This procedure uses the <b>Navigate</b> method of the WebBrowser control to display the next hyperlink address. However, don’t pass the contents of a Hyperlink field directly to the <b>Navigate</b> method. If a user enters or edits data stored in a Hyperlink field from a datasheet or form, it may contain up to three parts of information separated by the number sign (#). Even if the user doesn’t enter all three parts in the datasheet or form, Microsoft Access automatically stores number signs in the field. If there are number signs in the Hyperlink field, passing the data from the field directly to the <b>Navigate</b> method generates an error. To handle this, the stored value is passed to the <b>HyperlinkPart</b> function to extract the <i>address</i> portion of the saved hyperlink, which is then passed to the <b>Navigate</b> method. If navigation is successful, the form’s <b>Bookmark</b> property value is stored in a public variable. This public variable is used to return to the last record if subsequent navigation fails.</p>
<p>
Using code to save data in a Hyperlink field doesn’t automatically save number signs in the field. To preserve the proper functioning of a Hyperlink field in other contexts, you may want to write your code to save number signs before and after a hyperlink address. For an example of how to do this, see the event procedure set for the Click event of the Save Location button (cmdSaveLocation) on the Custom Browse form.</p>
<p>
<b>Note</b>&nbsp;&nbsp;&nbsp;You don’t have to store addresses in a Hyperlink field if you don’t need users to be able to navigate to addresses by clicking them in datasheets or forms, or if you don’t need to save addresses as HTML anchor tags when saving as HTML. As long as an address doesn’t exceed 255 characters, you can store it in a Text field. If an address exceeds 255 characters, you can store it in a Memo field. In either case, you can pass the value stored in the field directly to the <b>Navigate</b> method.</p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;For more information on the Browse Saved Hyperlinks form, open the Developer Solutions sample application located in the Samples subfolder of your Office folder. For more information on the format of data stored in a Hyperlink field, see “The Hyperlink Field Storage Format” earlier in this chapter.</p>
<h3>Viewing Descriptions of the Properties, Methods, and Events of the WebBrowser Control</h3>
<p>
Like built-in Microsoft Access objects, the WebBrowser control has properties that your application can set or read to determine the control’s characteristics, methods that your application can use to perform operations on the control, and events your application can respond to. You can view brief descriptions of the properties, methods, and events of the WebBrowser control by using the Object Browser.</p>
<p>
Important   In order for these properties, methods, and events to appear in the Object Browser, you must set a reference to the <b>Microsoft Internet Controls</b> object library. To set this reference, open a module, click <b>References</b> on the <b>Tools</b> menu, and select the <b>Microsoft Internet Controls</b> check box in the <b>Available References</b> box.</p>
<p>
<b><font face="Symbol"><span style="font-family:symbol">&#219;</span></font>&#09;To view descriptions of the WebBrowser control’s methods, properties, and events</b>
<ol>
<li>
Open a module.</li>
<li>
On the <b>View</b> menu, click <b>Object Browser</b>.</li>
<li>
In the <b>Project/Library</b> box, click <b>SHDocVw</b>.</li>
<li>
In the <b>Classes</b> box, click <b>WebBrowser</b>.<p>
The <b>Members Of</b> box lists the methods, properties, and events associated with the WebBrowser control.</p>
</li>
</ol>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;For more information on the methods, properties, and events of the WebBrowser control, see http://www.microsoft.com/intdev/sdk/docs/iexplore/. If you purchased Microsoft Access 97 on CD-ROM, you can view a Help file that contains this information by opening the \ValuPack\Access\Webhelp folder on the Setup CD-ROM, and then copying the Iexplore.hlp and Iexplore.cnt files to your hard disk. </p>
<h3>Distributing the WebBrowser Control with Your Application</h3>
<p>
Unlike most other ActiveX controls, you can’t install the WebBrowser control by itself. For an application that uses the WebBrowser control to work, Microsoft Internet Explorer version 3.0 must also be installed on the computer. Microsoft Internet Explorer version 3.0 can be distributed freely, and doesn’t require the payment of royalties or other licensing fees.</p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;For information on installing Microsoft Internet Explorer version 3.0, see “Adding the WebBrowser Control to a Form” earlier in this chapter.</p>
<h2><a name="settinguppersonalwebserver"></a>Setting Up a Personal Web Server </h2>
<p>
Microsoft provides two products that make it easy to create a personal Web server on your computer for low-volume Web publishing: Microsoft Personal Web Server and Microsoft Peer Web Services. These products are ideal for publishing departmental home pages, personal home pages, or small-scale Web applications on your company’s intranet. </p>
<p>
Although Personal Web Server and Peer Web Services are intended for small-scale Web publishing, they provide most of the same services and features as Microsoft Internet Information Server, a robust Web server intended for high-volume Web publishing. You can use Personal Web Server or Peer Web Services to develop and test your Web applications, and then transfer them to a Web server running Microsoft Internet Information Server. </p>
<p>
Both Personal Web Server and Peer Web Services can:
<ul>
<li>
Publish Web pages on the Internet or over a LAN on an intranet by using the HTTP service.</li>
<li>
Support Microsoft ActiveX controls.</li>
<li>
Transmit or receive files by using the FTP service. </li>
<li>
Run Internet Server API (ISAPI) and Common Gateway Interface (CGI) scripts.</li>
<li>
Send queries to ODBC data sources by using the Internet Database Connector component (Httpodbc.dll).</li>
<li>
Support the Secure Sockets Layer.</li>
</ul>
<p>
In addition, Peer Web Services can:
<ul>
<li>
Use pass-through security to Windows NT Server and Novell NetWare.</li>
<li>
Use local-user security if Microsoft File and Print Sharing are not installed.</li>
<li>
Perform remote administration by using a Web-based application.</li>
<li>
Distribute documents by using the Gopher service.</li>
</ul>
<h3>Installation Requirements</h3>
<p>
To run Personal Web Server or Peer Web Services, you must meet the following installation requirements.</p>
<h4>Personal Web Server</h4>
<ul>
<li>
A computer with Windows&nbsp;95 installed.</li>
<li>
A CD-ROM drive for the installation compact disc. </li>
<li>
Adequate disk space for your information content.</li>
</ul>
<h4>Peer Web Services</h4>
<ul>
<li>
A computer with Windows&nbsp;NT Workstation version 4.0 installed.</li>
<li>
A CD-ROM drive for the installation compact disc.</li>
<li>
Adequate disk space for your information content. It is recommended that all drives used with Peer Web Services be formatted with the Windows&nbsp;NT File System (NTFS).</li>
</ul>
<h3>Publication Requirements</h3>
<p>
When using Personal Web Server or Peer Web Services, each computer you want to access the server must have Transmission Control Protocol/Internet Protocol (TCP/IP) installed. The TCP/IP protocol is included with Windows&nbsp;95 and Windows&nbsp;NT Workstation version 4.0. To install and configure the TCP/IP protocol and related components, double-click the <b>Network</b> icon in Control Panel. Each system must meet additional requirements depending on whether you want to use the server on an intranet or the Internet.</p>
<h4>Intranet Publication Requirements</h4>
<ul>
<li>
A network adapter card and local area network (LAN) connection. </li>
<li>
The Windows Internet Name Service (WINS) server or the Domain Name System (DNS) server installed on a computer in your intranet. WINS and DNS run only on Windows&nbsp;NT Server. This step is optional, but it does allow users to use “friendly names” instead of IP addresses when connecting to your server.</li>
</ul>
<h4>Internet Publication Requirements</h4>
<ul>
<li>
An Internet connection and Internet Protocol (IP) address from your Internet Service Provider (ISP).</li>
<li>
DNS registration for that IP address. This step is optional, but it does allow users to use “friendly names” instead of IP addresses when connecting to your server. For example, “microsoft.com” is the friendly domain name registered to Microsoft. Within the microsoft.com domain, Microsoft has named its World Wide Web (WWW) server “www.microsoft.com.” Most ISPs can register your domain names for you.</li>
<li>
A network adapter card suitable for your connection to the Internet.</li>
</ul>
<h3>Installing Personal Web Server</h3>
<p>
The Setup file for the Personal Web Server is available on the Web. To download the Setup program for Personal Web Server for Windows 95, connect to the Microsoft Personal Web Server home page at:</p>
<p>
http://www.microsoft.com/ie/iesk/pws.htm </p>
<p>
You can install Personal Web Server if you are running Windows&nbsp;95 or Windows&nbsp;NT Workstation version 4.0. However, if you are using Windows&nbsp;NT, it is recommended that you install Peer Web Services instead.</p>
<p>
<b><font face="Symbol"><span style="font-family:symbol">&#219;</span></font>&#09;To install Personal Web Server</b>
<ol>
<li>
Connect to the Personal Web Server home page on the Web and download PWS10a.exe.</li>
<li>
Double-click <b>PWS10a.exe</b>.<p>
This starts the installation process. You may be required to supply additional files from your Windows&nbsp;95 Setup disks.</p>
</li>
<li>
When installation is finished, the Setup program asks if you want to restart your computer. Click <b>Yes</b>.</li>
</ol>
<h3>Installing Peer Web Services</h3>
<p>
The files to install Peer Web Services are provided on the Microsoft Windows&nbsp;NT Workstation version 4.0 Setup CD-ROM.</p>
<p>
<b><font face="Symbol"><span style="font-family:symbol">&#219;</span></font>&#09;To install Peer Web Services</b>
<ol>
<li>
Click the Windows <b>Start</b> button, point to <b>Settings</b>, and click <b>Control Panel</b>.</li>
<li>
Double-click <b>Network</b>.</li>
<li>
Click the <b>Services</b> tab, and then click <b>Add</b>.</li>
<li>
In the <b>Network Service</b> list, double-click <b>Peer Web Services</b>.<p>
This starts the installation process. You may be required to supply additional files from your Windows&nbsp;NT Setup disks.</p>
</li>
<li>
In the first <b>Microsoft Peer Web Services Setup</b> dialog box, click <b>OK</b>.</li>
<li>
In the second <b>Microsoft Peer Web Services Setup</b> dialog box, select which services you want to install, and then click <b>OK</b>.</li>
<li>
In the <b>Publishing Directories</b> dialog box, specify the directories you want to use for each service, or accept the default directories, and then click <b>OK</b>.</li>
</ol>
<h3>Getting More Information</h3>
<p>
For more information about Using Personal Web Server or Peer Web Services, you can refer to their online documentation, which is available once installation is complete.</p>
<p>
<b><font face="Symbol"><span style="font-family:symbol">&#219;</span></font>&#09;To view documentation for Personal Web Server or Peer Web Services</b>
<ol>
<li>
Start your Web browser.</li>
<li>
To view the documentation for Personal Web Server, in your browser’s address box, type:<p>
<b>http://</b><i>MyServer</i><b>/docs/default.htm</b></p>
<p>
To view the documentation for Peer Web Services, in your browser’s address box, type:</p>
<p>
<b>http://</b><i>MyServer</i><b>/iisadmin/htmldocs/inetdocs.htm</b></p>
<p>
where <i>MyServer</i> is the name of the computer on which you installed Personal Web Server or Peer Web Services. To determine the name of the computer, open Control Panel, double-click the <b>Network </b>icon, and then click the <b>Identification</b> tab.</p>
</li>
<li>
Press ENTER.</li>
</ol>
<h3>Using Active Server Pages with Personal Web Server or Peer Web Services</h3>
<p>
If you want to use Active Server Pages with either Personal Web Server or Peer Web Services, you must install the Active Server Pages components after installing your server software. These components are not distributed with the Setup programs for Personal Web Server or Peer Web Services. To download the Setup program for these components, connect to http://www.microsoft.com/msdownload/iis_asp.htm. </p>
<p>
<b>Note</b>&nbsp;&nbsp;&nbsp;To install the Active Server Pages components for Personal Web Server running on Windows 95, download the Active Server Pages for Windows NT (i386) Setup files.</p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;For more information on the Internet Information Server version 3.0 and the Active Server Pages components, connect to http://www.microsoft.com/iis/default.asp.</p>
</FONT></FONT></BODY>
</HTML>
