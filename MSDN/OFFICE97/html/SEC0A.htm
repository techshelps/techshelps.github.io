<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OCT2BIN</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H1>OCT2BIN</H1><P CLASS="t">Converts an octal number to binary.</P>
<P CLASS="t">If this function is not available, run the Setup program to install the Analysis ToolPak. After you install the Analysis ToolPak, you must enable it by using the <FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B>Add-Ins</B></FONT> command on the <FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B>Tools</B></FONT> menu.</P>
<P><B>Syntax</B></P>
<P CLASS="syn"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B>OCT2BIN</B></FONT>(<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B>number</B></FONT>,places)</P>
<P CLASS="dt1"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><B>Number</B></FONT>&nbsp;&nbsp;&nbsp;is the octal number you want to convert. Number may not contain more than 10 characters. The most significant bit of number is the sign bit. The remaining 29 bits are magnitude bits. Negative numbers are represented using two's-complement notation.</P>
<P CLASS="dt1">Places&nbsp;&nbsp;&nbsp;is the number of characters to use. If places is omitted, OCT2BIN uses the minimum number of characters necessary. Places is useful for padding the return value with leading 0s (zeros).</P>
<P><B>Remarks</B></P>
<UL><LI>If number is negative, OCT2BIN ignores places and returns a 10-character binary number.</LI><LI>If number is negative, it cannot be less than or equal to 7777777000, and if number is positive, it cannot be greater than 777.</LI><LI>If number is not a valid octal number, OCT2BIN returns the #NUM! error value.</LI><LI>If OCT2BIN requires more than places characters, it returns the #NUM! error value.</LI><LI>If places is not an integer, it is truncated.</LI><LI>If places is nonnumeric, OCT2BIN returns the #VALUE! error value.</LI><LI>If places is negative, OCT2BIN returns the #NUM! error value.
</LI></UL><P><B>Examples</B></P>
<P CLASS="t"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><CODE>OCT2BIN(3, 3)</CODE></FONT> equals 011</P>
<P CLASS="t"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><CODE>OCT2BIN(7777777000)</CODE></FONT> equals 1000000000</P></FONT>
</FONT></BODY></HTML>
