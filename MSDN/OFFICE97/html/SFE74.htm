<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>New Global Constants: Checked, Grey, Unchecked</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H2>New Global Constants: Checked, Grey, Unchecked</H2><P CLASS="t">Microsoft Excel&nbsp;97 claims three new global constants: Checked, Grey, and Unchecked. If you used one of these now-reserved words as a control name, you will get an error. Note that in Microsoft Excel&nbsp;95, the following code would work for a checkbox named "Checked," while in Microsoft Excel&nbsp;97, it does not:</P>

<pre><code><FONT FACE="Courier" SIZE="2">[Checked].Value = xlOff
</FONT></code></pre>
<P CLASS="t">The best way to work around this issue and to avoid similar issues is to use a naming convention for all variables. Typically, a variable-naming convention uses a prefix that identifies the variable type concatenated to the variable name. For example, an option button formerly named "Checked" could be named "optChecked" (although it should be noted that while Boolean variables are traditionally named as adjectives, to avoid confusion, objects are not).</P>
<P></P>
<P></P>
<P></P></FONT>
</FONT></BODY></HTML>
