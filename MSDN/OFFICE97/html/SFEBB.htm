<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Wincode.c</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H2>Wincode.c</H2><P CLASS="t">The code in wincode.c creates the main window and message queue for AutoXL. This is a fairly typical window-management code module; the interesting portion of this code occurs in the WinMain function. Notice that it increases the size of the message queue and that it initializes and uninitializes OLE.</P>

<pre><code><FONT FACE="Courier" SIZE="2">int WINAPI WinMain(HINSTANCE hInst, HINSTANCE hPrevInst, LPSTR lpszCmd, int iCmdShow)
{
    MSG msg;
    int iMsg = 96;
    
    // for OLE, enlarge message queue to be as large as possible
    while (!SetMessageQueue(iMsg) &amp;&amp; (iMsg -= 8));

    // various initialization, including OLE
    g_hInstApp = hInst;
    msg.wParam = FALSE;

    if (!InitApplication(hPrevInst))
        goto ExitApplication;
</FONT></code></pre>
<P></P>
<P></P>
<P></P>

<pre><code><FONT FACE="Courier" SIZE="2">    if (!InitOLE())
        goto ExitApplication;

    if (!InitInstance(iCmdShow))
        goto ExitApplication;

    // message loop
    while (GetMessage(&amp;msg, NULL, (unsigned int) NULL, (unsigned int)
        NULL)) 
    {
        TranslateMessage(&amp;msg);
        DispatchMessage(&amp;msg);
    }

ExitApplication:
    // make sure OLE is cleaned up if init was done
    if (g_fOLEInit)
        OleUninitialize();

    return msg.wParam;
}

BOOL InitOLE()
{
    DWORD dwOleVer;
    
    dwOleVer = CoBuildVersion();
    
    // check the OLE library version
    if (rmm != HIWORD(dwOleVer)) 
    {
        MessageBox(NULL, L"Incorrect version of OLE libraries.", 
            g_szAppTitle, MB_OK | MB_ICONSTOP);
        return FALSE;
    }
    
    // could also check for minor version, but this application is
    // not sensitive to the minor version of OLE
    
    // initialize OLE, fail application if we can't get OLE to init.
    if (FAILED(OleInitialize(NULL))) 
    {
        MessageBox(NULL, L"Cannot initialize OLE.", g_szAppTitle, 
            MB_OK | MB_ICONSTOP);
        return FALSE;
    }
    </FONT></code></pre>
<P></P>
<P></P>
<P></P>

<pre><code><FONT FACE="Courier" SIZE="2">    // otherwise, init succeeded
    g_fOLEInit = TRUE;
    
    return TRUE;
}
</FONT></code></pre></FONT>
</FONT></BODY></HTML>
