<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Constructing Your Wizard</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H2>Constructing Your Wizard</H2><P CLASS="t">Wizards are the interface of choice for multistep processes. In this chapter, we discussed creating the&nbsp;most common type of Wizard using the MultiPage control and a single UserForm. We detailed the toughest development issues, including initialization and validation, and provided strategies to simplify their development.</P>
<P CLASS="t">Very complex Wizard development may break some of the guidelines discussed in this chapter. For example, the Microsoft Excel Chart Wizard combines MultiPage controls with multiple UserForms. This type of Wizard requires a slightly different implementation, but the strategies remain the same.</P>
<P CLASS="t">The WizDemo.xls file on the CD provides a working copy of the Wizard discussed in this chapter. It provides an excellent foundation for developing your own Wizards. The example doesn't solve every issue or fit all cases, but it was developed to scale up or down to suit your needs. It's designed to provide your Wizard development with a huge jump-start that will save you many hours of design work and coding.</P>
<P CLASS="t"></P>
<P CLASS="t"></P></FONT>
</FONT></BODY></HTML>
