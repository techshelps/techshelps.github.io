<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Structures</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Working with MS VM"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1></FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/virtual2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Microsoft VM"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom">&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="IEnumJAVAPROPERTIES.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="invok.htm"><IMG SRC="art/homenrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="VM"></A></TD>
<TD ALIGN="center" VALIGN="bottom">&nbsp;</TD>
</TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Invocation Interfaces</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">&nbsp;</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">VM</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">&nbsp;</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Structures</H2>
<H4 STYLE="color:#333366"><A NAME="invok_0005000405000100">JAVAEXECUTEINFO</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">typedef struct {
&#009;DWORD     cbSize;
&#009;DWORD     dwFlags;
&#009;LPCOLESTR  pszClassName;
&#009;LPCOLESTR *rgszArgs;
&#009;ULONG     cArgs
&#009;LPCOLESTR pszClassPath
} JAVAEXECUTEINFO, *LPJAVAEXECUTEINFO;
</FONT></PRE>
<P><P>This structure is passed into <A HREF="IJavaExecute.htm#invok_0005000402000200">IJavaExecute::Execute</A>.

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B><A NAME="invok_0005000405000101">cbSize</A></B>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Must be set to the size of <B>JAVAEXECUTEINFO</B> in bytes.

</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B><A NAME="invok_0005000405000102">dwFlags</A></B>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Can be:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">JEIF_VERIFYCLASSES </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Turn on verification of all classes. By default, the verification setting from the registry will be used.

</FONT></TD></TR></TABLE>
</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B><A NAME="invok_0005000405000103">pszClassName</A></B>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Name of the class to load. The class must have a public method that matches the signature:
<PRE><FONT FACE="Courier" SIZE="2">public static void main(java.lang.String[]);
</FONT></PRE>
</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B><A NAME="invok_0005000405000104">rgszArgs</A></B>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Array of Unicode strings. This string is converted to a Java array of strings, which is then passed as the argument to the main method. The <B>cArgs</B> member indicates the number of strings in this array.

</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B><A NAME="invok_0005000405000105">cArgs</A></B>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Number of strings in <B>rgszArgs</B>.

</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B><A NAME="invok_0005000405000106">pszClassPath</A></B>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Specifies additional class path elements (separated by semicolons). These class path elements will be searched before the elements in the default class path.

 <P>This member can be NULL if no additional elements are required.
</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>The class path is a per-process variable. Any extensions made to the class path by means of the <A HREF="IJavaExecute.htm#invok_0005000402000200">Execute</A> method will persist after the <B>Execute</B> method has returned. Therefore, the <B>Execute</B> method is not suitable for use in a shared library.



<P><B>See Also:</B> <A HREF="IJavaExecute.htm#invok_0005000402000200">IJavaExecute::Execute</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="invok_0005000405000200">JAVAPROPERTY</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">typedef struct {
&#009;LPOLESTR pszKey;
&#009;LPOLESTR pszValue;
}   JAVAPROPERTY, * LPJAVAPROPERTY;
</FONT></PRE>
<P><P>This structure is used as part of <A HREF="IEnumJAVAPROPERTIES.htm">IEnumJAVAPROPERTIES</A>. The <B>pszKey</B> and <B>pszValue</B> members are both allocated using the <B>CoTaskMemAlloc</B> function, and are released by the caller of <B>IEnumJAVAPROPERTIES::Next</B>.

<P><B>See Also:</B> <A HREF="IEnumJAVAPROPERTIES.htm">IEnumJAVAPROPERTIES</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="invok_0005000405000300">JAVACLASSRESOURCEINFO</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">struct {
&#009;HMODULE   hModule;
&#009;DWORD     dwResourceID;
};
</FONT></PRE>
<P><P>This structure is passed to <B>IJavaExecute::SetClassSource</B>. 
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B><A NAME="invok_0005000405000301">hModule</A></B>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Handle to the module that contains the resource. 
</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B><A NAME="invok_0005000405000302">dwResourceID</A></B>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Identifies the resource that contains the class data. The resource must be of type RCDATA. <P>See <A HREF="Structures.htm#invok_0005000405000400">JAVACLASSRESOURCE</A> for the format of the resource data. 
</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="invok_0005000405000400">JAVACLASSRESOURCE</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">struct {
&#009;DWORD dwSignature;
&#009;DWORD dwNumClasses;
&#009;DWORD dwFormatVersion;
&#009;DWORD dwFlags;
&#009;[Class Information Section]
&#009;[Class Names Section]
&#009;[Class Data Section]
};
</FONT></PRE>
<P><P><P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B><A NAME="invok_0005000405000401">dwSignature</A></B>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Must be the value 0x43524E44. 
</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B><A NAME="invok_0005000405000402">dwNumClasses</A></B>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Number of classes contained within this resource. 
</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B><A NAME="invok_0005000405000403">dwFormatVersion</A></B>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Must be 1. 
</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B><A NAME="invok_0005000405000404">dwFlags</A></B>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Reserved for future use. 
</FONT></TD></TR></TABLE>
<P><B>Class Information Section:</B> <P>The Class Information Section consists of an array of structures that detail the position of each class within the resource. Each class will have one of these structures. The format of this structure is:
<PRE><FONT FACE="Courier" SIZE="2">struct {
&#009;DWORD dwNameOffset;
&#009;DWORD dwSize;
&#009;DWORD dwDataOffset;
};
</FONT></PRE>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>dwNameOffset</B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Offset from the beginning of the resource to the class name.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>dwSize</B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Size of the class data.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>dwDataOffset</B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Offset from the beginning of the resource to the class data.
</FONT></TD></TR></TABLE>
<P><B>Class Names Section:</B> <P>The Class Names Section contains the names of the classes contained in the resource. The names are packed together, back-to-back, so that each name immediately follows the previous name. You must use a slash mark (/) to separate package names, and you must terminate each name with the null character.

<P><B>Class Data Section:</B> <P>The Class Data Section contains class file data for each class stored in the resource. The format for each class file is the same as the standard Java binary class file format. 
</BLOCKQUOTE>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Top"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm" TARGET="_top">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
