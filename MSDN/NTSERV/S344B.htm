<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Mirror Set</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css"><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"></HEAD><BODY BGCOLOR="#FFFFFF">
<H3 CLASS="h2">Mirror Set</H3><P CLASS="t">A mirror set provides an identical twin for the selected partition. All data written to the mirror set are written to both partitions, which results in disk space utilization of only 50 percent. </P>
<P CLASS="t">Creating a mirror set is similar to making a copy of a document by using a copy machine. The original partition is like the original of the document, and the shadow partition is the copy. Unlike a copy machine, however, Windows&nbsp;NT continually updates both the original and shadow partitions when any changes are made to the mirror set.</P>
<P CLASS="t"><B>Note</B></P>
<P>In this chapter and other chapters in the "Reliability and Recoverability" part of this book, the terms <I>original disk</I> and <I>original partition</I> refers to the original partition, and <I>shadow disk</I> and <I>shadow partition</I> refers to the disk or partition that contains the copy. </P>
<P CLASS="t">Figure 4.2 shows a mirror set. To a user, only one read or write occurs to satisfy a request for data. FtDisk, the Windows&nbsp;NT fault-tolerant disk driver, creates separate I/O requests for each of the disks.</P>
<P><img src="xsr_e02.gif"></P>
<P CLASS="cap"><B>Figure 4.2.    Mirror set</B></P>
<P CLASS="t">If there is a read failure on one of the disks, FtDisk reads the data from the other disk in the mirror set. If there is a write failure on one of the disks in the mirror set, FtDisk uses the remaining disk for all accesses. </P>
<P CLASS="t">Because dual-write operations can degrade system performance, many mirror set implementations use duplexing, where each disk in the mirror set has its own disk controller.</P>
<P CLASS="t">Any primary partition can be mirrored, including the system and boot partitions. The disk that you select for the shadow partition does not need to be identical to the original disk in size, or number of tracks and cylinders. This means that you do not have to replace a failed disk with an identical model. The unpartitioned area that you select for the shadow partition cannot be smaller than the original partition. If the area that you select for shadow partition is larger than the original, the extra space on the shadow disk can be configured as another partition (if there are fewer than four partitions on the disk).</P>
<P CLASS="t"><B>Note</B></P>
<P>If you configure your system partition as a mirror set, you should use identical disks for the mirror set, and use the same disk geometry. See Chapter 5, "Preparing for and Performing Recovery," for details about configuring mirror sets for these partitions.</P>
<P CLASS="t">When compared to stripe sets with parity (described later in this chapter), a mirror set implementation:</P>
<UL><LI>Has a lower entry cost (because it requires only two disks, whereas a stripe set with parity requires three or more disks).</LI><LI>Requires less system memory.</LI><LI>Provides the best overall performance.</LI><LI>Does not show performance degradation during a failure. </LI><LI>Has a higher cost-per-megabyte. </LI></UL><P CLASS="t">You can mirror the boot partition, which significantly reduces the amount of time needed to get your Windows&nbsp;NT Server back up if there is a problem with the hard disk containing your operating system.</P>
<P CLASS="t"><B>Note</B></P>
<P>The term system partition refers to the disk partition containing hardware-specific files needed to start Windows&nbsp;NT (such as the x86-based files NTLDR and Boot.ini, or the RISC-based files Osloader.exe and Hal.dll). The boot partition contains the operating system files and support files. The boot partition and the system partition can be the same partition. </P>
<P CLASS="t">A mirror set works well for the following applications:</P>
<UL><LI>When extremely high data reliability is required. A duplexed mirror set has the best data reliability because the entire I/O subsystem is duplicated.</LI><LI>When the best possible performance is required. Performance is excellent for read-intensive applications, with only a slight penalty for disk writes.</LI><LI>When simplicity is important. Mirror sets are simple to understand and easy to set up.</LI></UL><P CLASS="t">You might not want to use a mirror set if cost is a critical factor. Mirror sets are the most expensive solution on a cost per unit of data storage basis.</P>
<H4 CLASS="h3"><A NAME="sec0"></A>Advantages to Using Mirror Sets</H4><P CLASS="t">Disk read operations are more efficient than on a single partition. FtDisk, the fault tolerance disk driver, has the capacity to load balance read operations across the physical disks. With current SCSI technology, two disk read operations can be done simultaneously. In some cases, a disk read can be done in half the time it would take on a single partition. </P>
<P CLASS="t">Recovery from a disk failure is very rapid. Mirror sets offer the fastest data recovery, with the least impact on system performance, because the shadow partition contains all of the data. There is no data rebuilding needed to restore the system. When you configure your boot partition on a mirror set, you do not have to reinstall the Windows&nbsp;NT Server to be able to restart the computer.</P>
<P CLASS="t">It is not necessary to use identical physical disks or to have the same partitions on each disk, although you should use identical disks if you put your system partition on a mirror set. All FtDisk requires is sufficient unused space on the second disk to create the shadow partition.</P>
<P CLASS="t">You can mirror the system or the boot partition. You cannot use a stripe set with parity for either of these partitions.</P>
<H4 CLASS="h3"><A NAME="sec1"></A>Disadvantages of Mirror Sets</H4><P CLASS="t">Disk write operations are less efficient. Because data must be written to both disks, there is a slight performance penalty. However, since disk writes are done asynchronously, the penalty is not 100 percent. In most situations, a user-mode application would not be affected by the extra disk update.</P>
<P CLASS="t">Mirror sets are the least efficient in terms of space utilization. Because the data are duplicated, the space requirements for a mirror set are higher than for a stripe set with parity.</P>
<P CLASS="t">When you create a mirror set for the system or boot partition, you should create and test a Windows&nbsp;NT startup floppy disk in order to be able restart the computer. In the case of RISC-based computers, you need to create an alternate boot selection to be able to use the Windows&nbsp;NT startup floppy disk. Otherwise, the time to restart the computer after a failure increases because you have to create the boot selection.</P>
<P CLASS="t">Creating a mirror set of a boot or system partition does not do a sector by sector duplication of the disk. FtDisk does not copy either the Master Boot Record on track 0 or the Partition Boot Sector, which is the first sector of the partition. Some systems might save information in other parts of track 0, and this will not be duplicated either. Data corruption in these areas can make it much more difficult to recover from a failure of your original disk. If both disks are affected, it can be extremely difficult or impossible to recover the data. </P>
<P CLASS="t">For information on recovering from the failure of a mirror set, see Chapter 5, "Preparing for and Performing Recovery."</P></BODY></HTML>
