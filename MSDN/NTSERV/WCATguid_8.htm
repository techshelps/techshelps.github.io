<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The WCAT Controller</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<h3>The WCAT Controller</h3>
<p>
The <i>WCAT controller</i> is a computer running the WCAT controller application. The controller is provided to minimize the effect of test administration on test results; it does so by separating the computer administering the test from the computers being tested. The controller hardware and software are not monitored as part of a WCAT test.</p>
<p>
The WCAT controller application initiates and monitors a WCAT test by using three input files, described following. When the test is over, the controller application collects the test results and writes output files showing these test results. </p>
<h4>Controller Input Files</h4>
<p>
The <i>input files</i> provide complete instructions for a WCAT test and are stored on and interpreted by the controller computer. You can either run WCAT with the controller input files provided with WCAT or design your own tests by creating new or modified input files. </p>
<p>
You can use any word processor or text editor to view or edit the input files. There are three standard input files for each WCAT test:</p>
<p>
<font face="Symbol">&#183;</font> A<i> configuration file,</i> which specifies test conditions, such as the duration of the test, the number of client computers, and the number of virtual clients for each client computer active during the test. A configuration file has the filename <i>testname<b>.</b></i><b>cfg</b>, where <i>testname </i>is the name of the test connected with that configuration file.</p>
<p>
<font face="Symbol">&#183;</font> A <i>script file,</i> which specifies the Web pages clients request from the server during the test and the Web files that make up those pages. In a script file, the Web pages are organized into classes by type. For example, static pages are in a different class than pages generated by CGI applications or ISAPI extensions. During a test, the virtual clients choose from among the pages in a class; allowing the clients to choose pages better simulates actual request patterns than assigning pages to clients does. For more information on classes, see &ldquo;Class Statistics Section,&rdquo; later in this guide. A script files has the filename <i>testname</i><b>.scr</b>, where <i>testname </i>is the name of the test connected with that script file.</p>
<p>
<font face="Symbol">&#183;</font> A <i>distribution file,</i> which specifies the frequency at which the pages in the script file are requested from the server. The controller uses the distribution file to develop its instructions to the clients. For more information on distribution files, see &ldquo;Modifying the Distribution File,&rdquo; later in this guide. A distribution file has the filename <i>testname</i><b>.dst</b>, where <i>testname </i>is the name of the test connected with that distribution file.</p>
<p>
<font face="Symbol">&#183;</font> A <i>performance counter file</i>, an optional file that specifies any Performance Monitor counters and objects on the server that the controller should monitor during the test. For more information on using Performance Monitor during a WCAT test, see &ldquo;Using Performance Monitor Counters in a WCAT Test,&rdquo; later in this guide. A performance counter file has a filename <i>testname</i><b>.pfc</b>, where <i>testname </i>is the name of the test connected with that performance counter file.</p>
<p>
For a description of the test parameters defined in the input files, see &ldquo;Modifying the Controller Input Files,&rdquo; later in this guide.</p>
<h4>Controller Output Files</h4>
<p>
During a test, WCAT collects statistics on the activity of the clients and the response of the server and produces detailed reports for later analysis. The statistics are collected by the WCAT controller in the <i>output files.</i></p>
<p>
The controller writes the output files based on data gathered by the controller and clients. WCAT produces two types of output files:</p>
<p>
<font face="Symbol">&#183;</font> A<i> log file,</i> which includes reports and analysis of the statistical data gathered during the test. The log file is a comma-separated, variable-length file designed for use as input for a spreadsheet or data processing program. You can also use any text editor or word processor to view and edit the log file. For a full description of log files, see &ldquo;Analyzing the WCAT Log,&rdquo; later in this guide. A log file has the filename <i>testname</i><b>.log</b>, where <i>testname </i>is the name of the test connected with that log file.</p>
<p>
<font face="Symbol">&#183;</font> A <i>performance results file,</i> which presents the data collected from Performance Monitor counters on the server computer during the test. WCAT produces a performance results file only if you run WCAT with the performance counter option (<b>-p</b>). For a description of the performance results file, see &ldquo;Interpreting a Performance Results File,&rdquo; later in this guide. A performance results file has the filename <i>testname</i><b>.prf</b>, where <i>testname </i>is the name of the test connected with that performance results file.</p>

</FONT>
</BODY>
</HTML>
