<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Number of Trusted Domains</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css"><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"></HEAD><BODY BGCOLOR="#FFFFFF">
<H3 CLASS="h2">Number of Trusted Domains</H3><P CLASS="t">In the multiple master-domain model, user accounts are stored in master domains, and resources (machine accounts) are stored in all other domains. In this model, each resource domain trusts all master domains with a one-way trust. </P>
<P CLASS="t">On each domain controller in the resource domain, the existence of the trust relationship is represented by an LSA trusted-domain object. The object contains the name of the trusted domain and the domain security identifier (SID). The password associated with the trust link is stored in a LSA secret object, which is stored in the following registry key.</P>
<P CLASS="t"><B>HKEY_LOCAL_MACHINE\Security\Policy\Secrets</B></P>
<P CLASS="t">In the Windows&nbsp;NT operating system, LSA secrets are used for other things and, until this version, the number of LSA secrets was fixed at 256. As a result, the recommended limit for trusted master domains was 128 per resource domain. This recommendation has been removed with the introduction of Windows&nbsp;NT 4.0 because the number of available LSA secrets has been significantly increased. </P>
<P CLASS="t">The second restriction limiting the number of master domains trusted by the resource domains is the nonpaged pool size of the domain controllers on which the resource domains are stored. When a domain controller starts, it attempts to discover domain controllers in each trusted domains by sending a message to each trusted domain. Each domain controller in the trusted domains responds with a message to the starting domain controller. The response is temporarily stored in the nonpaged pool until NetLogon can read it. </P>
<P CLASS="t">The RAM on your Windows&nbsp;NT computer is divided into two categories: nonpaged and paged. Nonpaged must stay in memory and cannot be written to or retrieved from peripherals. Peripherals include disks, the LAN, CD-ROMs, and other devices. Paged memory is RAM that the system can use and later reuse to hold different pages of memory from peripherals. </P>
<P CLASS="t">For more information on memory, see the <I>Microsoft Windows&nbsp;NT Workstation Resource Guide</I>, Chapter 12, "Detecting Memory Bottlenecks." </P>
<P CLASS="t">Windows&nbsp;NT Server 4.0 provides a default nonpaged pool size, which provides for a substantially higher number of trusted domains than earlier versions did. Table  2.8, below, lists the default nonpaged-pool size that is configured when Windows&nbsp;NT Server is installed on computers with different amounts of physical memory. The table also shows the recommended maximum number of trusted domains that will operate, based on the specified nonpaged pool size.</P>
<P CLASS="ttl"><B>Table 2.8    Trusted domains needed for nonpaged-pool sizes</B></P>

<TABLE COLS="4" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="107pt" VALIGN="TOP"><COL WIDTH="120pt" VALIGN="TOP"><COL WIDTH="120pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD COLSPAN="4" VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="th"><B>Nonpaged Pool Size</B></P></TD><TD VALIGN="TOP"><P CLASS="th"><B># of Trusted Domains</B></P></TD><TD VALIGN="TOP"><P CLASS="th"><B>Total Physical Memory</B></P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">1.2 MB</P></TD><TD VALIGN="TOP"><P CLASS="tt">140</P></TD><TD VALIGN="TOP"><P CLASS="tt">32 MB </P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">2.125 MB</P></TD><TD VALIGN="TOP"><P CLASS="tt">250</P></TD><TD VALIGN="TOP"><P CLASS="tt">64 MB </P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">4.125 MB</P></TD><TD VALIGN="TOP"><P CLASS="tt">500</P></TD><TD VALIGN="TOP"><P CLASS="tt">128 MB </P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><H4 CLASS="h3"><A NAME="sec0"></A>Calculating Required Nonpaged and Paged Pool Sizes</H4><P CLASS="t">Nonpaged and paged pool sizes are calculated from the physical memory on the computer when it starts up. Although the default nonpooled size is sufficient in most cases, you can approximate the values for an X86-based computer if you find it is necessary to change the nonpaged and paged pool size of your computer. </P>
<P CLASS="ttl"><B>Table 2.9    Terms and values used to calculate the nonpaged pool size</B></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="190pt" VALIGN="TOP"><COL WIDTH="158pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P CLASS="th"><B>Term</B></P></TD><TD VALIGN="TOP"><P CLASS="th"><B>Value</B></P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Minimum Nonpaged Pool Size</P></TD><TD VALIGN="TOP"><P CLASS="tt">256K</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">MinimumAdditionNonPagedPoolPerMb</P></TD><TD VALIGN="TOP"><P CLASS="tt">32K</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">DefaultMaximumNonPagedPool</P></TD><TD VALIGN="TOP"><P CLASS="tt">1MB</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">MaximumAdditionNonPagedPoolPerMb</P></TD><TD VALIGN="TOP"><P CLASS="tt">400K</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Pte_Per_Page</P></TD><TD VALIGN="TOP"><P CLASS="tt">1024</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Page_Size</P></TD><TD VALIGN="TOP"><P CLASS="tt">4096</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><H5 CLASS="h4"><A NAME="sec1"></A>Calculating Nonpaged Pool Size</H5><P CLASS="spacing"><BR></P>
<B>NonPagedPoolSize</B> = MinimumNonpagedPoolSize + ((Physical MB-4) * MinAdditionNonPagedPoolPerMb)
<UL><LI><I>Example</I>:     On a 32 MB x86-based computer    </LI><LI>     MinimumNonPagedPoolSize = 256K</LI><LI>     NonPagedPoolSize = 256K + ((32-4) * 32K) = 1.2 MB</LI></UL><P CLASS="t"><B>MaximumNonPagedPoolSize</B> = DefaultMaximumNonPagedPool; + ((Physical MB-4) * MaxAdditionNonPagedPoolPerMb</P>
<P>IF: MaximumNonPagedPoolSize &lt; (NonPagedPoolSize + Page_Size * 16)<BR>THEN: MaximumNonPagedPoolSize = (NonPagedPoolSize + Page_Size * 16)<BR>IF: NonPagedPoolSize &gt;= 192 MB <BR>THEN: NonPagedPoolSize = 192 MB </P>
<UL><LI><I>Example</I>:     On a 32 MB x86-based computer</LI><LI>     MaximumNonPagedPoolSize = 1 MB + ((32 - 4) * 400K) = 12.5 MB</LI></UL><H5 CLASS="h4"><A NAME="sec2"></A>Calculating Paged Pool Size</H5><P CLASS="spacing"><BR></P>
Size = (2 * MaximumNonPagedPoolSize) / Page_Size
Size = (Size + Pte_Per_Page - 1)) / Pte_Per_Page
PagedPoolSize = Size * Page_Size * Pte_Per_Page
If PagedPoolSize &gt;= 192 MB PagePoolSize = 192 MB

<UL><LI><I>Example</I>:     On a 32 MB x86-based computer
<P CLASS="spacing"><BR></P>
    Size = (2 * 12.5 MB) / 4096 = 6400
    Size = (6400 + (1024 - 1)) / 1024 = 7.25
    Paged Pool Size = 7.25 * 4096 * 1024 = 30 MB
    </LI></UL><P CLASS="nt"><B>Note</B>  If both the nonpaged and paged pool values are set to zero in the registry, then the paged pool size will approximately equal the memory size.</P>
<H4 CLASS="h3"><A NAME="sec3"></A>Changing Nonpooled and Pooled Page Size</H4><P CLASS="t">Nonpooled and pooled page values can be changed in the registry. The page pooled memory management parameters are located in the following registry key.</P>
<P CLASS="t"><B>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session \Memory Management Manager</B></P>
<P CLASS="nt"><B>Warning</B>  Using the Registry Editor incorrectly can cause serious, system-wide problems that may require you to reinstall Windows&nbsp;NT to correct them. Microsoft cannot guarantee that any problems resulting from the use of the Registry Editor can be solved. Use this tool at your own risk.</P>
<P CLASS="t">Increasing the size of NonPaged pool consumes physical memory that cannot be used for any other purpose. </P>
<P CLASS="t">Increasing the number of trusted domains increases the datagram traffic from each domain controller in the trusting domain.</P></BODY></HTML>
