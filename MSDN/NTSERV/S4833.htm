<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Microsoft WINS Server MIB</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css"><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"></HEAD><BODY BGCOLOR="#FFFFFF">
<H2 CLASS="h1">Microsoft WINS Server MIB </H2><P CLASS="spacing"><BR></P>
The WINS server MIB contains object-types that are<B> </B>used to monitor the network<BR> traffic between remote hosts and the WINS server.<BR>WINS-MIB DEFINITIONS ::= BEGIN
IMPORTS<BR>                  enterprises,<BR>                  OBJECT-TYPE<BR>                          FROM RFC1155-SMI<BR>                  DisplayString<BR>                          FROM RFC1213-MIB;<BR>microsoft    OBJECT IDENTIFIER ::= { enterprises 311 }<BR>        software       OBJECT IDENTIFIER ::= { microsoft 1 }<BR>        wins        OBJECT IDENTIFIER ::= { software 2 }<BR>        par      OBJECT IDENTIFIER ::= { wins 1 }<BR>        pull        OBJECT IDENTIFIER ::= { wins 2 }<BR>        push        OBJECT IDENTIFIER ::= { wins 3 }<BR>        datafiles        OBJECT IDENTIFIER ::= { wins 4 }<BR>        cmd    OBJECT IDENTIFIER ::= { wins 5 }
-- WINS MIB<BR>    -- Parameters (Prefix  Par) 
parWinsStartTime OBJECT-TYPE<BR>              SYNTAX  DisplayString (SIZE (1..30)) <BR>              ACCESS  read-only<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>                      "WINS start time"<BR>              ::= { par 1 }<BR>          parLastPScvTime OBJECT-TYPE<BR>              SYNTAX  DisplayString  (SIZE (1..30)) <BR>              ACCESS  read-only<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>                      "Most recent date and time at which planned scavenging <BR>             took place.  Planned scavenging happens at intervals<BR>             specified in the registry.  Scavenging involves<BR>             changing owned non-refreshed entries to the released<BR>             state. Further, replicas may be changed to tombstones,<BR>             tombstones may be deleted, and revalidation of old<BR>             replicas may take place"<BR>              ::= { par 2 }<BR>          parLastATScvTime OBJECT-TYPE<BR>              SYNTAX  DisplayString  (SIZE (1..30))   <BR>              ACCESS  read-only<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>                      "Most recent date and time at which scavenging as a<BR>             result of administrative action took place"<BR>              ::= { par 3 }
parLastTombScvTime OBJECT-TYPE<BR>              SYNTAX  DisplayString (SIZE (1..30))   <BR>              ACCESS  read-only<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>                      "Most recent date and time at which replica tombstone<BR>             scavenging took place" <BR>              ::= { par 4 }
parLastVerifyScvTime OBJECT-TYPE<BR>              SYNTAX  DisplayString  (SIZE (1..30))     <BR>              ACCESS  read-only<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>                      "Most recent date and time at which revalidation of<BR>            old active replicas took place"<BR>              ::= { par 5 }
          parLastPRplTime OBJECT-TYPE<BR>              SYNTAX  DisplayString (SIZE (1..30))   <BR>              ACCESS  read-only<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>                      "Most recent date and time at which planned replication<BR>            took place.  Planned replication happens at intervals<BR>            specified in the registry" <BR>              ::= { par 6 }
parLastATRplTime OBJECT-TYPE<BR>              SYNTAX  DisplayString (SIZE (1..30))   <BR>              ACCESS  read-only<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>                      "Most recent date and time at which administrator-<BR>            triggered replication took place." <BR>              ::= { par 7 }
parLastNTRplTime OBJECT-TYPE<BR>              SYNTAX  DisplayString (SIZE (1..30))   <BR>              ACCESS  read-only<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>                      "Most recent date and time at which network-triggered<BR>            replication took place.  Network-triggered replication <BR>            happens as a result of an update notification message<BR>            from a remote WINS"<BR>              ::= { par 8 }
parLastACTRplTime OBJECT-TYPE<BR>              SYNTAX  DisplayString (SIZE (1..30))   <BR>              ACCESS  read-only<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>                      "Most recent date and time at which address change-<BR>            triggered replication took place.  Address change-<BR>            triggered replication happens when the address of<BR>            an owned name changes due to a new registration" <BR>              ::= { par 9 }
          parLastInitDbTime OBJECT-TYPE<BR>              SYNTAX  DisplayString (SIZE (1..30))   <BR>              ACCESS  read-only<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>                      "Most recent date and time at which the local database<BR>             was populated statically from one or more data files" <BR>              ::= { par 10 }
parLastCounterResetTime OBJECT-TYPE<BR>              SYNTAX  DisplayString (SIZE (1..30))   <BR>              ACCESS  read-only<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>                      "Most recent date and time at which the local counters<BR>             were initialized to zero" <BR>              ::= { par 11 }
parWinsTotalNoOfReg OBJECT-TYPE<BR>              SYNTAX  Counter  <BR>              ACCESS  read-only<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "This variable indicates the number of<BR>             registrations received"<BR>              ::= { par 12 }
parWinsTotalNoOfQueries OBJECT-TYPE<BR>              SYNTAX  Counter <BR>              ACCESS  read-only<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "This variable indicates the number of<BR>             queries received"<BR>              ::= { par 13 }
parWinsTotalNoOfRel OBJECT-TYPE<BR>              SYNTAX  Counter <BR>              ACCESS  read-only<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "This variable indicates the number of<BR>             releases received"<BR>              ::= { par 14 }
parWinsTotalNoOfSuccRel OBJECT-TYPE<BR>              SYNTAX  Counter <BR>              ACCESS  read-only<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "This variable indicates the number of<BR>             releases that succeeded"<BR>              ::= { par 15 }
parWinsTotalNoOfFailRel OBJECT-TYPE<BR>              SYNTAX  Counter <BR>              ACCESS  read-only<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "This variable indicates the number of<BR>             releases that failed"<BR>              ::= { par 16 }
parWinsTotalNoOfSuccQueries OBJECT-TYPE<BR>              SYNTAX  Counter <BR>              ACCESS  read-only<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "This variable indicates the number of<BR>             queries that succeeded"<BR>              ::= { par 17 }
parWinsTotalNoOfFailQueries OBJECT-TYPE<BR>              SYNTAX  Counter <BR>              ACCESS  read-only<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "This variable indicates the number of<BR>             queries that failed"<BR>              ::= { par 18 }
parRefreshInterval OBJECT-TYPE<BR>              SYNTAX  INTEGER <BR>              ACCESS  read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "This variable indicates the refresh interval.<BR>             Unit is in milliseconds"<BR>              ::= { par 19 }
parTombstoneInterval OBJECT-TYPE<BR>              SYNTAX  INTEGER <BR>              ACCESS  read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "This variable indicates the tombstone interval.<BR>             Unit is in milliseconds"<BR>              ::= { par 20 }
parTombstoneTimeout OBJECT-TYPE<BR>              SYNTAX  INTEGER <BR>              ACCESS  read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "This variable indicates the tombstone timeout.<BR>             Unit is in milliseconds"<BR>              ::= { par 21 }
parVerifyInterval OBJECT-TYPE<BR>              SYNTAX  INTEGER <BR>              ACCESS  read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "This variable indicates the verify interval.<BR>             Unit is in milliseconds."<BR>              ::= { par 22 }
parVersCounterStartValLowWord OBJECT-TYPE<BR>              SYNTAX  Counter <BR>              ACCESS  read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "This variable indicates the low word of the<BR>            version counter that WINS should start with"<BR>              ::= { par 23 }
parVersCounterStartValHighWord OBJECT-TYPE<BR>              SYNTAX  Counter <BR>              ACCESS  read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "This variable indicates the high word of the<BR>            version counter that WINS should start with"<BR>              ::= { par 24 }
parRplOnlyWCnfPnrs OBJECT-TYPE<BR>              SYNTAX  INTEGER <BR>              ACCESS  read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "This variable indicates whether or not  <BR>            replication should be done with non-configured partners. If not <BR>            set to zero, replication will be done only     with partners listed in the<BR>            registry (except when an update notification comes in)" <BR>              ::= { par 25 }
parStaticDataInit OBJECT-TYPE<BR>              SYNTAX  INTEGER <BR>              ACCESS  read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "This variable indicates whether static data should <BR>             be read in at initialization and reconfiguration time.<BR>             Update of any MIB variable in the parameters group constitutes<BR>            reconfiguration"<BR>              ::= { par 26 }
parLogFlag OBJECT-TYPE<BR>              SYNTAX  INTEGER <BR>              ACCESS  read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "This variable indicates whether logging should be<BR>             done. Default behavior is to do logging" <BR>              ::= { par 27 }
parLogFileName OBJECT-TYPE<BR>              SYNTAX  DisplayString <BR>              ACCESS  read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "This variable gives the path to the log file" <BR>              ::= { par 28 }
parBackupDirPath  OBJECT-TYPE<BR>              SYNTAX  DisplayString <BR>              ACCESS  read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "This variable gives the path to the backup directory" <BR>              ::= { par 29 }
parDoBackupOnTerm  OBJECT-TYPE<BR>              SYNTAX  INTEGER  {<BR>                                no(0),<BR>                                yes(1)<BR>                               }<BR>              ACCESS  read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>        "This variable specifies whether WINS should do <BR>                           backup on termination. Setting it to 1 holds no<BR>                           meaning unless parBackupDirPath is set also" <BR>              ::= { par 30 }
parMigrateOn  OBJECT-TYPE<BR>              SYNTAX  INTEGER  {<BR>                                no(0),<BR>                                yes(1)<BR>                               }<BR>              ACCESS  read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>        "This variable specifies whether static records<BR>                           in the WINS database should be treated as<BR>                           dynamic records during conflicts with new<BR>                           dynamic registrations" <BR>              ::= { par 31 }
-- datafiles group (Prefix  df)
dfDatafilesTable OBJECT-TYPE<BR>              SYNTAX  SEQUENCE OF DFDatafileEntry <BR>              ACCESS  read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>                      "A list of datafiles specified under the Datafiles<BR>            key in the registry.  These files are used for<BR>            static initialization of the WINS database"<BR>              ::= { datafiles 1 }
     dfDatafileEntry OBJECT-TYPE<BR>          SYNTAX  DFDatafileEntry<BR>              ACCESS  read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION <BR>            "data file name"<BR>          INDEX   { dfDatafileIndex }<BR>          ::= { dfDatafilesTable 1 }
    DFDatafileEntry ::= SEQUENCE {<BR>            dfDatafileIndex<BR>                INTEGER,<BR>            dfDatafileName <BR>                DisplayString<BR>                }
    dfDatafileIndex OBJECT-TYPE<BR>              SYNTAX  INTEGER  <BR>              ACCESS  not-accessible<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "Used for indexing entries in the datafiles table.<BR>            It has no other use"    <BR>              ::= { dfDatafileEntry 1 }
    dfDatafileName OBJECT-TYPE<BR>              SYNTAX  DisplayString<BR>              ACCESS read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "Name of the datafile to use for static initialization"<BR>              ::= { dfDatafileEntry 2 }
-- pull group (Prefix pull)
pullInitTime OBJECT-TYPE<BR>              SYNTAX  INTEGER <BR>              ACCESS  read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "This variable indicates whether pull should be<BR>            done at WINS invocation and at reconfiguration.<BR>            If any pull group's MIB variable is set, that<BR>            constitutes reconfiguration"<BR>              ::= { pull 1 }
pullCommRetryCount OBJECT-TYPE<BR>              SYNTAX  INTEGER <BR>              ACCESS  read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "This variable gives the retry count in<BR>            case of communication failure when doing pull replication.<BR>            This is the maximum number of retries that will be<BR>            done at the interval specified for the partner<BR>            before WINS will stop for a certain number (canned) of<BR>            replication time intervals before starting again."<BR>              ::= { pull 2 }
pullPnrTable OBJECT-TYPE<BR>              SYNTAX  SEQUENCE OF PullPnrEntry<BR>              ACCESS  read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>                      "A list of partners with which pull replication needs<BR>             to be done"<BR>              ::= { pull 3 }
pPullPnrEntry  OBJECT-TYPE<BR>              SYNTAX  PullPnrEntry <BR>              ACCESS  read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "This is the row corresponding to a partner" <BR>          INDEX   { pullPnrAdd }<BR>              ::= { pullPnrTable 1 }
      PullPnrEntry ::= SEQUENCE { <BR>        pullPnrAdd<BR>            IpAddress,
        pullPnrSpTime<BR>            DisplayString,
        pullPnrTimeInterval<BR>            INTEGER,
        pullPnrMemberPrec<BR>            Counter,<BR>        pullPnrNoOfSuccRpls<BR>            Counter,
        pullPnrNoOfCommFails<BR>            Counter
        }<BR>          pullPnrAdd  OBJECT-TYPE<BR>              SYNTAX  IpAddress <BR>              ACCESS  read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "This is the address of the remote WINS partner" <BR>              ::= { pPullPnrEntry 1 }
              pullPnrSpTime OBJECT-TYPE<BR>              SYNTAX  DisplayString <BR>              ACCESS  read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "This variable gives the specific time at which <BR>             pull replication should occur" <BR>              ::= { pPullPnrEntry 2 }
pullPnrTimeInterval  OBJECT-TYPE<BR>              SYNTAX  INTEGER <BR>              ACCESS  read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "This variable gives the time interval for <BR>            pull replication" <BR>              ::= { pPullPnrEntry 3 }<BR>          pullPnrMemberPrec  OBJECT-TYPE<BR>           SYNTAX INTEGER {<BR>                   low(0),<BR>                   high(1)<BR>             }<BR>          ACCESS  read-write<BR>          STATUS  mandatory<BR>          DESCRIPTION<BR>           "This is the precedence to be given to members of <BR>           the special group pulled from the WINS. Note:<BR>           the precedence of locally registered members of a <BR>           special group is more than any replicas pulled in"<BR>            ::= { pPullPnrEntry 4 }
pullPnrNoOfSuccRpls  OBJECT-TYPE<BR>          SYNTAX  Counter <BR>          ACCESS  read-only<BR>          STATUS  mandatory<BR>          DESCRIPTION<BR>          "The number of times replication was successful with<BR>           the WINS after invocation or reset of counters"<BR>            ::= { pPullPnrEntry 5 }
pullPnrNoOfCommFails  OBJECT-TYPE<BR>          SYNTAX  Counter <BR>          ACCESS  read-only<BR>          STATUS  mandatory<BR>          DESCRIPTION<BR>          "The number of times replication was unsuccessful with<BR>           the WINS due to communication. failure (after invocation or  reset of counters)"<BR>            ::= { pPullPnrEntry 6 }
pullPnrVersNoLowWord  OBJECT-TYPE<BR>          SYNTAX  Counter <BR>          ACCESS  read-only<BR>          STATUS  mandatory<BR>          DESCRIPTION<BR>          "The low word of the highest version number found in     records owned by this WINS." <BR>            ::= { pPullPnrEntry 7 }
          pullPnrVersNoHighWord  OBJECT-TYPE<BR>          SYNTAX  Counter <BR>          ACCESS  read-only<BR>          STATUS  mandatory<BR>          DESCRIPTION<BR>          "The high word of the highest version number found in records owned by this WINS." <BR>            ::= { pPullPnrEntry 8 }
-- push group (Prefix - push)<BR>          pushInitTime OBJECT-TYPE<BR>              SYNTAX  INTEGER <BR>              ACCESS  read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "This variable indicates whether a push (that is, a <BR>            notification message) should be done at invocation."<BR>              ::= { push 1 }
pushRplOnAddChg OBJECT-TYPE<BR>              SYNTAX  INTEGER <BR>              ACCESS  read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "This variable indicates whether a notification <BR>             message should be sent when an address changes" <BR>              ::= { push 2 }
pushPnrTable OBJECT-TYPE<BR>              SYNTAX  SEQUENCE OF PushPnrEntry<BR>              ACCESS  read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>                      "A list of WINS partners with which push<BR>            replication is to be initiated"<BR>              ::= { push 3 }
pushPnrEntry  OBJECT-TYPE<BR>              SYNTAX  PushPnrEntry <BR>              ACCESS  read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "This is the row corresponding to the WINS partner" <BR>          INDEX   { pushPnrAdd }<BR>              ::= { pushPnrTable 1 }<BR>      PushPnrEntry ::= SEQUENCE { <BR>        pushPnrAdd<BR>            INTEGER,
        pushPnrUpdateCount<BR>            INTEGER<BR>                }
pushPnrAdd OBJECT-TYPE<BR>              SYNTAX  IpAddress <BR>              ACCESS  read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "Address of the WINS partner"<BR>              ::= { pushPnrEntry 1 }<BR>pushPnrUpdateCount OBJECT-TYPE<BR>              SYNTAX  INTEGER <BR>              ACCESS  read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "This variable indicates the number of updates that<BR>             should result in a push message" <BR>              ::= { pushPnrEntry 2 }
-- cmd group (Prefix - cmd)
cmdPullTrigger OBJECT-TYPE<BR>              SYNTAX  IpAddress <BR>              ACCESS  read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "This variable, when set, will cause the WINS to<BR>             pull from the remote WINS identified by the IpAddress"<BR>              ::= { cmd 1 }
          cmdPushTrigger OBJECT-TYPE<BR>              SYNTAX  IpAddress <BR>              ACCESS  read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "This variable, when set, will cause the WINS to<BR>             push a notification message to the remote WINS <BR>            identified by the IpAddress"<BR>              ::= { cmd 2 }<BR>cmdDeleteWins OBJECT-TYPE<BR>              SYNTAX  IpAddress <BR>              ACCESS  read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "This variable, when set, will cause all information<BR>             pertaining to a WINS (data records, context <BR>             information) to be deleted from the local WINS.<BR>             Use this only when owner-address mapping table is<BR>             getting to near capacity. Note: Deletion of all <BR>             information pertaining to the managed WINS is not<BR>             permitted"<BR>              ::= { cmd 3 }
cmdDoScavenging OBJECT-TYPE<BR>              SYNTAX  INTEGER {<BR>                no(0),<BR>                yes(1)<BR>                  } <BR>              ACCESS  read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "This variable, when set, will cause WINS to do<BR>             scavenging." <BR>              ::= { cmd 4 }
cmdDoStaticInit OBJECT-TYPE<BR>              SYNTAX  DisplayString<BR>              ACCESS  read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "When this variable is set, WINS will do static <BR>            initialization using the file specified as the value.<BR>If 0 is specified, WINS will do static  initialization using the<BR>files specified in the registry (can be read-written using Datafile table"<BR>              ::= { cmd 5 }
cmdNoOfWrkThds OBJECT-TYPE<BR>              SYNTAX  INTEGER (1..4)<BR>              ACCESS  read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "Sets the number of worker threads in WINS"<BR>              ::= { cmd 6 }
          cmdPriorityClass OBJECT-TYPE<BR>              SYNTAX  INTEGER { <BR>                normal(0),<BR>                high(1)<BR>                 } <BR>              ACCESS  read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "Sets the priority class of WINS to normal or high"<BR>              ::= { cmd 7 }
cmdResetCounters OBJECT-TYPE<BR>              SYNTAX  INTEGER <BR>              ACCESS  read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "Resets the counters. Value is ignored"<BR>              ::= { cmd 8 }
cmdDeleteDbRecs OBJECT-TYPE<BR>              SYNTAX  IpAddress <BR>              ACCESS  read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "This variable, when set, will cause all data records <BR>            pertaining to a WINS to be deleted from the local WINS.<BR>Note: Only data records are deleted."<BR>              ::= { cmd 9 }
cmdDRPopulateTable OBJECT-TYPE<BR>              SYNTAX  IpAddress <BR>              ACCESS  read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "This variable can be set to retrieve records of<BR>             a WINS whose Ip address is provided. When set,<BR>             the table is populated immediately"<BR>              ::= { cmd 10 }<BR>          cmdDRDataRecordsTable OBJECT-TYPE<BR>              SYNTAX  SEQUENCE OF CmdDRRecordEntry<BR>              ACCESS  read-only<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "This is the table that stores the data records. <BR>             The records are sorted by name.  <BR>             Note: the table is cached (to save on overhead on  WINS).<BR>To repopulate the  table, set cmdDRDataRecordsTable mib var" <BR>              ::= { cmd 11 }
     cmdDRRecordEntry OBJECT-TYPE<BR>          SYNTAX  CmdDRRecordEntry<BR>              ACCESS  read-write<BR>              STATUS  mandatory<BR>              DESCRIPTION  "Data record owned by WINS whose address<BR>             was specified when CmdDRRecordsTable was<BR>             set"<BR>          INDEX { cmdDRRecordName }<BR>          ::= { cmdDRDataRecordsTable 1 }
    CmdDRRecordEntry ::= SEQUENCE {<BR>            cmdDRRecordName<BR>                DisplayString,<BR>            cmdDRRecordAddress <BR>                OCTET STRING,<BR>            cmdDRRecordType<BR>                INTEGER,<BR>            cmdDRRecordPersistenceType<BR>                INTEGER,<BR>            cmdDRRecordState<BR>                INTEGER<BR>                }
    cmdDRRecordName OBJECT-TYPE<BR>              SYNTAX  OCTET STRING (SIZE(1..255)) <BR>              ACCESS read-only<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "Name in the record"<BR>              ::= { cmdDRRecordEntry 1 }<BR>    cmdDRRecordAddress  OBJECT-TYPE<BR>              SYNTAX  OCTET STRING  <BR>              ACCESS  read-only<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "Address(es) of the record.  If the record is<BR>             a multihomed record or a special group, the<BR>             addresses are returned sequentially in pairs.<BR>             Each pair is comprised of the address of the<BR>                      owner WINS followed by the address of the <BR>             machine (multihomed)/member (special group).<BR>             Note: Following SNMP's convention, the records<BR>             are always returned in network byte order"<BR>              ::= { cmdDRRecordEntry 2 }<BR>    cmdDRRecordType  OBJECT-TYPE<BR>              SYNTAX  INTEGER {<BR>            unique(0),<BR>            normalgroup(1),<BR>            specialgroup(2),<BR>            multihomed(3) <BR>            }<BR>    Note: The preceding order should not be disturbed.  It is the same as-- in winsintf.h (WINSINTF_RECTYPE_E)<BR>              ACCESS  read-only<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "Type of the record"<BR>              ::= {cmdDRRecordEntry 3 }
    cmdDRRecordPersistenceType OBJECT-TYPE<BR>              SYNTAX  INTEGER {<BR>            static(0),<BR>            dynamic(1)<BR>            }<BR>              ACCESS  read-only<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "Persistence type of the record"<BR>              ::= { cmdDRRecordEntry 4 }<BR>    cmdDRRecordState  OBJECT-TYPE<BR>              SYNTAX  INTEGER {<BR>            active(0),<BR>            released(1),<BR>            tombstone(2),<BR>            deleted(3)<BR>            }<BR>    -- Note: The preceding order should not be disturbed.  It is the same as<BR>    -- in winsintf.h (WINSINTF_STATE_E)<BR>    -- for a SET operation only released and deleted values are<BR>    -- allowed<BR>              ACCESS  read-only<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "State of the record."<BR>              ::= { cmdDRRecordEntry 5 }
cmdWinsVersNoLowWord OBJECT-TYPE<BR>              SYNTAX  INTEGER <BR>              ACCESS  read-only<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "The low word of the version number counter of the WINS"<BR>              ::= { cmd 12 }
          cmdWinsVersNoHighWord OBJECT-TYPE<BR>              SYNTAX  INTEGER <BR>              ACCESS  read-only<BR>              STATUS  mandatory<BR>              DESCRIPTION<BR>            "The high word of the version number counter of the WINS"<BR>              ::= { cmd 13 }<BR>          END</BODY></HTML>
