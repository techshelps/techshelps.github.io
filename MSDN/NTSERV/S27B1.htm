<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Available Bytes and the Inetinfo Working Set</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css"><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"></HEAD><BODY BGCOLOR="#FFFFFF">
<H3>Available Bytes and the Inetinfo Working Set</H3><P CLASS="t">If the system has sufficient memory, it can maintain enough space in the Inetinfo working set so that Internet Information Server rarely needs to perform disk operations. One indicator of memory sufficiency is how much the size of the Inetinfo process working set varies in response to general memory availability on the server. </P>
<P CLASS="t">You can use the Memory: Available Bytes counter as an indicator of memory availability and the Process: Working Set: Inetinfo counter as an indicator of the size of the working set of the Internet Information Server process. Be sure to examine data collected over time because these counters display the last value observed, not an average.</P>
<P></P>
<P>Tip</P>
<P>To determine whether a counter reports instantaneous or averaged data, look at its <I>counter type</I>. The <I>counter type</I> determines how the data Performance Monitor collects from internal counters is calculated and averaged. </P>
<P>For example, the counter type of Memory: Available Bytes, is Perf_Counter_Rawcount. Counters of this type report only the last value observed in each sample interval.</P>
<P>Counters.hlp, a help file for the Performance Monitor counters, lists the counter type of each counter. Counters.hlp also includes a detailed description of each counter type. You can find the most current version of Counters.hlp on the <I>Supplement 1</I> CD. </P>
<P></P>
<P></P>
<P CLASS="t">Note how the size of the Inetinfo working set changes in response to changes in available bytes. In general, when available bytes fall, the system attempts to provide more available bytes. To do so, the system recovers bytes by taking bytes from the working sets of processes. This strategy provides more available bytes to the system, but it is likely to increase the rate of page faults for the process because the process must now retrieve data from disk that was once in its working set. When the rate of page faults rises, the system attempts to expand the working set to lower the page fault rate and the size of the working sets fluctuate accordingly.</P>
<P CLASS="t">After you have reviewed data on the varying size of the Inetinfo working set, you can use its page fault rate to determine how large the working set should be to operate efficiently.</P></BODY></HTML>
