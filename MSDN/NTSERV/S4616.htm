<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Subjects and Impersonation</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css"><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"></HEAD><BODY BGCOLOR="#FFFFFF">
<H3 CLASS="h2">Subjects and Impersonation</H3><P CLASS="t">One objective of the Windows&nbsp;NT security model is to ensure that the programs that a user runs have no more access to objects than the user does. That is, if a user is granted only read access to a file, then when he or she runs a program, that program cannot write to the file. The program, like the user, is granted read-only permission. </P>
<P CLASS="t">A <I>subject</I> is the combination of the user's access token and the program that is acting on the user's behalf. Windows&nbsp;NT uses subjects to track and manage permissions for the programs users run. </P>
<P CLASS="t">When a program or process runs on the user's behalf, it is said to be running in the <I>security context</I> of that user. The security context controls what access the subject has to objects and system services. </P>
<P CLASS="t">To accommodate the client/server model of Windows&nbsp;NT, there are two classes of subjects within the Windows&nbsp;NT security architecture:</P>
<UL><LI>A <I>simple subject,</I> which is a process that was assigned a security context when the corresponding user logged on. It is not acting in the capacity of a protected server, which may have other subjects as clients.</LI><LI>A <I>server subject,</I> which is a process implemented as a protected server (such as the Win32 subsystem), and which has other subjects as clients. In this role, a server subject typically has the security context of those clients available for use when acting on their behalf.</LI></UL><P CLASS="t">When a subject calls an object service through a protected subsystem, the subject's token is used within the service to determine who made the call and to decide whether the caller has sufficient access authority to perform the requested action.</P>
<P CLASS="t">Windows&nbsp;NT allows one process to take on the security attributes of another through a technique called <I>impersonation</I>. For example, a server process typically impersonates a client process to complete a task involving objects to which the server does not normally have access.</P></BODY></HTML>
