<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Transport Driver Interface</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css"><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"></HEAD><BODY BGCOLOR="#FFFFFF">
<H2 CLASS="h1">Transport Driver Interface </H2><P CLASS="t">Microsoft developed the transport driver interface (TDI) to provide greater flexibility and functionality than provided by existing interfaces such as NetBIOS and Windows Sockets. The TDI interface is exposed by all Windows&nbsp;NT transport providers. The TDI interface specification describes the set of primitive functions by which transport drivers and TDI clients communicate, and the call mechanisms used for accessing them. Currently, the TDI Interface is <I>kernel-mode</I> only.</P>
<P CLASS="t">The Windows NT redirector and server both use TDI directly, rather than going through the NetBIOS mapping layer. By doing so, they are not subject to many of the restrictions imposed by NetBIOS, such as the 254 session limit. </P>
<P CLASS="t">TDI may be the most difficult to use of all the Windows NT network APIs. It is a simple conduit, so the programmer must determine the format and meaning of messages. </P>
<P CLASS="t"><B>Note</B></P>
<P>More information on the TDI interface is available in the Windows&nbsp;NT Device Driver Kit (DDK).</P>
<P CLASS="t">The following features are part of the Windows NT implementation of TDI.</P>
<UL><LI>Support for all Windows NT transports excluding the DLC protocol</LI><LI>An open naming and addressing scheme</LI><LI>Message and stream mode data transfer</LI><LI>Asynchronous operation</LI><LI>Support for unsolicited indication of events</LI><LI>Extensibility<FONT FACE="Symbol">¾</FONT>clients can submit private requests to a transport driver that can process the requests</LI><LI>Support for limited use of standard kernel-mode I/O functions to send and receive data</LI><LI>32-bit addressing and values</LI></UL></BODY></HTML>
