<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Streams</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css"><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"></HEAD><BODY BGCOLOR="#FFFFFF">
<H3 CLASS="h2">Streams</H3><P CLASS="t">Streams are multiple data channels that allow broader bandwidth for data transfer. There are two reasons for writing a protocol to use the Streams device driver.</P>
<UL><LI>Streams makes it easier to port existing protocols to the Windows&nbsp;NT operating system.</LI><LI>Streams encourages protocols to be organized in a modular, stackable style, thus moving closer to the original vision of the OSI model.</LI></UL><P><img src="XNG_A17.gif"></P>
<P CLASS="cap"><B>Figure 1.13    Windows&nbsp;NT 3.1 Streams</B></P>
<P CLASS="t">In Windows&nbsp;NT version 3.1, both TCP/IP and NWLink were surrounded by a Streams device driver. Calls to the TCP/IP or NWLink protocol first passed through the upper layer of the Streams device driver, and then to the NDIS device driver by way ofthe lower layer of the Streams device driver. The streams device driver exposes the TDI interface at its top and the NDIS interface at the bottom. Streams is a significant departure from the way protocols were developed for MS-DOS and OS/2.</P>
<P CLASS="t">Streams has one great disadvantage: overhead. The protocol requires more instructions to pass a request from the TDI through Streams than if Streams were not used. This is why TCP/IP and NWLink do not use Streams in Windows&nbsp;NT version 3.5 or later. </P></BODY></HTML>
