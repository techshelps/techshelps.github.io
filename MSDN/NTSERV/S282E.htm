<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How SYN Attacks Happen</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css"><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"></HEAD><BODY BGCOLOR="#FFFFFF">
<H2 CLASS="h2">How SYN Attacks Happen</H2><P CLASS="t">In a normal message exchange, a client initiates access to your server by contacting your system. The client first sends a SYN message; your server responds to the client with a SYN-ACK message. Your server retains this half-open TCP port connection until the client returns an ACK (acknowledgment) message and establishes a connection.</P>
<P CLASS="t">A SYN attack (also called "SYN flooding") occurs when your server receives a SYN message with an incorrect source IP address. Your system responds with a SYN-ACK message and waits for an ACK reply that never arrives.</P>
<P CLASS="t">In the meantime, the intruder sends more SYN messages with incorrect IP addresses. Your server sets up a queue for each of these half-open connections. </P>
<P CLASS="t">Although your server can eventually become hindered in responding to legitimate users, these queues are small and do not necessarily place extraordinary demands on your server's processing capacity. But during a SYN attack, a given TCP port reaches its limit of half-open connections and, until resources are freed up, responds to further connection requests with a port reset. Thus, the intentional proliferation of half-open connections can prevent legitimate users from gaining access to the attacked server. This can shut down operations for an organization dependent on access by Internet, such as an Internet service provider.</P></BODY></HTML>
