<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Your Web Applications in Custom Tests</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h3>Using Your Web Applications in Custom Tests</h3>
<p>
You can create a custom test by using programs running on your Internet Information Server instead of the prepared test programs provided with WCAT. In addition to testing existing Web applications, you can use WCAT to evaluate programs as they are developed or during preproduction testing.</p>
<p>
By using your programs in a WCAT test, WCAT can help you determine what programs need to be optimized to run on under Internet Information Server. For example, you can use WCAT to compare the functionality of different programs that provide file transfer, Web content, or security functions. </p>
<p>
You can test the functionality of the following types of programs:</p>
<p>
<font face="Symbol">&#183;</font> Basic file transfer programs</p>
<p>
<font face="Symbol">&#183;</font> Common Gateway Interface (CGI) applications</p>
<p>
<font face="Symbol">&#183;</font> ISAPI extensions</p>
<p>
<font face="Symbol">&#183;</font> Secure Sockets Layer (SSL) programs </p>
<p>
To use your own CGI application or ISAPI extension in a WCAT test, model your test on a CGI or ISAPI test provided with WCAT. In the URL field of the test script file, replace the reference to Wscgi.exe or Wsisapi.dll with the name of your CGI application or ISAPI extension.</p>
<p>
You can also create your own HTTP keep-alive tests by adding the <b>KeepAlive = TRUE </b>operation to each transaction in the test script file. When creating your own tests, note that WCAT does not support HTTP keep-alives and the SSL protocol in the same test.</p>
<p>
To run a WCAT test using your own programs, create a new script file and create HTTP transactions with the appropriate <i>Cookie, URL, SSL, RequestHeader, ResponseHeader, SaveResponseFile, ResponseData, </i>and <i>RequestData </i>values.</p>

</FONT>
</BODY>
</HTML>
