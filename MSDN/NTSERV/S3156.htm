<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Mapping UNIX Passwords to Windows NT User Accounts</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css"><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"></HEAD><BODY BGCOLOR="#FFFFFF">
<H3 CLASS="h2">Mapping UNIX Passwords to Windows&nbsp;NT User Accounts</H3><P CLASS="t">At Terra Flora, all user accounts, passwords and permissions have been set up on the computers running Windows&nbsp;NT Server. For details see, Microsoft Windows&nbsp;NT <I>Concepts and Planning</I>, Chapter 1, "Managing Windows&nbsp;NT Server Domains," Chapter 2, "Working with User and Group Accounts," and Chapter 3, "Managing User Work Environments." </P>
<P CLASS="t">Additionally, the UNIX /etc/Passwd file has been copied to the proper Windows&nbsp;NT directory WINNT\System32\Drivers\Etc, which makes it accessible to the graphical interface supplied in Integraph's DiskShare. The entries in the UNIX password file will be mapped or matched to user accounts created in Windows&nbsp;NT domains. </P>
<P CLASS="t">Mapping the UNIX user accounts and passwords to a Windows&nbsp;NT User account grants the UNIX user the same rights and permissions to the Windows&nbsp;NT server as the Windows&nbsp;NT user to whose account the UNIX account is mapped.</P>
<P CLASS="t"><B>Note</B></P>
<P>If the name and password are exactly the same in the UNIX /etc/Passwd file as that stored in the Windows&nbsp;NT Directory Database, mapping is automatic.</P>
<P CLASS="t">Without mappings, server resource access will default to whatever privileges are given to the Everyone user trying to access the group. See your UNIX documentation for more details on UNIX privileges. </P>
<P CLASS="t"><B>To administer UNIX-to-NT user mappings</B></P>
<P>    1.    Open the NFS Administrator.</P>
<P><img src="XNG_F02.gif"></P>
<P>    2.    Click Mappings. </P>
<P>In the <B>User Mappings</B> dialog box, the users that are currently mapped are listed in <B>NFS Mapped</B> Users. </P>
<P><img src="XNG_F03.gif"></P>
<P>    3.    In <B>Network Users</B>, click the UNIX user to be mapped to the Windows&nbsp;NT user.</P>
<P>    4.    In <B>NT Users</B>, click the Windows&nbsp;NT user to which you want the UNIX Network user mapped.</P>
<P>    5.    Click <B>Add</B>. </P>
<P>The mapping appears in <B>NFS Mapped</B> <B>Users</B>.</P>
<P CLASS="t">Additional information that appears in the NFS Administrator window includes:</P>
<UL><LI><B>Network Users</B>, which list user names and user IDs (UIDs) in the format: network user name:UID. This information comes from the UNIX-style password file.</LI><LI><B>NT Users</B>, which lists Windows&nbsp;NT user accounts that are local to the domain controller of the specified NT domain.</LI><LI><B>List Names From Domain</B>, which lists all NT domains to which the local machine has access. It includes the local machine name, the primary domain, and any domains that trust the primary domain. </LI></UL><P CLASS="t"><B>Note</B></P>
<P>Changes made in this dialog box do not take effect until you click OK, to write the new information to the registry. </P>
<P CLASS="t">Online Help is part of the DiskShare product and explains mapping, such as how to map Windows&nbsp;NT User Groups to UNIX Groups and perform reverse mappings. These sections focus on administrative tasks specific to the Intergraph PC-NFS and DiskShare products. </P>
<P CLASS="t"><B>Note</B></P>
<P>Sharing and unsharing of NFS directories and files requires the same user permissions required by Windows&nbsp;NT Server and LAN Manager. The local user account must be logged on as a member of the Administrators, Server Operators, or Power Users groups.</P>
<H4 CLASS="h3"><A NAME="sec0"></A>Sharing NFS Server Resources </H4><P CLASS="t">Two separate and complimentary mechanisms govern file access through the NFS server. The first is the NFS administrator's ability to control both which server resources are made available as network resources and what access clients within the network will have to the data. The second is the security administration performed by the underlying server file system itself. Effective access permission granted to any user is the more restrictive of these two mechanisms.</P>
<P CLASS="t">Share permissions are the first line of defense for the NFS server. Using share permissions, an administrator can control which network NFS client nodes have read and/or write access to NFS Shared resources. Four levels of access are available depending on the type of object selected, as follows:</P>
<UL><LI>No Access</LI></UL><P>This prevents all <I>mount</I> or connection requests for the share except for those individual client nodes or client groups that have a type of access specified.</P>
<UL><LI>Read-Only</LI></UL><P>The client is allowed to mount and read the shared resource, but cannot alter it.</P>
<UL><LI>Read-Write</LI></UL><P>The client may mount, read and write the shared resource.</P>
<UL><LI>Root</LI></UL><P>The client may mount, read, write, and perform "superuser" type operations on the file system assuming the requesting User ID is correct for the operation, and that is maps to the Administrator privilege. This access level can only be assigned to individual client nodes or client groups.</P>
<P CLASS="t">To determine if sufficient permission is available for the NFS request, the Global Permission is checked first. If this is not sufficient, an individual client's permission entry is checked. If no individual client permissions are present, then permission is given based on client group access. </P>
<P CLASS="t">File permissions within NFS are very much like those in a UNIX system. Under UNIX, every file belongs to a single user and group; the user must be a member of the group that owns the file. More precisely, a file has a single user ID and a single group ID. Because several different user accounts can have the same user ID, and several groups the same group ID, it may be ambiguous to speak of a particular user or group. The following criteria, in order of decreasing precedence, govern access to files:</P>
<UL><LI>Access granted to the owner of the file, a user with the same effective user ID as the file owner ID.</LI><LI>Access granted to members of the group to which the file belongs, users can belong to several groups simultaneously.</LI><LI>Access to granted to all others, such as those who do not own the file and are not members of the group to which the file belongs. </LI></UL><P CLASS="t">Each permission category controls three modes of access:</P>
<UL><LI><I>Read</I>, which is the ability to open the file for read access and examine its contents without altering it in any way.</LI><LI><I>Write</I>, which is the ability to open the file with write access and update its contents.</LI><LI><I>Execute</I>, which is the ability to load the file into the system and run it. For directory files, execute access is interpreted as search permission.</LI></UL><H5 CLASS="h4"><A NAME="sec1"></A>Understanding the Security Descriptor</H5><P CLASS="t">Intergraph DiskShare uses the Windows&nbsp;NT security descriptor when implementing NFS access permissions. The security descriptor is the structure that governs security within Windows&nbsp;NT. The security descriptor contains the following components:</P>
<UL><LI>File owner.</LI><LI>File group.</LI><LI>System Access Control List (SACL). The SACL is used for auditing and does not affect file permissions.</LI><LI>Discretionary Access Control List (DACL).</LI></UL><P CLASS="t">The following is an example of a security descriptor:</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="89pt" VALIGN="TOP"><COL WIDTH="89pt" VALIGN="TOP"><COL WIDTH="89pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P CLASS="tt">Owner:</P></TD><TD VALIGN="TOP"><P CLASS="tt">spike</P></TD><TD VALIGN="TOP"><P CLASS="tt"></P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Group:</P></TD><TD VALIGN="TOP"><P CLASS="tt">UtilGroup</P></TD><TD VALIGN="TOP"><P CLASS="tt"></P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">DACL:</P></TD><TD VALIGN="TOP"><P CLASS="tt">spike</P></TD><TD VALIGN="TOP"><P CLASS="tt">Read (R)</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">UtilGroup</P></TD><TD VALIGN="TOP"><P CLASS="tt"></P></TD><TD VALIGN="TOP"><P CLASS="tt">Read (RX)</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Everyone</P></TD><TD VALIGN="TOP"><P CLASS="tt"></P></TD><TD VALIGN="TOP"><P CLASS="tt">Read (RX)</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">In this example, the file owner is spike, the file group is UtilGroup, and the DACL shows the permissions given to spike, UtilGroup, and Everyone.</P>
<P CLASS="t">Within the security descriptor, the file owner and file group are pointers to Security Identifiers (SIDs). The SID can be thought of as the internal representation for an individual user or group. The primary reason for using SIDs is to distinguish between accounts across different domains that may share the same account name. Even though the names are the same, they represent different accounts and can thus be given different access rights to the same file.</P>
<H5 CLASS="h4"><A NAME="sec2"></A>Understanding the DACL</H5><P CLASS="t">The Discretionary Access Control List (DACL) within the security descriptor provides the core of Windows&nbsp;NT security. The DACL is a list of entries that grants or denies certain rights to specific users or groups. A list entry is called an Access Control Entry (ACE). Each ACE consists of the following:</P>
<UL><LI>A Security Identifier (SID) to identify a particular user or group.</LI><LI>An access list specifying the rights allowed or denied for the user or group.</LI></UL><P CLASS="t">The following is an example of a DACL:</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="119pt" VALIGN="TOP"><COL WIDTH="119pt" VALIGN="TOP"><COL WIDTH="119pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P CLASS="tt">DACL:</P></TD><TD VALIGN="TOP"><P CLASS="tt">mrjones</P></TD><TD VALIGN="TOP"><P CLASS="tt">Full Control (All)</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">ToolGroup</P></TD><TD VALIGN="TOP"><P CLASS="tt"></P></TD><TD VALIGN="TOP"><P CLASS="tt">Read (RX)</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Everyone</P></TD><TD VALIGN="TOP"><P CLASS="tt"></P></TD><TD VALIGN="TOP"><P CLASS="tt">Read (RX)</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">In this DACL, mrjones has read, write, and execute access to the file; members of the group ToolGroup have read and execute access, and members of the group Everyone (all other users) have read and execute access.</P>
<P CLASS="t">The following rules govern access to a file:</P>
<UL><LI>If no DACL is present, everyone is granted full access.</LI><LI>If a DACL is present, but contains no entries, everyone is denied any access.</LI><LI>The file owner always has the ability to change the DACL.</LI></UL><H5 CLASS="h4"><A NAME="sec3"></A>Reverse Mapping Permissions</H5><P CLASS="t">The function of Intergraph DiskShare is to translate between a security descriptor on the computer running Windows&nbsp;NT Server and Intergraph DiskShare and a (UID, GID, mode) triplet on the NFS client.</P>
<P CLASS="t">Intergraph DiskShare controls permission translation with reverse mapping. Intergraph DiskShare's NFS Administrator program allows the DiskShare administrator to specify a mapping between NFS User and Group IDs and their corresponding Windows&nbsp;NT users and groups.</P>
<UL><LI>A given UID can be mapped to any Windows&nbsp;NT user. </LI></UL><P>Because multiple UIDs can be mapped to the same Windows&nbsp;NT user, one of the mappings will be marked as the default mapping. The default mapping is the UID to be returned when the mapped Windows&nbsp;NT user is found to be the file owner.</P>
<P>If the given UID is not mapped, the ANONYMOUS LOGON account will be used. This can have some undesirable results, so we recommend that all UIDs be mapped to a valid Windows&nbsp;NT account.</P>
<UL><LI>A given GID can be mapped to any Windows&nbsp;NT group.</LI></UL><P><B>Note</B>  If the given GID is not mapped, no group will be assigned, and no group entry will be placed in the DACL.</P>
<P CLASS="t">You can use the reverse mapping feature when mapping from NFS to Windows&nbsp;NT, or from Windows&nbsp;NT to NFS.</P>
<H4 CLASS="h3"><A NAME="sec4"></A>Sharing Files and Directories on a NFS Server</H4><P CLASS="t">Once the DiskShare product is installed, the ability to share the NFS server files and directories and grant permissions to the users is provided through the computer running Windows&nbsp;NT Server. </P>
<P CLASS="t"><B>To share files and directories on a NFS Server</B></P>
<P>    1.    Click Start, and then click <B>Run</B>.</P>
<P>    2.    In <B>Open, </B>type <B>winfile</B>, and then click <B>OK</B>.</P>
<P>    3.    On the <B>Disk</B> menu, click <B>Share as</B>.</P>
<P><img src="XNG_F04.gif"></P>
<P>    4.    Click <B>NFS</B>, and then click <B>OK</B>.</P>
<P>    5.    In the <B>New NFS Share</B> dialog box, type the path of the file you want to share.</P>
<P><img src="XNG_F05.gif"></P>
<P>    6.    Click <B>Permissions</B>.    </P>
<P>The <B>NFS Share Permissions</B> dialog box appears.</P>
<P><img src="XNG_F06.gif"></P>
<P>    7.    Enter the settings you want for <B>Anonymous UID</B> and <B>Type of Access</B>, and then click <B>Add</B>.</P>
<P>    8.    Under <B>Names </B>in the <B>Add Clients and Client Groups</B> dialog box, click the user to be granted access.</P>
<P>    9.    In <B>Type of Access</B>, click the setting you want, and then click <B>OK</B>.</P>
<H4 CLASS="h3"><A NAME="sec5"></A>UNIX Client Sign On</H4><P CLASS="t">Once the above steps are performed, the UNIX client is mapped with the proper permissions to the computer running Windows&nbsp;NT Server. When the UNIX client signs onto the server, authentication is provided via pcnfsd on the UNIX server to Windows&nbsp;NT User Account. </P>
<P CLASS="t">From the UNIX client, create a local directory as a mount point. Then mount the exported directory to a local directory. </P></BODY></HTML>
