<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Stripe Set With Parity</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css"><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"></HEAD><BODY BGCOLOR="#FFFFFF">
<H3 CLASS="h2">Stripe Set With Parity</H3><P CLASS="t">A stripe set with parity adds parity information to a stripe set configuration. A stripe set with parity dedicates the equivalent of one disk's space in the stripe set with parity for storing the parity strips, but distributes the parity strips across all the disks in the group. The data and parity information are arranged on the volume so that they are always on different disks. </P>
<P CLASS="t">Table 4.2 shows the order in which data are written to a stripe set with parity that consists of five stripes on five disks.</P>
<P CLASS="ttl"><B>Table 4.2    Stripe set with parity</B></P>

<TABLE COLS="6" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="45pt" VALIGN="TOP"><COL WIDTH="62pt" VALIGN="TOP"><COL WIDTH="62pt" VALIGN="TOP"><COL WIDTH="62pt" VALIGN="TOP"><COL WIDTH="62pt" VALIGN="TOP"><COL WIDTH="62pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P CLASS="th"><B></B></P></TD><TD VALIGN="TOP"><P CLASS="th"><B>Disk 1</B></P></TD><TD VALIGN="TOP"><P CLASS="th"><B>Disk 2</B></P></TD><TD VALIGN="TOP"><P CLASS="th"><B>Disk 3</B></P></TD><TD VALIGN="TOP"><P CLASS="th"><B>Disk 4</B></P></TD><TD VALIGN="TOP"><P CLASS="th"><B>Disk 5</B></P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Stripe 1</P></TD><TD VALIGN="TOP"><P CLASS="tt">parity 1</P></TD><TD VALIGN="TOP"><P CLASS="tt">1 </P></TD><TD VALIGN="TOP"><P CLASS="tt">2</P></TD><TD VALIGN="TOP"><P CLASS="tt">3</P></TD><TD VALIGN="TOP"><P CLASS="tt">4</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Stripe 2</P></TD><TD VALIGN="TOP"><P CLASS="tt">5</P></TD><TD VALIGN="TOP"><P CLASS="tt">parity 2</P></TD><TD VALIGN="TOP"><P CLASS="tt">6</P></TD><TD VALIGN="TOP"><P CLASS="tt">7</P></TD><TD VALIGN="TOP"><P CLASS="tt">8</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Stripe 3</P></TD><TD VALIGN="TOP"><P CLASS="tt">9 </P></TD><TD VALIGN="TOP"><P CLASS="tt">10</P></TD><TD VALIGN="TOP"><P CLASS="tt">parity 3</P></TD><TD VALIGN="TOP"><P CLASS="tt">11</P></TD><TD VALIGN="TOP"><P CLASS="tt">12</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Stripe 4</P></TD><TD VALIGN="TOP"><P CLASS="tt">13 </P></TD><TD VALIGN="TOP"><P CLASS="tt">14</P></TD><TD VALIGN="TOP"><P CLASS="tt">15</P></TD><TD VALIGN="TOP"><P CLASS="tt">parity 4</P></TD><TD VALIGN="TOP"><P CLASS="tt">16</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Stripe 5</P></TD><TD VALIGN="TOP"><P CLASS="tt">17 </P></TD><TD VALIGN="TOP"><P CLASS="tt">18</P></TD><TD VALIGN="TOP"><P CLASS="tt">19</P></TD><TD VALIGN="TOP"><P CLASS="tt">20</P></TD><TD VALIGN="TOP"><P CLASS="tt">parity 5</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">In Figure 4.3, the first block on disk 1 is the parity strip for the four data strips in stripe 1. In stripe 2, the parity strip is on disk 2, and so on. Figure 4.3 is another representation of the information shown in Table 4.2.</P>
<P><img src="xsr_e03.gif"></P>
<P CLASS="cap"><B>Figure 4.3.    Stripe set with parity</B></P>
<P CLASS="t">The parity strip is the exclusive OR (XOR) of all the data values for the data strips in the stripe. If no disks in the stripe set with parity have failed, the new parity for a write can be calculated without having to read the corresponding strips from the other data disks. Thus, only two disks are involved in a write operation: the target data disk and the disk that contains the parity strip. The next figure shows the steps that are involved in writing data to a stripe set with parity. </P>
<P><img src="xsr_e04.gif"></P>
<P CLASS="t">When implementing a stripe set with parity, there must be at least three disks and no more than 32 disks in the set. The physical disks do not need to be identical. However, there must be equal size blocks of unpartitioned space available on each physical disk in the set. The disks can be on the same or different controllers. As with stripe sets, you cannot add disks to a stripe set with parity if you need to increase the size of the volume later.</P>
<P CLASS="t">If one of the disks in a stripe set with parity fails, none of the data are lost. When a read operation requires data from the failed disk, the system reads all of the remaining good data strips in the stripe and the parity strip. Each data strip is subtracted (with XOR) from the parity strip; the order isn't important. The result is the missing data strip. </P>
<P CLASS="t">When the system needs to write a data strip to a disk that has failed, it reads the other data strips and the parity strip and backs them out of the parity strip, leaving the missing data strip. The modifications needed to the parity strip can now be calculated and made. Because the data strip is bad, it is not written; only the parity strip is written.</P>
<P CLASS="t">There is no effect on a read operation when the disk that failed contains a parity strip. (The parity strip isn't needed for a read, unless there is a failure in a data strip.) When the failed disk contains a parity strip, the system does not compute or write the parity strip when there is a change in a data strip.</P>
<P CLASS="t">A stripe set with parity works well in the following situations</P>
<UL><LI>In large databases where reads occur much more often than writes. Performance degrades as the percentage of write operations increases. Database applications that do random reads work well with the built-in load balancing of a stripe set with parity.</LI><LI>Where a high degree of fault tolerance is required without the expense of a mirror set. A stripe set with parity is several times more efficient with storage than a mirror set when larger numbers of disks are used. The space required for storing the parity information is equivalent to 1/Number of disks, so a 10 disk array uses 1/10 of its capacity for parity information.</LI></UL><P CLASS="t">A stripe set with parity is not well suited for:</P>
<UL><LI>Applications that require high-speed data collection from a process. This type of application requires continuous high-speed disk writes, which do not work well with the asymmetrical I/O balance inherent in stripes set with parity and the extra I/Os required to write the parity strip.</LI><LI>Database applications in which records are continually updated. Financial applications where balances are frequently updated are a typical example.</LI><LI>Applications that require large sequential data transfers. These types of data transfer can prevent effective I/O load balancing.</LI></UL><H4 CLASS="h3"><A NAME="sec0"></A>Advantages of Stripe Sets With Parity</H4><P CLASS="t">Disk read operations can occur simultaneously. All disks in the array can be in use at the same time.</P>
<P CLASS="t">Cost is lower than for a mirror set. The utilization increases as the number of disks in the array increases.</P>
<H4 CLASS="h3"><A NAME="sec1"></A>Disadvantages of Stripe Sets With Parity</H4><P CLASS="t">Neither the system partition or boot partition can be on a stripe set with parity.</P>
<P CLASS="t">Write operations are substantially slower than for a single disk because the software has to read the old data strip, the old parity strip, and compute the new parity strip before writing it.</P>
<P CLASS="t">If a disk that is part of a stripe set with parity fails, read operations for data strips on that disk are substantially slower than for a single disk. The software has to read all of the other disks in the set to calculate the data.</P>
<P CLASS="t">A stripe set with parity requires more system memory than a mirror set.</P>
<P CLASS="t"><B>Note</B></P>
<P>The minimum RAM on a RISC-based computer is 16&nbsp;MB. On an x86-based computer, 12&nbsp;MB suffices, but 16&nbsp;MB is recommended. You might want to add memory when you configure disks as stripe set with parity. </P></BODY></HTML>
