<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Boot Block Configuration Files</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css"><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"></HEAD><BODY BGCOLOR="#FFFFFF">
<H3 CLASS="h2">Boot Block Configuration Files</H3><P CLASS="t">The boot block configuration file specifies the contents of the boot block sent to the client by the Remoteboot service and is designated by the .cnf extension. The boot block normally includes the Rplboot.sys, Rplstart.com, and Rpldisk.sys files and the real-mode network drivers. The boot block also contains some client-specific data (a copy of the workstation record from the remoteboot database) and some profile-specific data (the .fit file associated with the profile used).</P>
<P CLASS="t">A line in a .cnf file typically has three fields:</P>
<UL><LI>Type</LI><LI>Filename (path is relative to the <I>&lt;systemroot&gt;</I>\Rpl directory)</LI><LI>Parameter(s)</LI></UL><P CLASS="t">All valid types are listed next, along with their expected filenames and parameters.</P>
<P CLASS="t">Fields in .cnf files are separated with white space. Spaces within a field are represented with a tilde (~). The maximum line length is 512 characters. A comment line has a semicolon (;) as the first non-space character.</P>
<P CLASS="t"><B>Note</B></P>
<P>The DRV and EXE types of boot block configuration files must be specified in the reverse order in which they would normally occur in a Config.sys file. For example, if ABC.DRV must appear before DEF.EXE in Config.sys, DEF.EXE must appear before ABC.DRV in the .cnf file.</P>
<H4 CLASS="h3"><A NAME="sec0"></A>RPL Type</H4><P CLASS="t">The filename specified with the RPL type is the initialization program that runs on a client. There must be exactly one RPL type in a .cnf file. The initialization program is normally Rplboot.sys.</P>
<H4 CLASS="h3"><A NAME="sec1"></A>BASE Type</H4><P CLASS="t">The value specified with the BASE type is a hexadecimal segment number that identifies the base address of the boot block. There can be only one BASE type in a .cnf file. If none is specified, <B>00C0h</B> is used as the default base address.</P>
<H4 CLASS="h3"><A NAME="sec2"></A>DAT Type</H4><P CLASS="t">Files listed with the DAT type specify data files that should be stored on the boot block. The filename is relative to <I>&lt;systemroot&gt;</I>\Rpl.</P>
<H4 CLASS="h3"><A NAME="sec3"></A>LDR Type</H4><P CLASS="t">The filename and parameters listed with the LDR type specify which loader to use on the client. The loader is the program that Rplboot.sys will pass control to; there can be only one LDR keyword. The loader is normally Rplstart.com.</P>
<H4 CLASS="h3"><A NAME="sec4"></A>DRV Type</H4><P CLASS="t">The filename and parameters listed with the DRV type specify the device drivers used to form the boot block. The filename field specifies the name of the device driver. The DRV type has three parameter fields:</P>
<UL><LI>The first field specifies parameters used by the device driver.</LI><LI>The second field specifies any additional memory used by the device driver (in decimal kilobytes).</LI><LI>The third field is <B>M</B> if the device driver can be moved in memory to reuse space that it doesn't need; it is <B>~</B> if the device driver cannot be moved.</LI></UL><P>If the driver can be moved after initialization and its memory requirements are less than for the original driver image, Rplboot.sys moves the driver to reclaim some of the unused memory and adjusts all interrupt vectors that point into the driver's memory area. Some drivers cannot be moved because they record segment addresses that are correct during initialization but not after the driver has been moved.</P>
<H4 CLASS="h3"><A NAME="sec5"></A>EXE Type</H4><P CLASS="t">Files listed with the EXE type specify executables (.exe and .com files) that are run during the boot process. The filename is the name of the executable, and the parameters field specifies arguments passed to the executable. EXE lines must be specified in reverse order—that is, the last one listed in the boot block configuration file will be the first one executed.</P></BODY></HTML>
