<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How CGI Applications Operate</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css"><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"></HEAD><BODY BGCOLOR="#FFFFFF">
<H2 CLASS="h2">How CGI Applications Operate</H2><P CLASS="t">CGI applications are compiled as stand-alone executables. When these executables run, Windows&nbsp;NT creates a new, separate process for every client request handled by the application, even if a single client submits more than one request. At any given time, the server is supporting a separate process for every ongoing request. When a request is complete, the server must perform a series of steps to delete the process.</P>
<P CLASS="t">CGI was created for a UNIX environment where processes are the basic unit of operation and have less overhead than processes in Windows&nbsp;NT. In Windows&nbsp;NT, where threads are the basic unit of operation, processes have substantial overhead. Each process receives a private physical memory allocation, is granted space in the paged and nonpaged memory pools, and is protected by the features of the Windows&nbsp;NT security model. In fact, every attribute that makes processes in Windows&nbsp;NT robust also makes them costly. Because CGI requests each executable to run in a separate process, CGI applications have much higher overhead than the alternative, ISAPI extensions.</P></BODY></HTML>
