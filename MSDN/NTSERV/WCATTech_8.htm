<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Web Capacity Analysis Tool Client</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<h3><i>Web Capacity Analysis Tool Client</i></h3>
The Web Capacity Analysis Tool client is simple, extendible, and fast. The client program runs in a single, multithreaded process. The client program connects to the controller, receives the jobs to be executed, executes commands and returns results. At the end of the run, the clients submit the results of the run (statistics) to the controller. 
One common approach to Web server testing is to use one process per client. This approach is costly to control, monitor, and execute on client computers. To avoid this overhead, the Web Capacity Analysis Tool uses multiple threads in one client process per computer. This simplifies control because the controller has to talk to just one process on each client computer. In addition, being multithreaded increases speed of execution and eases summarization of results for each client machine. 
Figure 3, below, depicts the communication between the Web Capacity Analysis Tool Client and Controller programs.

<P>
<IMG SRC="wcatcontroller.gif"><P>
<b>         Figure 3. Web Capacity Analysis Tool Client</b></code>
<h4></h4>

</FONT>
</BODY>
</HTML>
