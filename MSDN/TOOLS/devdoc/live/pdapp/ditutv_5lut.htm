<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The DIALOGS.H File</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_tools_the_dialogs.h_file"></a>The DIALOGS.H File</h2>
<p>
If you define symbolic names in your dialogs, the Dialog Editor writes them to a .H file.</p>
<p>
When you create a dialog control, it gets an ID number. You can also assign a symbolic name to the control, and can refer to the control by name or number in your code. The .H file associates symbolic names with corresponding ID numbers.</p>
<p>
A typical .H file looks like this:</p>
<pre><code>#define MYOPTION1  101
#define MYOPTION2  102
 </code></pre>
<p>
You can then refer to controls in this way:</p>
<pre><code>LRESULT CALLBACK FirstDlgProc(HWND hDlg, UINT wMessage, WPARAM wParam, LPARAM lParam)
{
 .
 .
 .
case WM_COMMAND: 
   switch (LOWORD(wParam))
   {
      case IDOK :
         // Respond to Ok button here 
         break; 
      case IDCANCEL :
         // Respond to Cancel button here 
         break;
      case MYOPTION1:
         // Respond to MyOption1 button here 
         break;
      case MYOPTION2:
         // Respond to MyOption2 button here 
         break;
 .
 .
 .
   } 
}
</code></pre>
<p>
Remember that IDOK and IDCANCEL are defined by the system and should be used for the <b>OK</b> and <b>Cancel</b> buttons in your dialog box.</p>
<p>&nbsp;</p></body>
</HTML>
