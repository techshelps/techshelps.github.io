<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Adding Custom Controls</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_tools_adding_custom_controls"></a>Adding Custom Controls</h2>
<p>
When a standard control — such as a list box or edit field — doesn't meet your needs, you can create a custom control that performs a specific task. For example, the buttons on a toolbar can be custom controls.</p>
<p>
The code that defines a custom control resides in either a DLL or, occasionally, in the .EXE file that calls the dialog box. The Dialog Editor supports custom-control DLLs and temporary custom controls, as described in the following table:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=24%>Custom Control</th>
<th align=left width=76%>Description</th>
</tr>
<tr valign=top>
<td width=24%>DLL</td>
<td width=76%>A dynamic-link library (DLL) that defines one or more custom control classes.</td>
</tr>
<tr valign=top>
<td width=24%>Temporary</td>
<td width=76%>A place holder for a custom control defined elsewhere. The Dialog Editor creates a gray rectangle to indicate the control's location and size. You can set the temporary control's class name, size, and other attributes to match the ones used by the final custom control.</td>
</tr>
</table><br>
<p>
After a custom-control DLL is opened by the Dialog Editor, it remains available between Dialog Editor sessions. Temporary custom controls are not saved between sessions.</p>
<p>
When the Dialog Editor opens a .DLG file that contains a custom control, it searches its list of custom-control DLLs to find a match. If a match is found (the controls have the same class name), the Dialog Editor uses the information in the DLL to display the custom control. If a match is not found, the Dialog Editor creates a temporary custom control with the given class name.</p>
<p>
The Dialog Editor replaces any temporary custom control during an editing session when you open a DLL custom control with the same name.</p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To add a new temporary custom control</h5>
<ol>
<li>
From the <b>File</b> menu, click <b>New</b> <b>Custom</b>. The <b>New</b> <b>Temporary</b> <b>Custom</b> <b>Control</b> dialog box appears.</li>
<li>
Type a name for the custom control in the <b>Class</b> <b>Name</b> edit field.</li>
<li>
Optionally, change the other <b>Control</b> <b>Defaults</b>.</li>
<li>
Choose <b>OK</b>.</li>
</ol>
<p>
The Dialog Editor adds the temporary control to the list of available custom controls. To use the temporary control, click the custom control tool. You can use the following method to add either a temporary custom control or a custom control DLL to a dialog box:</p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To add a custom control</h5>
<ol>
<li>
Click the Custom Control (bottom right) tool on the toolbox.<p>
If you have more than one custom control installed (either temporary or from DLLs), the <b>Select</b> <b>Custom</b> <b>Control</b> dialog box is displayed. If you only have one custom control, skip to Step 6.
</li>
<li>
From the <b>Available</b> <b>Controls</b> list box, select the custom control you want to add to the dialog box.</li>
<li>
Choose <b>OK</b>.</li>
<li>
Move the cursor into the dialog. A rectangle with the "move" icon inside replaces the cursor.</li>
<li>
Press and hold the mouse button to see an outline of the control. The coordinates for the location of the control are displayed in the properties bar.<p>
You cannot move the outlined control outside of the dialog once you have pressed the mouse button.
</li>
<li>
Drop the control by releasing the mouse button. The custom control is centered over the point where you released the mouse button.</li>
</ol>
<p>&nbsp;</p></body>
</HTML>
