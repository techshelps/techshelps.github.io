<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the Editor for Existing Projects</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_tools_using_the_editor_for_existing_projects"></a>Using the Editor for Existing Projects</h2>
<p>
If you begin using the Dialog Editor in an existing project, you may initially find the structure of the project awkward. The project's dialogs may have been written by hand, and the resulting resource script statements may be in an .RC file along with all the other resources for the application. The project's dialog symbols may be in an .H file along with numerous other of the application's symbols. If you don't restructure the project, you'll have to merge files by hand each time you create a dialog.</p>
<p>
The easiest way to proceed is to read the application's .RES file with the Dialog Editor by loading it into the editor and at the same time retrieve the dialog symbols by opening the appropriate .H file. You can then save all the dialog information in the Dialog Editor's own dedicated .RES, .DLG, and .H files.</p>
<p>
If you save the dialogs under the name DIALOGS, you can then use DIALOGS.DLG as a guide for removing the appropriate resource script statements from the .RC file and substituting a DIALOGS.DLG include statement. In the same way, remove the dialog symbols from the original .H file and include DIALOGS.H in your application and .RC file.</p>
<p>
You could continue to let the dialog symbols reside in the original .H file by clicking <b>Set</b> <b>Include</b> on the <b>File</b> menu to associate that file with the dialogs. However, it will be easier for you if you take the time to put the dialog symbols in their own file. Then if you later want to archive the dialogs, examine the dialog files, or move the dialogs to another environment, all the information will be readily available to you.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
