<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using WDEB386</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win95_using_wdeb386"></a>Using WDEB386</h1>
<p>
Before you start WDEB386, you must prepare for debugging by doing the following:
<ul>
<li>
Connect a serial terminal or other computer to the serial port on your debugging computer.</li>
<li>
Create symbols files for the application, DLL, or VxD you intend to debug. See <a href="dbgutil_1rxp.htm">Using MAPSYM</a>. </li>
<li>
Install the debugging versions of the system DLLs and VxDs. These files are available in the Windows 95 Device Driver Development Kit (DDK).</li>
</ul>
<p>
The following is the command-line syntax for WDEB386:</p>
<pre><code><b>wdeb386</b> [<b>/A</b>] [<b>/B</b>] [<b>/C</b>:<i>comport</i>] [<b>/D</b>:"<i>commands"</i>] [<b>/E</b>] [<b>/F</b>:<i>filename</i>] [<b>/H</b>] [<b>/I</b>] [<b>/L</b>] [<b>/N</b>] [<b>/R</b>:<i>dddd</i>] [<b>/T</b>:<i>hhhh</i>] [<b>/S</b>:<i>symfile</i>] [<b>/V</b>[<b>P</b>]] [<b>/X</b>] <i>winfile</i> [<i>parameters</i>]
 </code></pre>
<dl>
<dt>
<b>/A</b></dt>
<dd>
Specifies that symbol files should not be automatically loaded.</dd>
<dt>
<b>/B</b></dt>
<dd>
Specifies that the debugger should stop just prior to VMM initialization, after all virtual devices have been loaded and the processor is running in protected mode.</dd>
<dt>
<b>/C</b>:<i>comport</i></dt>
<dd>
Specifies a COM port for debugger output. You can specify "1", "2", "3", or "4" for comport. If this option is not specified, The debugger checks first for COM2. If COM2 is not found, the debugger then checks for COM1. If neither COM1 nor COM2 exists, the debugger checks for any other COM port in the read-only memory (ROM) data area (40:0).</dd>
<dt>
<b>/D</b>:"<i>commands</i>"</dt>
<dd>
Carries out the debugger command line specified by the string enclosed in quotation marks after symbols are loaded. Spaces, semicolons (;), and other punctuation can be included in the command string. To use a single quote (') on the command line, use double quotation marks (") before and after the single quotation mark. </dd>
<dt>
<b>/E</b></dt>
<dd>
Specifies that the debugger should stop at real-mode entry.</dd>
<dt>
<b>/F</b>: <i>filename</i></dt>
<dd>
Specifies a file containing command-line options for the debugger. Maximum file size is 4K, and the input file cannot contain the <b>/F</b> option. </dd>
<dt>
<b>/H</b></dt>
<dd>
Specifies that the debugger should be loaded as a VxD.</dd>
<dt>
<b>/I</b></dt>
<dd>
Specifies that the debugger should be invisible to int 41.</dd>
<dt>
<b>/L</b></dt>
<dd>
Specifies that line numbers should not be included in the .SYM file. This can make a large difference in memory use, and may be required on a machine with 4 megabytes of RAM.</dd>
<dt>
<b>/N</b></dt>
<dd>
Sets the following options: 
<p>
<b>dislwrcodebytessymaddrsint3linenewvecnewregnewprompt</b>

<p>
For more information on these options, see the <b>y</b> command.
</dd>
<dt>
<b>/R</b>:<i>dddd</i></dt>
<dd>
Sets the baud rate for the debugging terminal.</dd>
<dt>
<b>/S</b>: <i>symfile</i></dt>
<dd>
Specifies a symbol file to be loaded. This option can be repeated to load more than one symbol file. If the symbol files are not in your current directory, you must supply a full path, because the debugger does not use the PATH environment variable to locate any of the files supplied on the command line. </dd>
<dt>
<b>/T</b>:<i>hhhh</i></dt>
<dd>
Sets the port number for the timing card. The default is 0250h. </dd>
<dt>
<b>/V</b></dt>
<dd>
Enables verbose mode, which displays messages indicating which segments are being loaded. </dd>
<dt>
<b>/VP</b></dt>
<dd>
Enables verbose mode, which displays messages indicating which application segments are being loaded. </dd>
<dt>
<b>/X</b></dt>
<dd>
Causes symbols to be loaded into Extended Memory Specification (XMS) memory. </dd>
<dt>
<i>winfile</i></dt>
<dd>
Specifies the Windows application to run under debugger control. You will usually specify WIN.COM. </dd>
<dt>
<i>parameters</i></dt>
<dd>
Specifies any parameters to be passed to the application. 
</dd>
</dl>
<p>&nbsp;</p></body>
</HTML>
