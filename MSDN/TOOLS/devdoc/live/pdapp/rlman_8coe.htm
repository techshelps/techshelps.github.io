<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Automating Localization with RLMAN</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_tools_automating_localization_with_rlman"></a>Automating Localization with RLMAN</h1>
<p>
The Resource Localization Manager (RLMAN) was designed to automate localization of products that make use of the Windows resource model. You can extract resources directly from the applications that use them, modify the resources, and use the modified resources to create localized versions of the original applications. This allows you to localize your product without recompilation, and share glossaries of common terms among your applications. </p>
<p>
When resource files are localized as they are developed, they may change after you have already begun translation. RLMAN uses update tracking to allow you to update the localized file without losing any work that you have already done. Any resources that have changed since your most recent update are marked, and the change is tracked so you can see what has changed and exactly how it changed. RLMAN uses a <i>master token file</i> to track changes and update token files for each target language. These token files are used to generate the target resource files. </p>
<p>
The RLMAN command-line syntax is as follows:</p>
<p>
<b>rlman</b> [<b>-c</b> <i>RDFile</i>] [<b>-p</b> <i>CodePage</i>] [<b>-f</b> <i>ResType</i>] [<b>-</b>{<b>n</b>|<b>o</b>} <i>PriLang</i> <i>SubLang</i>] [<b>-w</b>] [<b>-x</b>] <b>-</b>{<b>e</b>|<b>t</b>|<b>m</b>|<b>l</b>|<b>r</b>|<b>a</b>} <i>files</i>
<dl>
<dt>
<b>-c</b> <i>RDFile</i></dt>
<dd>
Use custom resources defined in the resource description file <i>RDFile</i>. </dd>
<dt>
<b>-p</b> <i>CodePage</i></dt>
<dd>
The code page used in the conversion. The default is the Windows ANSI code page.</dd>
<dt>
<b>-f</b> <i>ResType</i></dt>
<dd>
Extract a single resource type, defined by the resource type <i>ResType</i>. </dd>
<dt>
<b>-n </b><i>PriLang SubLang</i></dt>
<dd>
Specifies the language of the tokens in the token file. Used when setting up a new language project (<b>-l</b>) and with the <b>-r</b> and <b>-a</b> switches</dd>
<dt>
<b>-o </b><i>PriLang SubLang</i></dt>
<dd>
Specifies the language of the resources being replaced, or extracted from the resource file.</dd>
<dt>
<b>-w</b></dt>
<dd>
Print warnings about unknown custom resource types.</dd>
<dt>
<b>-x</b></dt>
<dd>
Use the extended token file format. </dd>
<dt>
<b>-e</b> <i>InputExeFile OutputResFile</i></dt>
<dd>
Extract resources from the source file (.EXE, .DLL, .CPL, and so forth) <i>InputExeFile</i>, and create a resource file <i>OutputResFile</i>. </dd>
<dt>
<b>-t</b> <i>InputResOrExeFile OutputTokenFile</i></dt>
<dd>
Extract the resources from <i>InputResOrExeFile</i> and create a project token file <i>OutputTokenFile</i>. This option circumvents the history-keeping mechanism. It is intended to simply view the resources or for one-time localization. </dd>
<dt>
<b>-m</b> <i>MasterProjectFile</i> [<i>InputResOrExeFile MasterTokenFile</i>]</dt>
<dd>
If the <i>MasterProjectFile</i> does not exist, <i>InputResOrExeFile</i> and <i>MasterTokenFile</i> must be provided. </dd>
<dt>
<b>-l</b> <i>LanguageProjectFile</i> [<i>MasterProjectFile LanguageTokenFile</i>]</dt>
<dd>
Create a new localization project or update an existing one. If <i>LanguageProjectFile</i> does not exist, you must provide the <i>MasterProjectFIle</i> (created with <b>-m</b>) and <i>LanguageTokenFile</i>. </dd>
<dt>
<b>-r</b> <i>InputResOrExeFile</i> <i>LanguageTokenFileOrResFile OutputResOrExeFile</i></dt>
<dd>
The resources in <i>InputResOrExeFile</i> are replaced with the localized resource in <i>LanguageTokenFileOrResFile</i>. <i>OutputResOrExeFile</i> is the localized version. If <i>LanguageTokenFileOrResFile</i> is a token file, use <b>-o</b> to specify the old language and <b>-n</b> to specify the new language.</dd>
<dt>
<b>-a</b> <i>InputResOrExeFile</i> <i>LanguageTokenFileOrResFile OutputResOrExeFile</i></dt>
<dd>
The resource in the resulting <i>OutputResOrExeFile</i> includes the original resource from <i>InputResOrExeFile</i>, plus the localized resources in <i>LanguageTokenFileOrResFile</i>. If <i>LanguageTokenFileOrResFile</i> is a token file, use <b>-n</b> to specify the new language. 
</dd>
</dl>
<p>
For more information, see the help file RLMAN.HLP included with the Resource Localization Manager. </p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
