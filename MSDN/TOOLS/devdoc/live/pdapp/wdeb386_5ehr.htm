<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>t (Trace)</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win95_t_trace_"></a>t (Trace)</h1>
<pre><code><b>t</b>[<b>a</b>|<b>c</b>|<b>n</b>|<b>s</b>|<b>x</b>|<b>z</b>][<b>=</b><i>start</i>_<i>addr</i>][<i>count</i>][<i>addr</i>]
 </code></pre>
<p>
The <b>t</b> command executes one or more instructions along with the default command string and then displays the decoded instruction. If you include the <i>start</i>_<i>addr</i> parameter, tracing starts at the specified address. Otherwise, the command steps through the next machine instruction and then executes the default command string. The <b>t</b> command uses the hardware trace mode of the Intel microprocessor. Consequently, you can also trace instructions stored in read-only memory (ROM). 
<dl>
<dt>
<b>a</b></dt>
<dd>
Indicates that an ending address is specified for the trace. Instructions are traced until the address in <i>addr</i> is reached. </dd>
<dt>
<b>c</b></dt>
<dd>
Suppresses all output and counts instructions traced. An ending address is required for this command. Instructions are traced until the address in <i>addr</i> is reached. </dd>
<dt>
<b>n</b></dt>
<dd>
Suppresses the register display so just the assembly line is displayed. This works only if the default command, <b>zd</b>, is set to r (the normal setting). </dd>
<dt>
<b>s</b></dt>
<dd>
Suppresses output; the instruction and count are displayed for each call and the return from that call. </dd>
<dt>
<b>x</b></dt>
<dd>
Forces the debugger to trace regions of code known to be untraceable (_PGSwitchContext, for example). </dd>
<dt>
z</dt>
<dd>
Allows original trap handler address to be traced into without having to unhook the exception. Use this option instead of <b>vcp</b> <b>d</b>; <b>t</b>; <b>vsp</b> <b>d</b>. </dd>
<dt>
<i>start</i>_<i>addr</i></dt>
<dd>
Specifies the instruction address at which to start tracing. The equal sign (<b>=</b>) is required. </dd>
<dt>
<i>count</i></dt>
<dd>
Specifies the number of instructions to execute and trace. </dd>
<dt>
<i>addr</i></dt>
<dd>
Specifies the instruction address at which to stop tracing. 
</dd>
</dl>
<p>
The following command causes the debugger to execute 16 (10h) instructions beginning at 011A in the current selector: </p>
<p>
t=011A 10</p>
<p>
The debugger executes and displays the results of the default command string for each instruction. The display is scrolled until the last instruction is executed. Press the CTRL+S key combination to stop the scrolling and CTRL+Q to resume. </p>
<p>&nbsp;</p></body>
</HTML>
