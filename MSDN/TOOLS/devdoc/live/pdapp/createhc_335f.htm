<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Macros in Project Files</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_tools_using_macros_in_project_files"></a>Using Macros in Project Files</h3>
<p>
You can add macros to the [MACROS] section of a project file. These macros are run whenever a user selects the specified keyword in the index.</p>
<p>
You can create new menu items and buttons for Windows Help by using such macros as <b>CreateButton</b> and <b>InsertMenu</b>. These macros define other help macros and associate them with the menu items and buttons. Windows Help executes these macros when the user chooses a corresponding menu item or button. Macros that create help buttons, menus, or menu items remain in effect until the user quits Windows Help or opens a new help file.</p>
<p>
You can extend the capabilities of Windows Help by developing your own dynamic-link libraries (DLLs) and defining help macros that call functions in the libraries. To define help macros that call DLL functions, you must register each function and its corresponding library by using the <b>RegisterRoutine</b> macro in the [CONFIG] section of the project file.</p>
<p>&nbsp;</p></body>
</HTML>
