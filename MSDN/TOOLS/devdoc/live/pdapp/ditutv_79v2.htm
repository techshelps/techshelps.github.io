<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Including Dialogs in an Application</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_tools_including_dialogs_in_an_application"></a>Including Dialogs in an Application</h1>
<p>
When you save a dialog or dialogs, the editor normally creates three files:
<ul>
<li>
The .RES (resource) file, a resource file dedicated to the Dialog Editor. This .RES file is read only by the Dialog Editor and is not the same as the .RES file that is produced by the Resource Compiler and linked into your application.</li>
<li>
The .DLG (dialog) script, a text file containing <a href="rc_576t.htm"><b>DIALOG</b></a> and <a href="rc_4td8.htm"><b>CONTROL</b></a> statements that the Resource Compiler interprets.</li>
<li>
The .H (include) file, a text file containing <a href="rc_1p7p.htm"><b>#define</b></a> statements associated with the symbolic names of controls in dialogs. (If you haven't defined any symbolic names in your dialogs, the editor won't create an .H file.) </li>
</ul>
<p>
The .DLG and .H files are used to integrate the current dialogs into your application.</p>
<p>
By default, the editor uses the same base name for all three files. Thus, if you use the editor's suggested default name of DIALOGS, the editor writes DIALOGS.RES, DIALOGS.DLG, and DIALOGS.H.</p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To include dialogs in your application</h5>
<ol>
<li>
Use <a href="rc_80yt.htm"><b>#include</b></a> statements to include DIALOGS.H and DIALOGS.DLG in your application's resource script (.RC) file. Place the DIALOGS.H statement before the DIALOGS.DLG statement.<pre><code>#include "dialogs.h"
#include "dialogs.dlg"
 </code></pre>
</li>
<li>
Include DIALOGS.H in your source code.</li>
<li>
Write a dialog procedure for each dialog to initialize controls and process their messages. </li>
<li>
Compile your source code.</li>
<li>
Use the Resource Compiler to compile the .RC file into the application's .RES file.</li>
<li>
Link the .RES file into your application's .EXE file.</li>
</ol>
<p>&nbsp;</p></body>
</HTML>
