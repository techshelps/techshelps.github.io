<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Setting Breakpoints with Symbols</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_tools_setting_breakpoints_with_symbols"></a>Setting Breakpoints with Symbols</h3>
<p>
You can use the <a href="mipsntsd_9j33.htm"><b>bp</b></a> command and symbols to set breakpoints in your application code. The <b>bp</b> command uses symbolic names to compute the breakpoint address. For example, for a character mode application, the command</p>
<pre><code>bp main
 </code></pre>
<p>
sets a breakpoint at the application's <b>main</b> function. For a Windows-based application, the command</p>
<pre><code>bp winmain
 </code></pre>
<p>
sets a breakpoint at the application's <b>WinMain</b> function. </p>
<p>
On MIPS platforms, the breakpoint is automatically set after the prolog.</p>
<p>
The "KB" stack trace uses the stack frame to determine which function is executing. Since the stack frame is set up by the first two instructions, you should step a minimum of two assembly-language instructions into a procedure to get an accurate stack trace.</p>
<p>
A stack trace after an access violation in a window procedure may be uninformative, since the window procedure is called via a function pointer. If you place a breakpoint in the offending function, you will get a better stack trace.</p>
<p>
KD supports virtual breakpoints. If an application has not been loaded, KD sets a virtual breakpoint. A virtual breakpoint has no effect on execution until the application is actually loaded. Once an application is loaded, KD computes the actual coded addresses of all virtual breakpoints and enables them.</p>
<p>&nbsp;</p></body>
</HTML>
