<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Symbolic Debugger Quick Reference</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_tools_symbolic_debugger_quick_reference"></a>Symbolic Debugger Quick Reference</h2>
<p>
The following table lists the command syntax for NTSD and KD debugging commands:</p>
<p>
<b>NTSD and KD Debugging Commands</b></p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=50%>Syntax</th>
<th align=left width=50%>Meaning</th>
</tr>
<tr valign=top>
<td width=50%>enter</td>
<td width=50%>Repeat last command</td>
</tr>
<tr valign=top>
<td width=50%>| [. | # | * | <i>process-id</i>]</td>
<td width=50%>Process status</td>
</tr>
<tr valign=top>
<td width=50%>~ [. | # | * | ddd]</td>
<td width=50%>Thread status</td>
</tr>
<tr valign=top>
<td width=50%># <i>pattern address=expression</i></td>
<td width=50%>Search for dissassembly pattern</td>
</tr>
<tr valign=top>
<td width=50%><b>?</b></td>
<td width=50%>Display debugger help</td>
</tr>
<tr valign=top>
<td width=50%><b>?</b> <i>expression</i></td>
<td width=50%>Compute and display <i>expression</i></td>
</tr>
<tr valign=top>
<td width=50%><b>$&lt;</b> <i>filename</i></td>
<td width=50%>Redirect input from <i>filename</i></td>
</tr>
<tr valign=top>
<td width=50%><b>a</b> [<i>address</i>]</td>
<td width=50%>Assemble instruction mnemonics</td>
</tr>
<tr valign=top>
<td width=50%>~<b> </b>[[<i>threadspec</i>]] <b>ba </b>[[<i>io</i>]] <i>option</i> <i>size</i> <i>address</i> [[<i>value</i>]] [[<i>cmd-string</i>]]</td>
<td width=50%>Set address breakpoint (KD only — not implemented on MIPS or PowerPC)</td>
</tr>
<tr valign=top>
<td width=50%><b>bc </b>[[<i>id-list</i>]]</td>
<td width=50%>Clear breakpoint(s)</td>
</tr>
<tr valign=top>
<td width=50%><b>bd </b>[[<i>id-list</i>]]</td>
<td width=50%>Disable breakpoint(s)</td>
</tr>
<tr valign=top>
<td width=50%><b>be </b>[[<i>id-list</i>]]</td>
<td width=50%>Enable breakpoint(s)</td>
</tr>
<tr valign=top>
<td width=50%><b>bl</b></td>
<td width=50%>List breakpoint(s)</td>
</tr>
<tr valign=top>
<td width=50%><b>~ </b>[[. | # | ddd | *]] [[<i>threadspec</i>]] <b>bp </b>[[<i>id</i>]] <i>address</i> [[<i>value</i>]] [[<i>command-string</i>]]</td>
<td width=50%>Set breakpoints</td>
</tr>
<tr valign=top>
<td width=50%><b>c </b>[[ <i>range</i>]] <i>address</i></td>
<td width=50%>Compare</td>
</tr>
<tr valign=top>
<td width=50%><b>d </b>[[<i>range</i>]]</td>
<td width=50%>Dump memory using previous type</td>
</tr>
<tr valign=top>
<td width=50%><b>da </b>[[<i>range</i>]]</td>
<td width=50%>Dump memory ASCII</td>
</tr>
<tr valign=top>
<td width=50%><b>db </b>[[<i>range</i>]]</td>
<td width=50%>Dump memory bytes</td>
</tr>
<tr valign=top>
<td width=50%><b>dd </b>[[<i>range</i>]]</td>
<td width=50%>Dump memory double-words</td>
</tr>
<tr valign=top>
<td width=50%><b>dw </b>[[<i>range</i>]]</td>
<td width=50%>Dump memory words</td>
</tr>
<tr valign=top>
<td width=50%><b>e </b><i>address</i> [[<i>list</i>]]</td>
<td width=50%>Enter using previous type</td>
</tr>
<tr valign=top>
<td width=50%><b>ea </b><i>address</i> [[<i>list</i>]]</td>
<td width=50%>Enter ASCII</td>
</tr>
<tr valign=top>
<td width=50%><b>eb </b><i>address</i> [[<i>list</i>]]</td>
<td width=50%>Enter bytes</td>
</tr>
<tr valign=top>
<td width=50%><b>ed </b><i>address</i> [[<i>list</i>]]</td>
<td width=50%>Enter double-words</td>
</tr>
<tr valign=top>
<td width=50%><b>ew </b><i>address</i> [[<i>list</i>]]</td>
<td width=50%>Enter words</td>
</tr>
<tr valign=top>
<td width=50%><b>f </b><i>range list</i> </td>
<td width=50%>Fill range</td>
</tr>
<tr valign=top>
<td width=50%><b>~ </b>[[. | # | * | ddd]] f</td>
<td width=50%>Freeze thread</td>
</tr>
<tr valign=top>
<td width=50%><b>g</b>, <b>gh</b>, and <b>gn</b></td>
<td width=50%>Go commands</td>
</tr>
<tr valign=top>
<td width=50%><b>i </b>[[b | w | d]] <i>address</i></td>
<td width=50%>Input from port at <i>address</i> (KD only)</td>
</tr>
<tr valign=top>
<td width=50%><b>.inputfile </b><i>filename</i></td>
<td width=50%>Read from command file</td>
</tr>
<tr valign=top>
<td width=50%><b>j </b><i>expression</i> [[']]<i>command1</i>[[']] <b>; </b>[[']]<i>command2</i>[[']]</td>
<td width=50%>Conditional execution</td>
</tr>
<tr valign=top>
<td width=50%><b>~ </b>[[<i>threadspec</i>]] <b>k </b>[[<i>value</i>]]</td>
<td width=50%>Backtrace stack</td>
</tr>
<tr valign=top>
<td width=50%><b>ln </b><i>address</i></td>
<td width=50%>Lists first symbols before and after address</td>
</tr>
<tr valign=top>
<td width=50%><b>.logappend </b>[[<i>file</i>]]</td>
<td width=50%>Append to the current log file</td>
</tr>
<tr valign=top>
<td width=50%><b>.logclose</b></td>
<td width=50%>Close the current log file</td>
</tr>
<tr valign=top>
<td width=50%><b>.logopen </b>[[<i>file</i>]]</td>
<td width=50%>Open a log file</td>
</tr>
<tr valign=top>
<td width=50%><b>m </b><i>range address</i></td>
<td width=50%>Move</td>
</tr>
<tr valign=top>
<td width=50%><b>o </b>[[b | w | d]] <i>address value</i></td>
<td width=50%>Output<i> value</i> to port at <i>address</i> (KD only)</td>
</tr>
<tr valign=top>
<td width=50%>[[<b>.</b> | <b>#</b> | <b>*</b> | ddd]] <b>p </b>[[r]] [[<b>=</b> <i>startaddress</i>]] [[<i>repeat</i>]]</td>
<td width=50%>Execute an instruction, then display registers and flags</td>
</tr>
<tr valign=top>
<td width=50%>~ [[<i>threadspec</i>]] <b>p</b> [[= <i>startaddress</i>]] [[<i>value</i>]]</td>
<td width=50%>Trace program instruction or call</td>
</tr>
<tr valign=top>
<td width=50%><b>q</b></td>
<td width=50%>Quit</td>
</tr>
<tr valign=top>
<td width=50%>[[<i>threadspec</i>]] <b>r </b>[[t]] [[<i>register</i>]] [[= [[<i>value</i>]] ]]</td>
<td width=50%>Register set (<b>rt</b> toggles full register display — KD only)</td>
</tr>
<tr valign=top>
<td width=50%>[[<i>threadspec</i>]] <b>rf</b> [[<i>floatregister</i>]] [[= [[<i>value</i>]] ]]</td>
<td width=50%>Register set command for floating-point values</td>
</tr>
<tr valign=top>
<td width=50%><b>.reboot</b></td>
<td width=50%>Restart target computer (KD only — not implemented on MIPS or PowerPC)</td>
</tr>
<tr valign=top>
<td width=50%><b>!reload</b></td>
<td width=50%>Load symbols for all the drivers that have been loaded on the target system.</td>
</tr>
<tr valign=top>
<td width=50%><b>s </b><i>range</i> <b>list</b></td>
<td width=50%>Search <i>range</i> for bytes in <i>list</i></td>
</tr>
<tr valign=top>
<td width=50%><b>ss </b>[[n | a | w]]</td>
<td width=50%>Set suffix to n for none, a for ASCII, or w for wide. With no argument, prints current suffix setting.</td>
</tr>
<tr valign=top>
<td width=50%><b>sx </b>[[e | d]] [[<i>eventcode</i> | <i>exceptnum</i>]]</td>
<td width=50%>Set exceptions (NTSD only)</td>
</tr>
<tr valign=top>
<td width=50%><b>s+</b></td>
<td width=50%>Set source display only</td>
</tr>
<tr valign=top>
<td width=50%><b>s&amp;</b></td>
<td width=50%>Set mixed assembler and source display mode</td>
</tr>
<tr valign=top>
<td width=50%><b>s –</b> </td>
<td width=50%>Set assembler display only </td>
</tr>
<tr valign=top>
<td width=50%>| [[. | # | <i>process-id</i>]] s</td>
<td width=50%>Set process</td>
</tr>
<tr valign=top>
<td width=50%><b>~ </b>[[. | # | ddd]] s</td>
<td width=50%>Set thread</td>
</tr>
<tr valign=top>
<td width=50%><b>t </b>[[r]] [[= <i>startaddress</i>]] [[<i>repeat</i>]]</td>
<td width=50%>Trace program instruction </td>
</tr>
<tr valign=top>
<td width=50%><b>~ </b>[[. | # | * | ddd]] <b>p </b>[[t]] [[= <i>startaddress</i>]] [[<i>repeat</i>]]</td>
<td width=50%>Trace thread</td>
</tr>
<tr valign=top>
<td width=50%><b>u </b>[[<i>range</i>]]</td>
<td width=50%>Display unassembled instructions</td>
</tr>
<tr valign=top>
<td width=50%><b>~ </b>[[. | # | * | ddd]] <b>u</b></td>
<td width=50%>Unfreeze thread</td>
</tr>
<tr valign=top>
<td width=50%><b>v </b><i>range</i></td>
<td width=50%>View source lines</td>
</tr>
<tr valign=top>
<td width=50%><b>x </b><i>symbol</i></td>
<td width=50%>Examine symbol(s)</td>
</tr>
</table><br>
<p>&nbsp;</p></body>
</HTML>
