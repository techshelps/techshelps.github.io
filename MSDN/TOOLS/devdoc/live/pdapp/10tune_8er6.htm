<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIOSAP Profiler</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_tools_fiosap_profiler"></a>FIOSAP Profiler</h1>
<p>
Suppose you have used Performance Monitor and determined that the disk is a bottleneck that is adversely affecting the performance of your application, Zapdata. None of the tools we've discussed so far will be of much help.</p>
<p>
The File I/O and Synchronization Win32 API Profiler (FIOSAP) is designed to profile applications that might have multiple concurrent threads. The file I/O and synchronization functions are contained in KERNEL32.DLL. The profiler is in the form of a single FERNEL32.DLL, to be used with KERNEL32 DLL. This DLL sits between your application and KERNEL32.DLL, intercepts file I/O and synchronization function calls to KERNEL32.DLL, and then makes and times a call to the actual function. It also collects useful statistics about the overall file, event, mutex, and semaphore activity of the application. This tool is available in the Platform SDK.</p>
<p>
FERNEL32.DLL reports the number of operations, the total time, and average time in each operation, as well as the additional statistics for some of these operations. The following list shows exactly what additional operations are measured. Times are expressed in microseconds.
<ul>
<li>
Statistics summed over all operations on all files</li>
<li>
Open file operations</li>
<li>
Create file operations</li>
<li>
Write file operations<ul>
<li>
Total number of bytes written</li>
<li>
Average number of bytes written per operation</li>
<li>
Standard deviation of the number of bytes written per operation</li>
</ul>
</li>
<li>
Read file operations<ul>
<li>
Total number of bytes read</li>
<li>
Average number of bytes read per operation</li>
<li>
Standard deviation of the number of bytes read per operation</li>
</ul>
</li>
<li>
Flush file buffers operations</li>
<li>
Set file pointer operations</li>
<li>
Get file information operations</li>
<li>
Lock and unlock file operations<ul>
<li>
Total number of bytes locked</li>
<li>
Average number of bytes locked</li>
<li>
Standard deviation of the number of bytes locked</li>
</ul>
</li>
<li>
Set end-of-file operations</li>
<li>
Close file operations</li>
</ul>
<p>
The profiling DLL also records the following information for each synchronization handle that the process uses:
<ul>
<li>
Statistics summed over all operations on all semaphores, all events, and all mutexes</li>
<li>
Open operations</li>
<li>
Create operations</li>
<li>
Release operations (only for mutex and semaphore objects)</li>
<li>
Set event operations (only for event objects)</li>
<li>
Reset event operations (only for event objects)</li>
<li>
Pulse event operations (only for event objects)</li>
<li>
Wait operations (the statistics are kept separately for Single, Multiple-All, and Multiple-Any Wait operations)</li>
<li>
Close file operations</li>
</ul>
<p>
To profile a list of applications with FIOSAP, type:</p>
<p>
<b>apf32cvt</b> fernel32 <i>&lt;app list&gt;</i></p>
<p>
where <i>&lt;app list&gt;</i> is a list of one or more names of the executable applications or DLLs that are to be profiled during the profiling run. Note that <i>&lt;app list&gt;</i> must be the last argument to APF32CVT. For the Zapdata application we are looking at in this example, we type:</p>
<p>
<b>apf32cvt</b> fernel32 zapdata.exe</p>
<p>
The following output shows part of the results of the run of FIOSAP on Zapdata for file statistics:</p>
<pre><code>---------------------------------------------------------------------
File: E:\wimblton.dat
----------+---------+----------+---------+---------+--------+--------
Operation |  Total  |Number of | Average |  Total  |  Mean  | Std Dev
   Name   |   Time  |operations|   Time  |  Bytes  | Bytes  |  Bytes 
----------+---------+----------+---------+---------+--------+--------
Overall   |   972726|        21|    46320|        -|       -|        
Create    |     1578|         1|     1578|        -|       -|        
Read      |   970334|        18|    53907|  1170432|   65024|        
Info      |      348|         1|      348|        -|       -|        
Close     |      466|         1|      466|        -|       -|        

---------------------------------------------------------------------
Statistics for all file activity  (Number of files used: 6)
----------+---------+----------+---------+---------+--------+--------
Operation |  Total  |Number of | Average |  Total  |  Mean  | Std Dev
   Name   |   Time  |operations|   Time  |  Bytes  | Bytes  |  Bytes 
----------+---------+----------+---------+---------+--------+--------
Overall   | 23965469|       375|    63907|        -|       -|        
Create    |    94046|         6|    15674|        -|       -|        
Read      | 17244253|       180|    95801| 11704320|   65024|        
Write     |  6432526|       177|    36341| 11455298|   64719|  762713
Info      |   117536|         6|    19589|        -|       -|        
Close     |    77108|         6|    12851|        -|       -|        
 </code></pre>
<p>
The following output shows part of the results of the run of FIOSAP on Zapdata for event and semaphore statistics:</p>
<pre><code>-------------------------------------------------------
Event:    Type: Auto Reset
----------+---------+----------+---------+-------------
Operation |  Total  |Number of | Average |  Successful 
   Name   |   Time  |operations|   Time  |    Waits    
----------+---------+----------+---------+-------------
Overall   |  9482271|       231|    41048|            -
Create    |      265|         1|      265|            -
Set       |   410876|       129|     3185|            -
Wait      |  9070985|       100|    90709|          100
   Single |  9070985|       100|    90709|          100
Close     |      145|         1|      145|            -

-------------------------------------------------------
Semaphore: Duplicate Semaphore           Max Count: 0
----------+---------+----------+---------+-------------
Operation |  Total  |Number of | Average |  Successful 
   Name   |   Time  |operations|   Time  |    Waits    
----------+---------+----------+---------+-------------
Overall   |    49972|         2|    24986|            -
Close     |    49972|         2|    24986|            -
 </code></pre>
<p>
Data from FIOSAP is written to FERNEL32.END,<i> </i>in the working directory of the application. FIOSAP will write data from concurrent multiple threads to the same data file, and there is no method for separating the data based on threads. However, FIOSAP will write data from concurrent multiple processes to different data files, as long as the profiled concurrent processes have different working directories. If you have two concurrent processes with the same working directory, the data for one of them will be lost.</p>
<p>
You can use this procedure whenever you want to know what your application is waiting for when it is not using the processor.</p>
<p>&nbsp;</p></body>
</HTML>
