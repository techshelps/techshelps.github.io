<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Predefined Macros</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_tools_predefined_macros"></a>Predefined Macros</h3>
<p>
RC does not support the ANSI C predefined macros (__DATE__, __FILE__, __LINE__, __STDC__, __TIME__, __TIMESTAMP__). Therefore, you cannot include these macros in header files that you will include in your resource script. </p>
<p>
RC does define RC_INVOKED, which enables you conditionally compile portions of your header files, depending on whether the compiler is your C compiler or the RC compiler. This is important because the RC compiler supports only a subset of the statements a C compiler would support. </p>
<p>
To conditionally compile your code with the RC compiler, surround code that RC cannot compile with <code>#ifndef RC_INVOKED</code> and <code>#endif</code>. </p>
<p>
The following example is taken from the SDK samples. It demonstrates how to create a header file that can be compiled conditionally. </p>
<pre><code>#ifndef RC_INVOKED
#pragma message("Including CntrOutl.H from " __FILE__)
#endif 
</code></pre>
<p>&nbsp;</p></body>
</HTML>
