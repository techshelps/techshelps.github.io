<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Collecting WST Data</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_tools_collecting_wst_data"></a>Collecting WST Data</h2>
<p>
There are two ways to capture WST data:
<ul>
<li>
Upon termination of the application, WST data is written to text files. </li>
<li>
Using the WSTDUMP utility (WSTDUMP.EXE). You can use this utility to specify which portion of your application's operation is tuned. You can also clear and write WST data at any time.</li>
</ul>
<p>
The data is written into the C:\WST directory, in files with names of the form<i> APPNAME.</i>WSP and <i>APPNAME.</i>TMI<i>. </i>If you write data multiple times, the file extensions from each run will be modified to .W<i>??</i> and .T<i>??</i>, where <i>??</i> is a hexadecimal number between 0x01 and 0xFF. The number indicates the run number.</p>
<p>
You can concatenate multiple .WSP and .TMI files for analysis using the WSTCAT utility. It produces composite .WSP and .TMI files, after renaming the original ones to .WXX and .TXX. The weight of the files in the concatenated result depends on the length of each experiment, or more accurately—because you might have varied the time interval—on the number of snapshots in each. The bits for each function from the multiple files are concatenated.</p>
<p>&nbsp;</p></body>
</HTML>
