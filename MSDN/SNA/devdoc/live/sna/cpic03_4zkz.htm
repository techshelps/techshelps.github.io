<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Extract_Conversation_Security_Type</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_sna_extract_conversation_security_type_cpic"></a>Extract_Conversation_Security_Type</h1>
<p>
The <b>Extract_Conversation_Security_Type</b> call (function name <b>xcecst</b>) returns the security type for a specified conversation.</p>
<pre><code><b>CM_ENTRY Extract_Conversation_Security_Type(
  unsigned char FAR</b><i> *conversation_ID</i><b>,        </b>
<b>  CM_INT32 FAR</b><i> *conversation_security_type</i><b>,  </b>
<b>  CM_INT32 FAR</b><i> *return_code                  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>conversation_ID</i></dt>
<dd>
Supplied parameter. Specifies the identifier for the conversation. The value of this parameter was returned by <a href="cpic03_0jhf.htm"><b>Initialize_Conversation</b></a> or <a href="cpic03_70df.htm"><b>Accept_Conversation</b></a>.</dd>
<dt>
<i>conversation_security_type</i></dt>
<dd>
Returned parameter. Specifies the information the partner LU requires to validate access to the invoked program. Possible values are:
<dl>
<dt>
CM_SECURITY_NONE</dt>
<dd>
The invoked program uses no conversation security.</dd>
<dt>
CM_SECURITY_PROGRAM</dt>
<dd>
The invoked program uses conversation security and thus requires a user identifier and password.</dd>
<dt>
CM_SECURITY_SAME</dt>
<dd>
The invoked program, invoked with a valid user identifier and password, in turn invokes another program (as illustrated in <a href="cpic02_3wyr.htm">Communication Between TPs</a>). For example, assume that program A invokes program B with a valid user identifier and password, and program B in turn invokes program C. If program B specifies the value CM_SECURITY_SAME, CPI-C sends the LU for program C, the user identifier from program A, and an already-verified indicator. This indicator tells program C not to require the password (if program C is configured to accept an already-verified indicator).
</dd>
</dl>
</dd>
<dt>
<i>return_code</i></dt>
<dd>
The code returned from this call. The valid return codes are listed below.
</dd>
</dl>
<h4>Return Codes</h4>
<dl>
<dt>
cm_ok</dt>
<dd>
Primary return code; the call executed successfully.</dd>
<dt>
cm_program_parameter_check</dt>
<dd>
Primary return code; the value specified by <i>conversation_ID</i> is invalid, or the address of a variable is invalid.
</dd>
</dl>
<h4>State Changes</h4>
<p>
The conversation can be in any state except RESET.</p>
<p>
There is no state change.</p>
<p>&nbsp;</p></body>
</HTML>
