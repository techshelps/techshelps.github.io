<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Set_Return_Control</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_sna_set_return_control_cpic"></a>Set_Return_Control</h1>
<p>
The <b>Set_Return_Control</b> call (function name <b>cmsrc</b>) is issued by the invoking program to specify when the local LU, acting on the session request from the local program's <a href="cpic03_2krn.htm"><b>Allocate</b></a> call, should return control to the local program.</p>
<pre><code><b>CM_ENTRY Set_Return_Control(
  unsigned char FAR</b><i> *conversation_ID</i><b>,  </b>
<b>  CM_INT32 FAR</b><i> *return_control</i><b>,        </b>
<b>  CM_INT32 FAR</b><i> *return_code            </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>conversation_ID</i></dt>
<dd>
Supplied parameter. Specifies the identifier for the conversation. The value of this parameter was returned by <a href="cpic03_0jhf.htm"><b>Initialize_Conversation</b></a>.</dd>
<dt>
<i>return_control</i></dt>
<dd>
Supplied parameter. Specifies when the local LU, acting on the <a href="cpic03_2krn.htm"><b>Allocate</b></a> call, should return control to the local program. The following are allowed values:
<dl>
<dt>
CM_IMMEDIATE</dt>
<dd>
The LU allocates a contention-winner session, if one is immediately available, and returns control to the program.</dd>
<dt>
CM_WHEN_SESSION_ALLOCATED</dt>
<dd>
The LU does not return control to the program until it allocates a session or encounters errors. If a session is not available, the program waits for one. (If the session limit is zero, the LU returns control immediately.)
</dd>
</dl>
</dd>
<dt>
<i>return_code</i></dt>
<dd>
The code returned from this call. The valid return codes are listed below.
</dd>
</dl>
<h4>Return Codes</h4>
<dl>
<dt>
cm_ok</dt>
<dd>
Primary return code; the call executed successfully.</dd>
<dt>
cm_program_state_check</dt>
<dd>
Primary return code; the conversation is not in INITIALIZE state.</dd>
<dt>
cm_program_parameter_check</dt>
<dd>
Primary return code; the value specified by <i>conversation_ID</i> or <i>return_control</i> is invalid.</dd>
<dt>
cm_product_specific_error</dt>
<dd>
Primary return code; a product-specific error occurred and has been logged in the product's error log.
</dd>
</dl>
<h4>State Changes</h4>
<p>
The conversation must be in INITIALIZE state.</p>
<p>
There is no state change.</p>
<h4>Remarks</h4>
<p>
This call overrides the default return control established by <a href="cpic03_0jhf.htm"><b>Initialize_Conversation</b></a>. By default, control is returned when the session is allocated. This call cannot be issued after the <a href="cpic03_2krn.htm"><b>Allocate</b></a> call has been issued.</p>
<p>
For further information about sessions, see <a href="cpic02_44kj.htm">Writing CPI-C Applications</a>.</p>
<p>
If the LU is unable to allocate a session, the notification is returned on the <b>Allocate</b> call.</p>
<p>&nbsp;</p></body>
</HTML>
