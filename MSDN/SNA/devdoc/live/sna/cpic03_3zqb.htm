<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Set_CPIC_Side_Information</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_sna_set_cpic_side_information_cpic"></a>Set_CPIC_Side_Information</h1>
<p>
The <b>Set_CPIC_Side_Information</b> call (function name <b>xcmssi</b>) adds or replaces a side information entry in memory. A CPI-C side information entry associates a set of conversation characteristics with a symbolic definition name. This call overrides entries having the same symbolic destination name.</p>
<pre><code><b>CM_ENTRY Set_CPIC_Side_Information(
  unsigned char FAR</b><i> *key_lock</i><b>,           </b>
<b>  SIDE_INFO FAR</b><i> *side_info_entry</i><b>,        </b>
<b>  CM_INT32 FAR</b><i> *side_info_entry_length</i><b>,  </b>
<b>  CM_INT32 FAR</b><i> *return_code              </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>key_lock</i></dt>
<dd>
Supplied parameter. This parameter is ignored.</dd>
<dt>
<i>side_info_entry</i></dt>
<dd>
Supplied parameter. Specifies the contents of a side information entry. The following table describes the <i>side_info_entry</i> structure, which defines the format of the side information entry:
<table cellspacing=4 cols=4>
<tr valign=top>
<th align=left width=13%>Offset</th>
<th align=left width=34%>Description</th>
<th align=left width=31%>Type</th>
<th align=left width=22%>Length</th>
</tr>
<tr valign=top>
<td width=13%>0</td>
<td width=34%><i>sym_dest_name</i></td>
<td width=31%>unsigned char</td>
<td width=22%>8 bytes</td>
</tr>
<tr valign=top>
<td width=13%>8</td>
<td width=34%><i>partner_LU_name</i></td>
<td width=31%>unsigned char</td>
<td width=22%>17 bytes</td>
</tr>
<tr valign=top>
<td width=13%>25</td>
<td width=34%><i>reserved</i></td>
<td width=31%>unsigned char</td>
<td width=22%>3 bytes</td>
</tr>
<tr valign=top>
<td width=13%>28</td>
<td width=34%><i>TP_name_type</i></td>
<td width=31%>signed long int</td>
<td width=22%>32 bits</td>
</tr>
<tr valign=top>
<td width=13%>32</td>
<td width=34%><i>TP_name</i></td>
<td width=31%>unsigned char</td>
<td width=22%>64 bytes</td>
</tr>
<tr valign=top>
<td width=13%>96</td>
<td width=34%><i>mode_name</i></td>
<td width=31%>unsigned char</td>
<td width=22%>8 bytes</td>
</tr>
<tr valign=top>
<td width=13%>104</td>
<td width=34%><i>conversation_<br>
security_type</i></td>
<td width=31%>signed long int</td>
<td width=22%>32 bits</td>
</tr>
<tr valign=top>
<td width=13%>108</td>
<td width=34%><i>security_user_ID</i></td>
<td width=31%>unsigned char</td>
<td width=22%>8 bytes</td>
</tr>
<tr valign=top>
<td width=13%>116</td>
<td width=34%><i>security_password</i></td>
<td width=31%>unsigned char</td>
<td width=22%>8 bytes</td>
</tr>
</table><br>


<p>
The allowed characters for <i>sym_dest_name</i> are the uppercase letters (A through Z) and the numerals 0 through 9.

<p>
<b>Set_CPIC_Side_Information</b> is the only CPI-C call that lets you specify an SNA service TP as the partner program. The SNA convention for naming a service TP is up to four characters. The first character is a hexadecimal byte between 0x00 and 0x3F. The remaining characters are translated from ASCII to EBCDIC.

<p>
For the allowed characters for the other fields, see the description of the corresponding <b>Set_</b> call. For example, for the <i>mode_name</i> field, see the description of the <a href="cpic03_43hf.htm"><b>Set_Mode_Name</b></a> call.

<p>
Each field in the structure must be left-aligned. Pad fields on the right with spaces as necessary.
</dd>
<dt>
<i>side_info_entry_length</i></dt>
<dd>
Supplied parameter. Specifies the length of <i>side_info_entry</i>. It is always 124.</dd>
<dt>
<i>return_code</i></dt>
<dd>
The code returned from this call. The valid return codes are listed below.
</dd>
</dl>
<h4>Return Codes</h4>
<dl>
<dt>
cm_ok</dt>
<dd>
Primary return code; the call executed successfully.</dd>
<dt>
cm_program_parameter_check</dt>
<dd>
Primary return code; one of the following occurred:
<ul>
<li>
A value specified in the <i>side_info_entry</i> structure is invalid.</li>
<li>
The left character of the <i>side_info_entry</i> contains a space.</li>
</ul>
</dd>
<dt>
cm_product_specific_error</dt>
<dd>
Primary return code; a product-specific error occurred and has been logged in the product's error log.
</dd>
</dl>
<h4>State Changes</h4>
<p>
The conversation can be in any state.</p>
<p>
There is no state change.</p>
<h4>Remarks</h4>
<p>
Invalid string parameters in the side information (for example, specifying a nonexistent partner LU) are not detected until <a href="cpic03_2krn.htm"><b>Allocate</b></a> is issued. The error is returned on a call following <b>Allocate</b>.</p>
<p>&nbsp;</p></body>
</HTML>
