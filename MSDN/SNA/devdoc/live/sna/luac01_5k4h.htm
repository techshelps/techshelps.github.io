<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Windows LUA Asynchronous Support</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_sna_windows_lua_asynchronous_support_lua"></a>Windows LUA Asynchronous Support</h2>
<p>
Asynchronous verb completion returns immediately from issuing an initial verb (before results have been received) so the application can continue with other processes. A program that issues a verb and does not regain control until the operation completes cannot perform any other operations. This synchronous type of operation, called blocking, is not suited to a server application designed to handle multiple requests from many clients. </p>
<p>
By design, LUA is asynchronous and uses semaphores for notification messages. Semaphores work well for the Windows NT, Windows 95, and OS/2 systems, and the Windows extensions built into Windows LUA also allow asynchronous support for Windows version 3<i>.x</i> applications in the LUA interface. Windows LUA provides the following functions for issuing the Request Unit Interface (RUI) and Session Level Interface (SLI) verbs:</p>
<p class=indent1>
<a href="luac05_29b5.htm"><b>RUI</b></a></p>
<p class=indent1>
<a href="luac05_30gx.htm"><b>SLI</b></a></p>
<p class=indent1>
<a href="luac05_5i8x.htm"><b>WinRUI</b></a></p>
<p class=indent1>
<a href="luac05_69ep.htm"><b>WinSLI</b></a></p>
<p>
<b>WinRUI</b> and <b>WinSLI</b> provide asynchronous message notification for all Windows-based RUI and SLI verbs, while <b>RUI</b> and <b>SLI</b> provide support for event notification. Windows version 3.<i>x</i> applications use <b>WinRUI</b> and <b>WinSLI</b> for asynchronous message notification.</p>
<p>
Asynchronous support allows you to be notified of verb completion based on a window handle. You can register a window handle using the <b>RegisterWindowsMessage</b> function with "WinRUI" or "WinSLI" as the string. You then issue a verb using the <b>WinRUI</b> or <b>WINSLI</b> function and passing a window handle. When the LUA verb conversation completes, a message is posted to the window handle that you passed, notifying you that the verb is complete.</p>
<p>
The only other Windows extension functions required for Windows LUA are for initialization (<a href="luac05_0bs1.htm"><b>WinRUIStartup</b></a><b> </b>or<b> <a href="luac05_74pt.htm">WinSLIStartup</a></b>) and termination (<a href="luac05_42zl.htm"><b>WinRUICleanup</b></a><b> </b>or<b> <a href="luac05_0vxd.htm">WinSLICleanup</a></b>) purposes. Depending on your application, other Windows extensions may be useful, but they are not required. A complete description of all Windows LUA verbs, routines, and extensions is provided in <a href="luac03_7u01.htm">LUA RUI Verbs</a>, <a href="luac04_0ftt.htm">LUA SLI Verbs</a>, and <a href="luac05_7an5.htm">Extensions for the Windows Environment</a>.</p>
<p>&nbsp;</p></body>
</HTML>
