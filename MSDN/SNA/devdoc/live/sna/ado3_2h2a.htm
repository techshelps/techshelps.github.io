<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ADO Command Object</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_sna_ado_command_object_oledb"></a>ADO Command Object</h1>
<p>
The ADO Command object is a definition of a specific command that is to be executed against an OLE DB data source. </p>
<p>
Command objects can be used to create a Recordset object and obtain records, to execute a bulk operation, or to manipulate the structure of a database. When using the Microsoft® OLE DB Provider for AS/400 and VSAM, some collections, methods, or properties of a Command object may generate an error when called.</p>
<p>
The primary purpose of the Command object in the context of the OLE DB Provider for AS/400 and VSAM is to issue AS/400 Command Language (CL) commands for execution by the remote OS/400 DDM target server. Legal DDM command-line strings are documented in Chapter 5 of the <i>AS/400 DDM User's Guide</i> published by IBM.</p>
<p>
The following Command object methods, properties, and collections are supported by the current version of the OLE DB Provider for AS/400 and VSAM:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=32%>Name</th>
<th align=left width=68%>Comment</th>
</tr>
<tr valign=top>
<td width=32%><a href="thorref4_5hb6.htm"><b>Execute</b></a> method</td>
<td width=68%>Evaluates command text as a text string (only supported <i>Options</i> parameter for this method is <b>adCmdText</b> which indicates that this is not an SQL command).</td>
</tr>
<tr valign=top>
<td width=32%></td>
<td width=68%></td>
</tr>
<tr valign=top>
<td width=32%><a href="thorref4_2ezm.htm"><b>ActiveConnection</b></a> property</td>
<td width=68%>Sets or returns the information used to establish a connection to a data source (see notes following).</td>
</tr>
<tr valign=top>
<td width=32%><a href="thorref4_1un6.htm"><b>CommandText</b></a> property</td>
<td width=68%>Sets or returns the command text to be executed.</td>
</tr>
<tr valign=top>
<td width=32%><a href="thorref4_6ndu.htm"><b>CommandType</b></a> property</td>
<td width=68%>Sets or returns the type of command in a <b>CommandText</b> property.</td>
</tr>
<tr valign=top>
<td width=32%><a href="thorref4_2l0i.htm"><b>Name</b></a> property</td>
<td width=68%>Assigns a name to or retrieves the name of a Command object.</td>
</tr>
<tr valign=top>
<td width=32%><a href="thorref4_7882.htm"><b>State</b></a><b> </b>property</td>
<td width=68%>Describes the current state of an object.</td>
</tr>
<tr valign=top>
<td width=32%></td>
<td width=68%></td>
</tr>
<tr valign=top>
<td width=32%>Properties collection</td>
<td width=68%>Collections of properties on the command.</td>
</tr>
</table><br>
<p>
The <b>Execute</b> method executes a command and returns a Recordset object if appropriate with the <b>Execute</b> method. The Command object can be used to open tables or execute DDM commands on a remote DDM server. If errors occur, these can be examined with the Errors collection on the Connection object.</p>
<p>
A Command object can be created independently of a previously defined Connection object by setting the <b>ActiveConnection</b> property of the Command object to a valid connection string (see the <b>ConnectionString </b>property of the Connection object for the proper syntax). ADO still creates a Connection object, but it does not assign that object to an object variable. However, if multiple Command objects are to be associated with the same connection, the Connection object should be explicitly created and opened. This assigns the Connection object to an object variable. If the <b>ActiveConnection</b> property of the Command object is not set to this object variable, ADO creates a new Connection object for each Command object, even if the same connection string is used.</p>
<p>
The <b>ActiveConnection</b> property associates an open connection with a Command object. The <b>CommandText</b> property defines the text version of a command (an <b>EXEC COMMAND <i>DDMCmd</i> </b>statement, for example, where <i>DDMCmd</i> represents a valid AS/400 CL command). The <b>CommandType</b> property specifies the type of command described in the <b>CommandText</b> property prior to execution in order to optimize performance. The <b>CommandType</b> property must be set to <b>adCmdText </b>for use with OLE DB Provider for AS/400 and VSAM.</p>
<p>
The Command object can also be used to open a data file after a Connection object has been opened and the <b>ActiveConnection </b>property has been set to this open connection. The <b>CommandText</b> property defines the data file to open (an <b>EXEC OPEN <i>DataSetName</i> </b>statement, for example, where <i>DataSetName </i>represents a valid data file or library member on the host). The <b>CommandType</b> property must be set to <b>adCmdText </b>for use with the OLE DB Provider for AS/400 and VSAM. If you open a host data file from a Command object, then the data file is opened as read-only. This results from the limitation that no argument or option is passed by ADO that supplies a parameter describing whether the data set should be opened as read-only or updatable.</p>
<p>&nbsp;</p></body>
</HTML>
