<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Open Method on Recordset Object</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_sna_open_method_on_recordset_object_oledb"></a>Open Method on Recordset Object</h1>
<p>
The <b>Open</b> method on a Recordset object opens a cursor that represents records from a base table or the results of a query.</p>
<pre><code><b>recordset.Open </b><i>Source</i><b>, </b><i>ActiveConnection</i><b>, </b><i>CursorType</i><b>, </b><i>LockType</i><b>, </b><i>Options</i>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>Source</i></dt>
<dd>
This optional parameter specifies a Variant that evaluates to a valid Command object variable name or a valid string specifying the command text specific to the OLE DB Provider for AS/400 and VSAM to open a data file on the host.</dd>
<dt>
<i>ActiveConnection</i></dt>
<dd>
This optional parameter specifies either a Variant that evaluates to a valid Connection object variable name or a String containing connection information equivalent to the <b>ConnectionString</b> property of a Connection object. 
<p>
The information needed to establish a connection to a data source can be set in the <b>ActiveConnection</b> property of a Recordset object or passed as part of the <b>Open</b> method on a Recordset object in the <i>ActiveConnection</i> parameter. In either case, this information must be in a specific format for use with the OLE DB Provider for AS/400 and VSAM. This information can be a data source name (DSN) or a detailed connection string containing a series of <i>argument=value</i> statements separated by semicolons. ADO supports several standard ADO-defined arguments for the <b>ActiveConnection</b> property as follows:

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=25%>Argument</th>
<th align=left width=75%>Description</th>
</tr>
<tr valign=top>
<td width=25%>Data Source</td>
<td width=75%>Specifies the name of the data source for the connection. This argument is the Data Source name stored in the registry under the OLE DB Provider for AS/400 and VSAM.</td>
</tr>
<tr valign=top>
<td width=25%>File Name</td>
<td width=75%>Specifies the name of the provider-specific file containing preset connection information. This argument cannot be used if a <i>Provider</i> argument is passed. This argument is not supported by the OLE DB Provider for AS/400 and VSAM.</td>
</tr>
<tr valign=top>
<td width=25%>Password</td>
<td width=75%>Specifies a valid mainframe or AS/400 password to use when opening the connection. This password is used by Microsoft® SNA Server to validate that the user can log on to the target host system and has appropriate access rights to the file. </td>
</tr>
<tr valign=top>
<td width=25%>Provider</td>
<td width=75%>Specifies the name of the provider to use for the connection. To use the OLE DB Provider for AS/400 and VSAM the Provider string must be set to "SNAOLEDB". </td>
</tr>
<tr valign=top>
<td width=25%>User ID</td>
<td width=75%>Specifies a valid mainframe or AS/400 user name to use when opening the connection. This user name is used by SNA Server to validate that the user can log on to the target host system and has appropriate access rights to the file.</td>
</tr>
</table><br>


<p>
The OLE DB Provider for AS/400 and VSAM also supports a number of provider-specific arguments, some of which default to values in the registry. These arguments are as follows:

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=25%>Argument</th>
<th align=left width=75%>Description</th>
</tr>
<tr valign=top>
<td width=25%>CCSID</td>
<td width=75%>The Code Character Set Identifier (CCSID) attribute indicates the character set used on the host. If this argument is omitted, the default value for CCSID is set to the default value in the registry, typically EBCDIC US English (37). </td>
</tr>
<tr valign=top>
<td width=25%>CodePage</td>
<td width=75%>The character code page to use on the PC. If this argument is omitted, the default value for CodePage is set to the default value in the registry, typically US ASCII (437). This value is only used when configured for custom code page conversion.</td>
</tr>
<tr valign=top>
<td width=25%>Local LU</td>
<td width=75%>The name of the local LU alias configured in the SNA server.</td>
</tr>
<tr valign=top>
<td width=25%>Mode</td>
<td width=75%>The APPC mode (must be set to a value that matches the host configuration and SNA Server configuration). If this argument is omitted, the default value for Mode is set to the default value in the registry.<p>
Legal values for the APPC mode include QPCSUPP (5250), #NTER (interactive), #NTERSC (interactive), #BATCH (batch), #BATCHSC (batch), and custom modes.</p>
</td>
</tr>
<tr valign=top>
<td width=25%>RDB</td>
<td width=75%>The Remote DataBase name for OS/400. You only need to specify this value if it is different from the remote LU alias configured in the SNA server.</td>
</tr>
<tr valign=top>
<td width=25%>Remote LU</td>
<td width=75%>The name of the remote LU alias configured in the SNA server.</td>
</tr>
</table><br>

</dd>
<dt>
<i>CursorType</i></dt>
<dd>
This optional parameter specifies a <b>CursorTypeEnum</b> value that determines the type of cursor that the provider should use when opening the Recordset. See the <b>CursorType</b> property of a Recordset object for more information.
<p>
This parameter can be one of the following enumerated values for <b>CursorTypeEnum</b>:

<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=34%>Enumeration</th>
<th align=left width=13%>Value</th>
<th align=left width=53%>Description</th>
</tr>
<tr valign=top>
<td width=34%><b>adOpenUnspecified</b></td>
<td width=13%>-1</td>
<td width=53%>Indicates an unspecified value for the <i>CursorType</i> (not supported by the OLE DB Provider for AS/400 and VSAM).</td>
</tr>
<tr valign=top>
<td width=34%><b>adOpenForwardOnly</b></td>
<td width=13%>0</td>
<td width=53%>Specifying this value opens a forward-only-type cursor. Under the OLE DB Provider for AS/400 and VSAM this cursortype is mapped to adOpenDynamic.</td>
</tr>
<tr valign=top>
<td width=34%><b>adOpenKeyset</b></td>
<td width=13%>1</td>
<td width=53%>Specifying this value opens a keyset-type cursor (not supported by the OLE DB Provider for AS/400 and VSAM).</td>
</tr>
<tr valign=top>
<td width=34%><b>adOpenDynamic</b></td>
<td width=13%>2</td>
<td width=53%>Specifying this value opens a dynamic-type cursor, the only <i>CursorType</i> supported by the OLE DB Provider for AS/400 and VSAM. Additions, changes, and deletions by other users are visible, and all types of movement through the recordset are allowed, except for bookmarks if the provider does not support them.</td>
</tr>
<tr valign=top>
<td width=34%><b>adOpenStatic</b></td>
<td width=13%>3</td>
<td width=53%>Specifying this value opens a static-type cursor (not supported by the OLE DB Provider for AS/400 and VSAM).</td>
</tr>
</table><br>


<p>
This optional argument defaults to <b>adOpenForwardOnly</b>, a value that is mapped to <b>adOpendDynamic</b> by the OLE DB provider for AS/400 and VSAM.
</dd>
<dt>
<i>LockType</i></dt>
<dd>
This optional parameter specifies a <b>LockTypeEnum</b> value that determines what type of locking (concurrency) the provider should use when opening the recordset. See the <b>LockType</b> property of a Recordset object for more information.
<p>
This parameter can be one of the following enumerated values for <b>LockTypeEnum</b>:

<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=37%>Enumeration</th>
<th align=left width=12%>Value</th>
<th align=left width=51%>Description</th>
</tr>
<tr valign=top>
<td width=37%><b>adLockUnspecified</b></td>
<td width=12%>-1</td>
<td width=51%>Indicates an unspecified value for the <i>LockType</i> (not supported by the OLE DB Provider for AS/400 and VSAM).</td>
</tr>
<tr valign=top>
<td width=37%><b>adLockReadOnly</b></td>
<td width=12%>1</td>
<td width=51%>Specifying this value opens a Recordset object read-only and data cannot be altered. </td>
</tr>
<tr valign=top>
<td width=37%><b>adLockPessimistic</b></td>
<td width=12%>2</td>
<td width=51%>Specifying this value opens a recordset with pessimistic locking. Record-by-record, the OLE DB Provider does whatever is necessary to ensure successful editing of the records, usually by locking records at the data source immediately upon editing.</td>
</tr>
<tr valign=top>
<td width=37%><b>adLockOptimistic</b></td>
<td width=12%>3</td>
<td width=51%>Specifying this value opens a recordset with optimistic locking. Record-by-record, the OLE DB Provider locks records only when the <b>Update</b> method is invoked on a Recordset object.</td>
</tr>
<tr valign=top>
<td width=37%><b>adLockBatchOptimistic</b></td>
<td width=12%>4</td>
<td width=51%>Specifying this value opens a Recordset with batch optimistic locking. This value is required for batch update mode as opposed to immediate update. </td>
</tr>
</table><br>


<p>
This optional argument defaults to <b>adLockReadOnly</b>.
</dd>
<dt>
<i>Options</i></dt>
<dd>
This optional parameter specifies a Long value representing a <b>CommandTypeEnum</b> value that indicates how the provider should evaluate the <i>Source</i> parameter. The <b>CommandTypeEnum</b> value can be one of the following constants:
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=37%>Enumeration</th>
<th align=left width=12%>Value</th>
<th align=left width=51%>Description</th>
</tr>
<tr valign=top>
<td width=37%><b>adCmdUnspecified</b></td>
<td width=12%>-1</td>
<td width=51%>This value indicates that the <b>CommandText</b> property is unspecified (not supported by the OLE DB Provider for AS/400 and VSAM). </td>
</tr>
<tr valign=top>
<td width=37%><b>adCmdText</b></td>
<td width=12%>1</td>
<td width=51%>This value evaluates the <b>CommandText</b> property as a text string. </td>
</tr>
<tr valign=top>
<td width=37%><b>adCmdTable</b></td>
<td width=12%>2</td>
<td width=51%>This value evaluates the <b>CommandText</b> property as a table name (not supported by the OLE DB Provider for AS/400 and VSAM). </td>
</tr>
<tr valign=top>
<td width=37%><b>adCmdStoredProc</b></td>
<td width=12%>4</td>
<td width=51%>This value evaluates the <b>CommandText</b> property as a stored procedure (not supported by the OLE DB Provider for AS/400 and VSAM). </td>
</tr>
<tr valign=top>
<td width=37%><b>adCmdUnknown</b></td>
<td width=12%>8</td>
<td width=51%>This value indicates that the type of command in <b>CommandText</b> is not known and is not supported by the OLE DB Provider for AS/400 and VSAM. </td>
</tr>
</table><br>

</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>Open</b> method on a Recordset object is used to open tables on a remote DDM server. Using the <b>Open</b> method on a Recordset object establishes the physical connection to a data source and opens a cursor that represents records from a base table or the results of a query. After this method successfully completes, the Recordset object is live and other methods can be invoked on the Recordset object to process results.</p>
<p>
The optional <i>Source</i> parameter is used to specify the command text required to open a data file on the host. The syntax in this case is as follows:</p>
<pre><code>recordset = CreateObject("ADODB.Recordset.1.5")
recordset.Open "EXEC OPEN LIBRARY/FILE", connection, adOpenDynamic, adLockOptimistic, adCmdText
 </code></pre>
<p>
The optional <i>ActiveConnection</i> parameter corresponds to the <b>ActiveConnection</b> property on a Recordset object and specifies on which connection to open the Recordset object. If a connection string definition is passed for this argument, ADO opens a new connection using the specified parameters. The value of this <b>ActiveConnection</b> property can be changed after opening the Recordset to send updates to another provider. The <b>ActiveConnection</b> property is set to <b>Nothing</b> (in Microsoft® Visual Basic®) to disconnect the recordset from the OLE DB Provider. If the optional <i>ActiveConnection</i> parameter is used to specify a connection string, this string must containing a series of <i>argument=value</i> statements separated by semicolons. </p>
<p>
The <b>ActiveConnection</b> property on a Recordset object automatically inherits the value used for the <i>ActiveConnection</i> parameter. Therefore, the <b>ActiveConnection</b> property of the Recordset object can be set before opening the Recordset object, or the <i>ActiveConnection</i> parameter can be used to set or override the current connection parameters during the <b>Open</b> method call.</p>
<p>
The <i>CursorType</i> parameter cannot be omitted using the OLE DB Provider for AS/400 and VSAM since this parameter defaults to <b>adOpenForwardOnly</b>, a <i>CursorType</i> that is not supported on the OLE DB Provider. The <i>CursorType</i> parameter must be set to <b>adOpenDynamic</b>, otherwise an error will occur and results will be unpredictable. </p>
<p>
There are a number of different ways to open a recordset and connect to a data source. The <b>Open</b> method of the Recordset object can pass all of the appropriate connection information as part of the <i>ActiveConnection </i>parameter or by setting the <b>ActiveConnection</b> property of the Recordset object, if this information is known in advance. The syntax in this case using the <i>ActiveConnection </i>parameter is as follows:</p>
<pre><code>recordset = CreateObject("ADODB.Recordset.1.5")
recordset.Open "EXEC OPEN LIBRARY/FILE","Provider=SNAOLEDB;Data Source=REMLU;User ID=USERNAME;Password=password;Local LU=LOCAL;Remote LU=DATABASE; Mode=QPCSUPP;CCSID=37;CodePage=437", adOpenDynamic, adLockOptimistic, adCmdText
 </code></pre>
<p>
<b>Note</b>&nbsp;&nbsp;Not all of these parameters are required. The registry settings for the Data Source usually have default values set for remote LU, local LU, Mode, CCSID, and CodePage. If a data source is specified, this other information is not usually needed. These registry settings are configured by using the Microsoft Management Console snap-in for the OLE DB Provider for AS/400 and VSAM.</p>
<p>
For the other parameters that correspond directly to the properties of a Recordset object (<i>Source</i>, <i>CursorType</i>, and <i>LockType</i>), the relationship of the parameters to the properties is as follows: 
<ul>
<li>
The property is read/write before the Recordset object is opened.</li>
<li>
The property settings are used unless the corresponding parameters are passed when executing the <b>Open</b> method. If a parameter is passed, it overrides the corresponding property setting, and the property setting is updated with the parameter value.</li>
<li>
After the Recordset object is opened, these properties become read-only. </li>
</ul>
<p>
<b>Note</b>&nbsp;&nbsp;For Recordset objects whose <b>Source</b> property is set to a valid Command object, the <b>ActiveConnection</b> property is read-only, even if the Recordset object is not open.</p>
<p>
If a Command object is passed in the <i>Source</i> parameter and an <i>ActiveConnection</i> parameter is also passed, an error occurs. The <b>ActiveConnection</b> property of the Command object must already be set to a valid Connection object or connection string.</p>
<p>
If a Command object is not passed in the <i>Source</i> argument, the <i>Options</i> argument must be set to <b>adCmdText</b>. If the <i>Options</i> argument is not defined, you may experience diminished performance because ADO must make calls to the OLE DB Provider to determine if the argument is a command statement. If you know what <i>Source</i> type you are using, setting the <i>Options</i> argument instructs ADO to jump directly to the relevant code. </p>
<p>
If the data source returns no records, the provider sets both the <b>BOF</b> and <b>EOF</b> properties on the Recordset object to <b>True</b>, and the current record position is undefined. You can still add new data to this empty Recordset object if the cursor type allows it.</p>
<p>
When operations have been concluded over an open Recordset object, the <b>Close</b> method should be invoked on the Recordset object to free any associated system resources. Closing a Recordset object does not remove it from memory; you may change its property settings and use the <b>Open</b> method to open it again later. To completely eliminate an object from memory, set the Recordset object variable to <b>Nothing</b>.</p>
<p>
If errors occur, these can be examined with the Errors collection on the Recordset object.</p>
<p>&nbsp;</p></body>
</HTML>
