<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DEFINE_TRACE</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_sna_define_trace_appc"></a>DEFINE_TRACE</h1>
<p>
The <b>DEFINE_TRACE</b> verb enables or disables tracing for specified APIs and controls the amount of tracing.</p>
<p>
The following structure describes the verb control block used by the <b>DEFINE_TRACE </b> verb.</p>
<pre><code>struct define_trace {
    unsigned short       opcode;
    unsigned char        opext;
    unsigned char        reserv2;
    unsigned short       primary_rc;
    unsigned long        secondary_rc;
    unsigned char        reserv3[8];
    unsigned char        dt_set;
    unsigned char        appc;
    unsigned char        reserv4;
    unsigned char       srpi;
    unsigned char       sdlc;
    unsigned char       tkn_rng_dlc;
    unsigned char       pcnet_dlc;
    unsigned char       dft;
    unsigned char       acdi;
    unsigned char       reserv5;
    unsigned char       ehllapi;
    unsigned char       x25_api;
    unsigned char       x25_dlc;
    unsigned char       twinax;
    unsigned char       reserv6;
    unsigned char       lua_api;
    unsigned char       etherand;
    unsigned char       subsym;
    unsigned char       reserv7[8];
    unsigned char       reset_trc;
    unsigned short      trunc;
    unsigned short      strg_size;
    unsigned char       reserv8;
    unsigned char       phys_link[8];
    unsigned char       reserv9[56];
}; 
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>opcode</b></dt>
<dd>
Supplied parameter. The verb identifying the operation code, SV_DEFINE_TRACE.</dd>
<dt>
<b>opext</b></dt>
<dd>
A reserved field.</dd>
<dt>
<b>reserv2</b></dt>
<dd>
A reserved field.</dd>
<dt>
<b>primary_rc</b></dt>
<dd>
Returned parameter. Specifies the primary return code set by APPC at the completion of the verb. The valid return codes vary depending on the APPC verb issued. See Return Codes for valid error codes for this verb.</dd>
<dt>
<b>secondary_rc</b></dt>
<dd>
Returned parameter. Specifies the secondary return code set by APPC at the completion of the verb. The valid return codes vary depending on the APPC verb issued. See Return Codes for valid error codes for this verb.</dd>
<dt>
<b>reserv3</b></dt>
<dd>
A reserved field.</dd>
<dt>
<b>dt_set</b></dt>
<dd>
Supplied parameter. Sets the trace state.
<ul>
<li>
Use SV_ON to enable tracing for a particular API if the parameter pertaining to the API (such as <b>appc</b> or <b>comm_serv</b>) is set to SV_CHANGE.</li>
<li>
Use SV_OFF to disable tracing for a particular API if the parameter pertaining to the API is set to SV_CHANGE.</li>
</ul>
</dd>
<dt>
<b>appc</b></dt>
<dd>
Supplied parameter. Indicates whether tracing of APPC is desired. 
<ul>
<li>
Use SV_CHANGE to enable or disable tracing for APPC, depending on the <b>dt_set</b> parameter.</li>
<li>
Use SV_IGNORE to leave tracing in its current state for APPC.</li>
</ul>

<p>
The allowed values turn bit 0 on or off; bits 1 through 7 are reserved.
</dd>
<dt>
<b>reserv4</b></dt>
<dd>
A reserved field.</dd>
<dt>
<b>srpi</b></dt>
<dd>
Supplied parameter. Indicates whether tracing of SRPI is desired. 
<ul>
<li>
Use SV_CHANGE to enable or disable tracing for APPC, depending on the <b>dt_set</b> parameter.</li>
<li>
Use SV_IGNORE to leave tracing in its current state for APPC.</li>
</ul>
</dd>
<dt>
<b>sdlc</b></dt>
<dd>

<ul>
<li>
A reserved field.</li>
</ul>
</dd>
<dt>
<b>tkn_rng_dlc</b></dt>
<dd>

<ul>
<li>
A reserved field.</li>
</ul>
</dd>
<dt>
<b>pcnet_dlc</b></dt>
<dd>

<ul>
<li>
A reserved field.</li>
</ul>
</dd>
<dt>
<b>dft</b></dt>
<dd>

<ul>
<li>
A reserved field.</li>
</ul>
</dd>
<dt>
<b>acdi</b></dt>
<dd>

<ul>
<li>
A reserved field.</li>
</ul>
</dd>
<dt>
<b>reserv5</b></dt>
<dd>
A reserved field.</dd>
<dt>
<b>comm_serv</b></dt>
<dd>
Supplied parameter. Indicates whether tracing of COMM_SERV_API is desired. 
<ul>
<li>
Use SV_CHANGE to enable or disable tracing for APPC, depending on the <b>dt_set</b> parameter.</li>
<li>
Use SV_IGNORE to leave tracing in its current state for APPC.</li>
</ul>
</dd>
<dt>
<b>ehllapi</b></dt>
<dd>

<ul>
<li>
A reserved field.</li>
</ul>
</dd>
<dt>
<b>x25_api</b></dt>
<dd>

<ul>
<li>
A reserved field.</li>
</ul>
</dd>
<dt>
<b>x25_dlc</b></dt>
<dd>

<ul>
<li>
A reserved field.</li>
</ul>
</dd>
<dt>
<b>twinax</b></dt>
<dd>

<ul>
<li>
A reserved field.</li>
</ul>
</dd>
<dt>
<b>reserved6</b></dt>
<dd>

<ul>
<li>
A reserved field.</li>
</ul>
</dd>
<dt>
<b>lua_api</b></dt>
<dd>

<ul>
<li>
A reserved field.</li>
</ul>
</dd>
<dt>
<b>etherand</b></dt>
<dd>

<ul>
<li>
A reserved field.</li>
</ul>
</dd>
<dt>
<b>subsym</b></dt>
<dd>

<ul>
<li>
A reserved field.</li>
</ul>
</dd>
<dt>
<b>reserved7</b></dt>
<dd>

<ul>
<li>
A reserved field.</li>
</ul>
</dd>
<dt>
<b>reset_trc</b></dt>
<dd>
Supplied parameter. Indicates whether the trace file pointer should be reset.
<ul>
<li>
Use SV_NO to not reset the trace file pointer to the start of the trace file. Previous trace records are not overwritten.</li>
<li>
Use SV_YES to reset the trace file pointer to the start of the trace file. Previous trace records are overwritten.</li>
</ul>
</dd>
<dt>
<b>trunc</b></dt>
<dd>
Supplied parameter. Specifies the maximum number of bytes for each trace record. Excess bytes are truncated. Set this value to zero if you do not want truncation.</dd>
<dt>
<b>strg_size</b></dt>
<dd>

<ul>
<li>
A reserved field.</li>
</ul>
</dd>
<dt>
<b>reserved8</b></dt>
<dd>

<ul>
<li>
A reserved field.</li>
</ul>
</dd>
<dt>
<b>phys_link</b></dt>
<dd>

<ul>
<li>
A reserved field.</li>
</ul>
</dd>
<dt>
<b>reserved9</b></dt>
<dd>

<ul>
<li>
A reserved field.</li>
</ul>
</dd>
</dl>
<h4>Return Codes</h4>
<dl>
<dt>
sv_ok</dt>
<dd>
Primary return code; the verb executed successfully.</dd>
<dt>
sv_parameter_check</dt>
<dd>
Primary return code; the verb did not execute because of a parameter error.
<dl>
<dt>
sv_invalid_reset_trace</dt>
<dd>
Secondary return code; the <b>reset_trc</b> parameter contained an invalid value.</dd>
<dt>
sv_invalid_set</dt>
<dd>
Secondary return code; the <b>dt_set</b> parameter contained an invalid value.
</dd>
</dl>
</dd>
<dt>
sv_state_check</dt>
<dd>
Primary return code; the verb did not execute because it was issued in an invalid state.
<dl>
<dt>
sv_copy_trace_in_progress</dt>
<dd>
Secondary return code; a previously issued <a href="appc08c_6bmr.htm"><b>COPY_TRACE_TO_FILE</b></a> is still in progress. Traces cannot be active while using <b>DEFINE_TRACE</b>.
</dd>
</dl>
</dd>
<dt>
sv_comm_subsystem_not_loaded</dt>
<dd>
Primary return code; a required component could not be loaded or terminated while processing the verb. Thus, communication could not take place. Contact the system administrator for corrective action.</dd>
<dt>
sv_invalid_verb</dt>
<dd>
Primary return code; the <b>opcode</b> parameter did not match the operation code of any verb. No verb executed.</dd>
<dt>
sv_invalid_verb_segment</dt>
<dd>
Primary return code; the VCB extended beyond the end of the data segment.</dd>
<dt>
sv_unexpected_dos_error</dt>
<dd>
Primary return code; one of the following conditions occurred:
<ul>
<li>
The Microsoft® Windows NT®, Microsoft® Windows® 95, Windows version 3.<i>x</i>, Microsoft® MS-DOS®, or OS/2 system encountered an error while processing the verb. The operating system return code was returned through the secondary return code. If the problem persists, contact the system administrator for corrective action.</li>
<li>
A CSV was issued from a message loop that was invoked by another application issuing a Windows <b>SendMessage</b> function call, rather than the more common Windows <b>PostMessage</b> function call. Verb processing cannot take place.</li>
<li>
A CSV was issued when <b>SendMessage</b> invoked your application. You can determine whether your application has been invoked with <b>SendMessage</b> by using the <b>InSendMessage</b> Windows API function call.</li>
</ul>
</dd>
</dl>
<h4>Remarks</h4>
<p>
For information on how to run and use traces, see the appropriate manual for your product.</p>
<p>&nbsp;</p></body>
</HTML>
