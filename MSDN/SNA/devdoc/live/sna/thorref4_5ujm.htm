<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Open Method on Connection Object</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_sna_open_method_on_connection_object_oledb"></a>Open Method on Connection Object</h1>
<p>
The <b>Open</b> method on a Connection object opens a connection to a data source.</p>
<pre><code><b>connection.Open </b><i>ConnectionString</i><b>, </b><i>UserID</i><b>, </b><i>Password</i>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>ConnectionString</i></dt>
<dd>
This optional parameter specifies a String containing connection information. See the <b>ConnectionString</b> property on a Connection object for details on valid settings.
<p>
The information needed to establish a connection to a data source can be set in the <b>ConnectionString</b> property or passed as part of the <b>Open</b> method in the <i>ConnectionString</i> parameter. In either case, this information must be in a specific format for use with the OLE DB Provider for AS/400 and VSAM. This information can be a data source name (DSN) or a detailed connection string containing a series of <i>argument=value</i> statements separated by semicolons. ADO supports several standard ADO-defined arguments for the <b>ConnectionString</b> property as follows:

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=27%>Argument</th>
<th align=left width=73%>Description</th>
</tr>
<tr valign=top>
<td width=27%>Data Source</td>
<td width=73%>This argument specifies the name of the data source for the connection. This argument is the Data Source name stored in the registry under the OLE DB Provider for AS/400 and VSAM.</td>
</tr>
<tr valign=top>
<td width=27%>File Name</td>
<td width=73%>This argument specifies the name of the provider-specific file containing preset connection information. This argument cannot be used if a <i>Provider</i> argument is passed. This argument is not supported by the OLE DB Provider for AS/400 and VSAM.</td>
</tr>
<tr valign=top>
<td width=27%>Password</td>
<td width=73%>This argument specifies a valid mainframe or AS/400 password to use when opening the connection. This password is used by Microsoft® SNA Server to validate that the user can log on to the target host system and has appropriate access rights to the file. </td>
</tr>
<tr valign=top>
<td width=27%>Provider</td>
<td width=73%>This argument specifies the name of the provider to use for the connection. To use the OLE DB Provider for AS/400 and VSAM the Provider string must be set to "SNAOLEDB". </td>
</tr>
<tr valign=top>
<td width=27%>Remote Provider</td>
<td width=73%>This argument specifies the name of a provider to use when opening a client-side connection (for a Remote Data Service only). This argument is not supported by the OLE DB Provider for AS/400 and VSAM.</td>
</tr>
<tr valign=top>
<td width=27%>Remote Server</td>
<td width=73%>This argument specifies the path name of a server to use when opening a client-side connection (for a Remote Data Service only). This argument is not supported by the OLE DB Provider for AS/400 and VSAM.</td>
</tr>
<tr valign=top>
<td width=27%>User ID</td>
<td width=73%>This argument specifies a valid mainframe or AS/400 user name to use when opening the connection. This user name is used by SNA Server to validate that the user can log on to the target host system and has appropriate access rights to the file.</td>
</tr>
</table><br>


<p>
The OLE DB Provider for AS/400 and VSAM also supports a number of provider-specific arguments, some of which default to values in the registry. These arguments are as follows:

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=25%>Argument</th>
<th align=left width=75%>Description</th>
</tr>
<tr valign=top>
<td width=25%>CCSID</td>
<td width=75%>The Code Character Set Identifier (CCSID) attribute indicates the character set used on the host. If this argument is omitted, the default value for CCSID is set to the default value in the registry, typically EBCDIC US English (37). </td>
</tr>
<tr valign=top>
<td width=25%>CodePage</td>
<td width=75%>The character code page to use on the PC. If this argument is omitted, the default value for CodePage is set to the default value in the registry, typically US ASCII (437). This value is only used when configured for custom code page conversion.</td>
</tr>
<tr valign=top>
<td width=25%>Local LU</td>
<td width=75%>The name of the local LU alias configured in the SNA server.</td>
</tr>
<tr valign=top>
<td width=25%>Mode</td>
<td width=75%>The APPC mode (must be set to a value that matches the host configuration and SNA Server configuration). If this argument is omitted, the default value for Mode is set to the default value in the registry.<p>
Legal values for the APPC mode include QPCSUPP (5250), #NTER (interactive), #NTERSC (interactive), #BATCH (batch), #BATCHSC (batch), and custom modes.</p>
</td>
</tr>
<tr valign=top>
<td width=25%>RDB</td>
<td width=75%>The Remote DataBase name for OS/400. You only need to specify this value if it is different from the remote LU alias configured in the SNA server.</td>
</tr>
<tr valign=top>
<td width=25%>Remote LU</td>
<td width=75%>The name of the remote LU alias configured in the SNA server.</td>
</tr>
</table><br>

</dd>
<dt>
<i>UserID</i></dt>
<dd>
This optional parameter specifies a String containing a user name to use when establishing the connection.</dd>
<dt>
<i>Password</i></dt>
<dd>
This optional parameter specifies a String containing a password to use when establishing the connection.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>Open</b> method on a Connection object is used to open tables on a remote DDM server. Using the <b>Open</b> method on a Connection object establishes the physical connection to a data source. After this method successfully completes, the connection is live and other methods can be invoked on the Connection object to process results.</p>
<p>
The optional <i>ConnectionString</i> parameter is used to specify a connection string containing a series of <i>argument=value</i> statements separated by semicolons. The <b>ConnectionString</b> property on a Connection object automatically inherits the value used for the <i>ConnectionString</i> parameter. Therefore, the <b>ConnectionString</b> property of the Connection object can be set before opening the Connection object, or the <i>ConnectionString</i> parameter can be used to set or override the current connection parameters during the <b>Open</b> method call.</p>
<p>
If user and password information is set in both the <i>ConnectionString</i> parameter and in the optional <i>UserID</i> and <i>Password</i> parameters, the results may be unpredictable. Such information should only be passed in either the <i>ConnectionString</i> parameter or the <i>UserID</i> and <i>Password</i> parameters.</p>
<p>
There are a number of different ways to open a connection. The <b>Open</b> method can pass all of the appropriate connection information as part of the <i>ConnectionString </i>parameter or by setting the <b>ConnectionString</b> property of the Connection object, if this information is known in advance. The syntax in this case using the <i>ConnectionString </i>parameter is as follows:</p>
<pre><code>connection = CreateObject("ADODB.Connection.1.5")
connection.Open "Provider=SNAOLEDB;Data Source=REMLU;User ID=USERNAME;Password=password;Local LU=LOCAL;Remote LU=DATABASE; Mode=QPCSUPP;CCSID=37;CodePage=437"
 </code></pre>
<p>
Note that not all of these parameters are required. The registry settings for the Data Source usually have default values set for remote LU, local LU, Mode, CCSID, and CodePage. If a data source is specified, this other information is not usually needed. These registry settings are configured by using the Microsoft Management Console snap-in for the OLE DB Provider for AS/400 and VSAM.</p>
<p>
The simplest form of an <b>Open</b> command that contains all necessary information is as follows:</p>
<pre><code>connection = CreateObject("ADODB.Connection.1.5")
connection.Open "Provider=SNAOLEDB;Data Source=REMLU;User ID=USERNAME;Password=password"
 </code></pre>
<p>
<b>Note</b>&nbsp;&nbsp;The Data Source, User ID and Password must be included.</p>
<p>
In the case where you would like the user to input the connection information, the following syntax can be used. This syntax does not specify any connection information except the provider, which is always required unless this is set in the <b>ConnectionString</b> or <b>Provider</b> property of the Connection object:</p>
<pre><code>connection = CreateObject("ADODB.Connection.1.5")
connection.ConnectionString = "Provider=SNAOLEDB"
connection.Open
 </code></pre>
<p>
This method of invoking the <b>Open</b> method automatically causes a dialog box to appear asking the user for the data source, user name, and password.</p>
<p>
When operations have been concluded over an open Connection object, the <b>Close</b> method should be invoked on the Connection object to free any associated system resources. Closing a Connection object does not remove it from memory; you may change its property settings and use the <b>Open</b> method to open it again later. To completely eliminate an object from memory, set the Connection object variable to <b>Nothing</b>.</p>
<p>
If errors occur, these can be examined with the Errors collection on the Connection object.</p>
<p>&nbsp;</p></body>
</HTML>
