<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Set_Conversation_Security_Type</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_sna_set_conversation_security_type_cpic"></a>Set_Conversation_Security_Type</h1>
<p>
The <b>Set_Conversation_Security_Type</b> call (function name <b>cmscst</b>) is issued by the invoking program to specify the information the partner LU requires to validate access to the invoked program.</p>
<pre><code><b>CM_ENTRY Set_Conversation_Security_Type(
  unsigned char FAR</b><i> *conversation_ID</i><b>,        </b>
<b>  CM_INT32 FAR</b><i> *conversation_security_type</i><b>,  </b>
<b>  CM_INT32 FAR</b><i> *return_code                  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>conversation_ID</i></dt>
<dd>
Supplied parameter. Specifies the identifier for the conversation. The value of this parameter was returned by <a href="cpic03_0jhf.htm"><b>Initialize_Conversation</b></a>.</dd>
<dt>
<i>conversation_security_type</i></dt>
<dd>
Supplied parameter. Specifies the information the partner LU requires to validate access to the invoked program. Based on the conversation security established for the invoked program during configuration, use one of the following values:
<dl>
<dt>
CM_SECURITY_NONE</dt>
<dd>
To indicate that the invoked program uses no conversation security.</dd>
<dt>
CM_SECURITY_PROGRAM</dt>
<dd>
To indicate that the invoked program uses conversation security and thus requires a user identifier and password.</dd>
<dt>
CM_SECURITY_SAME</dt>
<dd>
To specify that the invoked program, invoked with a valid user identifier and password, in turn invokes another program (as illustrated in <a href="cpic02_3wyr.htm">Communication Between TPs</a>). For example, assume that program A invokes program B with a valid user identifier and password, and program B in turn invokes program C. If program B specifies the value CM_SECURITY_SAME, CPI-C will send the LU for program C, the user identifier from program A, and an already-verified indicator. This indicator tells program C not to require the password (if program C is configured to accept an already-verified indicator).</dd>
</dl>

<p>
If the CPI-C automatic logon feature is to be used, this parameter must be set to CM_SECURITY_PROGRAM. See the Remarks section for details.

</dd>
<dt>
<i>return_code</i></dt>
<dd>
The code returned from this call. The valid return codes are listed below.
</dd>
</dl>
<h4>Return Codes</h4>
<dl>
<dt>
cm_ok</dt>
<dd>
Primary return code; the call executed successfully.</dd>
<dt>
cm_program_state_check</dt>
<dd>
Primary return code; the conversation is not in INITIALIZE state.</dd>
<dt>
cm_program_parameter_check</dt>
<dd>
Primary return code; the value specified by <i>conversation_ID</i> or <i>conversation_security_type</i> is invalid.</dd>
<dt>
cm_product_specific_error</dt>
<dd>
Primary return code; a product-specific error occurred and has been logged in the product's error log.
</dd>
</dl>
<h4>State Changes</h4>
<p>
The conversation must be in INITIALIZE state.</p>
<p>
There is no state change.</p>
<h4>Remarks</h4>
<p>
This call overrides the initial security type from the side information specified by <a href="cpic03_0jhf.htm"><b>Initialize_Conversation</b></a>. This call cannot be issued after <a href="cpic03_2krn.htm"><b>Allocate</b></a> has been issued.</p>
<p>
If the conversation security type is set to cm_security_none or cm_security_same, the user identifier and password are ignored when the conversation is allocated.</p>
<p>
Automatic logon for CPI-C applications is supported by Microsoft® SNA Server 3.0 with Service Pack 1 or later and by SNA Server 4.0. This feature requires specific configuration by the network administrator: The CPI-C application must be invoked on the LAN side from a client of SNA Server. The client must be logged into a Microsoft® Windows NT® domain, but can be any platform that supports SNA Server's CPI-C APIs.</p>
<p>
The client application is coded to use "program" level security, with a special hard-coded CPI-C user name MS$SAME and password MS$SAME. When this session allocation flows from client to SNA Server, the SNA server looks up the host account and password corresponding to the Windows NT account under which the client is logged in, and substitutes the host account information into the APPC attach message it sends to the host.</p>
<p>&nbsp;</p></body>
</HTML>
