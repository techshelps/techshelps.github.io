<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating an INF-Based Setup Script</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_sna_creating_an_infminusbased_setup_script_dev"></a>Creating an INF-Based Setup Script</h2>
<p>
This topic describes the recommended sequence of steps to follow when creating a setup script for an IHV link service. It will be helpful to refer to existing .INF files while reading this discussion.</p>
<h4>Create the Initialization Section</h4>
<p>
The first section in the setup script is the initialization section. It contains most of the constant text strings and other values that describe the link service and its components. It is important that a clear layout of the SNA options and their additional components is created in this section.</p>
<h4>Define the Parameters</h4>
<p>
Define the parameters for each component and how they fit into the registry. It is generally a good idea to name the variables for these parameters after their names in the registry, as this simplifies the code and greatly improves its readability.</p>
<h4>Complete the Basic Code</h4>
<p>
Fill in the code sections in the main body of the setup script. Write only the code to initialize the components and write their parameters to the registry. Since modification of variables involves reading their values from the registry, it can be ignored until this step is complete and the information in the registry is correct.</p>
<h4>Design Dialog Boxes</h4>
<p>
Copy the Setup Resource Library template files into another directory, then change the file names from TEMPLATE.* to <i>WHATEVER</i>.* (use whatever name you want). Using the Dialog Editor, add your own dialog boxes that will be used to modify the parameters. Make sure the dialog box layouts are clear and intuitive. Consider which dialog boxes will require online Help. Also, remember that controls should be accessible by tabbing.</p>
<p>
When your dialog boxes are complete, edit the makefile and .RC file to make sure all paths and file names are correct. Type <b>NMAKE</b> to build the new SRL.</p>
<h4>Fill in the Code</h4>
<p>
Fill in the code sections to modify the variables. This includes writing the dialog box-handling code as subroutines in the script and writing the sections that call those subroutines from the main body of the script. This step is probably the most complex. The existing link service setup scripts provide examples.</p>
<p>&nbsp;</p></body>
</HTML>
