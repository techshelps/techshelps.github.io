<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>AddNew Method</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_sna_addnew_method_oledb"></a>AddNew Method</h1>
<p>
The <b>AddNew</b> method on a Recordset object creates a new record for an updatable Recordset object.</p>
<pre><code><b>recordset.AddNew</b> <i>Fields</i>, <i>Values</i>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>Fields</i></dt>
<dd>
This optional parameter specifies a single name or an array of names or ordinal positions of the fields in the new record.</dd>
<dt>
<i>Values</i></dt>
<dd>
This optional parameter specifies a single value or an array of values for the fields in the new record. If <i>Fields</i> is an array, <i>Values</i> must also be an array with the same number of members; otherwise, an error occurs. The order of field names must match the order of field values in each array.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>AddNew</b> method is used to create and initialize a new record. The <b>Supports</b> method can be used with <b>adAddNew</b> to verify whether records can be added to the current Recordset object.</p>
<p>
After the <b>AddNew</b> method is called, the new record becomes the current record and remains current after the <b>Update</b> method is called. If the Recordset object does not support bookmarks, you may not be able to access the new record after you move to another record. Depending on your cursor type, you may need to call the <b>Requery</b> method to make the new record accessible.</p>
<p>
If <b>AddNew</b> is called while editing the current record or while adding a new record, ADO calls the <b>Update</b> method to save any changes and then creates the new record.</p>
<p>
The behavior of the <b>AddNew</b> method depends on the updating mode of the Recordset object and whether or not the <i>Fields</i> and <i>Values</i> arguments are passed.</p>
<p>
In immediate update mode, the OLE DB Provider writes changes to the underlying data source after the <b>Update</b> method is called. In immediate update mode, calling the <b>AddNew</b> method without arguments sets the <b>EditMode</b> property to <b>adEditAdd</b>. The OLE DB Provider caches any field value changes locally. Calling the <b>Update</b> method posts the new record to the database and resets the <b>EditMode</b> property to <b>adEditNone</b>. If the <i>Fields</i> and <i>Values</i> arguments are passed, ADO immediately posts the new record to the database (no <b>Update</b> call is necessary) and the <b>EditMode</b> property value does not change (<b>adEditNone</b>).</p>
<p>
In batch update mode, the OLE DB Provider caches multiple changes and writes them to the underlying data source only when the <b>UpdateBatch</b> method is called. In batch update mode, calling the <b>AddNew</b> method without arguments sets the <b>EditMode</b> property to <b>adEditAdd</b>. The OLE DB Provider caches any field value changes locally. Calling the <b>Update</b> method adds the new record to the current Recordset object and resets the <b>EditMode</b> property to <b>adEditNone</b>, but the OLE DB Provider does not post the changes to the underlying database until the <b>UpdateBatch</b> method is called. If the <i>Fields</i> and <i>Values</i> arguments are passed, ADO sends the new record to the provider for storage in a cache and the <b>UpdateBatch</b> method must be called to post the new record to the underlying database. </p>
<p>&nbsp;</p></body>
</HTML>
