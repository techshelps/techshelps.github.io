<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SLI_SEND</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_sna_sli_send_lua"></a>SLI_SEND</h1>
<p>
The <b>SLI_SEND</b> verb sends responses, SNA commands, and data from a Windows LUA application to a host LU.</p>
<p>
The following structure describes the <b>LUA_COMMON</b> member of the VCB used by <b>SLI_SEND</b>.</p>
<pre><code>struct LUA_COMMON {
    unsigned short    lua_verb;
    unsigned short    lua_verb_length;
    unsigned short    lua_prim_rc;
    unsigned long     lua_sec_rc;
    unsigned short    lua_opcode;
    unsigned long     lua_correlator;
    unsigned char     lua_luname[8];
    unsigned short    lua_extension_list_offset;
    unsigned short    lua_cobol_offset;
    unsigned long     lua_sid;
    unsigned short    lua_max_length;
    unsigned short    lua_data_length;
    char FAR *        lua_data_ptr;
    unsigned long     lua_post_handle;
    struct LUA_TH     lua_th;
    struct LUA_RH     lua_rh;
    struct LUA_FLAG1  lua_flag1;
    unsigned char     lua_message_type;
    struct LUA_FLAG2  lua_flag2; 
    unsigned char     lua_resv56[7];
    unsigned char     lua_encr_decr_option;
};
 </code></pre>
<p>
The following union describes the <b>LUA_SPECIFIC</b> member of the VCB used by <b>SLI_SEND</b>. Other union members are omitted for clarity.</p>
<pre><code>union LUA_SPECIFIC {
    unsigned char lua_sequence_number[2];
};
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>lua_verb</b></dt>
<dd>
Supplied parameter. Contains the verb code, LUA_VERB_SLI for SLI verbs. </dd>
<dt>
<b>lua_verb_length</b></dt>
<dd>
Supplied parameter. Specifies the length in bytes of the LUA VCB. It must contain the length of the verb record being issued.</dd>
<dt>
<b>lua_prim_rc</b></dt>
<dd>
Primary return code set by LUA at the completion of the verb. The valid return codes vary depending on the LUA verb issued.</dd>
<dt>
<b>lua_sec_rc</b></dt>
<dd>
Secondary return code set by LUA at the completion of the verb. The valid return codes vary depending on the LUA verb issued.</dd>
<dt>
<b>lua_opcode</b></dt>
<dd>
Supplied parameter. Contains the LUA command code (verb operation code) for the verb to be issued,  LUA_OPCODE_SLI_SEND.</dd>
<dt>
<b>lua_correlator</b></dt>
<dd>
Supplied parameter. Contains a user-supplied value that links the verb with other user-supplied information. LUA does not use or change this information. This parameter is optional.</dd>
<dt>
<b>lua_luname</b></dt>
<dd>
Supplied parameter. Specifies the ASCII name of the local LU used by the Windows LUA session.
<p>
<b>SLI_SEND</b> only requires this parameter if <b>lua_sid</b> is zero.

<p>
This parameter is eight bytes long, padded on the right with spaces (0x20) if the name is shorter than eight characters.
</dd>
<dt>
<b>lua_extension_list_offset</b></dt>
<dd>
Not used by <b>SLI_SEND</b> and should be set to zero.</dd>
<dt>
<b>lua_cobol_offset</b></dt>
<dd>
Not used by LUA in Microsoft® SNA Server and should be zero.</dd>
<dt>
<b>lua_sid</b></dt>
<dd>
Supplied and returned parameter. Specifies the session identifier and is returned by <a href="luac04_7bxd.htm"><b>SLI_OPEN</b></a> and <a href="luac03_37z5.htm"><b>RUI_INIT</b></a>. Other verbs use this parameter to identify the session used for the command. If other verbs use the <b>lua_luname</b> parameter to identify sessions, set the <b>lua_sid</b> parameter to zero.</dd>
<dt>
<b>lua_max_length</b></dt>
<dd>
Not used by <b>SLI_SEND</b> and should be set to zero. </dd>
<dt>
<b>lua_data_length</b></dt>
<dd>
Supplied parameter. Specifies the length of data being sent.</dd>
<dt>
<b>lua_data_ptr</b></dt>
<dd>
Pointer to the application-supplied buffer that contains the data to be sent to the host by <b>SLI_SEND</b>.
<p>
Both SNA commands and data are placed in this buffer, and they can be in an EBCDIC format.
</dd>
<dt>
<b>lua_post_handle</b></dt>
<dd>
Supplied parameter. Used under Microsoft® Windows NT® and Microsoft® Windows® 95 if asynchronous notification is to be accomplished by events. This variable contains the handle of the event to be signaled or a window handle.
<p>
For all other environments, this parameter is reserved and should be set to zero.
</dd>
<dt>
<b>lua_th</b></dt>
<dd>
Returned parameter. Contains the SNA transmission header (TH) of the message received. Various subparameters are set for write functions and returned for read and bid functions. Its subparameters are as follows:
<dl>
<dt>
<b>lua_th.flags_fid</b></dt>
<dd>
Format identification type 2, four bits.</dd>
<dt>
<b>lua_th.flags_mpf</b></dt>
<dd>
Segmenting mapping field, two bits. Defines the type of data segment. The following values are valid:
<p>
<b>0x00</b>Middle segment<br>
<b>0x04</b>Last segment<br>
<b>0x08</b>First segment<br>
<b>0x0C</b>Only segment
</dd>
<dt>
<b>lua_th.flags_odai</b></dt>
<dd>
Originating address field–destination address field (OAF–DAF) assignor indicator, one bit.</dd>
<dt>
<b>lua_th.flags_efi</b></dt>
<dd>
Expedited flow indicator, one bit.</dd>
<dt>
<b>lua_th.daf</b></dt>
<dd>
Destination address field (DAF), an unsigned char.</dd>
<dt>
<b>lua_th.oaf</b></dt>
<dd>
Originating address field (OAF), an unsigned char.</dd>
<dt>
<b>lua_th.snf</b></dt>
<dd>
Sequence number field, an unsigned char[2].
</dd>
</dl>
</dd>
<dt>
<b>lua_rh</b></dt>
<dd>
Supplied parameter. Contains the SNA request/response header (RH) of the message sent or received. It is set for <a href="luac03_7uap.htm"><b>RUI_WRITE</b></a> and <b>SLI_SEND</b>, and returned by <a href="luac03_7dwh.htm"><b>RUI_READ</b></a> and <a href="luac03_8fmp.htm"><b>RUI_BID</b></a>. For the RH for <b>SLI_SEND</b>, all fields except the queued-response indicator (<b>lua_rh.qri</b>) and pacing indicator (<b>lua_rh.pi</b>) are used.
<dl>
<dt>
<b>lua_rh.rri</b></dt>
<dd>
Request-response indicator, one bit.</dd>
<dt>
<b>lua_rh.ruc</b></dt>
<dd>
RU category, two bits.</dd>
<dt>
<b>lua_rh.fi</b></dt>
<dd>
Format indicator, one bit.</dd>
<dt>
<b>lua_rh.sdi</b></dt>
<dd>
Sense data included indicator, one bit.</dd>
<dt>
<b>lua_rh.bci</b></dt>
<dd>
Begin chain indicator, one bit.</dd>
<dt>
<b>lua_rh.eci</b></dt>
<dd>
End chain indicator, one bit.</dd>
<dt>
<b>lua_rh.dr1i</b></dt>
<dd>
Definite response 1 indicator, one bit.</dd>
<dt>
<b>lua_rh.dr2i</b></dt>
<dd>
Definite response 2 indicator, one bit.</dd>
<dt>
<b>lua_rh.ri</b></dt>
<dd>
Exception response indicator (for a request), or response type indicator (for a response), one bit.</dd>
<dt>
<b>lua_rh.qri</b></dt>
<dd>
Queued response indicator, one bit.</dd>
<dt>
<b>lua_rh.pi</b></dt>
<dd>
Pacing indicator, one bit.</dd>
<dt>
<b>lua_rh.bbi</b></dt>
<dd>
Begin bracket indicator, one bit.</dd>
<dt>
<b>lua_rh.ebi</b></dt>
<dd>
End bracket indicator, one bit.</dd>
<dt>
<b>lua_rh.cdi</b></dt>
<dd>
Change direction indicator, one bit.</dd>
<dt>
<b>lua_rh.csi</b></dt>
<dd>
Code selection indicator, one bit.</dd>
<dt>
<b>lua_rh.edi</b></dt>
<dd>
Enciphered data indicator, one bit.</dd>
<dt>
<b>lua_rh.pdi</b></dt>
<dd>
Padded data indicator, one bit.
</dd>
</dl>
</dd>
<dt>
<b>lua_flag1</b></dt>
<dd>
Supplied parameter. Contains a data structure containing flags for messages supplied by the application.Its subparameters are as follows:
<dl>
<dt>
<b>lua_flag1.bid_enable</b></dt>
<dd>
Bid enable indicator, one bit. </dd>
<dt>
<b>lua_flag1.close_abend</b></dt>
<dd>
Close immediate indicator, one bit. .</dd>
<dt>
<b>lua_flag1.nowait</b></dt>
<dd>
No wait for data flag, one bit. </dd>
<dt>
<b>lua_flag1.sscp_exp</b></dt>
<dd>
SSCP expedited flow, one bit.</dd>
<dt>
<b>lua_flag1.sscp_norm</b></dt>
<dd>
SSCP normal flow, one bit.</dd>
<dt>
<b>lua_flag1.lu_exp</b></dt>
<dd>
LU expedited flow, one bit.</dd>
<dt>
<b>lua_flag1.lu_norm</b></dt>
<dd>
LU normal flow, one bit.
</dd>
</dl>

<p>
Set one of the following flags to 1 to indicate on which message flow the data is to be sent:

<p class=indent1>
<b>lua_flag1.sscp_exp</b></p>

<p class=indent1>
<b>lua_flag1.sscp_norm</b></p>

<p class=indent1>
<b>lua_flag1.lu_exp</b></p>

<p class=indent1>
<b>lua_flag1.lu_norm</b></p>

</dd>
<dt>
<b>lua_message_type</b></dt>
<dd>
Specifies the type of the inbound or outbound SNA commands and data. This is a supplied parameter for <b>SLI_SEND</b>. 
<p>
Possible values are as follows:

<p>
LUA_MESSAGE_TYPE_LU_DATA

<p>
LUA_MESSAGE_TYPE_SSCP_DATA

<p>
LUA_MESSAGE_TYPE_RSP

<p>
LUA_MESSAGE_TYPE_BID

<p>
LUA_MESSAGE_TYPE_BIS

<p>
LUA_MESSAGE_TYPE_CANCEL

<p>
LUA_MESSAGE_TYPE_CHASE

<p>
LUA_MESSAGE_TYPE_LUSTAT_LU

<p>
LUA_MESSAGE_TYPE_LUSTAT_SSCP

<p>
LUA_MESSAGE_TYPE_QC

<p>
LUA_MESSAGE_TYPE_QEC

<p>
LUA_MESSAGE_TYPE_RELQ

<p>
LUA_MESSAGE_TYPE_RQR

<p>
LUA_MESSAGE_TYPE_RTR

<p>
LUA_MESSAGE_TYPE_SBI

<p>
LUA_MESSAGE_TYPE_SIGNAL


<p>
The SLI receives and responds to the BIND and STSN requests through the LUA interface extension routines.

<p>
LU-DATA, LUSTAT_LU, LUSTAT_SSCP, and SSCP_DATA are not SNA commands.
</dd>
<dt>
<b>lua_flag2</b></dt>
<dd>
Returned parameter. Contains flags for messages returned by LUA. Its subparameters are as follows:
<dl>
<dt>
<b>lua_flag2.bid_enable</b></dt>
<dd>
Indicates that <a href="luac03_8fmp.htm"><b>RUI_BID</b></a> was successfully re-enabled if set to 1.</dd>
<dt>
<b>lua_flag2.async</b></dt>
<dd>
Indicates that the LUA interface verb completed asynchronously if set to 1.</dd>
<dt>
<b>lua_flag2.sscp_exp </b></dt>
<dd>
Indicates SSCP expedited flow if set to 1.</dd>
<dt>
<b>lua_flag2.sscp_norm</b></dt>
<dd>
Indicates SSCP normal flow if set to 1.</dd>
<dt>
<b>lua_flag2.lu_exp</b></dt>
<dd>
Indicates LU expedited flow if set to 1.</dd>
<dt>
<b>lua_flag2.lu_norm</b></dt>
<dd>
Indicates LU normal flow if set to 1.
</dd>
</dl>
</dd>
<dt>
<b>lua_resv56</b></dt>
<dd>
Reserved and should be set to zero.</dd>
<dt>
<b>lua_encr_decr_option</b></dt>
<dd>
Not used by <b>SLI_SEND</b> and should be set to zero.</dd>
<dt>
<b>lua_sequence_number</b></dt>
<dd>
The union member of <b>LUA_SPECIFIC</b> used by <b>SLI_SEND</b>. Returned parameter. Contains the sequence number for either the first in the chain request unit or the only segment in the chain request unit. Note that this parameter is not byte-reversed.
</dd>
</dl>
<h4>Return Codes</h4>
<dl>
<dt>
LUA_OK</dt>
<dd>
Primary return code; the verb executed successfully.
<dl>
<dt>
LUA_SEC_OK</dt>
<dd>
Secondary return code; no additional information exists for LUA_OK.
</dd>
</dl>
</dd>
<dt>
LUA_PARAMETER_CHECK</dt>
<dd>
Primary return code; the verb did not execute because of a parameter error.
<dl>
<dt>
LUA_INVALID_LUNAME</dt>
<dd>
Secondary return code; an invalid <b>lua_luname</b> was specified.</dd>
<dt>
LUA_BAD_SESSION_ID</dt>
<dd>
Secondary return code; an invalid value for <b>lua_sid</b> was specified in the VCB.</dd>
<dt>
LUA_BAD_DATA_PTR</dt>
<dd>
Secondary return code; the <b>lua_data_ptr</b> parameter either does not contain a valid pointer or does not point to a read/write segment and supplied data is required.</dd>
<dt>
LUA_RESERVED_FIELD_NOT_ZERO</dt>
<dd>
Secondary return code; a reserved parameter for the verb just issued is not set to zero.</dd>
<dt>
LUA_INVALID_POST_HANDLE</dt>
<dd>
Secondary return code; for a Windows NT or Windows 95 system using events as the asynchronous posting method, the Windows LUA VCB does not contain a valid event handle.
<p>
For the Windows version 3.<i>x</i> system, the LUA VCB does not contain the valid procedure address returned by the <b>MakeProcInstance</b> command.

<p>
For OS/2, the LUA VCB does not contain a valid semaphore or queue handle, which is needed when a verb completes asynchronously.
</dd>
<dt>
LUA_INVALID_FLOW</dt>
<dd>
Secondary return code; the <b>lua_flag1</b> flow flags were set incorrectly when a verb was issued:
<table cellspacing=4 cols=1>
<tr valign=top>
<td width=100%><font face="Symbol">·</font>&nbsp;&nbsp;&nbsp;&nbsp;When issuing <b>SLI_SEND</b> to send an SNA response, set only one <b>lua_flag1</b> flow flag.</td>
</tr>
<tr valign=top>
<td width=100%><font face="Symbol">·</font>&nbsp;&nbsp;&nbsp;&nbsp;When issuing <a href="luac04_2nfl.htm"><b>SLI_RECEIVE</b></a>, set at least one <b>lua_flag1</b> flow flag.</td>
</tr>
</table><br>

</dd>
<dt>
LUA_VERB_LENGTH_INVALID</dt>
<dd>
Secondary return code; an LUA verb was issued with a value for <b>lua_verb_length</b> unexpected by LUA.</dd>
<dt>
LUA_REQUIRED_FIELD_MISSING</dt>
<dd>
Secondary return code; the verb that was issued either did not include a data pointer (if the data count was not zero) or did not include an <b>lua_flag1</b> flow flag.</dd>
<dt>
LUA_INVALID_MESSAGE_TYPE</dt>
<dd>
Secondary return code; the <b>lua_message_type</b> parameter is not recognized by the LUA interface.</dd>
<dt>
LUA_DATA_LENGTH_ERROR</dt>
<dd>
Secondary return code; the application did not provide user-supplied data required by the verb issued. Note that when <b>SLI_SEND</b> is issued for an SNA LUSTAT command, status (in four bytes) is required, and that when <a href="luac04_7bxd.htm"><b>SLI_OPEN</b></a> is issued with secondary initialization, data is required.
</dd>
</dl>
</dd>
<dt>
LUA_STATE_CHECK</dt>
<dd>
Primary return code; the verb did not execute because it was issued in an invalid state.
<dl>
<dt>
LUA_NO_SLI_SESSION</dt>
<dd>
Secondary return code; a session was not open or was down due to an <a href="luac04_7sf5.htm"><b>SLI_CLOSE</b></a> or session failure when a command was issued.</dd>
<dt>
LUA_MAX_NUMBER_OF_SENDS</dt>
<dd>
Secondary return code; the application issued a third <b>SLI_SEND</b> before one completed.</dd>
<dt>
LUA_SEND_ON_FLOW_PENDING</dt>
<dd>
Secondary return code; an <b>SLI_SEND</b> was still outstanding when the application issued another <b>SLI_SEND</b> for an SNA flow.
</dd>
</dl>
</dd>
<dt>
LUA_SESSION_FAILURE</dt>
<dd>
Primary return code; an error condition, specified in the secondary return code, caused the session to fail.
<dl>
<dt>
LUA_RECEIVED_UNBIND</dt>
<dd>
Secondary return code; the primary LU sent an SNA UNBIND command to the LUA interface when a session was active. As a result, the session was stopped.</dd>
<dt>
LUA_SLI_LOGIC_ERROR</dt>
<dd>
Secondary return code; the LUA interface found an internal error in logic.</dd>
<dt>
LUA_NO_RUI_SESSION</dt>
<dd>
Secondary return code; no session has been initialized for the LUA verb issued, or some verb other than <a href="luac04_7bxd.htm"><b>SLI_OPEN</b></a> was issued before the session was initialized.</dd>
<dt>
LUA_LU_COMPONENT_DISCONNECTED</dt>
<dd>
Secondary return code; an LU component is unavailable because it is not connected properly. Make sure that the power is on.</dd>
<dt>
LUA_DATA_SEGMENT_LENGTH_ERROR</dt>
<dd>
Secondary return code; one of the following has occurred:
<table cellspacing=4 cols=1>
<tr valign=top>
<td width=100%><font face="Symbol">·</font>&nbsp;&nbsp;&nbsp;&nbsp;The supplied data segment for <a href="luac04_2nfl.htm"><b>SLI_RECEIVE</b></a> or <b>SLI_SEND</b> is not a read/write data segment as required.</td>
</tr>
<tr valign=top>
<td width=100%><font face="Symbol">·</font>&nbsp;&nbsp;&nbsp;&nbsp;The supplied data segment for <b>SLI_RECEIVE</b> is not as long as that provided in <b>lua_max_length</b>.</td>
</tr>
<tr valign=top>
<td width=100%><font face="Symbol">·</font>&nbsp;&nbsp;&nbsp;&nbsp;The supplied data segment for <b>SLI_SEND</b> is not as long as that provided in <b>lua_data_length</b>.</td>
</tr>
</table><br>

</dd>
<dt>
LUA_VERB_RECORD_SPANS_SEGMENTS</dt>
<dd>
Secondary return code; the LUA VCB length parameter plus the segment offset is beyond the segment end.</dd>
<dt>
LUA_NOT_ACTIVE</dt>
<dd>
Secondary return code; LUA was not active within SNA Server when an LUA verb was issued.</dd>
<dt>
LUA_SLI_LOGIC_ERROR</dt>
<dd>
Secondary return code; the LUA interface found an internal error in logic.</dd>
<dt>
LUA_INVALID_PROCESS</dt>
<dd>
Secondary return code; the session for which an LUA verb was issued is unavailable because another OS/2 process owns the session.</dd>
<dt>
LUA_LU_INOPERATIVE</dt>
<dd>
Secondary return code; a severe error occurred while the LUA was attempting to stop the session. This LU is unavailable for any LUA requests until an ACTLU is received from the host.</dd>
<dt>
LUA_MODE_INCONSISTENCY</dt>
<dd>
Secondary return code; performing this function is not allowed by the current status. The request sent to the half-session component was not executed even though it was understood and supported. This SNA sense code is also an exception request sense code.</dd>
<dt>
LUA_INSUFFICIENT_RESOURCES</dt>
<dd>
Secondary return code; a temporary condition of insufficient resources caused the request receiver to be unable to perform. The request sent to the half-session component was not executed, even though it was understood and supported.</dd>
<dt>
LUA_SEND_CORRELATION_TABLE_FULL</dt>
<dd>
Secondary return code; the session send correlation table for the flow requested reached its capacity.</dd>
<dt>
LUA_RU_LENGTH_ERROR</dt>
<dd>
Secondary return code; the RU request was an incorrect length (either too short or too long). The request unit was not interpreted or processed even though it was delivered to the half-session component. The half-session capabilities do not match. This SNA sense code is also an exception request sense code.</dd>
<dt>
LUA_FUNCTION_NOT_SUPPORTED</dt>
<dd>
Secondary return code; LUA does not support the requested function. A control character, an RU parameter, or a formatted request code may have specified the function. Specific sense code information is in bytes 2 and 3.</dd>
<dt>
LUA_HDX_BRACKET_STATE_ERROR</dt>
<dd>
Secondary return code; the existing state error prevented the current request from being sent. The determination was made by a protocol computer.</dd>
<dt>
LUA_RESPONSE_ALREADY_SENT</dt>
<dd>
Secondary return code; a response for the chain was already sent so that the current request was not sent. The determination was made by a protocol computer.</dd>
<dt>
LUA_EXR_SENSE_INCORRECT</dt>
<dd>
Secondary return code; the application responded negatively to an exception request. The sense code was unacceptable.</dd>
<dt>
LUA_RESPONSE_OUT_OF_ORDER</dt>
<dd>
Secondary return code; the current response was not for the oldest request. The determination was made by a protocol computer.</dd>
<dt>
LUA_CHAIN_RESPONSE_REQUIRED</dt>
<dd>
Secondary return code; a CHASE response was still outstanding when a more recent request was attempted. The determination was made by a protocol computer.</dd>
<dt>
LUA_BRACKET</dt>
<dd>
Secondary return code; the sender failed to enforce the session bracket rules. Note that contention and race conditions are exempt from this error. An invalid request header or request unit for the receiver's current session control or data flow control state was found. Delivery to the half-session component was prevented.</dd>
<dt>
LUA_DIRECTION</dt>
<dd>
Secondary return code; while the half-duplex flip-flop state was NOT_RECEIVE, a request for normal flow was received. An invalid request header or request unit for the receiver's current session control or data flow control state was found. Delivery to the half-session component was prevented.</dd>
<dt>
LUA_DATA_TRAFFIC_RESET</dt>
<dd>
Secondary return code; a half-session of an active session but with inactive data traffic received a normal flow DFC or FMD request. An invalid request header or request unit for the receiver's current session control or data flow control state was found. Delivery to the half-session component was prevented.</dd>
<dt>
LUA_DATA_TRAFFIC_QUIESCED</dt>
<dd>
Secondary return code; a DFC or FMD request was received from a half-session that sent either a SHUTC command or QC command, and the DFC or FMD request has not responded to a RELQ command. An invalid request header or request unit for the receiver's current session control or data flow control state was found. Delivery to the half-session component was prevented.</dd>
<dt>
LUA_DATA_TRAFFIC_NOT_RESET</dt>
<dd>
Secondary return code; while the data traffic state was not reset, the session control request was received. An invalid request header or request unit for the received current session control or data flow control state was found. Delivery to the half-session component was prevented.</dd>
<dt>
LUA_NO_BEGIN_BRACKET</dt>
<dd>
Secondary return code; the receiver has already sent a positive response to a BIS command when a BID or an FMD request specifying BBI=BB was received. An invalid request header or request unit for the received current session control or data flow control state was found. Delivery to the half-session component was prevented.</dd>
<dt>
LUA_SC_PROTOCOL_VIOLATION</dt>
<dd>
Secondary return code; a violation of SC protocol occurred. A request (that is permitted only after an SC request and a positive response to that request have been successfully exchanged) was received before the required exchange. Byte 4 of the sense data contains the request code. No user data exists for this sense code. An invalid header request or data flow control state was found. Delivery to the half-session component was prevented.</dd>
<dt>
LUA_IMMEDIATE_REQUEST_MODE_ERROR</dt>
<dd>
Secondary return code; the request violated the immediate request mode protocol. An invalid header request or request unit for the received current session control or data flow control state was found. Delivery to the half-session component was prevented.</dd>
<dt>
LUA_QUEUED_RESPONSE_ERROR</dt>
<dd>
Secondary return code; the request violated the queued response protocol. An invalid header request or request unit for the received current session control or data flow control state was found. Delivery to the half-session component was prevented.</dd>
<dt>
LUA_ERP_SYNC_EVENT_ERROR</dt>
<dd>
Secondary return code; a violation of the ERP synchronous event protocol occurred. An invalid header request or request unit for the received current session control or data flow control state was found. Delivery to the half-session component was prevented.</dd>
<dt>
LUA_RSP_BEFORE_SENDING_REQ</dt>
<dd>
Secondary return code; a previously received request has not been responded to yet and an attempt was made in half-duplex send/receive mode to send a normal flow request. An invalid header request or request unit for the received current session control or data flow control state was found. Delivery to the half-session component was prevented.</dd>
<dt>
LUA_RSP_CORRELATION_ERROR</dt>
<dd>
Secondary return code; a response was sent that does not correspond to a previously received request or a response was received that does not correspond to a previously sent request.</dd>
<dt>
LUA_BB_NOT_ALLOWED</dt>
<dd>
Secondary return code; the begin bracket indicator was incorrectly specified. The BIND options chosen previously or the architectural rules were violated by the request header parameter values. Delivery to the half-session component was prevented. The errors are not dependent on the current session state. The sender's failure to enforce session rules may have caused the errors.</dd>
<dt>
LUA_EB_NOT ALLOWED</dt>
<dd>
Secondary return code; the end bracket indicator was incorrectly specified. The BIND options chosen previously or the architectural rules were violated by the request header parameter values. Delivery to the half-session component was prevented. The errors are not dependent on the current session state. The sender's failure to enforce session rules may have caused the errors.</dd>
<dt>
LUA_EXCEPTION_RSP_NOT_ALLOWED</dt>
<dd>
Secondary return code; when an exception response was not allowed, one was requested. The BIND options chosen previously or the architectural rules were violated by the request header parameter values. Delivery to the half-session component was prevented. The errors are not dependent on the current session state. The sender's failure to enforce session rules may have caused the errors.</dd>
<dt>
LUA_DEFINITE_RSP_NOT_ALLOWED</dt>
<dd>
Secondary return code; when a definite response was not allowed, one was requested. The BIND options chosen previously or the architectural rules were violated by the request header parameter values. Delivery to the half-session component was prevented. The errors are not dependent on the current session state. The sender's failure to enforce session rules may have caused the errors.</dd>
<dt>
LUA_CD_NOT_ALLOWED</dt>
<dd>
Secondary return code; the change-direction indicator was incorrectly specified. The BIND options chosen previously or the architectural rules were violated by the request header parameter values. Delivery to the half-session component was prevented. The errors are not dependent on the current session state. The sender's failure to enforce session rules may have caused the errors.</dd>
<dt>
LUA_NO_RESPONSE_NOT_ALLOWED</dt>
<dd>
Secondary return code; a request other than an EXR contained a "no response." The BIND options chosen previously or the architectural rules were violated by the request header parameter values. Delivery to the half-session component was prevented. The errors are not dependent on the current session state. The sender's failure to enforce session rules may have caused the errors.</dd>
<dt>
LUA_CHAINING_NOT_SUPPORTED</dt>
<dd>
Secondary return code; the chaining indicators were incorrectly specified. The BIND options chosen previously or the architectural rules were violated by the request header parameter values. Delivery to the half-session component was prevented. The errors are not dependent on the current session state. The sender's failure to enforce session rules may have caused the errors.</dd>
<dt>
LUA_BRACKETS_NOT_SUPPORTED</dt>
<dd>
Secondary return code; the bracket indicators were incorrectly specified. The BIND options chosen previously or the architectural rules were violated by the request header parameter values. Delivery to the half-session component was prevented. The errors are not dependent on the current session state. The sender's failure to enforce session rules may have caused the errors.</dd>
<dt>
LUA_CD_NOT_SUPPORTED</dt>
<dd>
Secondary return code; the change-direction indicator was set, but LUA does not support change-direction for this situation. The BIND options chosen previously or the architectural rules were violated by the request header parameter values. Delivery to the half-session component was prevented. The errors are not dependent on the current session state. The sender's failure to enforce session rules may have caused the errors.</dd>
<dt>
LUA_INCORRECT_USE_OF_FI</dt>
<dd>
Secondary return code; the format indicator was incorrectly specified. The BIND options chosen previously or the architectural rules were violated by the request header parameter values. Delivery to the half-session component was prevented. The errors are not dependent on the current session state. The sender's failure to enforce session rules may have caused the errors.</dd>
<dt>
LUA_ALTERNATE_CODE_NOT_SUPPORTED</dt>
<dd>
Secondary return code; the code selection indicator was set, but LUA does not support code selection for this session. The BIND options chosen previously or the architectural rules were violated by the request header parameter values. Delivery to the half-session component was prevented. The errors are not dependent on the current session state. The sender's failure to enforce session rules may have caused the errors.</dd>
<dt>
LUA_INCORRECT_REQUEST_CODE</dt>
<dd>
Secondary return code; the request code was incorrectly specified. The BIND options chosen previously or the architectural rules were violated by the request header parameter values. Delivery to the half-session component was prevented. The errors are not dependent on the current session state. The sender's failure to enforce session rules may have caused the errors.</dd>
<dt>
LUA_INCORRECT_SPEC_OF_SDI_RTI</dt>
<dd>
Secondary return code; the SDI and the RTI were not specified correctly on a response. The BIND options chosen previously or the architectural rules were violated by the request header parameter values. Delivery to the half-session component was prevented. The errors are not dependent on the current session state. The sender's failure to enforce session rules may have caused the errors.</dd>
<dt>
LUA_INCORRECT_DR1I_DR2I_ERI</dt>
<dd>
Secondary return code; the DR1I, the DR2I, and the ERI were specified incorrectly. The BIND options chosen previously or the architectural rules were violated by the request header parameter values. Delivery to the half-session component was prevented. The errors are not dependent on the current session state. The sender's failure to enforce session rules may have caused the errors.</dd>
<dt>
LUA_INCORRECT_USE_OF_QRI</dt>
<dd>
Secondary return code; the queued response indicator was incorrectly specified. The BIND options chosen previously or the architectural rules were violated by the request header parameter values. Delivery to the half-session component was prevented. The errors are not dependent on the current session state. The sender's failure to enforce session rules may have caused the errors.</dd>
<dt>
LUA_INCORRECT_USE_OF_EDI</dt>
<dd>
Secondary return code; the EDI was incorrectly specified. The BIND options chosen previously or the architectural rules were violated by the request header parameter values. Delivery to the half-session component was prevented. The errors are not dependent on the current session state. The sender's failure to enforce session rules may have caused the errors.</dd>
<dt>
LUA_INCORRECT_USE_OF_PDI</dt>
<dd>
Secondary return code; the PDI was incorrectly specified. The BIND options chosen previously or the architectural rules were violated by the request header parameter values. Delivery to the half-session component was prevented. The errors are not dependent on the current session state. The sender's failure to enforce session rules may have caused the errors.</dd>
<dt>
LUA_NO_SESSION</dt>
<dd>
Secondary return code; a request to activate a session is required because no active half-session in the receiving end node for the origination-destination pair exists, or no active boundary function half-session component for the origination-destination pair in a node that supplies the boundary function exists. Delivery of the request could not take place for one of the following reasons:
<table cellspacing=4 cols=1>
<tr valign=top>
<td width=100%><font face="Symbol">·</font>&nbsp;&nbsp;&nbsp;&nbsp;A path information unit error</td>
</tr>
<tr valign=top>
<td width=100%><font face="Symbol">·</font>&nbsp;&nbsp;&nbsp;&nbsp;A path outage</td>
</tr>
<tr valign=top>
<td width=100%><font face="Symbol">·</font>&nbsp;&nbsp;&nbsp;&nbsp;An invalid sequence of requests for activation</td>
</tr>
</table><br>


<p>
If a path error is received during an active session, that usually indicates there is no longer a valid path to the session partner.

</dd>
</dl>
</dd>
<dt>
LUA_CANCELED</dt>
<dd>
Primary return code; the secondary return code gives the reason for canceling the command.
<dl>
<dt>
LUA_TERMINATED</dt>
<dd>
Secondary return code; the session was terminated when a verb was pending. The verb process has been canceled.
</dd>
</dl>
</dd>
<dt>
LUA_IN_PROGRESS</dt>
<dd>
Primary return code; an asynchronous command was received but is not completed.</dd>
<dt>
LUA_COMM_SUBSYSTEM_ABENDED</dt>
<dd>
Primary return code; indicates one of the following conditions:
<ul>
<li>
The node used by this conversation encountered an ABEND.</li>
<li>
The connection between the TP and the PU 2.1 node has been broken (a LAN error).</li>
<li>
The SnaBase at the TP's computer encountered an ABEND.</li>
</ul>
</dd>
<dt>
LUA_COMM_SUBSYSTEM_NOT_LOADED</dt>
<dd>
Primary return code; a required component could not be loaded or terminated while processing the verb. Thus, communication could not take place. Contact the system administrator for corrective action.</dd>
<dt>
LUA_INVALID_VERB_SEGMENT</dt>
<dd>
Primary return code; the VCB extended beyond the end of the data segment.</dd>
<dt>
LUA_UNEXPECTED_DOS_ERROR</dt>
<dd>
Primary return code; after issuing an operating system call, an unexpected operating system return code was received and is specified in the secondary return code.</dd>
<dt>
LUA_STACK_TOO_SMALL</dt>
<dd>
Primary return code; the stack size of the application is too small to execute the verb. Increase the stack size of your application.</dd>
<dt>
LUA_INVALID_VERB</dt>
<dd>
Primary return code; either the verb code or the operation code, or both, is invalid. The verb did not execute.
</dd>
</dl>
<h4>Remarks</h4>
<p>
<b>SLI_SEND</b> sends responses, SNA commands, and data from the Windows LUA application to a host LU. A session must already be open to issue <b>SLI_SEND</b> for a particular LU-LU session flow. To send data on the SSCP normal flow prior to the completion of <a href="luac04_7bxd.htm"><b>SLI_OPEN</b></a>, the session must have been initialized as primary with SSCP access. In addition, the session status must be INIT_COMPLETE.</p>
<p>
The settings for <b>lua_message_type</b> determine the type of processing that will be done by <b>SLI_SEND</b>. The following table indicates the parameters to set based on the value of <b>lua_message_type</b>.</p>
<table cellspacing=4 cols=8>
<tr valign=top>
<th align=left width=13%>SLI_SEND parameter</th>
<th align=left width=16%>LU_DATA <br>
SSCP_DATA</th>
<th align=left width=8%>BID <br>
BIS <br>
RTR</th>
<th align=left width=11%>CHASE <br>
QC</th>
<th align=left width=18%>LUSTAT_LU <br>
LUSTAT_SSCP</th>
<th align=left width=11%>QEC <br>
RELQ <br>
SBI <br>
SIGNAL</th>
<th align=left width=8%>RQR</th>
<th align=left width=15%>RSP</th>
</tr>
<tr valign=top>
<td width=13%><b>lua_data<br>
_length</b></td>
<td width=16%>Req.</td>
<td width=8%>0</td>
<td width=11%>0</td>
<td width=18%>Req.</td>
<td width=11%>0</td>
<td width=8%>0</td>
<td width=15%>Req. (0 if<br>
no data)</td>
</tr>
<tr valign=top>
<td width=13%><b>lua_data<br>
_ptr</b></td>
<td width=16%>Req. (0 if<br>
no data)</td>
<td width=8%>0</td>
<td width=11%>0</td>
<td width=18%>Req.</td>
<td width=11%>0</td>
<td width=8%>0</td>
<td width=15%>Req. (0 if<br>
no data)</td>
</tr>
<tr valign=top>
<td width=13%><b>lua_flag1 flow flags</b></td>
<td width=16%>0</td>
<td width=8%>0</td>
<td width=11%>0</td>
<td width=18%>0</td>
<td width=11%>0</td>
<td width=8%>0</td>
<td width=15%>Req. (set<br>
one)</td>
</tr>
<tr valign=top>
<td width=13%><b>lua_rh</b></td>
<td width=16%>FI<br>
DRL1<br>
DRL2<br>
RI<br>
BBI<br>
EBI<br>
CDI<br>
CSI<br>
EDI</td>
<td width=8%>SDI<br>
QRI</td>
<td width=11%>SDI<br>
QRI<br>
EBI<br>
CDI</td>
<td width=18%>SDI<br>
QRI<br>
DRL1<br>
DRL2<br>
RI<br>
BBI<br>
EBI<br>
CDI</td>
<td width=11%>SDI</td>
<td width=8%>0</td>
<td width=15%>RRI<br>
RI</td>
</tr>
<tr valign=top>
<td width=13%><b>lua_th</b></td>
<td width=16%>0</td>
<td width=8%>0</td>
<td width=11%>0</td>
<td width=18%>0</td>
<td width=11%>0</td>
<td width=8%>0</td>
<td width=15%>SNF</td>
</tr>
</table><br>
<p>
The location provided in <b>lua_data_ptr</b> and the length provided in <b>lua_data_length</b> determine the data that the SLI sends. The data will be chained by the SLI verbs if necessary.</p>
<p>
When sending a response, the type of response determines the <b>SLI_SEND</b> information required. For all responses, you must:
<ul>
<li>
Set the selected <b>lua_flag1</b> flow flag.</li>
<li>
Provide the sequence number in <b>lua_th.snf</b> for the request to which you are responding.</li>
<li>
Set <b>lua_message_type</b> to LUA_MESSAGE_TYPE_RSP.</li>
</ul>
<p>
For multichain message responses, the sequence number of the last received chain element must be used. For a response to a multichain message ending with a CANCEL command, the CANCEL command sequence number is used.</p>
<p>
For positive responses that only require the request code, set <b>lua_rh.ri</b> to zero (indicating that the response is positive) and <b>lua_data_length</b> to zero (indicating no data is provided). The request code is filled in by the SLI, using the sequence number provided.</p>
<p>
For negative responses in which <b>lua_rh.ri</b> is set to 1, set the <b>lua_data_ptr</b> to the SNA sense code address and the <b>lua_data_length</b> to the SNA sense code length (four bytes). The sequence number is used by the SLI to fill in the request code.</p>
<h4>See Also</h4>
<p>
<a href="luac03_37z5.htm"><b>RUI_INIT</b></a>, <a href="luac03_7dwh.htm"><b>RUI_READ</b></a>, <a href="luac03_7uap.htm"><b>RUI_WRITE</b></a>, <a href="luac04_5z8h.htm"><b>SLI_BID</b></a>, <a href="luac04_7sf5.htm"><b>SLI_CLOSE</b></a>, <a href="luac04_7bxd.htm"><b>SLI_OPEN</b></a>, <a href="luac04_2nfl.htm"><b>SLI_RECEIVE</b></a></p>
<p>&nbsp;</p></body>
</HTML>
