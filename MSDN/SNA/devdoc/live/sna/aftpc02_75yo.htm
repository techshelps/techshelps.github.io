<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>aftp_create_dir</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_sna_aftp_create_dir_aftp"></a>aftp_create_dir</h1>
<p>
The <b>aftp_create_dir</b> call creates a new directory on the AFTP server. A connection to the AFTP server must be established before using this call.</p>
<p>
Platform differences are as follows:
<ul>
<li>
On VM, this call is not supported. If issued, the call fails with return code AFTP_RC_FAIL_NO_RETRY.</li>
<li>
On MVS, partitioned data sets act as the directory structure. This call creates a partitioned data set with the name specified.</li>
</ul>
<p>
See <a href="aftpc01_4nw0.htm">AFTP File and Directory Concept</a> for details on how the directory concept is handled for supported operating systems.</p>
<p>
<b>AFTP_ENTRY aftp_create_dir(<br>
IN AFTP_HANDLE_TYPE </b><i>connection_id</i><b>,<br>
IN unsigned char AFTP_PTR </b><i>directory</i><b>,<br>
IN AFTP_LENGTH_TYPE </b><i>length</i><b>,<br>
OUT AFTP_RETURN_CODE_TYPE AFTP_PTR </b><i>return_code</i><b><br>
);</b></p>
<h4>Parameters</h4>
<dl>
<dt>
<i>connection_id</i></dt>
<dd>
An AFTP connection object originally created with <a href="aftpc02_2nao.htm"><b>aftp_create</b></a>.</dd>
<dt>
<i>directory</i></dt>
<dd>
The name of the directory to be created. The format of this name can be either the native syntax on the AFTP server or the AFTP common naming convention described in the <i>APPC Application Suite User's Guide</i>. The directory specified can be either an absolute or relative path name.</dd>
<dt>
<i>length</i></dt>
<dd>
The length of the <i>directory</i> parameter in bytes.</dd>
<dt>
<i>return_code</i></dt>
<dd>
The return code issued for this function. See <a href="aftpc03_5h0w.htm">AFTP Return Codes</a> for the list of possible return codes.
</dd>
</dl>
<h4>Example</h4>
<pre><code>{
    AFTP_HANDLE_TYPE              connection_id;
    AFTP_RETURN_CODE_TYPE         aftp_rc;

    /* The value used for filespec will vary based on platform:
     *   VM  not supported
     *   MVS PDS common naming:  directory="/user.clist/"
     *   MVS PDS native naming:  directory="'user.clist'"
     *   NT native naming:     directory="d:\\newdir"
     *   NT common naming:     directory="/d:/newdir"
     */
    static unsigned char AFTP_PTR directory = "/user.clist/";


    /*
     * Before issuing the example call, you must have:
     *    a connection_id, use:         aftp_create()
     *    a connection to server, use:  aftp_connect()
     */

    aftp_create_dir(
        connection_id,
        directory,
        (AFTP_LENGTH_TYPE)strlen(directory),
        &amp;aftp_rc);

    if (aftp_rc != AFTP_RC_OK) {
        fprintf(stderr, "Error creating directory.\n");
    }
}
 </code></pre>
<h4>Line Flows</h4>
<p>
The directory name is sent to the AFTP server and the call waits for a response indicating the success or failure of the create directory operation.</p>
<p>&nbsp;</p></body>
</HTML>
