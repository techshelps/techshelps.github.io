<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MS-DOS Considerations</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_sna_ms_dos_considerations_lua"></a>MS-DOS Considerations</h2>
<p>
This section summarizes information for developing LUA applications on a Microsoft® MS-DOS® system. Only RUI is supported on MS-DOS; SLI is not supported on MS-DOS.
<dl>
<dt>
<b>Implementing semaphores</b></dt>
<dd>
RUI signals that an asynchronous verb has completed by setting<i> </i><b>lua_post_handle</b> to zero. For example:
<pre><code>/*Set lua_post_handle to non-zero value  */
rui_innit.common.lua_post_handle = 1l ;

/*Issue RUI verb  */
RUI  (&amp;rui_init)  ;

/*Check to see if verb will complete asynchronously  */
if (rui_init.common.lua_flag2.async)
{
/*Verb will complete asynchronously  */
 </code></pre>

<p>
To wait for the verb to complete, loop until <b>lua_post_handle</b> is cleared. For example:

<pre><code>while (rui_init.common.lua_post_handle  != 0)
{
/* The application is free to do other work in this loop  */
}

/* The loop has exited, so the verb completed  */
 </code></pre>

<p>
Keep in mind the following guidelines:

<ul>
<li>
The application should set <b>lua_post_handle</b> to zero before it issues a verb.</li>
<li>
A single MS-DOS application can run up to 16 sessions, but memory limitations can cause problems if the application sends anything except very small RUs. A more realistic limit is two to three sessions per application.</li>
</ul>
</dd>
<dt>
<b>Load-time linking</b></dt>
<dd>
To be dynamically linked to LUA at load time, you must link the application to DOSACS.LIB, which contains the entry-point linkage information.</dd>
<dt>
<b>Packing</b></dt>
<dd>
VCBs are not packed. As a result, DWORDs and WORDs are on WORD boundaries and BYTEs are on BYTE boundaries. This means, for example, that there is not a 2-byte gap between the primary and secondary return codes. VCBs should be accessed using the structures provided and compiler options that change this packing method should be avoided.
</dd>
</dl>
<p>&nbsp;</p></body>
</HTML>
