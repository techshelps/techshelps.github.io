<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Integrated Link Service Configuration and Reconfiguration</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_sna_integrated_link_service_configuration_and_reconfiguration_dev"></a>Integrated Link Service Configuration and Reconfiguration</h2>
<p>
In SNA Server 2.<i>x</i>, the .INF script created a Windows NT service to run your link service DLL, installed the device driver, and prompted the user for initial configuration information, in addition to supporting subsequent reconfiguration. In SNA Server 3.0 and later, the initial configuration functions are performed by your configuration DLL running in the context of SNA Explorer. </p>
<p>
After your link service has been created, SNA Explorer must be able to locate its configuration DLL when the operator wishes to reconfigure the link service. To support this feature, when your configuration DLL initially creates the link service, it must put a new value in the registry of the target server as follows:</p>
<p>
<b>SYSTEM\CurrentControlSet\Services\<i>&lt;yourLinkService&gt;</i>\Parameters</b></p>
<p>
<b>DLLName</b>: REG_SZ: <i>&lt;configDllName&gt;</i></p>
<p>
where:</p>
<p>
<i>&lt;configDllName&gt;</i> is the file name and extension of the configuration DLL, for example, IBMSDCFG.DLL. No path is specified in the value. </p>
<p>
This value replaces <b>InfName</b>, which was used in SNA Server 2.<i>x</i> to name the path to the .INF file.</p>
<p>
Since SNA Explorer can be running on a management workstation remote from the target server, the configuration DLL must be able to create configuration information on the target server. The sample configuration DLL included with the SNA SDK sample files illustrates the utility functions available to perform these functions across a network connection on the target server. Also, since the management workstation may be of any CPU type supported by Windows NT, you must provide versions of the configuration DLL for each CPU type. SNA Explorer loads the appropriate CPU-type version of the configuration DLL over the network from \&lt;snaRoot&gt;\SYSTEM\HWSETUP\&lt;cpu&gt; on the target server as needed.</p>
<p>
<b>Note</b>  There is an alternate way of locating the Link Service Configuration DLL if the link services from the vendor were not included with the released SNA Server CD-ROM. Depending on the setup tool used by the vendor, the vendor's setup software may not be able to read the registry and locate the directory where link services should be installed. To resolve this problem, the SNA Manager scans the <b>LinkServicesInstalled</b> key prior to making the call to the Link Service Configuration DLL. The SNA Manager checks for a % character in the <i>configDllName</i> and if it exists <i>configDllName </i>will be interpreted differently than just the name of the configuration DLL. The following example illustrates this case:</p>
<p>
Under the <b>SYSTEM\CurrentControlSet\Services\&lt;yourLinkService&gt;\Parameters </b>key</p>
<p>
<b>DLLName</b>: REG_SZ: "share\%s\&lt;relative path and DLL Name&gt;</p>
<p>
If a %s string is found, then \\ServerName will be prepended and the CPU architecture string (i386 or Alpha) will be substituted for %s.</p>
<p>&nbsp;</p></body>
</HTML>
