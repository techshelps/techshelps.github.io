<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>AREXEC and AREXECD</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_sna_arexec_and_arexecd_cpic"></a>AREXEC and AREXECD</h2>
<p>
The sample code for these two TPs provides the ability to execute commands on a remote computer and to send the output back across the connection to the invoking TP.</p>
<h4>Setup</h4>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To set up AREXEC and AREXECD</h5>
<ol>
<li>
Create an appropriate APPC LU-LU-mode triplet.</li>
<li>
Set up a CPI-C symbolic destination name that contains the configured remote LU and mode. (The TP name for AREXECD is AREXECD.)</li>
<li>
Assign the local APPC LU to the AREXEC TP, either by using a registry entry of AREXEC:REG_SZ:<i>LocalLUAlias</i> in the <b>SnaBase\Parameters\Clients</b> key, or by assigning the local LU as the default local APPC LU for the user who will run AREXEC.</li>
</ol>
<h4>Input and Output</h4>
<p>
AREXEC is a console application. The syntax of its command line is</p>
<p>
<b>arexec</b> [<b>-m</b><i>mode</i>] [<b>-t</b><i>tpname</i>] <i>destination command</i></p>
<p>
where
<dl>
<dt>
<b>-m</b><i>mode</i></dt>
<dd>
Specifies the mode name. The default is #INTER.</dd>
<dt>
<b>-t</b><i>tpname</i></dt>
<dd>
Specifies the TP name.</dd>
<dt>
<i>destination</i></dt>
<dd>
Specifies the destination. Can be either a symbolic destination name or a partner LU name.</dd>
<dt>
<i>command</i></dt>
<dd>
Specifies the command string to execute on the remote computer.</dd>
</dl>
<p>
The <b>stdout</b> and <b>stderr</b> from the command executed at the remote end is sent across the link and printed to <b>stdout</b> on the invoking end.</p>
<h4>Operation</h4>
<p>
The AREXECD program is a Windows NT service, with the same routines as in APING, APINGD and multithreaded APINGD. The execution of the command and sending back of data are done in the routine <b>execute_and_send_output </b>in CPICPORT.C. It creates a named pipe and connects to the read end of the pipe. It then creates a process to run the command and gives that process a handle to the write end of the pipe as its <b>stdout</b> and <b>stderr</b>. Then the data is read from the pipe, and <a href="cpic03_94ir.htm"><b>Send_Data</b></a> is used to send it across the link.</p>
<p>&nbsp;</p></body>
</HTML>
