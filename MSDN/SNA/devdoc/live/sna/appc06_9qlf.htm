<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WinAPPCCancelAsyncRequest</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_sna_winappccancelasyncrequest_appc"></a>WinAPPCCancelAsyncRequest</h1>
<p>
The <b>WinAPPCCancelAsyncRequest</b> function cancels an outstanding <a href="appc06_66sj.htm"><b>WinAsyncAPPC</b></a>-based request.</p>
<p>
<b>int WINAPI</b><i> </i><b>WinAPPCCancelAsyncRequest(<br>
HANDLE</b><i> hAsyncTaskID<br>
</i><b>);</b></p>
<h4>Parameters</h4>
<dl>
<dt>
<i>hAsyncTaskID</i></dt>
<dd>
Supplied parameter. Specifies the asynchronous task to be canceled.
</dd>
</dl>
<h4>Return Values</h4>
<p>
The return value specifies whether the asynchronous request was canceled. If the value is zero, the request was canceled. Otherwise, the value is one of the following:
<dl>
<dt>
wappcinvalid</dt>
<dd>
An error code indicating that the specified asynchronous task identifier was invalid.</dd>
<dt>
wappcalready</dt>
<dd>
An error code indicating that the asynchronous routine being canceled has already completed.
</dd>
</dl>
<h4>Remarks</h4>
<p>
An asynchronous task previously initiated by issuing one of the <b>WinAsyncAPPC</b> or <b>WinAsyncAPPCEx </b>functions can be canceled prior to completion by issuing the <b>WinAPPCCancelAsyncRequest</b> function, specifying the asynchronous task identifier as returned by the initial function in <i>hAsyncTaskID</i>.</p>
<p>
If the outstanding verb relates to a conversation (for example, <a href="appc05b_7wbn.htm"><b>SEND_DATA</b></a> or <a href="appc05b_19er.htm"><b>RECEIVE_AND_WAIT</b></a>), the verb is purged and the session is closed. If the verb relates to a TP (for example, <a href="appc05b_0m77.htm"><b>RECEIVE_ALLOCATE</b></a> or <a href="appc04_0fs3.htm"><b>TP_STARTED</b></a>), the TP is ended. In both cases, while the implementation closes conversations and sessions as cleanly as possible, it does not flush send buffers, wait for confirmations, and so on. This call is synchronous, and after the processing described above is complete, a completion message is posted for the canceled verb.</p>
<p>
If an attempt to cancel an existing asynchronous <b>WinAsyncAPPC</b> routine fails with an error code of wappcalready, one of two things has occurred. Either the original routine has already completed and the application has dealt with the resulting message, or the original routine has already completed and the resulting message is still waiting in the application window queue.</p>
<p>&nbsp;</p></body>
</HTML>
