<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WinRUIGetLastInitStatus</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_sna_winruigetlastinitstatus_lua"></a>WinRUIGetLastInitStatus</h1>
<p>
The <b>WinRUIGetLastInitStatus</b> function enables an application to determine the status of an <a href="luac03_37z5.htm"><b>RUI_INIT</b></a>, so that the application can evaluate whether the <b>RUI_INIT</b> should be timed out. This extension can be used to initiate status reporting, terminate status reporting, or find the current status. For details, see the Remarks section.</p>
<pre><code><b>int WINAPI WinRUIGetLastInitStatus(
  DWORD</b><i> dwSid</i><b>,           </b>
<b>  HANDLE</b><i> hStatusHandle</i><b>,  </b>
<b>  DWORD</b><i> dwNotifyType</i><b>,    </b>
<b>  BOOL</b><i> bClearPrevious    </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dwSid</i></dt>
<dd>
Specifies the RUI session identifier of the session for which status will be determined. If <i>dwSid</i> is zero, <i>hStatusHandle</i> is used to report status on all sessions. Note that the <b>lua_sid</b> parameter in the <a href="luac03_37z5.htm"><b>RUI_INIT</b></a> VCB is valid as soon as the call to <a href="luac05_29b5.htm"><b>RUI</b></a> or <a href="luac05_5i8x.htm"><b>WinRUI</b></a> for the <b>RUI_INIT</b> returns.</dd>
<dt>
<i>hStatusHandle</i></dt>
<dd>
Specifies a handle used for signaling the application that the status for the session (specified by <i>dwSid</i>) has changed. Can be a window handle, an event handle, or NULL; <i>dwNotifyType</i> must be set accordingly:
<ul>
<li>
If <i>hStatusHandle</i> is a window handle, status is sent to the application through a window message. The message is obtained from <b>RegisterWindowMessage</b> using the string "WinRUI". The parameter <i>wParam</i> contains the session status (see Return Codes). Depending on the value of <i>dwNotifyType</i>, <i>lParam</i> contains either the RUI session identifier of the session, or the value of <b>lua_correlator</b> from the <a href="luac03_37z5.htm"><b>RUI_INIT</b></a> verb.</li>
<li>
If <i>hStatusHandle</i> is an event handle, when the status for the session specified by <i>dwSid</i> changes, the event is put into the signaled state. The application must then make a further call to <b>WinRUIGetLastInitStatus</b> to find out the new status. Note that the event should not be the same as one used for signaling completion of any RUI verb.</li>
<li>
If <i>hStatusHandle</i> is NULL, the status of the session specified by <i>dwSid</i> is returned in the return code. In this case, <i>dwSid</i> must not be zero unless <i>bClearPrevious</i> is TRUE. If <i>hStatusHandle</i> is NULL, <i>dwNotifyType</i> is ignored.</li>
</ul>
</dd>
<dt>
<i>dwNotifyType</i></dt>
<dd>
Specifies the type of indication required. This determines the contents of the <i>lParam</i> of the window message, and how <b>WinRUIGetLastInitStatus</b> interprets <i>hStatusHandle</i>. Allowed values are:
<dl>
<dt>
WLUA_NTFY_EVENT</dt>
<dd>
The <i>hStatusHandle</i> parameter contains an event handle.</dd>
<dt>
WLUA_NTFY_MSG_CORRELATOR</dt>
<dd>
The <i>hStatusHandle</i> parameter contains a window handle, and the <i>lParam</i> of the returned window message should contain the value of the <b>lua_correlator</b> field on the <a href="luac03_37z5.htm"><b>RUI_INIT</b></a>.</dd>
<dt>
WLUA_NTFY_MSG_SID</dt>
<dd>
The <i>hStatusHandle</i> parameter contains a window handle, and the <i>lParam</i> of the returned window message should contain the LUA session identifier.
</dd>
</dl>
</dd>
<dt>
<i>bClearPrevious</i></dt>
<dd>
If TRUE, status messages are no longer sent for the session identified by <i>dwSid</i>. If <i>dwSid</i> is zero, status messages are no longer sent for any session. If <i>bClearPrevious</i> is TRUE, <i>hStatusHandle</i> and <i>dwNotifyType</i> are ignored.
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
WLUASYSNOTREADY</dt>
<dd>
SNABASE is not running.</dd>
<dt>
WLUANTFYINVALID</dt>
<dd>
The <i>dwNotifyType</i> parameter is invalid.</dd>
<dt>
WLUAINVALIDHANDLE</dt>
<dd>
The <i>hStatusHandle</i> parameter does not contain a valid handle.</dd>
<dt>
WLUASTARTUPNOTCALLED</dt>
<dd>
<a href="luac05_0bs1.htm"><b>WinRUIStartup</b></a> has not been called.</dd>
<dt>
WLUALINKINACTIVE</dt>
<dd>
The link to the host is not yet active.</dd>
<dt>
WLUALINKACTIVATING</dt>
<dd>
The link to the host is being activated.</dd>
<dt>
WLUAPUINACTIVE</dt>
<dd>
The link to the host is active, but no ACTPU has yet been received.</dd>
<dt>
WLUAPUACTIVE</dt>
<dd>
An ACTPU has been received.</dd>
<dt>
WLUAPUREACTIVATED</dt>
<dd>
The PU has been reactivated.</dd>
<dt>
WLUALUINACTIVE</dt>
<dd>
The link to the host is active, and an ACTPU has been received, but no ACTLU has been received.</dd>
<dt>
WLUALUACTIVE</dt>
<dd>
The LU is active.</dd>
<dt>
WLUALUREACTIVATED</dt>
<dd>
The LU has been reactivated.</dd>
<dt>
WLUAUNKNOWN</dt>
<dd>
The session is in an unknown status. (This is an internal error.)</dd>
<dt>
WLUAGETLU</dt>
<dd>
The session is waiting for an <a href="3270c4_90j4.htm"><b>Open(SSCP)</b></a> response from the node.</dd>
<dt>
WLUASIDINVALID</dt>
<dd>
The SID specified does not match any known by the RUI.</dd>
<dt>
WLUASIDZERO</dt>
<dd>
The <i>hStatusHandle</i> parameter is NULL and <i>bClearPrevious</i> is FALSE, but <i>dwSid</i> is zero.</dd>
<dt>
WLUAGLOBALHANDLER</dt>
<dd>
The <i>dwSid</i> parameter is zero, and messages from all sessions will be notified. (This is a normal return code, not an error.)
</dd>
</dl>
<h4>Remarks</h4>
<p>
This extension is intended to be used with either a window handle or an event handle to enable asynchronous notification of status changes. It can also be used alone to find out the current status of a session.</p>
<h4>With a window handle</h4>
<p>
There are two ways to use this extension with a window handle:</p>
<pre><code>WinRUIGetLastInitStatus(Sid,Handle,WLUA_NTFY_MSG_CORRELATOR,FALSE);
 </code></pre>
<p>
—or—</p>
<pre><code>WinRUIGetLastInitStatus(Sid,Handle,WLUA_NTFY_MSG_SID,FALSE);
 </code></pre>
<p>
With this implementation, changes in status are reported by a window message sent to the window handle specified. If WLUA_NTFY_MSG_CORRELATOR is specified, the <i>lParam</i> field in the window message contains the <b>lua_correlator</b> field for the session. If WLUA_NTFY_MSG_SID is specified, the <i>lParam</i> field in the window message contains the LUA session identifier for the session.</p>
<p>
When the extension has been used with a window handle, use the following to cancel status reporting:</p>
<pre><code>WinRUIGetLastInitStatus(Sid,NULL,0,TRUE);
 </code></pre>
<p>
For this implementation, note that if <i>Sid</i> is nonzero, status is only reported for that session. If <i>Sid</i> is zero, status is reported for all sessions.</p>
<h4>With an event handle</h4>
<p>
To use this extension with an event handle, implement it as follows:</p>
<pre><code>WinRUIGetLastInitStatus(Sid,Handle,WLUA_NOTIFY_EVENT,FALSE);
 </code></pre>
<p>
The event whose handle is given will be signaled when a change in state occurs. Since no information is returned when an event is signaled, a further call must be issued to find out the status.</p>
<pre><code>Status = WinRUIGetLastInitStatus(Sid,NULL,0,0,FALSE);
 </code></pre>
<p>
Note that in this case, a <i>Sid</i> must be specified.</p>
<p>
When the extension has been used with an event handle, use the following to cancel the reporting of status:</p>
<pre><code>WinRUIGetLastInitStatus(Sid,NULL,0,TRUE);
 </code></pre>
<h4>To query current status</h4>
<p>
To use this extension to query the current status of a session, it is not necessary to use an event or window handle. Instead, use the following:</p>
<pre><code>Status = WinRUIGetLastInitStatus(Sid,NULL,0,0,FALSE);
 </code></pre>
<h4>See Also</h4>
<p>
<a href="luac05_29b5.htm"><b>RUI</b></a><b>, <a href="luac03_37z5.htm">RUI_INIT</a></b>, <a href="luac05_5i8x.htm"><b>WinRUI</b></a>, <a href="luac05_0bs1.htm"><b>WinRUIStartup</b></a></p>
<p>&nbsp;</p></body>
</HTML>
