<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Open(PLU) OK Response</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_sna_open_plu_ok_response_3270"></a>Open(PLU) OK Response</h1>
<p>
The <b>Open(PLU) OK Response</b> message flows from the application to the node. It is used with a PLU connection.</p>
<pre><code>struct Open(PLU) OK Response {
    PTRBFHDR  nxtqptr;
    PTRBFELT  hdreptr;
    CHAR      numelts;
    CHAR      msgtype;
    CHAR      srcl;
    CHAR      srcp;
    INTEGER   srci;
    CHAR      destl;
    CHAR      destp;
    INTEGER   desti;
    CHAR      ophdr.openqual;
    CHAR      ophdr.opentype;
    CHAR      ophdr.appltype;
    CHAR      ophdr.opluno;
    INTEGER   ophdr.opresid;
    INTEGER   ophdr.icreditr;
    INTEGER   ophdr.icredits;
    CHAR      ophdr.opninfo1;
}; 
 </code></pre>
<p>
<b>Element 1</b></p>
<pre><code>struct Open(PLU) OK Response {
    PTRBFELT hdreptr-&gt;elteptr;
    INTEGER hdreptr-&gt;startd;
    INTEGER hdreptr-&gt;endd;
    CHAR hdreptr-&gt;trpad;
    CHAR[268] hdreptr-&gt;dataru;
}; 
 </code></pre>
<p>
<b>Element 2</b></p>
<pre><code>struct Open(PLU) OK Response {
    PTRBFELT   hdreptr-&gt;elteptr-&gt;elteptr;
    INTEGER    hdreptr-&gt;elteptr-&gt;startd;
    INTEGER    hdreptr-&gt;elteptr-&gt;endd;
    CHAR       hdreptr-&gt;elteptr-&gt;trpad;
    CHAR[268]  hdreptr-&gt;elteptr-&gt;dataru;
}; 
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>nxtqptr</b></dt>
<dd>
Pointer to next buffer header.</dd>
<dt>
<b>hdreptr</b></dt>
<dd>
Pointer to first buffer element.</dd>
<dt>
<b>numelts</b></dt>
<dd>
Number of buffer elements (0x02).</dd>
<dt>
<b>msgtype</b></dt>
<dd>
Message type OPENMSG (0x01).</dd>
<dt>
<b>srcl</b></dt>
<dd>
Source locality.</dd>
<dt>
<b>srcp</b></dt>
<dd>
Source partner.</dd>
<dt>
<b>srci</b></dt>
<dd>
Source index.</dd>
<dt>
<b>destl</b></dt>
<dd>
Destination locality.</dd>
<dt>
<b>destp</b></dt>
<dd>
Destination partner.</dd>
<dt>
<b>desti</b></dt>
<dd>
Destination index.</dd>
<dt>
<b>ophdr.openqual</b></dt>
<dd>
Open qualifier RSPOK (0x02).</dd>
<dt>
<b>ophdr.opentype</b></dt>
<dd>
Open type LUSEC (0x02).</dd>
<dt>
<b>ophdr.appltype</b></dt>
<dd>
Application program interface type
<p>
0x02 (FMI application)
</dd>
<dt>
<b>ophdr.opluno</b></dt>
<dd>
Logical unit number.</dd>
<dt>
<b>ophdr.opresid</b></dt>
<dd>
Resource identifier.</dd>
<dt>
<b>ophdr.icreditr</b></dt>
<dd>
Initial credit for flow from application to local node: zero.</dd>
<dt>
<b>ophdr.icredits</b></dt>
<dd>
Initial credit for flow from local node to application; only valid if APPLPAC = 0x01.</dd>
<dt>
<b>ophdr.opninfo1</b></dt>
<dd>
Negotiable bind indicator
<p>
Bind is not negotiable  (0x00)<br>
Bind is negotiable        (0x01)

</dd>
</dl>
<p>
<b>Element 1</b>
<dl>
<dt>
<b>hdreptr–&gt;elteptr</b></dt>
<dd>
Pointer to buffer element.</dd>
<dt>
<b>hdreptr–&gt;startd</b></dt>
<dd>
Start of data in this buffer element (1).</dd>
<dt>
<b>hdreptr–&gt;endd</b></dt>
<dd>
End of data in this buffer element.</dd>
<dt>
<b>hdreptr–&gt;trpad</b></dt>
<dd>
Reserved.</dd>
<dt>
<b>hdreptr–&gt;dataru</b></dt>
<dd>
Data RU, as follows:
<dl>
<dt>
<b>dataru[0–9]</b></dt>
<dd>
Source name.</dd>
<dt>
<b>dataru[10–19]</b></dt>
<dd>
Destination name.</dd>
<dt>
<b>dataru[20]</b></dt>
<dd>
Segment delivery option
<p>
Do not deliver RU segments  (0x00)<br>
Deliver RU segments            (0x01)
</dd>
<dt>
<b>dataru[21]</b></dt>
<dd>
Application pacing option
<p>
No application pacing      (0x00)<br>
Application pacing          (0x01)
</dd>
<dt>
<b>dataru[22]</b></dt>
<dd>
Application cancel option: Cancel is generated by
<p>
local node    (0x00)<br>
application   (0x01)
</dd>
<dt>
<b>dataru[23]</b></dt>
<dd>
Application transaction numbers option: transaction numbers are
<p>
not supported by application    (0x00)<br>
supported by application         (0x01)
</dd>
<dt>
<b>dataru[24]</b></dt>
<dd>
BIND table index:
<p>
BIND_TABLE_INDEX_PRT (1) (printer session)<br>
BIND_TABLE_INDEX_CRT (2) (display session)

</dd>
</dl>
</dd>
</dl>
<p>
<b>Element 2</b>
<dl>
<dt>
<b>hdreptr–&gt;elteptr–&gt;elteptr</b></dt>
<dd>
Pointer to buffer element (NIL).</dd>
<dt>
<b>hdreptr–&gt;elteptr–&gt;startd</b></dt>
<dd>
Start of data in this buffer element (13).</dd>
<dt>
<b>hdreptr–&gt;elteptr–&gt;endd</b></dt>
<dd>
End of data in this buffer element.</dd>
<dt>
<b>hdreptr–&gt;elteptr–&gt;trpad</b></dt>
<dd>
Reserved.</dd>
<dt>
<b>hdreptr–&gt;elteptr–&gt;dataru</b></dt>
<dd>
Data RU, as follows:</dd>
<dt>
<b>dataru[13]</b></dt>
<dd>
The BIND RU.
</dd>
</dl>
<h4>Remarks</h4>
<ul>
<li>
The <b>Open(PLU) OK Response</b> message consists of a buffer header, an initial element containing the source and destination names and CICB, followed by elements containing the BIND RU received from the host.</li>
<li>
The application should reflect the source and destination LPIs and the source and destination names from the <a href="3270c4_0gvk.htm"><b>Open(PLU) Request</b></a> and must supply the I part of the source LPI.</li>
<li>
The fields from segment delivery option to bind table index (in the first element) are referred to in the text as the PLU connection information control block (CICB). See <a href="3270c3_41gw.htm">Opening the PLU Connection</a> for further information on the contents of the CICB.</li>
<li>
The BIND RU can be up to 256 bytes in length.</li>
<li>
For LUA, the BIND RU is not preceded by its TH and RH (contrast with the <a href="3270c4_0gvk.htm"><b>Open(PLU) Request</b></a>, where the TH and RH are included).</li>
<li>
As in the <b>Open(PLU) Request</b>, the <b>icredits</b> value is in units of chunks if chunking is being used.</li>
</ul>
<p>&nbsp;</p></body>
</HTML>
