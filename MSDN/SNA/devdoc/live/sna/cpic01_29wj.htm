<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Windows CPI-C Asynchronous Support</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_sna_windows_cpi_c_asynchronous_support_cpic"></a>Windows CPI-C Asynchronous Support</h2>
<p>
A program that issues a call and does not regain control until the call completes cannot perform any other operations. This type of operation, referred to as blocking, is not suited to a server application designed to handle multiple requests from many clients. Asynchronous call completion returns the initial call immediately so the application can continue with other processes.</p>
<p>
Windows CPI-C support related to asynchronous communications includes the following calls and extensions:</p>
<p class=indent1>
<a href="cpic03_5uoz.htm"><b>Set_Processing_Mode</b></a></p>
<p class=indent1>
<a href="cpic03_3kir.htm"><b>Specify_Windows_Handle</b></a></p>
<p class=indent1>
<a href="cpic03_6un7.htm"><b>Wait_For_Conversation</b></a></p>
<p class=indent1>
<a href="cpic04_51yb.htm"><b>WinCPICExtractEvent</b></a></p>
<p class=indent1>
<a href="cpic04_55pf.htm"><b>WinCPICIsBlocking</b></a></p>
<p class=indent1>
<a href="cpic04_4l2b.htm"><b>WinCPICSetBlockingHook</b></a></p>
<p class=indent1>
<a href="cpic04_0yw3.htm"><b>WinCPICSetEvent</b></a></p>
<p class=indent1>
<a href="cpic04_0jhf.htm"><b>WinCPICUnhookBlockingHook</b></a></p>
<p>
Two methods under Windows NT and Windows 95 are available for asynchronous verb completion:
<ul>
<li>
Message posting using window handles</li>
<li>
Waiting on Win32® events</li>
</ul>
<p>
The traditional method uses messages posted to a window handle to notify an application of verb completion. This method using window handles and messages is also supported on Windows 3.x. </p>
<p>
Asynchronous support using message posting is appended to the <a href="cpic03_5uoz.htm"><b>Set_Processing_Mode</b></a> call and allows an application to be notified of call completion on a window handle. Calling <b>RegisterWindowsMessage</b> with "WinAsyncCPIC" as the string, an application passes a window handle by which the application is notified of call completion. The application then makes the CPI-C call, and when it completes a message is posted to the window handle that was passed, notifying the application that the call is complete.</p>
<p>
With the exception of an asynchronous <a href="cpic03_3vhf.htm"><b>Receive</b></a> call that can issue certain other calls while pending, a conversation can have only one incomplete operation at any time. For more information on using an asynchronous <b>Receive</b> call, see <a href="cpic01_5uhv.htm">Using Asynchronous Call Completion</a>. In the case of an incomplete operation, the program can issue <a href="cpic03_6un7.htm"><b>Wait_For_Conversation</b></a> to test for its completion or <a href="cpic03_017n.htm"><b>Cancel_Conversation</b></a> to end the conversation and the incomplete operation.</p>
<p>
A second method using Win32 events for notification is supported on Microsoft® SNA Server version 3.0. The extension functions using Win32 events (<a href="cpic04_0yw3.htm"><b>WinCPICSetEvent</b></a> and <a href="cpic04_51yb.htm"><b>WinCPICExtractEvent</b></a>)<b> </b>will operate only on Windows NT and Windows 95. If an event has been registered with the conversation using <b>WinCPICSetEvent</b>, then an application can call the Win32 <b>WaitForSingleObject</b> or <b>WaitForMultipleObjects</b> function to wait to be notified of the completion of the verb. </p>
<p>
The only Windows extension functions required for Windows CPI-C are for initialization (<a href="cpic04_3rqb.htm"><b>WinCPICStartup</b></a>) and termination (<a href="cpic04_455v.htm"><b>WinCPICCleanup</b></a>) purposes. Depending on your application, other Windows extensions for handling asynchronous verb completion can be useful, but they are not required. An example of how to use Windows CPI-C asynchronous calls and Windows extensions appears in <a href="cpic01_5uhv.htm">Using Asynchronous Call Completion</a>. A complete description of all Windows CPI-C calls and extensions appears in <a href="cpic03_4w83.htm">CPI-C Calls</a> and <a href="cpic04_5xcz.htm">Extensions for the Windows Environment</a>.</p>
<p>&nbsp;</p></body>
</HTML>
