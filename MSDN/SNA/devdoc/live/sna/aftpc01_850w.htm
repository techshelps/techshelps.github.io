<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Standard Types</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_sna_standard_types_aftp"></a>Standard Types</h1>
<p>
Type definitions are available for many parameters to the AFTP API calls. For example, the AFTP type <b>AFTP_LENGTH_TYPE</b> is an alias for the C type <b>unsigned long</b>.</p>
<p>
Use the AFTP types instead of the corresponding C types. Doing so protects you from changes to the parameters in future releases. If you use the AFTP types, you only need to recompile your code to use new API definitions. If you use the C types, you need to modify your program source code to reflect changes to new C types.</p>
<p>
The AFTP API avoids complex structures and pointers to structures for type definitions. These complex structures might not be supported in all languages. The only exception is the string construct that is found in many languages.</p>
<p>
The AFTP standard types are shown in the following table.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Type</th>
<th align=left width=52%>Description</th>
</tr>
<tr valign=top>
<td width=48%><b>AFTP_HANDLE_TYPE</b></td>
<td width=52%>AFTP connection object identifier</td>
</tr>
<tr valign=top>
<td width=48%><b>AFTP_ALLOCATION_SIZE_TYPE</b></td>
<td width=52%>File allocation size</td>
</tr>
<tr valign=top>
<td width=48%><b>AFTP_BLOCK_SIZE_TYPE</b></td>
<td width=52%>File block size</td>
</tr>
<tr valign=top>
<td width=48%><b>AFTP_BOOLEAN_TYPE</b></td>
<td width=52%>Boolean type (FALSE=0, TRUE=1)</td>
</tr>
<tr valign=top>
<td width=48%><b>AFTP_DATA_TYPE_TYPE</b></td>
<td width=52%>File data types that can be transferred</td>
</tr>
<tr valign=top>
<td width=48%><b>AFTP_DATE_MODE_TYPE</b></td>
<td width=52%>Date mode used for transferred files</td>
</tr>
<tr valign=top>
<td width=48%><b>AFTP_DETAIL_LEVEL_TYPE </b></td>
<td width=52%>Amount of information to be output when AFTP generates error messages</td>
</tr>
<tr valign=top>
<td width=48%><b>AFTP_FILE_TYPE_TYPE</b></td>
<td width=52%>Kind of file (directory or file) listed by AFTP </td>
</tr>
<tr valign=top>
<td width=48%><b>AFTP_INFO_LEVEL_TYPE</b></td>
<td width=52%>Amount of information listed for a file by AFTP</td>
</tr>
<tr valign=top>
<td width=48%><b>AFTP_LENGTH_TYPE</b></td>
<td width=52%>Size of input buffers, and actual returned length of buffers in AFTP</td>
</tr>
<tr valign=top>
<td width=48%><b>AFTP_RETURN_CODE_TYPE</b></td>
<td width=52%>Return codes output by AFTP</td>
</tr>
<tr valign=top>
<td width=48%><b>AFTP_RECORD_FORMAT_TYPE</b></td>
<td width=52%>File record formats</td>
</tr>
<tr valign=top>
<td width=48%><b>AFTP_RECORD_LENGTH_TYPE</b></td>
<td width=52%>File record length</td>
</tr>
<tr valign=top>
<td width=48%><b>AFTP_SECURITY_TYPE</b></td>
<td width=52%>APPC security types</td>
</tr>
<tr valign=top>
<td width=48%><b>AFTP_TRACE_LEVEL_TYPE</b></td>
<td width=52%>Levels of tracing information output by AFTP</td>
</tr>
<tr valign=top>
<td width=48%><b>AFTP_VERSION_TYPE</b></td>
<td width=52%>AFTP program version numbers</td>
</tr>
<tr valign=top>
<td width=48%><b>AFTP_WRITE_MODE_TYPE</b></td>
<td width=52%>Different ways that AFTP can write to a file</td>
</tr>
</table><br>
<p>&nbsp;</p></body>
</HTML>
