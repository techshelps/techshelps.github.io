<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GetChunk Method</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_sna_getchunk_method_oledb"></a>GetChunk Method</h1>
<p>
The <b>GetChunk</b> method on a Field object returns all or a portion of the contents of a large text or binary data Field object.</p>
<pre><code><b>variable</b> <b>=</b> <b>field.GetChunk(</b> <i>Size</i> <b>)</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>Size</i></dt>
<dd>
This parameter specifies a Long expression equal to the number of bytes or characters to be retrieved.
</dd>
</dl>
<h4>Return Values</h4>
<p>
A Variant.</p>
<h4>Remarks</h4>
<p>
The <b>GetChunk</b> method on a Field object is used to retrieve part or all of its long binary or character data. In situations where system memory is limited, the <b>GetChunk</b> method can be used to manipulate long values in portions rather than in their entirety.</p>
<p>
The data that a <b>GetChunk</b> method returns is assigned to a variable. If the <i>Size </i>parameter is greater than the remaining data, the <b>GetChunk</b> method returns only the remaining data without padding the variable with empty spaces. If the Field object is empty, the <b>GetChunk</b> method returns Null.</p>
<p>
Each subsequent <b>GetChunk</b> method call retrieves data starting from where the previous <b>GetChunk</b> call left off. However, if you are retrieving data from one field and then set or read the value of another field in the current record, ADO assumes you are finished retrieving data from the first field. If the <b>GetChunk</b> method is called on the first field again, ADO interprets the call as a new <b>GetChunk</b> operation and starts reading from the beginning of the data. Accessing Field objects in other Recordset objects (that are not clones of the first Recordset object) will not disrupt <b>GetChunk</b> operations.</p>
<p>
If the <b>adFldLong</b> bit in the <b>Attributes</b> property of a Field object is set to <b>True</b>, the <b>GetChunk</b> method can be used for that Field object.</p>
<p>
If there is no current record when the <b>GetChunk</b> method is invoked on a Field object, error 3021 (no current record) occurs.</p>
<p>&nbsp;</p></body>
</HTML>
