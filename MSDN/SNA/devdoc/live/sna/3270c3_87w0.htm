<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Bracket Initiation</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_sna_bracket_initiation_3270"></a>Bracket Initiation</h3>
<p>
While a session is in the between-bracket state, contention exists. Either the application or the host PLU can attempt to initiate a bracket, as follows:
<ul>
<li>
The application initiates a bracket by sending a <a href="3270c4_4eeo.htm"><b>Data</b></a> message with the BBI application flag and ACKRQD set while in the between-bracket state. The local node sends a request corresponding to the <b>Data</b> message to the host PLU. The application has successfully initiated a bracket and is in the in-bracket state. Flip-flop protocols are now in force until the bracket is terminated.</li>
<li>
The application initiates a bracket by sending a <b>Status-Control(LUSTAT)</b> with the BBI application flag set while in the between-bracket state. The local node sends an LUSTAT request to the host PLU. The application has successfully initiated a bracket and is in the in-bracket state. Flip-flop protocols are now in force until the bracket is terminated.</li>
<li>
The host PLU sends a BID request while in the between-bracket state. The local node sends a <b>Status-Control(BID)</b> with ACKRQD to the application (see <a href="3270c3_11ps.htm"><b>Status-Control</b> Message</a>). The application replies with a <b>Status-Control(BID) Acknowledge</b>, to indicate that it is willing to accept a bracket. The local node sends a positive response to the BID request. The host PLU has successfully initiated a bracket, and the application's state is in-bracket, with flip-flop protocols applying until the bracket is terminated.</li>
<li>
The host PLU sends data in an RU carrying the BB indicator in the RH while in the between-bracket state. The local node presents this method of initiating a bracket in the same way as if the host PLU had initiated the bracket with BID. The local node sends a <b>Status-Control(BID)</b> with ACKRQD to the application. The application replies with a <b>Status-Control(BID) Acknowledge</b> to indicate that it is willing to accept the bracket. The local node sends the <a href="3270c4_4eeo.htm"><b>Data</b></a> message corresponding to the RU to the application and sends a positive response to the data RU. The host PLU has successfully initiated a bracket, and the application's state is in-bracket, with flip-flop protocols applying until the bracket is terminated.</li>
<li>
The host PLU sends an LUSTAT request carrying the BB indicator in the RH. The local node presents this method of initiating a bracket in the same way as if the host PLU had initiated the bracket with BID. The local node sends a <b>Status-Control(BID)</b> with ACKRQD to the application. The application replies with a <b>Status-Control(BID) Acknowledge</b> to indicate that it is willing to accept the bracket. The local node sends a <b>Status-Control(LUSTAT)</b> to the application, which requires an acknowledgment. The host PLU has successfully initiated a bracket, and the application's state is in-bracket, with flip-flop protocols applying until the bracket is terminated.</li>
<li>
The host attempts to initiate a bracket using a BID request or an RU carrying BB, which the local node sends to the application as a <b>Status-Control(BID)</b>, but the application cannot accept the bracket. The application should send a negative <b>Status-Control(BID)</b> response with an appropriate sense code. The local node sends a negative response to the BID carrying the sense code supplied by the application. The application's state is still between-bracket. The application should use one of the following sense codes:<p class=indent1>
0x081B if it has already committed resources for an inbound transfer; for example, a terminal operator has begun typing.</p>
<p class=indent1>
0x0814 if it currently cannot begin a bracket but will notify the host when resources become available; for example, a 3270 printer is being used for local copy in between-bracket printer sharing mode. At a later stage when the resources become available, the application should temporarily reserve the resources and send a <b>Status-Control(RTR)</b> to the local node. If the host rejects the RTR, the local node returns a <b>Status-Control(RTR) Negative-Acknowledge-1</b> response, and the application can release the resources. Otherwise, the host attempts to initiate a bracket that the application must now accept.</p>
</li>
<li>
Where the application has successfully initiated a bracket, a bracket race may occur due to the host PLU attempting to initiate a bracket. The application gets a <b>Status-Control(BID) Request</b>, which it should reject with 0x080B or 0x0813. The application retains direction after race negative responses (see <a href="3270c3_95kg.htm">Recovery</a>). The application's bracket state remains as in-bracket.</li>
</ul>
<p>
The application needs to be aware of one further complication in bracket initiation. All the above cases relate to sessions whose bracket reset state is between-bracket; that is, a state of contention exists, and either half-session can attempt to begin a bracket.</p>
<p>
However, the BIND parameters for the session can specify a bracket reset state of in-bracket. Where the bracket reset state is in-bracket, one half-session is considered to have already successfully initiated a bracket. Flip-flop protocols will then apply until a <b>Status-Session(BETB)</b> is received, at which time the session reverts to a contention state and bracket initiation proceeds as described above.</p>
<p>
The application must set its bracket state when the PLU connection is opened (that is, on receipt of the <a href="3270c4_6e40.htm"><b>Open(PLU) OK Confirm</b></a> message) and reset it each time the session is reset (that is, after receipt of a <b>Status-Control(CLEAR) Request</b>). The appropriate bracket reset state for the session is supplied to the application in the BICB on the <a href="3270c4_6e40.htm"><b>Open(PLU) OK Confirm</b></a> message.</p>
<p>
The following six figures illustrate bracket initiation protocols between the local node and the application and how those protocols relate to the underlying SNA protocols.</p>
<p>
In the first illustration, the application initiates a bracket by sending an inbound chain with the BBI application flag set when its state is between-bracket. The application's state is in-bracket until it receives a <b>Status-Session(BETB)</b>. (If the application can send RQE chains, a bracket can be opened by sending an RQE chain.)</p>
<p>
<img src="images/32703k.gif" border=0></p>
<p>
In the following illustration, the application initiates a bracket by sending a <b>Status-Control(LUSTAT)</b> with the BBI (begin bracket indicator) application flag set when its state is between-bracket. The application's state is in-bracket until it receives a <b>Status-Session(BETB)</b>. The LUSTAT can be sent NOACKRQD (that is, RQE) if required.</p>
<p>
<img src="images/32703ka.gif" border=0></p>
<p>
In the following illustration, the host initiates a bracket by sending BID, which the application accepts. The application's state is in-bracket and the host can send.</p>
<p>
<img src="images/32703kb.gif" border=0></p>
<p>
In the following illustration, the host PLU initiates a bracket by sending a request with BB (begin bracket), which the application accepts. The application's state is in-bracket, and the host can send.</p>
<p>
<img src="images/32703kc.gif" border=0></p>
<p>
In the following illustration, the host initiates a bracket by sending an LUSTAT with BB, which the application accepts. The application's state is in-bracket, and the host can send.</p>
<p>
<img src="images/32703kd.gif" border=0></p>
<p>
In the following illustration, the host and application both attempt to initiate a bracket in between-bracket state; the application rejects the host bids with sense code 0x0813, and the local node delivers the application's data. After sending the data, the application's state is in-bracket, and the application can send.</p>
<p>
<img src="images/32703ke.gif" border=0></p>
<p>&nbsp;</p></body>
</HTML>
