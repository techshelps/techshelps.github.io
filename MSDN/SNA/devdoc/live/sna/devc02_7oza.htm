<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Sample Code for SNALinkDispatchProc</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_sna_sample_code_for_snalinkdispatchproc_dev"></a>Sample Code for SNALinkDispatchProc</h1>
<p>
This section contains outline source code for the link dispatcher function <a href="epoints_82ba.htm"><b>SNALinkDispatchProc</b></a>.</p>
<pre><code>/**********************************************************************/
/* Firstly, include the SNA Server header files                       */
/**********************************************************************/
#include &lt;sna_dlc.h&gt;
#include &lt;sna_cnst.h&gt;
#include &lt;trace.h&gt;

/**********************************************************************/
/* The link dispatcher routine - SNALinkDispatchProc                  */
/**********************************************************************/
VOID SNALinkDispatchProc (msgptr, function, locality)
PTRBFHDR msgptr;
INTEGER  function;
INTEGER  locality;
{
  INTEGER     discard_buff;
  COM_ENTRY("Ldisp");
  if (msgptr != NULL)
  {
    TRACE4()"received message from local node"));
    discard_buff = FALSE;
    switch (msgptr-&gt;msgtype)
    {
      case OPENMSG:
             /* process the OPEN message */
             break;
      case CLOSEMSG:
             /* process the CLOSE message */
             break;
      case DLCDATA:
             /* Data to be sent on link */
             break;
      case DLCSTAT:
             /* Switch on the sub-type of the message */
             switch (msgptr-&gt;dshdr.dstype)
             {
               case STRESRCE :
                      /* call flow control processor */
                      break;
               case DLCSDXID:
                      /* call XID processor */
                      break;
               default:
                      discard_buff = TRUE;
                      break;
             }
             break;
      default:
             discard_buff = TRUE;
             break;
    }
    if (discard_buff)
    {
      /* message has not been processed by us, so simply discard */
      SNAReleaseBuffer(msgptr);
      msgptr = NULL;
    }
  }
  else if (function == SBLOST)
  {
    /* Lost contact with local node 'locality'  */
    /* Terminate all connections on this node (matching destl-value) */
  }
  else if (function == SBTICK)
  {
    /* 5 second timer tick */
  }
  COM_EXIT;
}
</code></pre>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
