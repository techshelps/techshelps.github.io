<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>POST_ON_RECEIPT</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_sna_post_on_receipt_appc"></a>POST_ON_RECEIPT</h1>
<p>
The <b>POST_ON_RECEIPT</b> verb allows the application to register to receive a notification when data or status arrives at the local LU without actually receiving it at the same time. This verb can only be issued while in RECEIVE state and it never causes a change in conversation state. This verb is only supported on Microsoft® Windows NT® and Microsoft® Windows® 95 by Microsoft® SNA Server version 3.0 with Service Pack 1 or later and by SNA Server version 4.0. </p>
<p>
When the TP issues this verb, APPC returns control to the TP immediately. When the specified conditions are satisfied the Win32® event specified by the <b>sema</b> parameter is signalled and the verb completes. Then the TP looks at the return code in the verb control block to determine whether or not any data or status notification has arrived at the local LU and issues a <a href="appc05b_5tnn.htm"><b>RECEIVE_IMMEDIATE</b></a> or <a href="appc05b_19er.htm"><b>RECEIVE_AND_WAIT</b></a> verb to actually receive the data or status notification.</p>
<p>
The <b>POST_ON_RECEIPT</b> verb implements both the <b>POST_ON_RECEIPT</b> and <b>TEST</b> verbs as described in the IBM Transaction Programmer's manual for LU Type 6.2.</p>
<p>
The following structure describes the verb control block used by the <b>POST_ON_RECEIPT</b> verb.</p>
<pre><code>struct post_on_receipt {
    unsigned short   opcode;
    unsigned char    opext;
    unsigned char    reserv1;
    unsigned char    primary_rc;
    unsigned long    secondary_rc;
    unsigned char    tp_id[8];
    unsigned long    conv_id;
    unsigned short   reserv2;
    unsigned char    fill;
    unsigned char    reserv4;
    unsigned short   max_len;
    unsigned short   reserv5;
    unsigned char *  reserv6;
    unsigned char    reserv7[5];
    unsigned long    sema;
}; 
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>opcode</b></dt>
<dd>
Supplied parameter. Specifies the verb operation code, AP_B_POST_ON_RECEIPT.</dd>
<dt>
<b>opext</b></dt>
<dd>
Supplied parameter. Specifies the verb operation extension, AP_BASIC_CONVERSATION.</dd>
<dt>
<b>primary_rc</b></dt>
<dd>
Returned parameter. Specifies the primary return code set by APPC at the completion of the verb. The valid return codes vary depending on the APPC verb issued. See Return Codes for valid error codes for this verb.</dd>
<dt>
<b>secondary_rc</b></dt>
<dd>
Returned parameter. Specifies the secondary return code set by APPC at the completion of the verb. The valid return codes vary depending on the APPC verb issued. See Return Codes for valid error codes for this verb.</dd>
<dt>
<b>tp_id</b></dt>
<dd>
Supplied parameter. Identifies the local TP. The value of this parameter is returned by <a href="appc04_0fs3.htm"><b>TP_STARTED</b></a> in the invoking TP or by<b> <a href="appc05b_0m77.htm">RECEIVE_ALLOCATE</a></b> in the invoked TP.</dd>
<dt>
<b>conv_id</b></dt>
<dd>
Supplied parameter. Provides the conversation identifier. The value of this parameter is returned by <a href="appc05a_1ckj.htm"><b>ALLOCATE</b></a><b> </b>in the invoking TP or by <b>RECEIVE_ALLOCATE</b> in the invoked TP.</dd>
<dt>
<b>fill</b></dt>
<dd>
Supplied parameter. Specifies how the local TP receives data. The following values are allowed:
<dl>
<dt>
AP_BUFFER</dt>
<dd>
Specifies that APPC should post a notification when the number of data bytes specified by <b>max_len</b> have arrived at the local LU, the end of the data has been reached, or information other than data is received.(such as a conversation status, a confirmation, or a syncpoint request).</dd>
<dt>
AP_LL</dt>
<dd>
Specifies that APPC should post a notification when a complete or truncated logical record is received, when a portion of a logical record is received which is at least equal in length to the length specified by <b>max_len</b>, or when information other than data is received.
</dd>
</dl>
</dd>
<dt>
<b>max_len</b></dt>
<dd>
Supplied parameter. Specifies the length of data that triggers APPC to post a notification to the TP.</dd>
<dt>
<b>sema</b></dt>
<dd>
Supplied parameter. Specifies the handle of a Win32 event. The event should have been created by the TP and the TP is responsible for ensuring that it is reset before a call is made and after the verb completes.
</dd>
</dl>
<h4>Return Codes</h4>
<dl>
<dt>
ap_ok</dt>
<dd>
Primary return code; the verb executed successfully.
<dl>
<dt>
ap_data</dt>
<dd>
Secondary return code; data is available for the program to receive.</dd>
<dt>
ap_not_data</dt>
<dd>
Secondary return code; information other than data is available for the program to receive.</dd>
</dl>
</dd>
<dt>
ap_cancelled</dt>
<dd>
Primary return code; the verb was canceled.</dd>
<dt>
ap_parameter_check</dt>
<dd>
Primary return code; the verb did not execute because of a parameter error.
<dl>
<dt>
ap_bad_conv_id</dt>
<dd>
Secondary return code; the value of <b>conv_id</b> did not match a conversation identifier assigned by APPC.</dd>
<dt>
ap_bad_tp_id</dt>
<dd>
Secondary return code; the value of <b>tp_id</b> did not match a TP identifier assigned by APPC.</dd>
<dt>
ap_invalid_semaphore_handle</dt>
<dd>
Secondary return code; the <b>sema</b> parameter was not set to a valid value.
</dd>
</dl>
</dd>
<dt>
ap_state_check</dt>
<dd>
Primary return code; the verb did not execute because it was issued in an invalid state.</dd>
<dt>
ap_allocation_error</dt>
<dd>
Primary return code; APPC has failed to allocate a conversation. The conversation state is set to RESET.
<p>
This code can be returned through a verb issued after <a href="appc05a_1ckj.htm"><b>ALLOCATE</b></a>.

<dl>
<dt>
ap_allocation_failure_no_retry</dt>
<dd>
Secondary return code; the conversation cannot be allocated because of a permanent condition, such as a configuration error or session protocol error. To determine the error, the system administrator should examine the error log file. Do not retry the allocation until the error has been corrected.</dd>
<dt>
ap_allocation_failure_retry</dt>
<dd>
Secondary return code; the conversation could not be allocated because of a temporary condition, such as a link failure. The reason for the failure is logged in the system error log. Retry the allocation.</dd>
<dt>
ap_conversation_type_mismatch</dt>
<dd>
Secondary return code; the partner LU or TP does not support the conversation type (basic or mapped) specified in the allocation request.</dd>
<dt>
ap_pip_not_allowed</dt>
<dd>
Secondary return code; the allocation request specified PIP data, but either the partner TP does not require this data, or the partner LU does not support it.</dd>
<dt>
ap_pip_not_specified_correctly</dt>
<dd>
Secondary return code; the partner TP requires PIP data, but the allocation request specified either no PIP data or an incorrect number of parameters.</dd>
<dt>
ap_security_not_valid</dt>
<dd>
Secondary return code; the user identifier or password specified in the allocation request was not accepted by the partner LU.</dd>
<dt>
ap_sync_level_not_supported</dt>
<dd>
Secondary return code; the partner TP does not support the <b>sync_level</b> (AP_NONE or AP_CONFIRM_SYNC_LEVEL) specified in the allocation request, or the <b>sync_level</b> was not recognized.</dd>
<dt>
ap_tp_name_not_recognized</dt>
<dd>
Secondary return code; the partner LU does not recognize the TP name specified in the allocation request.</dd>
<dt>
ap_trans_pgm_not_avail_no_retry</dt>
<dd>
Secondary return code; the remote LU rejected the allocation request because it was unable to start the requested partner TP. The condition is permanent. The reason for the error may be logged on the remote node. Do not retry the allocation until the error has been corrected.</dd>
<dt>
ap_trans_pgm_not_avail_retry</dt>
<dd>
Secondary return code; the remote LU rejected the allocation request because it was unable to start the requested partner TP. The condition may be temporary, such as a time-out. The reason for the error may be logged on the remote node. Retry the allocation.
</dd>
</dl>
</dd>
<dt>
ap_comm_subsystem_abended</dt>
<dd>
Primary return code; indicates one of the following conditions:
<ul>
<li>
The node used by this conversation encountered an ABEND.</li>
<li>
The connection between the TP and the PU 2.1 node has been broken (a LAN error).</li>
<li>
The SnaBase at the TP's computer encountered an ABEND.</li>
</ul>

<p>
The system administrator should examine the error log to determine the reason for the ABEND.
</dd>
<dt>
ap_comm_subsystem_not_loaded</dt>
<dd>
Primary return code; a required component could not be loaded or terminated while processing the verb. Thus, communication could not take place. Contact the system administrator for corrective action.</dd>
<dt>
ap_dealloc_abend_prog</dt>
<dd>
Primary return code; the conversation has been deallocated for one of the following reasons:
<ul>
<li>
The partner TP issued <a href="appc05a_4ndv.htm"><b>DEALLOCATE</b></a> with <b>dealloc_type</b><i> </i>set to AP_ABEND_PROG.</li>
<li>
The partner TP has encountered an ABEND, causing the partner LU to send a <b>DEALLOCATE</b> request.</li>
</ul>
</dd>
<dt>
ap_dealloc_abend_svc</dt>
<dd>
Primary return code; the conversation has been deallocated because the partner TP issued <b>DEALLOCATE</b> with <b>dealloc_type</b> set to AP_ABEND_SVC.</dd>
<dt>
ap_dealloc_abend_timer</dt>
<dd>
Primary return code; the conversation has been deallocated because the partner TP issued <b>DEALLOCATE</b> with <b>dealloc_type</b> set to AP_ABEND_TIMER.</dd>
<dt>
ap_dealloc_normal</dt>
<dd>
Primary return code; the partner TP has deallocated the conversation without requesting confirmation and issued <a href="appc05a_4ndv.htm"><b>DEALLOCATE</b></a> with <b>dealloc_type</b> set to one of the following:
<ul>
<li>
AP_CONFIRM_SYNC_LEVEL</li>
<li>
AP_FLUSH</li>
<li>
AP_SYNC_LEVEL with the synchronization level of the conversation specified as AP_NONE</li>
</ul>
</dd>
<dt>
ap_prog_error_no_trunc</dt>
<dd>
Primary return code; the partner TP has issued <a href="appc05b_1azn.htm"><b>SEND_ERROR</b></a> while the conversation was in SEND state. Data was not truncated.</dd>
<dt>
ap_prog_error_purging</dt>
<dd>
Primary return code; while in RECEIVE, PENDING, PENDING_POST (Windows NT, Windows 95, and OS/2 only), CONFIRM, CONFIRM_SEND, or CONFIRM_DEALLOCATE state, the partner TP issued <a href="appc05b_1azn.htm"><b>SEND_ERROR</b></a>. Data sent but not yet received is purged.</dd>
<dt>
ap_prog_error_trunc</dt>
<dd>
Primary return code; the partner TP has issued <a href="appc05b_1azn.htm"><b>SEND_ERROR</b></a> while the conversation was in SEND state. Data was truncated.</dd>
<dt>
ap_svc_error_no_trunc</dt>
<dd>
Primary return code; the partner TP (or partner LU) issued <a href="appc05b_1azn.htm"><b>SEND_ERROR</b></a> with <b>err_type</b> set to AP_SVC while in RECEIVE, PENDING_POST (Windows NT, Windows 95, and OS/2 only), CONFIRM, CONFIRM_SEND, or CONFIRM_DEALLOCATE state. Data sent to the partner TP was not truncated.</dd>
<dt>
ap_svc_error_purging</dt>
<dd>
Primary return code; the partner TP (or partner LU) issued <a href="appc05b_1azn.htm"><b>SEND_ERROR</b></a> with <b>err_type</b> set to AP_SVC while in RECEIVE, PENDING_POST (Windows NT, Windows 95, and OS/2 only), CONFIRM, CONFIRM_SEND, or CONFIRM_DEALLOCATE state. Data sent to the partner TP may have been purged.</dd>
<dt>
ap_svc_error_trunc</dt>
<dd>
Primary return code; the partner TP (or partner LU) issued <a href="appc05b_1azn.htm"><b>SEND_ERROR</b></a> with <b>err_type</b> set to AP_SVC while in RECEIVE, PENDING_POST (Windows NT, Windows 95, and OS/2 only), CONFIRM, CONFIRM_SEND, or CONFIRM_DEALLOCATE state. Data sent to the partner TP may have been truncated.
</dd>
</dl>
<h4>Remarks</h4>
<p>
While a <b>POST_ON_RECEIPT</b> verb is outstanding, the following verbs can be issued on the same conversation:</p>
<p class=indent1>
<a href="appc05a_5o0z.htm"><b>GET_ATTRIBUTES</b></a></p>
<p class=indent1>
<a href="appc05a_4nab.htm"><b>GET_TYPE</b></a></p>
<p class=indent1>
<a href="appc05a_4ndv.htm"><b>DEALLOCATE</b></a></p>
<p class=indent1>
<a href="appc05b_19er.htm"><b>RECEIVE_AND_WAIT</b></a></p>
<p class=indent1>
<a href="appc05b_5tnn.htm"><b>RECEIVE_IMMEDIATE</b></a></p>
<p class=indent1>
<a href="appc05b_54kj.htm"><b>REQUEST_TO_SEND</b></a></p>
<p class=indent1>
<a href="appc05b_1azn.htm"><b>SEND_ERROR</b></a></p>
<p class=indent1>
<a href="appc05b_8kf7.htm"><b>TEST_RTS</b></a></p>
<p class=indent1>
<a href="appc04_8k0z.htm"><b>TP_ENDED</b></a></p>
<p>
Issuing any of the following verbs prior to completion of the asynchronous <b>POST_ON_RECEIPT</b> verb causes the <b>POST_ON_RECEIPT</b> verb to be canceled (the Win32 event is signaled and the primary return code in the verb control block is set to AP_CANCELLED).</p>
<p class=indent1>
<a href="appc05a_4ndv.htm"><b>DEALLOCATE</b></a></p>
<p class=indent1>
<a href="appc05b_19er.htm"><b>RECEIVE_AND_WAIT</b></a></p>
<p class=indent1>
<a href="appc05b_5tnn.htm"><b>RECEIVE_IMMEDIATE</b></a></p>
<p class=indent1>
<a href="appc05b_1azn.htm"><b>SEND_ERROR</b></a></p>
<p class=indent1>
<a href="appc04_8k0z.htm"><b>TP_ENDED</b></a></p>
<p>&nbsp;</p></body>
</HTML>
