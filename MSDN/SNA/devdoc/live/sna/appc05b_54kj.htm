<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>REQUEST_TO_SEND</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_sna_request_to_send_appc"></a>REQUEST_TO_SEND</h1>
<p>
The <b>REQUEST_TO_SEND</b> verb notifies the partner TP that the local TP wants to send data.</p>
<p>
For the Windows version 3<i>.x</i> system, it is recommended that you use <a href="appc06_66sj.htm"><b>WinAsyncAPPC</b></a> rather than the blocking version of this call.</p>
<p>
The following structure describes the verb control block used by the <b>REQUEST_TO_SEND</b> verb.</p>
<pre><code>struct request_to_send {
    unsigned short      opcode;
    unsigned char       opext;
    unsigned char       reserv2;
    unsigned short      primary_rc;
    unsigned long       secondary_rc;
    unsigned char       tp_id[8];
    unsigned long       conv_id;
}; 
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>opcode</b></dt>
<dd>
Supplied parameter. Specifies the verb operation code, AP_B_REQUEST_TO_SEND.</dd>
<dt>
<b>opext</b></dt>
<dd>
Supplied parameter. Specifies the verb operation extension, AP_BASIC_CONVERSATION.</dd>
<dt>
<b>primary_rc</b></dt>
<dd>
Returned parameter. Specifies the primary return code set by APPC at the completion of the verb. The valid return codes vary depending on the APPC verb issued. See Return Codes for valid error codes for this verb.</dd>
<dt>
<b>secondary_rc</b></dt>
<dd>
Returned parameter. Specifies the secondary return code set by APPC at the completion of the verb. The valid return codes vary depending on the APPC verb issued. See Return Codes for valid error codes for this verb.</dd>
<dt>
<b>tp_id</b></dt>
<dd>
Supplied parameter. Identifies the local TP.
<p>
The value of this parameter is returned by <a href="appc04_0fs3.htm"><b>TP_STARTED</b></a> in the invoking TP or by <a href="appc05b_0m77.htm"><b>RECEIVE_ALLOCATE</b></a> in the invoked TP.
</dd>
<dt>
<b>conv_id</b></dt>
<dd>
Supplied parameter. Provides the conversation identifier.
<p>
The value of this parameter is returned by <a href="appc05a_1ckj.htm"><b>ALLOCATE</b></a> in the invoking TP or by <b>RECEIVE_ALLOCATE</b> in the invoked TP.

</dd>
</dl>
<h4>Return Codes</h4>
<dl>
<dt>
ap_ok</dt>
<dd>
Primary return code; the verb executed successfully.</dd>
<dt>
ap_parameter_check</dt>
<dd>
Primary return code; the verb did not execute because of a parameter error.
<dl>
<dt>
ap_bad_conv_id</dt>
<dd>
Secondary return code; the value of <b>conv_id</b> did not match a conversation identifier assigned by APPC.</dd>
<dt>
ap_bad_tp_id</dt>
<dd>
Secondary return code; the value of <b>tp_id</b> did not match a TP identifier assigned by APPC.
</dd>
</dl>
</dd>
<dt>
ap_state_check</dt>
<dd>
Primary return code; the verb did not execute because it was issued in an invalid state.
<dl>
<dt>
ap_r_t_s_bad_state</dt>
<dd>
Secondary return code; the conversation is not in an allowed state when the TP issued this verb.
</dd>
</dl>
</dd>
<dt>
ap_comm_subsystem_abended</dt>
<dd>
Primary return code; indicates one of the following conditions:
<ul>
<li>
The node used by this conversation encountered an ABEND.</li>
<li>
The connection between the TP and the PU 2.1 node has been broken (a LAN error).</li>
<li>
The SnaBase at the TP's computer encountered an ABEND.</li>
</ul>

<p>
The system administrator should examine the error log to determine the reason for the ABEND.
</dd>
<dt>
ap_comm_subsystem_not_loaded</dt>
<dd>
Primary return code; a required component could not be loaded or has terminated while processing the verb. Thus, communication could not take place. Contact the system administrator for corrective action.
<p>
When this return code is used with <a href="appc05a_1ckj.htm"><b>ALLOCATE</b></a>, it may indicate that no communications subsystem could be found to support the local LU. (For example, the local LU alias specified with <a href="appc04_0fs3.htm"><b>TP_STARTED</b></a> is incorrect or has not been configured.) Note that if <b>lu_alias</b> or <b>mode_name</b> is fewer than eight characters, you must ensure that these fields are filled with spaces to the right. This error is returned if these parameters are not filled with spaces, since there is no node available that can satisfy the <b>ALLOCATE</b> request.

<p>
When <b>ALLOCATE</b> produces this return code for a Microsoft® SNA Server Client system configured with multiple nodes, there are two secondary return codes as follows:

<dl>
<dt>
0xf0000001</dt>
<dd>
Secondary return code; no nodes have been started.</dd>
<dt>
0x<small>f0000002</small></dt>
<dd>
Secondary return code; at least one node has been started, but the local LU (when <b>TP_STARTED</b> is issued) is not configured on any active nodes. The problem could be either of the following:
<table cellspacing=4 cols=1>
<tr valign=top>
<td width=100%><font face="Symbol">·</font>&nbsp;&nbsp;&nbsp;&nbsp;The node with the local LU is not started.</td>
</tr>
<tr valign=top>
<td width=100%><font face="Symbol">·</font>&nbsp;&nbsp;&nbsp;&nbsp;The local LU is not configured.</td>
</tr>
</table><br>

</dd>
</dl>
</dd>
<dt>
ap_conversation_type_mixed</dt>
<dd>
Primary return code; the TP has issued both basic and mapped conversation verbs. Only one type can be issued in a single conversation.</dd>
<dt>
ap_invalid_verb_segment</dt>
<dd>
Primary return code; the VCB extended beyond the end of the data segment.</dd>
<dt>
ap_stack_too_small</dt>
<dd>
Primary return code; the stack size of the application is too small to execute the verb. Increase the stack size of your application.</dd>
<dt>
ap_conv_busy</dt>
<dd>
Primary return code; there can only be one outstanding conversation verb at a time on any conversation. This can occur if the local TP has multiple threads, and more than one thread is issuing APPC calls using the same <b>conv_id</b>.</dd>
<dt>
ap_thread_blocking</dt>
<dd>
Primary return code; the calling thread is already in a blocking call.</dd>
<dt>
ap_unexpected_dos_error</dt>
<dd>
Primary return code; the operating system has returned an error to APPC while processing an APPC call from the local TP. The operating system return code is returned through the <b>secondary_rc</b>. It appears in Intel byte-swapped order. If the problem persists, consult the system administrator.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The conversation can be in any of the following states when the TP issues this verb:</p>
<p class=indent1>
CONFIRM</p>
<p class=indent1>
PENDING_POST (OS/2)</p>
<p class=indent1>
RECEIVE</p>
<p>
There is no state change.</p>
<p>
The request-to-send notification is received by the partner program through the <b>rts_rcvd</b> parameter of the following verbs:
<ul>
<li>
<a href="appc05a_4i1v.htm"><b>CONFIRM</b></a></li>
<li>
<a href="appc05b_92oz.htm"><b>RECEIVE_AND_POST</b></a><b> </b>(Windows NT, Windows 95, and OS/2 operating systems)</li>
<li>
<a href="appc05b_19er.htm"><b>RECEIVE_AND_WAIT</b></a></li>
<li>
<a href="appc05b_5tnn.htm"><b>RECEIVE_IMMEDIATE</b></a></li>
<li>
<a href="appc05b_7wbn.htm"><b>SEND_DATA</b></a></li>
<li>
<a href="appc05b_1azn.htm"><b>SEND_ERROR</b></a></li>
</ul>
<p>
It is also indicated by a <b>primary_rc</b> of ap_ok on <a href="appc05b_8kf7.htm"><b>TEST_RTS</b></a>.</p>
<p>
Request-to-send notification is sent to the partner TP immediately; APPC does not wait until the send buffer fills up or is flushed. Consequently, the request-to-send notification may arrive out of sequence. For example, if the local TP is in SEND state and issues <a href="appc05b_9aar.htm"><b>PREPARE_TO_RECEIVE</b></a> followed by <b>REQUEST_TO_SEND</b>, the partner TP, in RECEIVE state, may receive the request-to-send notification before it receives the send notification. For this reason, request-to-send can be reported to a TP through a receive verb.</p>
<p>
In response to this request, the partner TP can change the conversation to:
<ul>
<li>
RECEIVE state by issuing <b>PREPARE_TO_RECEIVE</b> or <b>RECEIVE_AND_WAIT</b>.</li>
<li>
PENDING_POST state by issuing <b>RECEIVE_AND_POST</b>.</li>
</ul>
<p>
The partner TP can also ignore the request-to-send.</p>
<p>
The conversation state changes to SEND for the local TP when the local TP receives one of the following values through the <b>what_rcvd</b> parameter of a subsequent receive verb:
<ul>
<li>
AP_CONFIRM_SEND and replies with <a href="appc05a_53z7.htm"><b>CONFIRMED</b></a></li>
<li>
AP_DATA_COMPLETE_CONFIRM_SEND and replies with <b>CONFIRMED</b></li>
<li>
AP_DATA_CONFIRM_SEND and replies with <b>CONFIRMED</b></li>
<li>
AP_SEND</li>
</ul>
<p>
The receive verbs are <a href="appc05b_92oz.htm"><b>RECEIVE_AND_POST</b></a> (Windows NT, Windows 95, and OS/2 operating systems), <a href="appc05b_5tnn.htm"><b>RECEIVE_IMMEDIATE</b></a>, and <a href="appc05b_19er.htm"><b>RECEIVE_AND_WAIT</b></a>.</p>
<p>&nbsp;</p></body>
</HTML>
