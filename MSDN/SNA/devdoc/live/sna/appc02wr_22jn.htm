<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SYNCPT Verb Issued Locally</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_sna_syncpt_verb_issued_locally_appc"></a>SYNCPT Verb Issued Locally</h3>
<p>
<img src="images/appc2d.gif" border=0></p>
<h4>Notes</h4>
<ol>
<li>
The transaction program issues a <a href="appc05b_7wbn.htm"><b>SEND_DATA</b></a> or <a href="appc05b_8iub.htm"><b>MC_SEND_DATA</b></a><b> </b>verb depending on whether a basic or mapped conversation is being used.</li>
<li>
The <b>SEND_DATA</b> or <b>MC_SEND_DATA</b> VCB is passed transparently through the vendor API to SNA Server. When the verb completes, the return code from SNA Server is returned to the transaction program.</li>
<li>
The transaction program issues a <b>SYNCPT</b> verb to the vendor API.</li>
<li>
The vendor API creates a PREPARE PS header and transmits it by issuing a <b>SEND_DATA</b> or <b>MC_SEND_DATA </b>verb. For a mapped conversation, the <b>data_type</b> field of the <b>MC_SEND_DATA</b> VCB must be set to AP_PS_HEADER.</li>
<li>
On completion of the <b>SEND_DATA </b>or <b>MC_SEND_DATA </b>verb, the vendor API issues a <a href="appc05b_19er.htm"><b>RECEIVE_AND_WAIT</b></a> or <a href="appc05a_5qlf.htm"><b>MC_RECEIVE_AND_WAIT</b></a><b> </b>verb.</li>
<li>
The <b>RECEIVE_AND_WAIT</b> or <b>MC_RECEIVE_AND_WAIT </b>verb completes with the <b>what_rcvd</b> field of the VCB with a value of AP_PS_HEADER. The data buffer is filled with the received REQUEST_COMMIT PS header.</li>
<li>
Another <b>RECEIVE_AND_WAIT</b> or <b>MC_RECEIVE_AND_WAIT</b> verb is issued to get send direction. Note that the vendor API can combine these two verbs into a single request by setting the <b>rtn_status</b> field of the VCB to AP_YES in order to receive status with data on the first <a href="appc05b_19er.htm"><b>RECEIVE_AND_WAIT</b></a>. or <a href="appc05a_5qlf.htm"><b>MC_RECEIVE_AND_WAIT</b></a>.</li>
<li>
A COMMITTED PS header is then transmitted using a <a href="appc05b_7wbn.htm"><b>SEND_DATA</b></a> or <a href="appc05b_8iub.htm"><b>MC_SEND_DATA</b></a><b> </b>verb</li>
<li>
The Vendor API issues a <b>RECEIVE_AND_WAIT</b> or <b>MC_RECEIVE_AND_WAIT </b>verb to receive the FORGET PS header from the remote TP.</li>
<li>
Another <b>RECEIVE_AND_WAIT </b>or <b>MC_RECEIVE_AND_WAIT </b>verb is issued with the <b>what_rcvd</b> field of the VCB set to AP_SEND to get send direction (again the <b>rtn_status RECEIVE_AND_WAIT </b>field of the VCB can be set to AP_YES to combine these two verbs).<ol>
<li>
When send indication is received, the vendor API returns the <b>SYNCPT</b> verb to the local transaction program with an OK return code.</li>
</ol>
</li>
</ol>
<p>&nbsp;</p></body>
</HTML>
