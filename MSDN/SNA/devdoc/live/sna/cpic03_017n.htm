<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Cancel_Conversation</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_sna_cancel_conversation_cpic"></a>Cancel_Conversation</h1>
<p>
The <b>Cancel_Conversation</b> call (function name <b>cmcanc</b>) cancels any outstanding operation on a conversation (an operation returned with cm_operation_incomplete) and the conversation itself.</p>
<pre><code><b>CM_ENTRY Cancel_Conversation(
  unsigned char FAR</b><i> *conversation_ID</i><b>,  </b>
<b>  CM_INT32 FAR</b><i> *return_code            </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>conversation_ID</i></dt>
<dd>
Returned parameter. Specifies the identifier for the conversation. The value of this parameter was returned by <a href="cpic03_0jhf.htm"><b>Initialize_Conversation</b></a> or <a href="cpic03_70df.htm"><b>Accept_Conversation</b></a>.</dd>
<dt>
<i>return_code</i></dt>
<dd>
The code returned from this call. The valid return codes are listed below.
</dd>
</dl>
<h4>Return Codes</h4>
<dl>
<dt>
cm_ok</dt>
<dd>
Primary return code; the call executed successfully.</dd>
<dt>
cm_program_parameter_check</dt>
<dd>
Primary return code; the value specified by <i>conversation_ID</i> is invalid.</dd>
<dt>
cm_product_specific_error</dt>
<dd>
Primary return code; a product-specific error occurred and has been logged in the product's error log.
</dd>
</dl>
<h4>State Changes</h4>
<p>
The conversation must be in any state except RESET.</p>
<p>
When the return code is cm_ok, the conversation state becomes RESET.</p>
<h4>Remarks</h4>
<p>
<b>Cancel_Conversation</b> can be called while another operation is active for the specified <i>conversation_ID</i>. This allows an application to end any CPI-C action, but will terminate the conversation. This call can be issued regardless of the current application processing mode. Any outstanding operations will return with cm_deallocated_abend as the return code.</p>
<p>
The conversation is terminated by a <a href="cpic03_5vkz.htm"><b>Deallocate</b></a> with <i>deallocate_type</i> set to ABEND_SVC. No <i>log_data</i> is sent. The system may be unable to do this immediately, but any delay is transparent to the program.</p>
<p>
<b>Note</b>&nbsp;&nbsp;If <b>Cancel_Conversation</b> is called while there are outstanding <a href="cpic03_3kir.htm"><b>Specify_Windows_Handle</b></a> asynchronous calls, these calls are canceled. The return codes are set to canceled and a completion message is posted.</p>
<p>&nbsp;</p></body>
</HTML>
