<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HLLAPI Parameter Tracing</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_sna_hllapi_parameter_tracing_3270"></a>HLLAPI Parameter Tracing</h1>
<p>
The <b>COM_TRC_HLLAPI</b> macro can be used within an HLLAPI (High-Level Language API) library to trace the parameters supplied to an HLLAPI function and the returned values. It should be used at the following times:
<ul>
<li>
At the start of the HLLAPI library routine, to trace the four parameters supplied by the HLLAPI application before beginning to process them.</li>
<li>
At the end of the HLLAPI library routine, to trace the values to be returned in each of the four parameters before control is returned to the application.</li>
</ul>
<p>
The format of the <b>COM_TRC_HLLAPI</b> call is as follows:</p>
<p>
<b>COM_TRC_HLLAPI (</b><i>type</i><b>,</b> <i>func</i><b>,</b> <i>data</i><b>,</b> <i>len</i><b>,</b> <i>retc</i><b>);</b></p>
<h4>Parameters</h4>
<dl>
<dt>
<i>type</i> (<b>USHORT</b>)</dt>
<dd>
Either REQUEST or RESPONSE; use REQUEST when tracing the parameters supplied by the user application at the start of the library routine and RESPONSE when tracing the parameters to be returned to the user application.</dd>
<dt>
<i>func</i>, <i>len</i>, and <i>retc</i> (<b>USHORT</b>)</dt>
<dd>
The values of the parameters <i>func_number,</i> <i>data_length,</i> and <i>return_code</i> that were supplied to HLLAPI by the user application, or the values to be returned to the application. Note that the user application supplies pointers to these values, but the actual values are required for the <b>COM_TRC_HLLAPI</b> call.</dd>
<dt>
<i>data</i> (<b>UCHAR FAR</b>)</dt>
<dd>
The <i>data_string</i> parameter supplied to HLLAPI by the user application, or the string to be returned to the application in this parameter.
</dd>
</dl>
<h4>Remarks</h4>
<p>
To turn on tracing for an HLLAPI application, the environment variable COMTRC is used; see the <i>Microsoft SNA Server Administration Guide</i> for more information on the use of COMTRC. Tracing can also be turned on and off from within the HLLAPI user application using the trace control parameters of the Set Session Parameters function; see the HLLAPI Specification for more information.</p>
<p>
The trace output lists the following:
<ul>
<li>
The name of the HLLAPI function being called (this is determined from the function number, the first of the four parameters to the HLLAPI call).</li>
<li>
Whether the trace refers to a request or a response (determined from the <i>type </i>parameter to the <b>COM_TRC_HLLAPI</b> call).</li>
<li>
The <i>data_length</i> and <i>return_code/ps_position</i> parameters to the HLLAPI call.</li>
<li>
If the <i>data_string</i> parameter is used for this HLLAPI function, the address of the data as supplied to HLLAPI, followed by a listing of the data in both hexadecimal and ASCII characters.</li>
</ul>
<p>
Note that Microsoft® SNA Server's HLLAPI tracing is designed for use with the SNA Server implementation of HLLAPI on OS/2, which is compatible with the implementation provided by OS/2 Extended Edition version 1.2. If your HLLAPI implementation differs from this (for example, by including function numbers that are not supported by the SNA Server implementation, by using a different name for a given function number, or in the usage of the <i>data_string</i> parameter for different verbs), the tracing output obtained may not be correct.</p>
<p>
For Microsoft® Windows NT® and Microsoft® Windows® 95, you can use SNATRACE.EXE to dynamically control HLLAPI and FMI tracing.</p>
<p>&nbsp;</p></body>
</HTML>
