<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Buffer Header Format</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_sna_buffer_header_format_dev"></a>Buffer Header Format</h2>
<p>
This topic lists the common fields that always occur at the start of a buffer header. These are followed by further fields specific to the particular message; see <a href="devc04_8h86.htm">Message Formats</a> for details of individual message formats.</p>
<pre><code>PTRBFHDR  nxtqptr;
PTRBFELT  hdreptr;
CHAR      numelts;
CHAR      msgtype;
CHAR      srcl;
CHAR      srcp;
INTEGER   srci;
CHAR      destl;
CHAR      destp;
INTEGER   desti;
}; 
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>nxtqptr</b></dt>
<dd>
When the buffer is in a queue, this field points to the header of the next buffer in the queue (NULL if it is the last buffer in the queue). When the buffer is not in a queue, this field points to itself; the SNA Server buffer management routines use this to check for buffer corruption.</dd>
<dt>
<b>hdreptr</b></dt>
<dd>
Pointer to the first buffer element in the associated chain of buffer elements; NULL if the message consists only of a buffer header.</dd>
<dt>
<b>numelts</b></dt>
<dd>
Number of buffer elements chained from the header; zero if the message consists only of a buffer header.</dd>
<dt>
<b>msgtype</b></dt>
<dd>
Message type. See individual message descriptions in <a href="devc04_8h86.htm">Message Formats</a>.</dd>
<dt>
<b>srcl</b></dt>
<dd>
Source locality. See <a href="devc01_5z5i.htm">LPI Addresses</a>.</dd>
<dt>
<b>srcp</b></dt>
<dd>
Source partner. See <a href="devc01_5z5i.htm">LPI Addresses</a>.</dd>
<dt>
<b>srci</b></dt>
<dd>
Source index. See <a href="devc01_5z5i.htm">LPI Addresses</a>.</dd>
<dt>
<b>destl</b></dt>
<dd>
Destination locality. See <a href="devc01_5z5i.htm">LPI Addresses</a>.</dd>
<dt>
<b>destp</b></dt>
<dd>
Destination partner. See <a href="devc01_5z5i.htm">LPI Addresses</a>.</dd>
<dt>
<b>desti</b></dt>
<dd>
Destination index. See <a href="devc01_5z5i.htm">LPI Addresses</a>.

<p>
<b>Note</b>  Fields that occupy two bytes, such as <b>opresid</b> in the <a href="devc04_0com.htm"><b>Open(LINK)</b></a> request, are normally represented with the arithmetically most significant byte in the lowest byte address, irrespective of the normal orientation used by the processor on which the software executes. That is, the 2-byte value 0x1234 has the byte 0x12 in the lowest byte address. However, the following fields are exceptions:
</dd>
</dl>
<ul>
<li>
The <b>srci </b>and <b>desti</b> fields in buffer headers are stored in the local format of the application that assigns them (only the assigning application needs to interpret these values).</li>
<li>
The <b>startd </b>and <b>endd</b> fields in elements are always stored in low-byte, high-byte orientation (the normal orientation of an Intel processor).</li>
</ul>
<p>&nbsp;</p></body>
</HTML>
