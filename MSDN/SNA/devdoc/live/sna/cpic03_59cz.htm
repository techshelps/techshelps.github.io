<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Set_Error_Direction</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_sna_set_error_direction_cpic"></a>Set_Error_Direction</h1>
<p>
The <b>Set_Error_Direction</b> call (function name <b>cmsed</b>) specifies whether a program detected an error while receiving data or while preparing to send data.</p>
<pre><code><b>CM_ENTRY Set_Error_Direction(
  unsigned char FAR</b><i> *conversation_ID</i><b>,  </b>
<b>  CM_INT32 FAR</b><i> *error_direction</i><b>,       </b>
<b>  CM_INT32 FAR</b><i> *return_code            </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>conversation_ID</i></dt>
<dd>
Supplied parameter. Specifies the identifier for the conversation. The value of this parameter was returned by <a href="cpic03_0jhf.htm"><b>Initialize_Conversation</b></a> or <a href="cpic03_70df.htm"><b>Accept_Conversation</b></a>.</dd>
<dt>
<i>error_direction</i></dt>
<dd>
Supplied parameter. Specifies the direction in which data was flowing when the program encountered an error. Possible values are:
<dl>
<dt>
CM_RECEIVE_ERROR</dt>
<dd>
An error occurred in the data received from the partner program.</dd>
<dt>
CM_SEND_ERROR</dt>
<dd>
An error occurred while the local program prepared to send data to the partner program.
</dd>
</dl>
</dd>
<dt>
<i>return_code</i></dt>
<dd>
The code returned from this call. The valid return codes are listed below.
</dd>
</dl>
<h4>Return Codes</h4>
<dl>
<dt>
cm_ok</dt>
<dd>
Primary return code; the call executed successfully.</dd>
<dt>
cm_program_parameter_check</dt>
<dd>
Primary return code; the value specified by <i>conversation_ID</i> or <i>error_direction</i> is invalid.</dd>
<dt>
cm_product_specific_error</dt>
<dd>
Primary return code; a product-specific error occurred and has been logged in the product's error log.
</dd>
</dl>
<h4>State Changes</h4>
<p>
The conversation can be in any state except RESET.</p>
<p>
There is no state change.</p>
<h4>Remarks</h4>
<p>
This call overrides the default error direction established by <a href="cpic03_0jhf.htm"><b>Initialize_Conversation</b></a> or <a href="cpic03_70df.htm"><b>Accept_Conversation</b></a>. The default error direction is CM_RECEIVE_ERROR.</p>
<p>
Error direction is relevant only when a program issues <a href="cpic03_2j6r.htm"><b>Send_Error</b></a> in SEND_PENDING state, immediately after issuing <a href="cpic03_3vhf.htm"><b>Receive</b></a><b> </b>and receiving data (<i>data_received </i>is a value other than CM_NO_DATA_RECEIVED) and a send indicator (<i>status_received</i> is CM_SEND_RECEIVED).</p>
<p>
When the conversation is in SEND_PENDING state, the program issues <b>Send_Error</b> if it detects errors in the received data or if an error occurred while the local program prepared to send data. The program must supply the error direction information using <a href="#_sna_set_error_direction_cpic"><b>Set_Error_Direction</b></a> before issuing <b>Send_Error</b> because the LU cannot tell which kind of error occurred (receive or send). The new error direction remains in effect until a subsequent <b>Set_Error_Direction</b> changes it.</p>
<p>
When <b>Send_Error</b> is issued, the partner program receives one of the following return codes:
<ul>
<li>
cm_program_error_purging if <i>error_direction</i> is set to CM_RECEIVE_ERROR</li>
<li>
cm_program_error_no_trunc if <i>error_direction</i> is set to CM_SEND_ERROR</li>
</ul>
<p>&nbsp;</p></body>
</HTML>
