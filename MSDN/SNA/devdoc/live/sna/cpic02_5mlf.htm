<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Registry Entries for Clients Running Windows 95</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_sna_registry_entries_for_clients_running_windows_95_cpic"></a>Registry Entries for Clients Running Windows 95</h3>
<p>
The following list gives details about Windows 95 registry entries for clients running Windows 95. For each TP type, the applicable variables and their locations are shown in <a href="cpic02_1hyb.htm">Clients Running Windows 95</a>.
<dl>
<dt>
<b>SNAServiceType:</b>REG_DWORD:{ 0x5 | 0x6 | 0x1A }</dt>
<dd>
Indicates the type of TP. Use a value of 0x5 for an autostarted queued TP, 0x6 for an autostarted nonqueued TP, and 0x1A for an operator-started TP.</dd>
<dt>
<b>PathName:</b>REG_EXPAND_SZ:<i>path</i></dt>
<dd>
For an autostarted TP running as an application, specifies the path and file name of the TP. The data type of REG_EXPAND_SZ means that the path can contain an expandable data string; for example, %SystemRoot% represents the directory containing the Windows 95 system files. </dd>
<dt>
<b>LocalLU:</b>REG_SZ:<i>LUalias</i></dt>
<dd>
Specifies the alias of the local LU to be used when this TP is started on this computer.</dd>
<dt>
<b>Parameters:</b>REG_SZ:<i>ParameterList</i></dt>
<dd>
Lists parameters to be used by the TP. Separate parameters with spaces.</dd>
<dt>
<b>Timeout:</b>REG_DWORD:<i>number</i></dt>
<dd>
Specifies the time, in milliseconds, that an <a href="cpic03_70df.htm"><b>Accept_Conversation</b></a> will wait before timing out. Specify <i>number</i> in decimal; the registry editor converts this to hexadecimal before displaying it. The default is infinity (no limit).</dd>
<dt>
<b>AcceptNames:</b>REG_SZ:<i>TPNameList</i></dt>
<dd>
With Windows 95, used for autostarted TPs only; lists additional names under which the invokable TP can be invoked. Separate TP names with spaces. The default is none. If an invokable TP does not issue a <a href="cpic03_68wz.htm"><b>Specify_Local_TP_Name</b></a> for each name configured under AcceptNames in the registry, that TP will fail.</dd>
<dt>
<b>ConversationSecurity:</b>REG_SZ:{ YES | NO }</dt>
<dd>
Indicates whether this TP supports conversation security. The default is NO.</dd>
<dt>
<b>AlreadyVerified:</b>REG_SZ:{ YES | NO }</dt>
<dd>
Indicates whether this TP can be invoked with a user identifier and password that have already been verified. <b>AlreadyVerified</b> is ignored if <b>ConversationSecurity</b> is set to NO.
<p>
For a diagram of three TPs in a conversation, where the third TP can be invoked with a password that is already verified by the second TP, see <a href="cpic02_3wyr.htm">Communication Between TPs</a>. The following table shows the requirements for using password verification in a chain of TPs.


<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=33%>First TP (an invoking TP)</th>
<th align=left width=33%>Second TP (invokable TP that confirms password and then invokes another TP)<p>
</p>
</th>
<th align=left width=34%>Third and subsequent TPs (invokable TPs that invoke other TPs)</th>
</tr>
<tr valign=top>
<td width=33%>Does not need registry or environment variables.<p>
</p>
</td>
<td width=33%><b>ConversationSecurity</b> setting must be YES.</td>
<td width=34%><b>ConversationSecurity</b> setting must be YES.</td>
</tr>
<tr valign=top>
<td width=33%>Does not need registry or environment variables.<p>
</p>
</td>
<td width=33%><b>AlreadyVerified</b> setting can be YES or NO.</td>
<td width=34%><b>AlreadyVerified</b> setting must be YES.</td>
</tr>
<tr valign=top>
<td width=33%>Symbolic destination name or <b>Set_Conversation_<br>
Security_Type</b> in this TP specifies PROGRAM for the security type; as a result, the TP passes along the user identifier and password supplied in the symbolic destination name (or through calls1).</td>
<td width=33%>Symbolic destination name or <b>Set_Conversation_<br>
Security_Type</b> in this TP specifies SAME for the security type; as a result, after confirming the user identifier and password, the TP passes along the user identifier and an already-verified flag.</td>
<td width=34%>Symbolic destination name or <b>Set_Conversation_<br>
Security_Type</b> in this TP specifies SAME for the security type; as a result, the TP passes along the user identifier as received, along with the already-verified flag.</td>
</tr>
</table><br>

</dd>
</dl>
<p>
<b>Note:</b></p>
<p>
1  <b>Set_Conversation_Security_User_ID</b> or <b>Set_Conversation_Security_Password</b> will overwrite the user identifier and password specified in the symbolic destination name.</p>
<p>
If you set <b>AlreadyVerified</b> to NO, this TP cannot join in a chain of conversations where password verification is already done. (The exception to this is when <b>ConversationSecurity</b> is set to NO, in which case the TP could be the final TP in such a chain, since it performs no checking.)</p>
<p>
If you are configuring a TP that sometimes needs to confirm a password and sometimes accepts an already-verified flag, set <b>AlreadyVerified</b> to YES and configure the <i>UsernameX</i> variable appropriately. In this case, whenever the TP is invoked without the already-verified flag set, <b>AlreadyVerified</b> is ignored; verification is attempted with the user identifier and password configured for the TP.</p>
<p>
The default for <b>AlreadyVerified</b> is NO. If you set <b>AlreadyVerified</b> to YES, make sure that <b>ConversationSecurity</b> is also set to YES.
<dl>
<dt>
<b><i>Username1</i>:</b>REG_SZ:<i>Password1</i><br>
...<br>
<b><i>UsernameX</i>:</b>REG_SZ:<i>PasswordX</i></dt>
<dd>
Sets one or more user names and passwords to be compared with those sent by the invoking TP. The user name and password can each be as many as 10 characters. Both parameters are case-sensitive.
<p>
This variable is ignored if conversation security is not activated or if the password has already been verified, as described for the <b>AlreadyVerified</b> entry.

</dd>
</dl>
<p>&nbsp;</p></body>
</HTML>
