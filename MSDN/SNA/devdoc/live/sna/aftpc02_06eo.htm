<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>aftp_query_system_info</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_sna_aftp_query_system_info_aftp"></a>aftp_query_system_info</h1>
<p>
The <b>aftp_query_system_info</b> call gets information about the AFTP server and the computer it is running on. A connection to the AFTP server must be established before using this call.</p>
<p>
<b>AFTP_ENTRY aftp_query_system_info(<br>
IN AFTP_HANDLE_TYPE </b><i>connection_id</i><b>,<br>
OUT unsigned char AFTP_PTR </b><i>system_info</i><b>,<br>
IN AFTP_LENGTH_TYPE </b><i>system_info_size</i><b>,<br>
OUT AFTP_LENGTH_TYPE AFTP_PTR </b><i>returned_length</i><b>,<br>
OUT AFTP_RETURN_CODE_TYPE AFTP_PTR </b><i>return_code<br>
</i><b>);</b></p>
<h4>Parameters</h4>
<dl>
<dt>
<i>connection_id</i></dt>
<dd>
An AFTP connection object originally created with <a href="aftpc02_2nao.htm"><b>aftp_create</b></a>.</dd>
<dt>
<i>system_info</i></dt>
<dd>
Buffer to store a text string describing the operating system and AFTP server version.
<p>
Use the AFTP_SYSTEM_INFO_SIZE constant to define the length of this buffer. Add 1 to the size if you want to be able to add a null terminator to the text in the buffer.
</dd>
<dt>
<i>system_info_size</i></dt>
<dd>
Size in bytes of the <i>system_info</i> parameter.</dd>
<dt>
<i>returned_length</i></dt>
<dd>
Number of bytes stored in the <i>system_info</i> parameter.</dd>
<dt>
<i>return_code</i></dt>
<dd>
The return code issued for this function. See <a href="aftpc03_5h0w.htm">AFTP Return Codes</a> for the list of possible return codes.
</dd>
</dl>
<h4>Example</h4>
<pre><code>{
    AFTP_HANDLE_TYPE         connection_id;
    AFTP_RETURN_CODE_TYPE    aftp_rc;
    unsigned char            system_info[AFTP_SYSTEM_INFO_SIZE+1];
    AFTP_LENGTH_TYPE         system_info_length;

    /*
     * Before issuing the example call, you must have:
     *    a connection_id, use:         aftp_create()
     *    a connection to server, use:  aftp_connect()
     */

    /*
     * Query the AFTP server computer for more information.
     */

    aftp_query_system_info(
        connection_id,
        system_info,
        (AFTP_LENGTH_TYPE)sizeof(system_info)-1,
        &amp;system_info_length,
        &amp;aftp_rc);

    system_info[system_info_length] = '\0';

    if (aftp_rc != AFTP_RC_OK) {
        fprintf(stderr, "Error querying AFTP server system.\n");
    }
}
 </code></pre>
<h4>Line Flows</h4>
<p>
The request for the system information is sent to the AFTP server and the call waits for a response indicating the success or failure of the query system information operation. The system information of the AFTP server computer is sent as the response if the query was successful.</p>
<p>&nbsp;</p></body>
</HTML>
