<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Status-Control Message</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_sna_status_control_message_3270"></a>Status-Control Message</h2>
<p>
<b>Status-Control</b> messages provide access to session control and data flow control protocols on the PLU session using the PLU connection; they are not used on either of the other connections. <b>Status-Control</b> messages map directly to the equivalent SNA session control and data flow control RUs.</p>
<p>
All <b>Status-Control</b> messages that correspond to SNA requests on the normal flow with the exception of LUSTAT-sent RQE, and <b>Status-Control</b> messages corresponding to CLEAR and STSN request on the expedited flow, have the ACKRQD (acknowledgment required) field set. <b>Status-Control</b> messages that correspond to SNA requests on the expedited flow (with the exception of CLEAR and STSN) do not have the ACKRQD field set by the local node. However, the application can set ACKRQD when sending these <b>Status-Control</b> messages. The last figure in this topic summarizes which <b>Status-Control</b> requests always have ACKRQD set.</p>
<p>
If a <b>Status-Control</b> request has ACKRQD set in the message header, then the recipient must supply a <b>Status-Control</b> response (that is, Acknowledge, Negative-Acknowledge-1 or Negative-Acknowledge-2) before the sender sends further <a href="3270c4_4eeo.htm"><b>Data</b></a> messages or further <b>Status-Control</b> requests on the flow; the sender can still send <b>Status-Control</b> responses, <b>Status-Acknowledge</b>, <b>Status-Error</b>, and <b>Status-Resource</b> messages on the flow. This applies to both normal and expedited flows and all request modes (including delayed-request mode). The message key received on the request must be returned on the response (this is to allow multiple RQE LUSTAT messages to be outstanding). The local node increments the message key on <b>Status-Control</b> requests and DATAFMI messages that it sends to the application on the PLU connection.</p>
<p>
For the LUA variant of the FMI, the message key field is used in a different way, as follows:
<ul>
<li>
For inbound expedited flow requests, the local node sets the SNA sequence number to the value supplied by the application in the message key field. The application must ensure that this field is set to the correct sequence number.</li>
<li>
For inbound <b>Status-Control</b> responses, the local node sets the SNA sequence number to the value supplied by the application in the message key field. The application must ensure that this field is set to the sequence number of the request for which a response is being sent.</li>
</ul>
<p>
Except in the case of <b>Status-Control(LUSTAT)</b>, if a <b>Status-Control</b> request does not have ACKRQD set then the application should not reply, since a positive response has already been sent by the local node.</p>
<p>
For example, if the application sends a <b>Status-Control(QC) Request</b> with ACKRQD set (corresponding to an SNA request on the normal flow), this blocks further data and <b>Status-Control</b> requests corresponding to the inbound normal flow until the <b>Status-Control(QC)</b> response is received. It does not block other messages on the normal flow, or messages on the expedited flow; for example, the application could still send <b>Status-Control(SIGNAL)</b>.</p>
<p>
The receipt of the <b>Status-Control</b> response implies an acknowledgment to all outstanding messages (including <b>Data</b> messages) on the flow.</p>
<p>
The use of ACKRQD on <b>Status-Control</b> messages effectively enforces definite-response and immediate request mode. This is appropriate for:
<ul>
<li>
<b>Status-Control</b> messages that correspond to the SNA requests CLEAR and STSN (because the expedited flow is RQD).</li>
<li>
<b>Status-Control</b> messages corresponding to all the DFC requests (which are RQD) except LUSTAT (which can be RQE).</li>
</ul>
<p>
The application can set ACKRQD on <b>Status-Control</b> requests that correspond to SNA requests on the expedited flow, even where ACKRQD is not required. For example, when an application is signaling for direction (for example, a 3270 emulator with a terminal operator repeatedly pressing the ATTN key), it can generate multiple <b>Status-Control(SIGNAL) Request</b> messages, which would adversely affect the performance of other users. The application can set ACKRQD on the first <b>Status-Control(SIGNAL) Request</b> and ignore events that would cause further <b>Status-Control(SIGNAL) Request</b> messages until the <b>Status-Control(SIGNAL)</b> <b>Response</b> is received from the local node.</p>
<p>
The message flows in the following six figures show outbound and inbound <b>Status-Control</b> sequences with and without ACKRQD and the corresponding SNA RUs:</p>
<p>
In the first illustration, the application sends <b>Status-Control(CHASE)</b>.</p>
<p>
<img src="images/32703z.gif" border=0></p>
<p>
In the following illustration, the host sends BID request. </p>
<p>
<img src="images/32703za.gif" border=0></p>
<p>
In the following illustration, the application sends <b>Status-Control(SHUTC)</b>.</p>
<p>
<img src="images/32703zb.gif" border=0></p>
<p>
In the following illustration, the host sends SNA SIGNAL request.</p>
<p>
<img src="images/32703zc.gif" border=0></p>
<p>
In the following illustration, the host sends multiple RQE LUSTAT requests; the application rejects the first one.</p>
<p>
<img src="images/32703zd.gif" border=0></p>
<p>
In the following illustration, the application sends <b>Status-Control(LUSTAT)</b> NOACKRQD. </p>
<p>
<img src="images/32703ze.gif" border=0></p>
<p>
The following table summarizes the <b>Status-Control</b> requests supported by the local node and SNA session control (SC) and data flow control (DFC) requests. For each <b>Status-Control</b> request, the table gives:
<ul>
<li>
The SNA category of the corresponding SNA request (SC or DFC).</li>
<li>
The flow used by the corresponding SNA request (normal or expedited).</li>
<li>
The TS or FM profiles on which the corresponding SNA request is supported.</li>
<li>
The directions for which it is valid (NODE &lt;–&gt; APPL).</li>
<li>
Whether it requires ACKRQD; note that the application can set ACKRQD on a <b>Status-Control</b> request that does not require it.</li>
<li>
The hexadecimal code used in the control-type field of the <b>Status-Control</b> message (see <a href="3270c4_0icw.htm">FMI Message Formats</a>).</li>
</ul>
<table cellspacing=4 cols=7>
<tr valign=top>
<th align=left width=13%>Status-<br>
Control</th>
<th align=left width=15%>SNA RQ flow</th>
<th align=left width=11%>TS <br>
profile</th>
<th align=left width=11%>FM <br>
profile</th>
<th align=left width=16%>Direction node–appl</th>
<th align=left width=17%><br>
ACKRQD</th>
<th align=left width=17%><br>
Code</th>
</tr>
<tr valign=top>
<td width=13%>CLEAR</td>
<td width=15%>SC,Exp</td>
<td width=11%>2,3,4</td>
<td width=11%>– </td>
<td width=16%>–&gt;</td>
<td width=17%>ACKRQD</td>
<td width=17%>CCLEAR<br>
(0x01)</td>
</tr>
<tr valign=top>
<td width=13%>SDT</td>
<td width=15%>SC,Exp</td>
<td width=11%>3,4</td>
<td width=11%>– </td>
<td width=16%>–&gt;</td>
<td width=17%>– </td>
<td width=17%>CSDT<br>
(0x02)</td>
</tr>
<tr valign=top>
<td width=13%>RQR</td>
<td width=15%>SC,Exp</td>
<td width=11%>4</td>
<td width=11%>– </td>
<td width=16%>&lt;–</td>
<td width=17%>– </td>
<td width=17%>CRQR<br>
(0x03)</td>
</tr>
<tr valign=top>
<td width=13%>STSN</td>
<td width=15%>SC,Exp</td>
<td width=11%>4</td>
<td width=11%>– </td>
<td width=16%>–&gt;</td>
<td width=17%>ACKRQD</td>
<td width=17%>CSTSN<br>
(0x04)<br>
</td>
</tr>
<tr valign=top>
<td width=13%>CANCEL</td>
<td width=15%>DFC,Norm</td>
<td width=11%>– </td>
<td width=11%>3,4,7</td>
<td width=16%>&lt;–&gt;</td>
<td width=17%>ACKRQD</td>
<td width=17%>CCANCEL<br>
(0x10)</td>
</tr>
<tr valign=top>
<td width=13%>LUSTAT</td>
<td width=15%>DFC,Norm</td>
<td width=11%>– </td>
<td width=11%>3,4,7</td>
<td width=16%>&lt;–&gt;</td>
<td width=17%>– </td>
<td width=17%>CLUSTAT<br>
(0x11)</td>
</tr>
<tr valign=top>
<td width=13%>SIGNAL</td>
<td width=15%>DFC,Exp</td>
<td width=11%>– </td>
<td width=11%>3,4,7</td>
<td width=16%>&lt;–&gt;</td>
<td width=17%>– </td>
<td width=17%>CSIGNAL<br>
(0x12)</td>
</tr>
<tr valign=top>
<td width=13%>RSHUTD</td>
<td width=15%>DFC,Exp</td>
<td width=11%>– </td>
<td width=11%>3,4,7</td>
<td width=16%>&lt;–</td>
<td width=17%>– </td>
<td width=17%>CRSHUTD<br>
(0x13)<br>
</td>
</tr>
<tr valign=top>
<td width=13%>BID</td>
<td width=15%>DFC,Norm</td>
<td width=11%>– </td>
<td width=11%>3,4</td>
<td width=16%>–&gt;</td>
<td width=17%>ACKRQD</td>
<td width=17%>CBID<br>
(0x14)</td>
</tr>
<tr valign=top>
<td width=13%>CHASE</td>
<td width=15%>DFC,Norm</td>
<td width=11%>– </td>
<td width=11%>3,4</td>
<td width=16%>&lt;–&gt;</td>
<td width=17%>ACKRQD</td>
<td width=17%>CCHASE<br>
(0x15)</td>
</tr>
<tr valign=top>
<td width=13%>SHUTC</td>
<td width=15%>DFC,Exp</td>
<td width=11%>– </td>
<td width=11%>3,4</td>
<td width=16%>&lt;–</td>
<td width=17%>– </td>
<td width=17%>CSHUTC<br>
(0x16)</td>
</tr>
<tr valign=top>
<td width=13%>SHUTD</td>
<td width=15%>DFC,Exp</td>
<td width=11%>– </td>
<td width=11%>3,4</td>
<td width=16%>–&gt;</td>
<td width=17%>– </td>
<td width=17%>CSHUTD<br>
(0x17)</td>
</tr>
<tr valign=top>
<td width=13%>RTR</td>
<td width=15%>DFC,Norm</td>
<td width=11%>– </td>
<td width=11%>3,4</td>
<td width=16%>&lt;–</td>
<td width=17%>ACKRQD</td>
<td width=17%>CRTR<br>
(0x18)<br>
</td>
</tr>
<tr valign=top>
<td width=13%>QC</td>
<td width=15%>DFC,Norm</td>
<td width=11%>– </td>
<td width=11%>4</td>
<td width=16%>&lt;–&gt;</td>
<td width=17%>ACKRQD</td>
<td width=17%>CQC<br>
(0x20)</td>
</tr>
<tr valign=top>
<td width=13%>QEC</td>
<td width=15%>DFC,Exp</td>
<td width=11%>– </td>
<td width=11%>4</td>
<td width=16%>&lt;–&gt;</td>
<td width=17%>– </td>
<td width=17%>CQEC<br>
(0x21)</td>
</tr>
<tr valign=top>
<td width=13%>RELQ</td>
<td width=15%>DFC,Exp</td>
<td width=11%>– </td>
<td width=11%>4</td>
<td width=16%>&lt;–&gt;</td>
<td width=17%>– </td>
<td width=17%>CRELQ<br>
(0x22)</td>
</tr>
</table><br>
<p>
The following requests are used only with LUA (see <a href="3270c3_886o.htm">FMI Concepts</a>).</p>
<table cellspacing=4 cols=7>
<tr valign=top>
<th align=left width=13%>Status-<br>
Control</th>
<th align=left width=15%>SNA RQ flow</th>
<th align=left width=11%>TS <br>
profile</th>
<th align=left width=11%>FM <br>
profile</th>
<th align=left width=17%>Direction node–appl</th>
<th align=left width=16%>ACKRQD</th>
<th align=left width=17%>Code</th>
</tr>
<tr valign=top>
<td width=13%>CRV</td>
<td width=15%>SC,Exp</td>
<td width=11%>3,4</td>
<td width=11%>– </td>
<td width=17%>–&gt;</td>
<td width=16%>ACKRQD</td>
<td width=17%>CCRV<br>
(0x05)</td>
</tr>
<tr valign=top>
<td width=13%>BIS</td>
<td width=15%>DFC,Norm</td>
<td width=11%>– </td>
<td width=11%>18</td>
<td width=17%>&lt;–&gt;</td>
<td width=16%>ACKRQD</td>
<td width=17%>CBIS<br>
(0x19)</td>
</tr>
<tr valign=top>
<td width=13%>SBI</td>
<td width=15%>DFC,Exp</td>
<td width=11%>– </td>
<td width=11%>18</td>
<td width=17%>&lt;–&gt;</td>
<td width=16%>ACKRQD</td>
<td width=17%>CSBI<br>
(0x1A)</td>
</tr>
</table><br>
<p>
The use of particular <b>Status-Control</b> messages is described in following topics of this section, in the context of PLU session protocols such as chaining, brackets, recovery, and so on. See also <a href="3270c4_6prk.htm"><b>Status-Control</b></a> for the formats of <b>Status-Control</b> messages.</p>
<p>&nbsp;</p></body>
</HTML>
