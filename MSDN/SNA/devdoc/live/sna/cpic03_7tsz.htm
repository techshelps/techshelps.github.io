<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Set_Deallocate_Type</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_sna_set_deallocate_type_cpic"></a>Set_Deallocate_Type</h1>
<p>
The <b>Set_Deallocate_Type</b> call (function name <b>cmsdt</b>) specifies how the conversation is to be deallocated.</p>
<pre><code><b>CM_ENTRY Set_Deallocate_Type(
  unsigned char FAR</b><i> *conversation_ID</i><b>,  </b>
<b>  CM_INT32 FAR</b><i> *deallocate_type</i><b>,       </b>
<b>  CM_INT32 FAR</b><i> *return_code            </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>conversation_ID</i></dt>
<dd>
Supplied parameter. Specifies the identifier for the conversation. The value of this parameter was returned by <a href="cpic03_0jhf.htm"><b>Initialize_Conversation</b></a> or <a href="cpic03_70df.htm"><b>Accept_Conversation</b></a>.</dd>
<dt>
<i>deallocate_type</i></dt>
<dd>
Supplied parameter. Specifies how to perform the deallocation. Possible values are:
<dl>
<dt>
CM_DEALLOCATE_ABEND</dt>
<dd>
Indicates that the conversation is to be deallocated abnormally and unconditionally. A program should specify CM_DEALLOCATE_ABEND when it encounters an error preventing the successful completion of a transaction.
<p>
If the conversation is in SEND state, CPI-C sends the contents of the local LU's send buffer to the partner program before deallocating the conversation. If the conversation is in RECEIVE state, incoming data can be purged. For a basic conversation in SEND state, logical record truncation can occur.
</dd>
<dt>
CM_DEALLOCATE_CONFIRM</dt>
<dd>
Is used to send the partner program the contents of the local LU's send buffer and a request to confirm the deallocation.
<p>
This request for deallocation confirmation is sent by <a href="cpic03_5vkz.htm"><b>Deallocate</b></a> or by <a href="cpic03_94ir.htm"><b>Send_Data</b></a> with the send type set to CM_SEND_AND_DEALLOCATE. The conversation is deallocated normally when the partner program issues <a href="cpic03_6c6b.htm"><b>Confirmed</b></a>, responding to the confirmation request.
</dd>
<dt>
CM_DEALLOCATE_FLUSH</dt>
<dd>
Is used to send the contents of the local LU's send buffer to the partner program before deallocating the conversation normally.</dd>
<dt>
CM_DEALLOCATE_SYNC_LEVEL</dt>
<dd>
Uses the conversation's synchronization level to determine how to deallocate the conversation. A default synchronization level is established by <a href="cpic03_0jhf.htm"><b>Initialize_Conversation</b></a> and can be overridden by <a href="cpic03_3fvn.htm"><b>Set_Sync_Level</b></a>.
<p>
If the synchronization level of the conversation is CM_NONE, the default, the contents of the local LU's send buffer are sent to the partner program and the conversation is deallocated normally.

<p>
If the synchronization level of the conversation is CM_CONFIRM, the contents of the local LU's send buffer and a request to confirm the deallocation are sent to the partner program. This request for deallocation confirmation is sent by <a href="cpic03_5vkz.htm"><b>Deallocate</b></a> or by <a href="cpic03_94ir.htm"><b>Send_Data</b></a> with the send type set to CM_SEND_AND_DEALLOCATE. The conversation is deallocated normally when the partner program issues the <a href="cpic03_6c6b.htm"><b>Confirmed</b></a> call, responding to the confirmation request.

</dd>
</dl>
</dd>
<dt>
<i>return_code</i></dt>
<dd>
The code returned from this call. The valid return codes are listed below.
</dd>
</dl>
<h4>Return Codes</h4>
<dl>
<dt>
cm_ok</dt>
<dd>
Primary return code; the call executed successfully.</dd>
<dt>
cm_program_parameter_check</dt>
<dd>
Primary return code; one of the following occurred:
<ul>
<li>
The value specified by <i>conversation_ID</i> or <i>deallocate_type</i> is invalid.</li>
<li>
The <i>deallocate_type</i> parameter specifies CM_DEALLOCATE_CONFIRM, but the conversation's synchronization level is set to CM_NONE.</li>
<li>
The address of a variable is invalid.</li>
</ul>
</dd>
<dt>
cm_product_specific_error</dt>
<dd>
Primary return code; a product-specific error occurred and has been logged in the product's error log.
</dd>
</dl>
<h4>State Changes</h4>
<p>
The conversation can be in any state except RESET.</p>
<p>
There is no state change.</p>
<h4>Remarks</h4>
<p>
This call overrides the default deallocate type established by <a href="cpic03_0jhf.htm"><b>Initialize_Conversation</b></a> or <a href="cpic03_70df.htm"><b>Accept_Conversation</b></a>. The default deallocate type is CM_DEALLOCATE_SYNC_LEVEL.</p>
<p>
The deallocation instructions specified by this call take effect when <a href="cpic03_5vkz.htm"><b>Deallocate</b></a> is issued or when the send type is set to CM_SEND_AND_DEALLOCATE and <a href="cpic03_94ir.htm"><b>Send_Data</b></a> is issued.</p>
<p>
You can set <i>deallocate_type</i> to CM_FLUSH if the synchronization level of the conversation is set to CM_NONE or CM_CONFIRM.</p>
<p>
The value CM_DEALLOCATE_FLUSH is functionally the same as CM_DEALLOCATE_SYNC_LEVEL with the conversation's synchronization level set to CM_NONE.</p>
<p>
The value CM_DEALLOCATE_CONFIRM is functionally the same as CM_DEALLOCATE_SYNC_LEVEL with the conversation's synchronization level set to CM_CONFIRM.</p>
<p>&nbsp;</p></body>
</HTML>
