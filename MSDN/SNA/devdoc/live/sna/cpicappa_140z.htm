<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Common Return Codes</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_sna_common_return_codes_cpic"></a>Common Return Codes</h1>
<p>
This section describes the return codes for CPI-C calls. The return codes are listed in integer order.</p>
<p>
Call-specific return codes are described for the individual calls in <a href="cpic03_4w83.htm">CPI-C Calls</a>.</p>
<h4>0</h4>
<dl>
<dt>
cm_ok</dt>
<dd>
The call executed successfully.</dd>
</dl>
<h4>1</h4>
<dl>
<dt>
cm_allocation_failure_no_retry</dt>
<dd>
The conversation cannot be allocated because of a permanent condition, such as a configuration error or session protocol error. To determine the error, the system administrator should examine the error log file. Do not retry the allocation until the error has been corrected.</dd>
</dl>
<h4>2</h4>
<dl>
<dt>
cm_allocation_failure_retry</dt>
<dd>
The conversation could not be allocated because of a temporary condition, such as a link failure. The reason for the failure is logged in the system error log. Retry the allocation.</dd>
</dl>
<h4>3</h4>
<dl>
<dt>
cm_conversation_type_mismatch</dt>
<dd>
The partner LU or program does not support the conversation type (basic or mapped) specified in the allocation request.</dd>
</dl>
<h4>5</h4>
<dl>
<dt>
cm_pip_not_specified_correctly</dt>
<dd>
The allocation request was rejected by a non-CPI-C LU 6.2 TP. The partner program requires one or more PIP data variables, which are not supported by CPI-C.</dd>
</dl>
<h4>6</h4>
<dl>
<dt>
cm_security_not_valid</dt>
<dd>
The user identifier or password specified in the allocation request was not accepted by the partner LU.</dd>
</dl>
<h4>8</h4>
<dl>
<dt>
cm_sync_lvl_not_supported_pgm</dt>
<dd>
The partner program does not support the synchronization level specified in the allocation request.</dd>
</dl>
<h4>9</h4>
<dl>
<dt>
cm_tpn_not_recognized</dt>
<dd>
The partner LU does not recognize the program name specified in the allocation request.</dd>
</dl>
<h4>10</h4>
<dl>
<dt>
cm_tp_not_available_no_retry</dt>
<dd>
The partner LU cannot start the program specified in the allocation request because of a permanent condition. The reason for the error may be logged on the remote node. Do not retry the allocation until the error has been corrected.</dd>
</dl>
<h4>11</h4>
<dl>
<dt>
cm_tp_not_available_retry</dt>
<dd>
The partner LU cannot start the program specified in the allocation request because of a temporary condition. The reason for the error may be logged on the remote node. Retry the allocation.</dd>
</dl>
<h4>17</h4>
<dl>
<dt>
cm_deallocated_abend</dt>
<dd>
The conversation has been deallocated for one of the following reasons:
<ul>
<li>
The remote program issued <a href="cpic03_5vkz.htm"><b>Deallocate</b></a> with the type parameter set to CM_DEALLOCATE_ABEND. If the conversation for the remote program was in receive state when the call was issued, information sent by the local program and not yet received by the remote program is purged.</li>
<li>
The partner program terminated normally but did not deallocate the conversation before terminating.</li>
</ul>
</dd>
</dl>
<h4>18</h4>
<dl>
<dt>
cm_deallocated_normal</dt>
<dd>
This return code does not indicate an error.
<p>
The partner program issued the <a href="cpic03_5vkz.htm"><b>Deallocate</b></a> call with <i>deallocate_type</i> set to one of the following:

<ul>
<li>
CM_DEALLOCATE_FLUSH.</li>
<li>
CM_DEALLOCATE_SYNC_LEVEL with the synchronization level of the conversation specified as CM_NONE.</li>
</ul>
</dd>
</dl>
<h4>19</h4>
<dl>
<dt>
cm_parameter_error</dt>
<dd>
The local program specified an invalid argument in one of its parameters.</dd>
</dl>
<h4>20</h4>
<dl>
<dt>
cm_product_specific_error</dt>
<dd>
A product-specific error occurred and has been logged in the product's error log.</dd>
</dl>
<h4>21</h4>
<dl>
<dt>
cm_program_error_no_trunc</dt>
<dd>
While in SEND state or in SEND-PENDING state with the error direction set to CM_SEND_ERROR, the partner program issued <a href="cpic03_2j6r.htm"><b>Send_Error</b></a>. Data was not truncated.</dd>
</dl>
<h4>22</h4>
<dl>
<dt>
cm_program_error_purging</dt>
<dd>
One of the following occurred:
<ul>
<li>
While in RECEIVE or CONFIRM state, the partner program issued <a href="cpic03_2j6r.htm"><b>Send_Error</b></a>. Data sent but not yet received is purged.</li>
<li>
While in SEND-PENDING state with the error direction set to CM_RECEIVE_ERROR, the partner program issued <b>Send_Error</b>. Data was not purged.</li>
</ul>
</dd>
</dl>
<h4>23</h4>
<dl>
<dt>
cm_program_error_trunc (for a basic conversation)</dt>
<dd>
In SEND state, before finishing sending a complete logical record, the partner program issued <a href="cpic03_2j6r.htm"><b>Send_Error</b></a>. The local program may have received the first part of the logical record through a <a href="cpic03_3vhf.htm"><b>Receive</b></a> call.</dd>
</dl>
<h4>24</h4>
<dl>
<dt>
cm_program_parameter_check</dt>
<dd>
A parameter or the address of a variable is invalid. For details, see individual calls in <a href="cpic03_4w83.htm">CPI-C Calls</a>.</dd>
</dl>
<h4>25</h4>
<dl>
<dt>
cm_program_state_check</dt>
<dd>
The call was not issued in an allowed conversation state. For details, see individual calls in <a href="cpic03_4w83.htm">CPI-C Calls</a>.</dd>
</dl>
<h4>26</h4>
<dl>
<dt>
cm_resource_failure_no_retry</dt>
<dd>
One of the following occurred:
<ul>
<li>
The conversation was terminated prematurely because of a permanent condition. Do not retry until the error has been corrected.</li>
<li>
The partner program did not deallocate the conversation before terminating normally.</li>
</ul>
</dd>
</dl>
<h4>27</h4>
<dl>
<dt>
cm_resource_failure_retry</dt>
<dd>
The conversation was terminated prematurely because of a temporary condition, such as modem failure. Retry the conversation.</dd>
</dl>
<h4>28</h4>
<dl>
<dt>
cm_unsuccessful</dt>
<dd>
The verb issued by the local program was not executed successfully.</dd>
</dl>
<h4>30</h4>
<dl>
<dt>
cm_deallocated_abend_svc</dt>
<dd>
The conversation has been deallocated for one of the following reasons:
<ul>
<li>
The partner program issued <a href="cpic03_5vkz.htm"><b>Deallocate</b></a> with the type parameter set to ABEND_SVC.</li>
<li>
The partner program did not deallocate the conversation before terminating.</li>
</ul>

<p>
If the conversation is in RECEIVE state for the partner program when this call is issued by the local program, data sent by the local program and not yet received by the partner program is purged.
</dd>
</dl>
<h4>31</h4>
<dl>
<dt>
cm_deallocated_abend_timer</dt>
<dd>
The conversation has been deallocated because the partner program issued <a href="cpic03_5vkz.htm"><b>Deallocate</b></a> with the type parameter set to ABEND_TIMER. If the conversation is in RECEIVE state for the partner program when this call is issued by the local program, data sent by the local program and not yet received by the partner program is purged.</dd>
</dl>
<h4>32</h4>
<dl>
<dt>
cm_svc_error_no_trunc (for a basic conversation)</dt>
<dd>
While in SEND state, the partner program or partner LU issued <a href="cpic03_2j6r.htm"><b>Send_Error</b></a> with the type<i> </i>parameter set to SVC. Data was not truncated.</dd>
</dl>
<h4>33</h4>
<dl>
<dt>
cm_svc_error_purging</dt>
<dd>
While in SEND state, the partner program or partner LU issued <a href="cpic03_2j6r.htm"><b>Send_Error</b></a> with the type parameter set to SVC. Data sent to the partner program may have been purged.</dd>
</dl>
<h4>34</h4>
<dl>
<dt>
cm_svc_error_trunc (for a basic conversation)</dt>
<dd>
While in RECEIVE or CONFIRM state, the partner program or partner LU issued <a href="cpic03_2j6r.htm"><b>Send_Error</b></a> with the type parameter set to SVC before it finished sending a complete logical record. The local program may have received the first part of the logical record.</dd>
</dl>
<h4>35</h4>
<dl>
<dt>
cm_operation_not_accepted</dt>
<dd>
A previous operation on this conversation is incomplete.</dd>
</dl>
<h4>36</h4>
<dl>
<dt>
cm_system_event</dt>
<dd>
This error code is not used by Microsoft® SNA Server.</dd>
</dl>
<h4>37</h4>
<dl>
<dt>
cm_operation_incomplete</dt>
<dd>
The operation has not completed and is still in progress. The program can issue <a href="cpic03_6un7.htm"><b>Wait_For_Conversation</b></a> to await the completion of the operation, or <a href="cpic03_017n.htm"><b>Cancel_Conversation</b></a> to cancel the operation and conversation. If <a href="cpic03_3kir.htm"><b>Specify_Windows_Handle</b></a> has been called, the application should wait for notification by a windows message and not call <b>Wait_For_Conversation</b>.
</dd>
</dl>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
