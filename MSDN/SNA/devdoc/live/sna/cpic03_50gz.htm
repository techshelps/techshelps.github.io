<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Set_Log_Data</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_sna_set_log_data_cpic"></a>Set_Log_Data</h1>
<p>
The <b>Set_Log_Data</b> call (function name <b>cmsld</b>) specifies a log message (log data) and its length to be sent to the partner LU. This call is allowed only in basic conversations. It overrides the default log data, which is null, and the default log data length, which is zero.</p>
<pre><code><b>CM_ENTRY Set_Log_Data(
  unsigned char FAR</b><i> *conversation_ID</i><b>,  </b>
<b>  unsigned char FAR</b><i> *log_data</i><b>,         </b>
<b>  CM_INT32 FAR</b><i> *log_data_length</i><b>,       </b>
<b>  CM_INT32 FAR</b><i> *return_code            </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>conversation_ID</i></dt>
<dd>
Supplied parameter. Specifies the identifier for the conversation. The value of this parameter was returned by <a href="cpic03_0jhf.htm"><b>Initialize_Conversation</b></a> or <a href="cpic03_70df.htm"><b>Accept_Conversation</b></a>.</dd>
<dt>
<i>log_data</i></dt>
<dd>
Supplied parameter. Specifies the starting address of the data to be sent to the partner LU. It can contain up to 512 ASCII characters. The allowed characters are:
<ul>
<li>
Uppercase and lowercase letters.</li>
<li>
Numerals 0 through 9.</li>
<li>
Special characters.</li>
<li>
The space.</li>
</ul>
</dd>
<dt>
<i>log_data_length</i></dt>
<dd>
Supplied parameter. Specifies the length of the log data. The range is from 0 through 512 bytes.
<p>
A length of 0 indicates that there is no log data, and the <i>log_data</i> parameter is ignored.
</dd>
<dt>
<i>return_code</i></dt>
<dd>
The code returned from this call. The valid return codes are listed below.
</dd>
</dl>
<h4>Return Codes</h4>
<dl>
<dt>
cm_ok</dt>
<dd>
Primary return code; the call executed successfully.</dd>
<dt>
cm_program_parameter_check</dt>
<dd>
Primary return code; one of the following occurred:
<ul>
<li>
The value specified by <i>conversation_ID</i> is invalid.</li>
<li>
The conversation type is set to mapped.</li>
<li>
The value specified by <i>log_data_length</i> is out of range (greater than 512 or less than 0).</li>
</ul>
</dd>
<dt>
cm_product_specific_error</dt>
<dd>
Primary return code; a product-specific error occurred and has been logged in the product's error log.
</dd>
</dl>
<h4>State Changes</h4>
<p>
The conversation can be in any state except RESET.</p>
<p>
There is no state change.</p>
<h4>Remarks</h4>
<p>
The log data specified by <b>Set_Log_Data</b> is sent to the partner LU when the local program issues one of the following calls:
<ul>
<li>
<a href="cpic03_2j6r.htm"><b>Send_Error</b></a></li>
<li>
<a href="cpic03_5vkz.htm"><b>Deallocate</b></a> with the conversation's deallocate type set to CM_DEALLOCATE_ABEND</li>
<li>
<a href="cpic03_94ir.htm"><b>Send_Data</b></a> with the conversation's send type set to CM_SEND_AND_DEALLOCATE and the deallocate type set to CM_DEALLOCATE_ABEND</li>
</ul>
<p>
After sending the log data to the partner LU, the local LU resets the log data to null and the log data length to zero.</p>
<p>
CPI-C automatically converts the log data from ASCII to other encoding standards, such as EBCDIC, as required.</p>
<p>&nbsp;</p></body>
</HTML>
