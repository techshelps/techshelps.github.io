<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Initialize_Conversation</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_sna_initialize_conversation_cpic"></a>Initialize_Conversation</h1>
<p>
The <b>Initialize_Conversation</b> call (function name <b>cminit</b>) is issued by the invoking program to obtain an 8-byte conversation identifier and to set the initial values for the conversation's characteristics.</p>
<pre><code><b>CM_ENTRY Initialize_Conversation(
  unsigned char FAR</b><i> *conversation_ID</i><b>,  </b>
<b>  unsigned char FAR</b><i> *sym_dest_name</i><b>,  </b>
<b>  CM_INT32 FAR</b><i> *return_code          </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>conversation_ID</i></dt>
<dd>
Returned parameter. Specifies the identifier for the conversation. It is used by subsequent CPI-C calls.</dd>
<dt>
<i>sym_dest_name</i></dt>
<dd>
Supplied parameter. Specifies the symbolic destination name—the name associated with a side information entry loaded from the configuration file or defined by <a href="cpic03_3zqb.htm"><b>Set_CPIC_Side_Information</b></a> calls.
<p>
This parameter is an 8-byte ASCII character string. The allowed characters are as follows:

<ul>
<li>
Uppercase letters</li>
<li>
Numerals 0 through 9</li>
</ul>

<p>
This parameter can also be set to eight spaces. In this case, the invoking program must issue the following calls before issuing <a href="cpic03_2krn.htm"><b>Allocate</b></a>:

<p class=indent1>
<a href="cpic03_43hf.htm"><b>Set_Mode_Name</b></a></p>

<p class=indent1>
<a href="cpic03_9qg3.htm"><b>Set Partner_LU_Name</b></a></p>

<p class=indent1>
<a href="cpic03_312b.htm"><b>Set_TP_Name</b></a></p>

</dd>
<dt>
<i>return_code</i></dt>
<dd>
The code returned from this call. The valid return codes are listed below.
</dd>
</dl>
<h4>Return Codes</h4>
<dl>
<dt>
cm_ok</dt>
<dd>
Primary return code; the call executed successfully.</dd>
<dt>
cm_program_parameter_check</dt>
<dd>
Primary return code; the value specified by <i>sym_dest_name</i> does not match a symbolic destination name in the side information table and is not a space.</dd>
<dt>
cm_product_specific_error</dt>
<dd>
Primary return code; a product-specific error occurred and has been logged in the product's error log.
</dd>
</dl>
<h4>State Changes</h4>
<p>
The conversation is in RESET state.</p>
<p>
If the <i>return_code</i> is cm_ok, the conversation changes to INITIALIZE state. For other return codes, the conversation state remains unchanged.</p>
<h4>Remarks</h4>
<p>
The initial values are CPI-C defaults or are derived from side information associated with the symbolic destination name. For more information about initial values and side information, see <a href="cpic01_2kkj.htm">Initial Conversation Characteristics</a> and <a href="cpic01_4zoj.htm">Side Information</a>.</p>
<p>
Initial values can be changed by the <b>Set_</b> calls.</p>
<p>
If the side information contains an invalid value or a <b>Set_</b> call sets a conversation characteristic to an invalid value, the error is returned on the <b>Allocate</b> call.</p>
<p>
If a CPIC application attempts to invoke more than one concurrent conversation, only a single Local APPC LU is used by all conversations.  This prevents concurrent conversations across two or more dependent LU6.2 LU's, causing subsequent Initialize_Conversation (CMALLC)calls to wait for the first conversation to be deallocated.</p>
<p>
If the CPIC application needs to invoke more than one concurrent conversation, independent LU6.2 must be used between Microsoft® SNA Server and the remote system.</p>
<p>
Upon successful execution of this call, CPI-C generates a conversation identifier. This identifier is a required parameter for all other CPI-C calls issued for this conversation by the invoking program.</p>
<p>&nbsp;</p></body>
</HTML>
