<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Record Access and Data Conversion</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_sna_record_access_and_data_conversion_oledb"></a>Record Access and Data Conversion</h2>
<p>
The design of the OLE DB APIs is similar to the APIs provided by ODBC and other ISAM APIs. The APIs are handle-based. After opening a file, the application can determine the buffer size required to store a row, use the cursor APIs to move, and optionally retrieve one or more rows of data using the row-level binding. </p>
<p>
Data is converted to default C data types as defined in ODBC, as illustrated in the following table:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=44%>Host data type</th>
<th align=left width=56%>Default C data type</th>
</tr>
<tr valign=top>
<td colspan=2 width=100%></td>
</tr>
<tr valign=top>
<td width=44%>Binary</td>
<td width=56%>unsigned char binary[]</td>
</tr>
<tr valign=top>
<td width=44%>Character</td>
<td width=56%>char string[]</td>
</tr>
<tr valign=top>
<td width=44%>Date (in character format)</td>
<td width=56%>date struct</td>
</tr>
<tr valign=top>
<td width=44%>Double</td>
<td width=56%>double</td>
</tr>
<tr valign=top>
<td width=44%>Long</td>
<td width=56%>int</td>
</tr>
<tr valign=top>
<td width=44%>Packed</td>
<td width=56%>unsigned char number[]</td>
</tr>
<tr valign=top>
<td width=44%>Short</td>
<td width=56%>short</td>
</tr>
<tr valign=top>
<td width=44%>Single</td>
<td width=56%>float</td>
</tr>
<tr valign=top>
<td width=44%>Time (in character format)</td>
<td width=56%>time struct</td>
</tr>
<tr valign=top>
<td width=44%>Time Stamp (in character format)</td>
<td width=56%>timestamp struct</td>
</tr>
<tr valign=top>
<td width=44%>Variable Binary</td>
<td width=56%>unsigned char binary[]</td>
</tr>
<tr valign=top>
<td width=44%>Variable Character</td>
<td width=56%>char string[]</td>
</tr>
<tr valign=top>
<td width=44%>Zoned</td>
<td width=56%>unsigned char number[]</td>
</tr>
</table><br>
<p>&nbsp;</p></body>
</HTML>
