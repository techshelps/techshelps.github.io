<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>LUSTATs</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_sna_lustats_3270"></a>LUSTATs </h2>
<p>
The DFC LUSTAT message is used within SNA to convey four bytes of sense data to the other session partner. It can also be used simply to send an RH to the other session partner (for example, to open a bracket; see the figures in <a href="3270c3_87w0.htm">Bracket Initiation</a>). The message flows on the normal flow and so is subject to direction restrictions; however, it can be sent (without EB or CD) on a half-duplex flip-flop session that is in error recovery pending state (see <a href="3270c3_95kg.htm">Recovery</a>).</p>
<p>
The local node allows the application to send <b>Status-Control(LUSTAT) Request</b> messages at any time that data traffic is active, except while sending data in chain. If the application is in a receiving state (using half-duplex protocol), the LUSTAT is queued up and used to provide the sense codes, which are filled into the next outbound request, and the SDI flag is set. The application can therefore present the sense codes for an error state without waiting for the next outbound data if required.</p>
<p>
The first byte of sense data must be 0x08 to generate a DATAFMI message with SDI (to be converted to a negative response). Other LUSTATs are left queued on the session until they can be sent.</p>
<p>
If multiple <b>Status-Control(LUSTAT)</b> messages are sent by the application while in a receive state, the local node will queue them all. When outbound data has been delivered to the application with SDI set, as indicated above, and the application has converted it to a <a href="3270c4_5z00.htm"><b>Status-Acknowledge(Ack)</b></a>, the local node will send the negative response and the remaining LUSTATs (which can now flow since the half-duplex flip-flop state is error recovery pending).</p>
<p>
If the application intends to send multiple <b>Status-Control(LUSTAT)</b> messages to the host, it is possible that the host will attempt to initiate recovery before the last LUSTAT has been sent; in this case, the error recovery chain will be rejected by the next LUSTAT.</p>
<p>
Note that the application can send <b>Status-Control(LUSTAT) Request</b> with or without ACKRQD; the local node will map these to RQD and RQE LUSTATs respectively.</p>
<p>
The following three figures illustrate the use of <b>Status-Control(LUSTAT)</b> messages by an application using the half-duplex flip-flop mode.</p>
<p>
In the first illustration, the application issues <b>Status-Control(LUSTAT)</b> when it has direction.</p>
<p>
<img src="images/32703v.gif" border=0></p>
<p>
In the following illustration, the application sends <b>Status-Control(LUSTAT)</b> request when receiving data between chain. Next outbound data is delivered with SDI set which gets converted to negative RSP.</p>
<p>
<img src="images/32703va.gif" border=0></p>
<p>
In the following illustration, the application sends several <b>Status-Control(LUSTAT)</b> requests when receiving data in chain. Next outbound data is delivered with SDI set which gets converted to negative response. Subsequent LUSTATs are sent to host.</p>
<p>
<img src="images/32703vb.gif" border=0></p>
<p>&nbsp;</p></body>
</HTML>
