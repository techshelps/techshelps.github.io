<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OLE DB Command Object</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_sna_ole_db_command_object_oledb"></a>OLE DB Command Object</h1>
<p>
The Command object is created by an OLE DB consumer, or by a service provider on behalf of a consumer. A Command object is used to execute a DDM-specific command on a remote DDM server. The Command object currently supports executing Command Language commands on AS/400 DDM servers. </p>
<p>
It is important not to confuse a command, which is an OLE COM object, and its command text, which is a string. Commands are generally used for data definition, such as creating a table or granting privileges, and data manipulation, such as updating or deleting rows. A special case of data manipulation using the Command object is opening a rowset (a table).</p>
<p>
Before a consumer can use a command, it must determine if commands are supported. To do this, the consumer calls <b>QueryInterface</b> for <b>IDBCreateCommand</b> on a session. If this interface is exposed, the provider supports commands. To create a command, the consumer then calls <b>IDBCreateCommand::CreateCommand</b> on the session. A single session can be used to create multiple commands.</p>
<p>
When the command is first created, it does not contain a command text. The consumer sets the command text with <b>ICommandText::SetCommandText</b>. Because the text command syntax is provider-specific, the consumer passes the GUID of the syntax to use. For use with the Microsoft® OLE DB Provider for AS/400 and VSAM, the GUID is DBGUID_DBSQL. Please note that under the OLE DB Provider for AS/400 and VSAM this GUID does not signify that the text command is a superset of ANSI SQL. The level at which the provider supports ANSI SQL is specified by the DBPROP_SQLSUPPORT property.</p>
<p>
The syntax supported by the OLE DB Provider for AS/400 and VSAM for command text is as follows:</p>
<p>
<b>EXEC COMMAND <i>DDMCmd</i> </b></p>
<p>
where <i>DDMCmd</i> is a DDM command-line string. Legal DDM command-line strings are documented in Chapter 5 of the <i>AS/400 Distributed Data Manager User's Guide</i> published by IBM.</p>
<p>
The syntax supported by the OLE DB Provider for AS/400 and VSAM to open a rowset (table) using command text is as follows:</p>
<p>
<b>EXEC OPEN <i>FileName</i> </b></p>
<p>
where <i>FileName</i> represents one of the following host file naming conventions:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=40%>Host file type</th>
<th align=left width=60%>File naming convention</th>
</tr>
<tr valign=top>
<td width=40%>VSAM Data Sets</td>
<td width=60%>DATASETNAME.FILENAME</td>
</tr>
<tr valign=top>
<td width=40%>Partitioned Data Sets</td>
<td width=60%>DATASETNAME.FILENAME(MEMBER)</td>
</tr>
<tr valign=top>
<td width=40%>OS/400 Files</td>
<td width=60%>LIBRARY/FILE</td>
</tr>
<tr valign=top>
<td width=40%>OS/400 Files</td>
<td width=60%>LIBRARY/FILENAME</td>
</tr>
<tr valign=top>
<td width=40%>OS/400 File Members</td>
<td width=60%>LIBRARY/FILE(MEMBER) </td>
</tr>
<tr valign=top>
<td width=40%>OS/400 File Members </td>
<td width=60%>LIBRARY.FILENAME(MEMBER)</td>
</tr>
</table><br>
<p>
Note that if a member of a library contains a dot in the member name, the member name must be surrounded by double quotes. For example, if the member name is NAMES.DAT the proper syntax used to open a rowset using command text is as follows:</p>
<p>
EXEC OPEN LIBRARY/FILE("NAMES.DAT")</p>
<p>
To execute the command, the consumer calls <b>ICommand::Execute</b>. If the command text specifies the command to open a rowset, (an <b>EXEC OPEN</b> command), <b>Execute</b> instantiates the rowset and returns an interface pointer to it.</p>
<p>
The following interfaces of the Command object are supported by the current version of the OLE DB Provider for AS/400 and VSAM:
<ul>
<li>
<b>IAccessor</b></li>
<li>
<b>IColumnsInfo</b></li>
<li>
<b>ICommand</b></li>
<li>
<b>ICommandProperties</b></li>
<li>
<b>ICommandText</b></li>
<li>
<b>IConvertType</b></li>
<li>
<b>ISupportErrorInfo</b></li>
</ul>
<p>&nbsp;</p></body>
</HTML>
