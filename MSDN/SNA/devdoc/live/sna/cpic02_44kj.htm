<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Writing CPI-C Applications</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_sna_writing_cpi_c_applications_cpic"></a>Writing CPI-C Applications</h1>
<p>
A processing task accomplished by programs using CPI-C is called a transaction. Consequently, programs that use CPI-C are called transaction<b> </b>programs, or TPs. These programs communicate as peers, on an equal (rather than hierarchical) basis. The TPs use CPI-C calls to exchange status information and application data. Each TP uses CPI-C calls to supply parameters to CPI-C, which performs the desired function and returns parameters to the TP.</p>
<p>
TPs distributed across a local or wide area network perform distributed transaction processing. </p>
<p>
This section describes how to write TPs and how to configure the systems on which TPs run. The topics in this section cover the following general areas:
<ul>
<li>
Understanding fundamental concepts related to TPs</li>
<li>
Designing and coding TPs</li>
<li>
Configuring registry and environment variables for invokable TPs</li>
<li>
Configuring Microsoft® SNA Server to work with your TPs</li>
</ul>
<p>&nbsp;</p></body>
</HTML>
