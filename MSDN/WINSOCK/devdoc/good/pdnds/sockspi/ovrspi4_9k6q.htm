<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Name Space Provider Initialization and Cleanup</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_name_space_provider_initialization_and_cleanup_2"></a>Name Space Provider Initialization and Cleanup</h3>
<p>
<a href="wsspiref_14vm.htm"><b>NSPStartup</b></a></p>
<p>
<a href="wsspiref_0bn6.htm"><b>NSPCleanup</b></a></p>
<p>
As is the case for the transport SPI, a name space provider is initialized with a call to <b>NSPStartup</b> and is terminated with a final call to <b>NSPCleanup</b>. Calls to the startup function may be nested, but will be matched by corresponding calls to the cleanup function. A provider should employ reference counting to determine when the final call to <b>NSPCleanup</b> has occurred.</p>
<p>&nbsp;</p></body>
</HTML>
