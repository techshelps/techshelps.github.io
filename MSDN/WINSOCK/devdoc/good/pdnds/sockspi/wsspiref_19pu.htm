<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WSPAddressToString</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_wspaddresstostring_2"></a>WSPAddressToString</h1>
<p>
The <b>WSPAddressToString</b> function converts all components of a <a href="../sock2/strucetc_0d82.htm"><b>SOCKADDR</b></a> structure into a human-readable numeric string representation of the address. This is used mainly for display purposes. </p>
<pre><code><b>int WSPAddressToString (
  LPSOCKADDR</b><i> lpsaAddress</i><b>,</b>            
<b>  DWORD</b><i> dwAddressLength</i><b>,</b>             
<b>  LPWSAPROTOCOL_INFOW</b><i> lpProtocolInfo</i><b>,</b>   
<b>  LPWSTR</b><i> lpszAddressString</i><b>,</b>          
<b>  LPDWORD</b><i> lpdwAddressStringLength</i><b>,</b>   
<b>  LPINT</b><i> lpErrno</i>                      
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpsaAddress</i></dt>
<dd>
[in] Points to a <b>SOCKADDR</b> structure to translate into a string.</dd>
<dt>
<i>dwAddressLength</i></dt>
<dd>
[in] The length of the Address <b>SOCKADDR</b>.</dd>
<dt>
<i>lpProtocolInfo</i></dt>
<dd>
[in] (required) The <a href="../sock2/strucetc_4cfm.htm"><b>WSAPROTOCOL_INFO</b></a> structure associated with the provider that will do the translation.</dd>
<dt>
<i>lpszAddressString</i></dt>
<dd>
[out] A buffer which receives the human-readable address string.</dd>
<dt>
<i>lpdwAddressStringLength</i></dt>
<dd>
[in/out] The length of the <i>AddressString</i> buffer. Returns the length of the string actually copied into the buffer. If the supplied buffer is not large enough, the function fails with a specific error of WSAEFAULT and this parameter is updated with the required size in bytes.</dd>
<dt>
<i>lpErrno</i></dt>
<dd>
[out] A pointer to the error code.
</dd>
</dl>
<h4>Layered Service Provider Considerations</h4>
<p>
A layered service provider supplies an implementation of this function, but it is also a client of this function if and when it calls <b>WSPAddressToString</b> of the next layer in the protocol chain. Some special considerations apply to this function's <i>lpProtocolInfo</i> parameter as it is propagated down through the layers of the protocol chain.</p>
<p>
If the next layer in the protocol chain is another layer then when the next layer's <b>WSPAddressToString</b> is called, this layer must pass to the next layer a <i>lpProtocolInfo</i> that references the same unmodified <a href="../sock2/strucetc_4cfm.htm"><b>WSAPROTOCOL_INFO</b></a> structure with the same unmodified chain information. However, if the next layer is the base protocol (i.e., the last element in the chain), this layer performs a substitution when calling the base provider's <b>WSPAddressToString</b>. In this case, the base provider's WSAPROTOCOL_INFO structure should be referenced by the <i>lpProtocolInfo</i> parameter.</p>
<p>
One vital benefit of this policy is that base service providers do not have to be aware of protocol chains.</p>
<p>
This same propagation policy applies when propagating a <b>WSAPROTOCOL_INFO</b> structure through a layered sequence of other functions such as <a href="wsspiref_7242.htm"><b>WSPDuplicateSocket</b></a>, <a href="wsspiref_3xbm.htm"><b>WSPStartup</b></a>, <a href="wsspiref_46ia.htm"><b>WSPSocket</b></a>, or <a href="wsspiref_0wdu.htm"><b>WSPStringToAddress</b></a>.</p>
<h4>Return Values</h4>
<p>
If no error occurs, <b>WSPAddressToString</b> returns zero. Otherwise, it returns SOCKET_ERROR, and a specific error code is available in <i>lpErrno</i>.</p>
<h4>Error Codes</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=37%>WSAEFAULT</td>
<td width=63%>The specified AddressString buffer is too small. Pass in a larger buffer.</td>
</tr>
<tr valign=top>
<td width=37%>WSA_EINVAL</td>
<td width=63%>The specified Address is not a valid socket address, or its address family is not supported by the provider, or the specified <i>lpProtocolInfo</i> did not refer to a <b>WSAPROTOCOL_INFO</b> structure supported by the provider.</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Yes<br>
&nbsp;&nbsp;<b>Windows:</b> Yes<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in ws2spi.h.</p>
<p>&nbsp;</p></body>
</HTML>
