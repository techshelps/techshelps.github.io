<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WSPListen</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_wsplisten_2"></a>WSPListen</h1>
<p>
The <b>WSPListen</b> function establishes a socket to listen for incoming connections.</p>
<pre><code><b>int WSPListen (
  SOCKET</b><i> s</i><b>,</b>      
<b>  int</b><i> backlog</i><b>,</b>   
<b>  LPINT</b><i> lpErrno  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>s</i></dt>
<dd>
[in] A descriptor identifying a bound, unconnected socket.</dd>
<dt>
<i>backlog</i></dt>
<dd>
[in] The maximum length to which the queue of pending connections can grow. If this value is SOMAXCONN, then the service provider should set the backlog to a maximum "reasonable" value. There is no standard provision to find out the actual backlog value.</dd>
<dt>
<i>lpErrno</i></dt>
<dd>
[out] A pointer to the error code.
</dd>
</dl>
<h4>Remarks</h4>
<p>
To accept connections, a socket is first created with <a href="wsspiref_46ia.htm"><b>WSPSocket</b></a> bound to a local address with <a href="wsspiref_2iuq.htm"><b>WSPBind</b></a>, a backlog for incoming connections is specified with <b>WSPListen</b>, and then the connections are accepted with <a href="wsspiref_2j1u.htm"><b>WSPAccept</b></a>. <b>WSPListen</b> applies only to sockets that are connection oriented (for example, SOCK_STREAM). The socket <i>s</i> is put into "passive'' mode where incoming connection requests are acknowledged and queued pending acceptance by the Windows Sockets SPI client.</p>
<p>
This function is typically used by servers that could have more than one connection request at a time: if a connection request arrives with the queue full, the client will receive an error with an indication of WSAECONNREFUSED.</p>
<p>
<b>WSPListen</b> should continue to function rationally when there are no available descriptors. It should accept connections until the queue is emptied. If descriptors become available, a later call to <b>WSPListen</b> or <b>WSPAccept</b> will re-fill the queue to the current or most recent "backlog'', if possible, and resume listening for incoming connections.</p>
<p>
A Windows Sockets SPI client can call <b>WSPListen</b> more than once on the same socket. This has the effect of updating the current backlog for the listening socket. Should there be more pending connections than the new <i>backlog</i> value, the excess pending connections will be reset and dropped.</p>
<h4>Compatibility</h4>
<p>
<i>backlog</i> is limited (silently) to a reasonable value as determined by the service provider. Illegal values are replaced by the nearest legal value. There is no standard provision to find out the actual backlog value.</p>
<h4>Return Values</h4>
<p>
If no error occurs, <b>WSPListen</b> returns zero. Otherwise, a value of SOCKET_ERROR is returned, and a specific error code is available in <i>lpErrno</i>.</p>
<h4>Error Codes</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=37%>WSAENETDOWN</td>
<td width=63%>The network subsystem has failed.</td>
</tr>
<tr valign=top>
<td width=37%>WSAEADDRINUSE</td>
<td width=63%>The socket's local address is already in use and the socket was not marked to allow address reuse with SO_REUSEADDR. This error usually occurs at the time of <b>bind</b>, but could be delayed until this function if the <b>bind</b> was to a partially wild-card address (involving ADDR_ANY) and if a specific address needs to be "committed" at the time of this function.</td>
</tr>
<tr valign=top>
<td width=37%>WSAEINPROGRESS</td>
<td width=63%>The function is invoked when a callback is in progress.</td>
</tr>
<tr valign=top>
<td width=37%>WSAEINVAL</td>
<td width=63%>The socket has not been bound with <b>WSPBind</b>.</td>
</tr>
<tr valign=top>
<td width=37%>WSAEISCONN</td>
<td width=63%>The socket is already connected.</td>
</tr>
<tr valign=top>
<td width=37%>WSAEMFILE</td>
<td width=63%>No more socket descriptors are available.</td>
</tr>
<tr valign=top>
<td width=37%>WSAENOBUFS</td>
<td width=63%>No buffer space is available.</td>
</tr>
<tr valign=top>
<td width=37%>WSAENOTSOCK</td>
<td width=63%>The descriptor is not a socket.</td>
</tr>
<tr valign=top>
<td width=37%>WSAEOPNOTSUPP</td>
<td width=63%>The referenced socket is not of a type that supports the <b>WSPListen</b> operation.</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Yes<br>
&nbsp;&nbsp;<b>Windows:</b> Yes<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in ws2spi.h.</p>
<h4>See Also</h4>
<p>
<a href="wsspiref_2j1u.htm"><b>WSPAccept</b></a>, <a href="wsspiref_0meq.htm"><b>WSPConnect</b></a>, <a href="wsspiref_46ia.htm"><b>WSPSocket</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
