<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WSPBind</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_wspbind_2"></a>WSPBind</h1>
<p>
The <b>WSPBind</b> function associates a local address (that is, name) with a socket.</p>
<pre><code><b>int WSPBind (
  SOCKET</b><i> s</i><b>,                           </b>
<b>  const struct sockaddr FAR *</b><i> name</i><b>,</b>   
<b>  int</b><i> namelen</i><b>,</b>                        
<b>  LPINT</b><i> lpErrno                       </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>s</i></dt>
<dd>
[in] A descriptor identifying an unbound socket.</dd>
<dt>
<i>name</i></dt>
<dd>
[in] The address to assign to the socket. The <b>SOCKADDR</b> structure is defined as follows:
<pre><code>sockaddr {
    _short    sa_family;
    char       sa_data[14];
    };
 </code></pre>

<p>
Except for the sa_family<i> </i>field, <b>SOCKADDR</b> contents are expressed in network byte order. In Windows Sockets 2, the <i>name</i> parameter is not strictly interpreted as a pointer to a <a href="../sock2/strucetc_0d82.htm"><b>SOCKADDR</b></a> structure. It is cast this way for Windows Sockets compatibility. The actual structure is interpreted differently in the context of different address families. The only requirements are that the first <i>u_short</i> is the address family and the total size of the memory buffer in bytes is <i>namelen</i>
</dd>
<dt>
<i>namelen</i></dt>
<dd>
[in] The length of the <i>name</i>.</dd>
<dt>
<i>lpErrno</i></dt>
<dd>
[out] A pointer to the error code.
</dd>
</dl>
<h4>Remarks</h4>
<p>
This routine is used on an unconnected connectionless or connection-oriented socket, before subsequent calls to <a href="wsspiref_0meq.htm"><b>WSPConnect</b></a> or <a href="wsspiref_1n8y.htm"><b>WSPListen</b></a>. When a socket is created with <a href="wsspiref_46ia.htm"><b>WSPSocket</b></a>, it exists in a name space (address family), but it has no name or local address assigned. <b>WSPBind</b> establishes the local association of the socket by assigning a local name to an unnamed socket.</p>
<p>
As an example, in the Internet address family, a name consists of three parts: the address family, a host address, and a port number which identifies the Windows Sockets SPI client. In Windows Sockets 2, the <i>name</i> parameter is not strictly interpreted as a pointer to a "<b>SOCKADDR</b>" structure. Service providers are free to regard it as a pointer to a block of memory of size <i>namelen</i>. The first two bytes in this block (corresponding to "sa_family" in the "<b>SOCKADDR</b>" declaration) <i>must</i> contain the address family that was used to create the socket. Otherwise, the error WSAEFAULT shall be indicated.</p>
<p>
If a Windows Sockets 2 SPI client does not care what local address is assigned to it, it will specify the manifest constant value ADDR_ANY for the sa_data field of the name parameter. This instructs the service provider to use any appropriate network address. For TCP/IP, if the port is specified as zero, the service provider will assign a unique port to the Windows Sockets SPI client with a value between 1024 and 5000. The SPI client can use <a href="wsspiref_092q.htm"><b>WSPGetSockName</b></a> after <a href="#_win32_wspbind_2"><b>WSPBind</b></a> to learn the address and the port that has been assigned to it, but note that if the Internet address is equal to INADDR_ANY, <a href="wsspiref_53w2.htm"><b>WSPGetSockOpt</b></a> will <i>not</i> necessarily be able to supply the address until the socket is connected, since several addresses can be valid if the host is multihomed.</p>
<h4>Return Values</h4>
<p>
If no error occurs, <b>WSPBind</b> returns zero. Otherwise, it returns SOCKET_ERROR, and a specific error code is available in <i>lpErrno</i>.</p>
<h4>Error Codes</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=41%>WSAENETDOWN</td>
<td width=59%>The network subsystem has failed.</td>
</tr>
<tr valign=top>
<td width=41%>WSAEADDRINUSE </td>
<td width=59%>Some process on the machine has already bound to the same fully-qualified address (for example, IP address and port in the <i>af_inet</i> case) and the socket has not been marked to allow address re-use with SO_REUSEADDR (See the SO_REUSEADDR socket option under <a href="wsspiref_5hte.htm"><b>WSPSetSockOpt</b></a>.)</td>
</tr>
<tr valign=top>
<td width=41%>WSAEADDRNOTAVAIL</td>
<td width=59%>The specified address is not a valid address for this machine.</td>
</tr>
<tr valign=top>
<td width=41%>WSAEFAULT</td>
<td width=59%>The <i>name</i> or the <i>namelen </i>argument is not a valid part of the user address space, the<i> namelen</i> argument is too small, the <i>name</i> argument contains incorrect address format for the associated address family, or the first two bytes of the memory block specified by <i>name</i> does not match the address family associated with the socket descriptor <i>s</i>.</td>
</tr>
<tr valign=top>
<td width=41%>WSAEINPROGRESS</td>
<td width=59%>The function is invoked when a callback is in progress.</td>
</tr>
<tr valign=top>
<td width=41%>WSAEINVAL</td>
<td width=59%>The socket is already bound to an address.</td>
</tr>
<tr valign=top>
<td width=41%>WSAENOBUFS</td>
<td width=59%>Not enough buffers available, too many connections.</td>
</tr>
<tr valign=top>
<td width=41%>WSAENOTSOCK</td>
<td width=59%>The descriptor is not a socket.</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Yes<br>
&nbsp;&nbsp;<b>Windows:</b> Yes<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in ws2spi.h.</p>
<h4>See Also</h4>
<p>
<a href="wsspiref_0meq.htm"><b>WSPConnect</b></a>, <a href="wsspiref_1n8y.htm"><b>WSPListen</b></a>, <a href="wsspiref_092q.htm"><b>WSPGetSockName</b></a>, <a href="wsspiref_5hte.htm"><b>WSPSetSockOpt</b></a>, <a href="wsspiref_46ia.htm"><b>WSPSocket</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
