<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Socket I/O</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_socket_i_o_2"></a>Socket I/O</h2>
<p>
There are three primary ways of doing I/O in Windows Sockets 2: blocking I/O, non-blocking I/O along with asynchronous notification of network events, and overlapped I/O with completion indication. We describe each method in the following sections. Blocking I/O is the default behavior, non-blocking mode can be utilized on any socket that is placed into non-blocking mode, and overlapped I/O can only occur on sockets that are created with the overlapped attribute. It is also interesting to note that the two calls for sending: <a href="wsspiref_2dpu.htm"><b>WSPSend</b></a> and <a href="wsspiref_68he.htm"><b>WSPSendTo</b></a> and the two calls for receiving: <a href="wsspiref_854i.htm"><b>WSPRecv</b></a> and <a href="wsspiref_6lbm.htm"><b>WSPRecvFrom</b></a> each implement all three methods of I/O. Service providers determine how to perform the I/O operation based on socket modes and attributes and the input parameter values.</p>
<p>&nbsp;</p></body>
</HTML>
