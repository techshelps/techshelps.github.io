<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WPUCompleteOverlappedRequest</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_wpucompleteoverlappedrequest_2"></a>WPUCompleteOverlappedRequest</h1>
<p>
The <b>WPUCompleteOverlappedRequest</b> function performs overlapped I/O completion notification for overlapped I/O operations.</p>
<pre><code><b>WSAEVENT WPUCompleteOverlappedRequest (
  SOCKET</b><i> s</i><b>,</b><i>                      </i>
<b>  LPWSAOVERLAPPED</b><i> lpOverlapped</i><b>,</b><i>  </i>
<b>  DWORD</b><i> dwError</i><b>,</b><i>                 </i>
<b>  DWORD</b><i> cbTransferred</i><b>,</b><i>           </i>
<b>  LPINT</b><i> lpErrno                 </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>s</i></dt>
<dd>
[in] Service provider socket created by <a href="wsspiref_8m0i.htm"><b>WPUCreateSocketHandle</b></a>.</dd>
<dt>
<i>lpOverlapped</i></dt>
<dd>
[in] A pointer to a <a href="../sock2/strucetc_0gz6.htm"><b>WSAOVERLAPPED</b></a> structure associated with the overlapped I/O operation whose completion is to be notified.</dd>
<dt>
<i>dwError</i></dt>
<dd>
[in] Completion status of the overlapped I/O operation whose completion is to be notified.</dd>
<dt>
<i>cbTransferred</i></dt>
<dd>
[in] Number of bytes transferred to or from client buffers (the direction of the transfer depends on the send or receive nature of the overlapped I/O operation whose completion is to be notified).</dd>
<dt>
<i>lpErrno</i></dt>
<dd>
[out] A pointer to the error code resulting from execution of this function.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>WPUCompleteOverlappedRequest</b> function performs overlapped I/O completion notification for overlapped I/O operations where the client-specified completion mechanism is something other than user mode Asynchronous Procedure Call (APC). This function can only be used for socket handles created by <a href="wsspiref_8m0i.htm"><b>WPUCreateSocketHandle</b></a>.</p>
<p>
<b>Note</b>  This function is different from other functions with the "WPU" prefix in that it is <i>not</i> accessed through the upcall table. Instead, it is exported directly by WS2_32.DLL. Service providers that need to call this function should link with WS2_32.LIB or use appropriate Operating System functions such as LoadLibrary() and GetProcAddress() to retrieve the function pointer.</p>
<p>
The function <b>WPUCompleteOverlappedRequest</b> is used by service provider that do not implement Installable File System (IFS) functionality directly for the socket handles they expose. It performs completion notification for any overlapped I/O request for which the specified completion notification is other than a user-mode APC. <b>WPUCompleteOverlappedRequest</b> is supported only for the socket handles created by <b>WPUCreateSocketHandle</b> and not for sockets created by a service provider directly.</p>
<p>
If the client selects a user-mode APC as the notification method, the service provider should use <a href="wsspiref_0wvm.htm"><b>WPUQueueApc</b></a> or an other appropriate operating system function to perform the completion notification. If user-mode APC is not selected by the client, a service provider that does not implement IFS functionality directly cannot determine whether or not the client has associated a completion port with the socket handle. Thus it cannot determine whether the completion notification method should be queuing a completion status record to a completion port or signaling an event found in the <b>WSAOVERLAPPED</b> structure. The Windows Socket 2 architecture keeps track of any completion port association with a socket created by <b>WPUCreateSocketHandle</b> and can make a correct decision between completion port based notification or event based notification.</p>
<p>
When <b>WPUCompleteOverlappedRequest</b> queues a completion indication, it sets the InternalHigh member of the <b>WSAOVERLAPPED</b> structure to the count of bytes transferred. Then it sets the Internal member to some OS-dependent value other than the special value WSS_OPERATION_IN_PROGRESS. There may be some slight delay after <b>WPUCompleteOverlappedRequest</b> returns before these values appear, since processing may occur asynchronously. However, the InternalHigh value (byte count) is guaranteed to be set by the time Internal is set.</p>
<p>
<b>WPUCompleteOverlappedRequest</b> is available both on Windows 95 and Windows NT. It works as stated (performs the completion notification as requested by the client) whether or not the socket handle has been associated with a completion port.</p>
<h4>Interaction with WSPGetOverlappedResult</h4>
<p>
The behavior of <b>WPUCompleteOverlappedRequest</b> places some constraints on how a service provider implements <b>WSPGetOverlappedResult</b> since only the Offset and OffsetHigh members of the <b>WSAOVERLAPPED</b> structure are exclusively controlled by the service provider, yet three values (byte count, flags, and error) must be retrieved from the structure by <b>WSPGetOverlappedResult</b>. A service provider may accomplish this any way it chooses as long as it interacts with the behavior of <b>WPUCompleteOverlappedRequest</b> properly. However, a typical implementation is as follows:
<ul>
<li>
At the start of overlapped processing, the service provider sets <i>Internal</i> to WSS_OPERATION_IN_PROGRESS.</li>
<li>
When the IO operation has been completed, the provider sets <i>OffsetHigh</i> to the Widows Socket 2 error code resulting from the operation, sets <i>Offset</i> to the flags resulting from the IO operation, and calls WPUCompleteOverlappedRequest(), passing the transfer byte count as one of the parameters. <b>WPUCompleteOverlappedRequest</b> eventually sets <i>InternalHigh</i> to the transfer byte count, then sets <i>Internal</i> to a value other than WSS_OPERATION_IN_PROGRESS.</li>
<li>
When <b>WSPGetOverlappedResult</b> is called, the service provider checks <i>Internal</i>. If it is WSS_OPERATION_IN_PROGRESS, the provider waits on the event handle in the <i>hEvent</i> member or returns an error, based on the setting of the <i>fWait</i> flag of <b>WSPGetOverlappedResult</b>. If not in progress, or after completion of waiting, the provider returns the values from <i>InternalHigh</i>, <i>OffsetHigh</i>, and <i>Offset</i> as the transfer count, operation result error code, and flags respectively.</li>
</ul>
<h4>Return Values</h4>
<p>
If no error occurs, <b>WPUCompleteOverlappedRequest</b> returns 0 and notifies completion of the overlapped I/O operation according to the mechanism selected by the client (signals an event found in the <b>WSAOVERLAPPED</b> structure referenced by <i>lpOverlapped</i> and/or queues a completion status report to the completion port associated with the socket if a completion port is associated). Otherwise, <b>WPUCompleteOverlappedRequest</b> returns SOCKET_ERROR, and a specific error code is available in <i>lpErrno</i>.</p>
<h4>Error Codes</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=32%>WSAEINVAL</td>
<td width=68%>The socket s is not a socket created by <b>WPUCreateSocketHandle</b>.</td>
</tr>
</table><br>
<h4>See Also</h4>
<p>
<a href="wsspiref_36nm.htm"><b>WSPGetOverlappedResult</b></a>, <a href="wsspiref_8m0i.htm"><b>WPUCreateSocketHandle</b></a>, <a href="wsspiref_0wvm.htm"><b>WPUQueueApc</b></a></p>
<p>&nbsp;</p></body>
</HTML>
