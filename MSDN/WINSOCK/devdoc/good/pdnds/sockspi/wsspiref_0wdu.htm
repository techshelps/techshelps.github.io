<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WSPStringToAddress</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_wspstringtoaddress_2"></a>WSPStringToAddress</h1>
<p>
The <b>WSPStringToAddress</b> function converts a human-readable numeric string to a socket address structure (<b>SOCKADDR</b>) suitable to passing to Windows Sockets routines which take such a structure.</p>
<p>
Any missing components of the address will be defaulted to a reasonable value if possible. For example, a missing port number will default to zero.</p>
<pre><code><b>int WSPStringToAddress (
  LPWSTR</b><i> AddressString</i><b>,</b>                 
<b>  INT</b><i> AddressFamily</i><b>,</b>                    
<b>  LPWSAPROTOCOL_INFOW</b><i> lpProtocolInfo</i><b>,</b>   
<b>  LPSOCKADDR</b><i> lpAddress</i><b>,</b>                 
<b>  LPINT</b><i> lpAddressLength</i><b>,</b>                
<b>  LPINT</b><i> lpErrno</i>                         
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>AddressString</i></dt>
<dd>
[in] Points to the zero-terminated human-readable string to convert.</dd>
<dt>
<i>AddressFamily</i></dt>
<dd>
[in] The address family to which the string belongs, or AF_UNSPEC if it is unknown.</dd>
<dt>
<i>lpProtocolInfo</i> </dt>
<dd>
[in] (required) The provider's <b>WSAPROTOCOL_INFOW</b> structure.</dd>
<dt>
<i>lpAddress</i></dt>
<dd>
[out] A buffer which is filled with a single <b>SOCKADDR</b> structure.</dd>
<dt>
<i>lpAddressLength</i></dt>
<dd>
[in/out] The length of the Address buffer. Returns the size of the resultant <b>SOCKADDR</b> structure. If the supplied buffer is not large enough, the function fails with a specific error of WSAEFAULT and this parameter is updated with the required size in bytes.</dd>
<dt>
<i>lpErrno</i></dt>
<dd>
[out] A pointer to the error code.
</dd>
</dl>
<h4>Layered Service Provider Considerations</h4>
<p>
A layered service provider supplies an implementation of this function, but it is also a client of this function if and when it calls <b>WSPStringToAddress</b> of the next layer in the protocol chain. Some special considerations apply to this function's <i>lpProtocolInfo</i> parameter as it is propagated down through the layers of the protocol chain.</p>
<p>
If the next layer in the protocol chain is another layer then when the next layer's <b>WSPStringToAddress</b> is called, this layer must pass to the next layer a <i>lpProtocolInfo</i> that references the same unmodified <b>WSAPROTOCOL_INFOW</b> structure with the same unmodified chain information. However, if the next layer is the base protocol (that is, the last element in the chain), this layer performs a substitution when calling the base provider's <b>WSPStringToAddress</b>. In this case, the base provider's <b>WSAPROTOCOL_INFOW</b> structure should be referenced by the <i>lpProtocolInfo</i> parameter.</p>
<p>
One vital benefit of this policy is that base service providers do not have to be aware of protocol chains.</p>
<p>
This same propagation policy applies when propagating a <b>WSAPROTOCOL_INFOW</b> structure through a layered sequence of other functions such as <b>WSPAddressToString</b>, <b>WSPDuplicateSocket</b>, <b>WSPStartup</b>, or <b>WSPSocket</b>.</p>
<h4>Return Values</h4>
<p>
If no error occurs, <b>WSPStringToAddress</b> returns zero. Otherwise, a value of SOCKET_ERROR is returned, and a specific error code is available in <i>lpErrno</i>.</p>
<h4>Error Codes</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=31%>WSAEFAULT</td>
<td width=69%>The specified Address buffer is too small. Pass in a larger buffer.</td>
</tr>
<tr valign=top>
<td width=31%>WSAEINVAL</td>
<td width=69%>Unable to translate the string into a <b>SOCKADDR</b>, or the provider was unable to support the indicated address family, or the specified <i>lpProtocolInfo</i> did not refer to a <b>WSAPROTOCOL_INFOW</b> structure supported by the provider.</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Yes<br>
&nbsp;&nbsp;<b>Windows:</b> Yes<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in ws2spi.h.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
