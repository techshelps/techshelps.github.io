<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Service Provider Ordering</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_service_provider_ordering_2"></a>Service Provider Ordering</h2>
<p>
The order in which transport service providers are initially installed governs the order in which they are enumerated through <a href="wsspiref_5qeq.htm"><b>WSCEnumProtocols</b></a> at the service provider interface, or through <a href="../sock2/wsapiref_0f76.htm"><b>WSAEnumProtocols</b></a> at the application interface. More importantly, this order also governs the order in which protocols and service providers are considered when a client requests creation of a socket based on its address family, type, and protocol identifier. Windows Sockets 2 includes an applet called SPORDER.EXE that allows the catalog of installed protocols to be re-ordered interactively after protocols have already been installed. Windows Sockets 2 also includes an auxiliary DLL, SPORDER.DLL, that exports a procedural interface for re-ordering protocols. This procedural interface consists of a single procedure called <a href="wsspiref_327m.htm"><b>WSCWriteProviderOrder</b></a>.</p>
<p>
The interface definition may be imported into a C or C++ program by means of the include file SPORDER.H. The entry point may be linked by means of the lib file SPORDER.LIB. The actual procedure specification is given in the following section.</p>
<p>&nbsp;</p></body>
</HTML>
