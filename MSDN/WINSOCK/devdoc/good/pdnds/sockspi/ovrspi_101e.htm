<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SPI: Windows Sockets 2 Features</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_spi_windows_sockets_2_features_2"></a>SPI: Windows Sockets 2 Features</h3>
<p>
The new Windows Sockets 2 extends functionality in a number of areas. </p>
<p>
<b>Windows Sockets 2 Features</b></p>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=45%>Access to protocols other than TCP/IP</td>
<td width=55%>Windows Sockets 2 allows an application to use the familiar socket interface to achieve simultaneous access to a number of installed transport protocols.</td>
</tr>
<tr valign=top>
<td width=45%>Overlapped I/O with scatter/gather</td>
<td width=55%>Windows Sockets 2 incorporates the overlapped paradigm for socket I/O and incorporates scatter/gather capabilities as well, following the model established in Win32 environments.</td>
</tr>
<tr valign=top>
<td width=45%>Protocol-independent name resolution facilities: </td>
<td width=55%>Windows Sockets 2 includes a standardized set of functions for querying and working with the myriad of name resolution domains that exist today (for example DNS, SAP, and X.500).</td>
</tr>
<tr valign=top>
<td width=45%>Protocol-independent multicast and multipoint:</td>
<td width=55%>Windows Sockets 2 applications discover what type of multipoint or multicast capabilities a transport provides and use these facilities in a generic manner.</td>
</tr>
<tr valign=top>
<td width=45%>Quality of service</td>
<td width=55%>Window Sockets 2 establishes conventions applications use to negotiate required service levels for parameters such as bandwidth and latency. Other QOS-related enhancements mechanisms for network-specific QOS extensions.</td>
</tr>
<tr valign=top>
<td width=45%>Other frequently requested extensions</td>
<td width=55%>Windows Sockets 2 incorporates shared sockets and conditional acceptance; exchange of user data at connection setup/teardown time; and protocol-specific extension mechanisms. </td>
</tr>
</table><br>
<p>&nbsp;</p></body>
</HTML>
