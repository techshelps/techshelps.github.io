<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WSAProviderConfigChange</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_wsaproviderconfigchange_2"></a>WSAProviderConfigChange</h1>
<p>
The <b>WSAProviderConfigChange</b> function notifies the application when the provider configuration is changed.</p>
<pre><code><b>int WSAAPI 
WSAProviderConfigChange(
  LPHANDLE </b><i>lpNotificationHandle</i><b>,</b>
<b>  LPWSAOVERLAPPED </b><i>lpOverlapped</i><b>,</b>
<b>  LPWSAOVERLAPPED_COMPLETION_ROUTINE </b><i>lpCompletionRoutine</i>
<b>);</b>
</code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpNotificationHandle</i></dt>
<dd>
(in/out) A pointer to notification handle; if the notification handle is set to NULL (the handle value not the pointer itself), this function returns notification handle in the location pointed by <i>lpNotificationHandle</i>.</dd>
<dt>
<i>lpOverlapped</i></dt>
<dd>
(in) A pointer to a <a href="strucetc_0gz6.htm">WSAOVERLAPPED</a> structure.</dd>
<dt>
<i>lpCompletionRoutine</i></dt>
<dd>
(in) A pointer to the completion routine called when the provider change notification is received.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>WSAProviderConfigChange</b> function notifies the application of provider (both transport and name space) installation or removal in Win32 operating environments that support such configuration change without requiring a restart. When called for the first time (<i>lpNotificationHandle</i> parameter points to NULL handle), this function completes immediately and returns notification handle in the location pointed by <i>lpNotificationHandle</i> that can be used in subsequent calls to receive notifications of provider installation and removal. The second and any subsequent calls only complete when provider information changes since the time the call was made  It is expected (but not required) that that application uses overlapped I/O on second and subsequent calls to <b>WSAProviderConfigChange</b>, in which case the call will return immediately and application will be notified of provider configuration changes using the completion mechanism chosen through specified overlapped completion parameters.</p>
<p>
Notification handle returned by <b>WSAProviderConfigChange</b> is like any regular operating system handle that should be closed (when no longer needed) using Win32 <b>CloseHandle</b> call.</p>
<p>
The following sequence of actions can be used to guarantee that application always has current protocol configuration information:
<ul>
<li>
call <b>WSAProviderConfigChange</b></li>
<li>
call <a href="wsapiref_0f76.htm"><b>WSAEnumProtocols</b></a> and/or <a href="wsapiref_25bm.htm"><b>WSAEnumNameSpaceProviders</b></a></li>
<li>
whenever <b>WSAProviderConfigChange</b> notifies application of provider configuration change (via blocking or overlapped IO), the whole sequence of actions should be repeated</li>
</ul>
<h4>Return Values</h4>
<p>
If no error occurs the <b>WSAProviderConfigChange</b> returns 0. Otherwise, a value of SOCKET_ERROR is returned and a specific error code may be retrieved by calling <b>WSAGetLastError</b>. The error code WSA_IO_PENDING indicates that the overlapped operation has been successfully initiated and that completion (and thus change event) will be indicated at a later time</p>
<h4>Error Codes</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=41%>WSANOTINITIALISED</td>
<td width=59%>A successful <a href="wsapiref_1v8y.htm"><b>WSAStartup</b></a> must occur before using this function.</td>
</tr>
<tr valign=top>
<td width=41%>WSAENETDOWN</td>
<td width=59%>The network subsystem has failed.</td>
</tr>
<tr valign=top>
<td width=41%>WSA_NOT_ENOUGH<br>
_MEMORY </td>
<td width=59%>Not enough free memory available to complete the operation.</td>
</tr>
<tr valign=top>
<td width=41%>WSA_INVALID_HANDLE</td>
<td width=59%>Value pointed by <i>lpNotificationHandle</i> parameter is not a valid notification handle.</td>
</tr>
<tr valign=top>
<td width=41%>WSAEOPNOTSUPP</td>
<td width=59%>Current operating system environment does not support provider installation or removal without restart.</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Yes<br>
&nbsp;&nbsp;<b>Windows:</b> Yes<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in winsock2.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with ws_32.lib.</p>
<h4>See Also</h4>
<p>
<a href="wsapiref_0f76.htm"><b>WSAEnumProtocols</b></a>, <a href="wsapiref_25bm.htm"><b>WSAEnumNameSpaceProviders</b></a></p>
<p>&nbsp;</p></body>
</HTML>
