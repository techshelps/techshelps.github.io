<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Microsoft Windows-specific Extension Functions</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_microsoft_windows_specific_extension_functions_2"></a>Microsoft Windows-specific Extension Functions</h3>
<p>
The Windows Sockets specification provides a number of extensions to the standard set of Berkeley Sockets routines. Principally, these extended functions allow message or function-based, asynchronous access to network events, as well as enable overlapped I/O. While use of this extended API set is not mandatory for socket-based programming (with the exception of <a href="wsapiref_1v8y.htm"><b>WSAStartup</b></a> and <a href="wsapiref_120i.htm"><b>WSACleanup</b></a>), it is recommended for conformance with the Microsoft Windows programming paradigm. For features introduced in Windows Sockets 2, please see <a href="ovrvw2_1khe.htm">New Concepts, Additions and Changes for Windows Sockets 2</a>.</p>
<table cellspacing=4 cols=3>
<tr valign=top>
<td width=49%><a href="wsapiref_3fn6.htm"><b>WSAAccept</b></a>1</td>
<td colspan=2 width=51%>An extended version of accept which allows for conditional acceptance and socket grouping.</td>
</tr>
<tr valign=top>
<td width=49%><a href="wsapiref_4hv6.htm"><b>WSAAsyncGetHostByAddr</b></a>2 3<p>
<a href="wsapiref_7bhu.htm"><b>WSAAsyncGetHostByName</b></a>2 3</p>
<p>
<a href="wsapiref_99bm.htm"><b>WSAAsyncGetProtoByName</b></a>2 3</p>
<p>
<a href="wsapiref_2xo2.htm"><b>WSAAsyncGetProtoByNumber</b></a>2 3</p>
<p>
<a href="wsapiref_3she.htm"><b>WSAAsyncGetServByName</b></a>2 3</p>
<p>
<a href="wsapiref_5jle.htm"><b>WSAAsyncGetServByPort</b></a>2 3</p>
</td>
<td colspan=2 width=51%>A set of functions which provide asynchronous versions of the standard Berkeley getXbyY functions. For example, the <b>WSAAsyncGetHostByName</b> function provides an asynchronous, message-based implementation of the standard Berkeley <b>gethostbyname</b> function.</td>
</tr>
<tr valign=top>
<td width=49%><b><u>WSAAsyncSelect</u></b> 3</td>
<td colspan=2 width=51%>Perform asynchronous version of select</td>
</tr>
<tr valign=top>
<td width=49%><a href="wsapiref_2qya.htm"><b>WSACancelAsyncRequest</b></a>2 3</td>
<td colspan=2 width=51%>Cancel an outstanding instance of a WSAAsyncGetXByY function.</td>
</tr>
<tr valign=top>
<td width=49%><a href="wsapiref_120i.htm"><b>WSACleanup</b></a></td>
<td colspan=2 width=51%>Sign off from the underlying Windows Sockets DLL.</td>
</tr>
<tr valign=top>
<td width=49%><a href="wsapiref_2bxu.htm"><b>WSACloseEvent</b></a></td>
<td colspan=2 width=51%>Destroys an event object.</td>
</tr>
<tr valign=top>
<td width=49%><a href="wsapiref_8kc2.htm"><b>WSAConnect</b></a>1</td>
<td colspan=2 width=51%>An extended version of connect which allows for exchange of connect data and QOS specification.</td>
</tr>
<tr valign=top>
<td width=49%><a href="wsapiref_4esz.htm"><b>WSACreateEvent</b></a></td>
<td colspan=2 width=51%>Creates an event object.</td>
</tr>
<tr valign=top>
<td width=49%><a href="wsapiref_1ape.htm"><b>WSADuplicateSocket</b></a></td>
<td colspan=2 width=51%>Allow an underlying socket to be shared by creating a virtual socket.</td>
</tr>
<tr valign=top>
<td width=49%><a href="wsapiref_4et0.htm"><b>WSAEnumNetworkEvents</b></a></td>
<td colspan=2 width=51%>Discover occurrences of network events.</td>
</tr>
<tr valign=top>
<td width=49%><a href="wsapiref_0f76.htm"><b>WSAEnumProtocols</b></a></td>
<td colspan=2 width=51%>Retrieve information about each available protocol.</td>
</tr>
<tr valign=top>
<td width=49%><a href="wsapiref_34aa.htm"><b>WSAEventSelect</b></a></td>
<td colspan=2 width=51%>Associate network events with an event object.</td>
</tr>
<tr valign=top>
<td width=49%><b><u>WSAGetLastError</u></b> 3</td>
<td colspan=2 width=51%>Obtain details of last Windows Sockets error</td>
</tr>
<tr valign=top>
<td width=49%><a href="wsapiref_5kky.htm"><b>WSAGetOverlappedResult</b></a></td>
<td colspan=2 width=51%>Get completion status of overlapped operation.</td>
</tr>
<tr valign=top>
<td width=49%><a href="wsapiref_7b02.htm"><b>WSAGetQOSByName</b></a></td>
<td colspan=2 width=51%>Supply QOS parameters based on a well-known service name.</td>
</tr>
<tr valign=top>
<td width=49%><a href="wsapiref_14du.htm"><b>WSAHtonl</b></a></td>
<td colspan=2 width=51%>Extended version of htonl</td>
</tr>
<tr valign=top>
<td width=49%><a href="wsapiref_1qia.htm"><b>WSAHtons</b></a></td>
<td colspan=2 width=51%>Extended version of htons</td>
</tr>
<tr valign=top>
<td width=49%><a href="wsapiref_6ik2.htm"><b>WSAIoctl</b></a>1</td>
<td colspan=2 width=51%>Overlapped-capable version of ioctl</td>
</tr>
<tr valign=top>
<td width=49%><a href="wsapiref_7dv6.htm"><b>WSAJoinLeaf</b></a>1</td>
<td colspan=2 width=51%>Add a multipoint leaf to a multipoint session</td>
</tr>
<tr valign=top>
<td width=49%><a href="wsapiref_8odu.htm"><b>WSANtohl</b></a></td>
<td colspan=2 width=51%>Extended version of ntohl</td>
</tr>
<tr valign=top>
<td width=49%><a href="wsapiref_9aia.htm"><b>WSANtohs</b></a></td>
<td colspan=2 width=51%>Extended version of ntohs</td>
</tr>
<tr valign=top>
<td width=49%> <a href="wsapiref_190y.htm"><b>WSAProviderConfigChange</b></a></td>
<td colspan=2 width=51%> Receive notifications of service providers being installed/removed.</td>
</tr>
<tr valign=top>
<td width=49%><a href="wsapiref_4z1u.htm"><b>WSARecv</b></a>1</td>
<td colspan=2 width=51%>An extended version of recv which accommodates scatter/gather I/O, overlapped sockets and provides the <i>flags</i> parameter as IN OUT</td>
</tr>
<tr valign=top>
<td width=49%><a href="wsapiref_4wky.htm"><b>WSARecvFrom</b></a>1</td>
<td colspan=2 width=51%>An extended version of recvfrom which accommodates scatter/gather I/O, overlapped sockets and provides the <i>flags</i> parameter as IN OUT</td>
</tr>
<tr valign=top>
<td width=49%><a href="wsapiref_91wy.htm"><b>WSAResetEvent</b></a></td>
<td colspan=2 width=51%>Resets an event object.</td>
</tr>
<tr valign=top>
<td width=49%><a href="wsapiref_97n6.htm"><b>WSASend</b></a>1</td>
<td colspan=2 width=51%>An extended version of send which accommodates scatter/gather I/O and overlapped sockets</td>
</tr>
<tr valign=top>
<td width=49%><a href="wsapiref_752q.htm"><b>WSASendTo</b></a>1</td>
<td colspan=2 width=51%>An extended version of sendto which accommodates scatter/gather I/O and overlapped sockets</td>
</tr>
<tr valign=top>
<td width=49%><a href="wsapiref_9s6q.htm"><b>WSASetEvent</b></a></td>
<td colspan=2 width=51%>Sets an event object.</td>
</tr>
<tr valign=top>
<td width=49%><b><u>WSASetLastError</u></b> 3</td>
<td colspan=2 width=51%>Set the error to be returned by a subsequent WSAGetLastError</td>
</tr>
<tr valign=top>
<td width=49%><a href="wsapiref_533m.htm"><b>WSASocket</b></a></td>
<td colspan=2 width=51%>An extended version of socket which takes a WSAPROTOCOL_INFO struct as input and allows overlapped sockets to be created. Also allows socket groups to be formed.</td>
</tr>
<tr valign=top>
<td width=49%><b><u>WSAStartup</u></b> 3</td>
<td colspan=2 width=51%>Initialize the underlying Windows Sockets DLL.</td>
</tr>
<tr valign=top>
<td colspan=2 width=50%><a href="wsapiref_1p4i.htm"><b>WSAWaitForMultipleEvents</b></a>1</td>
<td width=50%>Blocks on multiple event objects.</td>
</tr>
<tr valign=top>
<td colspan=3 width=100%>1&nbsp;&nbsp;&nbsp;&nbsp;The routine can block if acting on a blocking socket.<p>
2&nbsp;&nbsp;&nbsp;&nbsp;The routine is always realized by the name resolution provider associated with the default TCP/IP service provider, if any.</p>
<p>
3&nbsp;&nbsp;&nbsp;&nbsp;The routine was originally a Windows Sockets 1.1 function</p>
</td>
</tr>
</table><br>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
