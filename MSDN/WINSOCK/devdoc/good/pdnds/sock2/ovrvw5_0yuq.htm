<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Attributes in WSAPROTOCOL_INFO struct</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_attributes_in_wsaprotocol_info_struct_2"></a>Attributes in WSAPROTOCOL_INFO struct</h3>
<p>
In support of the taxonomy described above, three attribute fields in the <a href="strucetc_4cfm.htm">WSAPROTOCOL_INFO</a> structure are use to distinguish the different schemes used in the control and data planes respectively:
<ol>
<li>
XP1_SUPPORT_MULTIPOINT with a value of 1 indicates this protocol entry supports multipoint communications, and that the following two fields are meaningful.</li>
<li>
XP1_MULTIPOINT_CONTROL_PLANE indicates whether the control plane is rooted (value = 1) or non-rooted (value = 0).</li>
<li>
XP1_MULTIPOINT_DATA_PLANE indicates whether the data plane is rooted (value = 1) or non-rooted (value = 0). </li>
</ol>
<p>
Note that two WSAPROTOCOL_INFO entries would be present if a multipoint protocol supported both rooted and non-rooted data planes, one entry for each.</p>
<p>
The application can use <a href="wsapiref_0f76.htm"><b>WSAEnumProtocols</b></a> to discover whether multipoint communications is supported for a given protocol and, if so, how it is supported with respect to the control and data planes, respectively. </p>
<p>
Flag bits for WSASocket</p>
<p>
In some instances sockets joined to a multipoint session may have some behavioral differences from point-to-point sockets. For example, a d_leaf socket in a rooted data plane scheme can only send information to the d_root participant. This creates a need for the application to be able to indicated the intended use of a socket coincident with its creation. This is done through four flag bits that can be set in the <i>dwFlags </i>parameter to <a href="wsapiref_533m.htm"><b>WSASocket</b></a>:
<ul>
<li>
WSA_FLAG_MULTIPOINT_C_ROOT, for the creation of a socket acting as a c_root, and only allowed if a rooted control plane is indicated in the corresponding WSAPROTOCOL_INFO entry.</li>
<li>
WSA_FLAG_MULTIPOINT_C_LEAF, for the creation of a socket acting as a c_leaf, and only allowed if XP1_SUPPORT_MULTIPOINT is indicated in the corresponding WSAPROTOCOL_INFO entry.</li>
<li>
WSA_FLAG_MULTIPOINT_D_ROOT, for the creation of a socket acting as a d_root, and only allowed if a rooted data plane is indicated in the corresponding WSAPROTOCOL_INFO entry.</li>
<li>
WSA_FLAG_MULTIPOINT_D_LEAF, for the creation of a socket acting as a d_leaf, and only allowed if XP1_SUPPORT_MULTIPOINT is indicated in the corresponding WSAPROTOCOL_INFO entry.</li>
</ul>
<p>
Note that when creating a multipoint socket, exactly one of the two control plane flags, and one of the two data plane flags must be set in WSASocket's <i>dwFlags </i>parameter. Thus, the four possibilities for creating multipoint sockets are: "c_root/d_root", "c_root/d_leaf", "c_leaf/d_root", or "c_leaf /d_leaf". </p>
<p>
SIO_MULTIPOINT_LOOPBACK command code for WSAIoctl</p>
<p>
When d_leaf sockets are used in a non-rooted data plane, it is generally desirable to be able to control whether traffic sent out is also received back on the same socket. The SIO_MULTIPOINT_LOOPBACK command code for <a href="wsapiref_6ik2.htm"><b>WSAIoctl</b></a> is used to enable or disable loopback of multipoint traffic.</p>
<p>
SIO_MULTICAST_SCOPE command code for WSAIoctl</p>
<p>
When multicasting is employed, it is usually necessary to specify the scope over which the multicast should occur. Scope is defined as the number of routed network segments to be covered. A scope of zero would indicate that the multicast transmission would not be placed "on the wire" but could be disseminated across sockets within the local host. A scope value of one (the default) indicates that the transmission will be placed on the wire, but will not cross any routers. Higher scope values determine the number of routers that may be crossed. Note that this corresponds to the time-to-live (TTL) parameter in IP multicasting.</p>
<p>
The function <a href="wsapiref_7dv6.htm"><b>WSAJoinLeaf</b></a> is used to join a leaf node into the multipoint session. See below for a discussion on how this function is utilized.</p>
<p>&nbsp;</p></body>
</HTML>
