<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WSAAsyncGetHostByAddr</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_wsaasyncgethostbyaddr_2"></a>WSAAsyncGetHostByAddr</h1>
<p>
The Windows Sockets <b>WSAAsyncGetHostByAddr</b> function asynchronously retrieves host information that corresponds to an address.</p>
<pre><code><b>HANDLE WSAAsyncGetHostByAddr (
  HWND</b><i> hWnd</i><b>,              </b>
<b>  unsigned int</b><i> wMsg</i><b>,      </b>
<b>  const char FAR *</b><i> addr</i><b>,  </b>
<b>  int</b><i> len</i><b>,                </b>
<b>  int</b><i> type</i><b>,               </b>
<b>  char FAR *</b><i> buf</i><b>,         </b>
<b>  int</b><i> buflen              </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hWnd</i></dt>
<dd>
[in] The handle of the window that will receive a message when the asynchronous request completes.</dd>
<dt>
<i>wMsg</i></dt>
<dd>
[in] The message to be received when the asynchronous request completes.</dd>
<dt>
<i>addr</i></dt>
<dd>
[in] A<b> </b>pointer to the network address for the host. Host addresses are stored in network byte order.</dd>
<dt>
<i>len</i></dt>
<dd>
[in] The length of the address.</dd>
<dt>
<i>type</i></dt>
<dd>
[in] The type of the address.</dd>
<dt>
<i>buf</i></dt>
<dd>
[out] A pointer to the data area to receive the <a href="strucetc_8lbm.htm"><b>HOSTENT</b></a> data. The data area <i>must</i> be larger than the size of a <b>HOSTENT</b> structure because the supplied data area is used by Windows Sockets to contain a <b>HOSTENT</b> structure and all of the data referenced by members of the <b>HOSTENT</b> structure. A buffer of MAXGETHOSTSTRUCT bytes is recommended.</dd>
<dt>
<i>buflen</i></dt>
<dd>
[in] The size of data area for the <i>buf</i> parameter.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>WSAAsyncGetHostByAddr </b>function is an asynchronous version of <a href="wsapiref_7wj6.htm"><b>gethostbyaddr</b></a>. It is used to retrieve the host name and address information that corresponds to a network address. Windows Sockets initiates the operation and returns to the caller immediately, passing back an opaque, asynchronous task handle that the application can use to identify the operation. When the operation is completed, the results (if any) are copied into the buffer provided by the caller and a message is sent to the application's window.</p>
<p>
When the asynchronous operation has completed, the application window indcated by the <i>hWnd</i> parameter receives message in the <i>wMsg </i>parameter. The <i>wParam</i> parameter contains the asynchronous task handle as returned by the original function call. The high 16 bits of <i>lParam</i> contain any error code. The error code can be any error as defined in WINSOCK2.H. An error code of zero indicates successful completion of the asynchronous operation. </p>
<p>
On successful completion, the buffer supplied to the original function call contains a <b>HOSTENT</b> structure. To access the members of this structure, the original buffer address is cast to a <a href="strucetc_8lbm.htm"><b>HOSTENT</b></a> structure pointer and accessed as appropriate.</p>
<p>
If the error code is WSAENOBUFS, the size of the buffer specified by <i>buflen</i> in the original call was too small to contain all the resulting information. In this case, the low 16 bits of <i>lParam</i> contain the size of buffer required to supply all the requisite information. If the application decides that the partial data is inadequate, it can reissue the <b>WSAAsyncGetHostByAddr</b> function call with a buffer large enough to receive all the desired information (that is, no smaller than the low 16 bits of <i>lParam</i>).</p>
<p>
The buffer supplied to this function is used by Windows Sockets to construct a structure together with the contents of data areas referenced by members of the same <b>HOSTENT</b> structure. To avoid the WSAENOBUFS error, the application should provide a buffer of at least MAXGETHOSTSTRUCT bytes (as defined in WINSOCK2.H).</p>
<p>
The error code and buffer length should be extracted from the <i>lParam</i> using the macros WSAGETASYNCERROR and WSAGETASYNCBUFLEN, defined in WINSOCK2.H as:</p>
<pre><code>#define WSAGETASYNCERROR(lParam)            HIWORD(lParam)
#define WSAGETASYNCBUFLEN(lParam)           LOWORD(lParam)
 </code></pre>
<p>
The use of these macros will maximize the portability of the source code for the application.</p>
<h4>Return Values</h4>
<p>
The return value specifies whether or not the asynchronous operation was successfully initiated. It does not imply success or failure of the operation itself.</p>
<p>
If no error occurs, <b>WSAAsyncGetHostByAddr</b> returns a nonzero value of type HANDLE that is the asynchronous task handle (not to be confused with a Windows HTASK) for the request. This value can be used in two ways. It can be used to cancel the operation using <a href="wsapiref_2qya.htm"><b>WSACancelAsyncRequest</b></a>, or it can be used to match up asynchronous operations and completion messages by examining the <i>wParam</i> message parameter.</p>
<p>
If the asynchronous operation could not be initiated, <b>WSAAsyncGetHostByAddr</b> returns a zero value, and a specific error number can be retrieved by calling <a href="wsapiref_2tiq.htm"><b>WSAGetLastError</b></a>.</p>
<h4>Error Codes</h4>
<p>
The following error codes can be set when an application window receives a message. As described above, they can be extracted from the <i>lParam</i> in the reply message using the WSAGETASYNCERROR macro.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=41%>WSAENETDOWN</td>
<td width=59%>The network subsystem has failed.</td>
</tr>
<tr valign=top>
<td width=41%>WSAENOBUFS</td>
<td width=59%>Insufficient buffer space is available.</td>
</tr>
<tr valign=top>
<td width=41%>WSAEFAULT</td>
<td width=59%><i>addr</i> or <i>buf</i> is not in a valid part of the process address space.</td>
</tr>
<tr valign=top>
<td width=41%>WSAHOST_NOT_FOUND</td>
<td width=59%>Authoritative Answer Host not found.</td>
</tr>
<tr valign=top>
<td width=41%>WSATRY_AGAIN</td>
<td width=59%>Non-Authoritative Host not found, or SERVERFAIL.</td>
</tr>
<tr valign=top>
<td width=41%>WSANO_RECOVERY</td>
<td width=59%>Nonrecoverable errors, FORMERR, REFUSED, NOTIMP.</td>
</tr>
<tr valign=top>
<td width=41%>WSANO_DATA</td>
<td width=59%>Valid name, no data record of requested type.</td>
</tr>
</table><br>
<p>
The following errors can occur at the time of the function call, and indicate that the asynchronous operation could not be initiated.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=41%>WSANOTINITIALISED</td>
<td width=59%>A successful <a href="wsapiref_1v8y.htm"><b>WSAStartup</b></a> must occur before using this function.</td>
</tr>
<tr valign=top>
<td width=41%>WSAENETDOWN</td>
<td width=59%>The network subsystem has failed.</td>
</tr>
<tr valign=top>
<td width=41%>WSAEINPROGRESS</td>
<td width=59%>A blocking Windows Sockets 1.1 call is in progress, or the service provider is still processing a callback function.</td>
</tr>
<tr valign=top>
<td width=41%>WSAEWOULDBLOCK</td>
<td width=59%>The asynchronous operation cannot be scheduled at this time due to resource or other constraints within the Windows Sockets implementation.</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Yes<br>
&nbsp;&nbsp;<b>Windows:</b> Yes<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in winsock2.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with ws2_32.lib.</p>
<h4>See Also</h4>
<p>
<a href="wsapiref_7wj6.htm"><b>gethostbyaddr</b></a>, <a href="strucetc_8lbm.htm"><b>HOSTENT</b></a>, <a href="wsapiref_2qya.htm"><b>WSACancelAsyncRequest</b></a><b> </b></p>
<p>&nbsp;</p></body>
</HTML>
