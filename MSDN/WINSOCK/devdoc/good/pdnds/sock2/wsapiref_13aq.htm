<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>accept</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_accept_2"></a>accept</h1>
<p>
The Windows Sockets <b>accept </b>function accepts an incoming connection attempt on a socket.</p>
<pre><code><b>SOCKET accept (
  SOCKET</b><i> s</i><b>,                   </b>
<b>  struct sockaddr FAR*</b><i> addr</i><b>,  </b>
<b>  int FAR*</b><i> addrlen            </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>s</i></dt>
<dd>
[in] A descriptor identifying a socket that has been placed in a listening state with the <a href="wsapiref_07hu.htm"><b>listen</b></a> function. The connection will actually be made with the socket that is returned by <b>accept</b>.</dd>
<dt>
<i>addr</i></dt>
<dd>
[out] An optional pointer to a buffer that receives the address of the connecting entity, as known to the communications layer. The exact format of the <i>addr</i> parameter is determined by the address family established when the socket was created.</dd>
<dt>
<i>addrlen</i></dt>
<dd>
[out] An optional pointer to an integer that contains the length of the address <i>addr</i>.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>accept</b> function extracts the first connection on the queue of pending connections on socket <i>s. </i>It then creates a new socket and returns a handle to the new socket. The newly created socket is the socket that will handle the actual the connection and has the same properties as socket <i>s,</i> including the asynchronous events registered with the <a href="wsapiref_6jn6.htm"><b>WSAAsyncSelect</b></a> or <a href="wsapiref_34aa.htm"><b>WSAEventSelect</b></a> functions. The socket <i>s</i> does not have the listening socket's group ID, if any was applied. </p>
<p>
The <b>accept</b> function can block the caller until a connection is present if no pending connections are present on the queue, and the socket is marked as blocking. If the socket is marked nonblocking and no pending connections are present on the queue, <b>accept</b> returns an error as described below. After the successful completion of <b>accept</b> returns a new socket handle, the accepted socket cannot be used to accept more connections. The original socket remains open and listens for new connection requests.</p>
<p>
The parameter <i>addr</i> is a result parameter that is filled in with the address of the connecting entity, as known to the communications layer. The exact format of the <i>addr</i> parameter is determined by the address family in which the communication is occurring. The <i>addrlen</i> is a value-result parameter; it should initially contain the amount of space pointed to by <i>addr</i>; on return it will contain the actual length (in bytes) of the address returned. </p>
<p>
The <b>accept</b> function is used with connection-oriented socket types such as SOCK_STREAM. </p>
<p>
If <i>addr</i> and/or <i>addrlen</i> are equal to NULL, then no information about the remote address of the accepted socket is returned.</p>
<p>
<b>Windows CE:</b> Windows CE does not support the WSAEINTR error value.</p>
<p>
For IrSocket implementation, the <i>addr</i> and <i>addrlen</i> parameters should always be NULL.</p>
<h4>Return Values</h4>
<p>
If no error occurs, <b>accept</b> returns a value of type SOCKET that is a descriptor for the new socket. This returned value is a handle for the socket on which the actual connection will be made.</p>
<p>
Otherwise, a value of INVALID_SOCKET is returned, and a specific error code can be retrieved by calling <a href="wsapiref_2tiq.htm"><b>WSAGetLastError</b></a>.</p>
<p>
The integer referred to by <i>addrlen</i> initially contains the amount of space pointed to by <i>addr</i>. On return it will contain the actual length in bytes of the address returned.</p>
<h4>Error Codes</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=41%>WSANOTINITIALISED</td>
<td width=59%>A successful <a href="wsapiref_1v8y.htm"><b>WSAStartup</b></a> must occur before using this FUNCTION.</td>
</tr>
<tr valign=top>
<td width=41%>WSAENETDOWN</td>
<td width=59%>The network subsystem has failed.</td>
</tr>
<tr valign=top>
<td width=41%>WSAEFAULT</td>
<td width=59%>The <i>addrlen </i>parameter is too small or <i>addr</i> is not a valid part of the user address space.</td>
</tr>
<tr valign=top>
<td width=41%>WSAEINTR</td>
<td width=59%>A blocking Windows Sockets 1.1 call was canceled through <a href="wsapiref_704y.htm"><b>WSACancelBlockingCall</b></a>.</td>
</tr>
<tr valign=top>
<td width=41%>WSAEINPROGRESS</td>
<td width=59%>A blocking Windows Sockets 1.1 call is in progress, or the service provider is still processing a callback function.</td>
</tr>
<tr valign=top>
<td width=41%>WSAEINVAL</td>
<td width=59%>The <a href="wsapiref_07hu.htm"><b>listen</b></a> function was not invoked prior to <b>accept</b>.</td>
</tr>
<tr valign=top>
<td width=41%>WSAEMFILE</td>
<td width=59%>The queue is nonempty upon entry to <b>accept</b> and there are no descriptors available.</td>
</tr>
<tr valign=top>
<td width=41%>WSAENOBUFS</td>
<td width=59%>No buffer space is available.</td>
</tr>
<tr valign=top>
<td width=41%>WSAENOTSOCK</td>
<td width=59%>The descriptor is not a socket.</td>
</tr>
<tr valign=top>
<td width=41%>WSAEOPNOTSUPP</td>
<td width=59%>The referenced socket is not a type that supports connection-oriented service.</td>
</tr>
<tr valign=top>
<td width=41%>WSAEWOULDBLOCK</td>
<td width=59%>The socket is marked as nonblocking and no connections are present to be accepted.</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Yes<br>
&nbsp;&nbsp;<b>Windows:</b> Yes<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Use version 1.0 and later.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in winsock2.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with ws2_32.lib.</p>
<h4>See Also</h4>
<p>
<a href="wsapiref_6vzm.htm"><b>bind</b></a>, <a href="wsapiref_8m7m.htm"><b>connect</b></a>, <a href="wsapiref_07hu.htm"><b>listen</b></a>, <a href="wsapiref_1ab6.htm"><b>select</b></a>, <a href="wsapiref_2qr6.htm"><b>socket</b></a>, <a href="wsapiref_6jn6.htm"><b>WSAAsyncSelect</b></a>, <a href="wsapiref_3fn6.htm"><b>WSAAccept</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
