<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Socket Functions</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_socket_functions_2"></a>Socket Functions</h3>
<p>
The Windows Sockets specification includes all the following Berkeley-style socket routines that were part of the Windows Sockets 1.1 API:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=37%><a href="wsapiref_13aq.htm"><b>accept</b></a>1</td>
<td width=63%>An incoming connection is acknowledged and associated with an immediately created socket. The original socket is returned to the listening state.</td>
</tr>
<tr valign=top>
<td width=37%><a href="wsapiref_6vzm.htm"><b>bind</b></a></td>
<td width=63%>Assign a local name to an unnamed socket.</td>
</tr>
<tr valign=top>
<td width=37%><a href="wsapiref_714i.htm"><b>closesocket</b></a>1</td>
<td width=63%>Remove a socket from the per-process object reference table. Only blocks if SO_LINGER is set with a non-zero timeout on a blocking socket.</td>
</tr>
<tr valign=top>
<td width=37%><a href="wsapiref_8m7m.htm"><b>connect</b></a>1</td>
<td width=63%>Initiate a connection on the specified socket.</td>
</tr>
<tr valign=top>
<td width=37%><a href="wsapiref_8woi.htm"><b>getpeername</b></a></td>
<td width=63%>Retrieve the name of the peer connected to the specified socket.</td>
</tr>
<tr valign=top>
<td width=37%><a href="wsapiref_273m.htm"><b>getsockname</b></a></td>
<td width=63%>Retrieve the local address to which the specified socket is bound.</td>
</tr>
<tr valign=top>
<td width=37%><a href="wsapiref_8qcy.htm"><b>getsockopt</b></a></td>
<td width=63%>Retrieve options associated with the specified socket.</td>
</tr>
<tr valign=top>
<td width=37%><a href="wsapiref_39te.htm"><b>htonl</b></a>2</td>
<td width=63%>Convert a 32-bit quantity from host byte order to network byte order.</td>
</tr>
<tr valign=top>
<td width=37%><a href="wsapiref_3vxu.htm"><b>htons</b></a>2</td>
<td width=63%>Convert a 16-bit quantity from host byte order to network byte order.</td>
</tr>
<tr valign=top>
<td width=37%><a href="wsapiref_4esy.htm"><b>inet_addr</b></a>2</td>
<td width=63%>Converts a character string representing a number in the Internet standard ".'' notation to an Internet address value.</td>
</tr>
<tr valign=top>
<td width=37%><a href="wsapiref_0elu.htm"><b>inet_ntoa</b></a>2</td>
<td width=63%>Converts an Internet address value to an ASCII string in ".'' notation i.e. "a.b.c.d''.</td>
</tr>
<tr valign=top>
<td width=37%><a href="wsapiref_7dde.htm"><b>ioctlsocket</b></a></td>
<td width=63%>Provide control for sockets.</td>
</tr>
<tr valign=top>
<td width=37%><a href="wsapiref_07hu.htm"><b>listen</b></a></td>
<td width=63%>Listen for incoming connections on a specified socket.</td>
</tr>
<tr valign=top>
<td width=37%><a href="wsapiref_0tte.htm"><b>ntohl</b></a>2</td>
<td width=63%>Convert a 32-bit quantity from network byte order to host byte order.</td>
</tr>
<tr valign=top>
<td width=37%><a href="wsapiref_1fxu.htm"><b>ntohs</b></a>2</td>
<td width=63%>Convert a 16-bit quantity from network byte order to host byte order.</td>
</tr>
<tr valign=top>
<td width=37%><a href="wsapiref_2i9e.htm"><b>recv</b></a>1</td>
<td width=63%>Receive data from a connected or unconnected socket.</td>
</tr>
<tr valign=top>
<td width=37%><a href="wsapiref_88oi.htm"><b>recvfrom</b></a>1</td>
<td width=63%>Receive data from either a connected or unconnected socket.</td>
</tr>
<tr valign=top>
<td width=37%><a href="wsapiref_1ab6.htm"><b>select</b></a>1</td>
<td width=63%>Perform synchronous I/O multiplexing.</td>
</tr>
<tr valign=top>
<td width=37%><a href="wsapiref_6quq.htm"><b>send</b></a>1</td>
<td width=63%>Send data to a connected socket.</td>
</tr>
<tr valign=top>
<td width=37%><a href="wsapiref_4sqa.htm"><b>sendto</b></a>1</td>
<td width=63%>Send data to either a connected or unconnected socket.</td>
</tr>
<tr valign=top>
<td width=37%><a href="wsapiref_94aa.htm"><b>setsockopt</b></a></td>
<td width=63%>Store options associated with the specified socket.</td>
</tr>
<tr valign=top>
<td width=37%><a href="wsapiref_60z6.htm"><b>shutdown</b></a></td>
<td width=63%>Shut down part of a full-duplex connection.</td>
</tr>
<tr valign=top>
<td width=37%><a href="wsapiref_2qr6.htm"><b>socket</b></a></td>
<td width=63%>Create an endpoint for communication and return a socket descriptor.</td>
</tr>
<tr valign=top>
<td colspan=2 width=100%>1&nbsp;&nbsp;&nbsp;&nbsp;The routine can block if acting on a blocking socket.<p>
2&nbsp;&nbsp;&nbsp;&nbsp;The routine is retained for backward compatibility with Windows Sockets 1.1, and should only be used for sockets created with AF_INET address family.</p>
</td>
</tr>
</table><br>
<p>&nbsp;</p></body>
</HTML>
