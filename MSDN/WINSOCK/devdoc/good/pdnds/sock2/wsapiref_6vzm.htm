<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>bind</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_bind_2"></a>bind</h1>
<p>
The Windows Sockets <b>bind</b> function associates a local address with a socket.</p>
<pre><code><b>int bind (
  SOCKET</b><i> s</i><b>,                          </b>
<b>  const struct sockaddr FAR* </b><i> name</i><b>,  </b>
<b>  int</b><i> namelen                        </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>s</i></dt>
<dd>
[in] A descriptor identifying an unbound socket.</dd>
<dt>
<i>name</i></dt>
<dd>
[in] The address to assign to the socket from the <a href="strucetc_0d82.htm"><b>SOCKADDR</b></a> structure.</dd>
<dt>
<i>namelen</i></dt>
<dd>
[in] The length of the <i>name</i>.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>bind </b>function is used on an unconnected socket before subsequent calls to the <a href="wsapiref_8m7m.htm"><b>connect</b></a> or <a href="wsapiref_07hu.htm"><b>listen</b></a> functions. It is used to bind to either connection-oriented (stream) or connectionless (datagram) sockets. When a socket is created with a call to the <a href="wsapiref_2qr6.htm"><b>socket</b></a> function, it exists in a name space (address family), but it has no name assigned to it. Use <b>bind</b> to establish the local association of the socket by assigning a local name to an unnamed socket.</p>
<p>
A name consists of three parts when using the Internet address family: the address family, a host address, and a port number that identifies the application. In Windows Sockets 2, the <i>name</i> parameter is not strictly interpreted as a pointer to a <b>SOCKADDR</b> structure. It is cast this way for Windows Sockets 1.1 compatibility. Service Providers are free to regard it as a pointer to a block of memory of size <i>namelen</i>. The first two bytes in this block (corresponding to the sa_family member of the <b>SOCKADDR</b> structure) <i>must</i> contain the address family that was used to create the socket. Otherwise, an error WSAEFAULT will occur.</p>
<p>
If an application does not care what local address is assigned, specify the manifest constant value ADDR_ANY for the <b>sa_data</b> member of the <i>name</i> parameter. This allows the underlying service provider to use any appropriate network address, potentially simplifying application programming in the presence of multihomed hosts (that is, hosts that have more than one network interface and address). </p>
<p>
For TCP/IP, if the port is specified as zero, the service provider will assign a unique port to the application with a value between 1024 and 5000. The application can use <a href="wsapiref_273m.htm"><b>getsockname</b></a> after <b>bind</b> to learn the address and the port that has been assigned to it. If the Internet address is equal to INADDR_ANY, <b>getsockname</b> will<i> not</i> necessarily be able to supply the address until the socket is connected, since several addresses can be valid if the host is multihomed. Binding to a specific port number other than port 0 is discouraged for client applications, since there is a danger of conflicting with another socket already using that port number.</p>
<p>
<b>Windows CE:</b> For IrSocket implementation of this function:
<ul>
<li>
The Af_irda.h must be explicitly included.</li>
<li>
The <b>SOCKADDR_IRDA</b>_wcesdk_SOCKADDR_IRDA structure is used in the <i>addr</i> parameter.</li>
<li>
The WSAENETDOWN error value is not supported.</li>
<li>
There is no wildcard address equivalent to INADDR_ANY. <p>
<b>IrSockets</b> clients must call <b>bind</b> before using a connect function. If the service name is of the form "LSAP-SELxxx" where xxx is a decimal integer in the range 0-255, the address indicates a specific LSAP-SEL xxx rather than a service name. LSAP-SELxxx service names will cause no IAS calls. The socket will be bound directly to the LSAP-SEL specified bypassing IAS. 
</li>
</ul>
<h4>Return Values</h4>
<p>
If no error occurs, <b>bind</b> returns zero. Otherwise, it returns SOCKET_ERROR, and a specific error code can be retrieved by calling <a href="wsapiref_2tiq.htm"><b>WSAGetLastError</b></a>.</p>
<h4>Error Codes</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=41%><a href="errors_0oaa.htm#_win32_wsanotinitialised_2">WSANOTINITIALISED</a></td>
<td width=59%>A successful <a href="wsapiref_1v8y.htm"><b>WSAStartup</b></a> must occur before using this function.</td>
</tr>
<tr valign=top>
<td width=41%><a href="errors_0oaa.htm#_win32_wsaenetdown_2">WSAENETDOWN</a></td>
<td width=59%>The network subsystem has failed.</td>
</tr>
<tr valign=top>
<td width=41%><a href="errors_0oaa.htm#_win32_wsaeaddrinuse_2">WSAEADDRINUSE</a> </td>
<td width=59%>A process on the machine is already bound to the same fully-qualified address and the socket has not been marked to allow address re-use with SO_REUSEADDR. For example, IP address and port are bound in the af_inet case) . (See the SO_REUSEADDR socket option under <a href="wsapiref_94aa.htm"><b>setsockopt</b></a>.)</td>
</tr>
<tr valign=top>
<td width=41%><a href="errors_0oaa.htm#_win32_wsaeaddrnotavail_2">WSAEADDRNOTAVAIL</a></td>
<td width=59%>The specified address is not a valid address for this machine</td>
</tr>
<tr valign=top>
<td width=41%><a href="errors_0oaa.htm#_win32_wsaefault_2">WSAEFAULT</a></td>
<td width=59%>The <i>name</i> or the <i>namelen </i>parameter is not a valid part of the user address space, the<i> namelen</i> parameter is too small, the <i>name</i> parameter contains incorrect address format for the associated address family, or the first two bytes of the memory block specified by <i>name</i> does not match the address family associated with the socket descriptor <i>s</i>.</td>
</tr>
<tr valign=top>
<td width=41%>WSAEINPROGRESS</td>
<td width=59%>A blocking Windows Sockets 1.1 call is in progress, or the service provider is still processing a callback function.</td>
</tr>
<tr valign=top>
<td width=41%>WSAEINVAL</td>
<td width=59%>The socket is already bound to an address.</td>
</tr>
<tr valign=top>
<td width=41%>WSAENOBUFS</td>
<td width=59%>Not enough buffers available, too many connections.</td>
</tr>
<tr valign=top>
<td width=41%>WSAENOTSOCK</td>
<td width=59%>The descriptor is not a socket.</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Yes<br>
&nbsp;&nbsp;<b>Windows:</b> Yes<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Use version 1.0 and later.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in winsock2.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with ws2_32.lib.</p>
<h4>See Also</h4>
<p>
<a href="wsapiref_8m7m.htm"><b>connect</b></a>, <a href="wsapiref_273m.htm"><b>getsockname</b></a>, <a href="wsapiref_07hu.htm"><b>listen</b></a>, <a href="wsapiref_94aa.htm"><b>setsockopt</b></a>, <a href="wsapiref_2qr6.htm"><b>socket</b></a>, <a href="wsapiref_704y.htm"><b>WSACancelBlockingCall</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
