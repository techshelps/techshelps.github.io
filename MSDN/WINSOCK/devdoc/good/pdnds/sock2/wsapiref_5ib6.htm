<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WSAAddressToString</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_wsaaddresstostring_2"></a>WSAAddressToString</h1>
<p>
The Windows Sockets <b>WSAAddressToString</b> function converts all components of a <b>SOCKADDR</b> structure into a human-readable string representation of the address.</p>
<p>
This is intended to be used mainly for display purposes. If the caller wants the translation to be done by a particular provider, it should supply the corresponding <b>WSAPROTOCOL_INFO</b> structure in the <i>lpProtocolInfo</i> parameter.</p>
<pre><code><b>INT WSAAddressToString(
  LPSOCKADDR</b><i> lpsaAddress</i><b>,             </b>
<b>  DWORD</b><i> dwAddressLength</i><b>,              </b>
<b>  LPWSAPROTOCOL_INFO</b><i> lpProtocolInfo</i><b>,  </b>
<b>  OUT LPTSTR</b><i> lpszAddressString</i><b>,       </b>
<b>  IN OUT LPDWORD</b><i> lpdwAddressStringLength  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpsaAddress</i></dt>
<dd>
[in] A pointer to the <a href="strucetc_0d82.htm"><b>SOCKADDR</b></a> structure to translate into a string.</dd>
<dt>
<i>dwAddressLength</i></dt>
<dd>
[in] The length of the address in <b>SOCKADDR</b>,which may vary in size with different protocols.</dd>
<dt>
<i>lpProtocolInfo</i></dt>
<dd>
[in] (Optional) The <a href="strucetc_4cfm.htm"><b>WSAPROTOCOL_INFO</b></a> structure for a particular provider. If this is NULL, the call is routed to the provider of the first protocol supporting the address family indicated in <i>lpsaAddress</i>.</dd>
<dt>
<i>lpszAddressString</i></dt>
<dd>
[in] A buffer that receives the human-readable address string.</dd>
<dt>
<i>lpdwAddressStringLength</i></dt>
<dd>
[in/out] On input, the length of the <i>AddressString</i> buffer. On output, returns the length of  the string actually copied into the  buffer. If the supplied buffer is not large enough, the function fails with a specific error of WSAEFAULT and this parameter is updated with the required size in bytes.
</dd>
</dl>
<h4>Return Values</h4>
<p>
If no error occurs, <b>WSAAddressToString </b>returns a value of zero. Otherwise, the value SOCKET_ERROR is returned, and a specific error number can be retrieved by calling <a href="wsapiref_2tiq.htm"><b>WSAGetLastError</b></a>.</p>
<h4>Error Codes</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=47%>WSAEFAULT</td>
<td width=53%>The specified <i>lpcsAddress, lpProtocolInfo, lpszAddressString</i> are not all in the address space of the process, or the <i>lpszAddressString</i> buffer is too small. Pass in a larger buffer.</td>
</tr>
<tr valign=top>
<td width=47%>WSAEINVAL</td>
<td width=53%>The specified address is not a valid socket address, or there was no transport provider supporting its indicated address family.</td>
</tr>
<tr valign=top>
<td width=47%>WSANOTINITIALIZED</td>
<td width=53%>The Winsock 2 DLL has not been initialized.  The application <i>must</i> first call <a href="wsapiref_1v8y.htm"><b>WSAStartup</b></a> before calling any Windows Sockets functions.</td>
</tr>
<tr valign=top>
<td width=47%>WSA NOT ENOUGH MEMORY</td>
<td width=53%>There was insufficient memory to perform the operation.</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Yes<br>
&nbsp;&nbsp;<b>Windows:</b> Yes<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in winsock2.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with ws2_32.lib.</p>
<p>&nbsp;</p></body>
</HTML>
