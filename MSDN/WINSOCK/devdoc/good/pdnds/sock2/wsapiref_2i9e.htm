<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>recv</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_recv_2"></a>recv</h1>
<p>
The Windows Sockets <b>recv</b> function receives data from a connected socket.</p>
<pre><code><b>int recv (
  SOCKET</b><i> s</i><b>,       </b>
<b>  char FAR*</b><i> buf</i><b>,  </b>
<b>  int</b><i> len</i><b>,        </b>
<b>  int</b><i> flags       </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>s</i></dt>
<dd>
[in] A descriptor identifying a connected socket.</dd>
<dt>
<i>buf</i></dt>
<dd>
[out] A buffer for the incoming data.</dd>
<dt>
<i>len</i></dt>
<dd>
[in] The length of <i>buf</i>.</dd>
<dt>
<i>flags</i></dt>
<dd>
[in] A flag specifying the way in which the call is made.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>recv</b> function is used to read incoming data on connection-oriented sockets, or connectionless sockets. When using a connection-oriented protocol, the sockets must be connected before calling <b>recv</b>. When using a connectionless protocol, the sockets must be bound before calling <b>recv</b>. </p>
<p>
The local address of the socket must be known. For server applications, use an explicit <a href="wsapiref_6vzm.htm"><b>bind</b></a> function or an implicit <a href="wsapiref_13aq.htm"><b>accept</b></a> or <a href="wsapiref_3fn6.htm"><b>WSAAccept</b></a> function. Explicit binding is discouraged for client applications. For client applications the socket can become bound implicitly to a local address using <a href="wsapiref_8m7m.htm"><b>connect</b></a>, <a href="wsapiref_8kc2.htm"><b>WSAConnect</b></a>, <a href="wsapiref_4sqa.htm"><b>sendto</b></a>, <a href="wsapiref_752q.htm"><b>WSASendTo</b></a>, or <a href="wsapiref_7dv6.htm"><b>WSAJoinLeaf</b></a>.</p>
<p>
For connected or connectionless sockets, this function restricts the addresses from which received messages are accepted. The function only returns messages from the remote address specified in the connection. Messages from other addresses are (silently) discarded</p>
<p>
For connection-oriented sockets (type SOCK_STREAM for example), calling <b>recv</b> will return as much information as is currently available—up to the size of the buffer supplied. If the socket has been configured for in-line reception of out-of-band data (socket option SO_OOBINLINE) and out-of-band data is yet unread, only out-of-band data will be returned. The application can use the <b>ioctlsocket</b> or <b>WSAIoctl</b> SIOCATMARK command to determine whether any more out-of-band data remains to be read.</p>
<p>
For connectionless sockets (type SOCK_DGRAM or other message-oriented sockets), data is extracted from the first enqueued datagram (message) from the destination address specified by the <a href="wsapiref_8m7m.htm"><b>connect</b></a> function.</p>
<p>
If the datagram or message is larger than the buffer supplied, the buffer is filled with the first part of the datagram, and <b>recv </b>generates the error <a href="errors_0oaa.htm#_win32_wsaemsgsize_2">WSAEMSGSIZE</a>. For unreliable protocols (for example, UDP) the excess data is lost; for reliable protocols, the data is retained by the service provider until it is successfully read by calling <b>recv</b> with a large enough buffer. For TCP/IP, an application cannot receive from any multicast address until after becoming a group member.</p>
<p>
If no incoming data is available at the socket, the <b>recv</b> call blocks and waits for data to arrive according to the blocking rules defined for <a href="wsapiref_4z1u.htm"><b>WSARecv</b></a> with the MSG_PARTIAL flag not set unless the socket is nonblocking. In this case, a value of SOCKET_ERROR is returned with the error code set to <a href="errors_0oaa.htm#_win32_wsaewouldblock_2">WSAEWOULDBLOCK</a>. The <a href="wsapiref_1ab6.htm"><b>select</b></a>, <a href="wsapiref_6jn6.htm"><b>WSAAsyncSelect</b></a>, or <a href="wsapiref_34aa.htm"><b>WSAEventSelect</b></a> functions can be used to determine when more data arrives.</p>
<p>
If the socket is connection oriented and the remote side has shut down the connection gracefully, and all data has been received, a <b>recv</b> will complete immediately with zero bytes received. If the connection has been reset, a <b>recv</b> will fail with the error <a href="errors_0oaa.htm#_win32_wsaeconnreset_2">WSAECONNRESET</a>.</p>
<p>
The <i>flags</i> parameter can be used to influence the behavior of the function invocation beyond the options specified for the associated socket. The semantics of this function are determined by the socket options and the <i>flags</i> parameter. The latter is constructed by or'ing the following values:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=27%>Value</th>
<th align=left width=73%>Meaning</th>
</tr>
<tr valign=top>
<td width=27%>MSG_PEEK</td>
<td width=73%>Peek at the incoming data. The data is copied into the buffer but is not removed from the input queue. The function then returns the number of bytes currently pending to receive.</td>
</tr>
<tr valign=top>
<td width=27%>MSG_OOB</td>
<td width=73%>Process out-of-band data. (See section <a href="../../../live/pdnds/sockspi/wsanxref_9fqq.htm">DECnet Out-Of-band data</a> for a discussion of this topic.)</td>
</tr>
</table><br>
<h4>Return Values</h4>
<p>
If no error occurs, <b>recv</b> returns the number of bytes received. If the connection has been gracefully closed, the return value is zero. Otherwise, a value of SOCKET_ERROR is returned, and a specific error code can be retrieved by calling <a href="wsapiref_2tiq.htm"><b>WSAGetLastError</b></a>.</p>
<h4>Error Codes</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=35%>WSANOTINITIALISED</td>
<td width=65%>A successful <a href="wsapiref_1v8y.htm"><b>WSAStartup</b></a> must occur before using this function.</td>
</tr>
<tr valign=top>
<td width=35%>WSAENETDOWN</td>
<td width=65%>The network subsystem has failed.</td>
</tr>
<tr valign=top>
<td width=35%>WSAEFAULT</td>
<td width=65%>The <i>buf</i> parameter is not completely contained in a valid part of the user address space.</td>
</tr>
<tr valign=top>
<td width=35%>WSAENOTCONN</td>
<td width=65%>The socket is not connected.</td>
</tr>
<tr valign=top>
<td width=35%>WSAEINTR</td>
<td width=65%>The (blocking) call was canceled through <a href="wsapiref_704y.htm"><b>WSACancelBlockingCall</b></a>.</td>
</tr>
<tr valign=top>
<td width=35%>WSAEINPROGRESS</td>
<td width=65%>A blocking Windows Sockets 1.1 call is in progress, or the service provider is still processing a callback function.</td>
</tr>
<tr valign=top>
<td width=35%>WSAENETRESET</td>
<td width=65%>The connection has been broken due to the <i>keep-alive</i> activity detecting a failure while the operation was in progress.</td>
</tr>
<tr valign=top>
<td width=35%>WSAENOTSOCK</td>
<td width=65%>The descriptor is not a socket.</td>
</tr>
<tr valign=top>
<td width=35%>WSAEOPNOTSUPP</td>
<td width=65%>MSG_OOB was specified, but the socket is not stream-style such as type SOCK_STREAM, out-of-band data is not supported in the communication domain associated with this socket, or the socket is unidirectional and supports only send operations.</td>
</tr>
<tr valign=top>
<td width=35%>WSAESHUTDOWN</td>
<td width=65%>The socket has been shut down; it is not possible to <b>recv</b> on a socket after <a href="wsapiref_60z6.htm"><b>shutdown</b></a> has been invoked with <i>how</i> set to SD_RECEIVE or SD_BOTH.</td>
</tr>
<tr valign=top>
<td width=35%>WSAEWOULDBLOCK</td>
<td width=65%>The socket is marked as nonblocking and the receive operation would block.</td>
</tr>
<tr valign=top>
<td width=35%>WSAEMSGSIZE</td>
<td width=65%>The message was too large to fit into the specified buffer and was truncated.</td>
</tr>
<tr valign=top>
<td width=35%>WSAEINVAL</td>
<td width=65%>The socket has not been bound with <a href="wsapiref_6vzm.htm"><b>bind</b></a>, or an unknown flag was specified, or MSG_OOB was specified for a socket with SO_OOBINLINE enabled or (for byte stream sockets only) <i>len</i> was zero or negative.</td>
</tr>
<tr valign=top>
<td width=35%>WSAECONNABORTED</td>
<td width=65%>The virtual circuit was terminated due to a time-out or other failure. The application should close the socket as it is no longer usable.</td>
</tr>
<tr valign=top>
<td width=35%>WSAETIMEDOUT</td>
<td width=65%>The connection has been dropped because of a network failure or because the peer system failed to respond.</td>
</tr>
<tr valign=top>
<td width=35%>WSAECONNRESET</td>
<td width=65%>The virtual circuit was reset by the remote side executing a "hard" or "abortive" close. The application should close the socket as it is no longer usable. On a UDP datagram socket this error would indicate that a previous send operation resulted in an ICMP "Port Unreachable" message.</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Yes<br>
&nbsp;&nbsp;<b>Windows:</b> Yes<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Use version 1.0 and later.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in winsock2.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with ws2_32.lib.</p>
<h4>See Also</h4>
<p>
<a href="wsapiref_88oi.htm"><b>recvfrom</b></a>, <a href="wsapiref_1ab6.htm"><b>select</b></a>, <a href="wsapiref_6quq.htm"><b>send</b></a>, <a href="wsapiref_2qr6.htm"><b>socket</b></a>, <a href="wsapiref_6jn6.htm"><b>WSAAsyncSelect</b></a>, <a href="wsapiref_206q.htm"><b>WSARecvEx</b></a></p>
<p>&nbsp;</p></body>
</HTML>
