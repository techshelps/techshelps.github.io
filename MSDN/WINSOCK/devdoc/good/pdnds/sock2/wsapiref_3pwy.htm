<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TransmitFile</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_transmitfile_2"></a>TransmitFile</h1>
<p>
<b>Notice</b>  This function is a Microsoft-specific extension to the Windows Sockets specification. For more information, see <a href="ovrvw1_6582.htm">Microsoft Extensions and Windows Sockets 2</a>. </p>
<p>
The Windows Sockets <b>TransmitFile</b> function transmits file data over a connected socket handle. This function uses the operating system's cache manager to retrieve the file data, and provides high-performance file data transfer over sockets.</p>
<pre><code><b>BOOL TransmitFile(
  SOCKET</b><i> hSocket</i><b>,                             </b>
<b>  HANDLE</b><i> hFile</i><b>,                               </b>
<b>  DWORD</b><i> nNumberOfBytesToWrite</i><b>,                </b>
<b>  DWORD</b><i> nNumberOfBytesPerSend</i><b>,                </b>
<b>  LPOVERLAPPED</b><i> lpOverlapped</i><b>,                  </b>
<b>  LPTRANSMIT_FILE_BUFFERS</b><i> lpTransmitBuffers</i><b>,  </b>
<b>  DWORD</b><i> dwFlags                               </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hSocket</i></dt>
<dd>
A handle to a connected socket. The function will transmit the file data over this socket. 
<p>
The socket specified by <i>hSocket</i> must be a connection-oriented socket. 

<p>
Sockets of type SOCK_STREAM, SOCK_SEQPACKET, or SOCK_RDM are connection-oriented sockets. The <b>TransmitFile</b> function does not support datagram sockets.
</dd>
<dt>
<i>hFile</i></dt>
<dd>
A handle to an open file. The function transmits this file's data. The operating system reads the file data sequentially. You can improve caching performance by opening the handle with the FILE_FLAG_SEQUENTIAL_SCAN.</dd>
<dt>
<i>nNumberOfBytesToWrite</i></dt>
<dd>
The number of bytes to transmit. The function completes when it has sent this many bytes, or if an error occurs.
<p>
Set this parameter to zero to transmit the entire file.
</dd>
<dt>
<i>nNumberOfBytesPerSend</i></dt>
<dd>
The size of each block of data sent per send operation. This specification is for use by the sockets layer of the operating system. 
<p>
Set this parameter to zero to have the sockets layer select a default send size.

<p>
This parameter is useful for message protocols that have limitations on the size of individual send requests.
</dd>
<dt>
<i>lpOverlapped</i></dt>
<dd>
Pointer to an <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_overlapped_str">
</object><a href=JavaScript:alink_1.Click()><b>OVERLAPPED</b></a> structure. If the socket handle has been opened as overlapped, specify this parameter in order to achieve an overlapped (aysnchronous) I/O operation. By default, socket handles are opened as overlapped.
<p>
You can use <i>lpOverlapped</i> to specify an offset within the file at which to start the file data transfer by setting the <b>Offset</b> and <b>OffsetHigh</b> member of the <b>OVERLAPPED</b> structure. If <i>lpOverlapped</i> is NULL, the transmission of data always starts at the current byte offset in the file. 

<p>
When <i>lpOverlapped</i> is not NULL, the overlapped I/O might not finish before <b>TransmitFile</b> returns. In that case, the <b>TransmitFile</b> function returns FALSE, and <b>GetLastError</b> returns ERROR_IO_PENDING. This lets the caller continue processing while the file transmission operation completes. The operating system will set the event specified by the <b>hEvent</b> member of the <b>OVERLAPPED</b> structure, or the socket specified by <i>hSocket</i>, to the signaled state upon completion of the data transmission request.
</dd>
<dt>
<i>lpTransmitBuffers</i></dt>
<dd>
Pointer to a <a href="strucetc_6p2q.htm"><b>TRANSMIT_FILE_BUFFERS</b></a> data structure that contains pointers to data to send before and after the file data is sent. Set this parameter to NULL if you only want to transmit the file data.</dd>
<dt>
<i>dwFlags</i></dt>
<dd>
An attribute that has three settings:
<dl>
<dt>
TF_DISCONNECT</dt>
<dd>
Start a transport-level disconnect after all the file data has been queued for transmission.</dd>
<dt>
TF_REUSE_SOCKET</dt>
<dd>
Prepare the socket handle to be reused. When the TransmitFile request completes, the socket handle can be passed to the <b>AcceptEx</b> function. It is only valid if TF_DISCONNECT is also specified.</dd>
<dt>
TF_WRITE_BEHIND</dt>
<dd>
Complete the <b>TransmitFile</b> request immediately, without pending. If this flag is specified and <b>TransmitFile</b> succeeds, then the data has been accepted by the system but not necessarily acknowledged by the remote end. If <b>TransmitFile</b> returns TRUE, there will be no completion port indication for the I/O. Do not use this setting with the other two settings.
</dd>
</dl>
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the <b>TransmitFile</b> function succeeds, the return value is TRUE. Otherwise, the return value is FALSE. To get extended error information, call <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_getlasterror">
</object><a href=JavaScript:alink_2.Click()><b>GetLastError</b></a>. The function returns FALSE if an overlapped I/O operation is not complete before <b>TransmitFile</b> returns. In that case, <b>GetLastError</b> returns ERROR_IO_PENDING.</p>
<h4>Remarks</h4>
<p>
The Windows NT Server optimizes the <b>TransmitFile</b> function for high performance. The Windows NT Workstation optimizes the function for minimum memory and resource utilization. Expect better performance results when using <b>TransmitFile</b> on Windows NT Server.</p>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Yes<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in mswsock.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with mswsock.lib.</p>
<p>&nbsp;</p></body>
</HTML>
