<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WSARecvDisconnect</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_wsarecvdisconnect_2"></a>WSARecvDisconnect</h1>
<p>
The Windows Sockets <b>WSARecvDisconnect</b> function terminates reception on a socket, and retrieves the disconnect data if the socket is connection oriented.</p>
<pre><code><b>int WSARecvDisconnect (
  SOCKET</b><i> s</i><b>,                         </b>
<b>  LPWSABUF</b><i> lpInboundDisconnectData  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>s</i></dt>
<dd>
[in] A descriptor identifying a socket.</dd>
<dt>
<i>lpInboundDisconnectData</i></dt>
<dd>
[out] A pointer to the incoming disconnect data.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The<b> WSARecvDisconnect</b> function is used on connection-oriented sockets to disable reception and retrieve any incoming disconnect data from the remote party.This is equivalent to a shutdown(SD_RECV), except that <a href="wsapiref_0kqa.htm"><b>WSASendDisconnect</b></a> also allows receipt of disconnect data (in protocols that support it).</p>
<p>
After this function has been successfully issued, subsequent receives on the socket will be disallowed. Calling <b>WSARecvDisconnect</b> has no effect on the lower protocol layers. For TCP sockets, if there is still data queued on the socket waiting to be received, or data arrives subsequently, the connection is reset, since the data cannot be delivered to the user. For UDP, incoming datagrams are accepted and queued.  In no case will an ICMP error packet be generated.</p>
<p>
To successfully receive incoming disconnect data, an application must use other mechanisms to determine that the circuit has been closed. For example, an application needs to receive an FD_CLOSE notification, to receive a zero return value, or to receive a WSAEDISCON or WSAECONNRESET error code from <a href="wsapiref_2i9e.htm"><b>recv</b></a>/<a href="wsapiref_4z1u.htm"><b>WSARecv</b></a>.</p>
<p>
The <b>WSARecvDisconnect</b> function does not close the socket, and resources attached to the socket will <i>not</i> be freed until <a href="wsapiref_714i.htm"><b>closesocket</b></a> is invoked.</p>
<p>
The <b>WSARecvDisconnect</b> function does not block regardless of the SO_LINGER setting on the socket.</p>
<p>
An application should not rely on being able to re-use a socket after it has been disconnected using <b>WSARecvDisconnect</b>. In particular, a Windows Sockets provider is not required to support the use of <a href="wsapiref_8m7m.htm"><b>connect</b></a><b>/<a href="wsapiref_8kc2.htm">WSAConnect</a></b> on such a socket.</p>
<h4>Return Values</h4>
<p>
If no error occurs, <b>WSARecvDisconnect</b> returns zero. Otherwise, a value of SOCKET_ERROR is returned, and a specific error code can be retrieved by calling <a href="wsapiref_2tiq.htm"><b>WSAGetLastError</b></a>.</p>
<h4>Error Codes</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=41%>WSANOTINITIALISED</td>
<td width=59%>A successful <a href="wsapiref_1v8y.htm"><b>WSAStartup</b></a> must occur before using this function.</td>
</tr>
<tr valign=top>
<td width=41%>WSAENETDOWN</td>
<td width=59%>The network subsystem has failed.</td>
</tr>
<tr valign=top>
<td width=41%>WSAEFAULT</td>
<td width=59%>The buffer referenced by the parameter <i>lpInboundDisconnectData</i> is too small.</td>
</tr>
<tr valign=top>
<td width=41%>WSAENOPROTOOPT</td>
<td width=59%>The disconnect data is not supported by the indicated protocol family.</td>
</tr>
<tr valign=top>
<td width=41%>WSAEINPROGRESS</td>
<td width=59%>A blocking Windows Sockets 1.1 call is in progress, or the service provider is still processing a callback function.</td>
</tr>
<tr valign=top>
<td width=41%>WSAENOTCONN</td>
<td width=59%>The socket is not connected (connection-oriented sockets only).</td>
</tr>
<tr valign=top>
<td width=41%>WSAENOTSOCK</td>
<td width=59%>The descriptor is not a socket.</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Yes<br>
&nbsp;&nbsp;<b>Windows:</b> Yes<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in winsock2.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with ws2_32.lib.</p>
<h4>See Also</h4>
<p>
<a href="wsapiref_8m7m.htm"><b>connect</b></a>, <a href="wsapiref_2qr6.htm"><b>socket</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
