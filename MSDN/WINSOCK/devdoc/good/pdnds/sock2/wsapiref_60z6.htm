<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>shutdown</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_shutdown_2"></a>shutdown</h1>
<p>
The Windows Sockets <b>shutdown</b> function disables sends or receives on a socket.</p>
<pre><code><b>int shutdown (
  SOCKET</b><i> s</i><b>,  </b>
<b>  int</b><i> how    </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>s</i></dt>
<dd>
[in] A descriptor identifying a socket.</dd>
<dt>
<i>how</i></dt>
<dd>
[in] A flag that describes what types of operation will no longer be allowed.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>shutdown</b> function is used on all types of sockets to disable reception, transmission, or both.</p>
<p>
If the <i>how</i> parameter is SD_RECEIVE, subsequent calls to the <a href="wsapiref_2i9e.htm"><b>recv</b></a> function on the socket will be disallowed. This has no effect on the lower protocol layers. For TCP sockets, if there is still data queued on the socket waiting to be received, or data arrives subsequently, the connection is reset, since the data cannot be delivered to the user. For UDP sockets, incoming datagrams are accepted and queued. In no case will an ICMP error packet be generated.</p>
<p>
If the <i>how</i> parameter is SD_SEND, subsequent calls to the <a href="wsapiref_6quq.htm"><b>send</b></a> function are disallowed. For TCP sockets, a FIN will be sent after all data is sent and acknowledged by the receiver.</p>
<p>
Setting <i>how</i> to SD_BOTH disables both sends and receives as described above.</p>
<p>
The <b>shutdown</b> function does not close the socket. Any resources attached to the socket will <i>not</i> be freed until <b>closesocket</b> is invoked.</p>
<p>
To assure that all data is sent and received on a connected socket before it is closed, an application should use <b>shutdown</b> to close connection before calling <b>closesocket</b>. For example, to initiate a graceful disconnect:
<ol>
<li>
Call <a href="wsapiref_6jn6.htm"><b>WSAAsyncSelect</b></a> to register for FD_CLOSE notification.</li>
<li>
Call <b>shutdown</b> with <i>how</i>=SD_SEND.</li>
<li>
When FD_CLOSE received, call <a href="wsapiref_2i9e.htm"><b>recv</b></a> until zero returned, or SOCKET_ERROR. </li>
<li>
Call <a href="wsapiref_714i.htm"><b>closesocket</b></a>.</li>
</ol>
<p>
<b>Note</b>  The <b>shutdown </b>function does not block regardless of the SO_LINGER setting on the socket.</p>
<p>
An application should not rely on being able to re-use a socket after it has been shut down. In particular, a Windows Sockets provider is not required to support the use of <a href="wsapiref_8m7m.htm"><b>connect</b></a> on a socket that has been shutdown.</p>
<h4>Return Values</h4>
<p>
If no error occurs, <b>shutdown</b> returns zero. Otherwise, a value of SOCKET_ERROR is returned, and a specific error code can be retrieved by calling <a href="wsapiref_2tiq.htm"><b>WSAGetLastError</b></a>.</p>
<h4>Error Codes</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=41%>WSANOTINITIALISED</td>
<td width=59%>A successful <b>WSAStartup</b> must occur before using this function.</td>
</tr>
<tr valign=top>
<td width=41%>WSAENETDOWN</td>
<td width=59%>The network subsystem has failed.</td>
</tr>
<tr valign=top>
<td width=41%>WSAEINVAL</td>
<td width=59%>The <i>how</i> parameter is not valid, or is not consistent with the socket type. For example, SD_SEND is used with a UNI_RECV socket type.</td>
</tr>
<tr valign=top>
<td width=41%>WSAEINPROGRESS</td>
<td width=59%>A blocking Windows Sockets 1.1 call is in progress, or the service provider is still processing a callback function.</td>
</tr>
<tr valign=top>
<td width=41%>WSAENOTCONN</td>
<td width=59%>The socket is not connected (connection-oriented sockets only).</td>
</tr>
<tr valign=top>
<td width=41%>WSAENOTSOCK</td>
<td width=59%>The descriptor is not a socket.</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Yes<br>
&nbsp;&nbsp;<b>Windows:</b> Yes<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Use version 1.0 and later.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in winsock2.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with ws2_32.lib.</p>
<h4>See Also</h4>
<p>
<a href="wsapiref_8m7m.htm"><b>connect</b></a>, <a href="wsapiref_2qr6.htm"><b>socket</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
