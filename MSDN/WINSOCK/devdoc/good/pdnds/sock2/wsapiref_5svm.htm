<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GetAcceptExSockaddrs</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_getacceptexsockaddrs_2"></a>GetAcceptExSockaddrs</h1>
<p>
<b>Notice</b>  This function is a Microsoft-specific extension to the Windows Sockets specification. For more information, see <a href="ovrvw1_6582.htm">Microsoft Extensions and Windows Sockets 2</a>. </p>
<p>
The Windows Sockets <b>GetAcceptExSockaddrs</b> function parses the data obtained from a call to the <b>AcceptEx</b> function and passes the local and remote addresses to a <b>SOCKADDR</b> structure. </p>
<pre><code><b>VOID GetAcceptExSockaddrs ( 
  PVOID</b><i> lpOutputBuffer</i><b>,       </b>
<b>  DWORD</b><i> dwReceiveDataLength</i><b>,  </b>
<b>  DWORD</b><i> dwLocalAddressLength</i><b>,  </b>
<b>  DWORD</b><i> dwRemoteAddressLength</i><b>,  </b>
<b>  LPSOCKADDR</b><i> *LocalSockaddr</i><b>,  </b>
<b>  LPINT</b><i> LocalSockaddrLength</i><b>,  </b>
<b>  LPSOCKADDR</b><i> *RemoteSockaddr</i><b>,  </b>
<b>  LPINT</b><i> RemoteSockaddrLength  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpOutputBuffer</i></dt>
<dd>
[in] A pointer to a buffer that receives the first block of data sent on a connection resulting from an <b>AcceptEx</b> call. It must be the same <i>lpOutputBuffer</i> parameter that was passed to the <b>AcceptEx</b> function.</dd>
<dt>
<i>dwReceiveDataLength</i></dt>
<dd>
[in] The number of bytes in the buffer that will be used for receiving the first data. This must be equal to the <i>dwReceiveDataLength</i> parameter that was passed to the <b>AcceptEx</b> function.</dd>
<dt>
<i>dwLocalAddressLength</i></dt>
<dd>
[in] The number of bytes reserved for the local address information. This must be equal to the <i>dwLocalAddressLength</i> parameter that was passed to the <b>AcceptEx</b> function.</dd>
<dt>
<i>dwRemoteAddressLength</i></dt>
<dd>
[in] The number of bytes reserved for the remote address information. This must be equal to the <i>dwRemoteAddressLength</i> parameter that was passed to the <b>AcceptEx</b> function.</dd>
<dt>
<i>LocalSockaddr</i></dt>
<dd>
[out] A pointer to the SOCKADDR structure that receives the local address of the connection (the same information that would be returned by the Windows Sockets <b>getsockname</b> function). This parameter must be specified. </dd>
<dt>
<i>LocalSockaddrLength</i></dt>
<dd>
[out] The size of the local address. This parameter must be specified. </dd>
<dt>
<i>RemoteSockaddr</i></dt>
<dd>
[out] A pointer to the SOCKADDR structure that receives the remote address of the connection (the same information that would be returned by the Windows Sockets <b>getpeername</b> function). This parameter must be specified. </dd>
<dt>
<i>RemoteSockaddrLength</i></dt>
<dd>
[out] The size of the local address. This parameter must be specified.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>GetAcceptExSockaddrs</b> function is used exclusively with the <b>AcceptEx</b> function to parse the first data that the socket receives into local and remote addresses. You are required to use this function because the <b>AcceptEx</b> function writes address information in an internal (TDI) format. The <b>GetAcceptExSockaddrs</b> routine is required to locate the <b>SOCKADDR</b> structures in the buffer. </p>
<h4>Return Values</h4>
<p>
This function does not return a value.</p>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Yes<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in mswsock.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with mswsock.lib.</p>
<p>&nbsp;</p></body>
</HTML>
