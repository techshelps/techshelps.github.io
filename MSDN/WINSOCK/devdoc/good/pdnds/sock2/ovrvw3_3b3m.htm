<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Error codes - errno, h_errno &amp; WSAGetLastError</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_error_codes_errno_h_errno_wsagetlasterror_2"></a>Error codes - errno, h_errno &amp; WSAGetLastError</h3>
<p>
Error codes set by Windows Sockets are NOT made available via the errno variable. Additionally, for the <b>getXbyY</b> class of functions, error codes are NOT made available via the h_errno variable. Instead, error codes are accessed by using the <a href="wsapiref_2tiq.htm"><b>WSAGetLastError</b></a> function. This function is provided in Windows Sockets as a precursor (and eventually an alias) for the Win32 function <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_getlasterror">
</object><a href=JavaScript:alink_1.Click()><b>GetLastError</b></a>. This is intended to provide a reliable way for a thread in a multi-threaded process to obtain per-thread error information.</p>
<p>
For compatibility with BSD, an application may choose to include a line of the form:</p>
<pre><code>#define errno WSAGetLastError
 </code></pre>
<p>
This will allow networking code which was written to use the global errno to work correctly in a single-threaded environment. There are, obviously, some drawbacks. If a source file includes code which inspects errno for both socket and non-socket functions, this mechanism cannot be used. Furthermore, it is not possible for an application to assign a new value to errno. (In Windows Sockets the function <a href="wsapiref_7a42.htm"><b>WSASetLastError</b></a> may be used for this purpose.)</p>
<p>
<b>TYPICAL BSD STYLE:</b></p>
<pre><code>r = recv(...);
if (r == -1
    &amp;&amp; errno == EWOULDBLOCK)
    {...}
 </code></pre>
<p>
<b>PREFERRED STYLE:</b></p>
<pre><code>r = recv(...);
if (r == -1       /* (but see below) */
    &amp;&amp; WSAGetLastError == EWOULDBLOCK)
    {...}
 </code></pre>
<p>
Although error constants consistent with 4.3 Berkeley Sockets are provided for compatibility purposes, applications should, where possible, use the "WSA" error code definitions. This is because error codes returned by certain WinSock routines fall into the standard range of error codes as defined by Microsoft C. Thus, a better version of the above source code fragment is:</p>
<pre><code>r = recv(...);
if (r == -1       /* (but see below) */
    &amp;&amp; WSAGetLastError == WSAEWOULDBLOCK)
    {...}
 </code></pre>
<p>
This specification defines a recommended set of error codes, and lists the possible errors that can be returned as a result of each function. It may be the case in some implementations that other Windows Sockets error codes will be returned in addition to those listed, and applications should be prepared to handle errors other than those enumerated under each function description. However Windows Sockets will not return any value that is not enumerated in the table of legal Windows Sockets errors given in the section <a href="errors_0oaa.htm">Error Codes</a>.</p>
<p>&nbsp;</p></body>
</HTML>
