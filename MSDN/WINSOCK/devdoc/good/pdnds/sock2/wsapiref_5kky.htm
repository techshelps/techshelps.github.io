<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WSAGetOverlappedResult</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_wsagetoverlappedresult_2"></a>WSAGetOverlappedResult</h1>
<p>
The Windows Sockets <b>WSAGetOverlappedResult</b> function returns the results of an overlapped operation on the specified socket.</p>
<pre><code><b>BOOL WSAGetOverlappedResult (
  SOCKET</b><i> s</i><b>,                      </b>
<b>  LPWSAOVERLAPPED</b><i> lpOverlapped</i><b>,  </b>
<b>  LPDWORD</b><i> lpcbTransfer</i><b>,          </b>
<b>  BOOL</b><i> fWait</i><b>,                    </b>
<b>  LPDWORD</b><i> lpdwFlags              </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>s</i></dt>
<dd>
[in] A descriptor identifying the socket. This is the same socket that was specified when the overlapped operation was started by a call to <a href="wsapiref_4z1u.htm"><b>WSARecv</b></a>, <a href="wsapiref_4wky.htm"><b>WSARecvFrom</b></a>, <a href="wsapiref_97n6.htm"><b>WSASend</b></a>, <a href="wsapiref_752q.htm"><b>WSASendTo</b></a>, or <a href="wsapiref_6ik2.htm"><b>WSAIoctl</b></a>.</dd>
<dt>
<i>lpOverlapped</i></dt>
<dd>
[in] A pointer to a <a href="strucetc_0gz6.htm"><b>WSAOVERLAPPED</b></a> structure that was specified when the overlapped operation was started.</dd>
<dt>
<i>pcbTransfer</i></dt>
<dd>
[out] A pointer to a 32-bit variable that receives the number of bytes that were actually transferred by a send or receive operation, or by <a href="wsapiref_6ik2.htm"><b>WSAIoctl</b></a>.</dd>
<dt>
<i>fWait</i></dt>
<dd>
[in] A flag that specifies whether the function should wait for the pending overlapped operation to complete. If TRUE, the function does not return until the operation has been completed. If FALSE and the operation is still pending, the function returns FALSE and the <a href="wsapiref_2tiq.htm"><b>WSAGetLastError</b></a> function returns WSA_IO_INCOMPLETE. The <i>fWait</i> parameter may be set to TRUE only if the overlapped operation selected the event-based completion notification.</dd>
<dt>
<i>lpdwFlags</i></dt>
<dd>
[out] A pointer to a 32-bit variable that will receive one or more flags that supplement the completion status. If the overlapped operation was initiated through <a href="wsapiref_4z1u.htm"><b>WSARecv</b></a> or <a href="wsapiref_4wky.htm"><b>WSARecvFrom</b></a>, this parameter will contain the results value for <i>lpFlags </i>parameter.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>WSAGetOverlappedResult</b> function reports results of last overlapped operation for the specified socket. The <b>WSAOverlappedResult </b>function is passed the socket descriptor and the <a href="strucetc_0gz6.htm"><b>WSAOVERLAPPED</b></a> structure that were specified when the overlapped function was called. A pending operation is indicated when the function that started the operation returns FALSE and the <a href="wsapiref_2tiq.htm"><b>WSAGetLastError</b></a> function returns WSA_IO_PENDING. When an I/O operation such as <a href="wsapiref_4z1u.htm"><b>WSARecv</b></a> is pending, the function that started the operation resets the <i>hEvent</i> member of the <a href="strucetc_0gz6.htm"><b>WSAOVERLAPPED</b></a><b> </b>structure to the nonsignaled state. Then when the pending operation has completed, the system sets the event object to the signaled state.</p>
<p>
If the <i>fWait</i> parameter is TRUE, <b>WSAGetOverlappedResult</b> determines whether the pending operation has been completed by waiting for the event object to be in the signaled state.A client may set <i>fWait</i> parameter to TRUE only if it selected event-based completion notification when the IO operation was requested. If another form of notification was selected, the usage of the <i>hEvent</i> parameter of the <b>WSAOVERLAPPED</b> structure is different, and setting <i>fWait</i> to TRUE causes unpredictable results.</p>
<h4>Return Values</h4>
<p>
If <b>WSAGetOverlappedResult</b> succeeds, the return value is TRUE. This means that the overlapped operation has completed successfully and that the value pointed to by <i>lpcbTransfer</i> has been updated. If <b>WSAGetOverlappedResult</b> returns FALSE, this means that either the overlapped operation has not completed, the overlapped operation completed but with errors, or the overlapped operation's completion status could not be determined due to errors in one or more parameters to <b>WSAGetOverlappedResult</b>. On failure, the value pointed to by <i>lpcbTransfer</i> will <i>not</i> be updated. Use <a href="wsapiref_2tiq.htm"><b>WSAGetLastError</b></a> to determine the cause of the failure (either of <b>WSAGetOverlappedResult</b> or of the associated overlapped operation).</p>
<h4>Error Codes</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=46%>WSANOTINITIALISED</td>
<td width=54%>A successful <a href="wsapiref_1v8y.htm"><b>WSAStartup</b></a> must occur before using this function.</td>
</tr>
<tr valign=top>
<td width=46%>WSAENETDOWN</td>
<td width=54%>The network subsystem has failed.</td>
</tr>
<tr valign=top>
<td width=46%>WSAENOTSOCK</td>
<td width=54%>The descriptor is not a socket.</td>
</tr>
<tr valign=top>
<td width=46%>WSA_INVALID_HANDLE</td>
<td width=54%>The <i>hEvent</i> field of the <a href="strucetc_0gz6.htm"><b>WSAOVERLAPPED</b></a> structure does not contain a valid event object handle.</td>
</tr>
<tr valign=top>
<td width=46%>WSA_INVALID_PARAMETER</td>
<td width=54%>One of the parameters is unacceptable.</td>
</tr>
<tr valign=top>
<td width=46%>WSA_IO_INCOMPLETE</td>
<td width=54%>The <i>fWait</i> parameter is FALSE and the I/O operation has not yet completed.</td>
</tr>
<tr valign=top>
<td width=46%>WSAEFAULT</td>
<td width=54%>One or more of the <i>lpOverlapped</i>, <i>lpcbTransfer</i>, or <i>lpdwFlags</i> arguments are not a valid part of the user address space.</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Yes<br>
&nbsp;&nbsp;<b>Windows:</b> Yes<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in winsock2.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with ws2_32.lib.</p>
<h4>See Also</h4>
<p>
<a href="wsapiref_3fn6.htm"><b>WSAAccept</b></a>, <a href="wsapiref_8kc2.htm"><b>WSAConnect</b></a>, <a href="wsapiref_4esz.htm"><b>WSACreateEvent</b></a>, <a href="wsapiref_6ik2.htm"><b>WSAIoctl</b></a>, <a href="wsapiref_4z1u.htm"><b>WSARecv</b></a>, <a href="wsapiref_4wky.htm"><b>WSARecvFrom</b></a>, <a href="wsapiref_97n6.htm"><b>WSASend</b></a>, <a href="wsapiref_752q.htm"><b>WSASendTo</b></a>, <a href="wsapiref_1p4i.htm"><b>WSAWaitForMultipleEvents</b></a></p>
<p>&nbsp;</p></body>
</HTML>
