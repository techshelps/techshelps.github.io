<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Registration and Name Resolution</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_registration_and_name_resolution_2"></a>Registration and Name Resolution</h1>
<p>
Windows Sockets 2 includes a new set of API functions that standardize the way applications access and use the various network naming services. When using these new functions, Windows Sockets 2 applications need not be cognizant of the widely differing protocols associated with name services such as DNS, NIS, X.500, SAP, etc. To maintain full backward compatibility with Windows Sockets 1.1, all of the existing <b>getXbyY</b> and asynchronous <b>WSAAsyncGetXbyY</b> database lookup functions continue to be supported, but are implemented in the Windows Sockets service provider interface in terms of the new name resolution capabilities. For more information, see the <a href="wsapiref_775e.htm"><b>getservbyname</b></a> and <a href="wsapiref_8y9e.htm"><b>getservbyport</b></a> functions. Also, see <a href="ovrvw4_8w36.htm">Windows Sockets 1.1 Compatibile Name Resolution for TCP/IP</a>.</p>
<p>&nbsp;</p></body>
</HTML>
