<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WSACleanup</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_wsacleanup_2"></a>WSACleanup</h1>
<p>
The Windows Sockets <b>WSACleanup</b> function terminates use of the WS2_32.DLL.</p>
<pre><b><code>int  WSACleanup (void);</code></b></pre>
<h4>Remarks</h4>
<p>
An application or DLL is required to perform a successful <a href="wsapiref_1v8y.htm"><b>WSAStartup</b></a> call before it can use Windows Sockets services. When it has completed the use of Windows Sockets, the application or DLL must call <b>WSACleanup</b> to deregister itself from a Windows Sockets implementation and allow the implementation to free any resources allocated on behalf of the application or DLL. Any pending blocking or asynchronous calls issued by any thread in this process are canceled without posting any notification messages or without signaling any event objects. Any pending overlapped send and receive operations (<a href="wsapiref_97n6.htm"><b>WSASend</b></a>/<a href="wsapiref_752q.htm"><b>WSASendTo</b></a>/<a href="wsapiref_4z1u.htm"><b>WSARecv</b></a>/<a href="wsapiref_4wky.htm"><b>WSARecvFrom</b></a> with an overlapped socket) issued by any thread in this process are also canceled without setting the event object or invoking the completion routine, if specified. In this case, the pending overlapped operations fail with the error status WSA_OPERATION_ABORTED. </p>
<p>
Sockets that were open when <b>WSACleanup</b> was called are reset and automatically deallocated as if <a href="wsapiref_714i.htm"><b>closesocket</b></a> were called; sockets that have been closed with <b>closesocket</b> but that still have pending data to be sent can be affected—the pending data can be lost if the WS2_32.DLL is unloaded from memory as the application exits. To insure that all pending data is sent, an application should use <a href="wsapiref_60z6.htm"><b>shutdown</b></a> to close the connection, then wait until the close completes before calling <b>closesocket</b> and <b>WSACleanup</b>. All resources and internal state, such as queued un-posted messages, must be deallocated so as to be available to the next user.</p>
<p>
There must be a call to <b>WSACleanup</b> for every successful call to <b>WSAStartup</b> made by a task. Only the final <b>WSACleanup</b> for that task does the actual cleanup; the preceding calls simply decrement an internal reference count in the WS2_32.DLL.</p>
<h4>Return Values</h4>
<p>
The return value is zero if the operation was successful. Otherwise, the value SOCKET_ERROR is returned, and a specific error number can be retrieved by calling <b>WSAGetLastError</b>.</p>
<p>
Attempting to call <b>WSACleanup</b> from within a blocking hook and then failing to check the return code is a common programming error in Windows Socket 1.1 applications. If an application needs to quit while a blocking call is outstanding, the application must first cancel the blocking call with <a href="wsapiref_704y.htm"><b>WSACancelBlockingCall</b></a> then issue the <b>WSACleanup</b> call once control has been returned to the application.</p>
<p>
In a multithreaded environment, <b>WSACleanup</b> terminates Windows Sockets operations for all threads.</p>
<h4>Error Codes</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=41%>WSANOTINITIALISED</td>
<td width=59%>A successful <a href="wsapiref_1v8y.htm"><b>WSAStartup</b></a> must occur before using this function.</td>
</tr>
<tr valign=top>
<td width=41%>WSAENETDOWN</td>
<td width=59%>The network subsystem has failed.</td>
</tr>
<tr valign=top>
<td width=41%>WSAEINPROGRESS</td>
<td width=59%>A blocking Windows Sockets 1.1 call is in progress, or the service provider is still processing a callback function.</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Yes<br>
&nbsp;&nbsp;<b>Windows:</b> Yes<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Use version 1.0 and later.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in winsock2.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with ws2_32.lib.</p>
<h4>See Also</h4>
<p>
<a href="wsapiref_714i.htm"><b>closesocket</b></a>, <a href="wsapiref_60z6.htm"><b>shutdown</b></a>, <a href="wsapiref_1v8y.htm"><b>WSAStartup</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
