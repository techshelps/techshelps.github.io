<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>connect</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_connect_2"></a>connect</h1>
<p>
The Windows Sockets <b>connect</b> function establishes a connection to a specifed socket.</p>
<pre><code><b>int connect (
  SOCKET</b><i> s</i><b>,                          </b>
<b>  const struct sockaddr FAR* </b><i> name</i><b>,  </b>
<b>  int</b><i> namelen                        </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>s</i></dt>
<dd>
[in] A descriptor identifying an unconnected socket.</dd>
<dt>
<i>name</i></dt>
<dd>
[in] The name of the socket to connect to.</dd>
<dt>
<i>namelen</i></dt>
<dd>
[in] The length of the <i>name </i>parameter.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>connect</b> function is used to create a connection to the specified destination. If the socket, <i>s</i>, is unbound, unique values are assigned to the local association by the system, and the socket is marked as bound.</p>
<p>
For connection-oriented sockets (for example, type SOCK_STREAM), an active connection is initiated to the foreign host using <i>name</i> (an address in the name space of the socket; for a detailed description, please see <a href="wsapiref_6vzm.htm"><b>bind</b></a> and <a href="strucetc_0d82.htm"><b>SOCKADDR</b></a>). When the socket call completes successfully, the socket is ready to send/receive data. If the address member of the structure specified by the <i>name</i> parameter is all zeroes, <b>connect</b> will return the error <a href="errors_0oaa.htm#_win32_wsaeaddrnotavail_2">WSAEADDRNOTAVAIL</a>. Any attempt to re-connect an active connection will fail with the error code <a href="errors_0oaa.htm#_win32_wsaeisconn_2">WSAEISCONN</a>.</p>
<p>
For connection-oriented, nonblocking sockets, it is often not possible to complete the connection immediately.  In such a case, this function returns the error WSAEWOULDBLOCK. However, the operation proceeds. When the success or failure outcome becomes known, it may be reported in one of several ways depending on how the client registers for notification. If the client uses the <b>select</b> function, success is reported in the writefds set and failure is reported in  the exceptfds set.  If the client uses the functions <b>WSAAsyncSelect</b> or <b>WSAEventSelect</b>, the notification is announced with FD_CONNECT and the error code associated with the FD_CONNECT indicates either success or a specific reason for failure</p>
<p>
For a connectionless socket (for example, type SOCK_DGRAM), the operation performed by <b>connect</b> is merely to establish a default destination address that will be used on subsequent <a href="wsapiref_6quq.htm"><b>send</b></a>/<a href="wsapiref_97n6.htm"><b>WSASend</b></a> and <a href="wsapiref_2i9e.htm"><b>recv</b></a>/<a href="wsapiref_4z1u.htm"><b>WSARecv</b></a> calls. Any datagrams received from an address other than the destination address specified will be discarded. If the address member of the structure specifed by <i>name </i>is all zeroes, the socket will be "dis-connected." Then, the default remote address will be indeterminate, so <b>send/WSASend</b> and <b>recv/WSARecv</b> calls will return the error code <a href="errors_0oaa.htm#_win32_wsaenotconn_2">WSAENOTCONN</a>. However, <a href="wsapiref_4sqa.htm"><b>sendto</b></a><b>/<a href="wsapiref_752q.htm">WSASendTo</a></b> and <a href="wsapiref_88oi.htm"><b>recvfrom</b></a><b>/<a href="wsapiref_4wky.htm">WSARecvFrom</a></b> can still be used. The default destination can be changed by simply calling <b>connect</b> again, even if the socket is already connected. Any datagrams queued for receipt are discarded if <i>name</i> is different from the previous <b>connect</b>.</p>
<p>
For connectionless sockets, <i>name</i> can indicate any valid address, including a broadcast address. However, to connect to a broadcast address, a socket must use <a href="wsapiref_94aa.htm"><b>setsockopt</b></a> to enable the SO_BROADCAST option. Otherwise, <b>connect</b> will fail with the error code <a href="errors_0oaa.htm#_win32_wsaeacces_2">WSAEACCES</a>.</p>
<p>
When a connection between sockets is broken, the sockets should be discarded and recreated. When a problem develops on a connected socket, the application must discard and recreate the needed sockets in order to return to a stable point.</p>
<p>
<b>Windows CE:</b> Windows CE does not support the WSAEINTR error value.</p>
<p>
For IrSocket implementation: 
<ul>
<li>
The Af_irda.h file must be explicitly included.</li>
<li>
If WSAENETDOWN is returned, an existing IrDA connection was detected at the media access level.</li>
<li>
If WSAEADDRINUSE is returned, active connections to a device with a different address exist.</li>
<li>
If WSAEINPROGRESS is returned, IAS name resolution failed because another IAS query is in progress. Retry the operation at one second intervals.</li>
<li>
If WSAEISCONN is returned, the socket is already connected or an exclusive/multiplexed mode change failed.</li>
</ul>
<p>
IrSockets implements the <b>connect</b> function with addresses of the form <b>sockaddr_irda</b>. Typically, a client application will create a socket with the socket function, scan the immediate vicinity for IrDA devices with the IRLMP_ENUMDEVICES socket option, choose a device from the returned list, form an address, and call <b>connect</b>. There is no difference in blocking and non-blocking semantics.</p>
<h4>Return Values</h4>
<p>
If no error occurs, <b>connect</b> returns zero. Otherwise, it returns SOCKET_ERROR, and a specific error code can be retrieved by calling <a href="wsapiref_2tiq.htm"><b>WSAGetLastError</b></a>.</p>
<p>
On a blocking socket, the return value indicates success or failure of the connection attempt.</p>
<p>
With a nonblocking socket, the connection attempt cannot be completed immediately. In this case, <b>connect</b> will return SOCKET_ERROR, and <b>WSAGetLastError</b> will return <a href="errors_0oaa.htm#_win32_wsaewouldblock_2">WSAEWOULDBLOCK</a>. In this case, there are three different steps you can take:
<ol>
<li>
Use the <a href="wsapiref_1ab6.htm"><b>select</b></a> function to determine the completion of the connection request by checking to see if the socket is writeable.</li>
<li>
If the application is using <a href="wsapiref_6jn6.htm"><b>WSAAsyncSelect</b></a> to indicate interest in connection events, then the application will receive an FD_CONNECT notification indicating that the <b>connect</b> operation is complete (successfully or not).</li>
<li>
If the application is using <a href="wsapiref_34aa.htm"><b>WSAEventSelect</b></a> to indicate interest in connection events, then the associated event object will be signaled indicating that the <b>connect</b> operation is complete (successfully or not).</li>
</ol>
<p>
Until the connection attempt completes on a nonblocking socket, all subsequent calls to <b>connect</b> on the same socket will fail with the error code <a href="errors_0oaa.htm#_win32_wsaealready_2">WSAEALREADY</a>, and <a href="errors_0oaa.htm#_win32_wsaeisconn_2">WSAEISCONN</a> when the connection completes successfully. Due to ambiguities in version 1.1 of the Windows Sockets specification, error codes returned from <a href="#_win32_connect_2"><b>connect</b></a> while a connection is already pending may vary among implementations. As a result, it is not recommended that applications use multiple calls to connect to detect connection completion. If they do, they must be prepared to handle <a href="errors_0oaa.htm#_win32_wsaeinval_2">WSAEINVAL</a> and <a href="errors_0oaa.htm#_win32_wsaewouldblock_2">WSAEWOULDBLOCK</a> error values the same way that they handle <a href="errors_0oaa.htm#_win32_wsaealready_2">WSAEALREADY</a>, to assure robust execution.</p>
<p>
If the error code returned indicates the connection attempt failed (that is, <a href="errors_0oaa.htm#_win32_wsaeconnrefused_2">WSAECONNREFUSED</a>, <a href="errors_0oaa.htm#_win32_wsaenetunreach_2">WSAENETUNREACH</a>, <a href="errors_0oaa.htm#_win32_wsaetimedout_2">WSAETIMEDOUT</a>) the application can call <b>connect</b> again for the same socket.</p>
<h4>Error Codes</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=41%>WSANOTINITIALISED</td>
<td width=59%>A successful <a href="wsapiref_1v8y.htm"><b>WSAStartup</b></a> must occur before using this function.</td>
</tr>
<tr valign=top>
<td width=41%>WSAENETDOWN</td>
<td width=59%>The network subsystem has failed.</td>
</tr>
<tr valign=top>
<td width=41%>WSAEADDRINUSE</td>
<td width=59%>The socket's local address is already in use and the socket was not marked to allow address reuse with SO_REUSEADDR. This error usually occurs when executing <b>bind</b>, but could be delayed until this function if the <b>bind</b> was to a partially wild-card address (involving ADDR_ANY) and if a specific address needs to be committed at the time of this function.</td>
</tr>
<tr valign=top>
<td width=41%>WSAEINTR</td>
<td width=59%>The (blocking) Windows Socket 1.1 call was canceled through <a href="wsapiref_704y.htm"><b>WSACancelBlockingCall</b></a>.</td>
</tr>
<tr valign=top>
<td width=41%>WSAEINPROGRESS</td>
<td width=59%>A blocking Windows Sockets 1.1 call is in progress, or the service provider is still processing a callback function.</td>
</tr>
<tr valign=top>
<td width=41%>WSAEALREADY</td>
<td width=59%>A nonblocking <b>connect</b> call is in progress on the specified socket.<p>
<b>Note</b>  In order to preserve backward compatibility, this error is reported as WSAEINVAL to Windows Sockets 1.1 applications that link to either WINSOCK.DLL or WSOCK32.DLL.</p>
</td>
</tr>
<tr valign=top>
<td width=41%>WSAEADDRNOTAVAIL</td>
<td width=59%>The remote address is not a valid address (such as <u>ADDR_ANY</u>).</td>
</tr>
<tr valign=top>
<td width=41%>WSAEAFNOSUPPORT</td>
<td width=59%>Addresses in the specified family cannot be used with this socket.</td>
</tr>
<tr valign=top>
<td width=41%>WSAECONNREFUSED</td>
<td width=59%>The attempt to connect was forcefully rejected.</td>
</tr>
<tr valign=top>
<td width=41%>WSAEFAULT</td>
<td width=59%>The <i>name </i>or the <i>namelen </i>parameter is not a valid part of the user address space, the <i>namelen</i> parameter is too small, or the <i>name</i> parameter contains incorrect address format for the associated address family.</td>
</tr>
<tr valign=top>
<td width=41%>WSAEINVAL</td>
<td width=59%>The parameter <i>s</i> is a listening socket, or the destination address specified is not consistent with that of the constrained group the socket belongs to.</td>
</tr>
<tr valign=top>
<td width=41%>WSAEISCONN</td>
<td width=59%>The socket is already connected (connection-oriented sockets only).</td>
</tr>
<tr valign=top>
<td width=41%>WSAENETUNREACH</td>
<td width=59%>The network cannot be reached from this host at this time.</td>
</tr>
<tr valign=top>
<td width=41%>WSAENOBUFS</td>
<td width=59%>No buffer space is available. The socket cannot be connected.</td>
</tr>
<tr valign=top>
<td width=41%>WSAENOTSOCK</td>
<td width=59%>The descriptor is not a socket.</td>
</tr>
<tr valign=top>
<td width=41%>WSAETIMEDOUT</td>
<td width=59%>Attempt to connect timed out without establishing a connection.</td>
</tr>
<tr valign=top>
<td width=41%>WSAEWOULDBLOCK </td>
<td width=59%>The socket is marked as nonblocking and the connection cannot be completed immediately.</td>
</tr>
<tr valign=top>
<td width=41%>WSAEACCES</td>
<td width=59%>Attempt to connect datagram socket to broadcast address failed because <a href="wsapiref_94aa.htm"><b>setsockopt</b></a> option SO_BROADCAST is not enabled.</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Yes<br>
&nbsp;&nbsp;<b>Windows:</b> Yes<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Use version 1.0 and later.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in winsock2.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with ws2_32.lib.</p>
<h4>See Also</h4>
<p>
<a href="wsapiref_13aq.htm"><b>accept</b></a>, <a href="wsapiref_6vzm.htm"><b>bind</b></a>, <a href="wsapiref_273m.htm"><b>getsockname</b></a>, <a href="wsapiref_1ab6.htm"><b>select</b></a>, <a href="wsapiref_2qr6.htm"><b>socket</b></a>, <a href="wsapiref_6jn6.htm"><b>WSAAsyncSelect</b></a>, <a href="wsapiref_8kc2.htm"><b>WSAConnect</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
