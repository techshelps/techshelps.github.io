<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WSAGetServiceClassNameByClassId</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_wsagetserviceclassnamebyclassid_2"></a>WSAGetServiceClassNameByClassId 
The Windows Sockets WSAGetServiceClassNameByClassId function returns the name of the service associated with the given type. This name is the generic service name, like FTP or SNA, and not the name of a specific instance of that service.</h1>
<pre><code><b>INT WSAGetServiceClassNameByClassId(
  LPGUID</b><i> lpServiceClassId</i><b>,  </b>
<b>  LPTSTR</b><i> lpszServiceClassName</i><b>,  </b>
<b>  LPDWORD</b><i> lpdwBufferLength  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpServiceClassId </i></dt>
<dd>
[in] A pointer to the GUID for the service class.</dd>
<dt>
<i>lpszServiceClassName</i></dt>
<dd>
[out] A pointer to the service name.</dd>
<dt>
<i>lpdwBufferLength</i></dt>
<dd>
[in/out] On input, the length of the buffer returned by <i>lpszServiceClassName</i>. On output, the length of the service name copied into <i>lpszServiceClassName</i>.
</dd>
</dl>
<h4>Return Values</h4>
<p>
The <b>WSAGetServiceClassNameByClassId</b> function returns a value of zero if successful. Otherwise, the value SOCKET_ERROR is returned, and a specific error number can be retrieved by calling <a href="wsapiref_2tiq.htm"><b>WSAGetLastError</b></a>.</p>
<h4>Error Codes</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=48%>WSAEFAULT</td>
<td width=52%>The specified buffer referenced by <i>lpszServiceClassName</i> is too small. Pass in a larger buffer.</td>
</tr>
<tr valign=top>
<td width=48%>WSA_INVALID_PARAMETER</td>
<td width=52%>The <i>lpServiceClassId </i>parameter specified is invalid.</td>
</tr>
<tr valign=top>
<td width=48%>WSANOTINITIALIZED</td>
<td width=52%>The WS2_32.DLL has not been initialized. The application must first call <a href="wsapiref_1v8y.htm"><b>WSAStartup</b></a> before calling any Windows Sockets functions.</td>
</tr>
<tr valign=top>
<td width=48%>WSA NOT ENOUGH MEMORY</td>
<td width=52%>There was insufficient memory to perform the operation.</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Yes<br>
&nbsp;&nbsp;<b>Windows:</b> Yes<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in winsock2.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with ws2_32.lib.</p>
<p>&nbsp;</p></body>
</HTML>
