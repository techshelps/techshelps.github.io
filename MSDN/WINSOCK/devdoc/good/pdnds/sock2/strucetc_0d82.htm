<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SOCKADDR</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_sockaddr_2"></a>SOCKADDR</h1>
<p>
The <b>SOCKADDR</b> structure varies depending on the protocol selected. Except for the sa_family field, <b>SOCKADDR</b> contents are expressed in network byte order.</p>
<pre><code>struct sockaddr {
        u_short    sa_family;
        char       sa_data[14];
};   
 </code></pre>
<p>
In Windows Sockets 2, the <b>name</b> parameter is not strictly interpreted as a pointer to a <b>SOCKADDR</b> structure. It is presented in this manner for Windows Sockets compatibility. The actual structure is interpreted differently in the context of different address families. The only requirements are that the first <code>u_short</code> is the address family and the total size of the memory buffer in bytes is <b>namelen</b></p>
<p>
The structure below is used with TCP/IP. Other protocols use similar structures. </p>
<pre><code>struct sockaddr_in {
        short   sin_family;
        u_short sin_port;
        struct  in_addr sin_addr;
        char    sin_zero[8];
};
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
