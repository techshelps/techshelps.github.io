<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Asynchronous Notification Using Event Objects</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_asynchronous_notification_using_event_objects_2"></a>Asynchronous Notification Using Event Objects</h2>
<p>
The <a href="wsapiref_34aa.htm"><b>WSAEventSelect</b></a> and <a href="wsapiref_4et0.htm"><b>WSAEnumNetworkEvents</b></a> functions are provided to accommodate applications such as daemons and services that have no user interface (and hence do not use Windows handles). The <b>WSAEventSelect</b> function behaves exactly like the <a href="wsapiref_6jn6.htm"><b>WSAAsyncSelect</b></a> function. However, instead of causing a Windows message to be sent on the occurrence of an FD_XXX network event (for example, FD_READ and FD_WRITE), an application-designated event object is set. </p>
<p>
Also, the fact that a particular FD_XXX network event has occurred is "remembered" by the service provider. The application can call <b>WSAEnumNetworkEvents</b> to have the current contents of the network event memory copied to an application-supplied buffer and to have the network event memory automatically cleared. If needed, the application can also designate a particular event object that is cleared along with the network event memory.</p>
<p>&nbsp;</p></body>
</HTML>
