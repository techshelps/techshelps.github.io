<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>listen</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_listen_2"></a>listen</h1>
<p>
The Windows Sockets <b>listen</b> function places a socket a state where it is listening for an incoming connection.</p>
<pre><code><b>int listen (
  SOCKET</b><i> s</i><b>,    </b>
<b>  int</b><i> backlog  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>s</i></dt>
<dd>
[in] A descriptor identifying a bound, unconnected socket.</dd>
<dt>
<i>backlog</i></dt>
<dd>
[in] The maximum length of the queue of pending connections. If this value is SOMAXCONN, then the underlying service provider responsible for socket <i>s</i> will set the backlog to a maximum "reasonable" value. There is no standard provision to find out the actual backlog value.
</dd>
</dl>
<h4>Remarks</h4>
<p>
To accept connections, a socket is first created with the <a href="wsapiref_2qr6.htm"><b>socket</b></a><b> </b>function and bound to a local address with the <a href="wsapiref_6vzm.htm"><b>bind</b></a> function, a backlog for incoming connections is specified with <b>listen</b>, and then the connections are accepted with the <a href="wsapiref_13aq.htm"><b>accept</b></a><b> </b>function. Sockets that are connection oriented, those of type SOCK_STREAM for example, are used with <b>listen</b>. The socket <i>s</i> is put into "passive'' mode where incoming connection requests are acknowledged and queued pending acceptance by the process.</p>
<p>
The <b>listen </b>function is typically used by servers that can have more than one connection request at a time. If a connection request arrives and the queue is full, the client will receive an error with an indication of <a href="errors_0oaa.htm#_win32_wsaeconnrefused_2">WSAECONNREFUSED</a>.</p>
<p>
If there are no available socket descriptors, <b>listen</b> attempts to continue to function. If descriptors become available, a later call to <b>listen</b> or <b>accept</b> will refill the queue to the current or most recent "backlog'', if possible, and resume listening for incoming connections.</p>
<p>
An application can call <b>listen</b> more than once on the same socket. This has the effect of updating the current backlog for the listening socket. Should there be more pending connections than the new <i>backlog</i> value, the excess pending connections will be reset and dropped.</p>
<p>
<b>Windows CE:</b> As in 4.3BSD, illegal values (less than 1 or greater than 5) are replaced by the nearest valid value.</p>
<p>
For IrSockets implementation:
<ul>
<li>
The Af_irda.h file must be explicitly included.</li>
<li>
The WSAENETDOWN return value is not supported.</li>
<li>
The <i>backlog</i> parameter is currently limited (silently) to 2. </li>
</ul>
<h4>Compatibility</h4>
<p>
The <i>backlog</i> parameter is limited (silently) to a reasonable value as determined by the underlying service provider. Illegal values are replaced by the nearest legal value. There is no standard provision to find out the actual backlog value.</p>
<h4>Return Values</h4>
<p>
If no error occurs, <b>listen</b> returns zero. Otherwise, a value of SOCKET_ERROR is returned, and a specific error code can be retrieved by calling <b>WSAGetLastError</b>.</p>
<h4>Error Codes</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=41%>WSANOTINITIALISED</td>
<td width=59%>A successful <a href="wsapiref_1v8y.htm"><b>WSAStartup</b></a> must occur before using this function.</td>
</tr>
<tr valign=top>
<td width=41%>WSAENETDOWN</td>
<td width=59%>The network subsystem has failed.</td>
</tr>
<tr valign=top>
<td width=41%>WSAEADDRINUSE</td>
<td width=59%>The socket's local address is already in use and the socket was not marked to allow address reuse with SO_REUSEADDR. This error usually occurs during execution of the <b>bind</b> function, but could be delayed until this function if the <b>bind</b> was to a partially wild-card address (involving ADDR_ANY) and if a specific address needs to be "committed" at the time of this function.</td>
</tr>
<tr valign=top>
<td width=41%>WSAEINPROGRESS</td>
<td width=59%>A blocking Windows Sockets 1.1 call is in progress, or the service provider is still processing a callback function.</td>
</tr>
<tr valign=top>
<td width=41%>WSAEINVAL</td>
<td width=59%>The socket has not been bound with <a href="wsapiref_6vzm.htm"><b>bind</b></a>.</td>
</tr>
<tr valign=top>
<td width=41%>WSAEISCONN</td>
<td width=59%>The socket is already connected.</td>
</tr>
<tr valign=top>
<td width=41%>WSAEMFILE</td>
<td width=59%>No more socket descriptors are available.</td>
</tr>
<tr valign=top>
<td width=41%>WSAENOBUFS</td>
<td width=59%>No buffer space is available.</td>
</tr>
<tr valign=top>
<td width=41%>WSAENOTSOCK</td>
<td width=59%>The descriptor is not a socket.</td>
</tr>
<tr valign=top>
<td width=41%>WSAEOPNOTSUPP</td>
<td width=59%>The referenced socket is not of a type that supports the <b>listen</b> operation.</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Yes<br>
&nbsp;&nbsp;<b>Windows:</b> Yes<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Use version 1.0 and later.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in winsock2.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with ws2_32.lib.</p>
<h4>See Also</h4>
<p>
<a href="wsapiref_13aq.htm"><b>accept</b></a>, <a href="wsapiref_8m7m.htm"><b>connect</b></a>, <a href="wsapiref_2qr6.htm"><b>socket</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
