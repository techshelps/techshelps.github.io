<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GetService</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_getservice_2"></a>GetService</h1>
<p>
<b>Important</b>  The <b>GetService</b> function is a Microsoft-specific extension to the Windows Sockets 1.1 specification. This function is obsolete. For the convenience of Windows Sockets 1.1 developers, the reference material is below.. </p>
<p>
The functions detailed in <a href="ovrvw4_6po2.htm"><i>Protocol-Independent Name Resolution</i></a> provide equivalent functionality in Windows Sockets 2.</p>
<p>
The <b>GetService</b> function obtains information about a network service in the context of a set of default name spaces or a specified name space. The network service is specified by its type and name. The information about the service is obtained as a set of <b>NS_SERVICE_INFO</b> data structures. </p>
<pre><code><b>INT GetService(
  DWORD</b><i> dwNameSpace</i><b>,   </b>// specifies name space or spaces to search
<b>  PGUID</b><i> lpGuid</i><b>,        </b>// points to a GUID service type
<b>  LPTSTR</b><i> lpServiceName</i><b>,</b>
<b>                       </b>// points to a service name
<b>  DWORD</b><i> dwProperties</i><b>,  </b>// specifies service information to be 
                       // obtained
<b>  LPVOID</b><i> lpBuffer</i><b>,     </b>// points to buffer to receive service 
                       // information
<b>  LPDWORD</b><i> lpdwBufferSize</i><b>,  </b>// points to size of buffer, size of 
                           // service information
<b>  LPSERVICE_ASYNC_INFO</b><i> lpServiceAsyncInfo</i> 
                       // reserved for future use, must be NULL
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dwNameSpace</i></dt>
<dd>
Specifies the name space, or a set of default name spaces, that the operating system will query for information about the specified network service. 
<p>
Use one of the following constants to specify a name space:

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=37%>Value</th>
<th align=left width=63%>Name Space</th>
</tr>
<tr valign=top>
<td width=37%>NS_DEFAULT</td>
<td width=63%>A set of default name spaces. The operating system will query each name space within this set. The set of default name spaces typically includes all the name spaces installed on the system. System administrators, however, can exclude particular name spaces from the set. NS_DEFAULT is the value that most applications should use for <i>dwNameSpace</i>.</td>
</tr>
<tr valign=top>
<td width=37%>NS_DNS</td>
<td width=63%>The Domain Name System used in the Internet for host name resolution.</td>
</tr>
<tr valign=top>
<td width=37%>NS_NETBT</td>
<td width=63%>The NetBIOS over TCP/IP layer. All Windows NT systems register their computer names with NetBIOS. This name space is used to resolve a computer name into an IP address using this registration. Note that NS_NETBT can access a WINS server to perform the resolution.</td>
</tr>
<tr valign=top>
<td width=37%>NS_SAP</td>
<td width=63%>The Netware Service Advertising Protocol. This can access the Netware bindery if appropriate. NS_SAP is a dynamic name space that allows registration of services.</td>
</tr>
<tr valign=top>
<td width=37%>NS_TCPIP_HOSTS</td>
<td width=63%>Looks up host names and IP addresses in the &lt;systemroot&gt;\system32\drivers\etc\hosts file.</td>
</tr>
<tr valign=top>
<td width=37%>NS_TCPIP_LOCAL</td>
<td width=63%>Local TCP/IP name resolution mechanisms, including comparisons against the local host name and looks up host names and IP addresses in cache of host to IP address mappings.</td>
</tr>
</table><br>


<p>
Most calls to <b>GetService</b> should use the special value NS_DEFAULT. This lets a client get by with no knowledge of which name spaces are available on an internetwork. The system administrator determines name space access. Name spaces can come and go without the client having to be aware of the changes.
</dd>
<dt>
<i>lpGuid</i></dt>
<dd>
Points to a globally unique identifier (<b>GUID</b>) that specifies the type of the network service. The header file SVCGUID.H includes <b>GUID</b> service types from many well-known services within the DNS and SAP name spaces.</dd>
<dt>
<i>lpServiceName</i></dt>
<dd>
Points to a zero-terminated string that uniquely represents the service name. For example, "MY SNA SERVER".</dd>
<dt>
<i>dwProperties</i></dt>
<dd>
A set of bit flags that specify the service information that the function obtains. Each of these bit flag constants, other than PROP_ALL, corresponds to a particular member of the <b>SERVICE_INFO</b> data structure. If the flag is set, the function puts information into the corresponding member of the data structures stored in *<i>lpBuffer</i>. The following bit flags are defined:
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=37%>Value</th>
<th align=left width=63%>Name Space</th>
</tr>
<tr valign=top>
<td width=37%>PROP_COMMENT</td>
<td width=63%>If this flag is set, the function stores data in the <b>lpComment</b> member of the data structures stored in *<i>lpBuffer</i>. </td>
</tr>
<tr valign=top>
<td width=37%>PROP_LOCALE</td>
<td width=63%>If this flag is set, the function stores data in the <b>lpLocale</b> member of the data structures stored in *<i>lpBuffer</i>. </td>
</tr>
<tr valign=top>
<td width=37%>PROP_DISPLAY_HINT</td>
<td width=63%>If this flag is set, the function stores data in the <b>dwDisplayHint</b> member of the data structures stored in *<i>lpBuffer</i>. </td>
</tr>
<tr valign=top>
<td width=37%>PROP_VERSION</td>
<td width=63%>If this flag is set, the function stores data in the <b>dwVersion</b> member of the data structures stored in *<i>lpBuffer</i>. </td>
</tr>
<tr valign=top>
<td width=37%>PROP_START_TIME</td>
<td width=63%>If this flag is set, the function stores data in the <b>dwTime</b> member of the data structures stored in *<i>lpBuffer</i>. </td>
</tr>
<tr valign=top>
<td width=37%>PROP_MACHINE</td>
<td width=63%>If this flag is set, the function stores data in the <b>lpMachineName</b> member of the data structures stored in *<i>lpBuffer</i>. </td>
</tr>
<tr valign=top>
<td width=37%>PROP_ADDRESSES</td>
<td width=63%>If this flag is set, the function stores data in the <b>lpServiceAddress</b> member of the data structures stored in *<i>lpBuffer</i>. </td>
</tr>
<tr valign=top>
<td width=37%>PROP_SD</td>
<td width=63%>If this flag is set, the function stores data in the <b>ServiceSpecificInfo</b> member of the data structures stored in *<i>lpBuffer</i>. </td>
</tr>
<tr valign=top>
<td width=37%>PROP_ALL</td>
<td width=63%>If this flag is set, the function stores data in all of the members of the data structures stored in *<i>lpBuffer</i>. </td>
</tr>
</table><br>

</dd>
<dt>
<i>lpBuffer</i></dt>
<dd>
Points to a buffer to receive an array of <a href="strucetc_96r6.htm"><b>NS_SERVICE_INFO</b></a> structures and associated service information. Each <b>NS_SERVICE_INFO</b> structure contains service information in the context of a particular name space. Note that if <i>dwNameSpace</i> is NS_DEFAULT, the function stores more than one structure into the buffer; otherwise, just one structure is stored.
<p>
Each <b>NS_SERVICE_INFO</b> structure contains a <a href="strucetc_822a.htm"><b>SERVICE_INFO</b></a> structure. The members of these <b>SERVICE_INFO</b> structures will contain valid data based on the bit flags that are set in the <i>dwProperties</i> parameter. If a member's corresponding bit flag is not set in <i>dwProperties</i>, the member's value is undefined.

<p>
The function stores the <b>NS_SERVICE_INFO</b> structures in a consecutive array, starting at the beginning of the buffer. The pointers in the contained <b>SERVICE_INFO </b>structures point to information that is stored in the buffer between the end of the <b>NS_SERVICE_INFO </b>structures and the end of the buffer.
</dd>
<dt>
<i>lpdwBufferSize</i></dt>
<dd>
Points to a variable that, on input, contains the size, in bytes, of the buffer pointed to by <i>lpBuffer</i>. On output, this variable contains the number of bytes required to store the requested information. If this output value is greater than the input value, the function has failed due to insufficient buffer size.</dd>
<dt>
<i>lpServiceAsyncInfo</i></dt>
<dd>
This parameter is reserved for future use. It must be set to NULL.
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is the number of <b>NS_SERVICE_INFO </b>structures stored in *<i>lpBuffer</i>. Zero indicates that no structures were stored.</p>
<p>
If the function fails, the return value is SOCKET_ERROR ( – 1). To get extended error information, call <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_getlasterror">
</object><a href=JavaScript:alink_1.Click()><b>GetLastError</b></a>. <b>GetLastError</b> can return one of the following extended error values:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=51%>Value</th>
<th align=left width=49%>Meaning</th>
</tr>
<tr valign=top>
<td width=51%>ERROR_INSUFFICIENT_BUFFER</td>
<td width=49%>The buffer pointed to by <i>lpBuffer</i> is too small to receive all of the requested information. Call the function with a buffer at least as large as the value returned in *<i>lpdwBufferSize</i>.</td>
</tr>
<tr valign=top>
<td width=51%>ERROR_SERVICE_NOT_FOUND</td>
<td width=49%>The specified service was not found, or the specified name space is not in use. The function return value is zero in this case.</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Yes<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in nspapi.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with wsock32.lib.</p>
<h4>See Also</h4>
<p>
<a href="wsapiref_2nea.htm"><b>SetService</b></a>, <a href="strucetc_96r6.htm"><b>NS_SERVICE_INFO</b></a>, <a href="strucetc_822a.htm"><b>SERVICE_INFO</b></a></p>
<p>&nbsp;</p></body>
</HTML>
