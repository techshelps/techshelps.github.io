<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Name Resolution Data Structures</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_name_resolution_data_structures_2"></a>Name Resolution Data Structures</h3>
<p>
There are several important data structures that are used extensively throughout the name resolution functions. These are described below.</p>

<h4><a name="_win32_query_related_data_structures_2"></a>Query-Related Data Structures</h4>
<p>
The <a href="strucetc_4y2a.htm">WSAQUERYSET</a> structure is used to form queries for <a href="wsapiref_6sfm.htm"><b>WSALookupServiceBegin</b></a>, and used to deliver query results for <a href="wsapiref_14z6.htm"><b>WSALookupServiceNext</b></a>. It is a complex structure since it contains pointers to several other structures, some of which reference still other structures. The relationship between WSAQUERYSET and the structures it references is illustrated as follows:</p>
<p>
<img src="images/ovrvw3_2.gif" border=0></p>
<p>
<b>WSAQUERYSET and Friends</b></p>
<p>
Within the WSAQUERYSET structure, most of the fields are self explanatory, but some deserve additional explanation. The <i>dwSize</i> field must always be filled in with sizeof(WSAQUERYSET), as this is used by name space providers to detect and adapt to different versions of the WSAQUERYSET structure that may appear over time.</p>
<p>
The <i>dwOutputFlags</i> field is used by a name space provider to provide additional information about query results. For details, see <a href="wsapiref_14z6.htm"><b>WSALookupServiceNext</b></a>.</p>
<p>
The <a href="strucetc_0mpe.htm">WSAECOMPARATOR</a> structure referenced by <i>lpversion </i>is used for both query constraint and results. For queries, the <i>dwVersion</i> field indicates the desired version of the service. The <i>ecHow </i>field is an enumerated type which specifies how the comparison will be made. The choices are COMP_EQUALS which requires that an exact match in version occurs, or COMP_NOTLESS which specifies that the service's version number be no less than the value of <i>dwVersion</i>.</p>
<p>
The interpretation of <i>dwNameSpace </i>and <i>lpNSProviderId </i>depends upon how the structure is being used and is described further in the individual function descriptions that utilize this structure.</p>
<p>
The <i>lpszContext</i> field applies to hierarchical name spaces, and specifies the starting point of a query or the location within the hierarchy where the service resides. The general rules are:
<ul>
<li>
A value of NULL, blank ("") will start the search at the default context.</li>
<li>
A value of "\" starts the search at the top of the name space.</li>
<li>
Any other value starts the search at the designated point. </li>
</ul>
<p>
Providers that do not support containment may return an error if anything other than "" or "\" is specified. Providers that support limited containment, such as groups, should accept "", '\", or a designated point. Contexts are name space specific. If <i>dwNameSpace</i> is NS_ALL, then only "" or "\" should be passed as the context since these are recognized by all name spaces.</p>
<p>
The <i>lpszQueryString</i> field is used to supply additional, name space-specific query information such as a string describing a well-known service and transport protocol name, as in "ftp/tcp".</p>
<p>
The <a href="strucetc_8vzm.htm">AFPROTOCOLS</a> structure referenced by <i>lpafpProtocols </i>is used for query purposes only, and supplies a list of protocols to constrain the query. These protocols are represented as (address family, protocol) pairs, since protocol values only have meaning within the context of an address family.</p>
<p>
The array of <a href="strucetc_4zua.htm">CSADDR_INFO</a> structure referenced by <i>lpcsaBuffer</i> contain all of the information needed to for either a service to use in establishing a listen, or a client to use in establishing a connection to the service. The <i>LocalAddr</i> and <i>RemoteAddr</i> fields both directly contain a <a href="strucetc_7qb6.htm">SOCKET_ADDRESS</a> structure. A service would create a socket using the tuple (<i>LocalAddr.lpSockaddr-&gt;sa_family, iSocketType, iProtocol</i>). It would bind the socket to a local address using <i>LocalAddr.lpSockaddr</i>, and <i>LocalAddr.lpSockaddrLength</i>. The client creates its socket with the tuple (<i>RemoteAddr.lpSockaddr-&gt;sa_family, iSocketType, iProtocol</i>), and uses the combination of <i>RemoteAddr.lpSockaddr</i>, and <i>RemoteAddr.lpSockaddrLength </i>when making a remote connection.</p>

<h4><a name="_win32_service_class_data_structures_2"></a>Service Class Data Structures</h4>
<p>
When a new service class is installed, a WSASERVICECLASSINFO structure must be prepared and supplied. This structure also consists of substructures which contain a series of parameters that apply to specific name spaces.</p>
<p>
<img src="images/ovrvw3_3.gif" border=0></p>
<p>
<b>Class Info Data Structures</b></p>
<p>
For each service class, there is a single <a href="strucetc_0rqq.htm">WSASERVICECLASSINFO</a> structure. Within the WSASERVICECLASSINFO structure, the service class' unique identifier is contained in <i>lpServiceClassId</i>, and an associated display string is referenced by <i>lpServiceClassName</i>. This is the string that will be returned by <a href="wsapiref_8f76.htm"><b>WSAGetServiceClassNameByClassId</b></a>.</p>
<p>
The <i>lpClassInfos</i> field in the WSASERVICECLASSINFO structure references an array of WSANSCLASSINFO structures, each of which supplies a named and typed parameter that applies to a specified name space. Examples of values for the <i>lpszName</i> field include: "SapId", "TcpPort", "UdpPort", etc. These strings are generally specific to the name space identified in <i>dwNameSpace</i>. Typical values for <i>dwValueType</i> might be REG_DWORD, REG_SZ, etc. The <i>dwValueSize</i> field indicates the length of the data item pointed to by <i>lpValue</i>.</p>
<p>
The entire collection of data represented in a WSASERVICECLASSINFO structure is provided to each name space provider when <b>WSAInstallServiceClass</b> is invoked. Each individual name space provider then sifts through the list of WSANSCLASSINFO structures and retain the information applicable to it.</p>
<p>&nbsp;</p></body>
</HTML>
