<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Summary of New Socket Ioctl Opcodes</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_summary_of_new_socket_ioctl_opcodes_2"></a>Summary of New Socket Ioctl Opcodes</h2>
<p>
The new socket ioctl opcodes for Windows Sockets 2 are summarized in the following table. See <a href="wsapiref_6ik2.htm"><b>WSAIoctl</b></a> for detailed information on these opcodes. The <b>WSAIoctl</b> function also supports all the ioctl opcodes specified in <a href="wsapiref_7dde.htm"><b>ioctlsocket</b></a>. Theother new protocol-specific ioctl opcodes can be found in the Protocol-specific Annex (a separate document included with the Platform SDK).</p>
<table cellspacing=4 cols=4>
<tr valign=top>
<th align=left width=30%>Opcode</th>
<th align=left width=18%>Input Type</th>
<th align=left width=20%>Output Type</th>
<th align=left width=32%>Meaning</th>
</tr>
<tr valign=top>
<td width=30%>SIO_ASSOCIATE<br>
_HANDLE</td>
<td width=18%>companion API dependent</td>
<td width=20%>&lt;not used&gt;</td>
<td width=32%>Associate the socket with the specified handle of a companion interface.</td>
</tr>
<tr valign=top>
<td width=30%>SIO_ENABLE<br>
_CIRCULAR_QUEUEING</td>
<td width=18%>&lt;not used&gt;</td>
<td width=20%>&lt;not used&gt;</td>
<td width=32%>Circular queuing is enabled.</td>
</tr>
<tr valign=top>
<td width=30%>SIO_FIND_ROUTE</td>
<td width=18%>struct <a href="strucetc_0d82.htm">sockaddr</a></td>
<td width=20%>&lt;not used&gt;</td>
<td width=32%>Request the route to the specified address to be discovered.</td>
</tr>
<tr valign=top>
<td width=30%>SIO_FLUSH</td>
<td width=18%>&lt;not used&gt;</td>
<td width=20%>&lt;not used&gt;</td>
<td width=32%>Discard current contents of the sending queue.</td>
</tr>
<tr valign=top>
<td width=30%>SIO_GET_BROADCAST<br>
_ADDRESS</td>
<td width=18%>&lt;not used&gt;</td>
<td width=20%>struct sockaddr</td>
<td width=32%>Retrieve the protocol-specific broadcast address to be used in <b>sendto</b>/<b>WSASendTo</b>.</td>
</tr>
<tr valign=top>
<td width=30%>SIO_GET_QOS</td>
<td width=18%>&lt;not used&gt;</td>
<td width=20%>QOS</td>
<td width=32%>Retrieve current flow specification(s) for the socket.</td>
</tr>
<tr valign=top>
<td width=30%>SIO_GET_GROUP_QOS</td>
<td width=18%>&lt;not used&gt;</td>
<td width=20%>QOS</td>
<td width=32%>Reserved for future use with socket groups: Retrieve current group flow specification(s) for the group this socket belongs to.</td>
</tr>
<tr valign=top>
<td width=30%>SIO_MULTIPOINT<br>
_LOOPBACK</td>
<td width=18%>BOOL</td>
<td width=20%>&lt;not used&gt;</td>
<td width=32%>Control whether data sent in a multipoint session will also be received by the same socket on the local host.</td>
</tr>
<tr valign=top>
<td width=30%>SIO_MULTICAST<br>
_SCOPE</td>
<td width=18%>int</td>
<td width=20%>&lt;not used&gt;</td>
<td width=32%>Specify the scope over which multicast transmissions will occur.</td>
</tr>
<tr valign=top>
<td width=30%>SIO_SET_QOS</td>
<td width=18%>QOS</td>
<td width=20%>&lt;not used&gt;</td>
<td width=32%>Establish new flow specification(s) for the socket.</td>
</tr>
<tr valign=top>
<td width=30%>SIO_SET_GROUP_QOS</td>
<td width=18%>QOS</td>
<td width=20%>&lt;not used&gt;</td>
<td width=32%>Reserved for future use with socket groups: Establish new group flow specification(s) for the group this socket belongs to.</td>
</tr>
<tr valign=top>
<td width=30%>SIO_TRANSLATE<br>
_HANDLE</td>
<td width=18%>int</td>
<td width=20%>companion API dependent</td>
<td width=32%>Obtain a corresponding handle for socket <i>s</i> that is valid in the context of a companion interface.</td>
</tr>
<tr valign=top>
<td width=30%>SIO_ROUTING<br>
_INTERFACE_QUERY</td>
<td width=18%>SOCKADDR</td>
<td width=20%>SOCKADDR</td>
<td width=32%>Obtain the address of local interface which should be used to send to the specified address</td>
</tr>
<tr valign=top>
<td width=30%>SIO_ROUTING<br>
_INTERFACE_CHANGE</td>
<td width=18%>SOCKADDR</td>
<td width=20%>&lt;not used&gt;</td>
<td width=32%>Request notification of changes in information reported via SIO_ROUTING_INTERFACE_QUERY for the specified address</td>
</tr>
<tr valign=top>
<td width=30%>SIO_ADDRESS<br>
_LIST_QUERY</td>
<td width=18%>&lt;not used&gt;</td>
<td width=20%>SOCKET<br>
_ADDRESS<br>
_LIST</td>
<td width=32%>Obtain the list of addresses to which application can bind.</td>
</tr>
<tr valign=top>
<td width=30%>SIO_ADDRESS<br>
_LIST_CHANGE</td>
<td width=18%>&lt;not used&gt;</td>
<td width=20%>&lt;not used&gt;</td>
<td width=32%>Request notification of changes in information reported via SIO_ADDRESS_LIST_QUERY</td>
</tr>
</table><br>
<p>&nbsp;</p></body>
</HTML>
