<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Protocol-Independent Multicast and Multipoint</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_protocol_independent_multicast_and_multipoint_2"></a>Protocol-Independent Multicast and Multipoint</h2>
<p>
Windows Sockets 2 provides a generic method for utilizing the multipoint and multicast capabilities of transports. This generic method implements these features just as it allows the basic data transport capabilities of numerous transport protocols to be accessed. The term multipoint is used hereafter to refer to both multicast and multipoint communications.</p>
<p>
Current multipoint implementations (for example, IP multicast, ST-II, T.120, and ATM UNI) vary widely. How nodes join a multipoint session, whether a particular node is designated as a central or root node, and whether data is exchanged between all nodes or only between a root node and the various leaf nodes differ among implementations. The <a href="strucetc_4cfm.htm">WSAPROTOCOL_INFO</a> structure for Windows Sockets 2 is used to declare the various multipoint attributes of a protocol. By examining these attributes, the programmer knows what conventions to follow with the applicable Windows Sockets 2 functions to setup, utilize and teardown multipoint sessions.</p>
<p>
Following is a summary of the features of Windows Sockets 2 that support multipoint:
<ul>
<li>
Two attribute bits in the WSAPROTOCOL_INFO structure.</li>
<li>
Four flags defined for the <i>dwFlags </i>parameter of the <a href="wsapiref_533m.htm"><b>WSASocket</b></a> function.</li>
<li>
One function, <a href="wsapiref_7dv6.htm"><b>WSAJoinLeaf</b></a>, for adding leaf nodes into a multipoint session</li>
<li>
Two <a href="wsapiref_6ik2.htm"><b>WSAIoctl</b></a> command codes for controlling multipoint loopback and establishing the scope for multicast transmissions. (The latter corresponds to the IP multicast time-to-live or TTL parameter.)</li>
</ul>
<p>
<b>Note</b>  The inclusion of these multipoint features in Windows Sockets 2 does not preclude an application from using an existing protocol-dependent interface, such as the Deering socket options for IP multicast.</p>
<p>
See <a href="ovrvw5_5mya.htm">Multipoint and Multicast Semantics</a> for detailed information on how the various multipoint schemes are characterized and how the applicable features of Windows Sockets 2 are utilized.</p>
<p>&nbsp;</p></body>
</HTML>
