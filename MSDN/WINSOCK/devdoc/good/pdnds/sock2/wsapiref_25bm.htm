<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WSAEnumNameSpaceProviders</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_wsaenumnamespaceproviders_2"></a>WSAEnumNameSpaceProviders</h1>
<p>
The Windows Sockets <b>WSAEnumNameSpaceProviders</b> function retrieves information about available name spaces.</p>
<pre><code><b>INT WSAAPI WSAEnumNameSpaceProviders (
  IN OUT LPDWORD</b><i> lpdwBufferLength</i><b>,  </b>
<b>  OUT LPWSANAMESPACE_INFO</b><i> lpnspBuffer  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpdwBufferLength</i></dt>
<dd>
[in/out] On input, the number of bytes contained in the buffer pointed to by <i>lpnspBuffer</i>. On output (if the function fails, and the error is WSAEFAULT), the minimum number of bytes to pass for the <i>lpnspBuffer</i> to retrieve all the requested information. The passed-in buffer must be sufficient to hold all of the name space information.</dd>
<dt>
<i>lpnspBuffer</i></dt>
<dd>
[out] A buffer that is filled with <a href="strucetc_6s8i.htm"><b>WSANAMESPACE_INFO</b></a> structures. The returned structures are located consecutively at the head of the buffer. Variable sized information referenced by pointers in the structures point to locations within the buffer located between the end of the fixed sized structures and the end of the buffer. The number of structures filled in is the return value of <b>WSAEnumNameSpaceProviders</b>.
</dd>
</dl>
<h4>Return Values</h4>
<p>
The <b>WSAEnumNameSpaceProviders</b> function returns the number of <a href="strucetc_6s8i.htm"><b>WSANAMESPACE_INFO</b></a> structures copied into <i>lpnspBuffer</i>. Otherwise, the value SOCKET_ERROR is returned, and a specific error number can be retrieved by calling <a href="wsapiref_2tiq.htm"><b>WSAGetLastError</b></a>.</p>
<h4>Error Codes</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=45%>WSAEFAULT</td>
<td width=55%>the buffer length was too small to receive all the relevant <a href="strucetc_6s8i.htm"><b>WSANAMESPACE_INFO</b></a> structures and associated information. Pass in a buffer at least as large as the value returned in <i>lpdwBufferLength</i>.</td>
</tr>
<tr valign=top>
<td width=45%>WSANOTINITIALIZED</td>
<td width=55%>The WS2_32.DLL has not been initialized. The application must first call <a href="wsapiref_1v8y.htm"><b>WSAStartup</b></a> before calling any Windows Sockets functions.</td>
</tr>
<tr valign=top>
<td width=45%>WSA NOT ENOUGH MEMORY</td>
<td width=55%>There was insufficient memory to perform the operation.</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Yes<br>
&nbsp;&nbsp;<b>Windows:</b> Yes<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in winsock2.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with ws2_32.lib.</p>
<p>&nbsp;</p></body>
</HTML>
