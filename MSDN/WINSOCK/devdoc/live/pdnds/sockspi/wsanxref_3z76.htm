<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Connections using Connect/WSAConnect/WSPConnect</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_connections_using_connect_wsaconnect_wspconnect_2"></a>Connections using Connect/WSAConnect/WSPConnect</h3>
<p>
This section provides connection information using <a href="../../../good/pdnds/sock2/wsapiref_8m7m.htm"><b>Connect</b></a> functions.</p>
<h4>Connect with no optional or access data</h4>
<p>
In order to establish a connection to a DECnet peer, the parameter <i>name </i>should point to a <i>sockaddr_dn</i> structure.</p>
<pre><code>#include &lt;ws2dnet.h&gt;

int WSAAPI connect ( SOCKET <i>s</i>, const struct sockaddr_dn FAR * <i>name</i>, 
int <i>namelen </i>);

int WSAAPI WSAConnect ( SOCKET <i>s</i>, const struct sockaddr_dn FAR * <i>name</i>, 
int <i>namelen</i>, LPWSABUF <i>lpCallerData</i>, LPWSABUF <i>lpCalleeData</i>, 
GROUP <i>g</i>, LPQOS <i>lpSQOS</i>, LPQOS <i>lpGQOS</i> );

int WSPAPI WSPConnect( SOCKET <i>s</i>, const struct sockaddr_dn FAR * <i>name</i>, int <i>namelen</i>, LPWSABUF <i>lpCallerData</i>, LPWSABUF <i>lpCalleeData</i>, LPQOS <i>lpSQOS</i>, LPQOS <i>lpGQOS</i>, int FAR * <i>lpErrno </i>);
 </code></pre>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=15%><i>name</i></td>
<td width=85%>A pointer to a <i>sockaddr_dn</i> structure which contains the DECnet address and object to which the socket is to be connected.</td>
</tr>
</table><br>
<h4>Optional and access data on connect</h4>
<p>
DECnet sockets support supports the exchange of up to 16 bytes of optional data on a <a href="../../../good/pdnds/sock2/wsapiref_8kc2.htm"><b>WSAConnect</b></a>. It also supports the sending of DECnet access control information from the client to the server on a connect request.</p>
<pre><code><b>#include &lt;ws2dnet.h&gt;

int WSAAPI WSAConnect ( SOCKET</b> <i>s</i><b>, const struct sockaddr_dn FAR * </b><i>name</i><b>, </b>
<b>int</b> <i>namelen</i>, <b>LPWSABUF</b> <i>lpCallerData</i>, <b>LPWSABUF</b> <i>lpCalleeData</i>, 
<b>GROUP</b> <i>g</i>, <b>LPQOS</b> <i>lpSQOS</i>, <b>LPQOS</b> <i>lpGQOS</i> <b>);</b>

<b>int WSPAPI WSPConnect( SOCKET</b> <i>s</i><b>, const struct sockaddr_dn </b>FAR<b> </b>*<b> </b><i>name</i><b>, int</b> <i>namelen</i>, <b>LPWSABUF</b> <i>lpCallerData</i>, <b>LPWSABUF</b> <i>lpCalleeData</i>, <b>LPQOS</b> <i>lpSQOS</i>,<b>LPQOS</b> <i>lpGQOS</i>, <b>int</b> FAR * <i>lpErrno </i><b>);</b>
 </code></pre>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=24%><i>lpCallerData</i></td>
<td width=76%>A pointer to the user data that is to be transferred from the client to the server during connection establishment.</td>
</tr>
<tr valign=top>
<td width=24%><i>lpCalleeData</i></td>
<td width=76%>A pointer to the optional data that is to be transferred back from the server during connection establishment.</td>
</tr>
</table><br>
<p class=indent1>
DECnet optional data is passed in an <i>optdata_dn</i> structure. Access control data is passed in an <i>accessdata_dn</i> structure. </p>
<p class=indent1>
The <i>lpCallerData</i> should point to a <i>calldata_dn </i>structure which contains concatenated <i>opdata_dn</i> and <i>accessdata_dn</i> structures. If <i>lpCallerData</i> is set to NULL, no additional data will be sent to the server. If either the <i>opdata_dn.opt_optl</i> or the <i>accessdata_dn</i>.<i>acc_userl </i>are set to zero, that portion of the structure should be ignored.</p>
<p class=indent1>
If <i>lpCalleeData</i> is set to NULL, no optional data will be read from the server. If either the <i>opdata_dn.opt_optl</i> or the <i>accessdata_dn</i>.<i>acc_userl </i>are set to zero, that structure should be ignored. <i>The accept </i>only returns optional data, not access data so the <i>lpCalleeData</i> pointer should point to a buffer containing the <i>opdata_dn</i> structure. If <i>lpCalleeData</i> is set to NULL no optional data will be read from the server. </p>
<p>&nbsp;</p></body>
</HTML>
