<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FLOWSPEC</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_gqos_flowspec"></a>FLOWSPEC</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>FLOWSPEC</b> structure provides quality of service parameters to the GQOS SP. This allows GQOS-aware applications to invoke, modify, or remove quality of service settings for a given flow.</p>
<pre><code>typedef struct _flowspec {
    uint32        TokenRate;            /* In Bytes/sec            */
    uint32        TokenBucketSize;      /* In Bytes                */
    uint32        PeakBandwidth;        /* In Bytes/sec            */
    uint32        Latency;              /* In microseconds         */
    uint32        DelayVariation;       /* In microseconds         */
    SERVICETYPE   ServiceType;          /* Guaranteed, Predictive, */
                                        /*   Best Effort, etc.     */
   uint32         MaxSduSize            /* In Bytes                */
   uint32         MinimumPolicedSize    /* In Bytes                */
} FLOWSPEC, *PFLOWSPEC,  FAR * LPFLOWSPEC;
</code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>TokenRate</b> </dt>
<dd>
Specifies the permitted rate at which data can be transmitted over the life of the flow. <b>TokenRate</b> is similar to other token bucket models seen in such WAN technologies as Frame Relay, in which the token is analogous to a credit. If such tokens are not used immediately, they accrue to allow data transmission up to a certain periodic limit (<b>PeakBandwidth</b>, in the case of GQOS). Accrual of credits is limited, however, to a specified amount (<b>TokenBucketSize</b>). Limiting total credits (tokens) avoids situations where, for example, flows that are inactive for some time flood the available bandwidth with their large amount of accrued tokens. Because flows may accrue transmission credits over time (at their <b>TokenRate</b> value) <i>only</i> up to the maximum of their <b>TokenBucketSize</b>, and because they are limited in "burst transmissions" to their <b>PeakBandwidth</b>, traffic control and network-device resource integrity are maintained. Traffic control is maintained because flows cannot send too much data at once, and network-device resource integrity is maintained because such devices are spared from high traffic bursts.  
<p>
With this model, applications can transmit data only when sufficient credits are available. If sufficient credit amounts are not available, the application must either wait or discard the traffic (based on the value of <a href="gqosobj_66sl.htm"><b>QOS_OBJECT_SD_MODE</b></a>). Therefore it is important that applications base their <b>TokenRate</b> requests on reasonable expectations for transmission requirements. For example, in video applications the <b>TokenRate</b> is typically set to the average bit rate peak to peak.

<p>
If the <b>TokenRate</b> member is set to -1, limits on the transmission rate (the token bucket model) will not be put into effect. <b>TokenRate</b> is expressed in bytes per second.
</dd>
<dt>
<b>TokenBucketSize</b> </dt>
<dd>
The maximum amount of credits a given direction of a flow can accrue, regardless of time. In video applications, <b>TokenBucketSize</b> will likely be the largest average frame size. In constant rate applications, <b>TokenBucketSize</b> should be set to allow for small variations. <b>TokenBucketSize</b> is expressed in bytes.</dd>
<dt>
<b>PeakBandwidth</b> </dt>
<dd>
The upper limit on time-based transmission permission for a given flow, sometimes considered a <i>burst limit</i>. <b>PeakBandwidth</b> restricts flows that may have accrued a significant amount of transmission credits, or tokens from overburdening network resources with one-time or cyclical data bursts, by enforcing a per-second data transmission ceiling. Some intermediate systems can take advantage of this information, resulting in more efficient resource allocation. <b>PeakBandwidth</b> is expressed in bytes per second.</dd>
<dt>
<b>Latency</b> </dt>
<dd>
Maximum acceptable delay between transmission of a bit by the sender and its receipt by one or more intended receivers. The precise interpretation of this number depends on the level of guarantee specified in the QOS request. <b>Latency</b> is expressed in microseconds.</dd>
<dt>
<b>DelayVariation</b> </dt>
<dd>
Difference between the maximum and minimum possible delay a packet will experience. Applications use <b>DelayVariation</b> to determine the amount of buffer space needed at the receiving end of the flow, in order to restore the original data transmission pattern. <b>DelayVariation</b> is expressed in microseconds.</dd>
<dt>
<b>ServiceType</b></dt>
<dd>
Specifies the level of service to negotiate for the flow. This member can be one of the following defined service types.  
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Value</th>
<th align=left width=52%>Meaning</th>
</tr>
<tr valign=top>
<td width=48%><b>SERVICETYPE_NOTRAFFIC</b> </td>
<td width=52%>Indicates that no traffic will be transmitted in the specified direction. On duplex capable media, this value signals underlying software to set up unidirectional connections only. </td>
</tr>
<tr valign=top>
<td width=48%><b>SERVICETYPE_BESTEFFORT</b> </td>
<td width=52%>Specifies that GQOS should use <b>FLOWSPEC</b> as a service quality guideline, and makes reasonable efforts to maintain the level of service requested, without making any guarantees on packet delivery.</td>
</tr>
<tr valign=top>
<td width=48%><b>SERVICETYPE_CONTROLLEDLOAD</b> </td>
<td width=52%>Provides an end-to-end quality of service that closely approximates transmission quality provided to by best-effort service, as expected under <i>unloaded conditions </i>from the associated network components along the data path.<p>
Applications that use <b>SERVICETYPE_CONTROLLEDLOAD</b> may therefore assume the following:
<ul>
<li>
The network will deliver a very high percentage of transmitted packets to their intended receivers; in other words, packet loss will closely approximate the basic packet error rate of the transmission medium.</li>
<li>
Transmission delay for a very high percentage of the delivered packets will not greatly exceed the minimum transit delay experienced by any successfully delivered packet. </li>
</ul>
<p>
&nbsp;</p>
</td>
</tr>
<tr valign=top>
<td width=48%><b>SERVICETYPE_GUARANTEED</b> </td>
<td width=52%>Initiates a queuing algorithm within the service provider (such as GQOS on any Windows NT client) that isolates a given flow from the effects of other flows (as much as possible). This isolation guarantees the ability to transmit data at <b>TokenRate</b> for the duration of the connection; however, if the corresponding end-node transmits data faster than <b>TokenRate</b>, the network may delay or discard the excess traffic. If <b>TokenRate</b> is not exceeded over time, <b>Latency</b> is also guaranteed. <b>SERVICETYPE_GUARANTEED</b> is designed for applications that may require a deterministic quality of service but would not benefit from better service (such as real-time control systems). </td>
</tr>
</table><br>


<p>
Other defined <b>ServiceType</b> values provide information that can be useful for determining the result of errors or getting information about network service availability. Note that nodes throughout the network use and pass information through what becomes the <b>FLOWSPEC</b>, allowing for such communication to occur between network devices such as routers or WAN adapters, and end nodes, either due to timeouts or due to intentional use of PATH and RESV messages. Such <b>ServiceType</b> values include the following: 

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Value</th>
<th align=left width=52%>Meaning</th>
</tr>
<tr valign=top>
<td width=48%><b>SERVICETYPE_NETWORK UNAVAILABLE</b> </td>
<td width=52%>Used by a service provider to indicate a loss of service in the sending or receiving direction. </td>
</tr>
<tr valign=top>
<td width=48%><b>SERVICETYPE_GENERAL_INFORMATION</b> </td>
<td width=52%>Specifies that all service types are supported for a flow. </td>
</tr>
<tr valign=top>
<td width=48%><b>SERVICETYPE_NOCHANGE</b> </td>
<td width=52%>Indicates that the quality of service in the transmission using this <b>ServiceType</b> value is not changed. <b>SERVICETYPE_NOCHANGE</b> can be used when requesting a change in the quality of service for one direction only, or when requesting a change only within the <b>ProviderSpecific</b> parameters of a QOS specification, and not in the <b>SendingFlowspec</b> or <b>ReceivingFlowspec</b>. </td>
</tr>
<tr valign=top>
<td width=48%><b>SERVICETYPE_IMMEDIATE_TRAFFIC_CONTROL</b> </td>
<td width=52%>Can be combined, using bit-wise OR, with one of the other defined <b>ServiceType</b> values to request the service provider to activate traffic control concurrently with provision of the <b>FLOWSPEC</b>, as opposed to sending with best-effort until RESV messages are received.</td>
</tr>
</table><br>

</dd>
<dt>
<b>MaxSduSize</b> </dt>
<dd>
Specifies the maximum packet size permitted or used in the traffic flow. <b>MaxSduSize</b> is expressed in bytes.</dd>
<dt>
<b>MinimumPolicedSize</b> </dt>
<dd>
Specifies the minimum packet size for which the requested quality of service will be provided. <b>MinimumPolicedSize</b> is expressed in bytes.
</dd>
</dl>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 98.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in rsvp.h.</p>
<p>&nbsp;</p></body>
</HTML>
