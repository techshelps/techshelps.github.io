<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Generic Quality of Service Defined</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_gqos_generic_quality_of_service_defined"></a>Generic Quality of Service Defined</h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Microsoft's implementation of quality of service is called <i>Generic</i> Quality of Service (GQOS), so named because its design enables developers to use generic Windows Sockets 2 calls to create QOS-enabled applications.</p>
<p>
With GQOS, developers do not need to consider how the various operating system components interact to achieve quality of service. The components that comprise quality of service implementation are instead abstracted from the QOS application development effort, allowing a single, or generic, QOS interface instead of individual interfaces to each QOS component. This provides a generic interface for the developer, and also provides a mechanism by which new QOS components (perhaps with added functionality) can be added, without the need to completely rewrite existing QOS applications.</p>
<p>&nbsp;</p></body>
</HTML>
