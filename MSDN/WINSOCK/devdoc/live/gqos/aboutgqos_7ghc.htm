<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>802.1p</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_gqos_802.1p"></a>802.1p</h3>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Responsibility for Quality of Service provisions on the local segment, and avoidance of the "all packets are treated equally" issue, falls onto the hub or switch servicing the segment. At such a level, the issue of differentiating between network packets, and perhaps treating them differently, must fall into the realm of the media access control (MAC) header. The MAC header (the lower half of Layer 2 in the ISO OSI Model) is the only part of a packet that hubs or switches investigate in their scope of work.</p>
<p>
802.1p provides prioritization of packets traversing a subnet by the setting of a three-bit value in the MAC header. Thus, when the local segment becomes congested and the hub/switch workload results in the delay (or dropping) of packets, those packets with flags that correspond to higher priorities will receive preferential treatment, and will be serviced before packets with lower priorities.</p>
<p>
Note that implementing 802.1p for QOS requires an 802.1p-aware network interface card, an 802.1p-aware device driver, and an 802.1p-aware switch.</p>
<p>&nbsp;</p></body>
</HTML>
