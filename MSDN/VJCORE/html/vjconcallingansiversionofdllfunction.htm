<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Calling the ANSI Version of a DLL Function</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vjconcallingansiversionofdllfunction"></a>Calling the ANSI Version of a DLL Function</h1>
<p>
By default, the Microsoft VM assumes that the ANSI version of the MessageBox function is the one that is needed. If you import the MessageBox function using @dll.import (without a modifier) as follows:</p>
<pre><code>/** @dll.import("USER32") */
  static native int MessageBox(int hwnd, String text, 
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String title, int style);
</code></pre>
<p>
The Microsoft VM will go through the following steps:
<ol>
<li>
The strings "text" and "title" are converted to ANSI null-terminated strings.<br><br></li>
<li>
The VM attempts to find an export named MessageBox in USER32.DLL.<br><br></li>
<li>
This attempt fails. The VM then appends an "A" onto the name and looks for an export named MessageBoxA.<br><br></li>
<li>
This attempt succeeds, and the VM invokes the MessageBoxA function.</li>
</ol>
</BODY>
</HTML>
