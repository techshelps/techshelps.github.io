<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Syntax for @dll.struct</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vjconsyntaxfordll.struct"></a>Syntax for @dll.struct</h1>
<p>
The @dll.struct directive is placed just above the class declaration. The syntax of @dll.struct is:</p>
<pre><code>&nbsp;&nbsp;/**@dll.struct(&lt;<i>LinkTypeModifier</i>&gt;,&lt;pack=<i>n</i>&gt;)*/
  ...class declaration...;
</code></pre>
<p>
<i>LinkTypeModifier</i> tells the compiler whether fields of type String and char represent ANSI or Unicode characters in native format. <i>LinkTypeModifier</i> can be <i>ansi</i>, <i>unicode</i>, or <i>auto</i>. If you do not specify <i>LinkTypeModifier</i>, <i>ansi</i> is used by default. See <a href="vjconhowvmchoosesbetweenansiunicode.htm">How the VM Chooses Between ANSI and Unicode</a> to help you learn more about the values to use for <i>LinkTypeModifier</i>.</p>
<p>
You can also specify <i>pack=n</i> to tell the compiler to set the packing size of the structure to either 1, 2, 4, or 8, depending on the value you specify for <i>n</i>. If you omit the <i>pack=n</i> modifier, the packing size is set to 8 by default. See <a href="vjconstructurepacking.htm">Structure Packing</a> for more information on setting the packing size. </p>
<p>
Within the class declaration, you need to supply fields whose Java types map to the types of the fields in the native structure, in the order they occur in the native structure. See <a href="vjconcorrespondencebetweentypesinsidestructures.htm">Correspondence Between Types Inside Structures</a> for information about choosing the data types of the fields.</p>
<p>
The following table describes the syntax for several situations in which you might use the @dll.struct directive.</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=33%><b>Situation</b></td>
<td class=label width=33%><b>Required Syntax</b></td>
<td class=label width=34%><b>Explanation</b></td>
</tr>
<tr valign=top>
<td width=33%>Declare a structure</td>
<td width=33%><pre><code>/**@dll.struct()*/</code></pre>
</td>
<td width=34%>When you do not specify <i>LinkTypeModifier</i>, char or String fields are assumed to represent ANSI characters.</td>
</tr>
<tr valign=top>
<td width=33%>Set a structure's packing size</td>
<td width=33%><pre><code>/**@dll.struct(pack=n)*/</code></pre>
</td>
<td width=34%><i>n</i> can be 1,2,4, or 8.</td>
</tr>
<tr valign=top>
<td width=33%>Declare a structure that has a field of type char</td>
<td width=33%><pre><code>/**@dll.struct(ansi)*/</code></pre>
</td>
<td width=34%>The character field represents an ANSI character.</td>
</tr>
<tr valign=top>
<td width=33%>Declare a structure with a field of type string and set the packing size</td>
<td width=33%><pre><code>/**@dll.struct(unicode,pack=n)*/</code></pre>
</td>
<td width=34%>The String fields will be in Unicode format, and the packing size is set to 1,2,4, or 8, depending on the value of <i>n</i>.</td>
</tr>
</table><br>
</BODY>
</HTML>
