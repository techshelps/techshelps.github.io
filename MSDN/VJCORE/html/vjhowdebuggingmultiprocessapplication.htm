<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Debugging a Multi-Process Application</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vjhowdebuggingmultiprocessapplication"></a>Debugging a Multi-Process Application</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vjhowDebuggingMultiProcessApplication_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vjhowDebuggingMultiProcessApplication_T">
</object></p>
<p>
A process is a collection of virtual memory space, code, data, and system resources, while a thread is code that is to be serially executed within a process. A processor executes threads, not processes, so each 32-bit application has at least one process and one thread. Prior to the introduction of multiple threads of execution, applications were all designed to run on a single thread of execution. Processes communicate with one another through messages, using RPC to pass information between processes. There is no difference to the caller in a call coming from a process on a remote machine, and a call from another process on the same machine.</p>
<p>
When you are debugging an application that requires more than one process to run, you may want to watch activity across all processes. The following procedure shows you how to select a different process when your are debugging your application.</p>
<p class=label>
<b>To select a process from the Threads debug window</b>
<ol>
<li>
<a href="vjhowdisplayingthreadsdebugwindow.htm">Open the Threads debug window</a>.<br><br></li>
<li>
From the drop-down list box at the top of the <b>Threads</b> window, select the process you want to observe.</li>
</ol>
<p>
Once you have selected a process to debug see <a href="vjhowbasicdebuggingprocedures.htm">Basic Debugging Procedures</a> for specific procedures for:
<ul type=disc>
<li>
<a href="vjhowdisplayingdebugtoolbar.htm">Displaying the Debug Toolbar</a><br><br></li>
<li>
<a href="vjhowsettingbreakpoints.htm">Setting Breakpoints</a><br><br></li>
<li>
<a href="vjhowexamininginformationwithdebuggerwindows.htm">Examining Information with Debug Windows</a><br><br></li>
<li>
<a href="vjhowsteppingthroughcode.htm">Stepping Through the Code</a><br><br></li>
<li>
<a href="vjhowdebuggingmultithreadedapplication.htm">Debugging a Multithreaded Application</a></li>
</ul>
</BODY>
</HTML>
