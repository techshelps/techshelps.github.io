<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Setting COM Classes</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vjhowsettingcomclasses"></a>Setting COM Classes</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vjhowSettingCOMClasses_C">
</object></p>
<p>
Exposing a class as a COM class is a way of creating powerful and reusable applications. By selecting a class as a COM class, the class and its public methods can be accessed from other applications and programming languages. The COM Classes tab of the &lt;<i>Project</i>&gt; Properties dialog box allows you to specify which public classes in your project should be exposed as COM classes. Once a class has been defined as a COM class, Visual J++ creates a type library for your project's COM classes so that it can be accessed by other applications and registered as a COM object in the system registry.</p>
<p>
The COM Classes tab also allows you to use an existing type library to expose your project's classes or to create class templates for existing type libraries or embedded COM object ActiveX controls. A COM template allows you to use Java source code to implement COM components that are described in type libraries or pre-existing COM components. If you have a type library or COM component that you wish to implement using Java, you can select the type library or COM component from the list and Visual J++ will build the template code in your project. You can then implement each of the methods provided by the templates, and compile to create a COM component.</p>
<p class=label>
<b>To make a class in your project a COM class</b>
<ol>
<li>
On the <b>Project</b> menu, click &lt;<i>Project</i>&gt; <b>Properties</b> (where &lt;<i>Project</i>&gt; is the name of the project that is currently selected in the Project Explorer).<p class=tl>
The &lt;<i>Project</i>&gt; <b>Properties</b> dialog box appears.</P></li>
<li>
Select the <b>COM Classes</b> tab.</li>
</ol>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Any settings made in the <b>COM Classes</b> tab of the &lt;<i>Project</i>&gt; <b>Properties</b> dialog box are not affected by changes in the build configuration settings in the <b>Configuration</b> list.
<ol start=3>
<li>
In the <b>COM Classes</b> tab, click <b>Automatically generate Type Library</b>.<br><br></li>
<li>
Place a check mark next to the class you wish to make a COM class.<br><br></li>
<li>
By default, Visual J++ creates a type library file based on the name of the project. To change this and other information related to the type library, such as the library name, description, help file, and help context ID, click <b>Options</b>. This displays the <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vjdlgTypeLibraryOptionsDialogBox">
</object><a href=JavaScript:alink_2.Click()>Type Library Options</a> dialog box where you can modify the information for the type library.</li>
</ol>
<p class=label>
<b>To use an existing type library</b>
<ol>
<li>
On the <b>COM Classes </b>tab, click <b>Use existing Type Library</b> and then click <b>Select</b>.<p class=tl>
The <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vjdlgCOMTemplatesDialogBox">
</object><a href=JavaScript:alink_3.Click()>COM Templates</a> dialog box appears.</P></li>
<li>
From the list of <b>Installed COM Components</b>, locate and place a check mark next to the type library you wish to use. If the type library is not registered in your system registry, you can click <b>Browse</b> to select the type library you wish to use.<br><br></li>
<li>
Click <b>OK</b>.<p class=tl>
Visual J++ creates a package directory in your project directory and also creates the template classes in the new package directory.</P></li>
</ol>
</BODY>
</HTML>
