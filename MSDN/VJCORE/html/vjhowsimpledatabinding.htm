<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Simple Data Binding</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vjhowsimpledatabinding"></a>Simple Data Binding</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vjhowSimpleDataBinding_C">
</object></p>
<p>
Simple data binding refers to the relationship between a field in a recordset and the property of a WFC component. When a property is bound, data is automatically transferred between the field and the property:
<ul type=disc>
<li>
If the value of the field changes, the new value is propagated to the property.<br><br></li>
<li>
If a new record in the recordset is navigated to, the current field value is propagated to the property.<br><br></li>
<li>
If the value of the property changes and the component supports a <a href="#vjovrpropertychangerequestsnotifications">property change notification</a>, the new value is propagated to the field in the recordset. The recordset is updated when a new record is navigated to.<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;If an attempt is made to update a read-only recordset, the recordset will generate an ADO exception. You can then catch this exception and set the bound property back to its previous value; otherwise, the value of the property and the value of the field will be inconsistent.</p></li>
</ul>

<h3><a name="vjovrbindableproperties"></a>Bindable Properties</h3>
<p>
Simple data binding in WFC is performed by the <a href="vjhowdatabindercomponent.htm">DataBinder</a> component. This component creates and manages the binding between the field and the property. The DataBinder component can bind a property that is accessible through methods matching the following design patterns:</p>
<pre><code>public &lt;<i>PropertyType</i>&gt; get&lt;<i>PropertyName</i>&gt;()
public void set&lt;<i>PropertyName</i>&gt;(&lt;<i>PropertyType</i>&gt;)
</code></pre>
<p>
Note that if a property is also marked with BindableAttribute.YES in the component's ClassInfo, it is enumerated in the Properties window and in the DataBinder component's design page. (You can still bind a property that is not marked as bindable by manually typing the name in the Properties window or design page, or by binding the property programmatically.)</p>

<h3><a name="vjovrpropertychangerequestsnotifications"></a>Property Change Notifications</h3>
<p>
The component of a bound property can provide a &lt;<i>propertyName</i>&gt;Changed event to indicate that the property's value has been changed. When this event is triggered, the DataBinder component marks the binding as dirty. Then when the user navigates to a new record or when the DataBinder.commitChanges method is called in code, the DataBinder component determines which bindings are dirty and updates those bindings on the recordset.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;If your component does not provide a &lt;<i>propertyName</i>&gt;Changed event for a property that is bound through the DataBinder component, the binding is read-only and your component will be disabled. To work around this limitation, you can manage the bindings yourself in code by directly reading from and writing to the recordset.</p>
</BODY>
</HTML>
