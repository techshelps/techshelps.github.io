<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating a COM DLL</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vjhowcreatingcomdll"></a>Creating a COM DLL</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vjhowCreatingCOMDLL_C">
</object></p>
<p>
When a Java class is packaged into a COM DLL, it can be used by any application that supports COM. All public methods defined in your class are exposed through a COM interface.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Before you use the following procedure to create a COM DLL, close any projects that you may already have open. (On the <b>File</b> menu, click <b>Close All</b>.)</p>
<p class=label>
<b>To create a COM DLL</b>
<ol>
<li>
On the <b>File </b>menu, click <b>New Project</b>.<br><br></li>
<li>
On the <b>New</b> tab, expand the <b>Visual J++ Projects</b> folder and click <b>Components</b>. Then select the <b>COM DLL</b> icon.<br><br></li>
<li>
In the <b>Name</b> box, enter a name for your project.<br><br></li>
<li>
In the <b>Location</b> box, enter the path where you want to save your project, or click <b>Browse</b> to navigate to the folder.<br><br></li>
<li>
Click <b>Open</b>. A collapsed view of your project appears in <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vjhowUsingProjectExplorer">
</object><a href=JavaScript:alink_2.Click()>Project Explorer</a>.<br><br></li>
<li>
In Project Explorer, expand the project node. A file with the default name of <b>Class1.java</b> has been added to your project.</li>
</ol>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Renaming this file does not rename the associated class in the source code, and vice versa. You must manually change all instances of the old name. (Note that you can create an <a href="vjhowcreatingemptyproject.htm">empty project</a> and then add a class with the Class template. This two-step process allows you to name the class before it is created; however, the Class template does not provide the basic code framework for a COM DLL.)</p>
<h3>Adding Code in the Text Editor</h3>
<p>
To view the source code that was generated, double-click <b>Class1.java</b> in Project Explorer. The <code>@com.register</code> directive specifies a GUID for your class. You can also add the <code>onCOMRegister</code> method to your class, which is automatically invoked when the DLL is registered; you can use this method to perform additional registration, such as creating any custom registry keys needed by the DLL. </p>
<p>
The following procedure shows how to add a constructor and create a method that displays a message box. </p>
<p class=label>
<b>To add code to your class</b>
<ul type=disc>
<li>
Inside the class declaration, add the following code:<pre><code>public Class1()
{
}

public void showDialog()
{
 &nbsp; com.ms.wfc.ui.MessageBox.show("Hello, World!", "COM");
}
</code></pre>
</li>
</ul>
<p>
For more information about modifying your code in the development environment, see <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vjhowEditingCode">
</object><a href=JavaScript:alink_3.Click()>Editing Code</a>.</p>
<h3>Building the DLL</h3>
<p>
When you build your project, a DLL and type library (named <i>ProjectName</i>.dll and <i>ProjectName</i>.tlb, respectively) are automatically created and registered on your computer. </p>
<p class=label>
<b>To build the DLL</b>
<ul type=disc>
<li>
On the <b>Build</b> menu, click <b>Build</b>. Any compilation errors or messages appear in the <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="csrgnTasklistWindow">
</object><a href=JavaScript:alink_4.Click()>Task List</a>. (Double-clicking an error in the Task List moves the insertion point in the Text editor to the error.) Correct the errors and rebuild your project. </li>
</ul>
<h3>Importing the DLL</h3>
<p>
Once your DLL is registered, it can be used by any application that supports COM. The following procedures show how to import your DLL into another Visual J++ project. This example creates a WFC form that invokes the <code>showDialog</code> method whenever the form is clicked. </p>
<p class=label>
<b>To create a WFC application</b>
<ol>
<li>
Close your DLL project by clicking <b>Close All</b> on the <b>File</b> menu.<br><br></li>
<li>
To create a new project, click <b>New Project</b> on the <b>File</b> menu. On the <b>New</b> tab, expand the <b>Visual J++ Projects</b> folder and click <b>Applications</b>. Then select the <b>Windows Application</b> icon.<br><br></li>
<li>
In the <b>Name</b> box, enter a name for your project. In the <b>Location</b> box, enter the path where you want to save your project, or click <b>Browse</b> to navigate to the folder.<br><br></li>
<li>
Click <b>Open</b>. In Project Explorer, expand the project node. A file with the default name of <b>Form1.java</b> has been added to your project.</li>
</ol>
<p class=label>
<b>To import the DLL</b>
<ol>
<li>
In Project Explorer, right-click the name of the new project. Point to <b>Add</b> on the shortcut menu and then click <b>Add COM Wrapper</b>.<br><br></li>
<li>
The <b>COM Wrappers</b> dialog box lists the type libraries that are registered on your computer. Select the name of the DLL project that you had previously created.<br><br></li>
<li>
Click <b>OK</b>. </li>
</ol>
<p>
The DLL is imported into your new project as a subfolder containing two .java files: Class1.java and Class1_Dispatch.java. Class1 implements the Class1_Dispatch interface, which exposes the public methods of the Class1 object in the DLL. To access these methods, use a Class1_Dispatch object to instantiate Class1. This is demonstrated in the following procedure.</p>
<p class=label>
<b>To modify the WFC form</b>
<ol>
<li>
In Project Explorer, expand the project node. Double-click <b>Form1.java</b> in Project Explorer to open it in the Forms Designer.<br><br></li>
<li>
Click the <b>Events</b> toolbar button in the Properties window to display the events for the form. (If the Properties window is not displayed, click <b>Properties Window</b> on the <b>View</b> menu.)<br><br></li>
<li>
Find the <b>click</b> event and enter <b>formClick</b> for the name of the method that will handle the event. When you press ENTER, the Text editor opens to an empty event handler named <code>formClick</code>. <br><br></li>
<li>
Go to the beginning of the file and add the following <code>import</code> statement:<pre><code>import <i>DLLProjectName</i>.*;</code></pre>
<p class=tl>
where <i>DLLProjectName</i> is the name of the DLL project that you imported.</P></li>
<li>
Inside the Form1 class definition, before the constructor, declare a Class1_Dispatch interface object:<pre><code>Class1_Dispatch c;
</code></pre>
</li>
<li>
In the Form1 constructor after the <code>//TODO</code> comment, instantiate Class1 through the Class1_Dispatch object: <pre><code>c = new Class1();
</code></pre>
</li>
<li>
Inside the defintion of the <code>formClick</code> method, invoke the <code>showDialog</code> method of Class1 through the Class1_Dispatch object:<pre><code>c.showDialog();
</code></pre>
</li>
</ol>
<p class=label>
<b>To build and run the WFC application</b>
<ol>
<li>
On the <b>Build</b> menu, click <b>Build</b>. (If you receive any compilation errors or messages, correct the errors and rebuild your application.) <br><br></li>
<li>
To run the application, click <b>Start</b> on the <b>Debug</b> menu. <br><br></li>
<li>
Click the form. A message box appears that displays "Hello, World!"<br><br></li>
<li>
To close the application, click the Windows Close button located in the upper-right corner of the form.</li>
</ol>
<p>
For more information about creating COM objects, see <object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vjovrBuildingImportingCOMObjects">
</object><a href=JavaScript:alink_5.Click()>Building and Importing COM Objects</a>. For more information about WFC applications, see <a href="vjhowcreatingironwoodapplication.htm">Creating a Windows application with WFC</a>. </p>
</BODY>
</HTML>
