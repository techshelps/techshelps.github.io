<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>A Sample Walkthrough</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vjconasamplewalkthrough"></a>A Sample Walkthrough</h1>
<p>
This section contains a brief overview of a simple Visual J++ application called MyNotepad, which is based on the Windows Notepad application. MyNotepad is a Text editor with a File menu containing New, Open, Save, Save As, and Exit menu items. It covers the most primitive functions of an editor, allowing the user to open a file, edit it, and save it to the same file or to a different file. </p>
<p>
Note that this application is similar to the JPad application generated using the Visual J++ Application Wizard. However, MyNotepad was not constructed using the Application Wizard; it was written specifically to demonstrate a few basic concepts as clearly as possible. After walking through MyNotepad, the code generated by the Application wizard should be much easier to understand, since it uses most of the same principles. </p>
<p>
<img src="vj5bsj1.gif" border=0></p>
<p>
MyNotepad is essentially a single form (MyNotepad.java) with an edit control and a menu. A second form (NewDialog.java) represents the modal dialog box that prompts the user to save when opening a new file or closing the current file. You can find a <a href="vjconcodelistings.htm">complete listing of the code</a> for both these files at the end of this topic.</p>
<p>
This application was designed and coded using the Visual J++ Forms Designer and Text editor. Much of the code was automatically generated by the designer. This walkthrough points out what the Forms Designer does for you, the code automatically generated by the designer to create this application, and a few basic concepts for programming a WFC application. Specifically, it describes:
<ul type=disc>
<li>
<a href="vjconcreatingapplicationusingvisualj.htm">Using the Forms Designer to create the applications forms</a><br><br></li>
<li>
<a href="vjconstartingstoppingapplication.htm">How to start and stop an application</a><br><br></li>
<li>
<a href="vjconanatomyofvisualjformtemplate.htm">The anatomy of a Visual J++ Form template</a><br><br></li>
<li>
<a href="vjconhandlingevents.htm">How to handle events</a><br><br></li>
<li>
<a href="vjconimplementingmodaldialogbox.htm">How to open a modal dialog box and retrieve user results</a><br><br></li>
<li>
<a href="vjconimplementingfiledialogboxesfileio.htm">How to use OpenFileDialog and SaveFileDialog classes to work with files</a><br><br></li>
<li>
<a href="vjconimplementingfiledialogboxesfileio.htm">How to use the File stream class for file input/output (I/O)</a></li>
</ul>
<p>
The Sample Walkthrough ends with:
<ul type=disc>
<li>
<a href="vjconsamplewalkthroughsummary.htm">Sample Walkthrough Summary</a><br><br></li>
<li>
<a href="vjconcodelistings.htm">Code Listings</a></li>
</ul>
</BODY>
</HTML>
