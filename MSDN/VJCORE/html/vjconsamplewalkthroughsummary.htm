<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Sample Walkthrough Summary</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vjconsamplewalkthroughsummary"></a>Sample Walkthrough Summary</h1>
<p>
A brief tutorial such as this cannot hope to cover every concept of a useful application, even one as simple as the MyNotepad application. However, the concepts of event handling, working with dialog boxes, and simple file I/O are common to most applications, and have been the main focus. </p>
<p>
In this walkthrough we haven’t touched on the code in the event handlers for the Save and Save As menu items. However, this code uses the same principles discussed elsewhere, so there should be no surprises when you look at the listings.</p>
<p>
It's noteworthy that besides java.lang, none of the other standard Java packages were used in this application. Instead, packages such as com.ms.wfc.io and com.ms.wfc.ui were used to access the underlying power of the Windows API. This provides immense performance and usability gains when you know that your target environment will be a Win32 operating system. </p>
<p>
Keep in mind the MyNotepad application was written as a demonstration vehicle. To keep it short and to the point, it doesn't provide much error checking or many of the features of Notepad or even JPad. However, with this quick tour completed you should be well on your way to creating your own Windows applications using Visual J++ and WFC.</p>
</BODY>
</HTML>
