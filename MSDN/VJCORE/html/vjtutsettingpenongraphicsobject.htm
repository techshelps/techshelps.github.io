<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Setting the Pen on a Graphics Object</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vjtutsettingpenongraphicsobject"></a>Setting the Pen on a Graphics Object</h1>
<p>
The Pen object itself contains no coloring or drawing capability. It only describes a subset of the capabilities of the GDI. Before you use a Pen to draw on a form, you associate the Pen with a Graphics object using the Graphics object's setPen method:</p>
<pre><code>Graphics g = this.createGraphics();
g.setPen(new Pen(PenStyle.DASH));
</code></pre>
<p>
After you associate a Pen with a Graphics object, all lines drawn within the Graphics object's bounding rectangle are drawn using that pen. In addition, you can call the setPen method any number of times on the same Graphics object.</p>
<p>
The following example demonstrates how the Pen object works with the line-drawing capabilities of the Graphics object. In this example, the Pen styles defined in the Pen object are stored in an array of integers. Within the class's paint event handler, a for loop is used to iterate through this array of pen styles, drawing a single line using each style:</p>
<pre><code>public class Form1 extends Form
{
   
int [] rgStyles = { PenStyle.DASH, PenStyle.DASHDOT, PenStyle.DASHDOTDOT,
                  PenStyle.DOT, PenStyle.INSIDEFRAME, PenStyle.SOLID };</code></pre>
<p>
</p>
<pre><code>   protected void onPaint(PaintEvent e)
   {
      Rectangle rc = this.getClientRect();
      
      rc.y += 10;
      
      for(int i = 0; i &lt; rgStyles.length; i++){
         
         e.graphics.setPen(new Pen(Color.BLACK, i));
         e.graphics.drawLine(new Point(0, rc.y),
                        new Point(rc.width, rc.y));
         
         rc.y += 10;
      }
   }

// Rest of Form1 class...
</code></pre>
</BODY>
</HTML>
