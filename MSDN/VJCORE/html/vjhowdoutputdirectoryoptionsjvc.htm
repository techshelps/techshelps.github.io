<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>/d -- Output Directory Option (JVC)</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vjhowdoutputdirectoryoptionsjvc"></a>/d — Output Directory Option (JVC)</h1>
<p class=label>
<b>Syntax</b></p>
<p>
/d directory </p>
<p>
When compiling .java files, use the <b>/d</b> option to specify an output directory other than the current directory for the .class files. If the directory does not exist, JVC will create it. If this option is not specified, JVC will write the .class files to the directory containing the corresponding .java files.</p>
<p class=label>
<b>Example</b></p>
<p>
The following command compiles the <code>myClass.java</code> file into a <code>myClass.class</code> file and writes this file into the <code>classdir</code> directory:</p>
<pre><code>JVC /d c:\classdir myClass.java
</code></pre>
<p class=indent>
<B><b>CAUTION</b></B>&nbsp;&nbsp;&nbsp;The virtual machine for Java depends upon specific directory locations for .java classes based on the names of the Java packages that contain the .class files. Using this option could cause execution to fail if the VM can’t find the classes it needs to run a Java program. For an explanation of how the VM searches for .class files, see <a href="vjhowclasspathenvironmentvariable.htm">CLASSPATH Environment Variable</a>.</p>
</BODY>
</HTML>
