<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Embedding a Callback Inside a Structure</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h2><a name="vjconembeddingcallbackinsidestructure"></a>Embedding a Callback Inside a Structure</h2>
<p>
To embed a callback inside a structure, you can first call the com.ms.dll.Root.alloc method to wrap the callback in a root handle. Then pass the root handle to the DllLib.addrOf method to obtain the actual (native) address of the callback. Then, store this address as an integer. </p>
<p>
For example, the WNDCLASS structure can be declared in Java as:</p>
<pre><code>/** @dll.struct() */
  class WNDCLASS {
 &nbsp;&nbsp; int style;
 &nbsp;&nbsp; int   lpfnWndProc; // CALLBACK
 &nbsp;&nbsp; ... /* &lt;other fields deleted for brevity&gt; */
  } 
</code></pre>
<p>
Let's assume you have extended Callback as follows:</p>
<pre><code>class WNDPROC extends Callback
  {
 &nbsp;&nbsp; public int callback(int hwnd, int msg, int wparam, int lparam)
 &nbsp;&nbsp; {   
   ...
 &nbsp;&nbsp; }
  } 
</code></pre>
<p>
To store a pointer to the callback inside the WNDCLASS object, use the following sequence:</p>
<pre><code>import com.ms.dll.*;
  WNDCLASS wc = new WNDCLASS();
  int callbackroot = Root.alloc(new WNDPROC());
  wc.lpfnWndProc = DllLib.addrOf(callbackroot);
</code></pre>
</BODY>
</HTML>
