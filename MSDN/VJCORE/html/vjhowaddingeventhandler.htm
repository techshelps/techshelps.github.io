<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Adding an Event Handler</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vjhowaddingeventhandler"></a>Adding an Event Handler</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vjhowAddingEventHandler_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vjhowAddingEventHandler_T">
</object></p>
<p>
You can use the Forms Designer to create <i>event handlers</i>. An event handler is a routine in your code that determines which actions to perform when an event occurs, such as the user's clicking a button. </p>
<p>
For example, the event handler for the mouseDown event provides a mouseEvent object that allows you to determine which mouse button was pressed, where the mouse was positioned on the form, and which keys on the keyboard were pressed during the click.</p>
<p>
You can add an event handler using the events view in the Properties window. A handler for the default event can also be added by double-clicking. Moreover, you can assign an existing handler to the events of other controls if the signatures of the events are the same.</p>
<p class=label>
<b>To add an event handler using the events view of the Properties window </b>
<ol>
<li>
Click the control (such as a button control) or form you want an event handler created for.<br><br></li>
<li>
In the Properties window, click the events view button (indicated by a thunderbolt symbol). <br><br></li>
<li>
In the list of available events, click an event (for example, <b>click</b>). <br><br></li>
<li>
In the box to the right of the event name, type the name of the handler (for example, MyButton_click), and press ENTER. <p class=tl>
A code template is generated in your code similar to the following:</P><pre><code>private void MyButton_click(Object sender, Event e) {

}</code></pre>
<p class=tl>
In this example, <i>sender</i> is the source of the event and <i>e</i> is an Event object that provides information about the event.</P></li>
</ol>
<p class=label>
<b>To add a handler for the default event</b>
<ul type=disc>
<li>
Double-click a form or control to generate a handler method for the default event of the form or control. <p class=tl>
-or-</P></li>
<li>
In the events view in the Properties window, double-click the event to create the handler for the default event.</li>
</ul>
<p class=label>
<b>To use to the same handler for events shared by multiple controls</b>
<ol>
<li>
In the events view in the Properties window, click an event for the first control. <br><br></li>
<li>
In the box to the right of the event name, type the name of the handler and press ENTER.<br><br></li>
<li>
On the form, select the second control.<br><br></li>
<li>
In the Properties window, click the same event for the second control.<br><br></li>
<li>
Click the drop-down arrow to view a list of existing handlers for this type of event.<br><br></li>
<li>
Select the name of the event handler. Only the existing handler is used. No new templates are created in the code.</li>
</ol>
</BODY>
</HTML>
