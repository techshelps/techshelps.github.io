<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Threading in WFC Controls</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h2><a name="vjctlthreadinginwfccontrols"></a>Threading in WFC Controls</h2>
<p>
The Java language supports multithreading through a set of classes and APIs to control thread creation and execution. Win32 windows are inherently apartment threaded. That is, they can be created on any thread, but they cannot switch threads, and all function calls to that window must occur on its main thread. WFC controls (anything derived from com.ms.wfc.ui.Control) require this threading model, while most WFC components are free threaded.</p>
<p>
The Control class provides two functions, invoke and invokeAsync, that will marshal any delegate onto the control’s main window thread and execute it. If you attempt to call a function on a control that manipulates the underlying Win32 HWND, it will get marshaled to the correct thread by Windows. By calling the invoke function directly, you can batch up calls to the HWND and limit the number of expensive cross thread marshals that occur.</p>
<p class=indent>
<b>Note</b>&nbsp;&nbsp;&nbsp;The Windows message loop is tied to the thread that the HWND was created on. If the control's HWND is recreated on a new thread, the new thread won't receive messages any more. For more details, see <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vjconUsingJavaThreadsWithWFC">
</object><a href=JavaScript:alink_1.Click()>Using Java Threads with WFC</a>.</p>
<p>
Although most WFC components support free threading, most of the method calls are not synchronized. Synchronization is very expensive and should be done only when needed. For example, by synchronizing on the object and calling multiple methods, you will get substantial performance benefits.</p>
</BODY>
</HTML>
