<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating Statements with Word Completion</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h2><a name="vjhowcreatingstatementswithwordcompletion"></a>Creating Statements with Word Completion</h2>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vjhowCreatingStatementsWithWordCompletion_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vjhowCreatingStatementsWithWordCompletion_T">
</object></p>
<p>
For the examples in this topic, Word Completion provides visual clues when you're typing the name of <code>String</code> and <code>System</code> classes, and creating a new String object. Word Completion is available for any Visual J++ project. </p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The code examples in the following scenario were created with a Visual J++ Console Application project. If you would like to create a Console Application project to complete this scenario, see <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vjhowCreatingJavaConsoleApplication">
</object><a href=JavaScript:alink_3.Click()>Creating a Console Application </a> and follow the steps to create and open the project before proceeding.</p>
<p class=label>
<b>To select an item from a list provided by the Word Completion feature</b>
<ol>
<li>
On the <b>View</b> menu, click <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vjhowUsingProjectExplorer">
</object><a href=JavaScript:alink_4.Click()>Project Explorer</a>") to open Project Explorer.<br><br></li>
<li>
In <b>Project Explorer</b> click the plus ("+") sign to the left of your project's name to expand your project.<br><br></li>
<li>
Highlight the .java file containing your project's <code>main()</code> method (Class1.java by default) and select <b>View Code</b> from the shortcut menu.<p class=tl>
Visual J++ opens the Text editor and loads your .java file. The file is now ready for editing.</P></li>
<li>
To get Word Completion assistance for the <code>String </code>class, type an "S" between the braces of the application's <code>main()</code> method and leave the cursor to the right of this letter.<p class=atl>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;Notice the red squiggly line drawn under the letter. Since an "S" has no significance within the context of this program, IntelliSense gives a visual clue for the syntax error. For more information about visual editing clues, see <a href="vjhowfindingerrorswithdynamicsyntaxchecking.htm">Finding Errors with Dynamic Syntax Checking</a>.</p></li>
<li>
On the <b>Edit</b> menu, click <b>Complete Word</b> to display a list box of classes and other elements recognized by IntelliSense.<p class=atl>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;You can use the keyboard shortcut, CTRL+SPACE, instead of selecting the <b>Complete Word</b> option on the <b>Edit</b> menu, to display this list box.</p></li>
<li>
With the list box still displayed, type a "T" after the "S" of the statement you're building in your .java file.<p class=tl>
Statement Completion now selects <b>StackOverflowError</b> in its list — the first element that starts with an "ST" in the context of this program.</P></li>
<li>
Now type an "R" after the "ST" in your statement and Statement Completion moves the highlight bar to <b>String</b> in the list box.<br><br></li>
<li>
Press the <b>Tab</b> bar to insert "<code>String</code>" into the statement you're building.<p class=tl>
Pressing the <b>Tab</b> bar or any other non-alphanumeric key, such as a period or opening parenthesis, places the selected item into a statement at the location of the insertion point.</P><p class=atl>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;Instead of typing the letters until Statement Completion finds the element you need, you can use the up and down arrows to highlight your selection.</p></li>
</ol>
<p class=label>
<b>To select a class name after the <code>new</code> operator</b>
<ol>
<li>
Continue to build the statement by typing the following code after "<code>String</code>":<pre><code>[String] myStr = new 
</code></pre>
</li>
<li>
Type a space after "<code>new</code>" and Statement Completion automatically displays a list of class names available within the scope of your program.<br><br></li>
<li>
Type "STR", or enough letters of "String" to select the <b>String</b> item from the list.<br><br></li>
<li>
Press <b>Tab</b> and "<code>String</code>" is inserted after "<code>new</code>".<p class=tl>
Your statement should look like this:</P><pre><code>String myStr = new String
</code></pre>
</li>
</ol>
<p>
To continue building the statement that displays a line of text, you'll need a constructor for the new String object. See <a href="vjhowselectingoverloadedmethod.htm">Selecting an Overloaded Method</a> for a procedure that selects a <code>String</code> constructor with Statement Completion's <b>Parameter Info</b> option.</p>
<p>
If you know how to partially spell the name of the class or item, use the following procedure to speed up the process of typing and selecting the correct spelling and capitalization.</p>
<p class=label>
<b>To finish typing a word using the Word Completion feature</b>
<ol>
<li>
In your .java file, move the cursor to a new line and type "SY".<br><br></li>
<li>
Press CTRL+SPACE (the Word Completion keyboard shortcut).<p class=tl>
Statement Completion completes the word, "<code>System</code>", and inserts it into your code since it is the only item that begins with an "SY". If more than one item starts with these letters, Statement Completion displays a list box.</P></li>
</ol>
</BODY>
</HTML>
