<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Rendering Images Transparently</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vjconrenderingimagestransparently"></a>Rendering Images Transparently</h1>
<p>
The Bitmap object supports the transparent rendering of one or more colors in an image.</p>
<p>
If you need to render a single color transparently, use the setTransparentColor and setTransparent methods. The setTransparentColor method takes a Color object parameter that specifies the bitmap color to be rendered transparently. The setTransparent method takes a boolean value that specifies whether the designated transparent color should be rendered or not.</p>
<p>
For example, the following code fragment designates black as the transparent color. When the Graphics object’s drawImage method is called to draw the image, the black pixels in the image are not rendered:</p>
<pre><code>   protected void onPaint(PaintEvent e)
   {

      Bitmap bmp = new Bitmap(“c:\\MyImage.bmp”);
      Bmp.setTransparentColor(Color.BLACK);
      Bmp.setTransparent(false);
      e.graphics.drawImage(bmp, new Point(0,0));
      
   }
</code></pre>
<p>
You can also achieve transparency by creating a Bitmap object based on two bitmasks, one of which is color and the other monochrome. In the color mask, each part of the bitmap to be drawn transparently should be black. In the monochrome mask, each part to be drawn transparently should be white. </p>
</BODY>
</HTML>
