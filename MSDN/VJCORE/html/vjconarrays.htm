<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Arrays</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vjconarrays"></a>Arrays</h1>
<p>
J/Direct automatically handles arrays of scalars. The following Java array types translate directly into native pointer types:</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=25%><b>Java </b></td>
<td class=label width=25%><b>Native</b></td>
<td class=label width=50%><b># bytes per element</b></td>
</tr>
<tr valign=top>
<td width=25%>byte[]</td>
<td width=25%>BYTE*</td>
<td width=50%>1</td>
</tr>
<tr valign=top>
<td width=25%>short[]</td>
<td width=25%>SHORT*</td>
<td width=50%>2</td>
</tr>
<tr valign=top>
<td width=25%>int[]</td>
<td width=25%>DWORD*</td>
<td width=50%>4</td>
</tr>
<tr valign=top>
<td width=25%>float[]</td>
<td width=25%>FLOAT*</td>
<td width=50%>4</td>
</tr>
<tr valign=top>
<td width=25%>double[]</td>
<td width=25%>DOUBLE*</td>
<td width=50%>8</td>
</tr>
<tr valign=top>
<td width=25%>long[]</td>
<td width=25%>__int64*</td>
<td width=50%>8</td>
</tr>
<tr valign=top>
<td width=25%>boolean[]</td>
<td width=25%>BOOL*</td>
<td width=50%>4</td>
</tr>
</table><br>
<p>
The char[] array type maps to CHAR* unless the <i>unicode</i> modifier is in effect, in which case it maps to WCHAR*. </p>
<p>
All scalar array parameters can be modified by the caller (such as [in, out] parameters). </p>
<p>
Array types cannot be used as return types. There is no support for arrays of objects or strings. </p>
<p>
Typically, this facility is used by OLE functions to return values. (OLE functions reserve the "function" return value to return the HRESULT error code.) See <a href="vjconinvokingoleapifunctions.htm">Invoking OLE API Functions</a> to learn how to obtain the return value for OLE functions.</p>
</BODY>
</HTML>
