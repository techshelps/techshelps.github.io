<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Aliasing (Method Renaming)</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vjconaliasing(methodrenaming)"></a>Aliasing (Method Renaming)</h1>
<p>
Sometimes you want to use a name for the Java method that is different from the name that the DLL uses when it exports the function. For example, you might want to have the Java name start with a lowercase letter so that it conforms to Java naming conventions. To do so, just use the @dll.import directive with the <i>entrypoint</i> modifier as in the following example:</p>
<pre><code>/** @dll.import("USER32", entrypoint="GetSysColor") */
  static native int getSysColor(int nIndex);
</code></pre>
<p>
You do not need to use aliasing to perform the ANSI/Unicode suffixing done by the Win32 APIs. The Microsoft VM automatically takes care of this (see <a href="vjconhowvmchoosesbetweenansiunicode.htm">How the VM Chooses Between ANSI and Unicode</a>). Aliasing is also unnecessary when accessing functions that have been exported by a .def file. Such names are typically exported using "stdcall mangling." That is, a method such as the following sample method would be renamed to _sample@8 (where 8 denotes the number of parameter bytes accepted by the function):</p>
<pre><code>extern "C"
  __declspec(dllexport)
  VOID sample(int x, int y){
 &nbsp;&nbsp; ...
  }
</code></pre>
<p>
J/Direct automatically binds to stdcall-mangled names without an explicit entrypoint. </p>
<p>
The Microsoft VM automatically provides aliases for the following KERNEL32 API functions.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=34%><b>Kernel32 Function</b></td>
<td class=label width=66%><b>Alias</b></td>
</tr>
<tr valign=top>
<td width=34%>CopyMemory</td>
<td width=66%>RtlMoveMemory</td>
</tr>
<tr valign=top>
<td width=34%>MoveMemory</td>
<td width=66%>RtlMoveMemory</td>
</tr>
<tr valign=top>
<td width=34%>FillMemory</td>
<td width=66%>RtlFillMemory</td>
</tr>
<tr valign=top>
<td width=34%>ZeroMemory</td>
<td width=66%>RtlZeroMemory</td>
</tr>
</table><br>
</BODY>
</HTML>
