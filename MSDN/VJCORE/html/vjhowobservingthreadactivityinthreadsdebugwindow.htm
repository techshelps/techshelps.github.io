<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Observing Thread Activity in the Threads Debug Window</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h3><a name="vjhowobservingthreadactivityinthreadsdebugwindow"></a>Observing Thread Activity in the Threads Debug Window</h3>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vjhowObservingThreadActivityInThreadsDebugWindow_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vjhowObservingThreadActivityInThreadsDebugWindow_T">
</object></p>
<p>
The application example for this procedure creates two threads in the <code>main()</code> method and displays output to a <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vjhowViewingApplicationswithJVIEW">
</object><a href=JavaScript:alink_3.Click()>JVIEW</a> console window. This procedure refers to code created in the <a href="vjhowmultithreadedbeveragesapplication.htm">Multithreaded Beverages Application</a>. If you’d like to create this project to complete the following exercises, do so now. You may also use the following procedure to observe thread activity of any multithreaded application. </p>
<p class=label>
<b>To observe thread activity in the Threads debug window</b>
<ol>
<li>
<a href="vjhowsettingbreakpointbeforestartingdebugger.htm">Set a breakpoint</a> in the Coffee class on the following statement:</li>
</ol>
<pre><code>         System.out.println("I Like Coffee" + " " + i);</code></pre>
<ol>
<li>
Set a breakpoint in the Tea class on the following statement:</li>
</ol>
<pre><code>         System.out.println("I Like Tea" + " " + i);
</code></pre>
<ol>
<li>
In Class1’s <code>main()</code> method, place the insertion point on the following statement:</li>
</ol>
<pre><code>      Coffee m_Coffee = new Coffee();&nbsp; //creates Coffee object
</code></pre>
<ol>
<li>
Click the right mouse button and select Run To Cursor from the shortcut menu.<br><br></li>
<li>
When your application enters break mode, <a href="vjhowviewinginformationinthreadswindow.htm">open the Threads debug window</a>.<p class=tl>
Notice the <code>main()</code> thread is currently the only thread running in this window. </P></li>
<li>
Press F5 to run to the breakpoint set in the Coffee class.<p class=tl>
More information appears in the <b>Threads</b> debug window to identify the names, location in the code, and suspension status for the application’s three threads, <b>main</b>, <b>Thread-0</b>, and <b>Thread-1</b>. The yellow arrow indicates which thread is currently running, in this case it is <b>Thread-0</b> of <code>Coffee.run()</code>. Notice the <code>main()</code>method's thread is no longer running, because it has passed control to the threads of the Coffee and Tea classes.</P><p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Although this scenario suggests the Coffee thread will be the first thread to run, this may not always be the case. The operating system will ultimately determine the processing order of the threads in a given application unless there are statements in the code to specify conditions under which to create and run a new thread. </p></li>
<li>
Press F11 to execute the current statement.<br><br></li>
<li>
Switch to <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vjhowViewingApplicationswithJVIEW">
</object><a href=JavaScript:alink_4.Click()>JVIEW’s</a> console window and the following output appears: <p class=tl>
<code>I Like Coffee 0</code></P></li>
<li>
Press F5 to run to the breakpoint set in the Tea class.<br><br></li>
<li>
Press F11 to execute the current statement and the following output appears in JVIEW’s console window:<p class=tl>
<code>I Like Tea 0</code></P></li>
<li>
Continue pressing F5 and F11 alternately until one of the following output statements appears in JVIEW’s console window:<p class=tl>
<code>I Like Coffee 9</code></P><p class=tl>
–or–</P><p class=tl>
<code>I Like Tea 9</code></P><p class=tl>
Notice when a thread is destroyed information about that thread no longer appears in the Threads debug window.</P></li>
</ol>
<p>
In the process of observing each of your application’s threads, you may observe that a particular thread’s behavior is not what you had expected. To isolate a given thread by suspending other threads, see <a href="vjhowsuspendingresumingthreadsfromthreadsdebugwindow.htm">Suspending and Resuming Threads from the Threads Debug Window</a>.</p>
</BODY>
</HTML>
