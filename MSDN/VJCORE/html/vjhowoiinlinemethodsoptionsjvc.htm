<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>/O:I -- Inline Methods Optimization Option (JVC)</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vjhowoiinlinemethodsoptionsjvc"></a>/O:I — Inline Methods Optimization Option (JVC)</h1>
<p class=label>
<b>Syntax</b></p>
<p>
/O:I </p>
<p>
The <b>/O:I</b> option tells the compiler it may inline methods to produce more efficient code. Code that is inlined does not have the overhead associated with a method call. Since there is no mechanism in the Java language to request inlining of methods, use this option when you want the compiler to inline your code.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;To disable this option, use a dash (–) after the option on the command line.</p>
<p class=label>
<b>Example</b></p>
<p>
The following example evaluates the source code in the <code>myClass.java</code> file and inlines methods where possible. The resulting <code>myClass.class</code> file contains the optimized code:</p>
<pre><code>JVC /O:I myClass.java
 </code></pre>
</BODY>
</HTML>
