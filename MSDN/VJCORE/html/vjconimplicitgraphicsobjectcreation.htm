<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Implicit Graphics Object Creation</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vjconimplicitgraphicsobjectcreation"></a>Implicit Graphics Object Creation</h1>
<p>
The Bitmap and Metafile objects support implicit Graphics object creation through their getGraphics method. In the following code fragment, the Bitmap object’s getGraphics method is used to create a Graphics object that can be used to draw to the bitmap’s surface:</p>
<pre><code>Bitmap bmp = new Bitmap("c:\\MyImage.bmp");
Graphics gr = bmp.getGraphics();
</code></pre>
<p>
The first time that you call getGraphics through an object, the object creates a new Graphics object instance and returns it. Subsequent calls to getGraphics through the same object results in the return of the object created through the original call.</p>
<p>
Additionally, when you call drawing methods through a Graphics object created through an object’s getGraphics method, the methods apply to the object through which they were created. For example, the x and y coordinates (0,0) specified in the call to drawText above is relative to the bitmap object, not to the control on which the bitmap is rendered.</p>
</BODY>
</HTML>
