<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Graphical Services</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vjovrgraphicalservices"></a>Graphical Services</h1>
<p>
The display of graphical objects in Microsoft Windows occurs through the graphics device interface (GDI), a device-independent graphics output model that processes graphical function calls from a Windows-based application and passes those calls to the appropriate device driver. The driver performs the hardware-specific functions that generate output. By acting as a buffer between applications and output devices, the GDI presents a device-independent view for the application while interacting in a device-dependent format with the device.</p>
<p>
Application developers use the functionality of the GDI to display images, to draw controls, shapes, and text, and to create and use pens, brushes, and fonts. The Windows Foundation Classes (WFC) Graphics object coordinates with other WFC objects, such as the Pen, Font, and Brush objects, to encapsulate these capabilities as Java-based objects.</p>
<p>
In the WFC environment, graphical output occurs through the Graphics object. After creating or retrieving a Graphics object, you associate other graphics-based objects, such as fonts, pens, and brushes with the object, and then use the object's numerous drawing methods to render output to the display. For example, to draw lines with a specific appearance, you use the Graphics object's setPen method to specify the pen that the object will use for drawing, then use the object’s drawLine method to render the lines. You can modify these associations as often as you want.</p>
<p>
For more information, see:
<ul type=disc>
<li>
<a href="vjtutcreatinggraphicsobject.htm">Creating a Graphics Object</a><br><br></li>
<li>
<a href="vjconretrievinggraphicsobject.htm">Retrieving a Graphics Object</a><br><br></li>
<li>
<a href="vjtutgraphicsobjectscope.htm">Graphics Object Scope</a><br><br></li>
<li>
<a href="vjtutmaintainingboundingrectangle.htm">Maintaining the Bounding Rectangle</a><br><br></li>
<li>
<a href="vjtutperforminghandlebasedoperations.htm">Performing Handle-Based Operations</a><br><br></li>
<li>
<a href="vjconthegraphicsobjectcoordinatesystem.htm">The Graphics Object Coordinate System</a><br><br></li>
<li>
<a href="vjtutdrawingtext.htm">Drawing Text</a><br><br></li>
<li>
<a href="vjtutusingfontobject.htm">Using the Font Object</a><br><br></li>
<li>
<a href="vjtutusingpens.htm">Using Pens</a><br><br></li>
<li>
<a href="vjtutdrawingbitmaps.htm">Drawing Bitmaps</a><br><br></li>
<li>
<a href="vjtutrasteroperations.htm">Raster Operations</a><br><br></li>
<li>
<a href="vjtutdrawingshapes.htm">Drawing Shapes</a></li>
</ul>
</BODY>
</HTML>
