<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Linking by Ordinal</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vjconlinkingbyordinal"></a>Linking by Ordinal</h1>
<p>
Some DLLs export functions by ordinal (16-bit integer) rather than by name. To call such DLLs, you will need to use a method-level @dll.import directive to specify the ordinal. The syntax for ordinal linking is:</p>
<pre><code>/** @dll.import("Libname", entrypoint="#ordinal") */ 
</code></pre>
<p>
Note that <i>ordinal</i> is specified in decimal. </p>
<p>
For example, to link a function exported as ordinal 82 in DLL "MyDll.DLL", you would write the following code:</p>
<pre><code>/** @dll.import("MyDll", entrypoint="#82") */
  public static native void MySample();
</code></pre>
</BODY>
</HTML>
