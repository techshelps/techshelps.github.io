<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Passing GUIDs (and IIDs and CLSIDs)</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vjconpassingguids(andiidsclsids)"></a>Passing GUIDs (and IIDs and CLSIDs)</h1>
<p>
The system class com.ms.com._Guid is used to represent GUIDs. Passing a _Guid object as a parameter passes a pointer to a GUID to the native function. Declaring a return type of _Guid causes the Microsoft VM to pass a pointer to an uninitialized GUID that the function fills in (in <i>ole</i> mode only). </p>
<p>
For example, OLE32 exports the functions CLSIDFromProgID and ProgIDFromCLSID to map between CLSIDs and the human-readable names used by the Visual Basic function CreateObject. </p>
<p>
These methods have the following prototypes:</p>
<pre><code>HRESULT CLSIDFromProgID(LPCOLESTR szProgID, LPCLSID pclsid);
HRESULT ProgIDFromCLSID(REFCLSID clsid, LPOLESTR *lpszProgId);
</code></pre>
<p>
In Java, these methods are declared in the following way:</p>
<pre><code>import com.ms.com._Guid;
  class OLE {
 &nbsp;&nbsp; /** @dll.import("OLE32", ole) */
 &nbsp;&nbsp; public static native _Guid CLSIDFromProgID(String szProgID);
    &nbsp;&nbsp; 
 &nbsp;&nbsp; /** @dll.import("OLE32", ole) */
 &nbsp;&nbsp; public static native String ProgIDFromCLSID(_Guid clsid);
  } 
</code></pre>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Note that com.ms.com._Guid supercedes com.ms.com.Guid (with no underscore).</p>
</BODY>
</HTML>
