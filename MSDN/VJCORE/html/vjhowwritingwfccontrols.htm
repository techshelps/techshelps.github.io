<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Writing WFC Controls</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vjhowwritingwfccontrols"></a>Writing WFC Controls</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vjhowWritingWFCControls_C">
</object></p>
<p>
WFC provides a rich framework to develop custom controls. The following figure shows the basic class hierarchy of visual controls in WFC.</p>
<p>
<img src="vj5jhu1.gif" border=0></p>
<p>
The com.ms.wfc.ui.Control class is the base for all controls, and provides most of the functionality for your control. </p>
<p class=indent>
<b>Note&nbsp;&nbsp;&nbsp;</b>For composite controls&nbsp;— controls created by combining other controls and business logic&nbsp;— the primary WFC package you use is com.ms.wfc.ui. You can use visual tools to design composite controls. For more information, see <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vjhowCreatingCompositeWFCControls">
</object><a href=JavaScript:alink_2.Click()>Creating Composite WFC Controls</a>.</p>
<p>
When you write a control, you extend the base Control class, and then add the members you need. (Composite controls are created in the visual designer by extending UserControl.) You can also override members inherited from the Control class as needed. The following topics provide information about creating a control:
<ul type=disc>
<li>
<a href="vjctlcreatingbasiccontrol.htm">Creating a Basic Control</a>&nbsp;&nbsp;&nbsp;How to subclass the Control class and expose your control in the design-time environment.<br><br></li>
<li>
<a href="vjhowdefiningcontrolproperties.htm">Defining Control Properties</a>&nbsp;&nbsp;&nbsp;How to define and expose properties for your control, and how to specify custom editors for property values.<br><br></li>
<li>
<a href="vjhowworkingwithcontrolevents.htm">Working with Control Events</a>&nbsp;&nbsp;&nbsp;How to create custom events for your control, and how to capture and use standard events.<br><br></li>
<li>
<a href="vjhowcustomizingcontrol.htm">Customizing a Control</a>&nbsp;&nbsp;&nbsp;Managing the control's visual display, specifying verbs, and more.<br><br></li>
<li>
<a href="vjhowusingcontrols.htm">Using Controls</a>&nbsp;&nbsp;&nbsp;What you need to do to make your control available to host applications on other computers.</li>
</ul>
</BODY>
</HTML>
