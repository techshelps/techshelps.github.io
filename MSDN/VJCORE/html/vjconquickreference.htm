<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Quick Reference</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vjconquickreference"></a>Quick Reference</h1>
<p>
The following two tables list the native type that corresponds to each Java type. The first table describes the mappings for parameters and return values, and the second table shows the mappings that are used with the @dll.struct directive.</p>
<p class=label>
<b>Parameter and Return Value Mappings</b></p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=33%><b>Java</b></td>
<td class=label width=33%><b>Native</b></td>
<td class=label width=34%><b>Notes/Restrictions</b></td>
</tr>
<tr valign=top>
<td width=33%>byte</td>
<td width=33%>BYTE or CHAR</td>
<td width=34%></td>
</tr>
<tr valign=top>
<td width=33%>short</td>
<td width=33%>SHORT or WORD</td>
<td width=34%></td>
</tr>
<tr valign=top>
<td width=33%>int</td>
<td width=33%>INT, UINT, LONG, ULONG, or DWORD</td>
<td width=34%></td>
</tr>
<tr valign=top>
<td width=33%>char</td>
<td width=33%>TCHAR</td>
<td width=34%></td>
</tr>
<tr valign=top>
<td width=33%>long</td>
<td width=33%>__int64</td>
<td width=34%></td>
</tr>
<tr valign=top>
<td width=33%>float</td>
<td width=33%>float</td>
<td width=34%></td>
</tr>
<tr valign=top>
<td width=33%>double</td>
<td width=33%>double</td>
<td width=34%></td>
</tr>
<tr valign=top>
<td width=33%>boolean</td>
<td width=33%>BOOL</td>
<td width=34%></td>
</tr>
<tr valign=top>
<td width=33%>String</td>
<td width=33%>LPCTSTR</td>
<td width=34%>Not allowed as return value, except in <i>ole</i> mode. In <i>ole</i> mode, String maps to LPWSTR. The Microsoft VM frees the string by using CoTaskMemFree.</td>
</tr>
<tr valign=top>
<td width=33%>StringBuffer</td>
<td width=33%>LPTSTR</td>
<td width=34%>Not allowed as return value. Set the StringBuffer capacity large enough to hold the largest string that the DLL function can generate.</td>
</tr>
<tr valign=top>
<td width=33%>byte[]</td>
<td width=33%>BYTE*</td>
<td width=34%></td>
</tr>
<tr valign=top>
<td width=33%>short[]</td>
<td width=33%>WORD*</td>
<td width=34%></td>
</tr>
<tr valign=top>
<td width=33%>char[]</td>
<td width=33%>TCHAR*</td>
<td width=34%></td>
</tr>
<tr valign=top>
<td width=33%>int[]</td>
<td width=33%>DWORD*</td>
<td width=34%></td>
</tr>
<tr valign=top>
<td width=33%>float[]</td>
<td width=33%>float*</td>
<td width=34%></td>
</tr>
<tr valign=top>
<td width=33%>double[]</td>
<td width=33%>double*</td>
<td width=34%></td>
</tr>
<tr valign=top>
<td width=33%>long[]</td>
<td width=33%>__int64*</td>
<td width=34%></td>
</tr>
<tr valign=top>
<td width=33%>boolean[]</td>
<td width=33%>BOOL[]</td>
<td width=34%></td>
</tr>
<tr valign=top>
<td width=33%>Object</td>
<td width=33%>pointer to struct</td>
<td width=34%>In <i>ole</i> mode, an IUnknown* is passed instead.</td>
</tr>
<tr valign=top>
<td width=33%>Interface</td>
<td width=33%>COM interface</td>
<td width=34%>Use jactivex or similar tool to generate interface file.</td>
</tr>
<tr valign=top>
<td width=33%>com.ms.com.SafeArray</td>
<td width=33%>SAFEARRAY*</td>
<td width=34%>Not allowed as return value.</td>
</tr>
<tr valign=top>
<td width=33%>com.ms.com._Guid</td>
<td width=33%>GUID,IID,CLSID</td>
<td width=34%></td>
</tr>
<tr valign=top>
<td width=33%>com.ms.com.Variant</td>
<td width=33%>VARIANT*</td>
<td width=34%></td>
</tr>
<tr valign=top>
<td width=33%>@dll.struct classes</td>
<td width=33%>pointer to struct</td>
<td width=34%></td>
</tr>
<tr valign=top>
<td width=33%>@com.struct classes</td>
<td width=33%>pointer to struct</td>
<td width=34%></td>
</tr>
<tr valign=top>
<td width=33%>void</td>
<td width=33%>VOID</td>
<td width=34%>As return value only.</td>
</tr>
<tr valign=top>
<td width=33%>com.ms.dll.Callback</td>
<td width=33%>function pointer</td>
<td width=34%>As parameter only.</td>
</tr>
</table><br>
<p class=label>
<b>Mappings used with @dll.struct</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=33%><b>Java</b></td>
<td class=label width=67%><b>Native</b></td>
</tr>
<tr valign=top>
<td width=33%>byte</td>
<td width=67%>BYTE or CHAR</td>
</tr>
<tr valign=top>
<td width=33%>char</td>
<td width=67%>TCHAR</td>
</tr>
<tr valign=top>
<td width=33%>short</td>
<td width=67%>SHORT or WORD</td>
</tr>
<tr valign=top>
<td width=33%>int</td>
<td width=67%>INT, UINT, LONG, ULONG or DWORD</td>
</tr>
<tr valign=top>
<td width=33%>float</td>
<td width=67%>__int64</td>
</tr>
<tr valign=top>
<td width=33%>long</td>
<td width=67%>float</td>
</tr>
<tr valign=top>
<td width=33%>double</td>
<td width=67%>double</td>
</tr>
<tr valign=top>
<td width=33%>boolean</td>
<td width=67%>BOOL[]</td>
</tr>
<tr valign=top>
<td width=33%>Java</td>
<td width=67%>Native</td>
</tr>
<tr valign=top>
<td width=33%>String</td>
<td width=67%>Pointer to a string, or an embedded fixed-size string</td>
</tr>
<tr valign=top>
<td width=33%>Class marked with @dll.struct</td>
<td width=67%>Nested structure</td>
</tr>
<tr valign=top>
<td width=33%>char[]</td>
<td width=67%>Nested array of TCHAR</td>
</tr>
<tr valign=top>
<td width=33%>byte[]</td>
<td width=67%>Nested array of BYTE</td>
</tr>
<tr valign=top>
<td width=33%>short[]</td>
<td width=67%>Nested array of SHORT</td>
</tr>
<tr valign=top>
<td width=33%>int[]</td>
<td width=67%>Nested array of LONG</td>
</tr>
<tr valign=top>
<td width=33%>long[]</td>
<td width=67%>Nested array of __int64</td>
</tr>
<tr valign=top>
<td width=33%>float[]</td>
<td width=67%>Nested array of floats</td>
</tr>
<tr valign=top>
<td width=33%>double[]</td>
<td width=67%>Nested array of doubles</td>
</tr>
</table><br>
</BODY>
</HTML>
