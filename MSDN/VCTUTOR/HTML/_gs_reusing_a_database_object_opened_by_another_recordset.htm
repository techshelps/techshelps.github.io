<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Reusing a Database Object Opened by Another Recordset</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_gs_reusing_a_database_object_opened_by_another_recordset"></a><sup></sup>Reusing a Database Object Opened by Another Recordset</h1>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;You add no new code to Enroll in this topic.</p>
<h3>Suggested Reading in the <i>Microsoft Foundation Class Reference</i></h3>
<ul type=disc>
<li>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_mfc_CDatabase">
</object><a href=JavaScript:alink_1.Click()>CDatabase</a> Overview</li>
</ul>
<p>
AppWizard and ClassWizard both implement <b>CRecordset</b>-derived classes such that the recordset object owns its own <b>CDatabase</b> object. Up to now, the <b>CDatabase</b> object has been transparent because the framework created it for you when you constructed a recordset object. The default implementation of <b>CRecordView::OnInitialUpdate</b> indirectly calls the wizard-implemented <code>GetDefaultConnect</code> function for the recordset. The implementation looks like this:</p>
<pre><code>CString CSectionSet::GetDefaultConnect()
{
   return "ODBC;DSN=Student Registration;";
}
</code></pre>
<p>
The framework passes this “connection” string to <b>CDatabase::Open</b> for the <b>CDatabase</b> object that the framework creates in its implementation of <b>CRecordset::Open</b>. If your application has two or more recordsets, each recordset will, by default, create and open its own <b>CDatabase</b> object. If multiple recordsets access the same data source, it’s a good idea to have them share the same <b>CDatabase</b> object.</p>
<p>
One way to share the same <b>CDatabase</b> object among multiple recordsets is to pass the <b>m_pDatabase</b> member of the first recordset object to the <b>Open</b> function of the other recordsets. This is what you’ve already implemented in <code>CSectionForm::OnInitialUpdate</code>:</p>
<pre><code>m_pSet-&gt;m_pDatabase = pDoc-&gt;m_courseSet.m_pDatabase;
CRecordView::OnInitialUpdate();
</code></pre>
<p>
If <b>CRecordset::Open</b> finds that the <b>m_pDatabase</b> member is already allocated, it simply reuses the open <b>CDatabase</b>.</p>
<p>
Another way to share the same <b>CDatabase</b> object among multiple recordsets is to embed the <b>CDatabase</b> object in the document object. For an example of this approach, see the source code for <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_sample_mfc_ENROLL">
</object><a href=JavaScript:alink_2.Click()>Enroll Step 4</a> in Samples \ MFC Samples \ Tutorials in the table of contents.</p>
</font></BODY>
</HTML>
