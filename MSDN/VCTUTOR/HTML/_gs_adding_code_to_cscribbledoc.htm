<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Adding Code to CScribbleDoc</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2"><h1><a name="_gs_adding_code_to_cscribbledoc"></a>Adding Code to CScribbleDoc</h1>
<p>
In procedures that follow, you’ll add new member variables (<code>m_nPenWidth </code>and <code>m_penCur</code>) and functions (<code>InitDocument</code> and <code>NewStroke</code>) to <code>CScribbleDoc</code>. </p>
<h3>Suggested Reading</h3>
<ul type=disc>
<li>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="ClassView">
</object><a href=JavaScript:alink_1.Click()>ClassView: Overview</a>, <i>Visual C++ User’s Guide</i><br><br></li>
<li>
<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="ClassView">
</object><a href=JavaScript:alink_2.Click()>ClassView Topics</a>, <i>Visual C++ Programmer’s Guide</i><br><br></li>
<li>
<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="project views">
</object><a href=JavaScript:alink_3.Click()>Project Workspace Views</a>, <i>Visual C++ User’s Guide</i><br><br></li>
<li>
<object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Precompiled_Header_Compiler_Options">
</object><a href=JavaScript:alink_4.Click()>Precompiled Header Compiler Options</a>, <i>Visual C++ Programmer’s Guide</i><br><br></li>
<li>
<object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="wizbar">
</object><a href=JavaScript:alink_5.Click()>Using WizardBar</a>, <i>Visual C++ Programmer’s Guide</i><br><br></li>
<li>
<object id=alink_6 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_MFC_CTypedPtrList">
</object><a href=JavaScript:alink_6.Click()>CTypedPtrList</a> Overview, <i>Microsoft Foundation Class Reference</i><br><br></li>
<li>
<object id=alink_7 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_mfc_CArray">
</object><a href=JavaScript:alink_7.Click()>CArray</a> Overview, <i>Microsoft Foundation Class Reference</i><br><br></li>
<li>
<object id=alink_8 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="diagnostic features">
</object><a href=JavaScript:alink_8.Click()>Diagnostic Features</a>, <i>Visual C++ Programmer’s Guide</i></li>
</ul>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The source files for tutorials such as Scribble contain comments that clarify the purpose of the code. Including such comments is not always mentioned as part of a tutorial step, both for brevity’s sake, and because the purpose of code you add is explained in the procedures you’ll follow. You can modify or add to comments in your own files.</p>
<p class=label>
<b>To add member variables to Scribble’s document class</b>
<ol>
<li>
In ClassView, expand the project folder, if necessary, and right-click <code>CScribbleDoc</code>. In the menu, click <b>Add Member Variable</b>.<p class=tl>
The <b>Add Member Variable</b> dialog box appears.</P></li>
<li>
In the <b>Variable Type</b> drop-box, type <code>UINT</code>.<br><br></li>
<li>
In the <b>Variable Declaration</b> box, type <code>m_nPenWidth</code>.<br><br></li>
<li>
In the <b>Access</b> area, click <b>Protected</b>, and click <b>OK</b>.<p class=tl>
ClassWizard adds the variable declaration to file ScribbleDoc.h.</P></li>
<li>
Repeat steps 1 through 4 to declare the protected <code>m_penCur</code> variable of type <b>CPen</b>.<p class=tl>
ClassView displays the new member declarations and variables you’ve added with your code.</P></li>
<li>
Expand the icon for <code>CScribbleDoc</code>.<p class=tl>
Note that <code>m_nPenWidth</code> and <code>m_penCur</code> are now displayed as variables belonging to the class. Once member functions and variables are declared, ClassView displays them, even if their definition isn’t written yet.</P></li>
<li>
Double-click <code>m_nPenWidth</code>.<p class=tl>
ScribbleDoc.h places the cursor at the definition for <code>m_nPenWidth</code>. </P></li>
<li>
Add the following lines of code in the Public attributes section of ScribbleDoc.h:<pre><code>CTypedPtrList&lt;CObList, CStroke*&gt; m_strokeList;

CPen*&nbsp;&nbsp; GetCurrentPen( ) { return &amp;m_penCur; }
</code></pre>
<p class=tl>
The first line is an instance of a template. The second is the definition of an inline function, so its definition appears here instead of in ScribbleDoc.cpp.</P></li>
</ol>
<p class=label>
<b>To add member functions to Scribble’s document class</b>
<ol>
<li>
In ClassView, right-click <code>CScribbleDoc</code>.<br><br></li>
<li>
In the menu, click <b>Add Member Function</b>.<br><br></li>
<li>
Fill in the <b>Add Member Function</b> dialog box as follows:<ul type=disc>
<li>
In the <b>Function Type</b> box, type <code>CStroke*</code>.<br><br></li>
<li>
In the <b>Function Declaration</b> box, type <code>NewStroke()</code>.<br><br></li>
<li>
In the <b>Access</b> area, click <b>Public</b>. <br><br></li>
<li>
Click <b>OK</b>.</li>
</ul>
<p class=tl>
A declaration is added to ScribbleDoc.h, while a starter definition is added to ScribbleDoc.cpp. You’ll fill in the definition later in this lesson.</P></li>
<li>
Repeat steps 1 through 3 to declare the function <code>InitDocument</code>. In the <b>Function Type </b>box, type <code>void</code>, and in the <b>Access</b> area, click <b>Protected</b>.<br><br></li>
<li>
Save the file. (Optional.)<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The development environment saves all your work for you automatically when you build your project, close the workspace, or exit the program. Any prompts within these procedures to save your files are provided only as extra safeguards of your work.</p></li>
</ol>
<p>
You can view the new functions using ClassView.</p>
</font></BODY>
</HTML>
