<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Tutorial Example: DaoEnrol</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2"><h1><a name="_gs_the_tutorial_example.3a_.daoenrol"></a>The Tutorial Example: DaoEnrol</h1>
<p>
The tutorial example program, DaoEnrol, manages a student registration database similar to, but simpler than, a college registration system. It will help you to follow the tutorial if you understand the structure of the student registration database. </p>
<p>
DaoEnrol is based on the same student registration database, StdReg32.mdb, that you use with the Enroll tutorial. However, it is not necessary to register this data source with the ODBC Administrator to use it with the DAO database classes in the DaoEnrol tutorial.</p>
<p>
The following table lists the database tables, what they store, and the columns in them.</p>
<p class=label>
<b><a name="_gs_table_34..1_tables_in_the_student_registration_database"></a>Tables in the Student Registration Database</b></p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=19%><b>Table name</b></td>
<td class=label width=61%><b>Contents</b></td>
<td class=label width=20%><b>Column list</b></td>
</tr>
<tr valign=top>
<td width=19%>Course</td>
<td width=61%>Think of each record as an entry in a course catalog. Example: the MATH101 course.</td>
<td width=20%>CourseID<sup>*</sup><p>
CourseTitle</p>
<p>
Hours</p>
</td>
</tr>
<tr valign=top>
<td width=19%>Section<sup>†</sup></td>
<td width=61%>A section record is a specific offering of a course at a specific time. For example, MATH101 may have many sections.</td>
<td width=20%>SectionNo<sup>*</sup><p>
CourseID<sup>*</sup></p>
<p>
InstructorID</p>
<p>
Schedule</p>
<p>
RoomNo</p>
</td>
</tr>
<tr valign=top>
<td width=19%>Student</td>
<td width=61%>A record for each student at the school.</td>
<td width=20%>StudentID<sup>*</sup><p>
Name</p>
<p>
GradYear</p>
</td>
</tr>
<tr valign=top>
<td width=19%>Enrollment</td>
<td width=61%>A record for each student in a particular section of a course. For a given student, there is an Enrollment record for each course the student is taking.</td>
<td width=20%>CourseID<sup>*</sup><p>
SectionNo<sup>*</sup></p>
<p>
StudentID<sup>*</sup></p>
<p>
Grade</p>
</td>
</tr>
<tr valign=top>
<td width=19%>Instructor</td>
<td width=61%>A record for each instructor at the school.</td>
<td width=20%>InstructorID<sup>*</sup><p>
Name</p>
<p>
RoomNo</p>
</td>
</tr>
</table><br>
<p class=mini>
* Indicates the column (or columns) that comprise the table’s primary key.</p>
<p class=mini>
† The Dynabind_Section table is used in the Dynabind sample, but not in the DaoEnrol tutorial.</p>
<p>
DaoEnrol lets you use a “form” — a view with dialog-style controls — to view registration information for courses, section by section. Section information displayed includes the course name, section number, instructor, room, and schedule (such as “MWF 10-11”). For example, you can view section 1 of the course MATH 101, then section 2, and so on. The initial tutorial step provides read-only viewing of all sections. Steps 2 and 3 add more capabilities, including updates. The following figure shows what the DaoEnrol application looks like at the end of the tutorial.</p>
<p class=label>
<b>The Completed DaoEnrol Tutorial Application</b></p>
<p>
<img src="ct0608s.gif" border=0></p>
</font></BODY>
</HTML>
