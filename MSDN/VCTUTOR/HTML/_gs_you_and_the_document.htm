<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>You and the Document</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2"><h1><a name="_gs_you_and_the_document"></a><sup></sup>You and the Document</h1>
<p>
Scribble demonstrates the MFC programming model, which separates storage of the program's data (the document) from the display of that data (the view), and from most user interaction with the data. This model supports multiple views, multiple document types, splitter windows, and other valuable user-interface features. At the heart of document/view are four key classes:
<ul type=disc>
<li>
<b>CDocument</b> (or <b>COleDocument</b>): an object used to store or control your program's data.<br><br></li>
<li>
<b>CView</b> (or one of its many derived classes): an object used to display a document's data and manage user interaction with the data.<br><br></li>
<li>
<b>CFrameWnd</b> (or one of its variations): an object that provides the frame around one or more views of a document.<br><br></li>
<li>
<b>CDocTemplate</b> (or <b>CSingleDocTemplate</b> or <b>CMultiDocTemplate</b>): an object that coordinates one or more existing documents of a given type and manages creating the correct document, view, and frame window objects for that type.</li>
</ul>
<p>
To gain a better understanding of how the document/view model works for your application, study the following tables:</p>
<p>
This table shows how the document and other objects are created and managed in a framework application.</p>
<p class=label>
<b>Key Objects in an Application</b></p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=21%><b><br>
Object</b></td>
<td class=label width=33%><b>Primary <br>
purpose</b></td>
<td class=label width=46%><b>Relationships to<br>
other objects</b></td>
</tr>
<tr valign=top>
<td width=21%>Application</td>
<td width=33%>Manages all other framework objects.</td>
<td width=46%>Keeps a list of document templates.</td>
</tr>
<tr valign=top>
<td width=21%>Document template</td>
<td width=33%>Creates and manages documents.</td>
<td width=46%>Manages a list of open documents of a given type. Creates frame windows and views to provide a user interface for a document’s data.</td>
</tr>
<tr valign=top>
<td width=21%>Document</td>
<td width=33%>Stores data.</td>
<td width=46%>Manages a list of views on its data.</td>
</tr>
<tr valign=top>
<td width=21%>View</td>
<td width=33%>Manages user interaction with a document.</td>
<td width=46%>Attached to a document. Owned by a frame window.</td>
</tr>
<tr valign=top>
<td width=21%>Frame window</td>
<td width=33%>Frames a view.</td>
<td width=46%>Owns a view that is attached to a document.</td>
</tr>
</table><br>
<p>
This table shows your responsibilities and those of the framework in implementing a document.</p>
<p class=label>
<b>Document Implementation Responsibilities</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=46%><b>Your job</b></td>
<td class=label width=54%><b>The framework’s job</b></td>
</tr>
<tr valign=top>
<td width=46%>Derive a document class from class <b>CDocument</b>.</td>
<td width=54%>Provide many document services through class <b>CDocument</b>.</td>
</tr>
<tr valign=top>
<td width=46%>Add data members to your class.</td>
<td width=54%></td>
</tr>
<tr valign=top>
<td width=46%>Implement application-specific initialization and cleanup of your document’s data.</td>
<td width=54%>Call the appropriate initialization and cleanup functions at the right times.</td>
</tr>
<tr valign=top>
<td width=46%>Override <b>CDocument</b>’s <b>Serialize</b> member function to specify how your data is read and written.</td>
<td width=54%>Provide implementations of File Open, Save, and Save As that call your <code>Serialize</code> override to read and write your data.</td>
</tr>
</table><br>
<p>
Typically, you also add member functions to your derived document class through which other objects — mainly the view — can access the document’s data.</p>
</font></BODY>
</HTML>
