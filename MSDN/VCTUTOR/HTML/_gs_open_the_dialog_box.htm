<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Open the Dialog Box</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_gs_open_the_dialog_box"></a><sup></sup>Open the Dialog Box</h1>
<p>
You’ve specified almost everything about the Pen Widths dialog box: its appearance, the data map for its edit controls, and the message handlers for its pushbuttons. Only one thing remains to be specified: when the dialog box should be opened.</p>
<h3>Suggested Reading in the <i>Microsoft Foundation Class Reference</i></h3>
<ul type=disc>
<li>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_mfc_CDialog.3a3a.DoModal">
</object><a href=JavaScript:alink_1.Click()>CDialog::DoModal</a><br><br></li>
<li>
<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_mfc_CDialog.3a3a.Create">
</object><a href=JavaScript:alink_2.Click()>CDialog::Create</a> </li>
</ul>
<p>
Currently no programmatic connection exists between the Pen Widths menu item and the Pen Widths dialog box. That is, the menu item and the dialog box are not bound together. You must explicitly bind them by calling the Pen Widths dialog box from within the message handler for the Pen Widths command.</p>
<p>
How do you open a dialog box? With the following two steps:
<ol>
<li>
<a href="_gs_declaring_the_cpenwidthsdlg_object.htm#_gs_to_declare_the_cpenwidthsdlg_object">Declare a CPenWidthsDlg object</a>. This doesn’t display the dialog box on the screen; it just constructs the C++ object that manages the dialog box. <br><br></li>
<li>
Complete the <code>OnPenWidths</code> member function handler for the Pen Widths menu command. </li>
</ol>
<p>
To specify that the Pen Widths command displays the dialog box modally, you call the <b>DoModal</b> member function defined by the <b>CDialog</b> class. (To display a modeless dialog box, you would call the <b>Create</b> member function of <b>CDialog</b>.)</p>
<p>
The <b>DoModal</b> function continues executing as long as the dialog box is displayed on the screen. When the user clicks the <b>OK</b> or <b>Cancel</b> button, the <b>DoModal</b> function returns <b>IDOK</b> or <b>IDCANCEL</b>, respectively, and the application can continue.</p>
<p>
Before you write the message handler for the Pen Widths command, you need to decide which class should get the handler. In Lesson 6, in <a href="_gs_add_new_member_variables_to_scribble.htm">Add New Member Variables to Scribble</a>, you added declarations for the <code>m_nThickWidth</code> and <code>m_nThinWidth</code> member variables to the <code>CScribbleDoc</code> class, because the document must keep track of the widths of the thick and thin pens (this allows multiple views to share the same pen widths). Since the document class must maintain those values, it should get the handler for the Pen Widths command.</p>
</font></BODY>
</HTML>
