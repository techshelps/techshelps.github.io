<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Adding the CircleOffset Property</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_gs_adding_the_circleoffset_property"></a>Adding the CircleOffset Property</h1>
<p>
The first step in implementing CircleOffset functionality is to add the CircleOffset property to the control.</p>
<p class=label>
<b>To add the CircleOffset property</b>
<ol>
<li>
On the <b>View</b> menu, click <b>ClassWizard</b>.<br><br></li>
<li>
Click the <b>Automation</b> tab.<br><br></li>
<li>
In the <b>Class</b> <b>name</b> drop-down list box, select CCircCtrl.<br><br></li>
<li>
Click <b>Add</b> <b>Property</b>.<p class=tl>
The <b>Add</b> <b>Property</b> dialog box appears.</P></li>
<li>
In the edit control of the <b>External</b> <b>name</b> drop-down combo box, type <code>CircleOffset</code>.<br><br></li>
<li>
 Under <b>Implementation</b>, select <b>Get/Set methods</b>.<p class=tl>
The <b>Get function</b> and <b>Set function</b> edit controls appear, replacing the <b>Variable name</b> and <b>Notification function</b> edit controls.</P></li>
<li>
From the <b>Type</b> list box, select short.<br><br></li>
<li>
Click <b>OK</b> to close the <b>Add</b> <b>Property</b> dialog box.<p class=tl>
This returns you to the <b>Automation</b> tab. Notice that the implementation of the CircleOffset property appears as:</P><pre><code>Implementation:
short GetCircleOffset();
void SetCircleOffset(short nNewValue);
</code></pre>
</li>
<li>
Click <b>OK</b> to confirm your choices and close ClassWizard.</li>
</ol>
<p>
ClassWizard creates the appropriate code to add the CircleOffset property to <code>CCircCtrl</code> and to CIRC.ODL. Because CircleOffset is a Get/Set property type, ClassWizard modifies the <code>CCircCtrl</code> class's dispatch map to include a <b>DISP_PROPERTY_EX</b> macro entry:</p>
<pre><code>BEGIN_DISPATCH_MAP(CCircCtrl, COleControl)
 &nbsp;&nbsp; //{{AFX_DISPATCH_MAP(CCircCtrl)
 &nbsp;&nbsp; DISP_PROPERTY_NOTIFY(CCircCtrl, "CircleShape",
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_circleShape, OnCircleShapeChanged, VT_BOOL)
 &nbsp;&nbsp; DISP_PROPERTY_EX(CCircCtrl, "CircleOffset",
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GetCircleOffset, SetCircleOffset, VT_I2)
 &nbsp;&nbsp; DISP_STOCKPROP_BACKCOLOR()
 &nbsp;&nbsp; //}}AFX_DISPATCH_MAP
 &nbsp;&nbsp; DISP_FUNCTION_ID(CCircCtrl, "AboutBox",
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DISPID_ABOUTBOX, AboutBox, VT_EMPTY, VTS_NONE)
END_DISPATCH_MAP()
</code></pre>
<p>
The <b>DISP_PROPERTY_EX</b> macro associates the CircleOffset property name with its corresponding <code>CCircCtrl</code> class's Get and Set methods, <code>GetCircleOffset</code> and <code>SetCircleOffset</code>. The type of the property value is specified as <b>VT_I2</b>, which corresponds to <b>short</b>.</p>
<p>
ClassWizard also adds a declaration for the <code>GetCircleOffset</code> and <code>SetCircleOffset</code> functions in CIRCCTL.H and also adds their function templates in CIRCCTL.CPP:</p>
<pre><code>short CCircCtrl::GetCircleOffset()
{
 &nbsp;&nbsp; // TODO: Add your property handler here

 &nbsp;&nbsp; return 0;
}

void CCircCtrl::SetCircleOffset(short nNewValue)
{
 &nbsp;&nbsp; // TODO: Add your property handler here

 &nbsp;&nbsp; SetModifiedFlag();
}
</code></pre>
<p>
You will modify the <code>SetCircleOffset</code> function to perform offset validation later in this lesson.</p>
<p>
Because ClassWizard only creates the Get and Set functions, you must add a member variable to the <code>CCircCtrl</code> class to keep track of the actual value of the CircleOffset property. The Get and Set methods will query and modify this variable. You can add this variable by modifying the declaration of the <code>CCircCtrl</code> class in CIRCCTL.H. Add the member variable in the protected section after the destructor. </p>
<p>
Add the following line of code in CIRCCTL.H:</p>
<pre><code>&nbsp;&nbsp;&nbsp;&nbsp;short m_circleOffset;
</code></pre>
<p>
as shown in the following code example:</p>
<pre><code>class CCircCtrl : public COleControl
{
...
protected:
 &nbsp;&nbsp; ~CCircCtrl();
 &nbsp;&nbsp; void GetDrawRect(CRect* rc);
 &nbsp;&nbsp; short m_circleOffset;
...
};
</code></pre>
<p>
Modify the Get method created by ClassWizard, <code>GetCircleOffset</code>, in CIRCCTL.CPP to return the value of this new variable (the //TODO comment line can be removed):</p>
<pre><code>short CCircCtrl::GetCircleOffset()
{
 &nbsp;&nbsp; return m_circleOffset;
}
</code></pre>
</font></BODY>
</HTML>
