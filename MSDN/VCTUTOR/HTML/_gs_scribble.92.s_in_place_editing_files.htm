<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Scribble's In Place Editing Files</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2"><h1><a name="_gs_scribble.92.s_in_place_editing_files"></a>Scribble’s In Place Editing Files</h1>
<p>
IpFrame.cpp contains the implementation of Scribble’s <b>COleIPFrameWnd</b>-derived class. This is the frame window for Scribble when it draws in the container. <b>COleIPFrameWnd</b> provides the resize border that you noticed in the preview demonstration. Note that Scribble only uses this <b>COleIPFrameWnd</b> object when the Scribble object is in-place activated in the container application. Only then does the server need to provide a window. When the Scribble object is not activated in place, but is just being drawn in the container’s window, the OLE server provides a metafile (a list of drawing commands) to the container so it can then play the metafile.</p>
<p>
ScribbleItem.cpp contains the implementation of Scribble’s <b>COleServerItem</b>-derived class. The <b>COleServerItem</b> object represents the Scribble document when it is embedded in a container.</p>
</font></BODY>
</HTML>
