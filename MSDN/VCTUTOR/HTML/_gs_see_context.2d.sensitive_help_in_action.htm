<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>See Context-Sensitive Help in Action</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2"><h1><a name="_gs_see_context.2d.sensitive_help_in_action"></a>See Context-Sensitive Help in Action</h1>
<p>
Once you’ve created an AppWizard application with the Context-Sensitive Help option, it’s easy to try out the help support provided by the framework and AppWizard. </p>
<p class=label>
<b><a name="_gs_to_try_out_the_help_support"></a>To try out the help support</b>
<ul type=disc>
<li>
Build the HelpApp application you created in the procedure <a href="_gs_the_context.2d.sensitive_help_option.htm#_gs_to_generate_appwizard_application_help_support">To generate AppWizard application help support</a>. <p class=tl>
From the <b>Build</b> menu, click <b>Rebuild All</b>. The first time you build this application, the development environment automatically compiles the AppWizard-generated Help Project files as part of the project build process. You don’t need to compile them separately until you begin modifying them.</P></li>
</ul>
<p>
Once the project has been built, you can run the application and try out the various help options. Here are some suggestions for what to try:
<ul type=disc>
<li>
Choose <b>Help Topics</b> from the <b>Help</b> menu. <p class=tl>
This invokes the application Help file generated for you by AppWizard, displaying the <b>Contents</b> tab of the <b>Help Topics</b> dialog box. The <b>Contents</b> tab already contains two top-level topics: <b>Menus</b>, which expands to display the menu topics AppWizard generated for the application; and a place-holder topic that you will replace with your application-specific topics. </P></li>
<li>
Expand the top-level <b>Menus</b> topic.<p class=tl>
You’ll see all the topics AppWizard provided for you. They describe the standard menus that the framework provides. Continue choosing topics for a particular menu, such as the <b>File</b> menu, until you see a topic for a specific menu item or dialog box, such as the <b>Print Preview</b> command or the <b>Print Setup</b> dialog box. You’ll see that the Help file is already quite robust.</P></li>
<li>
Click the <b>Index</b> tab. <p class=tl>
Select an index entry, and then click <b>Display</b>. Again you’ll see that the skeleton Help file already contains much relevant information, implemented in a useful help structure.</P></li>
<li>
Click the <b>Contents</b> tab and then select the <b>Find</b> tab.<p class=tl>
Follow the simple instructions for the <b>Find Setup Wizard</b>, which sets up the full-text search capabilities of the Windows help engine. Once finished, your simple Help system suddenly becomes more sophisticated — the user can type in words or phrases, and if there is a match in any of the AppWizard-generated Help topics, that topic appears in the topic list. Click <b>Display</b> to see the topic. </P><p class=tl>
When you add new files to your Help system, recompile, and run the <b>Find Setup Wizard</b> again, the Windows Help engine re-creates this full-text search index, incorporating the text in your new topics seamlessly.</P></li>
<li>
Click the help-mode button on the HelpApp toolbar, which appears as an arrow beside a question mark. <br><br></li>
<li>
Open a menu and select a menu item by using the DOWN ARROW key. Then press the F1 key to get help for the selected item.<br><br></li>
<li>
Press and hold down a toolbar button, and press F1 before releasing the toolbar button. </li>
</ul>
</font></BODY>
</HTML>
