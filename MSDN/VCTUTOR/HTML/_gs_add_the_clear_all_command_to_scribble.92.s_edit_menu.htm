<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Add the Clear All Command to Scribble's Edit Menu</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2"><h1><a name="_gs_add_the_clear_all_command_to_scribble.92.s_edit_menu"></a>Add the Clear All Command to Scribble’s Edit Menu</h1>
<p class=label>
<b><a name="_gs_to_add_scribble.92.s_clear_all_menu_command"></a>To add Scribble’s Clear All menu command</b>
<ol>
<li>
If you don’t already have Scribble’s resource file open, switch to ResourceView and expand the Scribble folder.<br><br></li>
<li>
Expand the Menu folder.<p class=tl>
Two menu IDs appear: IDR_MAINFRAME and IDR_SCRIBBTYPE. These menus correspond to the <a href="_gs_default_menus.htm">default menus</a>, described earlier in this lesson. Their IDs are defined for you by AppWizard, based on the document type you chose (MDI or SDI).</P></li>
<li>
Double-click IDR_SCRIBBTYPE.<p class=tl>
The menu editor opens, with the menu displayed much as it appears in the running application. </P></li>
<li>
Click the Edit menu item.<p class=tl>
The Edit menu opens as it would in the application. An empty cell sits below the last menu item, as shown in the following figure. This cell defines where you add the next menu item.</P></li>
<li>
Click the cell at the bottom of the Edit menu to select it.<p class=label>
<b>Menu Editor for IDR_SCRIBBTYPE</b>
<p>
<img src="vc39bm1.gif" border=0></P><p class=tl>
</P></li>
<li>
Type the caption <code>Clear &amp;All</code>. (Typing the ampersand character (<code>&amp;</code>) in front of a letter creates an access key combination.)<p class=tl>
When you start typing, the <b>Menu Item Properties</b> page opens, with your cursor in the <b>Caption</b> edit box. As you continue to type, the caption appears both in the <b>Caption</b> edit box and on the Edit menu.</P><p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;To ensure that the <b>Menu Item Properties</b> page remains open while you are editing Scribble’s menus, click the pushpin in the upper-left corner of the <b>Properties</b> window. </p><p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;To specify an accelerator, or shortcut key, for the menu item, append its specifier after the caption. For example, to specify CTRL+O as the accelerator for an Open command, the caption string would read “Open...\tCTRL+O” where “\t” signifies a tab to align the column.</p></li>
<li>
Open the <b>ID</b> list in the <b>Properties</b> window and begin typing the ID for the Clear All command: <code>ID_EDIT_C</code>.<p class=tl>
If you type with the drop-down list open, you’ll see the list box scroll to the first ID that matches the letters you’ve typed so far. The Visual C++ environment always ensures that the ID you enter is unique. <b>ID_EDIT_CLEAR_ALL</b> is a command ID predefined by the class library. If what you type matches a predefined command, Visual C++ assigns the predefined command ID to your menu item rather than creating a duplicate.</P><p class=tl>
Several IDs that begin with “ID_EDIT_C” appear in the list box. </P></li>
<li>
Select the ID_EDIT_CLEAR_ALL entry.<p class=tl>
As soon as you select the predefined ID, the following string appears in the <b>Prompt</b> box: “Erase everything\nErase All”. This prompt string is displayed in the status bar, if the application has one, when the user navigates up and down the menu using the keyboard; the text after the newline character (\n) appears as a tool tip if you create a toolbar button for this menu command. (For more information, see <a href="_gs_add_the_thick_line_button_to_scribble.92.s_toolbar_bitmap.htm">Add the Thick Line Button to Scribble’s Toolbar Bitmap</a>, later in this lesson.)</P><p class=tl>
AppWizard predefines the prompt text for the <b>ID_EDIT_CLEAR_ALL</b> symbol. For any ID that isn’t predefined, you should enter a descriptive prompt string. This context-sensitive menu information is essentially free, so take advantage of it.</P><p class=tl>
The following figure shows the property page after you’ve selected the ID.</P><p class=label>
<b>Property Page with ID</b>
<p>
<img src="ct0214s.gif" border=0></P><p class=tl>
You can define your own command IDs. You’ll see an example under the next topic, <a href="_gs_add_scribble.92.s_pen_menu.htm">Add Scribble’s Pen Menu</a>.</P></li>
<li>
Change the Prompt wording to <code>Clears the drawing</code>. <p class=tl>
Because this menu command won’t have an equivalent toolbar button, you remove the tool tip.</P></li>
<li>
Save the resource file.</li>
</ol>
<p>
You’ve added the Clear All command to the Edit menu.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;You don’t have to press ENTER or click any buttons to accept the values you’ve entered in the <b>Menu Item Properties</b> page. Your entries are stored immediately by the program.</p>
<p>
The following figure shows how the menu looks at this stage.</p>
<p class=label>
<b>The Clear All Menu Item</b></p>
<p>
<img src="ct0215s.gif" border=0></p>
<p>
The most important task in defining the menu command is assigning its ID. To the framework, the ID <i>is</i> the command. You must specify which code is executed when the user clicks the <b>Clear All</b> menu command. The code is linked to the menu by the ID.</p>
</font></BODY>
</HTML>
