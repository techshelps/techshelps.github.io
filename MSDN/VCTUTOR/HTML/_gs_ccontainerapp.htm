<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CContainerApp</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_gs_ccontainerapp"></a>CContainerApp</h1>
<p class=indent>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;Use ClassView to jump to the <code>CContainerApp::InitInstance</code> function and examine the code. Click the ClassView tab and expand <code>CContainerApp</code> to display its member functions. Double-click <code>InitInstance</code> to jump directly to its code.</p>
<h3>CContainerApp::InitInstance</h3>
<p>
AppWizard provides the application’s <code>InitInstance</code> function as follows:
<ul type=disc>
<li>
Initializes the OLE libraries by calling <b>AfxOleInit</b>.<br><br></li>
<li>
Calls <b>CDocTemplate::SetContainerInfo</b> to assign the menu and accelerator resources that are used when an embedded item is activated in place. AppWizard gives the menu and accelerator resources the same identification: IDR_CONTRTYPE_CNTR_IP. <p class=tl>
The resulting menu looks like this:</P><p class=tl>
<b>File</b>  |&nbsp; |&nbsp; <b>Window</b></P><p class=tl>
The two separator bars in the menu tell the framework where to insert pop-up menus provided by the server when the embedded item is activated in place. </P><p class=tl>
The accelerator resource reflects that fewer accelerators are provided by the container application when an embedded item is activated in place, because the server provides accelerators specific to the activated item.</P></li>
</ul>
</font></BODY>
</HTML>
