<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Linking Controls with Properties</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_gs_linking_controls_with_properties"></a>Linking Controls with Properties</h1>
<p>
Now that the property page has controls for displaying and modifying properties, the controls need to be linked to the properties. You can link controls in the property page with properties by using a shortcut to the <b>Add Member Variable</b> dialog box in ClassWizard.</p>
<p class=label>
<b>To link the property page controls to properties</b>
<ol>
<li>
In the ResourceView pane, open the Circ project folder.<br><br></li>
<li>
Open the Dialog folder.<br><br></li>
<li>
Open the IDD_PROPPAGE_CIRC entry in the Dialog folder to load the property page template.<br><br></li>
<li>
While holding down the CTRL key, double-click the edit box control for the Caption property.<p class=tl>
The <b>Add Member Variable</b> dialog box of ClassWizard appears.</P></li>
<li>
After the m_ that is already in the <b>Member</b> <b>variable</b> <b>name</b> edit control, type <code>caption</code>, so the edit control contains m_caption.<br><br></li>
<li>
In the <b>Category</b> drop-down list box, click Value.<br><br></li>
<li>
In the <b>Variable</b> <b>type</b> drop-down list box, click CString.<br><br></li>
<li>
In the <b>Optional</b> <b>property</b> <b>name</b> drop-down combo box, click Caption.<br><br></li>
<li>
Click <b>OK</b> to close the <b>Add</b> <b>Member</b> <b>Variable</b> dialog box.<p class=tl>
If you were to open ClassWizard, the <b>Member Variables</b> tab would contain the new member variable mapping for the Caption property, as shown below:</P><pre><code>Control IDs:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Member
IDC_CAPTION&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CString&nbsp;&nbsp; m_caption
IDC_CIRCLEOFFSET
IDC_CIRCLESHAPE
</code></pre>
</li>
<li>
Repeat steps 4 through 9, holding down the CTRL key and double-clicking the edit box control for the CircleOffset property, and entering the following values in the controls:<p class=tl>
<b>Member variable name</b>: m_<code>circleOffset</code> </P><p class=tl>
<b>Category</b>: Value</P><p class=tl>
<b>Variable</b> <b>type</b>: int</P><p class=tl>
<b>Optional</b> <b>property</b> <b>name</b>: <code>CircleOffset</code></P></li>
<li>
Repeat steps 4 through 9, holding down the CTRL key and double-clicking the check box for the CircleShape property, and entering the following values in the controls:<p class=tl>
<b>Member variable name</b>: m_<code>circleShape</code> </P><p class=tl>
<b>Category</b>: Value</P><p class=tl>
<b>Variable</b> <b>type</b>: BOOL </P><p class=tl>
<b>Optional</b> <b>property</b> <b>name</b>: <code>CircleShape</code> </P><p class=tl>
If you were to open ClassWizard, the <b>Member</b> <b>Variables</b> tab would contain the new member variable mapping for the CircleShape property, as shown below:</P><pre><code>Control IDs:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Member
IDC_CAPTION&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CString&nbsp;&nbsp; m_caption
IDC_CIRCLEOFFSET&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_circleOffset
IDC_CIRCLESHAPE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BOOL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_circleShape
</code></pre>
</li>
</ol>
<p>
ClassWizard adds the member variables to the <code>CCircPropPage</code> class. ClassWizard also adds functions to the <code>CCircPropPage</code> class to initialize the member variables and to handle the exchange of data between the dialog controls, the member variables, and the properties.</p>
<p>
The <code>m_caption</code>, <code>m_circleOffset</code>, and <code>m_circleShape</code> member variables are declared in CIRCPPG.H:</p>
<pre><code>class CCircPropPage : public COlePropertyPage
{
 &nbsp;&nbsp; ...
 &nbsp;&nbsp; //{{AFX_DATA(CCircPropPage)
 &nbsp;&nbsp; ...
 &nbsp;&nbsp; CString m_caption;
 &nbsp;&nbsp; int m_circleOffset;
 &nbsp;&nbsp; BOOL m_circleShape;
 &nbsp;&nbsp; //}}AFX_DATA
 &nbsp;&nbsp; ...
};
</code></pre>
<p>
The member variables are initialized in the constructor for the <code>CCircPropPage</code> class, the <code>CCircPropPage</code> function in CIRCPPG.CPP:</p>
<pre><code>CCircPropPage::CCircPropPage() :
 &nbsp;&nbsp; COlePropertyPage(IDD, IDS_CIRCCTRL_PPG_CAPTION)
{
 &nbsp;&nbsp; //{{AFX_DATA_INIT(CCircPropPage)
 &nbsp;&nbsp; m_caption = _T("");
 &nbsp;&nbsp; m_circleOffset = 0;
 &nbsp;&nbsp; m_circleShape = FALSE;
 &nbsp;&nbsp; //}}AFX_DATA_INIT
}
</code></pre>
<p>
Notice that strings assigned to member variables are first passed through the <b>_T</b> macro. This is the same macro used for string parameters to <b>PX_</b> functions in <code>CCircCtrl::DoPropExchange</code>. The <b>_T</b> macro is used to maintain compatibility between different string representations, and it must be used for all literal strings in an ActiveX control project.</p>
<p>
Data transfer is handled by the <b>DDP_</b> and <b>DDX_</b> macros in the <code>DoDataExchange</code> function in CIRCPPG.CPP:</p>
<pre><code>void CCircPropPage::DoDataExchange(CDataExchange* pDX)
{
 &nbsp;&nbsp; //{{AFX_DATA_MAP(CCircPropPage)
 &nbsp;&nbsp; DDP_Text(pDX, IDC_CAPTION, m_caption, _T("Caption"));
 &nbsp;&nbsp; DDX_Text(pDX, IDC_CAPTION, m_caption);
 &nbsp;&nbsp; DDP_Text(pDX, IDC_CIRCLEOFFSET, m_circleOffset, _T("CircleOffset"));
 &nbsp;&nbsp; DDX_Text(pDX, IDC_CIRCLEOFFSET, m_circleOffset);
 &nbsp;&nbsp; DDP_Check(pDX, IDC_CIRCLESHAPE, m_circleShape, _T("CircleShape"));
 &nbsp;&nbsp; DDX_Check(pDX, IDC_CIRCLESHAPE, m_circleShape);
 &nbsp;&nbsp; //}}AFX_DATA_MAP
 &nbsp;&nbsp; DDP_PostProcessing(pDX);
}
</code></pre>
<p>
The <b>DDX_</b> macros are the same macros used for standard MFC dialog boxes. They synchronize dialog controls with dialog member variables. The <b>DDP_</b>macros are used only in ActiveX control property pages. They synchronize property page dialog member variables with specific control properties. Translations between an edit control and a <b>short</b> value and between a check box and a <b>BOOL</b> value are automatic. Similar to strings assigned to member variables, strings passed as parameters to <b>DDP_</b> macros are first passed through the <b>_T</b> macro.</p>
<p>
The Circle control now has a general property page that can be used to display and modify the values of several of its properties. The <code>IDC_CAPTION</code> edit control, <code>IDC_CIRCLEOFFSET</code> edit control, and <code>IDC_CIRCLESHAPE</code> check box are linked through property page member variables to the Caption, CircleOffset, and CircleShape properties, respectively. Between the default property page added in this lesson and the stock color and font property pages added earlier, all Circle control properties can now be accessed through property pages.</p>
</font></BODY>
</HTML>
