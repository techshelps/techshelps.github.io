<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Implementing the Refresh Command in DaoEnrol</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2"><h1><a name="_gs_implementing_the_refresh_command_in_daoenrol"></a>Implementing the Refresh Command in DaoEnrol</h1>
<p>
The Refresh command cancels add mode, if the user had previously clicked Add, or it discards any changes the user may have made on the form for the current record. In the first case, DaoEnrol cancels add mode by calling:</p>
<pre><code>CDaoRecordset::Move(0);
</code></pre>
<p>
When you call <b>AddNew</b> to begin the add operation, the framework stores a copy of the current record’s fields before allowing the user to enter new values in the record view’s controls. Calling <b>Move</b> as shown here “refreshes” the current record — and effectively cancels the add operation. It restores the record that was current before add mode began. This also works if you called <b>Edit</b> instead of <b>AddNew</b>.</p>
<p>
When the user cancels add mode, DaoEnrol makes the Section control read-only again, for reasons explained earlier.</p>
<h3>Suggested Reading in the <i>Visual C++ User’s Guide</i></h3>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="classview">
</object><a href=JavaScript:alink_1.Click()>Overview: ClassView</a></p>
<p class=label>
<b>To implement the Refresh command</b>
<ol>
<li>
Use ClassView to jump to the <code>OnRecordRefresh</code> starter handler in class <code>CSectionForm</code>.<br><br></li>
<li>
Implement the handler function with the following code:<pre><code>if (m_bAddMode)
{
m_pSet-&gt;CancelUpdate();
m_pSet-&gt;Move(0);
m_ctlSection.SetReadOnly(TRUE);
m_bAddMode = FALSE;
}
// Copy fields from recordset to form, thus
// overwriting any changes the user may have made
// on the form
UpdateData(FALSE);
</code></pre>
</li>
</ol>
<p>
You are now ready to build and run Step 3 of DaoEnrol. Try the new Add, Refresh, and Delete commands. Try forcing the two exceptions handled by DaoEnrol — deleting a section that has Enrollment records, or adding a duplicate section.</p>
<p>
This concludes the Step 3 of the DaoEnrol tutorial.</p>
</font></BODY>
</HTML>
