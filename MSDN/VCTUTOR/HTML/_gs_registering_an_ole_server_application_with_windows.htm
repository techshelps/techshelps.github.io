<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Registering an OLE Server Application with Windows</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2"><h1><a name="_gs_registering_an_ole_server_application_with_windows"></a>Registering an OLE Server Application with Windows</h1>
<p>
In order to run your application as an OLE server, you need to register it with Windows. AppWizard provides code that does this for you when you simply run the application, as you saw in <a href="_gs_previewing_scribble_running_as_an_ole_server.htm">Previewing Scribble Running as an OLE Server</a>. AppWizard also provides a text file, Scribble.reg, which you can use to register Scribble as an OLE server. You do this by running REGEDIT and merging Scribble.reg with the existing Windows registry file.</p>
<p class=label>
<b>To use REGEDIT to register Scribble as an OLE server</b>
<ol>
<li>
Run REGEDIT. (Note that on Windows NT, both REGEDIT and REGEDT32 are available. You can only merge a .REG file using REGEDIT.) <br><br></li>
<li>
On Windows NT, from the <b>File</b> menu, click <b>Merge Registration File</b>. On Windows 95, from the <b>Registry</b> menu, click <b>Import Registry File</b>.<br><br></li>
<li>
Select Scribble.reg from your Scribble project directory. <br><br></li>
<li>
When notified that the information has been registered, click <b>OK</b> and then close REGEDIT.</li>
</ol>
<p>
If you’re going to distribute your application, you should provide this registration as part of the application setup routine.</p>
<p>
There are several ways you can do this:
<ul type=disc>
<li>
Spawn REGEDIT, using the /s (silent) option and specifying the .REG file as a command-line parameter, for example:<pre><code>regedit /s scribble.reg
</code></pre>
<p class=tl>
Naturally, you’d need to create and maintain a .REG file specific to your particular application.</P></li>
<li>
Use the Windows registry APIs to set up all the registry keys.<br><br></li>
<li>
Let the framework programmatically register the application for you, by allowing your application to be run with a special switch (for example, "/Register") that registers the application and then immediately quits, such that the application can be run with this special switch as part of setup. For example:<pre><code>scribble /register 
</code></pre>
<p class=tl>
Of course, you'd need to modify your application's <code>InitInstance</code> code so that it recognizes this special switch. This works well for applications that are small and boot relatively quickly, since you can leverage the automatic registration that MFC provides as part of the framework.</P><p class=tl>
For more information, see <a href="_gs_framework_support_for_registering_the_application_with_windows.htm">Framework Support for Registering the Application with Windows</a> later in this lesson.</P></li>
</ul>
</font></BODY>
</HTML>
