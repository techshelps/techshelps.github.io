<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Summary of CScribbleDoc Member Functions and Variables</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2"><h1><a name="_gs_summary_of_cscribbledoc_member_functions_and_variables"></a>Summary of CScribbleDoc Member Functions and Variables</h1>
<p>
The following table describes the current member variables of class <code>CScribbleDoc</code> and the purpose they will serve in Scribble.</p>
<p class=label>
<b>CScribbleDoc Data Members</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=28%><b>Member</b></td>
<td class=label width=72%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=28%><code>m_strokeList</code></td>
<td width=72%>A list of strokes. Each item in the list is an object of class <code>CStroke</code>. The list itself is a C++ class template based on the MFC template class, <b>CTypedPtrArray</b>.</td>
</tr>
<tr valign=top>
<td width=28%><code>m_penCur</code></td>
<td width=72%>A <b>CPen</b> object used to do the drawing. Its main attribute is its width. The pen is created when the document is constructed and is used during the creation of new strokes.</td>
</tr>
<tr valign=top>
<td width=28%><code>m_nPenWidth</code></td>
<td width=72%>The current width of the lines drawn by the pen. </td>
</tr>
</table><br>
<p>
The following table describes the member functions.</p>
<p class=label>
<b>CScribbleDoc Member Functions</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=28%><b>Member</b></td>
<td class=label width=72%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=28%><code>CScribbleDoc</code>, <code>~CScribbleDoc</code></td>
<td width=72%>A default constructor and a virtual destructor. AppWizard creates placeholders for these functions. In Scribble, they remain empty.</td>
</tr>
<tr valign=top>
<td width=28%><code>DeleteContents</code></td>
<td width=72%>Deletes the contents of a document — the strokes that make up the drawing.</td>
</tr>
<tr valign=top>
<td width=28%><code>GetCurrentPen</code></td>
<td width=72%>Retrieves a pointer to the current pen object any time it’s needed by the drawing code.</td>
</tr>
<tr valign=top>
<td width=28%><code>InitDocument</code>, <code>OnNewDocument</code>,&nbsp; <code>OnOpenDocument</code></td>
<td width=72%>Called when a new document is created or an existing document is opened. The overridden versions of the <b>CDocument</b> member functions <b>OnNewDocument</b> and <b>OnOpenDocument</b> call <code>InitDocument</code> to initialize the new document.</td>
</tr>
<tr valign=top>
<td width=28%><code>NewStroke</code></td>
<td width=72%>Creates a new stroke object and adds it to the list of strokes in <code>m_strokeList</code>.</td>
</tr>
<tr valign=top>
<td width=28%><code>Serialize</code></td>
<td width=72%>Overrides the <b>Serialize</b> member function of class <b>CDocument</b>. The override specifies how to serialize a list of stroke objects to and from a disk file. AppWizard creates a starter version of this function for you.</td>
</tr>
<tr valign=top>
<td width=28%><code>AssertValid</code></td>
<td width=72%>Tests the validity of an object’s internal state.</td>
</tr>
<tr valign=top>
<td width=28%><code>Dump</code></td>
<td width=72%>Dumps the contents of an object’s members for examination during debugging.</td>
</tr>
</table><br>
<p>
You’ll add code for most of these member functions later in this lesson. You’ll learn more about <code>Serialize</code> under <a href="_gs_serializing_the_data.htm">Serializing the Data</a>, later in this lesson. You won’t add code to the functions <b>AssertValid</b> and <b>Dump</b> for Scribble.</p>
</font></BODY>
</HTML>
