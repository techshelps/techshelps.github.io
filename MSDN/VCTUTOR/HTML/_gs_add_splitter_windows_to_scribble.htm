<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Add Splitter Windows to Scribble</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2"><h1><a name="_gs_add_splitter_windows_to_scribble"></a><sup></sup>Add Splitter Windows to Scribble</h1>
<p>
Adding splitter windows to Scribble requires two simple procedures:
<ol>
<li>
Add the member variable <code>m_wndSplitter</code> to class <code>CChildFrame</code>.<br><br></li>
<li>
Add the member function <code>OnCreateClient</code> to class <code>CChildFrame</code>. </li>
</ol>
<p>
After these procedures, you can build and run Scribble to test the splitter window functionality.</p>
<h3>Suggested Reading in the <i>Microsoft Foundation Class Reference</i></h3>
<ul type=disc>
<li>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_MFC_CSplitterWnd">
</object><a href=JavaScript:alink_1.Click()>CSplitterWnd</a> Overview</li>
</ul>
<p class=indent>
<B><b>Optional Exercise</b></B>&nbsp;&nbsp;&nbsp;When you select the splitter window option from AppWizard, AppWizard also generates a menu item, which the user can use instead of directly selecting the split box. To duplicate this feature, create a Split item on Scribble’s Window menu, and assign it an ID of <b>ID_WINDOW_SPLIT</b>. There’s no need to create a handler for it—the framework handles it automatically.</p>
<p class=label>
<b>To declare the CSplitterWnd member variable</b>
<ol>
<li>
In ClassView, point to the <code>CChildFrame</code> class icon and click the right mouse button.<br><br></li>
<li>
From the pop-up menu, click <b>Add Member Variable</b>.<p class=tl>
The <b>Add Member Variable</b> dialog box appears.</P></li>
<li>
In the <b>Variable Type</b> edit box, type: <code>CSplitterWnd</code>.<br><br></li>
<li>
In the <b>Variable Declaration</b> edit box, type: <code>m_wndSplitter</code>.<br><br></li>
<li>
In the <b>Access</b> area, click <b>Protected</b>.<br><br></li>
<li>
Click <b>OK</b>.<p class=tl>
You can view the new variable in ClassView under the <code>CChildFrame</code> class.</P></li>
</ol>
<p class=label>
<b>To add the OnCreateClient member function</b>
<ol>
<li>
Use WizardBar to open ChildFrm.cpp in the text editor.<br><br></li>
<li>
Click the arrow on the action button, located on the right end of WizardBar.<br><br></li>
<li>
On the menu, click <b>Add Virtual Function</b>.<p class=tl>
The <b>New Virtual Override</b> dialog box appears.</P></li>
<li>
From the <b>New Virtual Functions</b> list, select <code>OnCreateClient</code>.<br><br></li>
<li>
Click <b>Add and Edit</b>.<br><br></li>
<li>
Replace the //TODO comments with the following code:<pre><code>return m_wndSplitter.Create(this,
2, 2,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // TODO: adjust the number of rows, columns
CSize(10, 10),&nbsp; // TODO: adjust the minimum pane size
pContext);
</code></pre>
</li>
<li>
Save your work.<p class=tl>
You can view the new function in ClassView under the <code>CChildFrame </code>class.</P></li>
</ol>
<p>
In <code>OnCreateClient</code>, the frame window creates the window that will cover its client area by calling the <b>Create</b> function of its <b>CSplitterWnd</b> member variable. The following parameters passed to the <b>Create</b> function describe the panes that the splitter window will manage:
<ul type=disc>
<li>
The first parameter passed to <b>Create</b> specifies the parent window for the client window. The function passes the <b>this</b> pointer, making the <code>CScribbleFrame</code> window the parent of the <b>CSplitterWnd</b> object (the member variable, <code>m_wndSplitter</code>). <br><br></li>
<li>
The second and third parameters specify the maximum number of rows and columns that the splitter window can have. A value of two is used for each, so Scribble’s splitter windows can have up to four panes. <br><br></li>
<li>
The fourth parameter specifies the minimum size of a pane: a square 10 logical units on a side. <br><br></li>
<li>
The fifth parameter is the <b>CCreateContext</b> structure that is passed to <code>OnCreateClient</code>. This structure is used to determine which view class should be used for each pane in the splitter window. </li>
</ul>
<p>
The <b>Create</b> function accepts two additional arguments:
<ul type=disc>
<li>
The sixth argument specifies the styles to be used for the splitter window. The default value specifies a visible child window with vertical and horizontal scroll bars that supports dynamic splitting. <br><br></li>
<li>
The seventh argument specifies the ID to be assigned to the splitter window. Its default value is <b>AFX_IDW_PANE_FIRST</b>, which is the ID of the first pane. </li>
</ul>
<p>
Because Scribble doesn't pass any values for these, the default values are used. </p>
</font></BODY>
</HTML>
