<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The CSectionSet Recordset Class (DAO)</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2"><h1><a name="_gs_the_csectionset_recordset_class_.28.dao.29"></a>The CSectionSet Recordset Class (DAO)</h1>
<p>
The following procedure describes how to view the new recordset class, <code>CSectionSet</code>. After examining <code>CSectionSet</code>, you’ll use the text editor to examine the source files for classes <code>CSectionForm</code> and <code>CDaoEnrolDoc</code>.</p>
<p class=label>
<b>To examine the new recordset class</b>
<ol>
<li>
In ClassView, expand the DaoEnrol folder.<p class=tl>
Notice the set of classes AppWizard created for you automatically to support the DaoEnrol application.</P></li>
<li>
From the list of classes, expand <code>CSectionSet</code>.<p class=tl>
ClassView displays all the member variables that AppWizard created, including a variable for each of the Section table’s columns. You can use ClassWizard to view how AppWizard has bound the Section table’s columns to these member variables.</P></li>
<li>
From the <b>View</b> menu, click <b>ClassWizard</b>.<br><br></li>
<li>
Click the <b>Member Variables</b> tab.<br><br></li>
<li>
In the <b>Class name</b> box, select CSectionSet.<p class=tl>
What you see in this tab corresponds to the variables displayed in ClassView. AppWizard has bound all of the table’s columns to member variables of the <code>CSectionSet</code> class. These member variables are called “field data members.” AppWizard names the data members automatically, based on the column names from the data source. AppWizard also assigns the correct C++ or class library data type to the data members, based on the column type. In this example, all of the columns are text columns, mapped to type <b>CString</b>, except the Capacity column, which is a <b>short</b>.</P></li>
<li>
Once you’ve finished examining the <code>CSectionSet</code> recordset class, click <b>Cancel</b> to exit ClassWizard.</li>
</ol>
<p>
The following figure shows the ClassWizard <b>Column Names</b> list.</p>
<p class=label>
<b><a name="_gs_table_columns_mapped_to_recordset_data_members"></a>Table Columns Mapped to Recordset Data Members</b></p>
<p>
<img src="ct0610s.gif" border=0></p>
<p>
If you don’t want all of a table’s columns bound to your recordset, you can delete the recordset field data members for those columns you don’t want by selecting the data member and clicking the <b>Delete Variable</b> button. For the tutorial, you will need them all. </p>
<p class=indent>
<B><b>Caution</b></B>&nbsp;&nbsp;&nbsp;Don’t delete any fields that are part of the table’s primary key (in this case, the SectionNo and CourseID fields). </p>
<p>
To change the name of a field data member, delete the member and add it again with the new name.</p>
</font></BODY>
</HTML>
