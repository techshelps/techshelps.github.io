<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Displaying the Note Property</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_gs_displaying_the_note_property"></a>Displaying the Note Property</h1>
<p>
To display the Note property, change the drawing behavior in the <code>OnDraw</code> function in CIRCCTL.CPP. The Note property is drawn in the upper-left corner of the control's bounding rectangle, using the stock Font and ForeColor properties.</p>
<p class=label>
<b>To change the OnDraw function to display the Note property</b>
<ul type=disc>
<li>
Change or add the following lines in the <code>OnDraw</code> function in CIRCCTL.CPP:<pre><code>&nbsp;&nbsp;&nbsp;// Draw the caption and note using the stock Font and ForeColor properties
...
 &nbsp; pdc-&gt;SetTextAlign(TA_LEFT | TA_TOP);
 &nbsp; pdc-&gt;ExtTextOut(rc.left, rc.top,
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ETO_CLIPPED, rc, m_note, m_note.GetLength(), NULL);
</code></pre>
<p class=tl>
as shown in the following example:</P><pre><code>void CCircCtrl::OnDraw(
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CDC* pdc, const CRect&amp; rcBounds, const CRect&amp; rcInvalid)
{
 &nbsp;&nbsp; CBrush* pOldBrush;
 &nbsp;&nbsp; CBrush bkBrush(TranslateColor(GetBackColor()));
 &nbsp;&nbsp; CPen* pOldPen;
 &nbsp;&nbsp; CRect rc = rcBounds;
 &nbsp;&nbsp; CFont* pOldFont;
 &nbsp;&nbsp; TEXTMETRIC tm;
 &nbsp;&nbsp; const CString&amp; strCaption = InternalGetText();

 &nbsp;&nbsp; // Set the ForeColor property color and transparent background mode into the device context
 &nbsp;&nbsp; pdc-&gt;SetTextColor(TranslateColor(GetForeColor()));
 &nbsp;&nbsp; pdc-&gt;SetBkMode(TRANSPARENT);

 &nbsp;&nbsp; // Paint the background using the BackColor property
 &nbsp;&nbsp; pdc-&gt;FillRect(rcBounds, &amp;bkBrush);

 &nbsp;&nbsp; // Draw the ellipse using the BackColor property and a black pen
 &nbsp;&nbsp; GetDrawRect(&amp;rc);
 &nbsp;&nbsp; pOldBrush = pdc-&gt;SelectObject(&amp;bkBrush);
 &nbsp;&nbsp; pOldPen = (CPen*)pdc-&gt;SelectStockObject(BLACK_PEN);
 &nbsp;&nbsp; pdc-&gt;Ellipse(rc);

 &nbsp; // Draw the caption and note using the stock Font and ForeColor properties
 &nbsp;&nbsp; pOldFont = SelectStockFont(pdc);
 &nbsp;&nbsp; pdc-&gt;GetTextMetrics(&amp;tm);
 &nbsp;&nbsp; pdc-&gt;SetTextAlign(TA_CENTER | TA_TOP);
 &nbsp;&nbsp; pdc-&gt;ExtTextOut((rc.left + rc.right) / 2, (rc.top + rc.bottom - tm.tmHeight) / 2,
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ETO_CLIPPED, rc, strCaption, strCaption.GetLength(), NULL);
 &nbsp; pdc-&gt;SetTextAlign(TA_LEFT | TA_TOP);
 &nbsp; pdc-&gt;ExtTextOut(rc.left, rc.top,
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ETO_CLIPPED, rc, m_note, m_note.GetLength(), NULL);
 &nbsp;&nbsp; pdc-&gt;SelectObject(pOldFont);

 &nbsp;&nbsp; pdc-&gt;SelectObject(pOldPen);
 &nbsp;&nbsp; pdc-&gt;SelectObject(pOldBrush);
}
</code></pre>
</li>
</ul>
</font></BODY>
</HTML>
