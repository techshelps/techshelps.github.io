<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Define the Update Hint</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_gs_define_the_update_hint"></a>Define the Update Hint</h1>
<p>
The first task is to define the update hint.</p>
<p class=label>
<b>To define the update hint</b>
<ul type=disc>
<li>
Add the following two <b>#define</b> values to ContainerDoc.h, prior to the class declaration:<pre><code>#define HINT_UPDATE_WINDOW            0
#define HINT_UPDATE_ITEM                1
</code></pre>
<p class=tl>
The two <code>#define HINT_</code> values are used for the <b>LPARAM</b> <i>lHint</i> value passed to <a href="_gs_receive_the_hint_and_invalidate_the_view.htm">CContainerView::OnUpdate</a>, which you’ll create in the next step. The first hint value, <code>HINT_UPDATE_WINDOW</code>, has the framework’s default <i>lHint</i> value of 0, which means “no hint”: in other words, it is an instruction to invalidate the entire client area of the view. The second, <code>HINT_UPDATE_ITEM</code>, is used to invalidate the rectangle of the view’s client area occupied by the <b>COleClientItem</b> object. That rectangle is passed to <code>OnUpdate</code> using the <i>pHint</i> parameter.</P></li>
</ul>
</font></BODY>
</HTML>
