<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating a New Project</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2"><h1><a name="_gs_creating_a_new_project"></a>Creating a New Project</h1>
<p>
The stages in the development process are outlined here and briefly discussed within the context of Visual C++ and the development environment. They include:
<ul type=disc>
<li>
Creating the Project<br><br></li>
<li>
<a href="_gs_selecting_and_inserting_pre.2d.built_components.htm">Selecting and Inserting Pre-Built Components</a><br><br></li>
<li>
<a href="_gs_adding_and_editing_user.2d.interface_objects.htm">Adding and Editing User-Interface Objects</a><br><br></li>
<li>
<a href="_gs_connecting_user.2d.interface_objects_with_code.htm">Connecting User-Interface Objects with Code</a><br><br></li>
<li>
<a href="_gs_editing_code.htm">Editing Code</a><br><br></li>
<li>
<a href="_gs_compiling_and_building_your_project.htm">Compiling and Building Your Project</a><br><br></li>
<li>
<a href="_gs_debugging_the_application.htm">Debugging the Application</a></li>
</ul>
<p>
Each programmer may approach any given stage at a different time or in a different order; no preferred order is implied.</p>
<p>
Usually, you can use AppWizard to generate a robust set of application “starter” files. Within AppWizard, you specify the structure you’d like your application to take, and the options and features you’d like AppWizard to provide.</p>
<h2>Choosing a Project Type</h2>
<p>
You can use AppWizard to generate the following types of MFC projects:
<ul type=disc>
<li>
Executable<br><br></li>
<li>
DLL<br><br></li>
<li>
ActiveX control<p class=tl>
The <a href="_gs_creating_the_circle_control.htm">Circle Tutorial</a> demonstrates building an ActiveX control.</P></li>
<li>
Custom AppWizards<br><br></li>
<li>
ISAPI extension</li>
</ul>
<p>
You can create many non-MFC project types:
<ul type=disc>
<li>
Console applications<br><br></li>
<li>
Static libraries (not available in the Standard Edition)<br><br></li>
<li>
Projects based on external makefiles</li>
</ul>
<h3>Suggested Reading</h3>
<ul type=disc>
<li>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Building_Projects_Not_Created_in_the_Development_Environment">
</object><a href=JavaScript:alink_1.Click()>Building Projects Not Created in the Development Environment</a>, <i>Visual C++ Programmer’s Guide</i><br><br></li>
<li>
<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="Projects">
</object><a href=JavaScript:alink_2.Click()>Working with Projects</a>, <i>Visual C++ User’s Guide</i></li>
</ul>
<h2>Choosing an Application Type</h2>
<p>
Once you’ve chosen your project type, you’ll choose the application type. AppWizard provides the following types to choose from, with MDI being selected as the default.
<ul type=disc>
<li>
Single Document Interface (SDI)<p class=tl>
The <a href="_gs_creating_a_database_application.htm">Enroll Tutorial</a> is an SDI-based application.</P></li>
<li>
Multiple Document Interface (MDI)<p class=tl>
The <a href="_gs_scribble_tutorial.htm">Scribble Tutorial</a> demonstrates creating a simple MDI application.</P></li>
<li>
Dialog-based</li>
</ul>
<h2>Specifying Initial Application Features</h2>
<p>
After choosing a basic project and application type, your choices become more specific. AppWizard provides branching options you can use in various combinations to create the basis for sophisticated applications. For example, based on your specifications, AppWizard will generate MFC code for any of the following features:
<ul type=disc>
<li>
Standard menus and dialog boxes for opening, editing, arranging and saving files, previewing print jobs, and printing.<br><br></li>
<li>
ODBC and DAO support.<p class=tl>
The <a href="_gs_creating_a_database_application.htm">Enroll Tutorial</a> demonstrates building a simple database application with ODBC support. The <a href="_gs_data_access_objects_.28.dao.29_.tutorial.htm">DaoEnrol Tutorial</a> demonstrates the Enroll application using the DAO classes.</P></li>
<li>
Support for OLE, including support for:<ul type=disc>
<li>
OLE compound documents, both server and container.<p class=tl>
<a href="_gs_creating_an_ole_server.htm">Scribble Step 7</a> demonstrates adding OLE server support to Scribble. The <a href="_gs_creating_an_ole_container.htm">OLE Container Tutorial</a> demonstrates building an OLE container application.</P></li>
<li>
OLE compound files.<br><br></li>
<li>
Automation.<p class=tl>
The <a href="_gs_creating_an_automation_server.htm">AutoClik Tutorial</a> demonstrates building an Automation server.</P></li>
<li>
ActiveX controls.<p class=tl>
The <a href="_gs_creating_the_circle_control.htm">Circle Tutorial</a> demonstrates building an ActiveX control.</P></li>
</ul>
</li>
<li>
A dockable toolbar, status bar, and 3D controls.<br><br></li>
<li>
Windows Open System Architecture (WOSA) support, including the Messaging API (MAPI) and Windows sockets.<br><br></li>
<li>
Support for context-sensitive Help, including a menu and toolbar button. In addition, AppWizard provides initial .RTF (help project source) files.<p class=tl>
<a href="_gs_adding_context.2d.sensitive_help.htm">Scribble Step 6</a> is a complete tour of providing context-sensitive Help for your Visual C++ applications.</P></li>
</ul>
<h2>Custom AppWizards</h2>
<p>
If the options presented by AppWizard aren’t as tailored to your needs as you’d like, you can design a custom AppWizard that generates a set of starter project files. With a custom AppWizard, you can specify the basis for the application according to your needs, your company’s particular data sources, and so forth. Every time you run this custom AppWizard, it generates the starter files according to those specifications.</p>
<h3>Suggested Reading in the <i>Visual C++ Programmer’s Guide</i></h3>
<ul type=disc>
<li>
<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="custom appwiz">
</object><a href=JavaScript:alink_3.Click()>Creating Custom AppWizards</a></li>
</ul>
</font></BODY>
</HTML>
