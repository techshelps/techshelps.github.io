<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Refining OLE Container Functionality</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_gs_refining_ole_container_functionality"></a>Refining OLE Container Functionality</h1>
<h3>Container Application, Lesson 2</h3>
<p class=indent>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;If you prefer working from a printed tutorial, see <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="Copying and Printing">
</object><a href=JavaScript:alink_1.Click()>Copying and Printing</a> in <i>MSDN Library Help</i> for details about printing a lesson, a set of topics, or a single topic.</p>
<p>
As implemented in Step 1, Container is almost fully functional as a general-purpose OLE container application, but it needs some refinement. To accomplish this, Step 2 adds the following:
<ul type=disc>
<li>
<a href="_gs_adding_command_handlers_for_copy_and_paste.htm">Implementation of the Copy and Paste commands on the Edit menu</a>.<br><br></li>
<li>
<a href="_gs_using_smart_invalidation.htm">Implementation of smart invalidation</a> that optimizes Container to redraw only those objects that need to be redrawn, rather than redrawing all objects whenever one is changed.<br><br></li>
<li>
<a href="_gs_coordinating_with_server_to_determine_size_of_object.htm">Better coordination with the server to determine the size of contained objects</a>.<p class=tl>
To demonstrate why this is necessary, you will be asked to run Step 1 of Container. For that reason, you should save the Step 1 version of Container.exe before you start working on Step 2.</P></li>
</ul>
<p>
You will probably need to make similar refinements in your container applications, although the details may vary.</p>
<h3>Suggested Reading</h3>
<ul type=disc>
<li>
<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_OLE_Background.3a_.Containers_and_Servers">
</object><a href=JavaScript:alink_2.Click()>OLE Background: Containers and Servers</a>, <i>Visual C++ Programmer’s Guide</i><br><br></li>
<li>
<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_ActiveX_control_Containers">
</object><a href=JavaScript:alink_3.Click()>ActiveX Control Containers</a>, <i>Visual C++ Programmer’s Guide</i><br><br></li>
<li>
<object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_mfc_COleClientItem.3a3a.CopyToClipboard">
</object><a href=JavaScript:alink_4.Click()>COleClientItem::CopyToClipboard</a>, <i>Microsoft Foundation Class Reference</i></li>
</ul>
</font></BODY>
</HTML>
