<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Customizing the Dialog Template for the DaoEnrol Section Form</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2"><h1><a name="_gs_customizing_the_dialog_template_for_the_daoenrol_section_form"></a>Customizing the Dialog Template for the DaoEnrol Section Form</h1>
<p>
Along with the classes, AppWizard creates a dialog template resource named <code>IDD_DAOENROL_FORM</code>, which the <b>CDaoRecordView</b>-derived class, <code>CSectionForm</code>, uses to display its form controls. Because <b>CDaoRecordView</b> is derived from <b>CFormView</b>, a record view’s client area is laid out by a dialog template resource. The layout of the form is up to you. AppWizard places one static text control on the dialog template resource, labeled “TODO: Place form controls on this dialog.” </p>
<h3>Suggested Reading in the <i>Visual C++ User’s Guide</i></h3>
<ul type=disc>
<li>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="Dialog Editor">
</object><a href=JavaScript:alink_1.Click()>Overview: Dialog Editor</a></li>
</ul>
<p>
In the following procedure, you’ll replace this text with controls that correspond to columns in the table (via the field data members of the recordset). The table below lists the columns and their associated edit control IDs and variable names.</p>
<p class=label>
<b>DaoEnrol's Controls and Member Variables</b></p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=23%><b>Column name</b></td>
<td class=label width=36%><b>Control ID</b></td>
<td class=label width=41%><b>Variable Name</b></td>
</tr>
<tr valign=top>
<td width=23%>Course</td>
<td width=36%>IDC_COURSE</td>
<td width=41%><pre><code>m_pSet-&gt;m_CourseID</code></pre>
</td>
</tr>
<tr valign=top>
<td width=23%>Section</td>
<td width=36%>IDC_SECTION</td>
<td width=41%><pre><code>m_pSet-&gt;m_SectionNo</code></pre>
</td>
</tr>
<tr valign=top>
<td width=23%>Instructor</td>
<td width=36%>IDC_INSTRUCTOR</td>
<td width=41%><pre><code>m_pSet-&gt;m_InstructorID</code></pre>
</td>
</tr>
<tr valign=top>
<td width=23%>Room</td>
<td width=36%>IDC_ROOM</td>
<td width=41%><pre><code>m_pSet-&gt;m_RoomNo</code></pre>
</td>
</tr>
<tr valign=top>
<td width=23%>Schedule</td>
<td width=36%>IDC_SCHEDULE</td>
<td width=41%><pre><code>m_pSet-&gt;m_Schedule</code></pre>
</td>
</tr>
<tr valign=top>
<td width=23%>Capacity</td>
<td width=36%>IDC_CAPACITY</td>
<td width=41%><pre><code>m_pSet-&gt;m_Capacity</code></pre>
</td>
</tr>
</table><br>
<p class=label>
<b>To customize DaoEnrol’s form</b>
<ol>
<li>
In the ResourceView, double-click the DaoEnrol folder.<br><br></li>
<li>
Expand the Dialog folder.<br><br></li>
<li>
Double-click IDD_DAOENROL_FORM.<p class=tl>
The dialog editor opens and displays the dialog box with the corresponding ID.</P></li>
<li>
Select and then delete the static control that says “TODO: Place form controls on this dialog.” <br><br></li>
<li>
Design DaoEnrol’s Section form to resemble the figure <a href="#_gs_the_layout_of_daoenrol.92.s_section_form">The Layout of DaoEnrol’s Section Form</a>, using static controls and edit controls. <p class=atl>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;Press ALT+ENTER to display the Properties window, and then pin it down so it stays open while you add and edit the dialog box controls. </p><p class=tl>
Resize the dialog box as needed. You may want to add the controls in pairs, for example: static text control, then the corresponding edit control, and so on. </P></li>
<li>
For each edit control, use the <b>ID</b> box in the Properties window to specify an ID based on the table column names (for example, <code>IDC_COURSE</code>). This is only a convention, but it is used throughout the tutorial.<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The “Edit” caption that appears in each edit control is not visible to the user at run time, so you needn’t worry about deleting it. To view the dialog box as it will appear at run time, press CTRL+T to enter test mode for the dialog box. Press ESC to cancel test mode.</p></li>
<li>
Make the Course and Section edit controls read-only. To do so, select the <b>Styles</b> tab in the Properties window and set the <b>Read-only</b> check box. (The other edit controls are updatable.)<p class=tl>
According to a common rule in the user interface design of database forms, the user shouldn’t be able to update these key fields. If users want to change a course number or section of a Section record, they must delete the old Section record and add a new one to avoid possibly violating the referential integrity of the database. DaoEnrol Step 3 implements Add and Delete functionality.</P></li>
<li>
Save the DaoEnrol Resources (DaoEnrol.rc).<p class=tl>
It’s a good idea to periodically back up your work.</P></li>
</ol>
<p class=label>
<b><a name="_gs_the_layout_of_daoenrol.92.s_section_form"></a>The Layout of DaoEnrol’s Section Form</b></p>
<p>
<img src="ct0611s.gif" border=0></p>
<p>
If you did not add the static text and corresponding edit controls in order, one after the other, you need to change the tab order. You can easily check the current tab order and change it if necessary.</p>
<p class=label>
<b>To view or change the tab order of controls</b>
<ol>
<li>
With the dialog resource open, from the <b>Layout</b> menu click <b>Tab Order</b>.<p class=tl>
You’ll see numbers depicting the current tab order of the controls.</P></li>
<li>
Specify the tab order you want by clicking each control in that order.<p class=tl>
As you click, you’ll see the numbering change to reflect your choices. </P><p class=tl>
For DaoEnrol, specify a tab order such that each edit control is preceded in the tab order by the static text control that describes it. By specifying this tab order, you enable ClassWizard to derive a name for the edit control when you <a href="_gs_binding_daoenrol.92.s_controls_to_recordset_fields.htm">bind it to a data member</a>, as you’ll do in the next topic.</P></li>
</ol>
</font></BODY>
</HTML>
