<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating a Recordset for the Course Table in DaoEnrol</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2"><h1><a name="_gs_creating_a_recordset_for_the_course_table_in_daoenrol"></a>Creating a Recordset for the Course Table in DaoEnrol</h1>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Before starting this topic, you should have already completed the following instructions in the Enroll tutorial, Lesson 3:
<ul type=disc>
<li>
<a href="_gs_using_a_second_recordset.htm">Using a Second Recordset</a><br><br></li>
<li>
<a href="_gs_about_step_2.htm">About Step 2</a><br><br></li>
<li>
<a href="_gs_changing_the_course_control_to_a_combo_box.htm">Changing the Course Control to a Combo Box</a><br><br></li>
<li>
<a href="_gs_binding_the_combo_box_control_to_a_recordset_field_and_a_ccombobox_variable.htm">Binding the Combo Box Control to a Recordset Field and a CComboBox Variable</a></li>
</ul>
<h3>Suggested Reading in the <i>Visual C++ Programmer’s Guide</i></h3>
<ul type=disc>
<li>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="classwiz">
</object><a href=JavaScript:alink_1.Click()>Using ClassWizard</a><br><br></li>
<li>
<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="Gallery">
</object><a href=JavaScript:alink_2.Click()>Reusing Code: Overview</a><br><br></li>
<li>
<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_ClassWizard.3a_.Creating_a_Recordset_Class">
</object><a href=JavaScript:alink_3.Click()>ClassWizard: Creating a Recordset Class</a></li>
</ul>
<p>
DaoEnrol already has one recordset, for the Section table, which fills the controls on the <code>CSectionForm</code> record view with information about a single class section of the currently selected course name. Now you’ll add a second recordset, for the Course table, used to fill the combo box control with a list of all available course names.</p>
<p class=label>
<b>To create a new recordset class</b>
<ol>
<li>
From the <b>View</b> menu, click <b>ClassWizard</b>.<br><br></li>
<li>
Click <b>Add Class</b> and, from the menu, select <b>New</b>.<p class=tl>
This opens the <b>New Class</b> dialog box.</P></li>
<li>
Under <b>Class Information</b>, in the <b>Name</b> box, type <code>CCourseSet</code>. <br><br></li>
<li>
From the <b>Base Class</b> list, select CDaoRecordset.<br><br></li>
<li>
Click <b>Change</b> and shorten the filenames to CourseSe.h and CourseSe.cpp. Click <b>OK</b>.<br><br></li>
<li>
Click <b>OK</b>. <p class=tl>
This opens the <b>Database Options</b> dialog box.</P></li>
</ol>
<p class=label>
<b>To connect the recordset class to the Course table</b>
<ol>
<li>
In the Datasource area, click the <b>DAO</b> radio button to activate the list. Click the browse button [...] next to the DAO list. <p class=tl>
This displays the <b>Open</b> dialog box.</P></li>
<li>
Navigate to the StdReg32.mdb file and select it. Click <b>OK</b> to return to the <b>Database Options</b> dialog box, then click <b>OK</b> again.<p class=tl>
The <b>Select Database Tables</b> dialog box opens.</P></li>
<li>
Select the table name “Course,” and click <b>OK</b>. <p class=tl>
This connects the table name to class <code>CCourseSet</code> and returns you to the ClassWizard <b>Member Variables</b> tab. The <b>Class name</b> box shows <code>CCourseSet</code>, and three names are listed in the <b>Column Names</b> box. The table below shows the column names, their data members, and their data types. </P></li>
<li>
Click <b>OK</b> to close ClassWizard.</li>
</ol>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;On the <b>Member Variables</b> tab, you can see that all of the table’s columns are already assigned to field member variables. You can use ClassWizard to delete those variables if you don’t need to access or modify the columns — but be careful not to delete a field member variable for a column that is part of the table’s primary key. </p>
<p class=label>
<b>CCourseSet Data Members</b></p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=24%><b>Column name</b></td>
<td class=label width=20%><b>Type</b></td>
<td class=label width=56%><b>Data member</b></td>
</tr>
<tr valign=top>
<td width=24%>CourseID</td>
<td width=20%><b>CString</b></td>
<td width=56%><pre><code>m_CourseID</code></pre>
</td>
</tr>
<tr valign=top>
<td width=24%>CourseTitle</td>
<td width=20%><b>CString</b></td>
<td width=56%><pre><code>m_CourseTitle</code></pre>
</td>
</tr>
<tr valign=top>
<td width=24%>Hours</td>
<td width=20%><b>short</b></td>
<td width=56%><pre><code>m_Hours</code></pre>
</td>
</tr>
</table><br>
</font></BODY>
</HTML>
