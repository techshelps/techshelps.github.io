<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating a New DAO Database Application</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2"><h1><a name="_gs_creating_a_new_dao_database_application"></a>Creating a New DAO Database Application</h1>
<p>
When you use AppWizard to create a DAO database application, the only database type offered as a selection is the Microsoft Access .MDB database. Using either Access data in an .MDB file or an installable ISAM database as an attached table to an .MDB file gives your application the best performance for data retrieval and manipulation. The procedures in this tutorial assume that you are using the StdReg32.mdb file supplied on the Visual C++ distribution CD.</p>
<h3>Suggested Reading</h3>
<ul type=disc>
<li>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="begin database">
</object><a href=JavaScript:alink_1.Click()>Overview: Creating a Program That Supports a Database</a>, <i>Visual C++ Programmer’s Guide</i><br><br></li>
<li>
<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Serialization.3a_.Serialization_vs.._Database_Input.2f.Output">
</object><a href=JavaScript:alink_2.Click()>Serialization: Serialization vs. Database Input/Output</a>, <i>Visual C++ Programmer’s Guide</i><br><br></li>
<li>
<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="AppWiz">
</object><a href=JavaScript:alink_3.Click()>Visual C++ Wizards that Help You Begin Your Program</a>, <i>Visual C++ Programmer’s Guide</i><br><br></li>
<li>
<object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="ClassView">
</object><a href=JavaScript:alink_4.Click()>Overview: ClassView</a>, <i>Visual C++ User’s Guide</i></li>
</ul>
<p>
AppWizard lets you specify whether your database application uses a file as well as a database. The DaoEnrol application does not need a file, so it is based on the <b>Database view without file support</b> option in AppWizard.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The following procedure describes how to enter the correct values in the AppWizard Steps to create the DaoEnrol application. Many of the Steps contain choices that you will not use to create the starter files for DaoEnrol. </p>
<p class=label>
<b>To create the tutorial database application</b>
<ol>
<li>
From the <b>File</b> menu, click <b>New</b>.<p class=tl>
The <b>New</b> dialog box appears.</P></li>
<li>
Click the <b>Projects</b> tab.<br><br></li>
<li>
Fill in or select the remaining boxes as follows:<ul type=disc>
<li>
In the <b>Type</b> box, select MFC AppWizard (exe).<br><br></li>
<li>
In the <b>Project Name</b> box, type <code>DAOEnrol</code>.<p class=tl>
In the <b>Location</b> box, type the name of the directory in which you want your project files stored. AppWizard creates this directory if it doesn't exist.</P></li>
</ul>
</li>
<li>
Click <b>OK</b>.<p class=tl>
AppWizard creates the project directory, and the <b>MFC AppWizard&nbsp;–&nbsp;Step 1</b> dialog box appears.</P></li>
<li>
Click the <b>Single document</b> radio button, and then click <b>Next</b>.<br><br></li>
<li>
In the <b>MFC AppWizard&nbsp;–&nbsp;Step 2 of 6</b> dialog box: <ul type=disc>
<li>
Click <b>Database view without file support</b>.<p class=tl>
When you create a database application without file support, AppWizard always creates it as an SDI application. </P><p class=tl>
This enables the <b>Data Source</b> button.</P></li>
<li>
Click <b>Data Source</b>.<p class=tl>
The <b>Database Options</b> dialog box appears.</P></li>
<li>
Click <b>DAO</b> and, from the drop-down list box, navigate to and select the Microsoft Access file StdReg32.mdb, then click <b>OK</b>.<br><br></li>
<li>
AppWizard uses Dynaset as the default recordset type. The check box <b>Detect dirty columns</b> is checked by default. Click <b>OK</b>. The <b>Select Database Tables</b> dialog box appears. <br><br></li>
<li>
Select the table name <b>Section</b>, and click <b>OK</b> to return to the <b>MFC AppWizard&nbsp;–&nbsp;Step 2 of 6</b> dialog box. </li>
</ul>
</li>
<li>
Click <b>Next</b> to proceed to the rest of the AppWizard Steps.<br><br></li>
<li>
Click <b>Next</b> in AppWizard for Steps 3, 4, and 5 to accept the default options.<p class=tl>
In the <b>MFC AppWizard&nbsp;–&nbsp;Step 6 of 6</b> dialog box, you can check and, if necessary, modify the default names that AppWizard creates for your program’s classes and files. </P><p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;By default, AppWizard bases the names of classes on the project name you supply. This naming is probably fine if your application has only one recordset/record view pair. If your application has multiple recordsets and record views, it’s a good idea to change the name of the first recordset/record view pair created by AppWizard so the naming better reflects the name of the table in the data source. For DaoEnrol, you’ll modify two class names and their related header and implementation filenames, even though the tutorial uses only one recordset/record view pair.</p></li>
<li>
In <b>MFC AppWizard&nbsp;–&nbsp;Step 6 of 6</b>, make the following changes to class names:<ul type=disc>
<li>
Select the class <code>CDaoEnrolDoc</code>, and change it as follows:<p class=tl>
In the <b>Header file</b> box, change the header filename to <code>DenrlDoc.h</code>. </P><p class=tl>
In the <b>Implementation file</b> box, change the name to <code>DenrlDoc.cpp</code>.</P></li>
<li>
Select the class <code>CDaoEnrolView</code>, and change it as follows:<p class=tl>
In the <b>Class name</b> box, change its name to <code>CSectionForm</code>. </P><p class=tl>
In the <b>Header file</b> box, change the header filename to <code>SectForm.h</code>. </P><p class=tl>
In the <b>Implementation file</b> box, change the name to <code>SectForm.cpp</code>.</P><p class=tl>
The base class is <b>CDaoRecordView</b>.</P></li>
<li>
Select the class <code>CDaoEnrolSet</code>, and change it as follows<p class=tl>
In the <b>Class name</b> box, change its name to <code>CSectionSet</code>. </P><p class=tl>
In the <b>Header file</b> box, change the header filename to <code>SectSet.h</code>.</P><p class=tl>
In the <b>Implementation file</b> box, change the name to <code>SectSet.cpp</code>.</P><p class=tl>
The base class is <b>CDaoRecordset</b>. The edit item is disabled to show that you can’t change it.</P></li>
</ul>
</li>
<li>
Click <b>Finish</b>. <p class=tl>
The <b>New Project Information</b> dialog box appears, summarizing the settings and features AppWizard will generate for you when it creates your project.</P><p class=tl>
You might want to take a moment to examine the application type, classes, and features that AppWizard automatically provides.</P></li>
<li>
Click <b>OK</b> in the <b>New Project Information</b> dialog box.<p class=tl>
AppWizard creates all necessary files and opens the project. </P></li>
</ol>
<p>
Use ClassView to view the classes that AppWizard just created. </p>
</font></BODY>
</HTML>
