<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Receive the Hint and Invalidate the View</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_gs_receive_the_hint_and_invalidate_the_view"></a>Receive the Hint and Invalidate the View</h1>
<p>
The framework provides a mechanism for invalidating portions of a view by using the <i>lHint</i> and <i>pHint</i> parameters of <b>CView::OnUpdate</b>. This “update hint” mechanism is described in the Scribble tutorial and is used in Container.</p>
<p class=label>
<b>To receive the hint and invalidate the view</b>
<ol>
<li>
On the <b>View</b> menu, click <b>ClassWizard</b>.<br><br></li>
<li>
Click the <b>Message Maps</b> tab.<br><br></li>
<li>
In the <b>Class name</b> drop-down list box, select CContainerView.<br><br></li>
<li>
In the <b>Messages</b> list box, select OnUpdate, and click <b>Add Function</b>. This adds the <code>OnUpdate</code> function declaration to CContainerView.h and a starter function definition to CContainerView.cpp.<br><br></li>
<li>
Click <b>Edit code </b>to jump to the function definition in CContainerView.cpp.<br><br></li>
<li>
Implement <code>OnUpdate</code> by replacing the //TODO comment with the following code:<pre><code>switch (lHint)
{
case HINT_UPDATE_WINDOW:    // invalidate entire window
Invalidate();
break;
case HINT_UPDATE_ITEM:        // invalidate single item
{
CRectTracker tracker;
SetupTracker((CContainerItem*)pHint, &amp;tracker);
CRect rect;
tracker.GetTrueRect(rect);
InvalidateRect(rect);
}
break;
}
</code></pre>
<p class=tl>
The rectangle to be invalidated for <code>HINT_UPDATE_ITEM</code> should include the area that might be occupied by a tracker around the object. The implementation of <code>CContainerView::OnUpdate</code> takes this into account.</P></li>
</ol>
</font></BODY>
</HTML>
