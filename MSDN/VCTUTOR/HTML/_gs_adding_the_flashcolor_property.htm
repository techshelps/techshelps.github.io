<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Adding the FlashColor Property</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_gs_adding_the_flashcolor_property"></a>Adding the FlashColor Property</h1>
<p>
The FlashColor property holds the color value that flashes within the control circle. Windows represents a color as a 32-bit value, defined as a <b>COLORREF</b> type. The ActiveX control classes do not directly support the <b>COLORREF</b> type, but they do support an <b>OLE_COLOR</b> type that can hold the required information. Thus, the FlashColor property is defined as an <b>OLE_COLOR</b> type.</p>
<p>
The FlashColor property requires no special processing when its value is changed or accessed. For this reason, FlashColor can be defined as a simple member variable property.</p>
<p class=label>
<b>To add the FlashColor property</b>
<ol>
<li>
On the <b>View</b> menu, click <b>ClassWizard</b>.<br><br></li>
<li>
Click the <b>Automation</b> tab.<br><br></li>
<li>
From the <b>Class name</b> drop-down list box, select CCircCtrl.<br><br></li>
<li>
Click <b>Add</b> <b>Property</b>.<p class=tl>
The <b>Add</b> <b>Property</b> dialog box appears.</P></li>
<li>
In the edit control of the <b>External</b> <b>name</b> drop-down combo box, type <code>FlashColor</code>.<br><br></li>
<li>
From the <b>Type</b> list box, select OLE_COLOR.<br><br></li>
<li>
Under <b>Implementation</b>, select <b>Member</b> <b>variable</b> (it may already be selected).<br><br></li>
<li>
Verify that the <b>Notification function</b> edit control contains <code>OnFlashColorChanged</code> and that the <b>Variable name</b> edit control contains <code>m_flashColor</code>.<br><br></li>
<li>
Click <b>OK</b> to close the <b>Add</b> <b>Property</b> dialog box.<p class=tl>
This returns you to the <b>Automation</b> tab. Notice that the implementation of the FlashColor property appears as:</P><pre><code>Implementation:
OLE_COLOR m_flashColor;
void OnFlashColorChanged();
</code></pre>
</li>
<li>
Click <b>OK</b> to confirm your choices and close ClassWizard.</li>
</ol>
<p>
ClassWizard creates the code to add the FlashColor property, modifying both the <code>CCircCtrl</code> class and the CIRC.ODL file. Because FlashColor is a member variable property type, ClassWizard modifies the <code>CCircCtrl</code> class's dispatch map in CIRCCTL.CPP to include a <b>DISP_PROPERTY_NOTIFY</b> macro entry:</p>
<pre><code>BEGIN_DISPATCH_MAP(CCircCtrl, COleControl)
 &nbsp;&nbsp; //{{AFX_DISPATCH_MAP(CCircCtrl)
 &nbsp;&nbsp; DISP_PROPERTY_NOTIFY(CCircCtrl, "FlashColor",
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_flashColor, OnFlashColorChanged, VT_COLOR)
 &nbsp;&nbsp; DISP_PROPERTY_NOTIFY(CCircCtrl, "CircleShape",
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_circleShape, OnCircleShapeChanged, VT_BOOL)
 &nbsp;&nbsp; DISP_PROPERTY_EX(CCircCtrl, "CircleOffset",
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GetCircleOffset, SetCircleOffset, VT_I2)
 &nbsp;&nbsp; DISP_STOCKPROP_BACKCOLOR()
 &nbsp;&nbsp; //}}AFX_DISPATCH_MAP
 &nbsp;&nbsp; DISP_FUNCTION_ID(CCircCtrl, "AboutBox",
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DISPID_ABOUTBOX, AboutBox, VT_EMPTY, VTS_NONE)
END_DISPATCH_MAP()
</code></pre>
<p>
The <b>DISP_PROPERTY_NOTIFY</b> macro associates the FlashColor property name with the following:
<ul type=disc>
<li>
Its corresponding <code>CCircCtrl</code> class member variable<br><br></li>
<li>
The name of the <code>CCircCtrl</code> class notification function (<code>OnFlashColorChanged</code>) that is called whenever the value of the FlashColor property is changed<br><br></li>
<li>
Its type, <b>VT_COLOR</b>, which corresponds to an <b>OLE_COLOR</b> value</li>
</ul>
<p>
ClassWizard also adds a declaration for the <code>OnFlashColorChanged</code> notification function in CIRCCTL.H and a function template in CIRCCTL.CPP:</p>
<pre><code>void CCircCtrl::OnFlashColorChanged()
{
 &nbsp;&nbsp; // TODO: Add notification handler code
 &nbsp;&nbsp; SetModifiedFlag();
}
</code></pre>
</font></BODY>
</HTML>
