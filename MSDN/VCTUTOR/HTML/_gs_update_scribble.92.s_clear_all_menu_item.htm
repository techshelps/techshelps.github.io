<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Update Scribble's Clear All Menu Item</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2"><h1><a name="_gs_update_scribble.92.s_clear_all_menu_item"></a><sup></sup>Update Scribble’s Clear All Menu Item</h1>
<p>
This topic presents the steps you will take to update the Clear All menu item on Scribble’s Edit menu. The update command is handled by the document object, which has the necessary information on whether there are any strokes in the current drawing to clear. </p>
<p>
Recall how you used WizardBar to create a starter handler for the Edit menu’s Clear All command earlier in this lesson, in the topic <a href="_gs_bind_scribble.92.s_clear_all_command_to_its_handler_code.htm">Bind Scribble’s Clear All Command to Its Handler Code</a>; then you filled in the handler code. In this topic you’ll use WizardBar to create a starter handler for the update command, which you’ll then fill in with Scribble-specific code.</p>
<p class=label>
<b>To add an update handler for Scribble’s Clear All menu</b>
<ol>
<li>
Using WizardBar, open ScribbleDoc.cpp in the text editor.<br><br></li>
<li>
In the WizardBar <b>Filter</b> combo box, select ID_EDIT_CLEAR_ALL.<br><br></li>
<li>
Click the action button arrow on the right end of WizardBar and click <b>Add Windows Message Handler</b>.<br><br></li>
<li>
In the <b>New Windows messages to handle</b> box, select UPDATE_COMMAND_UI. Click <b>Add and Edit</b>.<p class=tl>
The <b>Add Member Function</b> dialog box appears, displaying a suggested name for the handler.</P></li>
<li>
Click <b>OK</b> to accept the name <code>OnUpdateEditClearAll</code>.<p class=tl>
WizardBar creates the function template for <code>OnUpdateEditClearAll</code> at the end of the file.</P></li>
<li>
Replace the //TODO comment text with the following code:<pre><code>// Enable the user-interface object (menu item or tool- 
// bar button) if the document is non-empty, i.e., has 
// at least one stroke.
pCmdUI-&gt;Enable( !m_strokeList.IsEmpty( ) );
</code></pre>
</li>
<li>
Save your work.</li>
</ol>
<p>
The <code>OnUpdateEditClearAll</code> handler takes one argument, a pointer to a <b>CCmdUI</b> object that contains information about the Clear All menu item on Scribble’s Edit menu.</p>
<p>
The pointer to a <b>CCmdUI</b> object, <code>pCmdUI</code>, is used to access a <b>CCmdUI</b> member function, <b>Enable</b>. <b>Enable</b> takes one Boolean argument. In this code, the expression <code>!m_strokeList.IsEmpty( )</code> evaluates to nonzero if the document has at least one stroke to clear. If the expression evaluates to zero (no strokes), the menu item is disabled (and dimmed or grayed).</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;When the user opens a menu, the update handlers for all items on the menu are called before the user sees the menu displayed. Thus it’s important not to perform a lot of processing in your update handlers.</p>
<p>
When you added the update command handler for the Clear All menu item, ClassWizard wrote the following message-map entry in the document’s message map in ScribbleDoc.cpp:</p>
<pre><code>&nbsp;&nbsp;&nbsp;ON_UPDATE_COMMAND_UI( ID_EDIT_CLEAR_ALL, OnUpdateEditClearAll )
</code></pre>
<p>
The ON_UPDATE_COMMAND_UI macro resembles the ON_COMMAND macro for the <code>OnEditClearAll</code> message handler.</p>
<p>
In addition, ClassWizard added a new member function declaration for <code>OnUpdateEditClearAll</code> to the <code>CScribbleDoc</code> class definition in ScribbleDoc.h. The function declaration looks like this:</p>
<pre><code>afx_msg void OnUpdateEditClearAll( CCmdUI* pCmdUI );
</code></pre>
</font></BODY>
</HTML>
