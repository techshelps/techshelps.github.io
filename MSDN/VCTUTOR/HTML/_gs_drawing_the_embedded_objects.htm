<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Drawing the Embedded Objects</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_gs_drawing_the_embedded_objects"></a>Drawing the Embedded Objects</h1>
<p>
The AppWizard-provided implementation of <code>CContainerView::OnDraw</code> simply draws the one embedded object pointed to by <code>m_pSelection</code>. Now that Container supports multiple embedded objects, <code>OnDraw</code> must be reimplemented accordingly.</p>
<p class=label>
<b>To support drawing of multiple embedded objects</b>
<ul type=disc>
<li>
Use ClassView to jump to the <code>OnDraw</code> function in class <code>CContainerView</code>. Replace the //TODO comment and the implementation provided by AppWizard with the following code (start after the <code>ASSERT </code>statement):<pre><code>// draw the OLE items from the list
POSITION pos = pDoc-&gt;GetStartPosition();
while (pos != NULL)
{
// draw the item
CContainerItem* pItem = (CContainerItem*)pDoc-&gt;GetNextItem(pos);
pItem-&gt;Draw(pDC, pItem-&gt;m_rect);

// draw the tracker over the item
CRectTracker tracker;
SetupTracker(pItem, &amp;tracker);
tracker.Draw(pDC);
}
</code></pre>
</li>
</ul>
<p>
Again, a <b>CRectTracker</b> object is used to draw the rectangle and possibly resize handles around the embedded object. The <b>CRectTracker</b> object lives only long enough to draw during this particular repaint. Another <b>CRectTracker</b> object was used, as you saw above, to handle a click on one of the resize handles. Yet another <b>CRectTracker</b> object was used to change the shape of the cursor when it was over one of the resize handles. Each of these <b>CRectTracker</b> objects is short lived; that is, they are automatic (local) variables of the respective Windows event handler. They were all initialized with the common code you added earlier to <code>SetupTracker</code>.</p>
</font></BODY>
</HTML>
