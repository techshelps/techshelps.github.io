<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How the Framework Supports Splitting</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2"><h1><a name="_gs_how_the_framework_supports_splitting"></a>How the Framework Supports Splitting</h1>
<p>
For a multiple-document interface (MDI) application such as Scribble to support splitting, objects of three classes must cooperate to display a document: 
<ul type=disc>
<li>
A <b>CMDIChildWnd </b>object, which manages the document window’s frame<br><br></li>
<li>
A <b>CSplitterWnd</b> object, which manages the document window’s client area<br><br></li>
<li>
One or more <code>CScribbleView</code> objects, each of which manages a pane in the window</li>
</ul>
<p>
The <b>CSplitterWnd</b> object is not visible as a distinct entity, but it is responsible for handling the <code>CScribbleView</code> objects as panes, managing their scroll bars, and drawing the split boxes and split bars. </p>
<p>
This technique for managing splitter windows is similar to the implementation of MDI in general. A client window manages the entire client area, or workspace, of an MDI application’s frame window. It is this client window that owns the child windows that display documents.</p>
<p>
Because you specified Scribble as an MDI application, AppWizard creates the <code>CChildFrame</code> class, derived from <b>CMDIChildWnd</b>. You’ll add the code to support splitter windows in Scribble to this class. If Scribble were a single-document interface (SDI) application, you would add the splitter window functionality directly to the <b>CMainFrame</b> class.</p>
<p>
You can add splitter window functionality to your application in one of two ways: 
<ul type=disc>
<li>
You can click the <b>Use Splitter Window</b> option in AppWizard when you first create the application’s starter files. This method performs the tasks outlined below for you.<br><br></li>
<li>
You can add this functionality manually, using ClassWizard to automate the process somewhat. </li>
</ul>
<p>
You’ll use the manual method for Scribble to learn how simply the framework implements this feature. The method for using AppWizard is described later in this lesson, in the topic <a href="_gs_adding_splitter_window_functionality_from_appwizard.htm#_gs_to_add_splitter_windows_using_appwizard">Adding Splitter Window Functionality by Using AppWizard</a>.</p>
</font></BODY>
</HTML>
