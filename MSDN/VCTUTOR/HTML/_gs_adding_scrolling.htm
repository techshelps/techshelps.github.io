<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Adding Scrolling</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2"><h1><a name="_gs_adding_scrolling"></a><sup></sup>Adding Scrolling</h1>
<p>
In the current version of Scribble, you cannot work on a drawing that is larger than the window. To allow the user to work on a large drawing, no matter how small the window is, Scribble must support scrolling.</p>
<p>
The addition of scrolling expands the conceptual role played by a view. Not only does a view produce a visual representation of a document’s data, it also acts as a peephole to a document that may be too large to display all at once. This peephole can be moved across the document to reveal different portions of it. This is illustrated in the figure below.</p>
<p class=label>
<b>A Scrollable View on a Document</b></p>
<p>
<img src="ct0231c.gif" border=0></p>
<p>
Implementing scrolling from scratch is fairly complicated. However, since a lot of the scrolling code is the same for all applications, MFC implements the common scrolling logic in a class called <b>CScrollView</b>. </p>
</font></BODY>
</HTML>
