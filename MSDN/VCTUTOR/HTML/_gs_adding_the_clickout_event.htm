<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Adding the ClickOut Event</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_gs_adding_the_clickout_event"></a><sup></sup>Adding the ClickOut Event</h1>
<p>
When the user clicks the left mouse button and the insertion point is outside the control circle, the ClickOut event should fire. The ClickOut event is simpler than the ClickIn event in that it defines no arguments. </p>
<p class=label>
<b>To add the ClickOut event</b>
<ol>
<li>
On the <b>View</b> menu, click <b>ClassWizard</b>.<br><br></li>
<li>
Click the <b>ActiveX</b> <b>Events</b> tab.<br><br></li>
<li>
From the <b>Class</b> <b>name</b> drop-down list box, select CCircCtrl.<br><br></li>
<li>
Click <b>Add</b> <b>Event</b>.<p class=tl>
The <b>Add</b> <b>Event</b> dialog box appears.</P></li>
<li>
In the edit control of the <b>External</b> <b>name</b> drop-down combo box, type <code>ClickOut</code>.<br><br></li>
<li>
Click <b>OK</b> to close the <b>Add</b> <b>Event</b> dialog box.<p class=tl>
This returns you to the <b>ActiveX</b> <b>Events</b> tab. Notice that the implementation of the ClickOut event appears as:</P><pre><code>Implementation:
void FireClickOut();
</code></pre>
</li>
<li>
Click <b>OK</b> to confirm your choices and close ClassWizard.</li>
</ol>
<p>
As with the ClickIn event, ClassWizard creates the code to add the ClickOut event, modifying the files CIRC.ODL, CIRCCTL.H, and CIRCCTL.CPP.</p>
<p>
ClassWizard modifies the <code>CCircCtrl</code> class’s event map in CIRCCTL.CPP to add a macro entry for the ClickOut event:</p>
<pre><code>BEGIN_EVENT_MAP(CCircCtrl, COleControl)
 &nbsp;&nbsp; //{{AFX_EVENT_MAP(CCircCtrl)
 &nbsp;&nbsp; EVENT_CUSTOM("ClickIn", FireClickIn, VTS_XPOS_PIXELS&nbsp; VTS_YPOS_PIXELS)
 &nbsp;&nbsp; EVENT_CUSTOM("ClickOut", FireClickOut, VTS_NONE)
 &nbsp;&nbsp; //}}AFX_EVENT_MAP
END_EVENT_MAP()
</code></pre>
<p>
The macro <b>EVENT_CUSTOM</b> associates the ClickOut event name with the member function <code>FireClickOut</code> and with its argument type definition. The ClickOut argument type definition is set to <b>VTS_NONE</b>, which indicates that the ClickOut event passes no arguments.</p>
<p>
ClassWizard adds an inline function to the <code>CCircCtrl</code> class declaration. The <code>FireClickOut</code> function provides a type-safe call to fire the event:</p>
<pre><code>class CCircCtrl : public COleControl
{
 &nbsp;&nbsp; ...
 &nbsp;&nbsp; //{{AFX_EVENT(CCircCtrl)
 &nbsp;&nbsp; void FireClickIn(OLE_XPOS_PIXELS x, OLE_YPOS_PIXELS y)
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {FireEvent(eventidClickIn,EVENT_PARAM(VTS_XPOS_PIXELS&nbsp; VTS_YPOS_PIXELS),
 &nbsp;&nbsp; x, y);}
 &nbsp;&nbsp; void FireClickOut()
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {FireEvent(eventidClickOut,EVENT_PARAM(VTS_NONE));}
 &nbsp;&nbsp; //}}AFX_EVENT
 &nbsp;&nbsp; ...
}
</code></pre>
</font></BODY>
</HTML>
