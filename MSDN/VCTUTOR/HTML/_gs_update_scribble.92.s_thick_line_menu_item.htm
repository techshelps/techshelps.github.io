<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Update Scribble's Thick Line Menu Item</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2"><h1><a name="_gs_update_scribble.92.s_thick_line_menu_item"></a>Update Scribble’s Thick Line Menu Item</h1>
<p>
Updating the Thick Line menu item is similar to updating the Clear All menu. In this case, however, rather than enabling or disabling the menu item, the handler puts a check mark beside the item or removes an existing check mark. </p>
<p class=label>
<b>To add an update handler for the Thick Line menu item</b>
<ol>
<li>
In the WizardBar <b>Filter</b> combo box, select ID_PEN_THICK_OR_THIN.<br><br></li>
<li>
Click the action button arrow on the right end of WizardBar and click <b>Add Windows Message Handler</b>.<br><br></li>
<li>
In the <b>New Windows messages to handle</b> box, select UPDATE_COMMAND_UI. Click <b>Add and Edit</b>.<p class=tl>
The <b>Add Member Function</b> dialog box appears, displaying a suggested name for the handler.</P></li>
<li>
Click <b>OK</b> in the <b>Add Member Function</b> dialog box to accept the name <code>OnUpdatePenThickOrThin</code>, and to create the handler.<br><br></li>
<li>
Replace the //TODO comments with the following code:<pre><code>// Add check mark to Pen Thick Line menu item if the current
// pen width is "thick."
pCmdUI-&gt;SetCheck( m_bThickPen );
</code></pre>
</li>
<li>
Save your work.</li>
</ol>
<p>
Rather than enabling or disabling the menu command, this handler uses the pointer to a <b>CCmdUI</b> object to call the <b>SetCheck</b> member function. <b>SetCheck</b> puts a check mark in front of a menu item if its argument evaluates to <b>TRUE</b> and removes the check if the argument evaluates to <b>FALSE</b>. In this case, the expression <code>m_bThickPen</code> is a member variable of <code>CScribbleDoc</code>. It evaluates <b>TRUE</b> if the line thickness is currently set to thick. Since the value of <code>m_bThickPen</code> is passed to <b>SetCheck</b>, the effect is to toggle the menu item’s check mark on or off as the line thickness changes.</p>
<p>
The ON_UPDATE_COMMAND_UI message-map entry and the <code>OnUpdatePenThickOrThin</code> message handler serve to update the state of the Thick Line button on the toolbar as well as the Thick Line menu item. The code line</p>
<pre><code>pCmdUI-&gt;SetCheck( m_bThickPen );
</code></pre>
<p>
adjusts the state of the toolbar button as well as updates the checked state of the menu item. For a toolbar button, “checked” means depressed.</p>
<p>
In this example, the user would previously have reset the line thickness. The next time the user clicks the Pen menu item (or the toolbar button), the user-interface update mechanism takes care of updating the check mark to match the current thickness. Similarly, the toolbar button’s state toggles between a “pressed down” appearance and a normal appearance.</p>
<p>
As with the update handler for Clear All, ClassWizard adds a message-map entry for <code>OnUpdatePenThickOrThin</code> to the document’s message map in ScribbleDoc.cpp:</p>
<pre><code>BEGIN_MESSAGE_MAP( CScribbleDoc, CDocument )
   //{{AFX_MSG_MAP(CScribbleDoc)
   // Other message-map entries
   ON_UPDATE_COMMAND_UI(ID_PEN_THICK_OR_THIN,OnUpdatePenThickOrThin)
   //}}AFX_MSG_MAP
END_MESSAGE_MAP( )
</code></pre>
<p>
ClassWizard also adds a member function declaration to the document class definition in ScribbleDoc.h:</p>
<pre><code>afx_msg void OnUpdatePenThickOrThin( CCmdUI* pCmdUI );
</code></pre>
</font></BODY>
</HTML>
