<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Implementing Autoclik's ShowWindow</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2"><h1><a name="_gs_implementing_autoclik.92.s_showwindow"></a>Implementing Autoclik’s ShowWindow</h1>
<p>
In the following procedure, you will add and implement <code>ShowWindow</code> as a method. You need this method because AutoClik leaves its frame window hidden when it is initially launched by the Automation client. This is the default behavior implemented by AppWizard, which is appropriate for most Automation servers. Typically, the Automation server gives the Automation client control over when the server window is shown or hidden. If you want your Automation server to show its frame window right at the time it is launched by the Automation client, simply remove the <code>RunAutomated</code> condition in the following <b>if</b> statement provided by AppWizard in the application’s <code>InitInstance</code> routine (in AutoClik.cpp):</p>
<pre><code>BOOL CAutoClickApp::InitInstance()
{
   ...

      // Check to see if launched as OLE server
   if (cmdInfo.m_bRunEmbedded || cmdInfo.m_bRunAutomated)
   {
      // Application was run with /Embedding or /Automation.&nbsp; Don't show the
      //&nbsp; main window in this case.
      return TRUE;
   }

   ...

// The main window has been initialized, so show and update it.
   pMainFrame-&gt;ShowWindow(m_nCmdShow);
   pMainFrame-&gt;UpdateWindow();

   return TRUE;</code></pre>
<p>
}</p>
<p class=label>
<b>To add the ShowWindow method</b>
<ol>
<li>
From the <b>View</b> menu, click <b>ClassWizard</b>.<br><br></li>
<li>
Click the <b>Automation</b> tab.<br><br></li>
<li>
In the <b>Class name</b> box, select CAutoClickDoc, if it is not already selected, and click <b>Add Method</b>.<p class=tl>
The <b>Add Method</b> dialog box appears.</P></li>
<li>
In the <b>External name</b> box, type <code>ShowWindow</code>, and accept ClassWizard’s proposal to reuse this as the Internal name, which is the name of the class member function.<br><br></li>
<li>
In the <b>Return type</b> box, select void.<p class=tl>
Click <b>OK</b> to return to the <b>Automation</b> tab (this method has no parameters).</P></li>
<li>
Click <b>Edit Code</b>.<p class=tl>
This takes you to the starter implementation of <code>ShowWindow</code> created in AutoClickDoc.cpp by ClassWizard.</P></li>
<li>
Implement <code>ShowWindow</code> with the following code:<pre><code>POSITION pos = GetFirstViewPosition();
CView* pView = GetNextView(pos);
if (pView != NULL)
{
CFrameWnd* pFrameWnd = pView-&gt;GetParentFrame();
pFrameWnd-&gt;ActivateFrame(SW_SHOW);
pFrameWnd = pFrameWnd-&gt;GetParentFrame();
if (pFrameWnd != NULL)
pFrameWnd-&gt;ActivateFrame(SW_SHOW);
}    
</code></pre>
</li>
</ol>
</font></BODY>
</HTML>
