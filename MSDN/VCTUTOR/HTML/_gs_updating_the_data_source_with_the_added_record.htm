<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Updating the Data Source with the Added Record</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_gs_updating_the_data_source_with_the_added_record"></a><sup></sup>Updating the Data Source with the Added Record</h1>
<p>
Add mode is completed when the user moves off the record. Enroll implements this by overriding the <b>CRecordView::OnMove</b> member function. </p>
<h3>Suggested Reading</h3>
<ul type=disc>
<li>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_MFC_CRecordView.3a3a.OnMove">
</object><a href=JavaScript:alink_1.Click()>CRecordView::OnMove</a>, <i>Microsoft Foundation Class Reference</i><br><br></li>
<li>
<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="wizbar">
</object><a href=JavaScript:alink_2.Click()>Using WizardBar</a>, <i>Visual C++ Programmer’s Guide</i><br><br></li>
<li>
<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Recordset.3a_.Adding.2c_.Updating.2c_.and_Deleting_Records_.28.ODBC.29">
</object><a href=JavaScript:alink_3.Click()>Recordset: Adding, Updating, and Deleting Records (ODBC)</a>, <i>Visual C++ Programmer’s Guide</i>.</li>
</ul>
<p class=label>
<b>To implement Add functionality in the OnMove function override</b>
<ol>
<li>
From the <b>View</b> menu, click <b>ClassWizard</b>.<br><br></li>
<li>
In the <b>Class name</b> box, click CSectionForm.<br><br></li>
<li>
In the <b>Object IDs</b> list, select <code>CSectionForm</code>.<br><br></li>
<li>
In the <b>Messages</b> box, select <code>OnMove</code>.<br><br></li>
<li>
Click <b>Add function</b>.<br><br></li>
<li>
Click <b>Edit code</b> to jump to the starter <code>OnMove</code> function, and replace the highlighted //TODO comment with the following code:<pre><code>if (m_bAddMode) 
{
if (!UpdateData())
return FALSE;
TRY
{
m_pSet-&gt;Update();
}
CATCH(CDBException, e)
{
AfxMessageBox(e-&gt;m_strError);
return FALSE;
}
END_CATCH

m_pSet-&gt;Requery();
UpdateData(FALSE);
m_ctlSection.SetReadOnly(TRUE);
m_bAddMode = FALSE;
return TRUE;
}
else
{
return CRecordView::OnMove(nIDMoveCommand);
}
</code></pre>
</li>
</ol>
<p>
Catch any exceptions thrown by the recordset’s <b>Update</b> function so that errors are reported to the user. The <b>CDBException</b> data member <b>m_strError</b> is a fairly user-friendly error message, prepared by the underlying ODBC driver.</p>
<p>
In its default <b>CRecordView</b> implementation, <b>OnMove</b> moves to the next, previous, first, or last record. If the application has changed the recordset field data members for the current record before the move, the framework updates the data source before moving to another record.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Some ODBC drivers do not reflect newly added records in the recordset; others do. For those drivers that don’t display newly added records, to make the added records visible you must requery the database.</p>
<p>
Step 3 augments the default <b>CRecordView</b> user interface for updating the current record. If the user is in add mode and then moves off the new record, Enroll adds the newly prepared record to the data source before moving to another record. But you must decide whether it’s important for added records to be immediately visible. For the tutorial, the decision is to requery the recordset (evident in the code above) after each add operation so the newly added record is included in the recordset.</p>
<p>
Normally, the move commands behave as you might expect: Move Next moves to the next record, and so on. But as a consequence of the decision to requery during the add operation, when the user clicks any move command when adding a record, Enroll always effectively moves to the first record. That’s because requerying the recordset automatically sets the recordset to the first record.</p>
</font></BODY>
</HTML>
