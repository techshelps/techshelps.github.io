<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating the Basic Control</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_gs_creating_the_basic_control"></a>Creating the Basic Control</h1>
<p>
The first step in developing an ActiveX control is to use the MFC ActiveX ControlWizard to create the project. ControlWizard creates an ActiveX control project framework, including a basic set of classes, resources, and definition files. You will use ControlWizard to create the first version of the Circle control, which can draw itself as the outline of an ellipse. No properties, events, or methods are implemented in this step.</p>
<h3>Suggested Reading</h3>
<ul type=disc>
<li>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="ActiveX controls">
</object><a href=JavaScript:alink_1.Click()>Overview: Creating an MFC ActiveX Control Program</a>, <i>Visual C++ Programmer's Guide</i></li>
</ul>
<p class=label>
<b>To create the Circle control</b>
<ol>
<li>
On the <b>File </b>menu, click <b>New</b>.<br><br></li>
<li>
In the <b>New</b> dialog box, click the <b>Projects </b>tab.<br><br></li>
<li>
Click <b>MFC ActiveX ControlWizard</b>.<br><br></li>
<li>
In the <b>Project Name</b> text box, type <code>Circ</code>.<br><br></li>
<li>
Using the <b>Location</b> edit box and <b>Browse</b> button, select an appropriate project path.<br><br></li>
<li>
In the <b>Platforms</b> box, choose the appropriate platforms (in this case, Win32).<br><br></li>
<li>
Click <b>OK</b>.<p class=tl>
The first <b>MFC ActiveX ControlWizard</b> dialog box appears.</P></li>
<li>
Click <b>Finish</b>.<p class=tl>
ActiveX ControlWizard closes and the <b>New Project Information</b> dialog box appears.</P></li>
<li>
Click <b>OK</b>.<p class=tl>
The <b>New Control Information</b> dialog box closes and the project is created and opened in the development environment.</P></li>
</ol>
<p>
ControlWizard creates all of the necessary files to build the Circle control. Of these files, three class templates are created:</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=25%><b>Class</b></td>
<td class=label width=23%><b>Files</b></td>
<td class=label width=52%><b>Comments</b></td>
</tr>
<tr valign=top>
<td width=25%><code>Circapp</code></td>
<td width=23%>CIRC.H<br>
CIRC.CPP</td>
<td width=52%>Implements the main DLL source. Typically, there is no need to modify this code.</td>
</tr>
<tr valign=top>
<td width=25%><code>CCircCtrl</code></td>
<td width=23%>CIRCCTL.H<br>
CIRCCTL.CPP</td>
<td width=52%>Implements the actual control functionality. Modify this class's code to implement control-specific behavior.</td>
</tr>
<tr valign=top>
<td width=25%><code>CCircPropPage</code></td>
<td width=23%>CIRCPPG.H<br>
CIRCPPG.CPP</td>
<td width=52%>Provides a template for the control's property page. Modify this class and its dialog template to implement a control-specific property page.</td>
</tr>
</table><br>
<p>
ControlWizard creates several other files that you modify later in this lesson and in subsequent lessons.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=25%><b>File</b></td>
<td class=label width=75%><b>Comments</b></td>
</tr>
<tr valign=top>
<td width=25%>CIRL.ODL</td>
<td width=75%>Textually defines the control's type information. This file is modified by ClassWizard when you add properties, events, or methods to the control. MKTYPLIB.EXE uses this file as input to generate the type library (CIRC.TLB) information that is ultimately added to the control's executable file as a resource.</td>
</tr>
<tr valign=top>
<td width=25%>CIRC.RC</td>
<td width=75%>Standard resource file. Contains a template for the control's property page.</td>
</tr>
<tr valign=top>
<td width=25%>CIRC.RC2</td>
<td width=75%>Contains user-defined resources that define a control's version information, include its type library information, and state that the control self-registers.</td>
</tr>
<tr valign=top>
<td width=25%>CIRCCTL.BMP</td>
<td width=75%>The tool palette representation of the control.</td>
</tr>
<tr valign=top>
<td width=25%>CIRC.ICO</td>
<td width=75%>The About box dialog icon.</td>
</tr>
</table><br>
<p>
ControlWizard also creates several other standard files: CIRC.CLW, CIRC.DEF, CIRC.MAK, CIRC.VCW, MAKEFILE, README.TXT, RESOURCE.H, STDAFX.CPP, and STDAFX.H.</p>
</font></BODY>
</HTML>
