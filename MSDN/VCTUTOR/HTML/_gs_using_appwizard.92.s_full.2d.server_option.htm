<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using AppWizard's Full-server Option</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_gs_using_appwizard.92.s_full.2d.server_option"></a>Using AppWizard’s Full-server Option</h1>
<p>
This step of Scribble is similar to Step 6 (Adding Context-Sensitive Help) in that you’ll start by running AppWizard with an option that you didn’t originally choose. In this case, the option is full-server support. Then you’ll copy the files and resources that AppWizard generates for an OLE Server application to your Scribble project.</p>
<p class=label>
<b>To set the AppWizard options for an OLE server application</b>
<ol>
<li>
From the <b>File</b> menu, click <b>New</b>.<p class=tl>
The <b>New</b> dialog box appears.</P></li>
<li>
Click the <b>Projects</b> tab.<br><br></li>
<li>
Click <b>MFC AppWizard (exe)</b>.<br><br></li>
<li>
In the <b>Project Name</b> box, type <code>Scribble</code>.<p class=tl>
You’re using the same project name (Scribble) so that you can copy code that contains class names and other identifiers into your current Scribble project files.</P></li>
<li>
In the <b>Location</b> box, type the path to store your new Scribble application files. Type <code>Scratch</code> as the new project directory, so that your project path is <code>C:\[optional directory]\Scratch\Scribble</code>. This creates the new Scribble project under a subdirectory named Scratch.<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;You must create this Scribble in a different project directory than the original Scribble.</p></li>
<li>
Click <b>OK</b>.<p class=tl>
The <b>MFC AppWizard - Step 1</b> dialog box appears.</P></li>
<li>
Click <b>Next</b> in the <b>MFC AppWizard&nbsp;–&nbsp;Step 1</b> and <b>MFC AppWizard&nbsp;–&nbsp;Step 2 of 6</b> dialog boxes to accept the default options.<br><br></li>
<li>
In the <b>MFC AppWizard&nbsp;–&nbsp;Step 3 of 6</b> dialog box, click <b>Full-server</b> and then click <b>Next</b>.<br><br></li>
<li>
In the <b>MFC AppWizard&nbsp;–&nbsp;Step 4 of 6</b> dialog box, click <b>Advanced</b>.<br><br></li>
<li>
In the <b>File extension</b> box, type <code>scb</code>.<p class=tl>
The entry in the <b>Filter name</b> box changes appropriately.</P></li>
<li>
Click <b>Close</b>.<br><br></li>
<li>
Click the <b>Context-sensitive Help</b> option and click <b>Next</b>.<p class=tl>
When you click <b>Context-sensitive Help</b> with the Full-server option, AppWizard creates:</P><ul type=disc>
<li>
The toolbar bitmap for Scribble when it runs as a server.<br><br></li>
<li>
An additional .RTF file for the OLE commands that appear on the menu when Scribble is running as a server.</li>
</ul>
<p class=tl>
You’ll copy these resources to your Scribble project later.</P></li>
<li>
In <b>MFC AppWizard&nbsp;–&nbsp;Step 5 of 6</b>, click <b>Next</b> to accept the default options.<br><br></li>
<li>
In the <b>MFC AppWizard&nbsp;–&nbsp;Step 6 of 6</b> dialog box, check and modify class names and filenames to make them match the original Scribble application.<ul type=disc>
<li>
Select the class <code>CScribbleView</code> and click <b>CScrollView</b> in the <b>Base class</b> box.<br><br></li>
<li>
Select the class <code>CScribbleSrvrItem</code> and change its name to <code>CScribbleItem</code>, the header filename to ScribbleItem.h, and the implementation filename to ScribbleItem.cpp. <p class=tl>
Notice that <b>COleServerItem</b> is the base class, which reflects your full-server choice.</P></li>
</ul>
<p class=atl>
<B><b>Important</b></B>&nbsp;&nbsp;&nbsp;If you are starting from the sample source code files for Step 6, rather than from a Scribble project that you have been developing step by step, you must modify the filenames and class names differently than those described in this procedure. Use the alternate filenames described in the next topic, <a href="_gs_using_short_filenames.htm">Using Short Filenames</a>. </p><p class=atl>
For more information about using short filenames, see the topic <a href="_gs_installing_the_sample_files.htm#_gs_a_note_about_long_filenames">A Note About Long Filenames</a> in Scribble Lesson 1.</p></li>
<li>
Click <b>Finish</b>.<br><br></li>
<li>
In the <b>New Project Information</b> dialog box, confirm the specifications and click <b>OK</b>.<p class=tl>
AppWizard creates the new files.</P></li>
<li>
Click <b>Yes</b> if the following message appears:<pre><code>A Microsoft Visual C++ project with the same name is already registered at [old scribble pathname]. Do you want to replace this project in the registry?
</code></pre>
<p class=tl>
This message box appears when you have already run a previous version of Scribble, from another directory, to register it with Windows.</P></li>
<li>
From the <b>File</b> menu, click <b>Close Workspace</b> to close the Scratch\Scribble project.</li>
</ol>
<p>
In the next procedure you’ll <a href="_gs_transfer_scratch_files_to_your_myscrib_project.htm#_gs_to_add_the_new_files_to_your_scribble_project">incorporate files and resources</a> from this Scratch version of Scribble, into the Scribble you’ve been developing all along.</p>
</font></BODY>
</HTML>
