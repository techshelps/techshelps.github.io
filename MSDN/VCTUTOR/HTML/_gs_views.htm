<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Views</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2"><h1><a name="_gs_views"></a><sup></sup>Views</h1>
<p>
The document object defines, stores, and manages the application’s data. All user interaction with the document is managed through a view object attached to the document object. Scribble uses a view object to display a document on the screen or on a printer. This topic introduces the role of the view and Scribble’s view class and members.</p>
<h3>Suggested Reading</h3>
<ul type=disc>
<li>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_mfc_CView">
</object><a href=JavaScript:alink_1.Click()>CView</a> Overview, <i>Microsoft Foundation Class Reference</i><br><br></li>
<li>
<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_MFC_CView.3a3a.OnInitialUpdate">
</object><a href=JavaScript:alink_2.Click()>CView::OnInitialUpdate</a>, <i>Microsoft Foundation Class Reference</i><br><br></li>
<li>
<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_MFC_CView.3a3a.OnUpdate">
</object><a href=JavaScript:alink_3.Click()>CView::OnUpdate</a>, <i>Microsoft Foundation Class Reference</i><br><br></li>
<li>
<object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_MFC_CView.3a3a.OnDraw">
</object><a href=JavaScript:alink_4.Click()>CView::OnDraw</a>, <i>Microsoft Foundation Class Reference</i> <br><br></li>
<li>
<object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_mfc_CView.3a3a.GetDocument">
</object><a href=JavaScript:alink_5.Click()>CView::GetDocument</a>, <i>Microsoft Foundation Class Reference</i><br><br></li>
<li>
<object id=alink_6 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Document.2f.View.3a_.Overview">
</object><a href=JavaScript:alink_6.Click()>Document/View Overview</a>, <i>Visual C++ Programmer’s Guide</i></li>
</ul>
<p>
When a new document is created in response to a <b>New</b> or <b>Open</b> command from the <b>File</b> menu, the framework also creates a document frame window and creates a view inside the frame window’s client area as a child window. The view displays the document’s data and responds to mouse actions, keystrokes, menu commands, and other actions as the user works on the document. It is your task to specify how the view draws your application-specific data and what it does in response to user actions.</p>
<p>
The figure below illustrates the view’s role in relation to the document.</p>
<p class=label>
<b>The View and the Document</b></p>
<p>
<img src="ct0210c.gif" border=0></p>
<p>
In the framework, the document manages data, but the view displays it and acts as intermediary between the user and the document for all input, selection, and editing in the document. A given view is always associated with only one document. However, it is possible for a document to have multiple views associated with it. In MDI applications such as Scribble, for example, the Window menu contains commands to open a new view onto a document, and to arrange open documents. In Scribble, you’ll also add splitter window functionality, enabling the user to create a second view onto a document without opening a new window.</p>
<p>
The following table shows your responsibilities and those of the framework in implementing a view on a document.</p>
<p class=label>
<b>View Implementation Responsibilities</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=48%><b>Your job</b></td>
<td class=label width=52%><b>The framework’s job</b></td>
</tr>
<tr valign=top>
<td width=48%>Derive a view class from class <b>CView</b>. For scrolling, use <b>CScrollView</b> instead. Other view classes are available as well.</td>
<td width=52%>AppWizard provides a starter view class for you. Class <b>CView</b> and its derived classes provide view services.</td>
</tr>
<tr valign=top>
<td width=48%>Implement your view’s <code>OnDraw</code> member function.</td>
<td width=52%>The framework calls <code>OnDraw</code> at the appropriate times, passing it a device-context object into which it can draw.</td>
</tr>
<tr valign=top>
<td width=48%>Map Windows messages and commands to member functions of your view.</td>
<td width=52%>The framework calls your message-handler member functions in response to the corresponding Windows messages.</td>
</tr>
</table><br>
</font></BODY>
</HTML>
