<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Serializing Different Versions of Persistent Data</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_gs_serializing_different_versions_of_persistent_data"></a>Serializing Different Versions of Persistent Data</h1>
<p>
The control writer knows which properties earlier versions of the control have and in what order they are serialized. Rather than ignoring the exchange object, the persistent custom properties of the old version of the control can be loaded or stored through the exchange object in a selective manner.</p>
<p>
When an earlier version of persistent data is to be loaded, any new properties can be initialized to their default values.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;It is not recommended that new versions of a control remove features (such as properties) of earlier versions.</p>
<p>
When an earlier version of persistent data is to be stored, any new properties can be skipped.</p>
<p>
Consider a hypothetical version 2.0 of the Circle control that has a new custom property called BorderWidth. The BorderWidth property is of type <b>short</b> and has a default value of 1.</p>
<p>
It is assumed that all versions of the Circle control will have all the properties of earlier versions, and that the properties are stored in the same order as in earlier versions. This is a recommendation for all&nbsp; ActiveX controls.</p>
<p>
Here is what the version 2.0 <code>DoPropExchange</code> function might look like:</p>
<pre><code>void CCircCtrl::DoPropExchange(CPropExchange* pPX)
{
 &nbsp;&nbsp; ExchangeVersion(pPX, MAKELONG(_wVerMinor, _wVerMajor), FALSE);
 &nbsp;&nbsp; COleControl::DoPropExchange(pPX);
 &nbsp;&nbsp; PX_Bool(pPX, _T("CircleShape"), m_circleShape, TRUE);
 &nbsp;&nbsp; PX_Short(pPX, _T("CircleOffset"), m_circleOffset, 0);
 &nbsp;&nbsp; PX_Long(pPX, _T("FlashColor"), (long &amp;)m_flashColor, RGB(0xFF,
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0x00, 0x00));
 &nbsp;&nbsp; PX_String(pPX, _T("Note"), m_note, _T(""));

 &nbsp;&nbsp; if (pPx-&gt;GetVersion() &gt;= (DWORD)MAKELONG(_wVerMinor, _wVerMajor))
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PX_Short(pPX, _T("BorderWidth"), m_borderWidth, 1);
 &nbsp;&nbsp; else
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (pPx-&gt;IsLoading())
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_borderWidth = 1;
}
</code></pre>
<p>
Notice the third parameter to the <code>ExchangeVersion</code> function. This is an optional parameter that specifies whether or not the control should store the same version of persistent data as was last loaded. By passing <b>FALSE</b>, the old version is maintained. The default for this parameter is <b>TRUE</b>, which specifies that the control should always store the current version of persistent data, no matter what version of persistent data is loaded.</p>
<p>
All stock properties and custom properties from versions before 2.0 are serialized as usual, in the same order as they were in the earlier versions.</p>
<p>
If the exchange object's version is greater than or equal to 2.0, the BorderWidth property is serialized as usual.</p>
<p>
If the exchange object's version is less than 2.0, and the <code>IsLoading</code> function returns <b>TRUE</b>, the BorderWidth property is initialized to its default value.</p>
</font></BODY>
</HTML>
