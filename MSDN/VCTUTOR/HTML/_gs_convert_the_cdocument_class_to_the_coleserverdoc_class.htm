<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Convert the CDocument Class to the COleServerDoc Class</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_gs_convert_the_cdocument_class_to_the_coleserverdoc_class"></a><sup></sup>Convert the CDocument Class to the COleServerDoc Class</h1>
<p>
The <b>CDocument</b> class implements standard document behavior in a stand-alone application. When the application runs as an OLE in-place editing server, however, the document must do extra work on behalf of OLE. The framework implements the bulk of this OLE document support in class <b>COleServerDoc</b>. The remaining work you have to do is:
<ul type=disc>
<li>
Change the base class of <code>CScribbleDoc</code> from <b>CDocument</b> to <b>COleServerDoc</b>.<br><br></li>
<li>
Implement the document’s support for embedded items.</li>
</ul>
<h3>Suggested Reading</h3>
<ul type=disc>
<li>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="ClassView">
</object><a href=JavaScript:alink_1.Click()>ClassView: Overview</a>, <i>Visual C++ User’s Guide</i><br><br></li>
<li>
<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="ClassView">
</object><a href=JavaScript:alink_2.Click()>ClassView Topics</a>, <i>Visual C++ Programmer’s Guide</i><br><br></li>
<li>
<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="Reading FileView">
</object><a href=JavaScript:alink_3.Click()>Reading the FileView and ClassView Panes</a>, <i>Visual C++ User’s Guide</i><br><br></li>
<li>
<object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_sample_mfc_HIERSVR">
</object><a href=JavaScript:alink_4.Click()>HIERSVR</a>, <i>Visual C++ Samples</i> <br><br></li>
<li>
<object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_mfc_COleServerDoc">
</object><a href=JavaScript:alink_5.Click()>COleServerDoc</a> Overview, <i>Microsoft Foundation Class Reference</i></li>
</ul>
<p class=label>
<b>To change the base class of CScribbleDoc</b>
<ol>
<li>
Use ClassView to jump to the declaration for class <code>CScribbleDoc</code> and change:<pre><code>class CScribbleDoc : public CDocument
</code></pre>
<p class=tl>
to:</P><pre><code>class CScribbleDoc : public COleServerDoc
</code></pre>
</li>
<li>
Use FileView to open ScribbleDoc.cpp and replace all instances of <b>CDocument</b> with <b>COleServerDoc</b>.<p class=tl>
This changes the base class reference of <code>CScribbleDoc</code> from <b>CDocument</b> to <b>COleServerDoc</b>.</P></li>
</ol>
<p>
The <b>COleServerItem</b> object represents the Scribble document when the document is embedded in a container. To create a <b>COleServerItem</b> for a given document, AppWizard provides an override of <b>GetEmbeddedItem</b> in the <b>COleServerDoc</b>-derived class. The return type of <b>OnGetEmbeddedItem</b> is a pointer to a <b>COleServerItem</b>.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;A <b>COleServerItem</b> object can also represent an OLE link item, but Scribble doesn’t illustrate that. The sample HIERSVR illustrates this link item.</p>
<p>
In the following procedure, you’ll fill in some of the code that AppWizard would have generated had you originally chosen the Full-server option.</p>
<p class=label>
<b>To implement the document’s support for embedded items</b>
<ol>
<li>
Using FileView, switch to ScribbleDoc.h in the editor and add the following forward class reference for <code>CScribbleItem</code> immediately before the line <code>class CScribbleDoc : public COleServerDoc</code>:<pre><code>class CScribbleItem;
</code></pre>
</li>
<li>
In ScribbleDoc.cpp, add the following <b>#include</b> statement immediately after the line <code>#include "scribbleDoc.h"</code>:<pre><code>#include "ScribbleItem.h" 
</code></pre>
<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The short filename for this header file is ScribItm.h. If you’re starting from the sample source files from Scribble Step 6 to complete this tutorial step, you must use this short filename. Otherwise, you will not be able to compile your project.</p><p class=tl>
Now you’ll add the <code>OnGetEmbeddedItem</code> function override. (AppWizard provided this code in the Scratch version of Scribble you generated with Full-server support.)</P></li>
<li>
In ClassView, right-click the <code>CScribbleDoc</code> class icon.<br><br></li>
<li>
From the menu, click <b>Add Member Function</b>.<br><br></li>
<li>
In the <b>Function Type</b> box, type: <code>COleServerItem*</code>.<br><br></li>
<li>
In the <b>Function Declaration</b> box, type: <code>OnGetEmbeddedItem()</code>.<br><br></li>
<li>
In the <b>Access</b> group box, click <b>Protected</b>.<br><br></li>
<li>
Click the <b>Virtual</b> check box, (note that this adds the virtual keyword to the declaration) and click <b>OK</b>.<br><br></li>
<li>
In ScribbleDoc.cpp, implement the function as follows:<pre><code>// OnGetEmbeddedItem is called by the framework to get the COleServerItem
//&nbsp; that is associated with the document.&nbsp; It is only called when necessary.

CScribbleItem* pItem = new CScribbleItem(this);
ASSERT_VALID(pItem);
return pItem;
</code></pre>
</li>
<li>
Switch back to ScribbleDoc.h and, in the Public Attributes section, add the following code:<pre><code>CScribbleItem* GetEmbeddedItem()
{ return (CScribbleItem*)COleServerDoc::GetEmbeddedItem(); }
</code></pre>
<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;AppWizard provided this code in the \Scratch\Scribble project, but you must insert it manually in the Scribble project. </p><p class=tl>
This code provides a type-safe function to return a pointer to the specific <b>COleServerItem</b>-derived class, <code>CScribbleItem.</code></P></li>
</ol>
</font></BODY>
</HTML>
