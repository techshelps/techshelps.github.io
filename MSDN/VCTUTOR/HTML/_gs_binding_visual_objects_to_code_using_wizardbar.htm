<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Binding Visual Objects to Code Using WizardBar</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_gs_binding_visual_objects_to_code_using_wizardbar"></a>Binding Visual Objects to Code Using WizardBar</h1>
<h3>Scribble: MDI Drawing Application, Lesson 6</h3>
<p class=indent>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;If you prefer working from a printed tutorial, see <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="Copying and Printing">
</object><a href=JavaScript:alink_1.Click()>Copying and Printing</a> in <i>MSDN Library Help</i> for details about printing a lesson, a set of topics, or a single topic.</p>
<h3>Suggested Reading in the <i>Visual C++ Programmer’s Guide</i></h3>
<ul type=disc>
<li>
<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Message_Handling_and_Mapping_Topics">
</object><a href=JavaScript:alink_2.Click()>Message Handling and Mapping Topics</a><br><br></li>
<li>
<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_How_to_Update_User.2d.Interface_Objects">
</object><a href=JavaScript:alink_3.Click()>How to Update User-Interface Objects</a><br><br></li>
<li>
<object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="wizbar">
</object><a href=JavaScript:alink_4.Click()>Using WizardBar</a><br><br></li>
<li>
<object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="wizardbar">
</object><a href=JavaScript:alink_5.Click()>Overview: The Universal WizardBar</a><br><br></li>
<li>
<object id=alink_6 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Associating_a_Menu_Item_with_an_Accelerator_Key">
</object><a href=JavaScript:alink_6.Click()>Associating a Menu Item with an Accelerator Key</a></li>
</ul>
<p>
Like all applications written for Windows, Scribble is message driven. A keystroke, mouse click, or other event causes messages to be sent to some part of the application that can respond to the event. In <a href="_gs_adding_the_message.2d.handler_functions.htm">Adding the Message-Handler Functions</a>, in Lesson 4, for example, you saw that Scribble implements mouse drawing by detecting and responding to messages generated by mouse clicks and drags.</p>
<p>
This lesson discusses a category of messages called “commands,” which are messages to your application from menu items, toolbar buttons, and accelerator keys. </p>
<p>
The expanded version of Scribble developed in this lesson adds two menu items:
<ul type=disc>
<li>
One generates commands to toggle the line thickness for drawing.<br><br></li>
<li>
One clears all strokes from the current document.</li>
</ul>
<p>
The command that toggles line thickness is also duplicated by a button on Scribble’s toolbar.</p>
<p>
You created the resources for Scribble’s new menu items and its new toolbar button in <a href="_gs_edit_scribble.92.s_menus.htm">Edit Scribble’s Menus</a> and <a href="_gs_edit_scribble.92.s_toolbar.htm">Edit Scribble’s Toolbar</a> in Lesson 5. Now you can use WizardBar to assign a user-interface object, such as a menu item, to a command and map the command to a function that handles it. </p>
<p>
In this lesson, you will:
<ul type=disc>
<li>
Extend your knowledge of WizardBar, begun in Lesson 4, <a href="_gs_creating_the_view.htm">Creating the View</a>.<br><br></li>
<li>
Add new <a href="_gs_bind_scribble.92.s_clear_all_command_to_its_handler_code.htm">command-handling code for Scribble</a>.<br><br></li>
<li>
Connect <a href="_gs_update_scribble.92.s_thick_line_menu_item.htm">a toolbar button and a menu item</a> to the same command.<br><br></li>
<li>
Learn how to keep your user-interface objects (menus and toolbar buttons) <a href="_gs_updating_user.2d.interface_objects.htm">updated</a> in response to changing program conditions by, for example, enabling or disabling a menu item and toggling a button. </li>
</ul>
<p>
At the end of this lesson, your files should closely resemble the Step2 source code files, and your Scribble program should compile and run.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;You can find a finished example of this lesson's code in the Scribble Step2 sample source code directory.</p>
</font></BODY>
</HTML>
