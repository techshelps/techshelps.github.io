<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Adding a Dialog Box</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_gs_adding_a_dialog_box"></a>Adding a Dialog Box</h1>
<h3>Scribble: MDI Drawing Application, Lesson 7</h3>
<p class=indent>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;If you prefer working from a printed tutorial, see <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="Copying and Printing">
</object><a href=JavaScript:alink_1.Click()>Copying and Printing</a> in <i>MSDN Library Help</i> for details about printing a lesson, a set of topics, or a single topic.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;You can find a finished example of this lesson's code in the Scribble Step3 sample source code directory.</p>
<h3>Suggested Reading</h3>
<ul type=disc>
<li>
<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dialog editor">
</object><a href=JavaScript:alink_2.Click()>Overview: Dialog Editor</a>, <i>Visual C++ User’s Guide</i><br><br></li>
<li>
<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="property pages">
</object><a href=JavaScript:alink_3.Click()>Using Property Pages</a>, <i>Visual C++ User’s Guide</i><br><br></li>
<li>
<object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Property_Sheets_and_Property_Pages">
</object><a href=JavaScript:alink_4.Click()>Property Sheets and Property Pages</a>, <i>Visual C++ Programmer’s Guide</i></li>
</ul>
<p>
In Lesson 5, <a href="_gs_constructing_the_user_interface.htm">Constructing the User Interface</a>, and Lesson 6, <a href="_gs_binding_visual_objects_to_code_using_wizardbar.htm">Binding Visual Objects to Code Using WizardBar</a>, you added new commands to Scribble in two steps:
<ul type=disc>
<li>
Using the menu editor to add new menu items<br><br></li>
<li>
Using WizardBar to define message handlers and bind them to the menu commands. </li>
</ul>
<p>
You added menu items for three new commands: Edit Clear All, Thick Pen, and Pen Widths. You practiced binding only the first two of these commands.</p>
<p>
The Pen Widths command is somewhat different from the other two commands. Both the Edit Clear All and Thick Pen commands execute to completion as soon as the user clicks them. By contrast, the Pen Widths command requires more information from the user. This command opens a dialog box, one that lets the user specify the widths of the Thin Pen and the Thick Pen. </p>
<p>
Before you can write a message handler for the Pen Widths command, you must design the dialog box that it displays and define a new class to manage the dialog box. That’s what you’ll do in this lesson.</p>
<p>
This lesson develops a modal dialog box using the same general procedure that was used for adding menu commands in <a href="_gs_constructing_the_user_interface.htm">Constructing the User Interface</a> and <a href="_gs_binding_visual_objects_to_code_using_wizardbar.htm">Binding Visual Objects to Code Using Wizard Bar</a>. You’ll use the dialog editor to design the dialog box’s appearance, and then use ClassWizard to declare a dialog class, and WizardBar to define message handlers and bind them to the dialog box. </p>
<p>
This lesson includes the following topics:
<ul type=disc>
<li>
<a href="_gs_designing_a_dialog_box.htm">Designing a dialog box</a><br><br></li>
<li>
<a href="_gs_connecting_a_class_to_a_dialog_box.htm">Connecting a class to a dialog box</a><br><br></li>
<li>
<a href="_gs_open_the_dialog_box.htm">Opening the dialog box</a> from your application</li>
</ul>
</font></BODY>
</HTML>
