<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating a Starter Automation Server</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_gs_creating_a_starter_automation_server"></a><sup></sup>Creating a Starter Automation Server</h1>
<p>
The following procedure describes values you will enter into the various AppWizard dialog boxes in order to create the AutoClik starter files.</p>
<p class=label>
<b>To create a starter Automation server application</b>
<ol>
<li>
On the <b>File</b> menu, click <b>New</b>.<p class=tl>
The <b>New</b> dialog box appears. </P></li>
<li>
Click the <b>Projects</b> tab.<br><br></li>
<li>
Click <b>MFC AppWizard (exe)</b>.<br><br></li>
<li>
In the <b>Project name</b> box, type <code>AutoClik</code>.<p class=tl>
AppWizard will create a project directory with this name under the main (root) directory specified in the <b>Location</b> box.</P></li>
<li>
If necessary, use the <b>Location</b> box to specify a different root directory for the AutoClik project files that AppWizard creates under the AutoClik project directory. <br><br></li>
<li>
If any check boxes other than Win32 appear in the <b>Platforms</b> box, clear them.<br><br></li>
<li>
Click <b>OK</b>.<p class=tl>
AppWizard creates the project directory and the <b>MFC AppWizard&nbsp;–&nbsp;Step 1</b> dialog box appears.</P></li>
<li>
Click <b>Next</b> in the dialog boxes for AppWizard Steps 1 and 2 to accept the default options.<br><br></li>
<li>
In the <b>MFC AppWizard&nbsp;–&nbsp;Step 3 of 6</b> dialog box, click the <b>Automation</b> check box and click <b>Next</b>.<br><br></li>
<li>
In the <b>MFC AppWizard&nbsp;–&nbsp;Step 4 of 6</b> dialog box, click the <b>Advanced</b> button.<p class=tl>
The <b>Advanced Options</b> dialog box appears, with the <b>Document Template Strings</b> tab selected.</P><ul type=disc>
<li>
In the <b>File extension</b> box, specify <code>ack</code>.<p class=tl>
The specified file extension is reflected in the <b>Filter Name</b> box.</P></li>
<li>
In the <b>File type ID</b> box, edit it to read <code>AutoClick.Document</code>.<p class=tl>
This identifier is initially created by AppWizard, based on the project name. The client application (such as <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_sample_MFC_Autodriv">
</object><a href=JavaScript:alink_1.Click()>Autodriv</a>) uses this name to access the Automation object, or dispatch interface. This name corresponds to the <b>regFileTypeID</b> string in the <b>CDocTemplate::GetDocString</b> function.</P></li>
<li>
Change the <b>Main frame caption</b> to AutoClick (optional).<p class=tl>
This string gets displayed in the title bar of the running application.</P></li>
<li>
In the <b>Doc type name</b> box, change AutoCl to AClick (optional).<p class=tl>
Notice that the change is reflected in the <b>File new name (short name)</b> box as well. This name corresponds to the <b>fileNewName</b> string in <b>CDocTemplate::GetDocString</b>. </P></li>
<li>
In the <b>Filter name</b> box, change AutoCl Files to AutoClick Files (optional).</li>
</ul>
<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The File Type ID and Doc Type Name strings are discussed further in the next topic, <a href="_gs_analyzing_the_dispatch_interface_name.htm">Analyzing the Dispatch Interface Name</a>.</p></li>
<li>
Click <b>Close</b>, and then click <b>Next</b> to accept the options for the Step 4 and Step 5 dialog boxes. <br><br></li>
<li>
Optionally, in the <b>MFC AppWizard&nbsp;–&nbsp;Step 6 of 6</b> dialog box, make the following changes:<ul type=disc>
<li>
Change class name CAutoClikApp to CAutoClickApp. <br><br></li>
<li>
Change class name CAutoClikDoc to CAutoClickDoc. Change the header and implementation files accordingly.<br><br></li>
<li>
Change class name CAutoClikView to CAutoClickView. Change the header and implementation files accordingly.</li>
</ul>
</li>
<li>
Click <b>Finish</b>.<p class=tl>
You may be prompted with the following message:</P><p class=tl>
“A unique class ID already exists in the registration database for this document type. Use existing ID?”</P><p class=tl>
This message appears if you ran the Step 3 version of AutoClik. Running AutoClik adds an entry to the registry for its document type (AutoClick.Document).</P></li>
<li>
Click <b>Yes</b>. Responding Yes tells AppWizard to overwrite the existing registry entries.<p class=tl>
The <b>New Project Information</b> dialog box appears, summarizing the settings and features AppWizard will generate for you when it creates your project.</P><p class=tl>
You might want to take a moment to examine the application type, classes, and features that AppWizard automatically provides.</P></li>
<li>
Click <b>OK</b> in the <b>New Project Information</b> dialog box.<p class=tl>
AppWizard creates all necessary files and opens the AutoClik project. </P></li>
</ol>
</font></BODY>
</HTML>
