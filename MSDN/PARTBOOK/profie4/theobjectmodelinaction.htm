<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Object Model in Action</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000 dir=ltr>
<h1><a name="theobjectmodelinaction"></a>The Object Model in Action</h1>
<p>
Having looked at the basic objects, we need to know more about what exactly the browser object model enables us, as developers, to accomplish. What kind of access does it provide to the operation of the browser or to the HTML pages currently or previously displayed? What can you do with the object model to create new and exciting web pages and web applications? To discover the answer to these questions, we need to talk about the objects in the object model.</p>
<h2>The Object Model Diagram</h2>
<p>
This diagram is intended to give you a feel for each object's place in the object model. There are a lot of different objects in the diagram, but don't worry as we'll be spending most of this and the next chapter going over them all so you can understand their use throughout the rest of the book and apply them in your own code.</p>
<p>
<img src="0685_appe_01.gif" border=0></p>
<p>
The object model shows the 'hierarchical' relationships between different objects. The connections between the objects in model are arranged in a hierarchy because one object can often contain one (or more) of another object, rather like a parent having one or more children. There are also a number of important objects (like the <b><code>style</code></b> object that we talked about in the last chapter) that aren't an intrinsic part of the model at a high level, but are very important when we get into actually working with objects that the model provides.</p>
<p>
As you can see, the top-level object is the <b><code>window</code></b> object. This is the parent object of the entire model – we can think of all the other objects as being children of <b><code>window</code></b>. This object <b>contains</b> the focus of the next chapter, the <b><code>document</code></b> object – think of it in the same way as the browser window contains the HTML document.</p>
<p>
The <b><code>window</code></b> object also contains a collection called <b><code>frames</code></b>. Each object in the <b><code>frames</code></b> collections represents a frame currently displayed in the browser. In addition to <b><code>document</code></b> and <b><code>frames</code></b>, the <b><code>window</code></b> object also <b>exposes</b> (makes available to the programmer) five separate objects: <b><code>history</code></b>, <b><code>navigator</code></b>, <b><code>location</code></b>, <b><code>event</code></b>, and <b><code>screen</code></b>. We'll talk more about these objects in this chapter and leave the rest of the <b><code>document</code></b> object's descendants (like the numerous collections) until the next chapter when we talk more about the <b><code>document</code></b> object.</p>
<p>
While we've made the point (over and over again!) that the <b><code>window</code></b> object is the top-level object in the hierarchy, we need to modify our thinking just a bit when we work with frames. As we'll see in more detail a bit later in the chapter, each frame contains its own <b><code>window</code></b> object, with its own set of objects, properties, methods, and events. </p>
<h2>Changes from the Internet Explorer 3.0 Object Model</h2>
<p>
If you have some experience with the Internet Explorer 3.0 object model you'll see many similarities between this diagram and the one you might be familiar with for Internet Explorer 3.0. You'll also notice a few differences. The basic layout of the object model hasn't changed, however, you'll see a lot of new objects, like <b><code>event</code></b> and <b><code>screen</code></b>, as well as a large number of new <b><code>document</code></b> collections. We'll cover each of these objects in turn in this and the next chapter.</p>
</BODY>
</HTML>
