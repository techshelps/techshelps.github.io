<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How Scriptlets Work Under the Hood</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000 dir=ltr>
<h1><a name="howscriptletsworkunderhood"></a>How Scriptlets Work Under the Hood</h1>
<p>
Whenever IE 4 shows an HTML page, it creates a container window that covers the entire client area. The window class name is Shell DocObject View. It has a child window called Internet Explorer_Server which is identical in size. This window represents the surface where <b><code>MSHTML</code></b> (the IE4 module providing the Dynamic HTML functionality) draws its output. In short, Internet Explorer_Server windows are the real HTML view objects. The illustration below shows the pile of IE 4 windows that are created when it displays a standard HTML file:</p>
<p>
<img src="0707_14_30.gif" border=0></p>
<p>
Now, look at what happens when IE4 is hosting a Scriptlet:</p>
<p>
<img src="0707_14_31.gif" border=0></p>
<p>
Behind the scenes, IE 4 uses another instance of its Internet Explorer_Server view object for handling Scriptlets. This allows the Scriptlets to inherit the Dynamic HTML object model and scrolling capabilities. Conceptually, running a Scriptlet is just like running a nested copy of IE 4 itself. </p>
</BODY>
</HTML>
