<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Structure of a Scriptlet</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000 dir=ltr>
<h1><a name="thestructureofscriptlet"></a>The Structure of a Scriptlet</h1>
<p>
A Scriptlet is a regular HTML page that has two main parts: <b>body</b> and <b>script</b> code. However, a Scriptlet is also a very peculiar HTML page, whose scripting code makes it programmable from external callers, such as a host HTML page or a Visual Basic form. There is a strict relationship between the body and script. The body includes the objects on which script code will work in order to produce the desired effect. Since both code and body are contained in the same file, we have a self-contained component ready to be used as an object. In addition, the script code uses a conventional syntax to make public some of its own variables and routines. In this way we can automate the behavior and the appearance of the page:</p>
<p>
<img src="0707_14_21.gif" border=0></p>
<p>
As we mentioned earlier, a Scriptlet's automation interface is expressed in terms of properties, methods and events.</p>
</BODY>
</HTML>
