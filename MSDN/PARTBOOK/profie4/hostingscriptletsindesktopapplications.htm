<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Hosting Scriptlets in Desktop Applications</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000 dir=ltr>
<h1><a name="hostingscriptletsindesktopapplications"></a>Hosting Scriptlets in Desktop Applications</h1>
<p>
Scriptlets behave in a very similar way to ActiveX controls in a Web page, because—as we saw earlier—they are wrapped up in another software layer that exposes a COM interface. This wrapper is Internet Explorer_Server, otherwise known as the Microsoft Scriptlet Control. This also holds true when we start to consider the use we can make of Scriptlets in ordinary desktop applications. A Scriptlet can be hosted in a Visual Basic form or in an MFC-based application, just as easily as it can in an HTML page. </p>
<p>
The Microsoft Scriptlet Control, which comes with IE 4, is responsible for this language-independence. It means that, outside a Web page, we can use Scriptlets everywhere that ActiveX controls are accepted. The Scriptlet Control is wrapped around the Scriptlet in the same way as in a Web page, and its ActiveX (COM) interface works just the same in VB, C++, Office 97, Delphi, and many other languages. The proof is in the screenshot below, which demonstrates that even from a VB Form, we find the Internet Explorer_Server window in the middle again!</p>
<p>
<img src="0707_14_39.gif" border=0></p>
</BODY>
</HTML>
