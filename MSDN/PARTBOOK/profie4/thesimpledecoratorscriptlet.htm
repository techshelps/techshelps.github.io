<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Simple 'Decorator' Scriptlet</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000 dir=ltr>
<h1><a name="thesimpledecoratorscriptlet"></a>The Simple 'Decorator' Scriptlet</h1>
<p>
Our second simple example shows how we can create a Scriptlet that does <i>not</i> have a user-interface. This page contains a Scriptlet that calculates the amount and cost for paint, wallpaper, and carpet to completely decorate a room. The Decorator Scriptlet simply encapsulates a series of functions that could easily be re-used several times in our pages. As you can see, all we have is a simple page that contains a few buttons to access the various properties and methods of the Scriptlet:</p>
<p>
<img src="0707_14_19.gif" border=0></p>
<p class=indent>
You can run or download this page, <b><code>decorate.htm</code></b>, from our Web site at <b><code>http://rapid.wrox.co.uk/books/0707</code></b>.</p>
<p>
In order to use the Decorator scriptlet, we place the appropriate <b><code>&lt;OBJECT&gt;</code></b> tag in the main page. In this case since we do not want the control to be visible, we've set the CSS <b><code>visibility</code></b> property to <b><code>hidden</code></b>: </p>
<pre><code>&lt;object id=myDecObj width=1 height=1 type="text/x-scriptlet"
        data="decocalc.htm" style="visibility:hidden"&gt;
&lt;/object&gt;</code></pre>
<p>
As you can see from the screenshot, the Rolls of Wallpaper button simply calls the <b><code>rollsofWallpaper</code></b> method of the <b><code>myDecObj</code></b> control (our scriptlet), passing it a value which is the price of each roll:</p>
<pre><code>&lt;BUTTON ONCLICK="myDecObj.rollsOfWallpaper(6.49)" STYLE="width:500"&gt;
  Click here to run the code: &lt;CODE&gt;myDecObj.rollsOfWallpaper(6.49)&lt;/CODE&gt;
&lt;/BUTTON&gt;</code></pre>
<p>
Inside the Scriptlet, the <b><code>rollsOfWallpaper</code></b> function calls another internal sub-routine (named <b><code>getRollsWallpaper</code></b>) which does the calculation and returns the result. </p>
<pre><code>function public_rollsOfWallpaper(cPriceEach)
{ 
  alert("You'll need " + getRollsWallpaper(cPriceEach))
}</code></pre>
<p>
The <b><code>rollsOfWalpaper</code></b> function then displays this as an <b><code>alert</code></b> dialog, as you can see here:</p>
<p>
<img src="0707_14_20.gif" border=0></p>
<p>
This is just one example – the Decorator Scriptlet contains several other properties and methods, and you can experiment with it yourself using the sample page available from our Web site at <b><code>http://rapid.wrox.co.uk/books/0707</code></b>. The code within the Scriptlet is fully commented so that you can see what's going on. For example, this Scriptlet also provides a <b><code>shoppingList</code></b> method which returns a string value, instead of displaying the result in an <b><code>alert</code></b> dialog:</p>
<pre><code>function public_shoppingList(sBreak, cWallpaper, cPaint, cCarpet)
{
  if (sBreak == null) sBreak = "";
  sList = getRollsWallpaper(cWallpaper) + sBreak
        + getPintsPaint(cPaint) + sBreak
        + getYardsCarpet(cCarpet);
  return sList
}</code></pre>
<p>
In the main page, we can use the method to create a shopping list of materials in a new browser window. The <b><code>sBreak</code></b> parameter of the method is the string or character used to delimit each item in the list, and the other three parameters are the individual prices of each item:</p>
<pre><code>function RunShoppingListCode()
{
  sLF = "&lt;BR&gt;";
  cPaperEach = 6.49;
  cPaintEach = 3.99;
  cCarpetYd = 29.50;
  sMyList = myDecObj.shoppingList(sLF, cPaperEach, cPaintEach, cCarpetYd);
  objNewWin = window.open("","","toolbar=no;statusbar=no;directories=no");
  objNewWin.document.write("&lt;H3&gt;My Shopping List&lt;/H3&gt;");
  objNewWin.document.write("&lt;B&gt;" + sMyList + "&lt;/B&gt;&lt;HR&gt;");
  objNewWin.document.close();
}</code></pre>
<p>
And here's the result:</p>
<p>
<img src="0707_14_21.gif" border=0></p>
</BODY>
</HTML>
