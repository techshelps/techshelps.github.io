<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Formatting Properties</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000 dir=ltr>
<h1><a name="formattingproperties"></a>Formatting Properties</h1>
<p>
The appearance of elements is of course a primary concern of ours, and numerous properties of this type can be set through the use of style sheets. In this section we'll talk briefly about the different style properties that can be used to change the formatting of an element (be it a block of text, an image, or so on).</p>
<p class=indent>
The style sheet reference in section E can provide you with more information about each style property, including the values they can assume and their applicability to different elements.</p>
<h2>Font Properties</h2>
<p>
These properties are used primarily with groups of text.  They control every possible element of the appearance of a block of text.</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows width=872>
<tr valign=top>
<td class=blue width=15%><b>Property</b></td>
<td class=blue width=39%><b>Description</b></td>
<td class=blue width=46%><b>Possible Values</b></td>
</tr>
<tr valign=top>
<td width=15%><b><code>font-family</code></b></td>
<td width=39%>name of a specific or generic font family</td>
<td width=46%>specific (<b><code>Arial</code></b>, etc.) generic (<b><code>serif</code></b>, etc.)</td>
</tr>
<tr valign=top>
<td width=15%><b><code>font-style</code></b></td>
<td width=39%>changes in font style<b><code> </code></b></td>
<td width=46%><b><code>normal</code></b>, <b><code>italic</code></b>, <b><code>oblique</code></b></td>
</tr>
<tr valign=top>
<td width=15%><b><code>font-variant</code></b></td>
<td width=39%>changes in font appearance<b><code> </code></b></td>
<td width=46%><b><code>normal</code></b> or <b><code>small-caps</code></b></td>
</tr>
<tr valign=top>
<td width=15%><b><code>font-weight</code></b></td>
<td width=39%>the weight of the font</td>
<td width=46%><b><code>normal</code></b>, <b><code>bold</code></b>, <b><code>bolder</code></b>, <b><code>lighter</code></b> or numeric values <b><code>100</code></b>-<b><code>900</code></b></td>
</tr>
<tr valign=top>
<td width=15%><b><code>font-size</code></b></td>
<td width=39%>size of the font </td>
<td width=46%>in absolute or relative units</td>
</tr>
<tr valign=top>
<td width=15%><b><code>font</code></b></td>
<td width=39%>allows setting of all font properties at one time</td>
<td width=46%>all of the above</td>
</tr>
</table><br>
<p>
As we'll discuss in more detail later in this chapter, one of the ways of adding style information to tags is simply to include a <b><code>STYLE</code></b> attribute in the HTML tag itself. We can specify multiple style sheet elements by delimiting them with a semi-colon. This is the format we'll generally use to for our examples. For example, to set the font of a single <b><code>&lt;H1&gt;</code></b> element to 48 point Times New Romanitalic, we could use this HTML:</p>
<pre><code>&lt;H1 STYLE="font-family:Times New Roman; font-size:48pt; font-style:italic"&gt;This is a stylish heading&lt;/H1&gt;</code></pre>
<p>
This code produces a heading that looks like this (see for yourself – just add the above code to a page with an <b><code>&lt;HTML&gt;</code></b> and <b><code>&lt;BODY&gt;</code></b> block):</p>
<p>
<img src="07070202.gif" border=0></p>
<p>
Multiple fonts can be specified for the <b><code>font-family</code></b> property. Browsers can then use the first font on the list that is available on the machine in question. Font names should separated with commas. </p>
<p>
For example, suppose we would like to display our text in the Arial Black font, but aren't sure that all of our users will have this font installed on their machines. We could specify Arial Black first in the <b><code>font-family</code></b> string, followed by another serif font that is more common, like Arial. With this arrangement we'll get Arial Black if it's installed, but our text will still look good if Arial Black isn't on the machine. This is how we would do it:</p>
<pre><code>&lt;H1 STYLE="font-family:Arial Black,Arial; font-size:24pt"&gt;This heading uses Arial Black&lt;/H1&gt; 
&lt;H1 STYLE="font-family:Arial; font-size:24pt"&gt;This heading uses Arial&lt;/H1&gt;</code></pre>
<p>
The code is rendered by the browser like this (on a machine that has both Arial Black and Arial installed):</p>
<p>
<img src="07070203.gif" border=0></p>
<h2>Text Properties</h2>
<p>
While you're setting the traits of your font, you might also want to set the properties of the text you'll display with this font using the many different text properties that style sheets provide.</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows width=908>
<tr valign=top>
<td class=blue width=21%><b>Property</b></td>
<td class=blue width=35%><b>Description</b></td>
<td class=blue width=44%><b>Possible Values</b></td>
</tr>
<tr valign=top>
<td width=21%><b><code>word-spacing</code></b></td>
<td width=35%>distance between words</td>
<td width=44%>numeric value</td>
</tr>
<tr valign=top>
<td width=21%><b><code>letter-spacing</code></b></td>
<td width=35%>distance between letters</td>
<td width=44%>numeric value</td>
</tr>
<tr valign=top>
<td width=21%><b><code>text-decoration</code></b></td>
<td width=35%>special appearance of the text</td>
<td width=44%><b><code>underline</code></b>, <b><code>overline</code></b>, <b><code>strikethrough</code></b></td>
</tr>
<tr valign=top>
<td width=21%><b><code>vertical-align</code></b></td>
<td width=35%>vertical positioning of an element in the line</td>
<td width=44%><b><code>baseline</code></b>, <b><code>sub</code></b>, <b><code>super</code></b>, <b><code>top</code></b>, <b><code>text-top</code></b>, <b><code>middle</code></b>, <b><code>bottom</code></b>, <b><code>text-bottom</code></b>, or percentage</td>
</tr>
<tr valign=top>
<td width=21%><b><code>text-transform</code></b></td>
<td width=35%>capitalization of the text</td>
<td width=44%><b><code>capitalize</code></b>, <b><code>uppercase</code></b>, <b><code>lowercase</code></b>, <b><code>none</code></b></td>
</tr>
<tr valign=top>
<td width=21%><b><code>text-align</code></b></td>
<td width=35%>alignment of the text</td>
<td width=44%><b><code>left</code></b>, <b><code>center</code></b>, <b><code>right</code></b>, <b><code>justify</code></b></td>
</tr>
<tr valign=top>
<td width=21%><b><code>text-indent</code></b></td>
<td width=35%>indentation of the text</td>
<td width=44%>numeric or percentage</td>
</tr>
<tr valign=top>
<td width=21%><b><code>line-height</code></b></td>
<td width=35%>height of the line</td>
<td width=44%>numeric of percentage</td>
</tr>
</table><br>
<p>
These properties are useful if you want to control your text like you can in a desktop publishing program.  As the power of these properties demonstrate, the change from the old HTML to style-sheet enhanced HTML is nothing short of amazing.  </p>
<p>
We've always been able to center HTML using the <b><code>&lt;CENTER&gt;</code></b> tag.  Style sheets allow us to control the justification of our text more robustly, with the <b><code>text-align</code></b> property.  As an example of some of the things that the text properties can do, take a look at the browser in this screen shot:</p>
<p>
<img src="07070204.gif" border=0></p>
<p>
This page was created with just these three lines of style sheet HTML:</p>
<pre><code>&lt;P STYLE="text-align:left"&gt;Normal text.&lt;/P&gt;
&lt;P STYLE="text-align:center; text-decoration:underline"&gt;Underlined text.&lt;/P&gt;
&lt;P STYLE="text-align:right; text-transform:uppercase"&gt;Uppercase text.&lt;/P&gt;</code></pre>
<p>
With this we can begin to see how style sheets now give users of HTML the same power that used to only exist in word processors and page layout programs.</p>
<h2>Color and Background Properties</h2>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows width=800>
<tr valign=top>
<td class=blue width=15%><b>Property</b></td>
<td class=blue width=27%><b>Description</b></td>
<td class=blue width=58%><b>Possible Values</b></td>
</tr>
<tr valign=top>
<td width=15%><b><code>color</code></b></td>
<td width=27%>color of the element</td>
<td width=58%>color name or RGB value "#RRGGBB"</td>
</tr>
<tr valign=top>
<td width=15%><b><code>background</code></b></td>
<td width=27%>background of the element</td>
<td width=58%>color value, URL location, repeat value, scroll value, position value</td>
</tr>
</table><br>
<p>
The <b><code>color</code></b> property is simple but useful – just specify a color and the element is displayed in this color.  <b><code>Background</code></b> is equally useful, but more complicated because of its wide variety of options. The background of an element can be set to a solid color, an image, or a combination of both. Images can be set to repeat and / or scroll with the document. So if we wanted the code to set the background of the <b><code>&lt;BODY&gt; </code></b>tag to have a default color of red, but to also have the Wrox logo repeating down the y-axis of the page, underneath some text, it would be fairly simple to achieve:</p>
<pre><code>&lt;BODY STYLE="background: url(wrox.gif) red repeat-y"&gt;
This is some example text
&lt;/BODY&gt;</code></pre>
<p>
The resulting screen would look like this:</p>
<p>
<img src="07070212.gif" border=0></p>
<h3>Supplementary Background Properties </h3>
<p>
In addition to the basic <b><code>background</code></b> property, style sheets in Internet Explorer 4.0 support a number of properties that address specific elements of the background, like <b><code>background-image</code></b>, <b><code>background-color</code></b>, and so on.  </p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=494>
<tr valign=top>
<td width=47%>background-attachment</td>
<td width=53%>background<b>-</b>color</td>
</tr>
<tr valign=top>
<td width=47%>background-image</td>
<td width=53%>background<b>-</b>position</td>
</tr>
<tr valign=top>
<td width=47%>background-repeat </td>
<td width=53%></td>
</tr>
</table><br>
<p>
While the <b><code>background</code></b> property can be used to set all of these attributes at one time, with these properties you can modify a part of the background without having to set each element. So you could you create the last example by setting each supplementary background property as follows:</p>
<pre><code>&lt;BODY STYLE="background-image: url(wrox.gif); background-color: red; background-repeat: repeat-y"&gt;
This is some example text
&lt;/BODY&gt;</code></pre>
<h2>Border Properties</h2>
<p>
Using these properties, each side of the border around the element can be set with a style and width value.</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows width=597>
<tr valign=top>
<td class=blue width=23%><b>Property</b></td>
<td class=blue width=43%><b>Description </b></td>
<td class=blue width=34%><b>Possible Values</b></td>
</tr>
<tr valign=top>
<td width=23%>border-top</td>
<td width=43%></td>
<td width=34%></td>
</tr>
<tr valign=top>
<td width=23%>border-right</td>
<td width=43%></td>
<td width=34%></td>
</tr>
<tr valign=top>
<td width=23%>border-left</td>
<td width=43%>Sets the width, color, and style </td>
<td width=34%></td>
</tr>
<tr valign=top>
<td width=23%>border-bottom</td>
<td width=43%>properties of the border around </td>
<td width=34%></td>
</tr>
<tr valign=top>
<td width=23%>border</td>
<td width=43%>the element</td>
<td width=34%></td>
</tr>
<tr valign=top>
<td width=23%>color </td>
<td width=43%></td>
<td width=34%>any color value</td>
</tr>
<tr valign=top>
<td width=23%>width </td>
<td width=43%></td>
<td width=34%>numeric</td>
</tr>
<tr valign=top>
<td width=23%>style</td>
<td width=43%></td>
<td width=34%>thin, medium, thick</td>
</tr>
</table><br>
<h3>Supplementary Border Properties</h3>
<p>
The <b><code>border</code></b> property has additional properties in the same way that <b><code>background</code></b> does.  </p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=414>
<tr valign=top>
<td width=49%>border-color</td>
<td width=51%>border<b><code>-</code></b>style </td>
</tr>
<tr valign=top>
<td width=49%>border-right-width</td>
<td width=51%>border-left-width</td>
</tr>
<tr valign=top>
<td width=49%>border-top-width</td>
<td width=51%>border-bottom-width</td>
</tr>
</table><br>
<h1></h1>
</BODY>
</HTML>
