<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Screen Object</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000 dir=ltr>
<h1><a name="thescreenobject"></a>The Screen Object</h1>
<p>
If you're curious about the capabilities of the display your code is executing on or if you want to change the display of your page depending on the pixel and color resolution the browser is running at then the <b><code>screen </code></b>object provides you with the capability to accomplish these tasks.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=632>
<tr valign=top>
<td class=blue width=23%><b>Property</b></td>
<td class=blue width=77%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=23%><b><code>width</code></b></td>
<td width=77%>returns the width of the user's display, in pixels</td>
</tr>
<tr valign=top>
<td width=23%><b><code>height</code></b></td>
<td width=77%>returns the height of the user's display, in pixels</td>
</tr>
<tr valign=top>
<td width=23%><b><code>updateInterval</code></b></td>
<td width=77%>sets or returns the interval between screen updates</td>
</tr>
<tr valign=top>
<td width=23%><b><code>bufferDepth</code></b></td>
<td width=77%>returns or changes the color depth of the off-screen bitmap buffer</td>
</tr>
<tr valign=top>
<td width=23%><b><code>colorDepth</code></b></td>
<td width=77%>returns the currently supported color depth for the browser</td>
</tr>
</table><br>
<p>
<b><code>height</code></b> and <b><code>width</code></b> simply return the height and width of the screen. These are useful when creating new browser windows as they can be used to help decide where the new window should go. You can also use them to change the size of the existing display. </p>
<p>
The <b><code>colorDepth</code></b> property tells us how many bits per pixel the browser currently has available for displaying different colors. With one bit per pixel we can display 2<sup>1</sup> = 2 different colors, with 4 bits per pixel we can display 2<sup>4</sup> = 16 different colors, and so on. Most displays today have at least 256 colors per pixel available and some may have over 16 million different colors. One immediate use for this property is in determining how many different colors to use on our page or in graphics that we might display. If a display can only handle 16 colors, and we have a 16 color and 16 million color JPEG to choose from the <b><code>colorDepth</code></b> property can allow us to give the high resolution image only to the person with the high resolution monitor. To do this in code we'd just need to change the URL of the <b><code>&lt;IMG&gt;</code></b> tag to point to the correct graphic. </p>
<p>
In this case, our code would look something like this:</p>
<pre><code>&lt;SCRIPT LANGUAGE="VBScript"&gt;
If screen.colorDepth &gt; 4 Then
   document.writeln "&lt;IMG SRC=""manycolor.jpg""&gt;"
Else
   document.writeln "&lt;IMG SRC=""fewcolor.jpg""&gt;"
End If
&lt;/SCRIPT&gt;</code></pre>
<p>
This code block tests the value of the <b><code>colorDepth</code></b> property and then outputs a string to the browser that either references the <b><code>manycolor.jpg</code></b> file if the display is capable of more than 2<sup>4</sup> or 16 colors or the <b><code>fewcolor.jpg</code></b> file otherwise. The next chapter talks more about the <b><code>document.write</code></b> method that we're using in this example to create HTML as the page is loaded.</p>
<p>
Using the read/write <b><code>bufferDepth</code></b> property, we can instruct the browser to buffer all input off-screen before display with whatever color depth we desire – it's as simple as setting <b><code>screen.bufferDepth</code></b> to the number of pixels you'd like. <b><code>bufferDepth</code></b> can handle values of 0 (the default), 1, 4, 8, 15, 16, 24, and 32, as well as -1 (indicating that buffering should always be performed at the screen depth). Yes, this means that if you've always wanted to know what your pages looked like with two colors you now have your chance! When the <b><code>bufferDepth</code></b> property is set to the default of 0, the browser may buffer the input, but it isn't required to do so. </p>
</BODY>
</HTML>
