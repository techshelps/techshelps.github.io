<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Summary</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000 dir=ltr>
<h1><a name="ie3summary"></a>Summary</h1>
<p>
In this chapter we've gained a thorough introduction to three of the most important parts of Dynamic HTML: the browser object model, the <b><code>window</code></b> object, and most of <b><code>window</code></b>'s child objects. We looked at the reasons why the browser object model is important to Dynamic HTML programmers although held back from giving complex examples of how it can be manipulated via script code. We looked at how the object model is use to hide us from the internal operations of the browser itself. We considered the top level object, <b><code>window</code></b> and looked at its most significant properties, methods and events. We finally looked at all of the child objects of <b><code>window</code></b> to round off this chapter.</p>
<p>
Specifically, we learned that:
<ul type=disc>
<li>
The browser object model is the interface between our script code and the browser itself.<br><br></li>
<li>
Through the properties, methods, and events of the different objects in the object model, we can find out about objects, tell them to perform tasks, and be notified when something happens to the object.<br><br></li>
<li>
The <b><code>window</code></b> object is the top-level object in the object model, and, while it has a lot of significant elements, this doesn't necessarily make it the most important object we'll use in DHTML programming.<br><br></li>
<li>
A number of child <b><code>window</code></b> objects allow us to do things like access the browser's history list, find out information about the browser's version and display properties, and more</li>
</ul>
<p>
With this foundation in the object model, we're ready to move on to discuss the most important child of the <b><code>window</code></b> object, the <b><code>document</code></b> object. In the next chapter we'll be able to find out why this provides Dynamic HTML programmers with the functionality needed to manipulate individual elements on the web pages, such as text and graphics, something that was never possible in previous Internet Explorer releases.</p>
</BODY>
</HTML>
