<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Conflict Resolution (What does 'Cascading' mean anyway?)</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000 dir=ltr>
<h1><a name="conflictresolutionwhatdoescascadingmeananyway"></a>Conflict Resolution (What does 'Cascading' mean anyway?)</h1>
<p>
With all of these different ways to specify what elements should appear like, how does the style sheet engine determine which declaration wins if more than one declaration could apply to a given element?</p>
<p>
The answer is in the title of the specification we've spent so much time discussing in this chapter: <b>Cascading</b> Style Sheets. In a nutshell, the title indicates an important and special property about style sheets, which is that if more than one style attempts to format an element at the same time the style that actually formats the element will be determined based on a concrete set of rules.</p>
<h2>Specifying Your Own Style Sheet</h2>
<p>
There's one other source of style sheet information that we haven't considered yet.  In addition to the different styles we can specify in the source of our page or in a linked style sheet, the browser user can also define their own style sheet. In general the values in this sheet will be overridden by any style values in a page. The rationale behind this practice is that any style information in a page is important enough to display, but pages without style sheets can still be prettied up by following user preferences.</p>
<p>
Setting a default style sheet is easy to do with Internet Explorer 4.0. Select the Internet Options menu item from the View menu, and then click on the Accessibility… button. In the Accessibility dialog, check the Format documents using my style sheet checkbox and fill in the path or use the Browse… button to specify the location of your own personal style sheet.</p>
<p>
<img src="07070210.gif" border=0></p>
<p>
<img src="07070211.gif" border=0></p>
<h2>Rendering the Page: Resolving Style Conflicts</h2>
<p>
When a style sheet enabled browser downloads a page it runs through the following steps to determine which (if any) style information should be used to format each element:</p>
<ul type=disc>
<li>
Parse the page and consider all elements.  If an element (including its parents) contains no style information, then use the user defaults that were set via style sheet or browser options.  If parent elements contain style information use this data instead of the default values.<br><br></li>
<li>
If a conflict exists, the values are sorted again so that values set by the author of the page rank higher than default values set by the browser user.<br><br></li>
<li>
If we still have not resolved all conflicts, sort the values by their specificity to the situation.  A value that applies only to the situation at hand will override a value that applies in a more general case.</li>
</ul>
<p>
With the information from this section (and the style sheet reference, section F, in the back of the book) you can write HTML pages that look great because they contain specific formatting and layout information.</p>
</BODY>
</HTML>
