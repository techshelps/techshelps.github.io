<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Events</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000 dir=ltr>
<h1><a name="events"></a>Events</h1>
<p>
The <b><code>window</code></b> object contains the HTML document and has top-level events that make sense for this purpose:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=597>
<tr valign=top>
<td class=blue width=24%><b>Event</b></td>
<td class=blue width=76%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=24%><b><code>onblur</code></b></td>
<td width=76%>Fired when the window object loses the focus</td>
</tr>
<tr valign=top>
<td width=24%><b><code>onfocus</code></b></td>
<td width=76%>Fired when the window object gains the focus</td>
</tr>
<tr valign=top>
<td width=24%><b><code>onhelp</code></b></td>
<td width=76%>Fired when the user presses the <i>F1</i> or <i>Help</i> key</td>
</tr>
<tr valign=top>
<td width=24%><b><code>onbeforeunload</code></b></td>
<td width=76%>Fired before the browser window is closed</td>
</tr>
<tr valign=top>
<td width=24%><b><code>onresize</code></b></td>
<td width=76%>Fired when the browser window is resized</td>
</tr>
<tr valign=top>
<td width=24%><b><code>onload</code></b></td>
<td width=76%>Fired when the HTML text for the page has finished loading</td>
</tr>
<tr valign=top>
<td width=24%><b><code>onunload</code></b></td>
<td width=76%>Fired just before the page is unloaded</td>
</tr>
<tr valign=top>
<td width=24%><b><code>onscroll</code></b></td>
<td width=76%>Fired when the user scrolls a page or element</td>
</tr>
<tr valign=top>
<td width=24%><b><code>onerror</code></b></td>
<td width=76%>Fired when an error occurs loading a document or image</td>
</tr>
</table><br>
<h2><i>OnLoad, OnUnload, onBeforeUnload </i></h2>
<p>
These events are very useful for executing any code that needs to coincide with the loading or unloading of the browser. <b><code>onLoad</code></b> is fired when the HTML for the current page has been downloaded, but may fire before all images, controls, or applets have finished loading.</p>
<p>
The <b><code>onUnload</code></b> event is not only fired before the browser navigates to a new page, but also immediately before the browser is shut down (which is understandable, because the page is indeed being unloaded in preparation for application shutdown).</p>
<p>
Finally, <b><code>onBeforeUnload</code></b>, fires before the page is unloaded. This event is only used during data binding and it allows you to validate entries in a field, before they're sent to a server, or pop a message box up. Its uses are discussed in the data binding section of the book in chapter 8.</p>
<h2><i>OnFocus and OnBlur</i></h2>
<p>
When the user of the browser switches to another application or instance of IE4, <b><code>onBlur</code></b> is fired. Any code placed in this event will be executed before the switch to the new window is made. The converse of <b><code>onBlur</code></b> is <b><code>onFocus</code></b>. This event is fired in the current browser when the user switches <b>back</b> to the browser window from another application. While <b><code>onFocus</code></b> and <b><code>onBlur</code></b> existed in the Internet Explorer 3.0 object model for some form elements, their appearance in the object definition for the <b><code>window</code></b> object didn't happen until IE4.</p>
<h2><i>OnResize</i></h2>
<p>
This event is rather simple compared to some of the other events we've just finished considered. When the browser window is resized, this event is fired. </p>
<h2><i>OnHelp</i></h2>
<p>
If a user presses <i>F1</i> (or another key that happens to be mapped to online help), the window's <b><code>onHelp</code></b> event is fired. This gives the developer control over what will happen if a person browsing their page requests help. The code for this event could redirect the user to one or more help pages on the same or another server on the internet/intranet. The new page can be displayed in a new window, in a modal dialog, or in the same browser window by using the <b><code>open</code></b>, <b><code>showModalWindow</code></b>, or <b><code>navigate</code></b> methods of the <b><code>window</code></b> object, respectively.</p>
<h2>OnScroll</h2>
<p>
If not all of the display is visible to the user, and the user has to scroll the display to view it, in its entirety then an <b><code>onscroll</code></b> event is generated.</p>
<h2>OnError</h2>
<p>
This is perhaps one of the most useful events. It can be used if an error occurs during the download of a page or image. It can be used to determine whether an error occurred to the connection or whether the download was actually aborted. The user can allow for this eventuality within script and decide whether to get the script to try and download the information again, or display an appropriate message and take corrective action.</p>
</BODY>
</HTML>
