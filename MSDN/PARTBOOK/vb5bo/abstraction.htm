<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Abstraction</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000 dir=ltr>
<h1><a name="abstraction"></a>Abstraction</h1>
<p>
Abstraction is the process by which we can think about specific properties or behaviors without thinking about a particular object that has those properties or behaviors. We know that most cars have four wheels, a steering and an engine, without thinking of any particular car, or how the internals of the engine operates.</p>
<p>
Abstraction allows us to recognize how things are similar and ignore differences - to think in general terms, and not the specifics. A <b><code>TextBox</code></b> control is an abstraction, because we can place it on a form, and then tailor it to our needs by setting properties. Visual Basic allows us to define abstractions using class modules.</p>
<p>
Any language that allows a developer to create a class from which objects can be instantiated meets this criteria, and Visual Basic is no exception. We can easily create a class to represent a car, essentially providing an abstraction. We can then create instances of that class, where each object can have its own attributes such that it represents a specific automobile.</p>
</BODY>
</HTML>
