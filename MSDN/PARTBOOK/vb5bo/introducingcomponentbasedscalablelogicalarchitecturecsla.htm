<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Introducing the Component-based Scalable Logical Architecture (CSLA)</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000 dir=ltr>
<h1><a name="introducingcomponentbasedscalablelogicalarchitecturecsla"></a>Introducing the Component-based Scalable Logical Architecture (CSLA)</h1>
<p>
To effectively use business objects and components to develop our applications, it's very helpful to start with a good <b>logical architecture</b>. This means that we want to start with a firm idea about what types of services our application will provide, and whether we want to implement them in our user-interface, in components or in a SQL database server.</p>
<p>
In this section, we'll look in detail at the logical architecture that we'll be using throughout the remainder of the book. The CSLA is designed to work well whether it's placed entirely on a single workstation or whether it's spread across a number of machines in a network. With this type of design, we can scale an application from a single to many users with relative ease.</p>
<p>
A logical architecture includes all the parts of an application. For instance, a typical three-tier application is composed of the following parts:</p>
<ul type=disc>
<li>
Presentation<br><br></li>
<li>
Business processing<br><br></li>
<li>
Data processing</li>
</ul>
<p>
The following diagram shows how these parts, or tiers, work together to make up an application:</p>
<p>
<img src="image2-4.gif" border=0></p>
<p>
The presentation tier, or user-interface, acts as a client to our business objects. The business processing is handled by the middle tier. This tier is composed of our business objects, all working together to implement the functionality required for our application. The business objects themselves rely on the third tier to manage data processing, storing, retrieving and manipulating data within our databases.</p>
<p>
The best way to see how an application can be divided into tiers is to look at a traditional application and break it apart - so that's what we'll do now.</p>
</BODY>
</HTML>
