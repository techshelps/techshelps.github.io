<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CORBA</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000 dir=ltr>
<h1><a name="corba"></a>CORBA</h1>
<p>
The Object Management Group (OMG) is a consortium of companies that have banded together to develop an object communication standard. The Common Object Request Broker Architecture (CORBA) is a standard that competes with Microsoft's Component Object Model (COM) in many ways.</p>
<p>
The various companies involved, and the industry press, tend to dwell on the differences between the two competing standards. While it's true that there are differences, what I want to emphasize here is the similarities between these standards.</p>
<p>
Both CORBA and COM provide standardized mechanisms for objects to communicate with each other. They specify how components and applications can be built in a distributed and organized fashion. CORBA, like DCOM, provides for communication between objects distributed across a network, providing for complex multi-tiered applications based on the standard.</p>
<p>
Perhaps most importantly, CORBA and COM both encourage the use of business objects in their architectures. And they both advocate a separation of business rules from the presentation layer, in such a way that the main application logic is contained in an object model that's largely independent of the user-interface.</p>
</BODY>
</HTML>
