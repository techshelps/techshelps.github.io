<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Single-tier Applications</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000 dir=ltr>
<h1><a name="singletierapplications"></a>Single-tier Applications</h1>
<p>
A single-tier application is the simplest of the models that we'll look at. This type of application is simply a program that runs on the user's machine. It might talk to a database, but that database resides on the same machine (or perhaps on a mapped network drive). The key thing, here, is that all the work takes place on the same machine: the user interface, business- and data-processing are all on the user's computer.</p>
<p>
A diagram of this type of application would look like this:</p>
<p>
<img src="image1-13.gif" border=0></p>
<p>
Now let's look at where the business objects fit into the picture:</p>
<p>
<img src="image1-14.gif" border=0></p>
<p>
In this type of application, everything is pretty simple. Since our entire application is running on a single machine, the business objects just fit right into the application.</p>
<p>
Don't worry about the data service objects just yet. We'll discuss what they are and what they do in Chapter 2. For now, let's just look at them as being the code that communicates between business objects and the database.</p>
</BODY>
</HTML>
