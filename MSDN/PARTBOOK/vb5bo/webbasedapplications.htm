<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Web-based Applications</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000 dir=ltr>
<h1><a name="webbasedapplications"></a>Web-based Applications</h1>
<p>
The models that I've presented so far leave a fair amount of the application on the client workstation. Applications designed for the World Wide Web take an entirely different approach. Web applications put as little of the application as is physically possible on the client, and keep all the processing centralized on one or more servers:</p>
<p>
<img src="image1-19.gif" border=0></p>
<p>
Since the browser will only provide a user-interface, the rest of our application needs to move down to the server:</p>
<p>
<img src="image1-20.gif" border=0></p>
<p>
In this figure, we still have an interface, our business objects, and our services. What we've done is moved virtually everything down to the server, leaving a very light user interface on the user's workstation.</p>
<p>
The big difference is that instead of a <i>user</i>-interface on top of our business objects, we now have a <i>web</i>-interface. This is a layer of code that interacts with the web server to communicate with the client. The web-interface is basically a layer of 'glue' between the business objects and the HTML that gets sent to the user's browser.</p>
<p>
The web interface provides HTML to the browser via the web server and accepts the user's input through the browser and web-server. There are many technologies available to build this web interface - including CGI, ISAPI, Active Server Pages and others.</p>
<p>
There are some other fairly significant issues with this type of architecture. In Chapter 11, we'll implement a browser-based user-interface using Active Server Pages as the glue between the business objects and the web server.</p>
</BODY>
</HTML>
