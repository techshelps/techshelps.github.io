<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Part 2 - Building Active Server Applications</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000 dir=ltr>
<h1><a name="part2buildingactiveserverapplications"></a>Part 2 - Building Active Server Applications</h1>
<p>
In the first part of this book, we've been learning about Active Server Pages almost as though it was a technology on it's own. While we discovered that it could achieve some very clever effects with our Web pages, and do a lot of server-based information processing, we only ever sent what were effectively static pages back to the client's browser. In other words, all we were really doing was churning out text and HTML code—to the browser, it seemed like it was talking to a traditional Web site full of normal, static pages.</p>
<p>
Of course, this is a good thing in many ways. It means that we minimize any compatibility concerns at the client's end, because we can produce pages to a lowest common denominator standard. Almost any browser can understand them. For a site that is basically in the business of supplying static information, this is an ideal scenario.</p>
<p>
But, today, we generally need to do a lot more than that. Our visitors expect 'cool', dynamic, exciting pages—especially if they're just surfing rather than seeking particular nuggets of information. This means we need to use other techniques, not just Active Server Pages. Once the page has been sent to the client, ASP on its own can do nothing to influence the content. </p>
<p>
The other topic that we must consider is how we can combine all our pages into a working application. Again, on a site that just needs to supply static information, this may not be a priority, though it can make a visitor's experience much nicer. In many cases, and especially on the corporate Intranet, this is an absolute necessity.</p>
<p>
In this part of the book, we move on from focusing solely on Active Server Pages to consider how we can combine it with other techniques to create these interactive applications. We're into the world of client/server now, so stand up and feel proud—no longer are you just a Webmaster, you're a client/server developer!</p>
</BODY>
</HTML>
