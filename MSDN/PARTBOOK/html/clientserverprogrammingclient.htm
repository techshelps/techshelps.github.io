<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Client/Server - Programming the Client</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000 dir=ltr>
<h1><a name="clientserverprogrammingclient"></a>Client/Server - Programming the Client</h1>
<p>
In the previous chapter, we looked at how to go about building client/server applications using Active Server Pages. We discovered that, in order to achieve the kind of flexibility and efficiency we want, we have to look at how we can spread the processing load between the client and the server. To do this, we have to understand two main topics: how we can program the browser (the client), and how we can link the processing to that going on in ASP on the server.</p>
<p>
These two topics are the subject of this chapter and the next. We won’t be providing detailed coverage of every possible client-side topic, since this isn’t a book on programming Internet Explorer or Netscape Navigator. However, we want to introduce the concepts and tools, so we can determine when a particular task might be better accomplished with some addition of client-side functionality. To make this decision we need to know what technologies are available on the client, and how they’re used.</p>
<p>
This chapter shows how code can be added to an HTML page, and how the browser object model is used. The next chapter talks about using objects on the client, and shows some real-world examples of how combining these techniques with Active Server Pages can be helpful.</p>
<p>
So, specifically, in this chapter, we’ll cover:
<ul type=disc>
<li>
The mechanics of writing scripting code on the client browser.<br><br></li>
<li>
How to connect the script to the browser's objects and events.<br><br></li>
<li>
The browser object model, and how we use it in our programs.</li>
</ul>
<p>
So let’s get right on and look at how script code fits in on client-side.</p>
</BODY>
</HTML>
