<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Getting Into Client/Server</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000 dir=ltr>
<h1><a name="gettingintoclientserver"></a>Getting Into Client/Server</h1>
<p>
Up to now, our discussion of Active Server Pages has centered on the application of the specific technologies within the Active Server framework. In Chapters 1 and 2 we discussed what Active Server Pages is, and learned about its object model and the ways we can program our pages in this context. In Chapter 3, we discovered Server Components, which can make our life easier by providing plug-in objects that will perform specific tasks. Then, in Chapters 4 and 5, we discussed how we can integrate databases with our pages using the Active Database Component.</p>
<p>
This chapter begins a broader exploration of Active Server Pages. Now that you are familiar with the individual techniques, we'll move on to look at how they can be combined with existing technologies available on the client's browser—and implemented from a client/server point of view. </p>
<p>
Developing a client/sever application is never a simple task. While many of the benefits of the Web and the Active Server platform are universal access, richer content, and easier creation, ASP does not trivialize the process. What it does is simplify the distribution of server code and client code. In this part of the book, we'll learn how to start building client server applications that can be used in mission critical situations. </p>
<p>
But first, we need to understand the background to client/server as a whole. If you are coming to ASP from a Web site developer's point of view, the term client/server may well carry threatening overtones. So we'll use this chapter to explain what client/server actually is, where it comes from, and how you can easily get into it using Active Server Pages.</p>
<p>
Specifically, we'll be looking at:</p>
<p>
Where client/server came from, and where it's going.</p>
<p>
How client/server can be applied to Active Server Pages.</p>
<p>
How we go about designing a client/server application.</p>
<p>
How we integrate server-side components and database connections. </p>
<p>
So, to start the ball rolling, just what are client/server applications?</p>
</BODY>
</HTML>
