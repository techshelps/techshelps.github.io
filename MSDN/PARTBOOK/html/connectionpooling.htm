<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Connection Pooling</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000 dir=ltr>
<h1><a name="connectionpooling"></a>Connection Pooling</h1>
<p>
In each of the examples we've discussed, we've created a new <b><code>Connection</code></b> object for each session, and then done something with it. However, consider a site where the number of simultaneous users is in the hundreds. In this environment, creating a new <b><code>Connection</code></b> object for each and every user can be very resource intensive. To help alleviate this problem, ADO can take advantage of a new feature provided with ODBC 3.0 and ASP known as <b>connection</b> <b>pooling</b>. This is a resource manager for connections, maintaining the open state on frequently used connections, and thereby avoiding the need to continuously create new connections.</p>
</BODY>
</HTML>
