<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Running an In-Proc Server Remotely</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000 dir=ltr>
<h1><a name="runninginprocserverremotely"></a>Running an In-Proc Server Remotely</h1>
<p>
We can't just run ATLDept since it's a DLL. Instead we use a surrogate provided by DCOM. This is a program called <b><code>Dllhost.exe</code></b> and is installed by default in your <b><code>\Windows\System</code></b> directory during installation of DCOM for Windows 95. The operation of the surrogate process is quite straightforward: it simply creates a process space for the DLL server to execute in. It aggregates all of the DLL's interfaces and exposes them to any remote clients.</p>
<p>
The command line syntax for invoking the surrogate is:</p>
<p>
<b><code>DLLHOST &lt;clsid&gt;</code></b></p>
<p>
For example, we can host the <b><code>ATLDept.dll</code></b> by specifying the class id of the ATLDept class. (Note: one easy way to get the class id is to use Object Viewer, select the class and choose the <u>O</u>bject menu, selecting the Copy <u>C</u>LSID to the clipboard option).</p>
<p>
<b><code>DLLHOST {D2A1CBC6-4C5E-11D0-8564-004005263AF7}</code></b></p>
<p>
This will start the surrogate process waiting for DCOM calls on behalf of the <b><code>ATLDept.dll</code></b> server. If you examine the Implementation tab of the right pane of the Object Viewer display with the Inproc Server tab selected, you'll also see a space for specifying the surrogate process:</p>
<p>
<img src="03750913.gif" border=0></p>
<p>
The entry here is rather useless under Windows 95. Under Windows NT, if you specify an entry here, the 'automatic launching' service can launch the <b><code>Dllhost.exe</code></b> surrogate with the <b><code>ATLDept.dll</code></b> whenever a client call is received remotely. On the other hand, starting such a surrogate must be performed manually on Windows 95. What's more interesting, if you were to instantiate ATLDept from Object Viewer, it would simply call the in-proc server directly without going through the expensive surrogate process.</p>
</BODY>
</HTML>
