<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Remote Activation (Server Launching)</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000 dir=ltr>
<h1><a name="remoteactivation(serverlaunching)"></a>Remote Activation (Server Launching)</h1>
<p>
One major difference between DCOM for Windows 95 and Windows NT DCOM is the ability to automatically launch (or activate) a remote server to create object instances. Providing that the client has the required security blanket, server launching/activation is automatic on Windows NT. On Windows 95, it isn't possible to automatically launch a server. Instead, COM servers must be launched manually in Windows 95 before they may be used remotely.</p>
<p>
This difference can be attributed to the lack of support for network or multiuser security under Windows 95. Under Windows 95, every process runs as the current user and there's no way to circumvent this. The only authentication level accepted is 'connect' under Windows 95 (once again, more on this in Chapter 9), this means that separation between accessible resources for concurrently executing servers is nonexistent and that impersonation isn't possible. From a security perspective, all currently running processes on a Windows 95 system are executing under a single user account. The bottom line is that COM servers running concurrently on Windows 95 can't provide privacy or resource protection features. This is a rather sad affair, and renders Windows NT the preferred server platform for DCOM objects.</p>
</BODY>
</HTML>
