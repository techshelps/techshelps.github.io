<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Advanced Database Techniques</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000 dir=ltr>
<h1><a name="advanceddatabasetechniques"></a>Advanced Database Techniques</h1>
<p>
In the last chapter, we spent a lot of time looking at the basic structure of the <b>Active</b> <b>Database</b> <b>Component</b>. This was intentional because, while it isn't as complex as many other Microsoft database engines, it's important that you are comfortable with the way that it's used before we go on to look at more complicated techniques. As you've seen, ADO follows the example of earlier database systems in being built around a defined object structure. This means that working with it requires a structured approach, but it brings many benefits.</p>
<p>
For example, we've see that there are several different ways of creating a <b><code>Recordset</code></b>, and directly updating the database. The ADO is very flexible, and a great deal more complicated that any of the other Server Components we looked at in earlier chapters. However, while the techniques we used in the previous chapter are fine for databases such as Microsoft Access, in the real world we often have to connect our Web site to one of the more commercially-oriented systems. This might be Microsoft's SQL Server, Oracle, Sybase, DB2 or any of the other enterprise-based systems.</p>
<p>
We also need to investigate some of the more advanced ways that the Active Database Component can be used. Rather than the simple examples you saw in the previous chapter, you'll now see how some real-world problems can be solved. For example, we need to consider how our pages might affect the security of our data, and take steps to protect our database systems. We'll be putting all the techniques you saw in the previous chapter to good use, and combining them to produce examples that more closely resembles the kinds of situation that you are going to meet.</p>
<p>
So, in this chapter, we'll be looking at:</p>
<ul type=disc>
<li>
How the Active Data Object links to different databases<br><br></li>
<li>
Techniques for manipulating enterprise-oriented databases<br><br></li>
<li>
Real-world problem-solving techniques with the Active Data Object<br><br></li>
<li>
How we can maintain security when linking a database to the Web</li>
</ul>
</BODY>
</HTML>
