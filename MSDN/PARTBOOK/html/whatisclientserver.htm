<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>What Is Client/Server?</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000 dir=ltr>
<h1><a name="whatisclientserver"></a>What Is Client/Server?</h1>
<p>
In previous chapters, we've used the term <b>client</b> regularly enough, and it's pretty reasonable to assume you wouldn't have got this far if you didn't know what a <b>server</b> was. However, as any good cook will tell you, you can't always define the results of something in terms of its constituents. Just because my mother can take some flour, water, and a few other ingredients, and turn out a wonderful sponge cake, it doesn't mean that my desperate attempts at stirring them together and incinerating them in an oven will produce anything remotely edible.</p>
<p>
So, it's all about the subtler ways that we combine the ingredients of our applications, that make them greater than the sum of their parts—the cream buns in the World Wide Web delicatessen. Our ingredients may be just lumps of hi-tech electronic equipment, and some files full of text, HTML, and code—but the combination can produce remarkably smooth and dynamic <b>client/server</b> <b>applications</b>. By the end of this book, you'll be in a position to receive your own Web site 'chef of the year' award.</p>
</BODY>
</HTML>
