<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Best Method for Secured Intranet</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000 dir=ltr>
<h1><a name="bestmethodforsecuredintranet"></a>Best Method for Secured Intranet</h1>
<p>
We see above a gamut of ways in which a web browser and server combination would react in a secured environment. It's interesting to observe that a fully homogeneous Microsoft installation in the intranet scenario can make security control completely transparent to the end user. This is obviously done by design rather than by accident, and is often a consideration when IS departments consider new intranet implementations.</p>
</BODY>
</HTML>
