<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Multiple Recordsets</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000 dir=ltr>
<h1><a name="usingmultiplerecordsets"></a>Using Multiple Recordsets</h1>
<p>
One other nice method available for the <b><code>Recordset</code></b> object is <b><code>NextRecordset</code></b>. So far, we've only talked about a <b><code>CommandText</code></b> property as containing one SQL query. We can provide multiple SQL queries as long as they are separated by semicolons, in the form <b><code>SELECT</code></b> <b><code>*</code></b> <b><code>FROM</code></b> <b><code>Table1;</code></b> <b><code>SELECT</code></b> <b><code>*</code></b> <b><code>FROM</code></b> <b><code>Table2;</code></b> etc.. Normally, when we open a recordset from a query like this, it's only the first set of results that are available. To retrieve the next set of records we just call the <b><code>NextRecordset</code></b> method. We can also supply the name of a variable that will be set to the number of records affected by the query, though this is optional:</p>
<p>
<b><code>Set</code></b> <i>recordset</i> <b><code>=</code></b> <i>recordset</i><b><code>.NextRecordset(</code></b><i>RecordsAffected</i><b><code>)</code></b></p>
<p>
When we use the <b><code>NextRecordset</code></b> method, we're provided with a new <b><code>Recordset</code></b> variable that is one of the following:</p>
<ul type=disc>
<li>
If a row-returning command returns no records, the <b><code>Recordset</code></b> object referenced by the variable will be empty. We can test for this case by inspecting the <b><code>BOF</code></b> and <b><code>EOF</code></b> properties, which will both be <b><code>True</code></b>.<br><br></li>
<li>
If a non row-returning command completes successfully, the <b><code>Recordset</code></b> referenced by the variable will be closed. We can test for this case by ensuring that the <b><code>Recordset</code></b> object variable is not equal to <b><code>Nothing</code></b>. In this case, inspecting the <b><code>EOF</code></b> property will generate an error.<br><br></li>
<li>
When there are no more statements, the <b><code>Recordset</code></b> variable returned will be set to <b><code>Nothing</code></b>.</li>
</ul>
<p>
Note that the <b><code>NextRecordset</code></b> method will continue to return <b><code>Recordset</code></b> objects as long as there are additional SQL statements in our <b><code>CommandText</code></b> parameter.</p>
</BODY>
</HTML>
