<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Designing for Client/Server</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000 dir=ltr>
<h1><a name="designingforclientserver"></a>Designing for Client/Server</h1>
<p>
We spent some time early in this chapter looking at what client/server really is, and how we need to build applications to a structure that makes sense for the environment where they are used. In our case, whether on the Internet or an Intranet, we are looking to share processing as evenly as possible between the client and the server. This involves moving the business rules, wherever appropriate, to the client—and leaving the server to do the actual processing work.</p>
<p>
The browser (our client) can no longer be just the dumb terminal that we’ve been assuming all the way through this book so far. It has to do its share of the work where appropriate, and to achieve this we need to extend our application's processing across the network. We need to be able to program the client. Much of the rest of this book details how we can do this, and how we integrate the processing at both ends of the wire into a seamless application. </p>
<p>
To finish off this chapter, we'll look briefly at the methods available to do this, and consider how this affects the design of our applications. We'll be considering three main areas:</p>
<p>
Designing to match the Business Rules.</p>
<p>
Different ways to use a browser.</p>
<p>
Client-side scripting and components.</p>
</BODY>
</HTML>
