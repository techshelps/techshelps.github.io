<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Arrays and the GetRows Method</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000 dir=ltr>
<h1><a name="usingarraysgetrowsmethod"></a>Using Arrays and the GetRows Method</h1>
<p>
We'll often find ourselves wanting to repetitively scan through a recordset searching for different sets of data. This can easily be achieved using dynamic cursor recordsets or multiple SQL queries, but both are less that ideal in the efficiency stakes. There is a far more efficient method at our disposal. ADO provides us with a method that enables us to easily convert a <b><code>Recordset</code></b> object into an array—which can then be scanned efficiently using ordinary code. This is the syntax:</p>
<p>
<i>variantarray</i> <b><code>=</code></b> <i>recordset</i><b><code>.GetRows(</code></b><i>NumberOfRows</i><b><code>)</code></b></p>
<p>
The <b><code>GetRows</code></b> method takes a <b><code>Recordset</code></b> object and converts it into the equivalent multi-dimensioned array. Just as we'd expect, a recordset consisting of three fields and ten records is converted to a 3 x 10 array—think of the first dimension being horizontal and the second vertical, just like a normal table is displayed in Access or SQL Server. The <i>NumberOfRows</i> argument is optional, and specifies the number of records to retrieve. This argument is frequently used on ordered recordsets, where the record ordering has been set by a defined table index, or an <b><code>ORDER</code></b> <b><code>BY</code></b> clause in the SQL query. You'll see the <b><code>GetRows</code></b> method used in the Forum case study chapter later in the book.</p>
</BODY>
</HTML>
