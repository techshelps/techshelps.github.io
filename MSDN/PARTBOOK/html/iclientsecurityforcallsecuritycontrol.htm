<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IClientSecurity for Call Security Control</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000 dir=ltr>
<h1><a name="iclientsecurityforcallsecuritycontrol"></a>IClientSecurity for Call Security Control</h1>
<p>
If the client calls <b><code>CoInitializeSecurity()</code></b>, the security values for authentication and authorization for the process are set. If a fine-grain security control is required on the calls to individual interfaces, the client can achieve this by invoking security functions on each of the interface proxies. The main security interface to achieve this on the client side is <b><code>IClientSecurity</code></b>. You can obtain it by doing a <b><code>QueryInterface()</code></b> on an interface from the remote object for <b><code>IID_IClientSecurity</code></b>. In reality, since every remote object method invocation goes through a proxy managed by a proxy manager (who actually aggregates the proxy object), the proxy manager will intercept and provide this interface. </p>
<p>
<img src="03751004.gif" border=0></p>
<p>
Once the <b><code>IClientSecurity</code></b> interface is obtained, the client can change the security blanket for this single proxy instance by first using the <b><code>IClientSecurity::CopyProxy()</code></b> method to create a new instance of the proxy, and then using the <b><code>IClientSecurity::SetBlanket()</code></b> method of the interface to alter the blanket. It's important to make a copy of the proxy before setting its security blanket to avoid contention with other portions of the process that may be setting the security blanket to other values. </p>
<p>
There are wrapper functions available which call the <b><code>IClientSecurity</code></b> methods, these include <b><code>CoSetProxyBlanket()</code></b>, <b><code>CoQueryProxyBlanket()</code></b>, and <b><code>CoCopyProxy()</code></b>. </p>
<p>
Clients can call <b><code>CoQueryProxyBlanket()</code></b> to inquire about the existing security blanket on a proxy, <b><code>CoSetProxyBlanket()</code></b> to set a new security blanket on a proxy, and <b><code>CoCopyProxy()</code></b> to obtain a proxy copy on which a security blanket can be set without contention.</p>
</BODY>
</HTML>
