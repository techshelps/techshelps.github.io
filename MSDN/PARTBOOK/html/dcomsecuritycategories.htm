<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DCOM Security Categories</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000 dir=ltr>
<h1><a name="dcomsecuritycategories"></a>DCOM Security Categories</h1>
<p>
The following security categories are important in DCOM:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=blue width=160><b>Category</b></td>
<td class=blue width=361><b>Meaning</b></td>
</tr>
<tr valign=top>
<td width=160>Access security</td>
<td width=361>Specifying which clients have the right to connect with a running object. Clients might not have the right to launch a server but might be allowed to connect to one if it is already running.</td>
</tr>
<tr valign=top>
<td width=160>Launch (activation) security</td>
<td width=361>Specifying which clients can start the execution of the server process on the remote machine.</td>
</tr>
<tr valign=top>
<td width=160>Call security</td>
<td width=361>This essentially allows for security blanket negotiation on a 'per interface instance' level. More precisely, it enables the client to set the security blanket for each server interface proxy object which allows the server to check the security blanket per call when it arrives.<p>
It is important to have call level security in DCOM. After a successful launch, the client might pass a remote interface pointer (actually a proxy) to another unauthorized client. If security isn't provided on a per call level, the system can be compromised. </p>
</td>
</tr>
</table>
</BODY>
</HTML>
