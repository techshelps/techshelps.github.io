<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Summary</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000 dir=ltr>
<h1><a name="7summary"></a>Summary</h1>
<p>
So that’s it! We’ve worked through a tremendous amount of material in this chapter, but at least we’ve covered the object model thoroughly. You should now have a deep enough understanding to understand the detailed examples in the next chapter, and to know when and how to use the object model in your own client-side programming.</p>
<p>
The main points of the chapter are:
<ul type=disc>
<li>
All modern Web browsers support a standardized object model, for which we can write script using any of the available scripting languages such as VBScript and JavaScript.<br><br></li>
<li>
The object model gives us a way to link our script to the browser itself, and to the pages it is displaying. We can emulate and automate most of the tasks that are possible on the browser.<br><br></li>
<li>
The concept of attaching script to events means that we can react to things that happen in the browser. This is not something that we are used to with server-side scripting.</li>
</ul>
<p>
In the next chapter, you'll stop thinking about the browser as something separate from the server. Instead, as in a true client/server situation, you'll start to think about the actual combination of the ability to create dynamic web pages on the server, while executing code on the client as well. For this, you need to be comfortable with how the browser can handle script that is sent from our Active Server Pages on the server in the first place. We'll show you how this works out in practice. We’ll talk about using new objects, and show you many real-world examples of how client-side code can help to share the processing load.</p>
</BODY>
</HTML>
