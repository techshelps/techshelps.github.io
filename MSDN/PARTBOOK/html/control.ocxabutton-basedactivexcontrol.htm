<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Control.ocx: A Button-Based ActiveX Control</title>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<font face="verdana, arial, helvetica" size="2"><h1><a name="control.ocxabutton-basedactivexcontrol"></a>Control.ocx: A Button-Based ActiveX Control</h1>
<p>
Basing custom controls on existing control types is useful, because it means that the standard events, such as mouse button presses or character entry, are already supported, and we can add event-handling functions to a control simply by using Visual C++&#39;s ClassWizard. In fact, we can draw the control ourselves even if we base it on a standard Windows control. For example, let&#39;s draw a button with a cloudy day image that changes to a sunny day when the button is pushed. Although this control is based on the Windows button type, we can make it look like and act however we want, because we&#39;ll draw it ourselves. Let&#39;s call this new project CONTROL; when we insert a control of this type in a Web page, we&#39;ll be able to control its appearance when we draw it:</p>
<pre><code>Web Page
         -----------------------
        |                       |
        |        ------------   |
        |       |            |&lt;--- we draw our button here 
        |       |            |  |
        |       |            |  |
        |       |            |  |
        |        ------------   |
        |                       |
         -----------------------</code></pre>
<p>
Using OLE ControlWizard, give this new project the name CONTROL and create it as we did for Lister. In Step 2 of the OLE ControlWizard, select BUTTON as the type of control our project should subclass (just as we selected LISTBOX in LISTER). Click Finish to allow ControlWizard to create this project.</p>
<p>
As before, ControlWizard creates many files, including these important ones:</p>
<p>
CONTROL.MAK: The project file</p>
<p>
CONTROL.CPP: OLE DLL initialization, termination, other bookkeeping</p>
<p>
CONTROLCTL.CPP: Main implementation file (CControlCtrl class)</p>
<p>
CONTROLPPG.CPP: Implementation of the CControlPropPage property page class</p>
<p>
CONTROL.ODL: Object Description Language source code for the type library</p>
<h1></h1>
</font></BODY>
</HTML>
