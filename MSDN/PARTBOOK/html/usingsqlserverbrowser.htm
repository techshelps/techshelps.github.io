<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the SQL Server Browser</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000 dir=ltr>
<h1><a name="usingsqlserverbrowser"></a>Using the SQL Server Browser</h1>
<p>
The second of the Upsizing Wizard's two tools is the <b>SQL</b> <b>Server</b> <b>Browser</b>. It's essentially a database container integrated into the Access development environment. It allows us to view, edit and modify SQL Server objects, including <b><code>Tables</code></b>, <b><code>Views</code></b>, <b><code>Rules</code></b>, <b><code>Defaults</code></b> and <b><code>Stored</code></b> <b><code>Procedures</code></b>. This allows the developer to take advantage of their understanding of Access when developing against a back-end database.</p>
<p>
Just like Upsizing Wizard, the SQL Browser requires an ODBC definition to create the connection to SQL Server. It provides an "Access-like" view of SQL Server:</p>
<p>
<img src="07235_07.gif" border=0></p>
<p>
A developer familiar with Access should have no difficulty interacting with the SQL Server database using this utility. By using Upsizing Wizard and the SQL Server Browser, moving from an Access data source to a SQL Server data source can be relatively painless. </p>
</BODY>
</HTML>
