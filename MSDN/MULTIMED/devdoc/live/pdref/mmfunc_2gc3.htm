<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>midiOutCacheDrumPatches</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_midioutcachedrumpatches"></a>midiOutCacheDrumPatches</h1>
<p>
The <b>midiOutCacheDrumPatches</b> function requests that an internal MIDI synthesizer device preload and cache a specified set of key-based percussion patches. </p>
<pre><code><b>MMRESULT midiOutCacheDrumPatches(
  HMIDIOUT</b><i> hmo</i><b>,       </b>
<b>  UINT</b><i> wPatch</i><b>,        </b>
<b>  WORD *</b><i> lpKeyArray</i><b>,  </b>
<b>  UINT</b><i> wFlags         </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hmo</i></dt>
<dd>
Handle of the opened MIDI output device. This device should be an internal MIDI synthesizer. This parameter can also be the handle of a MIDI stream, cast to <b>HMIDIOUT</b>.</dd>
<dt>
<i>wPatch</i></dt>
<dd>
Drum patch number that should be used. This parameter should be set to zero to cache the default drum patch.</dd>
<dt>
<i>lpKeyArray</i></dt>
<dd>
Address of a <a href="mmtype_7pdl.htm">KEYARRAY</a> array indicating the key numbers of the specified percussion patches to be cached or uncached.</dd>
<dt>
<i>wFlags</i></dt>
<dd>
Options for the cache operation. It can be one of the following flags:
<dl>
<dt>
MIDI_CACHE_ALL</dt>
<dd>
Caches all of the specified patches. If they cannot all be cached, it caches none, clears the <a href="mmtype_7pdl.htm">KEYARRAY</a> array, and returns MMSYSERR_NOMEM.</dd>
<dt>
MIDI_CACHE_BESTFIT</dt>
<dd>
Caches all of the specified patches. If they cannot all be cached, it caches as many patches as possible, changes the KEYARRAY array to reflect which patches were cached, and returns MMSYSERR_NOMEM.</dd>
<dt>
MIDI_CACHE_QUERY</dt>
<dd>
Changes the <a href="mmtype_7pdl.htm">KEYARRAY</a> array to indicate which patches are currently cached.</dd>
<dt>
MIDI_UNCACHE</dt>
<dd>
Uncaches the specified patches and clears the KEYARRAY array.
</dd>
</dl>
</dd>
</dl>
<h4>Return Values</h4>
<p>
Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following: </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Value</th>
<th align=left width=52%>Description</th>
</tr>
<tr valign=top>
<td width=48%>MMSYSERR_INVALFLAG</td>
<td width=52%>The flag specified by <i>wFlags</i> is invalid.</td>
</tr>
<tr valign=top>
<td width=48%>MMSYSERR_INVALHANDLE</td>
<td width=52%>The specified device handle is invalid.</td>
</tr>
<tr valign=top>
<td width=48%>MMSYSERR_INVALPARAM</td>
<td width=52%>The array pointed to by the <i>lpKeyArray</i> array is invalid.</td>
</tr>
<tr valign=top>
<td width=48%>MMSYSERR_NOMEM</td>
<td width=52%>The device does not have enough memory to cache all of the requested patches.</td>
</tr>
<tr valign=top>
<td width=48%>MMSYSERR_NOTSUPPORTED</td>
<td width=52%>The specified device does not support patch caching.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
Some synthesizers are not capable of keeping all percussion patches loaded simultaneously. Caching patches ensures that the specified patches are available.</p>
<p>
Each element of the <a href="mmtype_7pdl.htm">KEYARRAY</a> array represents one of the 128 key-based percussion patches and has bits set for each of the 16 MIDI channels that use the particular patch. The least-significant bit represents physical channel 0, and the most-significant bit represents physical channel 15. For example, if the patch on key number 60 is used by physical channels 9 and 15, element 60 would be set to 0x8200.</p>
<p>
This function applies only to internal MIDI synthesizer devices. Not all internal synthesizers support patch caching. To see if a device supports patch caching, use the MIDICAPS_CACHE flag to test the <b>dwSupport</b> member of the <b>MIDIOUTCAPS</b> structure filled by the <b>midiOutGetDevCaps</b> function.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in mmsystem.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use winmm.lib.</p>
<h4>See Also</h4>
<p>
<a href="../pdgrmm/midi_1wv3.htm">Musical Instrument Digital Interface (MIDI) Overview</a>, <a href="../pdgrmm/midi_3fqr.htm">MIDI Functions</a>, <a href="mmtype_7pdl.htm">KEYARRAY</a>, <a href="mmstr_16ya.htm"><b>MIDIOUTCAPS</b></a>, <a href="mmfunc_4wab.htm"><b>midiOutGetDevCaps</b></a></p>
<p>&nbsp;</p></body>
</HTML>
