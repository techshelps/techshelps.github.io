<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>JOYINFOEX</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_joyinfoex_str"></a>JOYINFOEX</h1>
<p>
The <b>JOYINFOEX</b> structure contains extended information about the joystick position, point-of-view position, and button state.</p>
<pre><code>typedef struct joyinfoex_tag { 
    DWORD dwSize; 
    DWORD dwFlags; 
    DWORD dwXpos; 
    DWORD dwYpos; 
    DWORD dwZpos; 
    DWORD dwRpos; 
    DWORD dwUpos; 
    DWORD dwVpos; 
    DWORD dwButtons; 
    DWORD dwButtonNumber; 
    DWORD dwPOV; 
    DWORD dwReserved1; 
    DWORD dwReserved2; 
} JOYINFOEX; 
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>dwSize</b></dt>
<dd>
Size, in bytes, of this structure.</dd>
<dt>
<b>dwFlags</b></dt>
<dd>
Flags indicating the valid information returned in this structure. Members that do not contain valid information are set to zero. The following flags are defined:
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Flag</th>
<th align=left width=52%>Description</th>
</tr>
<tr valign=top>
<td width=48%>JOY_RETURNALL</td>
<td width=52%>Equivalent to setting all of the JOY_RETURN bits except JOY_RETURNRAWDATA.</td>
</tr>
<tr valign=top>
<td width=48%>JOY_RETURNBUTTONS</td>
<td width=52%>The <b>dwButtons</b> member contains valid information about the state of each joystick button.</td>
</tr>
<tr valign=top>
<td width=48%>JOY_RETURNCENTERED</td>
<td width=52%>Centers the joystick neutral position to the middle value of each axis of movement.</td>
</tr>
<tr valign=top>
<td width=48%>JOY_RETURNPOV</td>
<td width=52%>The <b>dwPOV</b> member contains valid information about the point-of-view control, expressed in discrete units.</td>
</tr>
<tr valign=top>
<td width=48%>JOY_RETURNPOVCTS</td>
<td width=52%>The <b>dwPOV</b> member contains valid information about the point-of-view control expressed in continuous, one-hundredth degree units.</td>
</tr>
<tr valign=top>
<td width=48%>JOY_RETURNR</td>
<td width=52%>The <b>dwRpos</b> member contains valid rudder pedal data. This information represents another (fourth) axis.</td>
</tr>
<tr valign=top>
<td width=48%>JOY_RETURNRAWDATA</td>
<td width=52%>Data stored in this structure is uncalibrated joystick readings.</td>
</tr>
<tr valign=top>
<td width=48%>JOY_RETURNU</td>
<td width=52%>The <b>dwUpos</b> member contains valid data for a fifth axis of the joystick, if such an axis is available, or returns zero otherwise.</td>
</tr>
<tr valign=top>
<td width=48%>JOY_RETURNV</td>
<td width=52%>The <b>dwVpos</b> member contains valid data for a sixth axis of the joystick, if such an axis is available, or returns zero otherwise.</td>
</tr>
<tr valign=top>
<td width=48%>JOY_RETURNX</td>
<td width=52%>The <b>dwXpos</b> member contains valid data for the x-coordinate of the joystick.</td>
</tr>
<tr valign=top>
<td width=48%>JOY_RETURNY</td>
<td width=52%>The <b>dwYpos</b> member contains valid data for the y-coordinate of the joystick.</td>
</tr>
<tr valign=top>
<td width=48%>JOY_RETURNZ</td>
<td width=52%>The <b>dwZpos</b> member contains valid data for the z-coordinate of the joystick.</td>
</tr>
<tr valign=top>
<td width=48%>JOY_USEDEADZONE</td>
<td width=52%>Expands the range for the neutral position of the joystick and calls this range the dead zone. The joystick driver returns a constant value for all positions in the dead zone.</td>
</tr>
</table><br>


<p>
The following flags provide data to calibrate a joystick and are intended for custom calibration applications.

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Flag</th>
<th align=left width=52%>Description</th>
</tr>
<tr valign=top>
<td width=48%>JOY_CAL_READ3</td>
<td width=52%>Read the x-, y-, and z-coordinates and store the raw values in <b>dwXpos</b>, <b>dwYpos</b>, and <b>dwZpos</b>.</td>
</tr>
<tr valign=top>
<td width=48%>JOY_CAL_READ4</td>
<td width=52%>Read the rudder information and the x-, y-, and z-coordinates and store the raw values in <b>dwXpos</b>, <b>dwYpos</b>, <b>dwZpos</b>, and <b>dwRpos</b>.</td>
</tr>
<tr valign=top>
<td width=48%>JOY_CAL_READ5</td>
<td width=52%>Read the rudder information and the x-, y-, z-, and u-coordinates and store the raw values in <b>dwXpos</b>, <b>dwYpos</b>, <b>dwZpos</b>, <b>dwRpos</b>, and <b>dwUpos</b>.</td>
</tr>
<tr valign=top>
<td width=48%>JOY_CAL_READ6</td>
<td width=52%>Read the raw v-axis data if a joystick mini driver is present that will provide the data. Returns zero otherwise.</td>
</tr>
<tr valign=top>
<td width=48%>JOY_CAL_READALWAYS</td>
<td width=52%>Read the joystick port even if the driver does not detect a device.</td>
</tr>
<tr valign=top>
<td width=48%>JOY_CAL_READRONLY</td>
<td width=52%>Read the rudder information if a joystick mini-driver is present that will provide the data and store the raw value in <b>dwRpos</b>. Return zero otherwise.</td>
</tr>
<tr valign=top>
<td width=48%>JOY_CAL_READXONLY</td>
<td width=52%>Read the x-coordinate and store the raw (uncalibrated) value in <b>dwXpos</b>.</td>
</tr>
<tr valign=top>
<td width=48%>JOY_CAL_READXYONLY</td>
<td width=52%>Reads the x- and y-coordinates and place the raw values in <b>dwXpos</b> and <b>dwYpos</b>.</td>
</tr>
<tr valign=top>
<td width=48%>JOY_CAL_READYONLY</td>
<td width=52%>Reads the y-coordinate and store the raw value in <b>dwYpos</b>.</td>
</tr>
<tr valign=top>
<td width=48%>JOY_CAL_READZONLY</td>
<td width=52%>Read the z-coordinate and store the raw value in <b>dwZpos</b>.</td>
</tr>
<tr valign=top>
<td width=48%>JOY_CAL_READUONLY</td>
<td width=52%>Read the u-coordinate if a joystick mini-driver is present that will provide the data and store the raw value in <b>dwUpos</b>. Return zero otherwise.</td>
</tr>
<tr valign=top>
<td width=48%>JOY_CAL_READVONLY</td>
<td width=52%>Read the v-coordinate if a joystick mini-driver is present that will provide the data and store the raw value in <b>dwVpos</b>. Return zero otherwise.</td>
</tr>
</table><br>

</dd>
<dt>
<b>dwXpos</b></dt>
<dd>
Current X-coordinate.</dd>
<dt>
<b>dwYpos</b></dt>
<dd>
Current Y-coordinate.</dd>
<dt>
<b>dwZpos</b></dt>
<dd>
Current Z-coordinate.</dd>
<dt>
<b>dwRpos</b></dt>
<dd>
Current position of the rudder or fourth joystick axis.</dd>
<dt>
<b>dwUpos</b></dt>
<dd>
Current fifth axis position.</dd>
<dt>
<b>dwVpos</b></dt>
<dd>
Current sixth axis position.</dd>
<dt>
<b>dwButtons</b></dt>
<dd>
Current state of the 32 joystick buttons. The value of this member can be set to any combination of JOY_BUTTON<i>n</i> flags, where <i>n</i> is a value in the range of 1 through 32 corresponding to the button that is pressed.</dd>
<dt>
<b>dwButtonNumber</b></dt>
<dd>
Current button number that is pressed.</dd>
<dt>
<b>dwPOV</b></dt>
<dd>
Current position of the point-of-view control. Values for this member are in the range 0 through 35,900. These values represent the angle, in degrees, of each view multiplied by 100. </dd>
<dt>
<b>dwReserved1</b></dt>
<dd>
Reserved; do not use.</dd>
<dt>
<b>dwReserved2</b></dt>
<dd>
Reserved; do not use.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The value of the <b>dwSize</b> member is also used to identify the version number for the structure when it's passed to the <a href="mmfunc_494o.htm"><b>joyGetPosEx</b></a><b> </b>function.</p>
<p>
Most devices with a point-of-view control have only five positions. When the JOY_RETURNPOV flag is set, these positions are reported by using the following constants:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Point-Of-View Flag</th>
<th align=left width=52%>Description</th>
</tr>
<tr valign=top>
<td width=48%>JOY_POVBACKWARD</td>
<td width=52%>Point-of-view hat is pressed backward. The value 18,000 represents an orientation of 180.00 degrees (to the rear).</td>
</tr>
<tr valign=top>
<td width=48%>JOY_POVCENTERED</td>
<td width=52%>Point-of-view hat is in the neutral position. The value -1 means the point-of-view hat has no angle to report.</td>
</tr>
<tr valign=top>
<td width=48%>JOY_POVFORWARD</td>
<td width=52%>Point-of-view hat is pressed forward. The value 0 represents an orientation of 0.00 degrees (straight ahead).</td>
</tr>
<tr valign=top>
<td width=48%>JOY_POVLEFT</td>
<td width=52%>Point-of-view hat is being pressed to the left. The value 27,000 represents an orientation of 270.00 degrees (90.00 degrees to the left).</td>
</tr>
<tr valign=top>
<td width=48%>JOY_POVRIGHT</td>
<td width=52%>Point-of-view hat is pressed to the right. The value 9,000 represents an orientation of 90.00 degrees (to the right).</td>
</tr>
</table><br>
<p>
The default joystick driver currently supports these five discrete directions. If an application can accept only the defined point-of-view values, it must use the JOY_RETURNPOV flag. If an application can accept other degree readings, it should use the JOY_RETURNPOVCTS flag to obtain continuous data if it is available. The JOY_RETURNPOVCTS flag also supports the JOY_POV constants used with the JOY_RETURNPOV flag.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in mmsystem.h.</p>
<h4>See Also</h4>
<p>
<a href="../pdgrmm/joy_42er.htm">Joysticks Overview</a>, <a href="../pdgrmm/joy_61f7.htm">Multimedia Joystick Structures</a>, <a href="mmfunc_494o.htm"><b>joyGetPosEx</b></a><b> </b></p>
<p>&nbsp;</p></body>
</HTML>
