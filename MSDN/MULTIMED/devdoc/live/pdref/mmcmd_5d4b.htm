<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MCI_BREAK</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_mci_break"></a>MCI_BREAK</h1>
<p>
The <b>MCI_BREAK</b> command sets a break key for an MCI device. MCI supports this command directly rather than passing it to the device. Any MCI application can use this command. </p>
<pre><code>MCIERROR mciSendCommand(MCIDEVICEID wDeviceID, MCI_BREAK, 
    DWORD dwFlags, (DWORD) (LPMCI_BREAK_PARMS) lpBreak);
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>wDeviceID</i></dt>
<dd>
Device identifier of the MCI device that is to receive the command message.</dd>
<dt>
<i>dwFlags</i></dt>
<dd>
MCI_NOTIFY, MCI_WAIT, or, for digital-video and video-cassette recorder (VCR) devices, MCI_TEST. For information about these flags, see <a href="../pdgrmm/mci_9v3n.htm">The Wait, Notify, and Test Flags</a>.</dd>
<dt>
<i>lpBreak</i></dt>
<dd>
Address of an <a href="mmstr_75rm.htm"><b>MCI_BREAK_PARMS</b></a> structure.
</dd>
</dl>
<h4>Return Values</h4>
<p>
Returns zero if successful or an error otherwise.</p>
<h4>Remarks</h4>
<p>
You might have to press the break key multiple times to interrupt a wait operation. Pressing the break key after a device wait is canceled can send the break to an application. If an application has an action defined for the virtual-key code, then it can inadvertently respond to the break. For example, an application using VK_CANCEL for an accelerator key can respond to the default CTRL+BREAK key if it is pressed after a wait is canceled.</p>
<p>
The following additional flags apply to all devices:
<dl>
<dt>
MCI_BREAK_HWND</dt>
<dd>
The <b>hwndBreak</b> member of the structure identified by <i>lpBreak</i> contains a window handle that must be the current window in order to enable break detection for that MCI device. This is usually the application's main window. If omitted, MCI does not check the window handle of the current window.</dd>
<dt>
MCI_BREAK_KEY</dt>
<dd>
The <b>nVirtKey</b> member of the structure identified by <i>lpBreak</i> specifies the virtual-key code used for the break key. By default, MCI assigns CTRL+BREAK as the break key. This flag is required if MCI_BREAK_OFF is not specified.</dd>
<dt>
MCI_BREAK_OFF</dt>
<dd>
Disables any existing break key for the indicated device.
</dd>
</dl>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in mmsystem.h.</p>
<h4>See Also</h4>
<p>
<a href="../pdgrmm/mci_7vvt.htm">MCI Overview</a>, <a href="../pdgrmm/mci_4eib.htm">MCI Commands</a>, <a href="mmstr_75rm.htm"><b>MCI_BREAK_PARMS</b></a></p>
<p>&nbsp;</p></body>
</HTML>
