<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>waveOutUnprepareHeader</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_waveoutunprepareheader"></a>waveOutUnprepareHeader</h1>
<p>
The <b>waveOutUnprepareHeader</b> function cleans up the preparation performed by the <a href="mmfunc_93ci.htm"><b>waveOutPrepareHeader</b></a> function. This function must be called after the device driver is finished with a data block. You must call this function before freeing the buffer.</p>
<pre><code><b>MMRESULT waveOutUnprepareHeader(
  HWAVEOUT</b><i> hwo</i><b>,  </b>
<b>  LPWAVEHDR</b><i> pwh</i><b>, </b>
<b>  UINT</b><i> cbwh      </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hwo</i></dt>
<dd>
Handle of the waveform-audio output device.</dd>
<dt>
<i>pwh</i></dt>
<dd>
Address of a <a href="mmstr_7zsi.htm"><b>WAVEHDR</b></a> structure identifying the data block to be cleaned up.</dd>
<dt>
<i>cbwh</i></dt>
<dd>
Size, in bytes, of the <b>WAVEHDR</b> structure.
</dd>
</dl>
<h4>Return Values</h4>
<p>
Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following:</p>
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=48%>Value</th>
<th align=left width=51%>Description</th>
</tr>
<tr valign=top>
<td width=48%>MMSYSERR_INVALHANDLE</td>
<td colspan=2 width=52%>Specified device handle is invalid.</td>
</tr>
<tr valign=top>
<td width=48%>MMSYSERR_NODRIVER</td>
<td colspan=2 width=52%>No device driver is present.</td>
</tr>
<tr valign=top>
<td width=48%>MMSYSERR_NOMEM</td>
<td colspan=2 width=52%>Unable to allocate or lock memory.</td>
</tr>
<tr valign=top>
<td width=48%>WAVERR_STILLPLAYING</td>
<td colspan=2 width=52%>The data block pointed to by the <i>pwh</i> parameter is still in the queue.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
This function complements <b>waveOutPrepareHeader</b>. You must call this function before freeing the buffer. After passing a buffer to the device driver with the <b>waveOutWrite</b> function, you must wait until the driver is finished with the buffer before calling <b>waveOutUnprepareHeader</b>.</p>
<p>
Unpreparing a buffer that has not been prepared has no effect, and the function returns zero.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 2.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in mmsystem.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use winmm.lib.</p>
<h4>See Also</h4>
<p>
<a href="../pdgrmm/wave_7jcf.htm">Waveform Audio Overview</a>, <a href="../pdgrmm/wave_4i2b.htm">Waveform Functions</a>, <a href="mmfunc_93ci.htm"><b>waveOutPrepareHeader</b></a>, <a href="mmstr_7zsi.htm"><b>WAVEHDR</b></a>, <a href="mmfunc_1k9x.htm"><b>waveOutWrite</b></a></p>
<p>&nbsp;</p></body>
</HTML>
