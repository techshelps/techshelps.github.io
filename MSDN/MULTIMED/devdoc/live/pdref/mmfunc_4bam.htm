<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>midiOutOpen</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_midioutopen"></a>midiOutOpen</h1>
<p>
The <b>midiOutOpen</b> function opens a MIDI output device for playback.</p>
<pre><code><b>UINT midiOutOpen(
  LPHMIDIOUT</b><i> lphmo</i><b>,          </b>
<b>  UINT</b><i> uDeviceID</i><b>,            </b>
<b>  DWORD</b><i> dwCallback</i><b>,          </b>
<b>  DWORD</b><i> dwCallbackInstance</i><b>,  </b>
<b>  DWORD</b><i> dwFlags              </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lphmo</i></dt>
<dd>
Address of an <b>HMIDIOUT</b> handle. This location is filled with a handle identifying the opened MIDI output device. The handle is used to identify the device in calls to other MIDI output functions.</dd>
<dt>
<i>uDeviceID</i></dt>
<dd>
Identifier of the MIDI output device that is to be opened.</dd>
<dt>
<i>dwCallback</i></dt>
<dd>
Address of a callback function, an event handle, a thread identifier, or a handle of a window or thread called during MIDI playback to process messages related to the progress of the playback. If no callback is desired, specify NULL for this parameter. For more information on the callback function, see <a href="mmfunc_04df.htm"><b>MidiOutProc</b></a>.</dd>
<dt>
<i>dwCallbackInstance</i></dt>
<dd>
User instance data passed to the callback. This parameter is not used with window callbacks or threads.</dd>
<dt>
<i>dwFlags</i></dt>
<dd>
Callback flag for opening the device. It can be the following values:
<dl>
<dt>
CALLBACK_EVENT</dt>
<dd>
The <i>dwCallback</i> parameter is an event handle. This callback mechanism is for output only.</dd>
<dt>
CALLBACK_FUNCTION</dt>
<dd>
The <i>dwCallback</i> parameter is a callback function address.</dd>
<dt>
CALLBACK_NULL</dt>
<dd>
There is no callback mechanism. This value is the default setting.</dd>
<dt>
CALLBACK_THREAD</dt>
<dd>
The <i>dwCallback</i> parameter is a thread identifier.</dd>
<dt>
CALLBACK_WINDOW</dt>
<dd>
The <i>dwCallback</i> parameter is a window handle.
</dd>
</dl>
</dd>
</dl>
<h4>Return Values</h4>
<p>
Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following: </p>
<table cellspacing=4 cols=4>
<tr valign=top>
<th align=left width=42%>Value</th>
<th align=left colspan=3 width=58%>Description</th>
</tr>
<tr valign=top>
<td colspan=2 width=43%>MIDIERR_NODEVICE</td>
<td width=56%>No MIDI port was found. This error occurs only when the mapper is opened.</td>
</tr>
<tr valign=top>
<td colspan=2 width=43%>MMSYSERR_ALLOCATED</td>
<td width=56%>The specified resource is already allocated.</td>
</tr>
<tr valign=top>
<td colspan=2 width=43%>MMSYSERR_BADDEVICEID</td>
<td width=56%>The specified device identifier is out of range.</td>
</tr>
<tr valign=top>
<td colspan=2 width=43%>MMSYSERR_INVALPARAM</td>
<td width=56%>The specified pointer or structure is invalid.</td>
</tr>
<tr valign=top>
<td colspan=2 width=43%>MMSYSERR_NOMEM</td>
<td width=56%>The system is unable to allocate or lock memory.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
To determine the number of MIDI output devices present in the system, use the <a href="mmfunc_7j03.htm"><b>midiOutGetNumDevs</b></a> function. The device identifier specified by <i>wDeviceID</i> varies from zero to one less than the number of devices present. MIDI_MAPPER can also be used as the device identifier.</p>
<p>
If a window or thread is chosen to receive callback information, the following messages are sent to the window procedure or thread to indicate the progress of MIDI output: MM_MOM_OPEN, MM_MOM_CLOSE, and MM_MOM_DONE.</p>
<p>
If a function is chosen to receive callback information, the following messages are sent to the function to indicate the progress of MIDI output: MOM_OPEN, MOM_CLOSE, and MOM_DONE. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in mmsystem.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use winmm.lib.</p>
<h4>See Also</h4>
<p>
<a href="../pdgrmm/midi_1wv3.htm">Musical Instrument Digital Interface (MIDI) Overview</a>, <a href="../pdgrmm/midi_3fqr.htm">MIDI Functions</a>, <a href="mmfunc_7j03.htm"><b>midiOutGetNumDevs</b></a>, <a href="mmfunc_04df.htm"><b>MidiOutProc</b></a>, <a href="mmmsg_8bse.htm">MM_MOM_OPEN</a>, <a href="mmmsg_68px.htm">MM_MOM_CLOSE</a>, <a href="mmmsg_6g2t.htm">MM_MOM_DONE</a></p>
<p>&nbsp;</p></body>
</HTML>
