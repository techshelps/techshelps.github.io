<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>AVIStreamReadData</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_avistreamreaddata"></a>AVIStreamReadData</h1>
<p>
The <b>AVIStreamReadData</b> function reads optional header data from a stream.</p>
<pre><code><b>STDAPI AVIStreamReadData(
  PAVISTREAM</b><i> pavi</i><b>, </b>
<b>  DWORD</b><i> ckid</i><b>,      </b>
<b>  LPVOID</b><i> lpData</i><b>,   </b>
<b>  LONG *</b><i> lpcbData  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pavi</i></dt>
<dd>
Handle of an open stream.</dd>
<dt>
<i>ckid</i></dt>
<dd>
Four-character code identifying the data.</dd>
<dt>
<i>lpData</i></dt>
<dd>
Address of the buffer to contain the optional header data.</dd>
<dt>
<i>lpcbData</i></dt>
<dd>
Address of the location that specifies the buffer size used for <i>lpData</i>. If the read is successful, AVIFile changes this value to indicate the amount of data written into the buffer for <i>lpData</i>.
</dd>
</dl>
<h4>Return Values</h4>
<p>
Returns zero if successful or an error otherwise. The return value AVIERR_NODATA indicates the system could not find any data with the specified chunk identifier.</p>
<h4>Remarks</h4>
<p>
This function retrieves only optional header information from the stream. This information is custom and does not have a set format.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in vfw.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use vfw32.lib.</p>
<h4>See Also</h4>
<p>
<a href="../pdgrmm/avifile_3uwj.htm">AVIFile Functions and Macros Overview</a>, <a href="../pdgrmm/avifile_1d6b.htm">AVIFile Functions</a> </p>
<p>&nbsp;</p></body>
</HTML>
