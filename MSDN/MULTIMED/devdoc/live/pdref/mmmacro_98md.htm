<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>capGetAudioFormatSize</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_capgetaudioformatsize"></a>capGetAudioFormatSize</h1>
<p>
The <b>capGetAudioFormatSize</b> macro obtains the size of the audio format. You can use this macro or explicitly call the <a href="mmmsg_3c8k.htm">WM_CAP_GET_AUDIOFORMAT</a> message.</p>
<pre><code><b>DWORD capGetAudioFormatSize(
 </b><i> hwnd  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hwnd</i></dt>
<dd>
Handle of a capture window.
</dd>
</dl>
<h4>Return Values</h4>
<p>
Returns the size, in bytes, of the audio format.</p>
<h4>Remarks</h4>
<p>
Because compressed audio formats vary in size requirements applications must first retrieve the size, then allocate memory, and finally request the audio format data.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in vfw.h.</p>
<h4>See Also</h4>
<p>
<a href="../pdgrmm/avicap_8xyd.htm">Video Capture Overview</a>, <a href="../pdgrmm/avicap_9cxf.htm">Video Capture Macros</a>, <a href="mmmsg_3c8k.htm">WM_CAP_GET_AUDIOFORMAT</a></p>
<p>&nbsp;</p></body>
</HTML>
