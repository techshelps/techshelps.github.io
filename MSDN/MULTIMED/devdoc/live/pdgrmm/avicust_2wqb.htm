<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Classes, Objects, and Interfaces</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_classes_objects_and_interfaces"></a>Classes, Objects, and Interfaces</h3>
<p>
In the C++ programming language, a <i>class</i> consists of <i>properties</i> (or member data) and <i>methods</i> (or member functions). The properties are data elements, such as those contained in a structure. The methods are used for a variety of purposes, such as initialization, assignment, operations, and data access. You use a class declaration in the same way that you use a structure declaration. Memory is allocated for a class when you define a class <i>object</i>. Each class object has a data area for its properties and a table of pointers to the methods it supports.</p>
<p>
In OLE, an object consists of data and methods, as it does in C++. However, an OLE object adheres to stricter rules. The data is strictly internal. An object only exposes interfaces. An <i>interface</i> is a set of related methods for an object. Each object can support multiple interfaces. All OLE interfaces support the <a href="../pdref/mmintrfc_6gj2.htm"><b>IUnknown</b></a> interface.</p>
<p>&nbsp;</p></body>
</HTML>
