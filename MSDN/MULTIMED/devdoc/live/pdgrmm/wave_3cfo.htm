<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Playing WAVE Resources</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_playing_wave_resources"></a>Playing WAVE Resources</h2>
<p>
You can use the <a href="../pdref/mmfunc_9uxw.htm"><b>PlaySound</b></a> function to play a sound that is stored as a resource. Although this is also possible using the <a href="../pdref/mmfunc_4uzo.htm"><b>sndPlaySound</b></a> function, <b>sndPlaySound</b> requires that you find, load, lock, unlock, and free the resource; <b>PlaySound</b> achieves all of this with a single line of code.</p>
<h4>PlaySound Example</h4>
<pre><code>PlaySound("SoundName", hInst, SND_RESOURCE | SND_ASYNC); 
 </code></pre>
<h4>sndPlaySound Example</h4>
<p>
The SND_MEMORY flag indicates that the <i>lpszSoundName</i> parameter is a pointer to an in-memory image of the WAVE file. To include a WAVE file as a resource in an application, add the following entry to the application's resource script (.RC) file. </p>
<pre><code>soundName WAVE c:\sounds\bells.wav 
 </code></pre>
<p>
The name <i>soundName</i> is a placeholder for a name that you supply to refer to this WAVE resource. WAVE resources are loaded and accessed just like other application-defined Windows resources. The PlayResource function in the following example plays a specified WAVE resource. </p>
<pre><code>BOOL PlayResource(LPSTR lpName) 
{ 
    BOOL bRtn; 
    LPSTR lpRes; 
    HANDLE hResInfo, hRes; 
 
    // Find the WAVE resource. 
 
    hResInfo = FindResource(hInst, lpName, "WAVE"); 
    if (hResInfo == NULL) 
        return FALSE; 
 
    // Load the WAVE resource. 
 
    hRes = LoadResource(hInst, hResInfo); 
    if (hRes == NULL) 
        return FALSE; 
 
    // Lock the WAVE resource and play it. 
 
    lpRes = LockResource(hRes); 
    if (lpRes != NULL) { 
        bRtn = sndPlaySound(lpRes, SND_MEMORY | SND_SYNC | 
            SND_NODEFAULT); 
        UnlockResource(hRes); 
    } 
    else 
        bRtn = 0; 
 
    // Free the WAVE resource and return success or failure. 
 
    FreeResource(hRes); 
    return bRtn; 
} 
 </code></pre>
<p>
To play a WAVE resource by using this function, pass to the function a pointer to a string containing the name of the resource, as shown in the following example. </p>
<pre><code>PlayResource("soundName"); 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
