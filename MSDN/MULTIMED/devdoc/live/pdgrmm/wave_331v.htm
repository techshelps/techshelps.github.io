<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using an Event Callback to Process Driver Messages</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_using_an_event_callback_to_process_driver_messages"></a>Using an Event Callback to Process Driver Messages</h3>
<p>
To use an event callback, use the <b>CreateEvent</b> function to retrieve the handle of an event. In the call to the <a href="../pdref/mmfunc_36b2.htm"><b>waveOutOpen</b></a> function, specify CALLBACK_EVENT for the <i>fdwOpen</i> parameter. After calling the <a href="../pdref/mmfunc_93ci.htm"><b>waveOutPrepareHeader</b></a> function but before sending waveform-audio data to the device, create a nonsignaled event by calling the <b>ResetEvent</b> function, specifying the event handle retrieved by <b>CreateEvent</b>. Then, inside a loop that checks whether the WHDR_DONE bit is set in the <b>dwFlags</b> member of the <a href="../pdref/mmstr_7zsi.htm"><b>WAVEHDR</b></a> structure, call the <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_waitforsingleobject">
</object><a href=JavaScript:alink_1.Click()><b>WaitForSingleObject</b></a> function, specifying as parameters the event handle and a time-out value of INFINITE.</p>
<p>
Because event callbacks do not receive specific close, done, or open notifications, an application might have to check the status of the process it is waiting for after the event occurs. It is possible that a number of tasks could have been completed by the time <b>WaitForSingleObject</b> returns.</p>
<p>&nbsp;</p></body>
</HTML>
