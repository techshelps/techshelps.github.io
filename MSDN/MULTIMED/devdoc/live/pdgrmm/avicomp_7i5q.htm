<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Image-Data Compression</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_image_data_compression"></a>Image-Data Compression</h3>
<p>
Your application can use a series of <a href="../pdref/mmfunc_42lv.htm"><b>ICCompress</b></a> functions and macros to compress data. The functions and macros can help you perform the following tasks:
<ul>
<li>
Determine the compression format to use for a specified input format.</li>
<li>
Prepare the compressor.</li>
<li>
Compress the data.</li>
<li>
End compression.</li>
</ul>
<p>
Your application can increase control over the compression process by using the <a href="../pdref/mmfunc_42lv.htm"><b>ICCompress</b></a> functions and macros. This group of functions and macros handles individual frames, rather than the sequence as a whole. For example, your application can identify the frames to compress as key frames by using the <b>ICCompress</b> function.</p>
<p>
A compressor receives data in one format, compresses the data, and returns a compressed version of the data using a specified format. The typical input format specifies DIBs using the <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_bitmapinfo_str">
</object><a href=JavaScript:alink_1.Click()><b>BITMAPINFO</b></a> structure. The typical output format specifies compressed DIBs, also using the <b>BITMAPINFO</b> structure.</p>
<p>
<b>Note</b>&nbsp;&nbsp;To minimize image and audio degradation during playback, avoid compressing an AVI file more than once. Combine uncompressed pieces of video in your editing system and then compress the final product.</p>
<h4>Compressor and Compression Format Selection</h4>
<p>
If you want to compress data and your application requires a specific output format, send the <a href="../pdref/mmmsg_1115.htm">ICM_COMPRESS_QUERY</a> message (or use the <a href="../pdref/mmmacro_8vll.htm"><b>ICCompressQuery</b></a> macro) to query the compressor to determine if it supports the input and output formats.</p>
<p>
If the output format is not important to your application, you need only find a compressor that can handle the input format. To determine if a compressor can handle the input format, you can send ICM_COMPRESS_QUERY, specifying NULL for the <i>lParam</i> parameter. This message does not return the output format to your application. Your application can determine the buffer size needed for the data specifying the compression format by sending the <a href="../pdref/mmmsg_8yb8.htm">ICM_COMPRESS_GET_FORMAT</a> message (or use the <a href="../pdref/mmmacro_5rol.htm"><b>ICCompressGetFormatSize</b></a> macro). You can also retrieve the format data by sending ICM_COMPRESS_GET_FORMAT (or the <a href="../pdref/mmmacro_6jas.htm"><b>ICCompressGetFormat</b></a> macro).</p>
<p>
If you want to determine the largest buffer that the compressor could require for compression, send the <a href="../pdref/mmmsg_7tr9.htm">ICM_COMPRESS_GET_SIZE</a> message (or use the <a href="../pdref/mmmacro_8mat.htm"><b>ICCompressGetSize</b></a> macro). You can use the number of bytes returned by the <a href="../pdref/mmfunc_0i3p.htm"><b>ICSendMessage</b></a> function to allocate a buffer for subsequent image compressions.</p>
<h4>Compressor Initialization</h4>
<p>
After your application selects a compressor that can handle the input and output formats it needs, you can initialize the compressor by using the <a href="../pdref/mmmsg_7dta.htm">ICM_COMPRESS_BEGIN</a> message (or use the <a href="../pdref/mmmacro_58dq.htm"><b>ICCompressBegin</b></a> macro). This message requires the compressor handle and the input and output formats. </p>
<h4>Data Compression</h4>
<p>
You can use the <a href="../pdref/mmfunc_42lv.htm"><b>ICCompress</b></a> function to compress a frame. Your application must use this function repeatedly until all the frames in a sequence are compressed. Your application must also track and increment the number of each frame compressed with <b>ICCompress</b>. The compressor uses this value to check if frames are sent out of order during fast temporal compression (storing differences between successive frames). If your application recompresses a frame, it should use the same frame number as when the frame was first compressed. If your application compresses a still-frame image, it can specify a frame number of zero.</p>
<p>
Your application can use the ICCOMPRESS_KEYFRAME flag to make the frame compressed by <b>ICCompress</b> a key frame. </p>
<p>
When VCM returns control to your application after compressing a frame, VCM stores the compressed data in the structures referenced by the <i>lpbiOutput </i>and <i>lpData</i> parameters. If your application needs to move the compressed data, it can find its size in the <b>biSizeImage</b> member of the <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_bitmapinfo_str">
</object><a href=JavaScript:alink_2.Click()><b>BITMAPINFO</b></a> structure specified in <i>lpbiOutput</i>.</p>
<p>
<b>Note</b>&nbsp;&nbsp;Your application must allocate the structures and buffers that store the uncompressed and compressed data. If the compressor supports temporal compression, your application must also allocate a structure and buffer to hold the format and data for the previous frame of information.</p>
<h4>Ending Compression</h4>
<p>
After your application has compressed the data, it can use the <a href="../pdref/mmmacro_0gh0.htm"><b>ICCompressEnd</b></a> macro to notify the compressor that it has finished. If you want to restart compression after using this function, your application must reinitialize the compressor by sending the <a href="../pdref/mmmsg_7dta.htm">ICM_COMPRESS_BEGIN</a> message (or use the <a href="../pdref/mmmacro_58dq.htm"><b>ICCompressBegin</b></a> macro).</p>
<p>&nbsp;</p></body>
</HTML>
