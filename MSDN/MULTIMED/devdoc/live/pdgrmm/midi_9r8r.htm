<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using a Callback Function to Manage Buffered Playback</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_using_a_callback_function_to_manage_buffered_playback"></a>Using a Callback Function to Manage Buffered Playback</h3>
<p>
You can define your own callback function to manage buffered playback of MIDI output devices. The callback function is documented as <a href="../pdref/mmfunc_04df.htm"><b>MidiOutProc</b></a>.</p>
<p>
The following messages can be sent to the <i>wMsg</i> parameter of the <b>MidiOutProc</b> callback function.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=25%><a href="../pdref/mmmsg_1wdh.htm">MOM_CLOSE</a></td>
<td width=75%>Sent when the device is closed by using the <a href="../pdref/mmfunc_9d45.htm"><b>midiOutClose</b></a> function.</td>
</tr>
<tr valign=top>
<td width=25%><a href="../pdref/mmmsg_0lid.htm">MOM_DONE</a></td>
<td width=75%>Sent when the device driver is finished with a data block sent by using the <a href="../pdref/mmfunc_3z8n.htm"><b>midiOutLongMsg</b></a> or <a href="../pdref/mmfunc_427o.htm"><b>midiStreamOut</b></a> function.</td>
</tr>
<tr valign=top>
<td width=25%><a href="../pdref/mmmsg_2h7y.htm">MOM_OPEN</a></td>
<td width=75%>Sent when the device is opened by using the <a href="../pdref/mmfunc_4bam.htm"><b>midiOutOpen</b></a> function.</td>
</tr>
</table><br>
<p>
These messages are similar to those sent to window procedure functions, but the parameters are different. A handle of the open MIDI device is passed as a parameter to the callback function, along with the doubleword of instance data passed by using <b>midiOutOpen</b>.</p>
<p>
After the driver is finished with a data block, you can clean up and free the data block. Because of the suggested restrictions on callback functions, it is better not to do this from within the callback function. </p>
<p>&nbsp;</p></body>
</HTML>
