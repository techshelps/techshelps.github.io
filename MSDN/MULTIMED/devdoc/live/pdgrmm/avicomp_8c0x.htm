<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Drawing Data</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_drawing_data"></a>Drawing Data</h2>
<p>
The following example uses the <a href="../pdref/mmfunc_2gtz.htm"><b>ICDraw</b></a> function and the <a href="../pdref/mmmacro_0zn8.htm"><b>ICDrawStart</b></a>, <a href="../pdref/mmmacro_0tdc.htm"><b>ICDrawStop</b></a>, <a href="../pdref/mmmacro_32qw.htm"><b>ICDrawFlush</b></a>, and <a href="../pdref/mmmacro_7zs4.htm"><b>ICDrawEnd</b></a> macros to draw data on the screen.</p>
<pre><code>DWORD    dwNumBuffers; 
 
// Find out how many buffers need filling before drawing starts.

ICGetBuffersWanted(hIC, &amp;dwNumBuffers); 
for (dw = 0; dw &lt; dwNumBuffers; dw++)
{ 
    ICDraw(hIC, 0, lpFormat, lpData, cbData, dw); // fill the pipeline
    
    // Point lpFormat and lpData to next format and buffer.
    
} 
ICDrawStart(hIC);  // starts the clock 
dw = 0; 
while (fPlaying) 
{ 
    ICDraw(hIC, 0, lpFormat, lpData, chData, dw); // fill more buffers 
    
    // Point lpFormat and lpData to next format and buffer,
    // update dw.
} 
 
ICDrawStop(hIC);   // stops drawing and decompressing when done 
ICDrawFlush(hIC);  // flushes any existing buffers 
ICDrawEnd(hIC);    // ends decompression 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
