<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Timer Event Operations</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_timer_event_operations"></a>Timer Event Operations</h2>
<p>
After you have established your application's timer resolution, you can start timer events by using the <a href="../pdref/mmfunc_5378.htm"><b>timeSetEvent</b></a> function. This function returns a timer identifier that can be used to stop or identify timer events. One of the function's parameters is the address of a <a href="../pdref/mmfunc_5vz7.htm"><b>TimeProc</b></a> callback function that is called when the timer event takes place.</p>
<p>
There are two types of timer events: <i>single </i>and <i>periodic</i>. A single timer event occurs once, after a specified number of milliseconds. A periodic timer event occurs every time a specified number of milliseconds elapses. The interval between periodic events is called an <i>event delay</i>. Periodic timer events with an event delay of 10 milliseconds or less consume a significant portion of CPU resources.</p>
<p>
The relationship between the resolution of a timer event and the length of the event delay is important in timer events. For example, if you specify a resolution of 5 and an event delay of 100, the timer services notify the callback function after an interval ranging from 95 to 105 milliseconds.</p>
<p>
You can cancel an active timer event at any time by using the <a href="../pdref/mmfunc_5m5w.htm"><b>timeKillEvent</b></a> function. Be sure to cancel any outstanding timers before freeing the memory containing the callback function. </p>
<p>
<b>Note</b>&nbsp;&nbsp;The multimedia timer runs in its own thread. </p>
<p>&nbsp;</p></body>
</HTML>
