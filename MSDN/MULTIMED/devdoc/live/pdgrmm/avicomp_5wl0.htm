<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Determining a Decompressor's Output Format</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_determining_a_decompressors_output_format"></a>Determining a Decompressor's Output Format</h2>
<p>
The following example determines the buffer size needed for the data specifying the decompression format using the <a href="../pdref/mmmacro_6llx.htm"><b>ICDecompressGetFormatSize</b></a> macro, allocates a buffer of the appropriate size using the <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_globalalloc">
</object><a href=JavaScript:alink_1.Click()><b>GlobalAlloc</b></a> function, and retrieves the decompression format information using the <a href="../pdref/mmmacro_97w4.htm"><b>ICDecompressGetFormat</b></a> macro. </p>
<pre><code>LPBITMAPINFOHEADER lpbiIn, lpbiOut; 
 
// Assume *lpbiIn points to the input (compressed) format. 
dwFormatSize = ICDecompressGetFormatSize(hIC, lpbiIn); 
h = GlobalAlloc(GHND, dwFormatSize); 
lpbiOut = (LPBITMAPINFOHEADER)GlobalLock(h); 
ICDecompressGetFormat(hIC, lpbiIn, lpbiOut); 
 </code></pre>
<p>
The following example shows how an application can use the <a href="../pdref/mmmacro_6qux.htm"><b>ICDecompressQuery</b></a> macro to determine if a decompressor can handle the input and output formats.</p>
<pre><code>LPBITMAPINFOHEADER lpbiIn, lpbiOut; 
// Assume *lpbiIn &amp; *lpbiOut are initialized to the respective 
// formats.<b> </b>
if (ICDecompressQuery(hIC, lpbiIn, lpbiOut) == ICERR_OK)
{ 
    
    // Format is supported - use the decompressor. 
    
} 
<b> </b></code></pre>
<p>
The following code fragment shows how to get the palette information using the <a href="../pdref/mmmacro_1rvp.htm"><b>ICDecompressGetPalette</b></a> macro.</p>
<pre><code>ICDecompressGetPalette(hIC, lpbiIn, lpbiOut); 
 
// Move up to the palette. 
lpPalette = (LPBYTE)lpbiOut + lpbi-&gt;biSize;<b> </b>
<b> </b></code></pre>
<p>&nbsp;</p></body>
</HTML>
