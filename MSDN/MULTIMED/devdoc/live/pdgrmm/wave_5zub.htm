<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using a Callback Function to Process Driver Messages</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_using_a_callback_function_to_process_driver_messages"></a>Using a Callback Function to Process Driver Messages</h3>
<p>
You can write your own callback function to process messages sent by the device driver. To use a callback function, specify the CALLBACK_FUNCTION flag in the <i>fdwOpen</i> parameter and the address of the callback in the <i>dwCallback</i> parameter of the <a href="../pdref/mmfunc_1q5q.htm"><b>waveInOpen</b></a> or <a href="../pdref/mmfunc_36b2.htm"><b>waveOutOpen</b></a> function.</p>
<p>
Messages sent to a callback function are similar to messages sent to a window, except they have two <b>DWORD</b> parameters instead of a <b>UINT</b> and a <b>DWORD</b> parameter. For details on these messages, see <a href="wave_7w37.htm">Playing Waveform-Audio Files</a>.</p>
<p>
To pass instance data from an application to a callback function, use one of the following techniques:
<ul>
<li>
Pass the instance data using the <i>dwInstance</i> parameter of the function that opens the device driver.</li>
<li>
Pass the instance data using the <b>dwUser</b> member of the <a href="../pdref/mmstr_7zsi.htm"><b>WAVEHDR</b></a> structure that identifies an audio data block being sent to a device driver.</li>
</ul>
<p>
If you need more than 32 bits of instance data, pass a pointer to a structure containing the additional information. </p>
<p>&nbsp;</p></body>
</HTML>
