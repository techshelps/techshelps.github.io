<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the PCMWAVEFORMAT Structure</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_using_the_pcmwaveformat_structure"></a>Using the PCMWAVEFORMAT Structure</h2>
<p>
For PCM audio data, use the <a href="../pdref/mmstr_7gtu.htm"><b>PCMWAVEFORMAT</b></a> structure to specify the data format. The following example shows how to set up a PCMWAVEFORMAT structure for 11.025 kilohertz (kHz) 8-bit mono and for 44.1 kHz 16-bit stereo. After setting up <b>PCMWAVEFORMAT</b>, the example calls the IsFormatSupported function to verify that the PCM waveform output device supports the format. The source code for IsFormatSupported is shown in an example in <a href="wave_9l6c.htm">Determining Nonstandard Format Support</a>. </p>
<pre><code>UINT wReturn; 
PCMWAVEFORMAT pcmWaveFormat; 
 
// Set up PCMWAVEFORMAT for 11 kHz 8-bit mono. 
 
pcmWaveFormat.wf.wFormatTag = WAVE_FORMAT_PCM; 
pcmWaveFormat.wf.nChannels = 1; 
pcmWaveFormat.wf.nSamplesPerSec = 11025L; 
pcmWaveFormat.wf.nAvgBytesPerSec = 11025L; 
pcmWaveFormat.wf.nBlockAlign = 1; 
pcmWaveFormat.wBitsPerSample = 8; 
 
// See if format is supported by any device in system. 
 
wReturn = IsFormatSupported(&amp;pcmWaveFormat, WAVE_MAPPER); 
 
// Report results. 
 
if (wReturn == 0) 
     MessageBox(hMainWnd, "11 kHz 8-bit mono is supported.", 
       "", MB_ICONINFORMATION); 
else if (wReturn == WAVERR_BADFORMAT) 
     MessageBox(hMainWnd, "11 kHz 8-bit mono NOT supported.", 
       "", MB_ICONINFORMATION); 
else 
     MessageBox(hMainWnd, "Error opening waveform device.", 
       "Error", MB_ICONEXCLAMATION); 
 
// Set up PCMWAVEFORMAT for 44.1 kHz 16-bit stereo. 
 
pcmWaveFormat.wf.wFormatTag = WAVE_FORMAT_PCM; 
pcmWaveFormat.wf.nChannels = 2; 
pcmWaveFormat.wf.nSamplesPerSec = 44100L; 
pcmWaveFormat.wf.nAvgBytesPerSec = 176400L; 
pcmWaveFormat.wf.nBlockAlign = 4; 
pcmWaveFormat.wBitsPerSample = 32; 
 
// See if format is supported by any device in the system. 
 
wReturn = IsFormatSupported(&amp;pcmWaveFormat, WAVE_MAPPER); 
 
/ Report results. 
 
if (wReturn == 0) 
    MessageBox(hMainWnd, "44.1 kHz 16-bit stereo is supported.", 
      "", MB_ICONINFORMATION); 
else if (wReturn == WAVERR_BADFORMAT) 
    MessageBox(hMainWnd, "44.1 kHz 16-bit stereo NOT supported.", 
      "", MB_ICONINFORMATION); 
else 
    MessageBox(hMainWnd, "Error opening waveform device.", 
      "Error", MB_ICONEXCLAMATION); 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
