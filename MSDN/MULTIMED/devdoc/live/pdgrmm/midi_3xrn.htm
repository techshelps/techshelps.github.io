<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Opening MIDI Input Devices</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_opening_midi_input_devices"></a>Opening MIDI Input Devices</h3>
<p>
To open a MIDI input device for recording, use the <a href="../pdref/mmfunc_00xa.htm"><b>midiInOpen</b></a> function. This function opens the device associated with the specified device identifier and returns a handle of the open device by writing the handle to a specified memory location. </p>
<p>
If you use the MIDI_IO_STATUS flag with <b>midiInOpen</b>, the system uses the <a href="../pdref/mmmsg_0jmp.htm">MIM_MOREDATA</a> message to alert your application's callback function when it is not processing MIDI data fast enough to keep up with the input device driver. (The <a href="../pdref/mmmsg_51b5.htm">MM_MIM_MOREDATA</a> message does the same job with window callbacks. However, for performance reasons, most applications will use callback functions instead of window callbacks.) If your application processes MIDI data in a separate thread, boosting the thread's priority can have a significant impact on the application's ability to keep up with the data flow.</p>
<p>&nbsp;</p></body>
</HTML>
