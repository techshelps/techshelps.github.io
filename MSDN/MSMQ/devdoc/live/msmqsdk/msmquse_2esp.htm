<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Sending Messages Using an Internal Transaction</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_mq_sending_messages_using_an_internal_transaction_api"></a>Sending Messages Using an Internal Transaction</h3>
<p>
To send a message using an internal transaction, call <a href="mqfunc_2xta.htm"><b>MQBeginTransaction</b></a> to initiate the transaction and call <a href="mqfunc_8ip1.htm"><b>MQSendMessage</b></a> to send the message.</p>
<p>
<b>Note</b>&nbsp;&nbsp;Each MSMQ message can have no more than 4 MB of data.</p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To send a message using an internal transaction</h5>
<ol>
<li>
Call <b>MQBeginTransaction</b> to initiate the internal transaction.<pre><code>ITransaction  *pTransaction;
hr = MQBeginTransaction (&amp;pTransaction);   // Pointer to a pointer
                                           // to the transaction  
                                           // object.
</code></pre>
</li>
<li>
Call <b>MQSendMessage</b> to send the message.<pre><code>hr = MQSendMessage(h,           // Handle to destination queue.
                   &amp;msgprops,   // Pointer to MQMSGPROPS structure.
                   pTransaction); // Pointer to transaction object.
</code></pre>
</li>
<li>
Commit or abort the transaction.<pre><code>hr = pTransaction-&gt;Commit(0, 0, 0);
-or-
hr = pTransaction-&gt;Abort(0, 0, 0);
</code></pre>
</li>
<li>
Release the transaction object.<pre><code>pTransaction-&gt;Release();
</code></pre>
</li>
</ol>
<h4>Example</h4>
<p>
This example sends a single message within an internal transaction.</p>
<pre><code>void TransactSend(QUEUEHANDLE h, MQMSGPROPS * pMsgProps)
{
      HRESULT hr;      
      printf ("\nStarting transaction...\n\n");

      ///////////////////////////////////////
      // Call MQBeginTransaction to initiate 
      // the internal transaction.
      ///////////////////////////////////////
      ITransaction  *pTransaction;
      hr = MQBeginTransaction (&amp;pTransaction);   // Pointer to a 
                                                 // pointer to the 
                                                 // transaction object

      if (FAILED(hr))
      {
         Error ("BeginTransaction",hr);
      }

      ////////////////////////////////////
      // Set default to commit the 
      // transaction.
      ////////////////////////////////////
      BOOL fCommit = TRUE;

      ////////////////////////////////////
      // Within the transaction: Call 
      // MQSendMessage to send the message to
      // the Receiver Side.
      //////////////////////////////////////
      hr = MQSendMessage(h,              // Handle to destination
                                         // queue.
                         &amp;msgprops,      // Pointer to MQMSGPROPS
                                         // structure.
                         pTransaction);  // Pointer to transaction 
                                         // object.

      if (FAILED(hr))
      {
         printf("\nFailed in MQSendMessage(). hresult- %lxh\n", (DWORD) hr) ;
         fCommit = FALSE;  // Aborting as MQSendMessage failed.
      }

      ////////////////////////////////////
      // Commit or abort the transaction.
      ////////////////////////////////////
      if (fCommit)
      {
         printf ("Committing the transaction...   ");
         hr = pTransaction-&gt;Commit(0, 0, 0);
         if (FAILED(hr))
            printf ("Failed... Transaction aborted.\n\n");
         else
            printf ("Transaction committed successfully.\n\n");
      }
      else
      {
         printf ("Aborting the transaction...   ");
         hr = pTransaction-&gt;Abort(0, 0, 0);
         if (FAILED(hr))
            Error("Transaction Abort",hr);
         else
            printf ("Transaction aborted.\n\n");
      }
      
      //////////////////////////
      // Release the transaction.
      //////////////////////////
      pTransaction-&gt;Release();

  }
</code></pre>
<p>&nbsp;</p></body>
</HTML>
