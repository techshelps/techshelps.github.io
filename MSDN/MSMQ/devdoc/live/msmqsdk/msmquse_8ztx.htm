<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Authenticating Messages Using an External Certificate</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_mq_authenticating_messages_using_an_external_certificate"></a>Authenticating Messages Using an External Certificate</h3>
<p>
From an application perspective, authenticating messages using an external certificate is very easy. It simply requires getting the external certificate from a certification authority, registering the certificate, and setting the appropriate message properties.</p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To send an authenticated message</h5>
<ol>
<li>
Obtain a certificate from an authorized certification authority. A common way to obtain a certificate is to request a class 1 certificate from VeriSign Commercial Software Publishers using Microsoft® Internet Explorer (version 3.0 or later). </li>
<li>
Place the certificate in the Microsoft Internet Explorer personal certificate store (if Internet Explorer was used to obtain the certificate, this is done automatically). MSMQ can only use certificates placed in this store.</li>
<li>
Register the external certificate using <b>MS Message Queue</b> in Control Panel. By default, MSMQ attaches the sender identifier (SID) to the message allowing MSMQ to verify the message with the sender identifier and the external certificate. However, if you don't want to verify the message with the sender identifier (SID), explicitly set PROPID_M_SENDERID_TYPE to MQMSG_SENDERID_TYPE_NONE and do not register the certificate. Using the sender identifier to verify a message is optional. MSMQ can still authenticate the message with only the unregistered external certificate.</li>
<li>
Optional. Call <a href="mqfunc_031w.htm"><b>MQGetSecurityContext</b></a> to retrieve the security context information from the certificate. This function puts the security context information in a security context buffer. This step is needed only if you are sending a large number of messages using the same certificate.</li>
<li>
Set <a href="mqprop_1gz0.htm">PROPID_M_AUTH_LEVEL</a> to MQMSG_AUTH_LEVEL_ALWAYS.</li>
<li>
Set <a href="mqprop_2nsk.htm">PROPID_M_SENDER_CERT</a>.</li>
<li>
Optional. If you are using security context information, set <a href="mqprop_27lg.htm">PROPID_M_SECURITY_CONTEXT</a>, pointing it to the security context buffer used by the call to <b>MQGetSecurityContext</b>.</li>
<li>
Optional. If you want to change the hash algorithm MSMQ uses to authenticate the message, set <a href="mqprop_4dpj.htm">PROPID_M_HASH_ALG</a> (the default algorithm is CALG_MD5).</li>
<li>
Optional. If you want MSMQ to return an acknowledgment to show that the message reached the queue or was retreived, set <a href="mqprop_9411.htm">PROPID_M_ACKNOWLEDGE</a> to MQMSG_ACKNOWLEDGMENT_FULL_REACH_QUEUE |  MQMSG_ACKNOWLEDGMENT_NACK_REACH_QUEUE |  MQMSG_ACKNOWLEDGMENT_FULL_RECEIVE |  MQMSG_ACKNOWLEDGMENT_NACK_RECEIVE.</li>
<li>
Send the message.</li>
</ol>
<p>
After the message is sent, the remaining work is done by MSMQ. For information on what MSMQ does to authenticate the message, see <a href="msmq_guide_4bsj.htm">How MSMQ Authenticates Messages</a>.</p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To receive an authenticated message</h5>
<p>
There is no way for the receiving application to know if MSMQ failed to authenticate a message. Messages that fail authentication are never delivered to their destination queue. However, the receiving application can determine if a message was sent requesting authentication, which implicitly indicates the message was authenticated by MSMQ.
<ul>
<li>
When reading the message in the queue, verify that PROPID_M_AUTHENTICATED is set to 1. If it is set to 0, the message is not an authenticated message (it was not signed), and the receiving application decides if it wants to use the message.</li>
</ul>
<p>
When a message is authenticated (PROPID_M_AUTHENTICATED = 1) using an external certificate, MSMQ guarantees certain aspects of the message, but it does not validate all the information provided by the external certificate.</p>
<p>
MSMQ guarantees that no one tampered with the message, that the owner of the certificate (as specified in the certificate) sent the message, and that any received sender identifier (PROPID_M_SENDERID) matches the sender identifier used to register the certificate.</p>
<p>
The receiving application must perform any validation requirements on the remaining information in the certificate. MSMQ does not validate the external certificate. </p>
<p>&nbsp;</p></body>
</HTML>
