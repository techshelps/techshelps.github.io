<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MQLocateNext</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_mq_mqlocatenext"></a>MQLocateNext</h1>
<p>
The <b>MQLocateNext</b> function retrieves the requested queue information from the query. It is called after obtaining a query handle from a previous call to <a href="mqfunc_1gha.htm"><b>MQLocateBegin</b></a>.</p>
<pre><code><b>HRESULT APIENTRY MQLocateNext(
  HANDLE</b><i> hEnum</i><b>,           </b>
<b>  DWORD </b><i>*pcProps</i><b>,         </b>
<b>  PROPVARIANT</b><i> aPropVar[]  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hEnum</i></dt>
<dd>
[in] Query handle returned by a previous call to <b>MQLocateBegin</b>.</dd>
<dt>
<i>pcProps</i></dt>
<dd>
[in, out] On input, a pointer to a variable that specifies the number of elements in the <i>aPropVar[] </i>array.
<p>
On return, <i>pcProps</i> holds the number of properties returned to the query. <b>MQLocateNext</b> returns as many completed sets of properties (the number of properties returned for each queue) as possible. A returned value of 0 indicates no queues were found.
</dd>
<dt>
<i>aPropVar</i></dt>
<dd>
[out] Holds the values of the retrieved properties in an array of <a href="mqstruc_93lg.htm"><b>PROPVARIANT</b></a>. For each property returned, <b>MQLocateNext</b> sets the <b>VT</b> field and the corresponding <b>union</b> member of the appropriate <i>aPropVar[]</i> element. <a href="mqfunc_02gp.htm"><b>MQFreeMemory</b></a> must be called to free memory allocated by MSMQ, which happens when a <b>PROPVARIANT</b> element involves allocation of memory (for example <b>lpwstr</b>, <b>GUID</b>).
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
MQ_OK</dt>
<dd>
Indicates success.</dd>
<dt>
MQ_ERROR_INVALID_HANDLE</dt>
<dd>
The query handle specified in <i>hEnum </i>is not valid.</dd>
<dt>
MQ_ERROR_NO_DS</dt>
<dd>
Cannot access <a href="msmqglos_3wv5.htm#_mq_active_directory_gly">Active Directory</a>.</dd>
<dt>
MQ_ERROR_RESULT_BUFFER_TOO_SMALL</dt>
<dd>
The supplied buffer for <i>aPropVar </i>is too small. <b>MQLocateNext </b>could not return at least one complete query result.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>MQLocateNext</b> function is called after obtaining a query handle from a previous call to <a href="mqfunc_1gha.htm"><b>MQLocateBegin</b></a>. The call can be repeated, using the same query handle, until all the results of the query are received (until <i>pcProps</i> is 0). For a complete description of running a query, see <a href="msmquse_4wo9.htm">Locating a Public Queue</a>.</p>
<p>
The <b>MQLocateNext</b> function returns as many completed results (the number of properties requested in <b>MQLocateBegin</b>) as possible. Consequently, you should always specify a multiple of the number of requested properties when setting <i>pcProps</i>. By using a multiple of the requested properties, allocated space for these properties is not wasted. </p>
<p>
MSMQ only returns information for those queues that the calling application has access rights (MQSEC_GET_QUEUE_PROPERTIES) to. </p>
<p>
<b>MQLocateNext</b> is not supported if there is no connection to <a href="msmqglos_3wv5.htm#_mq_active_directory_gly">Active Directory</a>. This restriction applies to <a href="msmqglos_3wv8.htm#_mq_dependent_client_gly">dependent client</a> computers, <a href="msmqglos_3wvd.htm#_mq_independent_client_gly">independent client</a> computers (working offline), and MSMQ routing servers (FRS). (For information on offline operations, see <a href="msmq_guide_72es.htm">MSMQ Offline Support</a>.)</p>
<h4>Examples</h4>
<p>
For an example of using <b>MQLocateNext</b>, see <a href="msmquse_4wo9.htm">Locating a Public Queue</a>.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 4.0 SP3 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in mq.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use mqrt.lib.<br>
<b>&nbsp;&nbsp;Unicode: </b>Defined only as Unicode.</p>
<h4>See Also</h4>
<p>
<a href="mqfunc_02gp.htm"><b>MQFreeMemory</b></a>, <a href="mqfunc_8b03.htm"><b>MQGetQueueProperties</b></a>, <a href="mqfunc_1gha.htm"><b>MQLocateBegin</b></a>, <a href="mqfunc_104k.htm"><b>MQLocateEnd</b></a>, <a href="mqfunc_4rg9.htm"><b>MQSetQueueSecurity</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
