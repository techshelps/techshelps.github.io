<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Locating a Public Queue</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mq_locating_a_public_queue_activex"></a>Locating a Public Queue</h2>
<p>
Public queues can be located by running a query on the queues registered in <a href="msmqglos_3wv5.htm#_mq_active_directory_gly">Active Directory</a>. A query can be based on the queue's identifier, its label, the type of service it provides, when it was created, or the last time the queue's properties were modified.</p>
<p>
A query is made by calling the <a href="mqactx_1q7t.htm"><b>MSMQQuery</b></a> object's<b> <a href="mqactx_85np.htm">LookupQueue</a></b> method. When the query is finished, the returned <a href="mqactx_2ypf.htm"><b>MSMQQueueInfos</b></a> object references all the queues located by the query.</p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To run a query</h5>
<ol>
<li>
Determine the search criteria for the query. When locating queues by label, type of service, create time, or modify time, you can also specify a relationship parameter. For example, when using the queue's create time as the search criteria, you can also use the create time's relationship parameter (<i>RelCreateTime</i>) to locate all the queues that were created before, after, or on a specific date.</li>
<li>
Call <a href="mqactx_85np.htm"><b>LookupQueue</b></a>.<pre><code>Set qinfos = query.LookupQueue(Label:="Test Queue")
 </code></pre>
</li>
<li>
Call <a href="mqactx_4jhw.htm"><b>Reset</b></a> on the returned <a href="mqactx_2ypf.htm"><b>MSMQQueueInfos</b></a> object. Although this is not required, it guarantees that the cursor is looking at the first queue in the returned set.<pre><code>qinfos.Reset
 </code></pre>
</li>
<li>
Look at the queues in the query. In the example below, this is done by calling <b>Next</b> to point to the first queue in the query, followed by a common While loop containing another call to <b>Next</b>.<pre><code>Set qinfo = qinfos.Next

While Not qinfo Is Nothing
    MsgBox "I found a Test Queue! its Format name is: " + qinfo.FormatName
    Set qinfo = qinfos.Next
Wend
 </code></pre>
</li>
</ol>
<h4>Example</h4>
<p>
This example assumes that at least one queue whose label is Test Queue already exists. It runs a query for the test queues, displaying the format name of each queue it finds.</p>
<p>
To try this example using Microsoft® Visual Basic® (version 5.0), paste the code into the Declaration section of a form, run the example, and click the form.</p>
<pre><code>Dim query As New MSMQQuery
Dim qinfos As MSMQQueueInfos
Dim qinfo As MSMQQueueInfo
Dim Response As String

Private Sub Form_Click()

   Set qinfos = query.LookupQueue(Label:="Test Queue")
   qinfos.Reset
   Set qinfo = qinfos.Next

   While Not qinfo Is Nothing
      MsgBox "I found a Test Queue! its Format name is: " + qinfo.FormatName
      Set qinfo = qinfos.Next
   Wend
    
End Sub 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
