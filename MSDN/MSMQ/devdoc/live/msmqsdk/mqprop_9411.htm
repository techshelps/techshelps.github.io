<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PROPID_M_ACKNOWLEDGE</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_mq_propid_m_acknowledge"></a>PROPID_M_ACKNOWLEDGE</h1>
<p>
The PROPID_M_ACKNOWLEDGE property specifies the type of acknowledgment messages that MSMQ posts (in the <a href="msmqglos_3wv5.htm#_mq_administration_queue_gly">administration queue</a>) and when acknowledgments are returned to the sending application.
<dl>
<dt>
Type Indicator</dt>
<dd>
VT_UI1 (or VT_NULL)</dd>
<dt>
PROPVARIANT Field</dt>
<dd>
bVal</dd>
<dt>
Property Values</dt>
<dd>
This property can be set to one or more of the following values using the OR operator:
<dl>
<dt>
MQMSG_ACKNOWLEDGMENT_FULL_REACH_QUEUE</dt>
<dd>
Posts positive and negative acknowledgments depending on whether or not the message reaches the queue.
<p>
This can happen when the <i>time-to-reach-queue</i> timer expires, or when a message cannot be authenticated.
</dd>
<dt>
MQMSG_ACKNOWLEDGMENT_NACK_REACH_QUEUE</dt>
<dd>
Posts a negative acknowledgment when the message cannot reach the queue. 
<p>
This can happen when the <i>time-to-reach-queue</i> timer expires, or when a message cannot be authenticated.

<p>

</dd>
<dt>
MQMSG_ACKNOWLEDGMENT_FULL_RECEIVE</dt>
<dd>
Posts a positive or negative acknowledgment depending on whether or not the message is retrieved from the queue before <i>its time-to-be-received</i> timer expires.</dd>
<dt>
MQMSG_ACKNOWLEDGMENT_NACK_RECEIVE</dt>
<dd>
Posts a negative acknowledgment when an error occurs and the message cannot be retrieved from the queue before its <i>time-to-be-received</i> timer expires.
<p>

</dd>
<dt>
MQMSG_ACKNOWLEDGMENT_NONE</dt>
<dd>
The default. No acknowledgment messages (positive or negative) are posted.
</dd>
</dl>
</dd>
</dl>
<h4>Remarks</h4>
<p>
To receive a positive acknowledgment message when a message reaches its destination and when the message is retrieved, the following two full-acknowledgment settings must be combined using the OR operator: MQMSG_FULL_REACH_QUEUE and MQMSG_FULL_RECEIVE.</p>
<p>
Positive and negative acknowledgments are typically MSMQ-generated messages that are sent to an administration queue specified by the message.Acknowledgment messages can also be created by MSMQ connector applications when sending messages to a <a href="msmqglos_3wva.htm#_mq_foreign_queue_gly">foreign queue</a>. When asking for acknowledgments, you must also specify the administration queue when you send the message (see <a href="mqprop_0yp1.htm">PROPID_M_ADMIN_QUEUE</a>). For information on administration queues,<b> </b>see <a href="msmq_guide_804z.htm">Administration Queues</a>.</p>
<p>
<a href="msmq_guide_76wj.htm">Acknowledgment messages</a> contain some of the information found in the original message, however, each acknowledgment message has its own message identifier and class. The message identifier, <a href="mqprop_0vxg.htm">PROPID_M_MSGID</a>, identifies the acknowledgment in the same way it identifies each message sent by an MSMQ application. The message class, <a href="mqprop_53qr.htm">PROPID_M_CLASS</a>, identifies the type of acknowledgment that was posted. Both these properties are set by MSMQ when it creates the acknowledgment message.</p>
<p>
To request acknowledgment messages, pass PROPID_M_ACKNOWLEDGE and <a href="mqprop_0yp1.htm">PROPID_M_ADMIN_QUEUE</a> to <a href="mqfunc_8ip1.htm"><b>MQSendMessage</b></a>.</p>
<p>
To find out if an acknowledgment message was requested for a message in a queue, pass PROPID_M_ACKNOWLEDGE to <a href="mqfunc_2cdh.htm"><b>MQReceiveMessage</b></a> and examine its returned value. When passing PROPID_M_ACKNOWLEDGE to MQReceiveMessage, the corresponding VT field in the <b>aPropVar</b> array can be set to VT_NULL. </p>
<p>
For information on the <i>time-to-reach-queue</i> and <i>time-to-be-received</i> timers, see <a href="msmq_guide_206r.htm">Message Timers</a>. To set the <i>time-to-reach-queue</i> and <i>time-to-be-received</i> timers, set <a href="mqprop_8ahx.htm">PROPID_M_TIME_TO_REACH_QUEUE</a> and <a href="mqprop_531g.htm">PROPID_M_TIME_TO_BE_RECEIVED</a>, respectively.</p>
<p>
To see how PROPID_M_ACKNOWLEDGE is used when sending messages, see <a href="msmquse_9fu1.htm">Sending Messages that Request Acknowledgments</a>.</p>
<h4>Example</h4>
<p>
The following example sets PROPID_M_ACKNOWLEDGE and PROPID_M_ADMIN_QUEUE as part of preparing MQMSGPROPS.</p>
<pre><code>MQMSGPROPS MsgProps;
PROPVARIANT aVariant[10];
MSGPROPID aPropId[10];
DWORD PropIdCount = 0;

HRESULT hr;

QUEUEHANDLE hQueue;

//
// Set PROPID_M_ACKNOWLEDGE.
//
aPropId[PropIdCount] = PROPID_M_ACKNOWLEDGE;           //PropId
aVariant[PropIdCount].vt = VT_UI1;                     //Type
aVariant[PropIdCount].bVal = MQMSG_ACKNOWLEDGMENT_FULL_RECEIVE; //Value

PropIdCount++;

//
// Set the PROPID_M_ADMIN_QUEUE property.
//
aPropId[PropIdCount] = PROPID_M_ADMIN_QUEUE;         //PropId
aVariant[PropIdCount].vt = VT_LPWSTR;                //Type
aVariant[PropIdCount].pwszVal = szwAdminFormatName;  //An already obtained format name of the admin queue.

PropIdCount++;

//
// Set other message properties such as PROPID_M_BODY, PROPID_M_LABEL.
//



//
// Set the MQMSGPROPS structure
//
MsgProps.cProp = PropIdCount;       //Number of properties.
MsgProps.aPropID = aPropId;         //Ids of properties.
MsgProps.aPropVar = aVariant;       //Values of properties.
MsgProps.aStatus  = NULL;           //No Error report.
 



//
// Send message.
//
hr = MQSendMessage(
     hQueue,                  // handle to the Queue.
     &amp;MsgProps,               // Message properties to be sent.
     MQ_NO_TRANSACTION        // No transaction
     );

if (FAILED(hr))
   {
    //
    // Handle error condition
    //
    }
 </code></pre>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 4.0 SP3 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in mq.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use mqrt.lib.<br>
<b>&nbsp;&nbsp;Unicode: </b>Defined only as Unicode.</p>
<h4>See Also</h4>
<p>
<a href="mqprop_0yp1.htm">PROPID_M_ADMIN_QUEUE</a>, <a href="mqprop_53qr.htm">PROPID_M_CLASS</a>, <a href="mqprop_0vxg.htm">PROPID_M_MSGID</a>, <a href="mqprop_531g.htm">PROPID_M_TIME_TO_BE_RECEIVED</a>, <a href="mqprop_8ahx.htm">PROPID_M_TIME_TO_REACH_QUEUE</a> </p>
<p>&nbsp;</p></body>
</HTML>
