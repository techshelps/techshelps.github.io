<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Opening a Queue</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mq_opening_a_queue_api"></a>Opening a Queue</h2>
<p>
Queues can be opened for sending messages to the queue, retrieving messages from the queue, or peeking at the messages in the queue without removing them. All queues, both <a href="msmqglos_3wvk.htm#_mq_public_queue_gly">public</a> and <a href="msmqglos_3wvk.htm#_mq_private_queue_gly">private</a>, are opened by calling <a href="mqfunc_42hx.htm"><b>MQOpenQueue</b></a>. </p>
<p>
<b>MQOpenQueue</b> returns a queue handle that is used to:
<ul>
<li>
Send messages to the queue (<a href="mqfunc_8ip1.htm"><b>MQSendMessage</b></a>).</li>
<li>
Retrieve and peek at messages in the queue (<a href="mqfunc_2cdh.htm"><b>MQReceiveMessage</b></a>).</li>
<li>
Create a format name for the queue (<a href="mqfunc_5zj9.htm"><b>MQHandleToFormatName</b></a>).</li>
<li>
Create a cursor for navigating through the queue (<a href="mqfunc_3bn6.htm"><b>MQCreateCursor</b></a>).</li>
<li>
Close the queue (<a href="mqfunc_19np.htm"><b>MQCloseQueue</b></a>).</li>
</ul>
<p>
When opening a queue, the application specifies the access mode and share mode of the queue. The queue's access mode indicates if the application is going to send messages to the queue, peek at the messages in the queue, or retrieve messages from the queue. The queue's share mode indicates who else can use the queue while the application is using the queue.</p>
<p>
Before opening a queue, MSMQ verifies that the access mode requested by the application is not restricted by the access rights of the queue. For example, a queue may restrict those who can send messages to it. For a discussion of queue access rights, see <a href="msmq_guide_8i0c.htm">Access Control</a>.</p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To open a queue</h5>
<ol>
<li>
Obtain the format name of the queue. If the format name of the queue is not known, you can obtain a format name by using one of the following format name translation functions:<p>
<a href="mqfunc_925h.htm"><b>MQInstanceToFormatName</b></a>
<p>
<a href="mqfunc_95t1.htm"><b>MQPathNameToFormatName</b></a>
</li>
<li>
Set the queue's access mode. Are messages going to be sent to the queue (<i>dwAccess</i> = MQ_SEND_ACCESS), retrieved from the queue (<i>dwAccess</i> = MQ_RECEIVE_ACCESS), or peeked at without removing them from the queue (<i>dwAccess</i> = MQ_PEEK_ACCESS)?<p>
When a queue is opened with receive access, the application can also peek at the queue's messages. However, the reverse is not true. When a queue is opened with peek access, the application cannot retrieve a message from the queue.
<pre><code>DWORD dwAccess = MQ_RECEIVE_ACCESS;
 </code></pre>
</li>
<li>
Set the queue's share mode. If messages are going to be retrieved from the queue (<i>dwAccess</i> = MQ_RECEIVE_ACCESS), determine if the application should stop others from retrieving messages at the same time it is retrieving messages (<i>dwShareMode </i>= MQ_DENY_RECEIVE_SHARE). Using this setting does not stop other applications from peeking at the messages in the queue; it only prevents them from retrieving messages at the same time the calling application is retrieving messages.<pre><code>DWORD dwShareMode = MQ_DENY_RECEIVE_SHARE;
    </code></pre>
</li>
<li>
Call <a href="mqfunc_42hx.htm"><b>MQOpenQueue</b></a>.<pre><code>hr = MQOpenQueue(
     szwFormatNameBuffer,     // Format Name of queue.
     dwAccess,                // Access mode of queue.
     dwShareMode,             // Exclusive mode of queue.
     &amp;hQueue                  // OUT: Handle to queue.
     );
 </code></pre>
</li>
</ol>
<h4>Example</h4>
<p>
This example opens a queue for reading messages.</p>
<pre><code>////////////////////////
// Set the access mode.
////////////////////////
DWORD dwAccess = MQ_RECEIVE_ACCESS;
 
////////////////////////
// Set share mode.
///////////////////////
DWORD dwShareMode = MQ_DENY_RECEIVE_SHARE;
 
//////////////////////
// Call MQOpenQueue.
/////////////////////
QUEUEHANDLE hQueue;
 
hr = MQOpenQueue(
     szwFormatNameBuffer,     // Format Name of queue.
     dwAccess,                // Access mode of queue.
     dwShareMode,             // Exclusive receive mode.
     &amp;hQueue                  // OUT: Handle to queue.
     );
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
