<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Reading Messages Synchronously</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_mq_reading_messages_synchronously_api"></a>Reading Messages Synchronously</h3>
<p>
When reading messages synchronously, all calls are blocked until the next message is available or timeout occurs. </p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To read a message synchronously</h5>
<ol>
<li>
Open the queue with receive or peek access.<pre><code>hr = MQOpenQueue(
    szwFormatNameBuffer,    // Format name of the queue.
    MQ_RECEIVE_ACCESS,      // Access rights to the Queue.
    0,                      // No receive Exclusive.
    &amp;hQueue                 // OUT: handle to the opened Queue.
);
 </code></pre>
</li>
<li>
Specify the message properties to be retrieved. For example, if you only need to look at the body of the message, only specify <a href="mqprop_6wzd.htm">PROPID_M_BODY</a>.<pre><code>//Set the message body property.
aPropId[PropIdCount] = PROPID_M_BODY;              //PropId
aVariant[PropIdCount].vt = VT_VECTOR|VT_UI1;       //Type
aVariant[PropIdCount].caub.cElems = MSG_BODY_LEN;  //Buffer size
aVariant[PropIdCount].caub.pElems = ucMsgBody;     //Buffer
 
    PropIdCount++;
 </code></pre>
</li>
<li>
Set the <b>MQMSGPROPS</b> structure.<pre><code>// Set the MQMSGPROPS structure.
MsgProps.cProp = PropIdCount;       //Number of properties.
MsgProps.aPropID = aPropId;         //Ids of properties.
MsgProps.aPropVar = aVariant;       //Values of properties.
MsgProps.aStatus  = NULL;           //No Error report.
 </code></pre>
</li>
<li>
Retrieve the message from the queue.<pre><code>hr = MQReceiveMessage(
     hQueue,              // Handle to the Queue.
     5 * 60 * 1000,       // Timeout value (msec) to wait for
                         // messages (5*60*1000=5 min.).
     MQ_ACTION_RECEIVE,   // Action.
     &amp;MsgProps,           // Properties to retrieve.
     NULL,                // Must be NULL for synchronous receive.
     NULL,                // Must be NULL for synchronous receive.
     NULL,                // No Cursor.
     MQ_NO_TRANSACTION    // No transaction.
                     );
 </code></pre>
</li>
</ol>
<h4>Example</h4>
<p>
The following example opens a queue with receive access, specifies the body of the message as the only property to be retrieved, and then reads the first message in the queue as a non-transactional, synchronous operation.</p>
<pre><code>HRESULT hr

//Open Queue
WCHAR * szwFormatNameBuffer;  // Format Name of the queue to be opened
QUEUEHANDLE hQueue;

// Obtain format name of queue.
 
hr = MQOpenQueue(
    szwFormatNameBuffer,    // Format Name of the queue to be opened.
    MQ_RECEIVE_ACCESS,      // Access rights to the Queue.
    0,                      // No receive Exclusive.
    &amp;hQueue                 // OUT: handle to the opened Queue.
                );
 
if (FAILED(hr))
{
 // Error handler for MQOpenQueue.
}
 
 
MQMSGPROPS MsgProps;
MQPROPVARIANT aVariant[10];
MSGPROPID aPropId[10];
DWORD PropIdCount = 0;
 
//
// Prepare the message properties to be retrieved.
//
 
#define MSG_BODY_LEN 500
unsigned char ucMsgBody[MSG_BODY_LEN];
 
// Set the PROPID_M_BODY property.
aPropId[PropIdCount] = PROPID_M_BODY;              //PropId
aVariant[PropIdCount].vt = VT_VECTOR|VT_UI1;       //Type
aVariant[PropIdCount].caub.cElems = MSG_BODY_LEN;  //Buffer size.
aVariant[PropIdCount].caub.pElems = ucMsgBody;     //Buffer
 
PropIdCount++;
 
//
// Set other properties.
//
 
// Set the MQMSGPROPS structure
MsgProps.cProp = PropIdCount;       //Number of properties.
MsgProps.aPropID = aPropId;         //Ids of properties.
MsgProps.aPropVar = aVariant;       //Values of properties.
MsgProps.aStatus  = NULL;           //No Error report.
 
//
// Retrieve the message.
//
hr = MQReceiveMessage(
    hQueue,              // handle to the Queue.
  5 * 60 * 1000,      // Timeout value (msec) to wait for
                      // for messages (5*60*1000=5 min.).
    MQ_ACTION_RECEIVE,   // Action.
    &amp;MsgProps,           // properties to retrieve.
    NULL,                // No overlapped structure.
    NULL,                // No callback function.
    NULL,                // No Cursor.
    MQ_NO_TRANSACTION    // No transaction
                     );
 
 
if (FAILED(hr))
    {
    //  Error handler for MQReceiveMessage.
    }
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
