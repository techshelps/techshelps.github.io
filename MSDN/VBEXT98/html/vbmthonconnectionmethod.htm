<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OnConnection Method</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbmthonconnectionmethod"></a>OnConnection Method</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbmthOnConnectionMethod_C;vbmthOnConnectionMethodC;vbproBooksOnlineJumpTopic">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Example">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbmthOnConnectionMethod_X;vbmthOnConnectionMethodX">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Applies To">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbmthOnConnectionMethod_A;vbmthOnConnectionMethodA">
</object></p>
<p>
Occurs when an add-in is connected to the Visual Basic IDE, either through the <b>Add-In Manager</b> dialog box or another add-in.</p>
<p class=label>
<b>Syntax</b></p>
<p>
<i>object</i>.<b> IDTExtensibility_OnConnection (</b><i>vbinst</i> <b>As Object</b>, <i>connectmode</i> <b>As vbext_ConnectMode</b>, <i>addininst</i> <b>As AddIn</b>,<i> custom()</i> <b>As Variant)</b></p>
<p>
The <b>OnConnection</b> method syntax has these parts:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=21%><b>Part</b></td>
<td class=label width=79%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=21%><i>object</i></td>
<td width=79%>An <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defobjectexpression">
</object><a href=JavaScript:alink_4.Click()>object expression</a> that evaluates to an object in the Applies To list.</td>
</tr>
<tr valign=top>
<td width=21%><i>vbinst</i></td>
<td width=79%>An <object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defobject">
</object><a href=JavaScript:alink_5.Click()>object</a> representing the instance of the current Visual Basic session.</td>
</tr>
<tr valign=top>
<td width=21%><i>connectmode</i></td>
<td width=79%>An enumerated value of type <b>vbext_ConnectMode</b>, as specified in Settings.</td>
</tr>
<tr valign=top>
<td width=21%><i>addininst</i></td>
<td width=79%>An <b>AddIn</b> <object id=alink_6 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defobject">
</object><a href=JavaScript:alink_6.Click()>object</a> representing the instance of the add-in.</td>
</tr>
<tr valign=top>
<td width=21%><i>custom()</i> </td>
<td width=79%>An array of <object id=alink_7 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defvariantexpression">
</object><a href=JavaScript:alink_7.Click()>variant expression</a><u>s</u> to hold user-defined data.</td>
</tr>
</table><br>
<p class=label>
<b>Settings</b></p>
<p>
The settings for <i>connectmode</i> (<b>vbext_ConnectMode</b>) are:</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=34%><b>Constant</b></td>
<td class=label width=11%><b>Value</b></td>
<td class=label width=55%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=34%><b>vbext_cm_AfterStartup</b></td>
<td width=11%>0</td>
<td width=55%>Add-in was started after the initial <b>Open Project</b> dialog box was shown.</td>
</tr>
<tr valign=top>
<td width=34%><b>vbext_cm_Startup</b></td>
<td width=11%>1</td>
<td width=55%>Add-in was started before the initial <b>Open Project</b> dialog box was shown.</td>
</tr>
<tr valign=top>
<td width=34%><b>vbext_cm_External</b></td>
<td width=11%>2</td>
<td width=55%>Add-in was started externally by another program or component.</td>
</tr>
</table><br>
<p class=label>
<b>Remarks</b></p>
<p>
This method is part of the IDTExtensibility interface, which you should implement in the class that provides your connection object.</p>
<p class=indent>
<B><b>Important</b></B>&nbsp;&nbsp;&nbsp;Don't directly enter the syntax given above. Instead, use the <b>Implements</b> statement to generate the appropriate method template for the interface. To do this, in the Declarations section of the Class module that provides your add-in's connection object, enter:</p>
<pre><code>Implements IDTExtensibility
</code></pre>
<p>
After adding this line, you can then select <b>IDTExtensibility</b> from the module's <b>Object</b> drop down box. Select each method from the <b>Procedure</b> drop down to get the procedure template shown above in Syntax. Notice that the necessary code is automatically added to the Class module.</p>
<p>
An interface's methods are exposed through the <b>Implements</b> statement. When the above syntax is entered in the Declarations section of the Class module that handles an add-in's events, the interface's methods become available for your use through the module's <b>Procedure</b> and <b>Object</b> drop down boxes. To add the code to the module, select the method from the <b>Procedure</b> drop down box.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;While the <b>OnConnection</b> method is a method to the IDTExtensibility interface, to you as a Visual Basic programmer it acts and behaves like an event. In other words, when an add-in is connected to the Visual Basic IDE, either through the <b>Add-In Manager</b> dialog box or another add-in, any code in the <b>OnConnection</b> method automatically occurs, just as if it were an event procedure.</p>
<p class=indent>
<B><b>Important</b></B>&nbsp;&nbsp;&nbsp;Since an interface is a contract between an object and Visual Basic, you must be sure to implement <i>all</i> of the methods in the interface. This means that all four <b>IDTExtensibility</b> interface methods are present in your Class module, each containing at least one executable statement. This can consist of as little as a single remark statement, but they must each contain at least one executable statement to prevent the compiler from removing them as empty procedures.</p>
</BODY>
</HTML>
