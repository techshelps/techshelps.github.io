<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SQL Syntax</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_msi_sql_syntax"></a>SQL Syntax</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The SQL query strings are restricted to the following format.
<ul>
<li>
To select a group of records.<p>
<b>SELECT</b> [DISTINCT]{column-list} <b>FROM</b> {table-list} [<b>WHERE</b> {operation-list}] [<b>ORDER BY </b>{column-list}] 
</li>
<li>
To delete records from a table.<p>
<b>DELETE FROM</b> {table} [<b>WHERE</b> {operation-list}]
</li>
<li>
To modify existing records in a table.<p>
<b>UPDATE</b> {table-list} <b>SET</b> {column}= {constant} [, {column}= {constant}][, ...] [<b>WHERE</b> {operation-list}]
</li>
<li>
To add records to a table.<p>
<b>INSERT INTO</b> {table} ({column-list}) <b>VALUES</b> ({constant-list}) [<b>TEMPORARY</b>]
</li>
<li>
To add a table.<p>
<b>CREATE TABLE </b>{table} ( {column} [<b>CHAR</b> [( {size} )] | <b>CHARACTER</b> [( {size} )] | <b>LONGCHAR </b> | <b>SHORT</b> | <b>INT</b> | <b>INTEGER</b> | <b>LONG</b> | <b>OBJECT</b> ] [<b>NOT NULL</b>] [<b>TEMPORARY</b>][<b>LOCALIZABLE</b>] [, column...][, ...] <b>PRIMARY KEY </b>column [, column][, ...] )[<b>HOLD</b>]
</li>
<li>
To remove a table.<p>
<b>DROP TABLE</b> {table}
</li>
<li>
To add a column.<p>
<b>ALTER TABLE</b> {table} <b>ADD </b> {column} [<b>CHAR</b> [( {size} )] | <b>CHARACTER</b> [( {size} )] | <b>LONGCHAR</b>  | <b>SHORT</b> | <b>INT</b> | <b>INTEGER</b> | <b>LONG</b> | <b>OBJECT</b> ] [<b>NOT</b> <b>NULL</b>] [<b>TEMPORARY</b>][<b>LOCALIZABLE</b>][<b>HOLD</b>]
</li>
<li>
To hold and free temporary tables.<p>
<b>ALTER TABLE</b> {table name} <b>HOLD</b>
<p>
<b>ALTER TABLE</b> {table name} <b>FREE</b>
<p>
The user can use the commands <b>HOLD</b> and <b>FREE</b> to control the life period of a temporary table or a temporary column. The hold count on a table is incremented for every SQL <b>HOLD</b> operation on that table and decremented for every SQL <b>FREE</b> operation on the table. When the last hold count is released on a table, all temporary columns become inaccessible. If all columns are temporary, the table becomes inaccessible.
</li>
</ul>
<p>
Optional parameters are shown enclosed in brackets [ ]. When several choices are listed, the optional parameters are separated by a vertical bar.</p>
<p>
A {constant} is either a string or an integer. A string must be enclosed in single quote marks 'example'. A {constant-list} is a comma-delimited list of one or more constants.</p>
<p>
The <b>LOCALIZABLE</b> option sets a column attribute that indicates the column needs to be localized.</p>
<p>
A {column} is a columnar reference to a value in a field of a table. </p>
<p>
A {marker} is a parameter reference to a value supplied by a record submitted with the query. It is represented in the SQL statement by a question mark ?. For information regarding the use of parameters, see either the <a href="qref_8hgl.htm"><b>MsiViewExecute</b></a> function or the <a href="vref_2k6c.htm">Execute method</a>.</p>
<p>
A <b>WHERE </b>{operation-list} clause is optional and is a grouping of operations to be used to filter the selection. The operations must be of the following types:
<ul>
<li>
{column} = {column}</li>
<li>
{column} = | &lt;&gt; | &gt; | &lt; | &gt;= | &lt;=  {constant} </li>
<li>
{column} = | &lt;&gt; | &gt; | &lt; | &gt;= | &lt;=  {marker} </li>
<li>
{column} is null</li>
<li>
{column} is not null</li>
</ul>
<p>
For string values, only the = or &lt;&gt; operations are possible. Object value comparisons are limited to IS NULL and IS NOT NULL.</p>
<p>
Individual operations can be grouped by <b>AND</b> or <b>OR</b> operators. Ordering can be imposed by use of parentheses ( ).</p>
<p>
The <b>ORDER BY </b>clause is optional and causes an initial delay during sorting. Ordering by strings will group identical strings together, but it will not alphabetize the strings.</p>
<p>
The <b>DISTINCT</b> clause is optional and does not repeat identical records in the returned result set.</p>
<p>
A {table-list} is a comma-delimited list of one or more table names referred to as {table} in the join. Table names that clash with SQL keywords must be enclosed in two grave accent marks `` (ASCII value 96). Table names are limited to 31 characters and cannot include a period.</p>
<p>
A {column-list} is a comma-delimited list of one or more table columns referred to as {column} selected. Ambiguous columns may be further qualified as {tablename.column}. Column names that clash with SQL keywords must be enclosed in quotation marks " ". If the column is qualified as {tablename.column} and if there is a need to escape the identifier, the table name and the column must be individually escaped as {`tablename`.`column`}. Column names cannot include a period.</p>
<p>
The table and column names are case-sensitive, even if ODBC databases are used. However, SQL keywords are not case-sensitive. Only inner joins are supported, specified by a comparison of columns from different tables.</p>
<p>
Tables may contain from 1 to 32 columns. Table and column names are not constrained except that they are limited to 31 characters. Columns that are part of the primary key(s) for a table must be defined first in priority order, followed by any non-primary key columns. Persistent columns must be defined before temporary columns. The sort sequence of a text column is undefined, however, identical text values will always group together.</p>
<p>
Tables may not contain more than one column of type 'object'.</p>
<p>&nbsp;</p></body>
</HTML>
