<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Standard Actions</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_msi_using_standard_actions"></a>Using Standard Actions</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
You execute an action in the Microsoft® Windows® installer by calling the <a href="qref_9woe.htm"><b>MsiDoAction</b></a> function or by including the action in a sequence table. Since most actions encapsulate a single purpose, the most common way to use actions is to order a series of actions into a sequence to accomplish a larger task. The installer has three standard actions, called top-level actions, that call sequence tables. The three associated sequence tables can contain standard actions, custom actions, and user-interface elements. Each action in a sequence table has a condition and a sequence number. All actions in a sequence table are visited in order and are executed if the condition evaluates to True.</p>
<p>
Many of the installer standard actions have sequence restrictions. For example, before calling the <a href="aref_2f8u.htm">FileCost action</a>, you must first call the <a href="aref_4bam.htm">CostInitialize action</a>. Actions can be ordered in any manner in a sequence table as long as they follow all the sequencing restrictions. For more information on restrictions, see the individual action topic in <a href="aref_1wo5.htm">Standard Actions Reference</a>.</p>
<p>
The <a href="aref_986m.htm">INSTALL action</a> is a top-level action that uses the sequence tables.</p>
<h4>Example</h4>
<p>
When the INSTALL action is executed, a typical installation sequence would have the following execution flow:
<ol>
<li>
<a href="aref_6jhq.htm">LaunchConditions action</a> is executed. All of the launch conditions must be satisfied for the installation to proceed.</li>
<li>
<a href="aref_16zy.htm">AppSearch action</a> is executed. This action determines if an application specified in the <a href="tref_0w9x.htm">AppSearch table</a> is installed on the computer. This action can be used to determine the presence of a previous version of the application to be installed.</li>
<li>
<a href="aref_4bam.htm">CostInitialize action</a> is executed. This action loads the <a href="tref_09np.htm">Component table</a> and the <a href="tref_0a91.htm">Feature table</a> into memory to determine disk space requirements.</li>
<li>
<a href="aref_2f8u.htm">FileCost action</a> is executed. This action uses the loaded <a href="tref_0a91.htm">Feature table</a> and <a href="tref_09np.htm">Component table</a> to determine the size of all files to be installed.</li>
<li>
<a href="aref_22we.htm">CostFinalize action</a> is executed. This action finalizes the costing information, taking into account the installation levels and conditions for selected features.</li>
<li>
First installation dialog box displays. <p>
If the entry in the sequence is not a standard action, the installer queries the <a href="tref_71b9.htm">CustomAction table</a> to check whether the action is a registered custom action. If it is not a standard action or a custom action, the installer queries the user interface handler to check whether the action is a user interface element to be displayed.
</li>
<li>
Progress dialog box displays.</li>
<li>
<a href="aref_529a.htm">RegisterProduct action</a> is executed. The product information is registered with the configuration manager.</li>
<li>
<a href="aref_9fzi.htm">InstallValidate action</a> is executed. This action verifies that all volumes for which the cost has been determined have sufficient space for installation.</li>
<li>
<a href="aref_0g4u.htm">RegisterUser action</a> is executed. This action registers user information in the configuration manager.</li>
<li>
<a href="aref_6p0u.htm">CreateFolders action</a> is executed. This action creates empty folders for components set to be installed.</li>
<li>
<a href="aref_9xny.htm">RemoveFiles action</a> is executed. If there are files from a previous version, they are removed.</li>
<li>
<a href="aref_3hym.htm">InstallFiles action</a> is executed. All files from components set to be installed are copied to the appropriate directory.</li>
<li>
<a href="aref_15pq.htm">MoveFiles action</a> is executed. This action locates files that already exist on the user's computer and moves or copies those files to a new location.</li>
<li>
<a href="aref_1cmm.htm">WriteRegistryValues action</a> is executed. This action writes application registry information into the registry.</li>
<li>
<a href="aref_7uzy.htm">CreateShortcuts action</a> is executed. This action uses the <a href="tref_2i91.htm">Shortcut table</a> to determine the shortcuts that must be copied to the computer.</li>
<li>
<a href="aref_4fxq.htm">ProcessComponents action</a> is executed. This action registers the component information for the components set to be installed.</li>
<li>
<a href="aref_8l9q.htm">InstallFinalize action</a> is executed. This action runs a script containing all operations spooled since the start for the installation. </li>
</ol>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
