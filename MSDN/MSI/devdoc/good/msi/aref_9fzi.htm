<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>InstallValidate Action</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_msi_installvalidate_action"></a>InstallValidate Action</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The InstallValidate action verifies that all volumes to which cost has been attributed have sufficient space for the installation. If any volume is short of disk space, the InstallValidate action ends the installation with a fatal error.</p>
<p>
This action is also responsible for notifying the user if one or more files to be overwritten or removed are currently in use by an active process.</p>
<h4>Database Tables Queried</h4>
<p>
None</p>
<h4>Properties Used</h4>
<p>
None</p>
<h4>Sequencing Restrictions</h4>
<p>
The <a href="aref_22we.htm">CostFinalize</a> action and any user-interface dialog sequences that allow the user to modify selection states and/or directories should be executed prior to executing InstallValidate.</p>
<h4>Remarks</h4>
<p>
This is a fail-safe verification. Typically, an earlier user-interface dialog sequence should perform this same verification whenever the user attempts to initiate the actual installation of files and should present an Out-Of-Disk-Space dialog when required. Thus, the user-interface dialogs should be authored in such a way as to prevent the user from proceeding with the install if a disk-space problem exists. Of course, in the case of a quiet install, there is no user interface, so the fact that InstallValidate action simply terminates the install if a disk-space problem exists is the proper response. (If logging is enabled, the reason for the premature termination appears in the log.)</p>
<p>
<b>Handling Files in Use</b></p>
<p>
During the file costing process, for any file to be overwritten or removed that is also found to be in use (that is, opened for execution or modification by any process), an entry is added to an internal FilesInUse table. (This entry contains columns for the name and full path of the file.) When InstallValidate is executed, if there are any entries in the FilesInUse table, The installer determines the name of the process that is using the file. For each unique process identified in this manner, InstallValidate adds one record to the <a href="tref_5f1h.htm">ListBox</a> user-interface table, with the following values in each column:</p>
<p>
<b>Property</b>:   FileInUseProcess<br>
<b>Value</b>:       &lt;Name of process&gt;<br>
<b>Text</b>:         &lt;Text contained in the caption of main window of process&gt;</p>
<p>
Next, InstallValidate displays the FilesInUse dialog. This gives the user interface a chance to display a dialog informing the user of the processes that should be shut down to avoid the requirement of rebooting the system to replace files in use. To display an appropriate dialog, a dialog must be authored with the name FilesInUse. This dialog must contain a <a href="href_1yjw.htm">ListBox control</a> that is tied to a property named FileInUseProcess. By convention, this dialog would have three pushbuttons (for example, Exit, Retry, Ignore), but this is up to the user-interface author. In any case, each pushbutton should be tied to an <a href="href_9a0k.htm">EndDialog</a> controlevent via the <a href="tref_6k11.htm">ControlEvent</a> table, each with a different argument. InstallValidate responds as follows to the value returned by DoAction, as dictated by one of these <a href="href_9a0k.htm">EndDialog</a> arguments associated with the button pushed by the user:</p>
<p>
<b>Retry</b>: All values added to the <a href="tref_5f1h.htm">ListBox table</a> are cleared, and the entire file costing procedure is repeated (rechecking for files that are still in use). If one or more processes are still identified as using files to be overwritten or deleted, the process repeats; otherwise, InstallValidate returns control to The installer with a status of iesSuccess.</p>
<p>
<b>Exit</b>: InstallValidate immediately returns control to the installer with a status of iesUserExit. This terminates the installation.</p>
<p>
<b>Any other return value</b>: InstallValidate immediately returns control to the installer with a status of iesSuccess. In this case, since one or more files are still in use, the subsequent <a href="aref_3hym.htm">InstallFiles</a> and/or <a href="aref_9tpq.htm">InstallAdminPackage</a> actions must schedule the in-use file(s) to be replaced or deleted at reboot time.</p>
<p>
<b>Notes</b>&nbsp;&nbsp;If no dialog named FilesInUse is found, or if the database has no ListBox table, InstallValidate silently exits without an error.</p>
<p>
Since the list delimiter for transforms, sources and patches is a semicolon, this character should not be used in these filenames or paths.</p>
<p>
Files marked read-only in a read-only location are never considered in use by the installer.</p>
<p>
If the UI level is basic, an "out of disk space" dialog is always presented to the user, when selecting the "Abort" and "Retry" buttons. To determine if sufficient disk space is available, see <a href="href_9njo.htm">CheckDiskSpace ControlEvent</a>.&nbsp; </p>
<p>&nbsp;</p></body>
</HTML>
