<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Registry Tables Group</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_msi_registry_tables_group"></a>Registry Tables Group</h3>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
<img src="images/registry.gif" border=0></p>
<p>
The installer has specific tables for the different types of registry entries. When populating the registry tables group it is important to try to minimize the number of entries put into the <a href="tref_3obp.htm">Registry table</a> and maximize the use of the other, specific, registry tables. This is because the installer cannot distinguish between different types of registry entries in the Registry table and cannot use the internal logic necessary to take full advantage of all of the installer features. For example, making registry entries into specific tables maximizes the benefits to the application from advertising applications and features. </p>
<p>
The figure shows the registry entry group of tables and as well as the <a href="tref_09np.htm">Component table</a>, <a href="tref_0a91.htm">Feature table</a>, and <a href="tref_4n6t.htm">File table</a>. Although the latter are not directly involved with populating the registry, they are included in the figure because they are essential to the logic of the registry entry group .</p>
<p>
The registry entry group contain the following tables of specific registry entries
<ul>
<li>
The <a href="tref_3obp.htm">Registry table</a> holds the information that the application needs to put into the system registry.</li>
<li>
The <a href="tref_219h.htm">Extension table</a> contains all of the extensions your application uses along with the features and components associated with the extensions. </li>
<li>
The <a href="tref_3kdh.htm">Verb table</a> associates command-verb information with the file extensions listed in the <a href="tref_219h.htm">Extension table</a>. This results in an indirect link between the Verb and Features table that is needed for feature advertisement.</li>
<li>
The <a href="tref_3085.htm">TypeLib table</a> provides information that needs to be placed in the registry for the advertisement and registration of type libraries.</li>
<li>
The <a href="tref_3sh1.htm">MIME table</a> associates a MIME context type with a CLSID or a file extension. This results in a path between the MIME and Feature Table that is needed for feature advertisement. </li>
<li>
The <a href="tref_0llx.htm">SelfReg table</a> provides information needed to self-register modules. Self-registration is provided by the installer only for backward compatibility and it is not recommended as a method for populating the registry, however if there are any modules in your application that must register themselves, use the SelfReg table.</li>
<li>
The <a href="tref_7vmt.htm">Icon table</a> provides icon information which is copied to a file as a part of product advertisement. </li>
<li>
The <a href="tref_5n8l.htm">Class table</a> is used to register Class IDs and other information for COM objects. This table contains COM server-related information that must be generated as a part of the product advertisement.</li>
<li>
The <a href="tref_4x5x.htm">ProgId table</a> associates program IDs with class IDs.</li>
<li>
</li>
</ul>
<p>&nbsp;</p></body>
</HTML>
