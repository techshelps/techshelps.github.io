<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>REINSTALLMODE Property</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_msi_reinstallmode_property"></a>REINSTALLMODE Property</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
A string containing letters that specify the type of reinstall to perform. Options are case-insensitive and order-independent. This property should normally always be used in conjunction with the <a href="pref_19x5.htm">REINSTALL</a> property. </p>
<h4>Set By</h4>
<p>
Command line.</p>
<h4>Used By</h4>
<p>
MsiEngine uses this value to determine the type of reinstall (if any) to perform.</p>
<h4>Default Value</h4>
<p>
By default the REINSTALLMODE is "romus".</p>
<p>
<b>Reinstall Option Codes</b></p>
<table cellspacing=4 cols=3>
<tr valign=top>
<td width=5%>r</td>
<td width=45%>(iefInstallEnable)</td>
<td width=50%>Enable <b>r</b>einstall of any files/registry found to be invalid.</td>
</tr>
<tr valign=top>
<td width=5%>p</td>
<td width=45%>(iefOverwriteNone)</td>
<td width=50%>Reinstall only if file is missing (i.e. verify that the file is <b>p</b>resent).</td>
</tr>
<tr valign=top>
<td width=5%>o</td>
<td width=45%>(iefOverwriteOlderVersions)</td>
<td width=50%>Reinstall if file is missing, or an <b>o</b>lder version is present.</td>
</tr>
<tr valign=top>
<td width=5%>e</td>
<td width=45%>(iefOverwriteEqualVersions)</td>
<td width=50%>Reinstall if file is missing, or an <b>e</b>qual or older version is present</td>
</tr>
<tr valign=top>
<td width=5%>d</td>
<td width=45%>(iefOverwriteDifferingVersions)</td>
<td width=50%>Reinstall if file is missing, or a <b>d</b>ifferent version is present</td>
</tr>
<tr valign=top>
<td width=5%>c</td>
<td width=45%>(iefOverwriteCorruptedFiles)</td>
<td width=50%>Reinstall if file is missing, or <b>c</b>orrupt (i.e. the stored checksum doesn't match the computed value).</td>
</tr>
<tr valign=top>
<td width=5%>a</td>
<td width=45%>(iefOverwriteAllFiles)</td>
<td width=50%>Force <b>a</b>ll files to be reinstalled, regardless of checksum or version</td>
</tr>
<tr valign=top>
<td width=5%>u</td>
<td width=45%>(iefInstallUserData)</td>
<td width=50%>Re-write all required <b>u</b>ser registry entries.</td>
</tr>
<tr valign=top>
<td width=5%>m</td>
<td width=45%>(iefInstallMachineData)</td>
<td width=50%>Re-write all required local <b>m</b>achine registry entries.</td>
</tr>
<tr valign=top>
<td width=5%>s</td>
<td width=45%>(iefInstallShortcuts)</td>
<td width=50%>Reinstall all <b>s</b>hortcuts, overwriting any existing shortcut.</td>
</tr>
</table><br>
<p>
All of the reinstall options shown above, except for iefInstallEnable, can actually be thought of as "detection" flags, which are used to detect that the feature or features specified by the REINSTALL property are installed properly. If any of the specified detection operations fail during the reinstall, this fact will be logged for informational purposes. However, the invalid installation will actually be repaired only if the iefInstallEnable option is also set. For example, if the iefOverwriteCorruptedFiles flag is set, corrupted files will be detected and logged on reinstall, but the corrupted files will actually be repaired (by reinstallation) only if the iefInstallEnable flag is also specified.</p>
<p>
If the REINSTALLMODE property is defined without the REINSTALL property defined, then the specified "detection" modes still apply; however, only those features that are selected normally for install will actually be "reinstalled". Thus, in this case, REINSTALLMODE actually specifies the "overwrite" mode for a normal install.</p>
<p>
<b>Note</b>&nbsp;&nbsp;Only those files that are designated in the <a href="tref_4n6t.htm">File</a> table as containing checksum information will ever be verified for accurate checksum.</p>
<p>&nbsp;</p></body>
</HTML>
