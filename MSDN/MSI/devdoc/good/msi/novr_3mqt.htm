<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using a Sequence Table</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_msi_using_a_sequence_table"></a>Using a Sequence Table</h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The authoring of the sequence tables is an essential part of developing an installer package because these tables specify the flow of the installation process. Sequence tables are the only place in an installer package where the flow can be specified. The flow is always linear and there can be no branching or looping.</p>
<p>
There are six sequence tables in the installer database:
<ul>
<li>
The <a href="tref_1git.htm">InstallUISequence table</a> </li>
<li>
The <a href="tref_5pid.htm">InstallExecuteSequence table</a> </li>
<li>
The <a href="tref_5lnp.htm">AdminUISequence table</a> </li>
<li>
The <a href="tref_70f9.htm">AdminExecuteSequence table</a> </li>
<li>
The <a href="tref_3rvp.htm">AdvtUISequence table</a> </li>
<li>
The <a href="tref_5mn9.htm">AdvtExecuteSequence table</a> </li>
</ul>
<p>
Upon the execution of one of the top-level actions, <a href="aref_986m.htm">INSTALL</a>, <a href="aref_2o8e.htm">ADVERTISE</a>, and <a href="aref_4hbi.htm">ADMIN</a>, the installer begins advancing through the sequence of actions listed in one of the user interface, execution, or advertise sequence tables. The installer contains internal logic that determines which of the sequence tables to use.
<ul>
<li>
The user interface (UI) sequence tables contain the exit dialogs and actions coming before the <a href="aref_9fzi.htm">InstallValidate action</a>. Actions from InstallValidate to the end of the install sequence are located in the execution sequence tables. The actions needed to advertise products and features are located in the advertise sequence tables. </li>
<li>
A typical UI sequence table will begin with costing initialization actions, then the user interface actions, and then the <a href="aref_3b1q.htm">ExecuteAction action</a>, which starts the execution of the installation. Here is an example of a sequence table.</li>
</ul>
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=33%>Action</th>
<th align=left width=42%>Condition</th>
<th align=left width=25%>Sequence</th>
</tr>
<tr valign=top>
<td width=33%><a href="aref_6jhq.htm">LaunchConditions</a></td>
<td width=42%></td>
<td width=25%>10</td>
</tr>
<tr valign=top>
<td width=33%><a href="aref_16zy.htm">AppSearch</a></td>
<td width=42%></td>
<td width=25%>30</td>
</tr>
<tr valign=top>
<td width=33%><a href="aref_77se.htm">CCPSearch</a></td>
<td width=42%>CCP_TEST</td>
<td width=25%>40</td>
</tr>
<tr valign=top>
<td width=33%>CCPDialog</td>
<td width=42%>NOT_CCP_SUCCESS</td>
<td width=25%>50</td>
</tr>
<tr valign=top>
<td width=33%>MyCustomConfig</td>
<td width=42%>NOT <a href="pref_8ws9.htm">Installed</a></td>
<td width=25%>80</td>
</tr>
<tr valign=top>
<td width=33%><a href="aref_4bam.htm">CostInitialize</a></td>
<td width=42%></td>
<td width=25%>90</td>
</tr>
<tr valign=top>
<td width=33%><a href="aref_2f8u.htm">FileCost</a></td>
<td width=42%></td>
<td width=25%>100</td>
</tr>
<tr valign=top>
<td width=33%><a href="aref_22we.htm">CostFinalize</a></td>
<td width=42%></td>
<td width=25%>110</td>
</tr>
<tr valign=top>
<td width=33%>InstallDialog</td>
<td width=42%>NOT <a href="pref_8ws9.htm">Installed</a></td>
<td width=25%>120</td>
</tr>
<tr valign=top>
<td width=33%>MaintenanceDialog</td>
<td width=42%><a href="pref_8ws9.htm">Installed</a> AND NOT <a href="pref_31tl.htm">Resume</a></td>
<td width=25%>130</td>
</tr>
<tr valign=top>
<td width=33%>ActionDialog</td>
<td width=42%></td>
<td width=25%>150</td>
</tr>
<tr valign=top>
<td width=33%><a href="aref_529a.htm">RegisterProduct</a></td>
<td width=42%></td>
<td width=25%>170</td>
</tr>
<tr valign=top>
<td width=33%><a href="aref_9fzi.htm">InstallValidate</a></td>
<td width=42%></td>
<td width=25%>210</td>
</tr>
<tr valign=top>
<td width=33%><a href="aref_3hym.htm">InstallFiles</a></td>
<td width=42%></td>
<td width=25%>330</td>
</tr>
<tr valign=top>
<td width=33%>MyCustomAction</td>
<td width=42%>$MyComponent &gt; 2</td>
<td width=25%>440</td>
</tr>
<tr valign=top>
<td width=33%><a href="aref_8l9q.htm">InstallFinalize</a></td>
<td width=42%></td>
<td width=25%>510</td>
</tr>
</table><br>
<p>
The sequence tables have three columns: Action, Condition, and Sequence. The Action column names the standard or custom action, or user interface wizard, the installer will execute. The Sequence column indicates the place of the record in the sequence and each record in the sequence table is sampled in order. The Condition column is a logical expression that causes the action to be executed if the expression is True and skipped if the expression is False. Conditions can be thought of as jumps and so the linear flow may not execute every action.</p>
<p>
The following actions in this sequence table are defined by the installer and are therefore examples of <a href="acts_4lmb.htm">standard actions</a>. </p>
<p>
<a href="aref_6jhq.htm">LaunchConditions</a><br>
<a href="aref_16zy.htm">AppSearch</a><br>
<a href="aref_77se.htm">CCPSearch</a><br>
<a href="aref_4bam.htm">CostInitialize</a><br>
<a href="aref_2f8u.htm">FileCost</a><br>
<a href="aref_22we.htm">CostFinalize</a><br>
<a href="aref_529a.htm">RegisterProduct</a><br>
<a href="aref_3hym.htm">InstallFiles</a><br>
<a href="aref_8l9q.htm">InstallFinalize</a></p>
<p>
The following actions were defined by the table's author and are therefore examples of <a href="cact_5t2r.htm">custom actions</a> and must be listed in the <a href="tref_71b9.htm">CustomAction table</a>.</p>
<p>
MyCustomConfig<br>
MyCustomAction</p>
<p>
The remaining entries in the Action field are dialogs. They therefore must be entries into the <a href="tref_51wl.htm">Dialog table</a>.</p>
<p>
CCPDialog<br>
InstallDialog<br>
MaintenanceDialog<br>
ActionDialog</p>
<p>
The Condition column causes the installer to skip the action if the property or expression in this field is False. The <a href="pref_8ws9.htm">Installed property</a> and the <a href="pref_31tl.htm">Resume property</a> are example of properties that are set by the installer. The Installed property is set to true if the product is already installed and the Resume property is set if resuming a suspended installation. The CCP_TEST and the NOT_CCP_SUCCESS properties are examples of properties that can be set at the command line by the user installing the application. </p>
<p>
All actions will therefore run in sequence with the following conditional steps. 
<ul>
<li>
The CPPSearch is run only if CCP_TEST is set.</li>
<li>
CCPDialog is run only if NOT_CCP_SUCCESS is set.</li>
<li>
MaintenanceDialog is run only if this product is already installed and if this is not an installation that is being resume after being suspended.</li>
<li>
MyCustomAction is run only if the expression in the Condition column is True. The expression $MyComponent &gt; 2 refers to the action state of the component called MyComponent. This condition indicates that MyCustomAction should only be run if MyComponent is set to be installed. For more information on Action states and Selection states, see the <a href="vref_84xl.htm"><b>FeatureRequestState</b> property</a>, the <a href="tref_0a91.htm">Feature table</a>, and the <a href="aref_3hym.htm">InstallFiles action</a>.</li>
</ul>
<p>
For more examples of properties see <a href="prop_29tf.htm">Using Properties</a> and for more information on how expressions are evaluated see <a href="qref_6je6.htm">MsiEvaluateCondition</a>.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
