<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>File Table</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_msi_file_table"></a>File Table</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The File table contains the complete list of source files with their various attributes, ordered by a unique, non-localized identifier. Files can be stored on the source media either as individual files, or compressed within a cabinet file.</p>
<p>
The File table has the following columns.</p>
<table cellspacing=4 cols=4>
<tr valign=top>
<th align=left width=34%>Column</th>
<th align=left width=35%>Type</th>
<th align=left width=13%>Key</th>
<th align=left width=18%>Nullable</th>
</tr>
<tr valign=top>
<td width=34%>File</td>
<td width=35%><a href="tref_6b77.htm#_msi_identifier">Identifier</a></td>
<td width=13%>Y</td>
<td width=18%>N</td>
</tr>
<tr valign=top>
<td width=34%>Component_</td>
<td width=35%><a href="tref_6b77.htm#_msi_identifier">Identifier</a></td>
<td width=13%></td>
<td width=18%>N</td>
</tr>
<tr valign=top>
<td width=34%>FileName</td>
<td width=35%><a href="tref_6b77.htm#_msi_filename">Filename</a></td>
<td width=13%></td>
<td width=18%>N</td>
</tr>
<tr valign=top>
<td width=34%>FileSize</td>
<td width=35%><a href="tref_6b77.htm#_msi_doubleinteger">DoubleInteger</a></td>
<td width=13%></td>
<td width=18%>Y</td>
</tr>
<tr valign=top>
<td width=34%>Version</td>
<td width=35%><a href="tref_6b77.htm#_msi_version">Version</a></td>
<td width=13%></td>
<td width=18%>Y</td>
</tr>
<tr valign=top>
<td width=34%>Language</td>
<td width=35%><a href="tref_6b77.htm#_msi_language">Language</a></td>
<td width=13%></td>
<td width=18%>Y</td>
</tr>
<tr valign=top>
<td width=34%>Attributes</td>
<td width=35%><a href="tref_6b77.htm#_msi_integer">Integer</a></td>
<td width=13%></td>
<td width=18%>Y</td>
</tr>
<tr valign=top>
<td width=34%>Sequence</td>
<td width=35%><a href="tref_6b77.htm#_msi_integer">Integer</a></td>
<td width=13%></td>
<td width=18%>N</td>
</tr>
</table><br>
<h4>Columns</h4>
<dl>
<dt>
File</dt>
<dd>
A non-localized token that matches a file identifier in the cabinet. For uncompressed files, this field is ignored.</dd>
<dt>
Component_</dt>
<dd>
External key into the <a href="tref_09np.htm">Component table</a> that references the Component that controls the file.
<p>
External key to column one of the Component table.
</dd>
<dt>
FileName</dt>
<dd>
File name used for installation. The name may be localized. This may be formatted as a short file name | long file name pair.</dd>
<dt>
FileSize</dt>
<dd>
Size of the file in bytes.
<p>
Non-negative value only.
</dd>
<dt>
Version</dt>
<dd>
For versioned files, this is the version string. For non-versioned files, this is blank.
<p>
The Version field can also be set to contain the primary key of another record in the same table, producing a Companion File reference. In this case the version column is an external key to column one of the <a href="#_msi_file_table">File table</a>. See the remarks section for more information.
</dd>
<dt>
Language</dt>
<dd>
List of decimal language IDs, separated by commas.</dd>
<dt>
Attributes </dt>
<dd>
Integer containing bit flags representing file attributes.
<p>
The following table shows the definition of the bit field. 

<table cellspacing=4 cols=4>
<tr valign=top>
<th align=left width=29%>Bit position</th>
<th align=left width=33%>Decimal equivalent</th>
<th align=left colspan=2 width=38%>Description</th>
</tr>
<tr valign=top>
<td width=29%>0</td>
<td colspan=2 width=33%>1</td>
<td width=38%>Read-Only </td>
</tr>
<tr valign=top>
<td width=29%>1</td>
<td colspan=2 width=33%>2</td>
<td width=38%>Hidden </td>
</tr>
<tr valign=top>
<td width=29%>2</td>
<td colspan=2 width=33%>4</td>
<td width=38%>System </td>
</tr>
<tr valign=top>
<td width=29%>8</td>
<td colspan=2 width=33%>256</td>
<td width=38%>Split - the file is split between two or more compression cabinets</td>
</tr>
<tr valign=top>
<td width=29%>9</td>
<td colspan=2 width=33%>512</td>
<td width=38%>Vital - this file is vital for the proper operation of the component to which it belongs</td>
</tr>
<tr valign=top>
<td width=29%>10</td>
<td colspan=2 width=33%>1024</td>
<td width=38%>ValidCheckSum</td>
</tr>
<tr valign=top>
<td width=29%>13</td>
<td colspan=2 width=33%>8192</td>
<td width=38%>Uncompressed - the file is uncompressed on the source media</td>
</tr>
</table><br>


<p>
If the "Vital" bit within the Attributes column is set, and if the component to which the file belongs is selected for installation, then the installer must be able to install this file for the installation to be completed successfully. If the installer is unable to install the file for some reason (for example, if the source file cannot be located within the source image), then an error dialog will appear with the options "Retry" or "Cancel". For a file that does not have the "Vital" bit set, the options in case of an install error will be "Abort", "Retry", and "Ignore" (that is, the user will have the option to complete the install successfully without installing that file). 

<p>
The "ValidCheckSum" bit within the Attributes column should be set for every executable file in the installation that has a valid checksum stored in the Portable Executable (PE) file header. Only those files that have this bit set will ever be verified for valid checksum during a reinstall (see the REINSTALLMODE property for more information). 
</dd>
<dt>
Sequence</dt>
<dd>
Sequence position of this file on the media images. This order must correspond to the order of the files in the cabinet if the files are compressed.
<p>
The sequence numbers in the Sequence column are used to specify both the order of installation for files and the source media upon which the file is located (in conjunction with the <a href="tref_4mlh.htm">Media table</a>). For example, suppose a file has a sequence number of 92. To determine the source disk this file resides on, look in the Media table for the entry with the smallest Last Sequence value that is larger than 92.

<p>
Although compressed files are assigned internal sequence numbers within cabinets, those absolute numbers do not need to match the sequence numbers within the File table. It is, however, important that the sequence of files in the File table be identical to the sequence of the files within the cabinets.

<p>
For files that aren't compressed, the sequence numbers need not be unique. For instance, if all your files are uncompressed, and all reside on one disk, you could give all the files the same sequence number.

</dd>
</dl>
<h4>Remarks</h4>
<p>
The table is initially generated from the file list, but if cabinet compression is used, the table is regenerated from the output of the compression engine.</p>
<p>
For uncompressed files, the File column is ignored, and the FileName column is used for both the source and destination file name. You must set the Uncompressed bit of the Attributes column for any file that is not compressed in a cabinet.</p>
<p>
This table is referred to when the <a href="aref_3hym.htm">InstallFiles action</a>, <a href="aref_4fxq.htm">ProcessComponents action</a>, <a href="aref_2f8u.htm">FileCost action</a>, <a href="aref_9xny.htm">RemoveFiles action</a>, <a href="aref_2er2.htm">UpdateResources action</a>, <a href="aref_2tv2.htm">RegisterFonts action</a>, or <a href="aref_6wmm.htm">UnregisterFonts action</a> is executed.</p>
<p>
<b>Companion Files</b></p>
<p>
If the Version column contains the primary key of another record in the File table, a Companion File reference is produced with the referencing record termed the companion and the record being referred to termed the companion parent. In this situation, the installation state of the companion file is dependent not on its own file versioning information, but on that of its companion parent. For example, if a companion parent file is going to be installed over an existing, older version of the file, the companion file is also installed regardless of the version of an existing file (if any).</p>
<p>
Only certain combinations of values in the Version column and the Language column are valid. The following table summarizes the possibilities.</p>
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=16%>Version</th>
<th align=left width=27%>Language</th>
<th align=left width=57%>Comment</th>
</tr>
<tr valign=top>
<td width=16%>1.2.3.4</td>
<td width=27%>1033</td>
<td width=57%>Valid – version and language.</td>
</tr>
<tr valign=top>
<td width=16%>1.2.3.4</td>
<td width=27%>(Null)</td>
<td width=57%>Invalid – version but no language.</td>
</tr>
<tr valign=top>
<td width=16%>1.2.3.4</td>
<td width=27%>0</td>
<td width=57%>Valid – version and language are neutral.</td>
</tr>
<tr valign=top>
<td width=16%>Testdb</td>
<td width=27%>(Null) </td>
<td width=57%>Valid – companioned file but no language associated with it.</td>
</tr>
<tr valign=top>
<td width=16%>Testdb</td>
<td width=27%>1033    </td>
<td width=57%>Valid – companioned file and language.</td>
</tr>
<tr valign=top>
<td width=16%>(Null)</td>
<td width=27%>1033  </td>
<td width=57%>Valid – no version, but has a language associated with it (that is, typelib, helpfile).</td>
</tr>
<tr valign=top>
<td width=16%>Testdb</td>
<td width=27%>1033</td>
<td width=57%>Valid.</td>
</tr>
</table><br>
<p>&nbsp;</p></body>
</HTML>
