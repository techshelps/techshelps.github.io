<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MsiProvideComponent</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_msi_msiprovidecomponent"></a>MsiProvideComponent</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>MsiProvideComponent</b> function returns the full component path, performing any necessary installation. This function prompts for source if necessary and increments the usage count for the feature.</p>
<pre><code><b>UINT MsiProvideComponent(
</b>  <b>LPCTSTR</b> <i>szProduct</i>,    // product code in case install required
  <b>LPCTSTR</b> <i>szFeature</i><b>,</b>    // feature ID in case install required
  <b>LPCTSTR</b> <i>szComponent</i><b>,</b>  // component ID
  <b>DWORD</b><i> dwInstallMode,</i>  // the install mode
  <b>LPTSTR</b> <i>lpPathBuf</i><b>,</b>     // returned path to component key file
  <b>DWORD</b> <i>*pcchPathBuf</i>    // in/out buffer character count
<b>);</b>
<b> </b></code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>szProduct</i></dt>
<dd>
Specifies the product code for the product that contains the feature with the necessary component.</dd>
<dt>
<i>szFeature</i></dt>
<dd>
Specifies the feature ID of the feature with the necessary component.</dd>
<dt>
<i>szComponent</i></dt>
<dd>
Specifies the component code of the necessary component.</dd>
<dt>
<i>dwInstallMode</i></dt>
<dd>
Defines the installation mode. This parameter can be one of the following values.
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=47%>Value</th>
<th align=left width=53%>Meaning</th>
</tr>
<tr valign=top>
<td width=47%>INSTALLMODE_DEFAULT</td>
<td width=53%>Provide the component, performing any installation, if necessary.</td>
</tr>
<tr valign=top>
<td width=47%>INSTALLMODE_EXISTING</td>
<td width=53%>Provide the component only if the feature exists, else return ERROR_FILE_NOT_FOUND.</td>
</tr>
<tr valign=top>
<td width=47%>combination of the REINSTALLMODE flags</td>
<td width=53%>Call <a href="msi_4ag5.htm"><b>MsiReinstallFeature</b></a> to reinstall feature using this parameter for the <i>dwReinstallMode</i> parameter, and then provide the component.</td>
</tr>
</table><br>

</dd>
<dt>
<i>lpPathBuf</i></dt>
<dd>
Pointer to a variable that receives the path to the component. This parameter can be NULL.</dd>
<dt>
<i>pcchPathBuf</i></dt>
<dd>
Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPathBuf</i> parameter. 
<p>
If <i>lpPathBuf</i> is NULL, <i>pcchBuf</i> can be NULL.  

</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
ERROR_BAD_CONFIGURATION</dt>
<dd>
The configuration data is corrupt.</dd>
<dt>
ERROR_FILE_NOT_FOUND</dt>
<dd>
The feature is absent or broken. this error is returned for dwInstallMode = INSTALLMODE_EXISTING.</dd>
<dt>
ERROR_INSTALL_FAILURE</dt>
<dd>
The installation failed.</dd>
<dt>
ERROR_INSTALL_NOTUSED</dt>
<dd>
The component being requested is disabled on the computer.</dd>
<dt>
ERROR_INVALID_PARAMETER</dt>
<dd>
An invalid parameter was passed to the function.</dd>
<dt>
ERROR_INSTALL_SERVICE_FAILURE</dt>
<dd>
The installation service could not be accessed.</dd>
<dt>
ERROR_INSTALL_SUSPEND</dt>
<dd>
The installation was suspended and is incomplete.</dd>
<dt>
ERROR_INSTALL_USEREXIT</dt>
<dd>
The user canceled the installation.</dd>
<dt>
ERROR_SUCCESS</dt>
<dd>
The function completed successfully.</dd>
<dt>
ERROR_UNKNOWN_FEATURE</dt>
<dd>
The feature ID does not identify a known feature.</dd>
<dt>
ERROR_UNKNOWN_PRODUCT</dt>
<dd>
The product code does not identify a known product.
</dd>
</dl>
<h4>Remarks</h4>
<p>
Upon success of the <b>MsiProvideComponent</b> function, the <i>pcchPathBuf</i> parameter contains the length of the string in <i>lpPathBuf</i>.</p>
<p>
The <b>MsiProvideComponent</b> function combines the functionality of <a href="msi_3ckl.htm"><b>MsiUseFeature</b></a>, <a href="msi_8cit.htm"><b>MsiConfigureFeature</b></a>, and <a href="msi_3fxk.htm"><b>MsiGetComponentPath</b></a>. You can use the <b>MsiProvideComponent</b> function to simplify the calling sequence. However, because this function increments the usage count, use it with caution to prevent inaccurate usage counts. The <b>MsiProvideComponent</b> function also provides less flexibility than the series of individual calls. </p>
<p>
If the application is recovering from an unexpected situation, the application has probably already called <b>MsiUseFeature</b> and incremented the usage count. In this case, the application should call <b>MsiConfigureFeature</b> instead of <b>MsiProvideComponent</b> to avoid incrementing the count again.</p>
<p>
The INSTALLMODE_EXISTING option cannot be used in combination with the REINSTALLMODE flag</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 4.0 or later. Available as a redistributable for Windows NT 4.0.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later. Available as a redistributable for Windows 95.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in msi.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use msi.lib.<br>
<b>&nbsp;&nbsp;Unicode: </b>Implemented as Unicode and ANSI versions on Windows NT.</p>
<h4>See Also</h4>
<p>
<a href="msi_8vqd.htm#_msi_component_specific_functions">Component-Specific Functions</a> </p>
<p>&nbsp;</p></body>
</HTML>
