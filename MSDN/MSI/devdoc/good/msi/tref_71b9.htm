<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CustomAction Table</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_msi_customaction_table"></a>CustomAction Table</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The CustomAction table provides the means of integrating custom code and data into the installation process. The code that is executed can be a stream contained within the database, a recently installed file, or an existing executable.</p>
<p>
The CustomAction table has the following columns.</p>
<table cellspacing=4 cols=4>
<tr valign=top>
<th align=left width=39%>Column</th>
<th align=left width=31%>Type</th>
<th align=left width=12%>Key</th>
<th align=left width=18%>Nullable</th>
</tr>
<tr valign=top>
<td width=39%>Action</td>
<td width=31%><a href="tref_6b77.htm#_msi_identifier">Identifier</a></td>
<td width=12%>Y</td>
<td width=18%>N</td>
</tr>
<tr valign=top>
<td width=39%>Type</td>
<td width=31%><a href="tref_6b77.htm#_msi_integer">Integer</a></td>
<td width=12%></td>
<td width=18%>N</td>
</tr>
<tr valign=top>
<td width=39%>Source</td>
<td width=31%><a href="tref_6b77.htm#_msi_customsource">CustomSource</a></td>
<td width=12%></td>
<td width=18%>Y</td>
</tr>
<tr valign=top>
<td width=39%>Target</td>
<td width=31%><a href="tref_6b77.htm#_msi_text">Text</a></td>
<td width=12%></td>
<td width=18%>Y</td>
</tr>
</table><br>
<h4>Columns</h4>
<dl>
<dt>
Action</dt>
<dd>
Name of action. The action normally appears in a sequence table unless it is called by other custom actions. If the name matches any built-in action, the custom action is never called.
<p>
Primary table key.
</dd>
<dt>
Type</dt>
<dd>
The numeric custom action type.
<p>
One of icvEnum, as described in <a href="cact_1dbn.htm">Custom Action Types</a>.
</dd>
<dt>
Source</dt>
<dd>
External key into the table containing the source of the code.
<p>
External key, referencing column one of one of the following tables containing the source of the code:

<p class=indent1>
<a href="tref_6an9.htm">Directory table</a> for calling existing executables.</p>

<p class=indent1>
<a href="tref_4n6t.htm">File table</a> for calling executables and DLLs that have just been installed.</p>

<p class=indent1>
<a href="tref_04px.htm">Binary table</a> for calling executables, DLLs, and data stored in the database.</p>

<p class=indent1>
<a href="tref_21d1.htm">Property table</a> for calling executables whose paths are held by a property.</p>
</dd>
<dt>
Target</dt>
<dd>
Execution parameter. 
<p>
The value depends on the type of custom action being performed.

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Target contains this value</th>
<th align=left width=52%>When performing this action</th>
</tr>
<tr valign=top>
<td width=48%>Entry point (required)</td>
<td width=52%>Calling a DLL.</td>
</tr>
<tr valign=top>
<td width=48%>Executable name with arguments (required)</td>
<td width=52%>Calling an existing executable.</td>
</tr>
<tr valign=top>
<td width=48%>Command line arguments (optional)</td>
<td width=52%>Calling an executable just installed.</td>
</tr>
<tr valign=top>
<td width=48%>Target file name (required)</td>
<td width=52%>Creating a file from custom data.</td>
</tr>
<tr valign=top>
<td width=48%>Null</td>
<td width=52%>Executing script code.</td>
</tr>
</table><br>

</dd>
</dl>
<p>&nbsp;</p></body>
</HTML>
