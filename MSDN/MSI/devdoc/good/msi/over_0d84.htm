<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>System Management</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_msi_system_management"></a>System Management</h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
A number of system management benefits result from applications using the installer. </p>
<p>
An administrator can use the installer to tailor an installation to the user's specific needs. Only those features that are useful for a group of users need to be available in the user interface. These features can be upgraded by the administrator without the user's intervention or knowledge.</p>
<p>
The management API enables the installer to manage all file paths on behalf of a product or application. An application using the installer can ask the service for a path to a given component at runtime. This frees applications from dependency on static file paths which often change between machines and can sometimes point to missing files.</p>
<p>
An application using the installer can populate its user interface with features that are run locally or from the source with little or no visible difference to the user. An application runs identically regardless of the actual installation state because the installer resolves component file locations by querying the installation database. It can in some cases be more efficient to run a feature from the source instead of locally. </p>
<p>
The installer can remove unused features from the local hard drive, as well as install features on demand, because the installer increments a usage count when applications request features. Applications therefore can keep track of usage statistics and request that the installer remove components that are not being used. Because the installer database is system-wide, the installer can keep usage counts of a feature for all client applications.</p>
<p>&nbsp;</p></body>
</HTML>
