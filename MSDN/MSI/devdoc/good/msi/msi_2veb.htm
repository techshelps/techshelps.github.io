<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MsiEnumComponentQualifiers</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_msi_msienumcomponentqualifiers"></a>MsiEnumComponentQualifiers</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>MsiEnumComponentQualifiers</b> function enumerates the advertised  qualifiers for the given component. This function retrieves one qualifier each time it is called.</p>
<pre><code><b>UINT MsiEnumComponentQualifiers(
</b>  <b>LPTSTR</b> <i>szComponent</i><b>,</b>           // component ID 
  <b>DWORD</b> <i>iIndex</i><b>,</b>                 // 0-based index into component qualifiers
  <b>LPTSTR</b> <i>lpQualifierBuf</i><b>,</b>        // buffer to return qualifier
  <b>DWORD</b> <i>*pcchQualifierBuf</i><b>,</b>      // in/out qualifier buffer character count
  <b>LPTSTR</b> <i>lpApplicationDataBuf</i><b>,</b>  // buffer to return application-registered data
  <b>DWORD</b> <i>*pcchApplicationDataBuf</i> // in/out <i>lpApplicationDataBuf</i> character count
<b>);</b>
<b> </b></code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>szComponent</i></dt>
<dd>
Specifies component whose qualifiers are to be enumerated.</dd>
<dt>
<i>iIndex</i></dt>
<dd>
Specifies the index of the qualifier to retrieve. This parameter should be zero for the first call to the <b>MsiEnumComponentQualifiers</b> function and then incremented for subsequent calls. Because qualifiers are not ordered, any new qualifier has an arbitrary index. This means that the function can return qualifiers in any order. </dd>
<dt>
<i>lpQualifierBuf</i></dt>
<dd>
Pointer to a buffer that receives the qualifier code.</dd>
<dt>
<i>pcchQualifierBuf</i></dt>
<dd>
Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpQualifierBuf</i> parameter. On input this size should include the terminating NULL character. On return, the value does not include the NULL character.</dd>
<dt>
<i>lpApplicationDataBuf</i></dt>
<dd>
Pointer to a buffer that receives the application registered data for the qualifier. This parameter can be NULL.</dd>
<dt>
<i>pcchApplicationDataBuf</i></dt>
<dd>
Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpApplicationDataBuf</i> parameter. On input this size should include the terminating NULL character. On return, the value does not include the NULL character. This parameter can be NULL only if the <i>lpApplicationDataBuf</i> parameter is NULL.
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
ERROR_BAD_CONFIGURATION</dt>
<dd>
The configuration data is corrupt.</dd>
<dt>
ERROR_INVALID_PARAMETER</dt>
<dd>
An invalid parameter was passed to the function.</dd>
<dt>
ERROR_MORE_DATA</dt>
<dd>
A buffer is to small to hold the requested data.</dd>
<dt>
ERROR_NO_MORE_ITEMS</dt>
<dd>
There are no qualifiers to return.</dd>
<dt>
ERROR_SUCCESS</dt>
<dd>
A value was enumerated.</dd>
<dt>
ERROR_UNKNOWN_COMPONENT</dt>
<dd>
The specified component is unknown.
</dd>
</dl>
<h4>Remarks</h4>
<p>
To enumerate qualifiers, an application should initially call the <b>MsiEnumComponentQualifiers</b> function with the <i>iIndex</i> parameter set to zero. The application should then increment the <i>iIndex</i> parameter and call <b>MsiEnumComponentQualifiers</b> until there are no more products (that is, until the function returns ERROR_NO_MORE_ITEMS).</p>
<p>
When <b>MsiEnumComponentQualifiers</b> returns, the <i>pcchQualifierBuf</i> parameter contains the length of the qualifier string stored in the buffer. The count returned does not include the terminating null character. If the buffer is not big enough, <b>MsiEnumComponentQualifiers</b> returns ERROR_MORE_DATA, and this parameter contains the size of the string, in characters, without counting the NULL character. The same mechanism applies to <i>pcchDescriptionBuf.</i></p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 4.0 or later. Available as a redistributable for Windows NT 4.0.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later. Available as a redistributable for Windows 95.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in msi.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use msi.lib.<br>
<b>&nbsp;&nbsp;Unicode: </b>Implemented as Unicode and ANSI versions on Windows NT.</p>
<h4>See Also</h4>
<p>
<a href="msi_8vqd.htm#_msi_system_status_functions">System Status Functions</a> </p>
<p>&nbsp;</p></body>
</HTML>
