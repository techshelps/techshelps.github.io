<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Technical Notes on the Microsoft Exchange client and MAPI</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" size="2">
<h2>Technical Notes on the Microsoft Exchange client and MAPI </H2><P>The Windows&nbsp;95 messaging subsystem architecture provides power and flexibility. The core of the subsystem is MAPI, an industry standard that enables applications in Windows&nbsp;95 to interact with many different messaging systems using a single interface. The MAPI architecture defines messaging clients<I>, </I>such as Microsoft Exchange, that interact with various messaging service providers, such as Microsoft Mail and Microsoft Fax, through MAPI, as shown in the following diagram: </P>
<P><img src="RK26_01.gif"></P>
<P>MAPI divides messaging applications into four components:</P>
<UL><LI>MAPI subsystem</LI><LI>Messaging clients</LI><LI>Messaging service providers</LI><LI>Messaging systems</LI></UL><P><B>MAPI subsystem.</B></P>
<P>Messaging client applications communicate with service providers through the MAPI subsystem. The client interface interacts with the MAPI subysystem to access MAPI-compliant service providers. </P>
<P>The client interface is one of two major functional interfaces in MAPI; the other is the service provider interface. Messaging applications that require messaging services call functions in the client interface. For example, client applications can call MAPI functions to send, receive, save, and read messages. These functions are sent to the MAPI subsystem, which calls corresponding functions within the provider interface. Service providers then implement service-provider functions to perform the indicated actions for the client. The message spooler queues outgoing messages and routes incoming messages to the proper message store folder.</P>
<P><B>Messaging clients.</B></P>
<P>Messaging client applications communicate with MAPI service providers through MAPI interfaces. Messaging client applications can be divided into three general categories: </P>
<UL><LI>Messaging-aware applications include messaging functions as an added but not required feature, supporting the application's main purpose. An example of a messaging-aware application is Microsoft Word, which can add messaging functions by adding a Send Message command to its File menu. </LI><LI>Messaging-enabled applications require some form of messaging functionality in order to meet the application's main purpose. Examples of messaging-enabled applications are the Microsoft Exchange client, Microsoft Mail, and cc:Mail&trade;.</LI><LI>Messaging-based workgroup applications go beyond basic electronic mail. They require full access to all the messaging services, including the message store providers, address book providers, and transport providers. Examples of this type of application are Microsoft Schedule+ and the public folders on a Microsoft Exchange Server. </LI></UL><P>For information about creating a messaging client, see the <I>Win32 Software Development Kit for Windows 95 and Windows NT </I>and the <I>MAPI 1.0 Developer's Guide</I>.</P>
<P><B>Messaging service providers.</B></P>
<P>A messaging service provider can include multiple message stores, address books, and messaging transport providers. </P>
<UL><LI>Message store providers supply message storage, organization, and retrieval facilities for a messaging system. </LI><LI>Address book providers supply message addressing and distribution list facilities to the messaging client. </LI><LI>Messaging transport providers move messages between messaging clients or messaging stores. </LI></UL><P>MAPI selects between message store and messaging transport providers, as necessary, and merges the address books presented to it, so the client application sees one combined address book interface. Other vendors can add or replace messaging service providers to enable the Microsoft Exchange client to work with their mail systems.</P></FONT></BODY></HTML>
