<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Overview of Push Installations</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" size="2">
<h2>Overview of Push Installations</H2><P>A push installation uses Windows&nbsp;95 Setup with a setup script, plus login scripts and user accounts on a NetWare or Windows NT network, to create an automated, mandatory installation scheme for installing Windows&nbsp;95 on multiple computers. This allows you to install Windows&nbsp;95 remotely, without actually going to the computer being upgraded. </P>
<P>You will probably want to create an automated push installation scheme if you are responsible for installing Windows&nbsp;95 on more than 50 computers.</P>
<P>After you use Server-based Setup to set up the source files on one or more servers and create setup scripts, you can perform push installations in these ways:</P>
<UL><LI>Use a login script that includes a statement to run Setup with a setup script, automatically installing Windows&nbsp;95 when each user logs on. Details are provided in the following sections. </LI><LI>Insert an object in an electronic mail message that will start Windows&nbsp;95 Setup with a setup script when the user clicks the object.</LI><LI>Use Microsoft Systems Management Server to run Windows&nbsp;95 Setup with a setup script as a mandatory job, as described in Appendix E, "Microsoft Systems Management Server."</LI><LI>Use network management software from other vendors to install Windows&nbsp;95 based on the setup scripts you create. Refer to the documentation for your network management software for information about performing remote installation of software.</LI></UL><P><B>Push installation example for migration of shared Windows 3.x.</B></P>
<P>Because Windows&nbsp;95 installation and management methods differ significantly from Windows 3.x, it might be helpful to look at an example of how one type of corporate installation can make the move to Windows&nbsp;95. The following example focuses on migrating shared installations to Windows&nbsp;95.</P>
<P>In the corporation in this example, Windows&nbsp;3.x was installed in shared directories on the network (using <B>setup /a</B>). Workstations each contain a hard disk, where the swap file, TEMP directory, and hardware-specific SYSTEM.INI file are stored. Windows&nbsp;3.x components were installed in each user's home directory. All workstations run NetWare real-mode networking with ODI drivers. When users log on to the network, the login script runs WINSTART.BAT, which copies the workstation's SYSTEM.INI to the user's home directory and starts Windows. All applications are also stored on and run from servers.</P>
<P>To migrate to Windows&nbsp;95 using push installations that maintain similar functionality for users on shared installations, the administrator does the following:</P>
<OL><LI>Install Windows&nbsp;95 source files and create machine directories for each computer, as described in Chapter 4, "Server-Based Setup for Windows 95." This step includes using INF Installer to prepare any supporting software that uses Windows&nbsp;95 INF files, and manually copying any additional networking or applications software to the shared Windows&nbsp;95 directory on the network.</LI><LI>Create the setup script that specifies any custom settings, as described in Appendix D, "MSBATCH.INF Parameters." This should include installing all protected-mode networking components, so that both the administrator and user can take advantage of Windows&nbsp;95 protected-mode networking features.</LI><LI>Create system policies, including setting policies that enable user profiles.
<P>Alternately, you can enable user profiles using setup script statements, as defined in Appendix D, "MSBATCH.INF Parameters." This is the only method for enabling group policies.</P></LI><LI>At each client computer, run a login script with statements to do the following:

<UL><LI>Copy the contents of the user's home directory to C:\WINDOWS.
<P>This should include copying the Windows&nbsp;3.x .GRP, .INI, and REG.DAT files that define the user's personal preferences and working environment. In this case, make sure that the Windows&nbsp;3.x REG.DAT file includes registration settings for all the shared applications that users run at your site.</P>

<P><B>Note</B>   This process is related to the particular configuration used in the example; this is not a required process for creating shared installations or using push installation methods to install Windows&nbsp;95.</P></LI><LI>Run Windows&nbsp;95 Setup with a custom setup script.
<P>You can set <B>installdir=c:\windows</B> to define the machine directory in the setup script.</P></LI></UL></LI></OL><P>In this example, Windows&nbsp;95 Setup installs the shared Windows&nbsp;95 files on the local hard disk and in the machine directory for the client computer. The settings in the Windows&nbsp;3.x .GRP, .INI. and REG.DAT files are migrated automatically to the Registry. Notice that in this case, where user profiles are enabled, the current version of USER.DAT file is also stored automatically in the user's home directory when the user logs off. This copy of USER.DAT is the user profile that is then copied to the current machine directory wherever the user logs on.</P>
<P>To install Windows&nbsp;95 on the local hard disk of client computers, the steps for the administrator are similar to those in the preceding example. However, no machine directories are created for the computers. The following section discusses specific issues related to login scripts for local installations of Windows&nbsp;95.</P></FONT></BODY></HTML>
