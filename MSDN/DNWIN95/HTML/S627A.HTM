<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Safe Detection in Windows 95 Setup</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" size="2">
<h3>Safe Detection in Windows 95 Setup</H3><P>Devices and buses are grouped as classes in Windows&nbsp;95 for purposes of detecting and installing device drivers and managing system resources. Windows&nbsp;95 differentiates between devices and drivers that comply with the Plug and Play specification and earlier versions of devices and drivers (which are referred to in this book as legacy devices). Because of this differentiation, Windows&nbsp;95 Setup detects hardware components and devices in two ways: </P>
<UL><LI>Using an interactive query detection process for legacy devices and peripherals</LI><LI>Using Plug and Play detection to identify Plug and Play-compliant devices and peripherals </LI></UL><P>After Setup detects a device, it adds configuration information to the Registry and installs the appropriate device drivers. The same procedures used during Setup for detecting Plug and Play or legacy hardware devices are also used to detect or configure new devices after Windows&nbsp;95 is installed.</P>
<P>Windows&nbsp;95 supports detection for base computer components such as communications ports and processor type, and provides more robust detection of computer devices, such as display adapters, pointing devices, hard-disk controllers, floppy-disk controllers, and network adapters.</P>
<P>Windows&nbsp;95 Setup also tries to detect any hardware resource conflicts early in the installation process. This helps to avoid the problems that occur when hardware resources such as IRQs, I/O addresses, or DMAs are used by more than one device.</P>
<P>To avoid computer failure during the detection process, Windows&nbsp;95 uses a safe detection method to search for hints from configuration files, read-only memory (ROM) strings, or drivers loaded in memory to determine whether the computer contains each class of hardware. If no such hints are found, the detection process skips detecting the entire class. If hints are found, then the detection process seeks information from specific I/O ports.</P>
<P>Windows&nbsp;95 automatically reads the command lines in CONFIG.SYS to find hints for device class detection. Then Windows&nbsp;95 loads detection modules based on information in the MSDET.INF file, which lists the hardware to be detected and points to specific INF files for each device class (for example, SCSI.INF for SCSI host adapters). Device information from the INF files is written to the Registry. For more information about the format of these files, see Appendix C, "Windows 95 INF Files."</P>
<P>Windows&nbsp;95 can also read a particular CONFIG.SYS <B>device=</B> line for resource information to be avoided (that is, protected) during the detection process. This is useful if Windows&nbsp;95 Setup cannot detect or support a certain device when it's known that the detection process can cause such a device to fail. For example, the detection process could render a fax modem inoperative because scanning the I/O port might confuse the device driver. Windows&nbsp;95 can read the <B>device=</B> line in CONFIG.SYS for this model and protect the associated I/O region from other detection modules.</P>
<P>Windows&nbsp;95 Setup asks you to confirm which classes should be skipped in the detection process. If you know that the computer has a device in one of those classes, Setup can be forced to detect that device class.</P>
<P>Safe detection exists for four classes of devices:</P>
<UL><LI>Network adapters</LI><LI>SCSI controllers</LI><LI>Proprietary adapters for CD-ROM</LI><LI>Sound cards</LI></UL><H4><A NAME="sec0"></A>Safe Detection for Network Adapters</H4><P>Windows&nbsp;95 Setup performs the following kinds of steps for safe detection of network adapters:</P>
<UL><LI>Find LSL.COM in memory and, if present, inquire for network adapter settings. </LI><LI>Find IPX.COM in memory and, if present, inquire for network adapter settings. </LI><LI>Search the Windows,&nbsp;Windows for Workgroups, and LAN Manager directories for PROTOCOL.INI; if present, read the file to find network adapter settings. </LI></UL><H4><A NAME="sec1"></A>Safe Detection for SCSI Controllers</H4><P>When trying to detect SCSI adapters, Windows&nbsp;95 Setup checks for device drivers in CONFIG.SYS, and then scans ROM strings from the SCSI adapter for manufacturer names. If known drivers or known strings are found, then the corresponding detection procedure for that class is used; otherwise, the entire class is skipped. A list of the known strings and drivers that Windows&nbsp;95 Setup checks is stored internally in a detection DLL. (For more information about the SCSI devices and drivers that Windows&nbsp;95 supports, see the Manufacturers and Models lists in the Add New Hardware option in Control Panel.)</P>
<P></P>
<P>Different SCSI devices require different methods for safe detection. For example, a SCSI card typically is used with a combination of hard disks, CD-ROM drives, tape backup drives, scanners, and similar devices. For everything to work (except the hard disk), some sort of device driver must be loaded in CONFIG.SYS. </P>
<P>For hard disk drives, however, the driver usually is not loaded in CONFIG.SYS, but INT&nbsp;13 ROM are enabled. Therefore, safe detection for SCSI class devices looks for a ROM string with a manufacturer's name.</P>
<H4><A NAME="sec2"></A>Safe Detection for Proprietary Adapters for CD-ROM</H4><P>Windows&nbsp;95 supports Mitsumi, SONY, and Panasonic proprietary adapters for CD-ROM. Because drivers for these devices are loaded in CONFIG.SYS, safe detection first scans CONFIG.SYS for the drivers that are present. If a <B>device=</B> line for such a driver is found, the corresponding detection module is loaded for that type of device.</P>
<H4><A NAME="sec3"></A>Safe Detection for Sound Cards</H4><P>Safe detection scans CONFIG.SYS and reads SYSTEM.INI for hints about sound cards. If known drivers are not found, the entire class is skipped.</P>
<P>If Windows&nbsp;95 doesn't have detection code for certain hardware, the equipment manufacturer can force a device to be detected by adding information about it in the MSDET.INF file. Windows&nbsp;95 detection behaves as if it has detected the device and installs the device according to the INF information provided by the equipment manufacturer.</P>
<P>Windows&nbsp;95 Setup does not detect sound cards by scanning I/O ports; instead, it checks only CONFIG.SYS and SYSTEM.INI and performs detection prescribed in MSDET.INF. Detection of sound cards by scanning I/O ports can cause the computer to stall. This is because detection calls a driver specific to a device class to send a signal to an I/O port. The driver expects a predetermined response, such as a signature from the adapter's ROM. If the wrong driver sends a signal to an I/O port address occupied by a different device class, the computer can stall. </P></FONT></BODY></HTML>
