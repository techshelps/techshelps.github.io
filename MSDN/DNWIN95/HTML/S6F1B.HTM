<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Customizing Detection for NetWare Networks</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" size="2">
<h2>Customizing Detection for NetWare Networks</H2><P>This section describes the format of NETDET.INI, which is used to detect NetWare components and TSRs during Windows&nbsp;95 Setup. You can use this information to add custom entries for detecting components on NetWare networks and defining actions to be taken during Setup based on detection results.</P>
<P><B>Note</B>   If you do not need to modify the default detection behavior for setting up Windows&nbsp;95 on NetWare networks, you can skip this section.</P>
<P>The NETDET.INI and related NETOS.DLL files are stored in the PRECOPY2.CAB file on the Windows&nbsp;95 floppy disks or compact disc. The version used by Windows&nbsp;95 Setup is stored in the Windows directory on the local computer. If you modify this file, you can place the revised version of NETDET.INI in the Windows directory on the server that contains the Windows&nbsp;95 source files.</P>
<P>Each component section in NETDET.INI consists of one or more <I>detection</I> entries, and one or more <I>event</I> entries. A detection entry has the following format:</P>
<P><I>detectionN</I>=<I>method1</I>[,<I>method2</I>...]</P>
<P>Alternate <I>detection</I> entries can be used to define different actions to be taken, depending on how a component is detected. For example, a TSR detected in memory but not in a batch file might require different actions from the actions required when an entry for the TSR is found in AUTOEXEC.BAT. For example:</P>
<P><BR></P>
<pre><code>detection0=mcb
detection1=autoexec.bat<BR>full_install0=migrate
full_install1=prevent</code></pre>
<P>Each <I>method#</I> parameter in the <I>detection</I> statement defines a detection method, as listed in the following table. Setup assumes that the component has been detected if one method detects it. </P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="108pt" VALIGN="TOP"><COL WIDTH="239pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Detection method</B></P></TD><TD VALIGN="TOP"><P><B>Meaning</B></P></TD></TR><TR><TD VALIGN="TOP"><P>assumed</P></TD><TD COLSPAN="2" VALIGN="TOP"><P>Always detected; used to force an action unconditionally</P></TD></TR><TR><TD VALIGN="TOP"><P>autoexec.bat</P></TD><TD COLSPAN="2" VALIGN="TOP"><P>Detected in an uncommented line in AUTOEXEC.BAT</P></TD></TR><TR><TD VALIGN="TOP"><P>config.sys</P></TD><TD COLSPAN="2" VALIGN="TOP"><P>Detected in an uncommented line in CONFIG.SYS</P></TD></TR><TR><TD VALIGN="TOP"><P>custom_dll</P></TD><TD COLSPAN="2" VALIGN="TOP"><P>Detected by calling external DLL detection code</P></TD></TR><TR><TD VALIGN="TOP"><P>mcb</P></TD><TD COLSPAN="2" VALIGN="TOP"><P>Detected by checking the list of TSRs maintained by MS-DOS in the memory control blocks (MCB)</P></TD></TR><TR><TD VALIGN="TOP"><P>mcb_nobat</P></TD><TD COLSPAN="2" VALIGN="TOP"><P>Detected in the MCB chain but not in AUTOEXEC.BAT</P></TD></TR><TR><TD VALIGN="TOP"><P>system.ini</P></TD><TD COLSPAN="2" VALIGN="TOP"><P>Detected in an uncommented line in SYSTEM.INI</P></TD></TR></TBODY></TABLE>
<P><BR></P><P>The special detection method <B>custom_dll</B> requires two additional entries: <B>detection_dll</B>, which contains the filename of the DLL to be loaded, and <B>detection_call</B>, which contains the name of the entry point consistent with the following <B>typedef</B>:</P>
<P><BR></P>
<pre><code>typedef BOOL (WINAPI *LPDCALL)(LPSTR)</code></pre>
<P>Adding custom entries based on this detection method requires that you have sufficient programmatic understanding of the calls made in the relevant DLLs. For an example of required entries for <B>custom_dll</B>, see the example entry for VLM later in this section.</P>
<P>The NETDET.INI file includes one or more <I>event</I> entries grouped by numerical suffixes that match the suffixes in <I>detection</I> entries (that is, <I>N</I> must be 0 or 1). Each <I>event</I> entry contains a list of actions to be performed if the associated <I>detection</I> action was successful. The following shows the form of <I>event</I> entries:</P>
<P><I>eventN</I>=<I>action1</I>[(<I>parameter</I>)][,<I>action2</I>[(<I>parameter</I>)]...] </P>
<P>The <I>event</I> name is the name of the Setup code for handling installation of components related to the detected TSR or NetWare component. The following list shows the defined events. </P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="108pt" VALIGN="TOP"><COL WIDTH="239pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Event</B></P></TD><TD VALIGN="TOP"><P><B>Meaning</B></P></TD></TR><TR><TD VALIGN="TOP"><P>protstack_install<I>N</I></P></TD><TD COLSPAN="2" VALIGN="TOP"><P>The protected-mode protocol will be installed</P></TD></TR><TR><TD VALIGN="TOP"><P>nwredir_install<I>N</I></P></TD><TD COLSPAN="2" VALIGN="TOP"><P>The protected-mode network client will be installed</P></TD></TR><TR><TD VALIGN="TOP"><P>full_install<I>N</I></P></TD><TD COLSPAN="2" VALIGN="TOP"><P>The protected-mode protocol and network client will be installed</P></TD></TR></TBODY></TABLE>
<P><BR></P><P>The following table lists the defined action codes related to events in NETDET.INI.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="139pt" VALIGN="TOP"><COL WIDTH="208pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Action code</B></P></TD><TD VALIGN="TOP"><P><B>Meaning</B></P></TD></TR><TR><TD VALIGN="TOP"><P>none</P></TD><TD VALIGN="TOP"><P>Do not do anything (NOP)</P></TD></TR><TR><TD VALIGN="TOP"><P>prevent</P></TD><TD VALIGN="TOP"><P>Recommend against using during recommendation phase</P></TD></TR><TR><TD VALIGN="TOP"><P>remove</P></TD><TD VALIGN="TOP"><P>Comment out using REM in AUTOEXEC.BAT or a batch file called from AUTOEXEC.BAT</P></TD></TR><TR><TD VALIGN="TOP"><P>unremove</P></TD><TD VALIGN="TOP"><P>Remove REM comment from AUTOEXEC.BAT or a batch file called from AUTOEXEC.BAT</P></TD></TR><TR><TD VALIGN="TOP"><P>migrate</P></TD><TD VALIGN="TOP"><P>Comment out using REM in AUTOEXEC.BAT, and add to WINSTART.BAT</P></TD></TR><TR><TD VALIGN="TOP"><P>unmigrate</P></TD><TD VALIGN="TOP"><P>Remove REM comment in AUTOEXEC.BAT, and remove from WINSTART.BAT</P></TD></TR><TR><TD VALIGN="TOP"><P>install_devnode(<I>devnode</I>)</P></TD><TD VALIGN="TOP"><P>Cause specified device node to be installed</P></TD></TR><TR><TD VALIGN="TOP"><P>uninstall_devnode(<I>devnode</I>)</P></TD><TD VALIGN="TOP"><P>Cause specified device node to be removed </P></TD></TR><TR><TD VALIGN="TOP"><P>gen_install(<I>section</I>)</P></TD><TD VALIGN="TOP"><P>Cause action in an <I>install</I> section to run (see the example for Source Routing for NetWare later in this section)</P></TD></TR></TBODY></TABLE>
<P><BR></P><P>Notice that the event named <B>prevent</B> is a special case that is used during the recommendation phase when Setup is determining which new Windows&nbsp;95 components can be installed without interfering with TSR dependencies defined in NETDET.INI. If a component is detected by the defined method and the <B>prevent</B> action is associated with the related event, then Setup will recommend against the usual Setup action for the event.</P>
<P>The following shows some examples of entries in NETDET.INI:</P>
<P><BR></P>
<pre><code>;;;;;; VLM 4.x ;;;;;;;;
; prevents installation of Client for NetWare Networks
; if Novell NDS is used
[VLM]
detection0=custom_dll
detection_dll=NETOS.DLL
detection_call=NW_IsNDSinUsefull_install0=prevent 
<BR>;;;;;; Btrieve ;;;;;;;;;;
[Brequest.exe]
detection0=mcb; installs all protected-mode components
full_install0=migrate; if Btrieve is present
<BR>;;;;;; NOVELL NETBIOS ;;;;;;;;;;;;;;;;;;
; installs NETBIOS over IPX if Novell NETBIOS is present
[NETBIOS]
detection0=mcb
full_install0=remove,install_devnode(NWNBLINK)
<BR>;;;;;;;;;; SOURCE ROUTING FOR NETWARE ;;;;;;;;;
; adds cache size for Source Routing
[ROUTE]
detection0=mcb
full_install0=remove,gen_install(NWSRCR)
<BR>[NWSRCR]
AddReg=NWSRCR.reg
<BR>[NWSRCR.reg]
HKLM,System\CurrentControlSet\Services\VxD\NWLINK,cachesize,,"16"
HKLM,System\CurrentControlSet\Services\VxD\NWLINK\Ndi\params<BR>   \cachesize,"",,"16"</code></pre></FONT></BODY></HTML>
