<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>EMM386 Command-Line Switches</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" size="2">
<h3>EMM386 Command-Line Switches</H3><P>This section provides correct syntax and other details for using EMM386 command-line switches.</P>
<H4><A NAME="sec0"></A>EMM386</H4><P>Enables or disables EMM386 expanded-memory support. </P>
<P>The EMM386 device driver, EMM386.EXE, provides expanded-memory support and also provides access to the upper memory area. For information about EMM386.EXE, see its entry later in this appendix. </P>
<P>Syntax</P>
<P><B>emm386</B> [<B>on</B>|<B>off</B>|<B>auto</B>] [<B>w=on</B>|<B>w=off</B>] </P>
<P>To display the current status of EMM386 expanded-memory support, type <B>emm386</B> at the command prompt: </P>
<P>Parameters</P>
<P><B><B>on</B>|<B>off</B>|<B>auto</B></B></P>
<P>Activates the EMM386 device driver (if set to <B>on</B>), or suspends the EMM386 device driver (if set to <B>off</B>), or places the EMM386 device driver in auto mode (if set to <B>auto</B>). Auto mode enables expanded-memory support only when a program calls for it. The default value is <B>on</B>. </P>
<P><B><B>w=on</B>|<B>w=off</B></B></P>
<P>Enables (if set to <B>w=on</B>) or disables (if set to <B>w=off</B>) Weitek coprocessor support. The default value is <B>w=off</B>. </P>
<P>Notes on EMM386</P>
<P><B>Installing the EMM386.EXE device driver.</B></P>
<P>To use the <B>emm386</B> command, you must also install the EMM386.EXE device driver by using the <B>device</B> command in CONFIG.SYS.</P>
<P><B>Reactivating EMM386 expanded-memory support.</B></P>
<P>If EMM386 was loaded when the VM was started but is not currently in use, the <B>on</B> parameter reactivates expanded-memory support. </P>
<P><B>Suspending EMM386 expanded-memory support.</B></P>
<P>If EMM386 expanded-memory support is currently active, handle 0 is the only handle allocated, and EMM386 is not providing access to the upper memory area. The <B>off</B> parameter suspends EMM386 expanded-memory support. When EMM386 expanded-memory support is off, the EMM386.EXE device-driver header is changed so that programs cannot use expanded memory. This enables you to run programs that do not comply with the Virtual Control Program Interface (VCPI). </P>
<H4><A NAME="sec1"></A>EMM386.EXE</H4><P><B>Caution</B>   Use EMM386.EXE parameters carefully. You can make the computer inoperable if you use them incorrectly. </P>
<P>Provides access to the upper memory area and uses extended memory to simulate expanded memory. This is for MS-DOS – based applications that need expanded memory. The EMM386.EXE device driver must be loaded by a <B>device</B> command in CONFIG.SYS. EMM386 uses extended memory to simulate expanded memory for programs that can use expanded memory. EMM386 also makes it possible to load programs and device drivers into upper memory blocks (UMBs). </P>
<P><b>Note</b></P>
<P>The EMM386.EXE device driver is different from the EMM386 command used to enable expanded-memory support.</P>
<P>Syntax</P>
<P><B>device=</B>[<I>drive</I><B>:</B>][<I>path</I>]<B>emm386.exe</B> [<B>on</B>|<B>off</B>|<B>auto</B>] [<I>memory</I>] [<B>min=</B><I>size</I>]<BR>   [<B>m</B><I>x</I>|<B>frame=</B><I>address</I>|<B>/p</B><I>mmmm</I>] [<B>p</B><I>n</I><B>=</B><I>address</I>] [<B>x=</B><I>mmmm</I>-<I>nnnn</I>] <BR>   [<B>i=</B><I>mmmm</I>-<I>nnnn</I>] [<B>b=</B><I>address</I>] [<B>L=</B><I>minXMS</I>] [<B>a=</B><I>altregs</I>] [<B>h=</B><I>handles</I>] <BR>   [<B>d=</B><I>nnn</I>] [<B>ram=</B><I>mmmm</I>-<I>nnnn</I>] [<B>noems</B>] [<B>novcpi</B>] [<B>highscan</B>] [<B>verbose</B>]<BR>   [<B>win=</B><I>mmmm</I>-<I>nnnn</I>] [<B>nohi</B>] [<B>rom=</B><I>mmmm</I>-<I>nnnn</I>] [<B>nomovexbda</B>] [<B>altboot</B>] </P>
<P>Parameters</P>
<P><B>[<I>drive</I><B>:</B><I>path</I>]</B></P>
<P>Specifies the location of the EMM386.EXE file. </P>
<P><B><B>on</B>|<B>off</B>|<B>auto</B></B></P>
<P>Activates the EMM386 device driver (if set to <B>on</B>), or suspends the EMM386 device driver (if set to <B>off</B>), or places the EMM386 device driver in auto mode (if set to <B>auto</B>). Auto mode enables expanded-memory support and upper memory block support only when a program calls for it. The default value is <B>on</B>. Use the <B>emm386</B> command to change this value after EMM386 has started. </P>
<P><B><I>memory</I></B></P>
<P>Specifies the maximum amount of extended memory (in kilobytes) that you want EMM386 to provide as expanded/Virtual Control Program Interface (EMS/VCPI) memory. This amount is in addition to the memory used for UMBs and EMM386 itself. Values for <I>memory</I> are in the range 64 through the lesser of either 32768 or the amount of extended memory available when EMM386 is loaded. The default value is the amount of free extended memory. If you specify the <B>noems</B> switch, the default value is 0. EMM386 rounds the value down to the nearest multiple of 16. </P>
<P>Switches</P>
<P><B><B>min=</B><I>size</I></B></P>
<P>Specifies the minimum amount of EMS/VCPI memory (in kilobytes) that EMM386 will provide, if that amount of memory is available. EMM386 reserves this amount of extended memory for use as EMS/VCPI memory when EMM386 is loaded by <B>device=emm386.exe</B> in CONFIG.SYS. EMM386 may be able to provide additional EMS/VCPI memory (up to the amount specified by the <I>memory</I> parameter) if sufficient XMS memory is available when a program requests EMS/VCPI memory. Values are in the range 0 through the value specified by the <I>memory</I> parameter. The default value is 256. If you specify the <B>noems</B> switch, the default value is 0. If the value of <B>min</B> is greater than the value of <I>memory</I>, EMM386 uses the value specified by <B>min</B>. </P>
<P><B><B>m</B><I>x</I></B></P>
<P>Specifies the address of the page frame. Valid values for <I>x</I> are in the range 1 through 14. The following list shows each value and its associated base address in hexadecimal format: </P>

<TABLE COLS="4" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="74pt" VALIGN="TOP"><COL WIDTH="85pt" VALIGN="TOP"><COL WIDTH="87pt" VALIGN="TOP"><COL WIDTH="86pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>1 =&gt; C000h</P></TD><TD VALIGN="TOP"><P>5 =&gt; D000h</P></TD><TD VALIGN="TOP"><P>9 =&gt; E000h</P></TD><TD VALIGN="TOP"><P>12 =&gt; 8800h</P></TD></TR><TR><TD VALIGN="TOP"><P>2 =&gt; C400h</P></TD><TD VALIGN="TOP"><P>6 =&gt; D400h</P></TD><TD VALIGN="TOP"><P>10 =&gt; 8000h</P></TD><TD VALIGN="TOP"><P>13 =&gt; 8C00h</P></TD></TR><TR><TD VALIGN="TOP"><P>3 =&gt; C800h</P></TD><TD VALIGN="TOP"><P>7 =&gt; D800h</P></TD><TD VALIGN="TOP"><P>11 =&gt; 8400h</P></TD><TD VALIGN="TOP"><P>14 =&gt; 9000h</P></TD></TR><TR><TD VALIGN="TOP"><P>4 =&gt; CC00h</P></TD><TD VALIGN="TOP"><P>8 =&gt; DC00h</P></TD><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P></P></TD></TR></TBODY></TABLE>
<P><BR></P><P><B><B>frame=</B><I>address</I></B></P>
<P>Specifies the page-frame segment base directly. To specify a specific segment-base address for the page frame, use the <B>frame</B> switch and specify the address you want. Valid values for <I>address</I> are in the ranges 8000h through 9000h and C000h through E000h, in increments of 400h. To provide expanded memory and disable the page frame, you can specify <B>frame=none</B>; however, this may cause some programs that require expanded memory to work improperly. </P>
<P><B><B>/p</B><I>mmmm</I></B></P>
<P>Specifies the address of the page frame. Valid values for <I>mmmm</I> are in the ranges 8000h through 9000h and C000h through E000h, in increments of 400h. </P>
<P><B><B>p</B><I>n</I><B>=</B><I>address</I></B></P>
<P>Specifies the segment address of a specific page, where <I>n</I> is the number of the page you are specifying and <I>address</I> is the segment address you want. Valid values for <I>n</I> are in the range 0 through 255. Valid values for <I>address</I> are in the ranges 8000h through 9C00h and C000h through EC00h, in increments of 400h. The addresses for pages 0 through 3 must be contiguous in order to maintain compatibility with version 3.2 of the Lotus/Intel/Microsoft Expanded Memory Specification (LIM EMS). If you use the <B>m</B><I>x</I> switch, the <B>frame</B> switch, or the <B>/p</B><I>mmmm</I> switch, you cannot specify the addresses for pages 0 through 3 for the <B>/p</B><I>mmmm</I> switch. </P>
<P><B><B>x=</B><I>mmmm</I>-<I>nnnn</I></B></P>
<P>Prevents EMM386 from using a particular range of segment addresses for an EMS page or for UMBs. Valid values for <I>mmmm</I> and <I>nnnn</I> are in the range A000h through FFFFh and are rounded down to the nearest 4-kilobyte boundary. The <B>x</B> switch takes precedence over the <B>i</B> switch if the two ranges overlap. </P>
<P><B><B>i=</B><I>mmmm</I>-<I>nnnn</I></B></P>
<P>Specifies a range of segment addresses to be used (included) for an EMS page or for UMBs. Valid values for <I>mmmm</I> and <I>nnnn</I> are in the range A000h through FFFFh and are rounded down to the nearest 4-kilobyte boundary. The <B>x</B> switch takes precedence over the <B>i</B> switch if the two ranges overlap. </P>
<P><B><B>b=</B><I>address</I></B></P>
<P>Specifies the lowest segment address available for EMS "banking" (swapping of 16-kilobyte pages). Valid values are in the range 1000h through 4000h. The default value is 4000h. </P>
<P><B><B>L=</B><I>minXMS</I></B></P>
<P>Ensures that the specified amount (in kilobytes) of extended memory will still be available after EMM386 is loaded. The default value is 0. </P>
<P><B><B>a=</B><I>altregs</I></B></P>
<P>Specifies how many fast alternate register sets (used for multitasking) you want to allocate to EMM386. Valid values are in the range 0 through 254. The default value is 7. Every alternate register set adds about 200 bytes to the size in memory of EMM386. </P>
<P><B><B>h=</B><I>handles</I></B></P>
<P>Specifies how many handles EMM386 can use. Valid values are in the range 2 through 255. The default value is 64. </P>
<P><B><B>d=</B><I>nnn</I></B></P>
<P>Specifies how many kilobytes of memory should be reserved for buffered DMA. Discounting floppy-disk DMA, this value should reflect the largest DMA transfer that will occur while EMM386 is active. Valid values for <I>nnn</I> are in the range 16 through 256. The default value is 16. </P>
<P><B><B>ram=</B><I>mmmm</I>-<I>nnnn</I></B></P>
<P>Specifies a range of segment addresses to be used for UMBs and also enables EMS support. If you do not specify a range, EMM386 uses all available adapter space to create UMBs and a page frame for EMS. </P>
<P><B><B>noems</B></B></P>
<P>Provides access to the upper memory area but prevents access to expanded memory. </P>
<P><B><B>novcpi</B></B></P>
<P>Disables support for VCPI applications. This switch must be used with the <B>noems</B> switch. If you specify the <B>novcpi</B> switch without specifying the <B>noems</B> switch, EMM386 does not disable VCPI support. If you specify both switches, EMM386 disregards the <I>memory</I> parameter and the <B>min</B> switch. Disabling support for VCPI applications reduces the amount of extended memory allocated. </P>
<P><B><B>highscan</B></B></P>
<P>Specifies that EMM386 use an additional check to determine the availability of upper memory for use as UMBs or EMS windows. On some computers, specifying this switch may have no effect or cause EMM386 to identify upper memory areas as available when they are not. As a result, the computer might stop responding. </P>
<P><B><B>verbose</B></B></P>
<P>Directs EMM386 to display status and error messages while loading. By default, EMM386 displays messages only if it encounters an error condition. You can abbreviate <B>verbose</B> as <B>V</B>. (To display status messages without adding the <B>verbose</B> switch, press and hold ALT while EMM386 starts and loads.) </P>
<P><B><B>win=</B><I>mmmm</I>-<I>nnnn</I></B></P>
<P>Reserves a specified range of segment addresses for Windows instead of for EMM386. Valid values for <I>mmmm</I> and <I>nnnn</I> are in the range A000h through FFFFh and are rounded down to the nearest 4-kilobyte boundary. The <B>x</B> switch takes precedence over the <B>win</B> switch if the two ranges overlap. The <B>win</B> switch takes precedence over the <B>ram</B>, <B>rom</B>, and <B>i</B> switches if their ranges overlap. </P>
<P><B><B>nohi</B></B></P>
<P>Prevents EMM386 from loading into the upper memory area. Normally, a portion of EMM386 is loaded into upper memory. Specifying this switch decreases available conventional memory and increases the upper memory area available for UMBs. </P>
<P><B><B>rom=</B><I>mmmm</I>-<I>nnnn</I></B></P>
<P>Specifies a range of segment addresses that EMM386 uses for shadow RAM — random-access memory used for read-only memory (ROM). Valid values for <I>mmmm</I> and <I>nnnn</I> are in the range A000h through FFFFh and are rounded down to the nearest 4-kilobyte boundary. Specifying this switch may speed up the system if it does not already have shadow RAM. </P>
<P><B><B>nomovexbda</B></B></P>
<P>Prevents EMM386 from moving the extended BIOS data from conventional memory to upper memory. </P>
<P><B><B>altboot</B></B></P>
<P>Specifies that EMM386 use an alternate handler to restart the computer when you press CTRL+ALT+DEL. Use this switch only if the computer stops responding or exhibits other unusual behavior when EMM386 is loaded and you press CTRL+ALT+DEL. </P>
<P>Notes on EMM386.EXE</P>
<P><B>Must install HIMEM.SYS before EMM386.EXE.</B></P>
<P>You must include a <B>device</B> command for the HIMEM.SYS device driver in CONFIG.SYS before the <B>device</B> command for EMM386.EXE. </P>
<P><B>Using EMM386 memory switches.</B></P>
<P>Unless you want to use EMM386 to provide access to the upper memory area, you need not specify memory switches on the <B>device</B> command line. EMM386 usually runs properly with the default values. In some cases, however, you might want to control how EMM386 uses memory. For example, you can control where EMM386 puts the EMS page frame or which segments it uses for EMS pages. You can use as many of these memory switches as you want, in any order you want. </P>
<P><B>Using EMM386 to provide access to the upper memory area.</B></P>
<P>In addition to providing access to expanded memory, EMM386 provides access to the upper memory area, which you can use to load certain programs and device drivers. You must use either the <B>ram</B> or <B>noems</B> switch to provide access to the upper memory area. </P>
<P>To give the operating system access to the upper memory area but not to expanded memory, use the <B>noems</B> switch. To give the operating system access to both the upper memory area and expanded memory, use the <B>ram</B> switch. The <B>ram</B> switch provides access to less of the upper memory area for running device drivers and programs than does the <B>noems</B> switch. In either case, you must include the <B>dos=umb</B> command in CONFIG.SYS. The <B>device</B> command for EMM386.EXE must precede any <B>devicehigh</B> commands. </P>
<P>EMM386.EXE Examples</P>
<P>To start EMM386 as an expanded-memory emulator, using the default values, add the following lines to CONFIG.SYS: </P>
<P><BR></P>
<pre><code>device=himem.sys<BR>device=emm386.exe</code></pre>
<P>Because no location is specified, MS-DOS searches for the EMM386.EXE file in the root directory of the startup drive. </P>
<P>To specify that EMM386 allocate a maximum of 4096K of memory and a guaranteed 256K of memory (the default value), and to specify that the EMM386.EXE file is located in the DOS directory on drive C, add the following line to CONFIG.SYS: </P>
<P><BR></P>
<pre><code>device=c:\dos\emm386.exe 4096 </code></pre>
<P>To emulate expanded memory, specify the segment-base address D000h for the EMS page frame, and allocate 512K of memory to EMM386, use one of the following commands: </P>
<P><BR></P>
<pre><code>device=emm386.exe 512 frame=d000<BR><BR>device=emm386.exe 512 p0=d000 p1=d400 p2=d800 p3=dc00</code></pre>
<P>Suppose that, in addition to specifying the conditions set in the preceding commands, you want to prevent EMM386 from using the segment addresses E000h through EC00h. To do this and to specify that EMM386 can use 127 handles, add the following line to CONFIG.SYS: </P>
<P><BR></P>
<pre><code>device=emm386.exe 512 frame=d000 x=e000-ec00 h=127 </code></pre>
<P>To provide access to the upper memory area but not provide EMS/VCPI memory, add the following line to CONFIG.SYS: </P>
<P><BR></P>
<pre><code>device=emm386.exe noems novcpi </code></pre>
<P>To provide access to the upper memory area and provide EMS/VCPI memory, add the following line to CONFIG.SYS: </P>
<P><BR></P>
<pre><code>device=emm386.exe ram </code></pre></FONT></BODY></HTML>
