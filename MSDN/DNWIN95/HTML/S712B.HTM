<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Long Filename Support in Windows 95</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" size="2">
<h3>Long Filename Support in Windows 95</H3><P>For every long filename, an alias entry is generated automatically that complies with the 8.3 filename rules for backward compatibility. Automatically generated aliases are composed of the first six characters of the filename plus ~<I>n </I>(where <I>n</I> is a number) and the first three characters after the last period. So the filename ThisIsALong.File.Name is associated with the automatically generated alias THISIS~1.NAM. If the alias name already exists, the algorithm increments <I>n</I>, where <I>n</I> begins with 2 until the system can find a unique filename.</P>
<P><b>Note</b></P>
<P>Neither the user nor an application can control the name created by the automatic alias process. Related issues are discussed in "Long Filenames and Network Compatibility" later in this chapter.</P>
<P>For the filename to comply with the 8.3 filename rules, it must use only the valid characters for an alias and it must be all uppercase. Short filenames are converted to uppercase by the IFSMGR before being passed to the file system driver. Valid characters for 8.3 filenames (and aliases) can be any combination of letters and numbers, a blank (ASCII 20H), ASCII characters greater than 127, and the following special characters:</P>
<P><BR></P>
<pre><code>$ % ' - _ @  ~ ` ! ( ) ^ # &amp;</code></pre>
<P>The following additional characters are valid in long filenames, but are not valid in alias names or 8.3 filenames:</P>
<P><BR></P>
<pre><code>+ , ; = [ ]</code></pre>
<P>The following rules also apply for Windows&nbsp;95 file systems:</P>
<UL><LI>Maximum filename component length is 255 characters, including NULL</LI><LI>Maximum path length is 260 characters, including NULL (compared to 80 characters for a short name)</LI><LI>The OEM character set can be specified by an application if the application is written for that character set</LI><LI>The long-filename directory entries use the Unicode character set to store the names</LI></UL><P>The filename and the alias are the same if the filename meets 8.3-filename rules (that is, if it contains only valid characters for an alias and it is all uppercase). This means that a filename using only valid characters for an alias and following the 8.3-filename format is still not the same as the alias name if it contains lowercase characters. However, in this case the alias is the uppercase version of the filename. For example, if the long filename is Examples.Txt, its alias is EXAMPLES.TXT. The case is preserved in the long filename. (Notice, though, that searches in the Windows&nbsp;95 file system are not case-sensitive. So a search of the form "examples.txt" or "Examples.Txt" will find the same files.)</P>
<P><b>Tip</b></P>
<P>To see the alias for a file, right-click the file in any shell program such as Windows Explorer and then select Properties from the context menu. The value for MS-DOS Name in the General properties dialog box shows the alias assigned to this file. Also, the <B>dir</B> command at the command prompt shows the long filename.</P></FONT></BODY></HTML>
