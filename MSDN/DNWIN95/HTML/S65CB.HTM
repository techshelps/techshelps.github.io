<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How Windows 95 Accommodates Application Problems</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" size="2">
<h3>How Windows 95 Accommodates Application Problems</H3><P>Some Windows-based and MS-DOS - based applications may not run well under Windows&nbsp;95 because they were written to take advantage of characteristics of older operating systems. For example, certain applications use a portion of the title bar to include items other than the title, such as a Quick Help button. Because Windows&nbsp;95 title bars are not formatted in the same way as Windows 3.x title bars, some information may be overwritten when you run these old applications.</P>
<P>In addition, some applications use interrupts that are not automatically supported by Windows&nbsp;95. Others do not handle long filenames well, or incorrectly check for the operating system's version number.</P>
<P>Windows&nbsp;95 provides a utility to make an application that is incompatible with Windows&nbsp;95 compatible. You can use this utility to troubleshoot if you have trouble printing from an application or an application stalls or has other performance problems. It provides a means to switch from EMF to RAW printer data, to increase stack memory to an application, to emulate earlier versions of Windows, and to solve other common problems that cause an application not to run with Windows&nbsp;95. For more information, see online Help.</P>
<H4><A NAME="sec0"></A>To run the Make Compatible utility</H4><UL><LI>Click the Start button, click Run, and then type <B>mkcompat.exe</B></LI></UL><P>Notes</P>
<P>Many programming tools that are not specifically designed to run under Windows&nbsp;95 may run satisfactorily, but the corresponding debugging tools usually do not. Make sure that both the programming and debugging tools you use are designed for Windows&nbsp;95.</P>
<P>Some Win16-based and MS-DOS – based disk utilities must be run with special care. In addition, some disk utilities do not perform correctly with long filenames. For more information about using Win16-based and MS-DOS – based disk utilities with Windows&nbsp;95, see Chapter 20, "Disks and File Systems." </P>
<H4><A NAME="sec1"></A>Running TSRs</H4><P>Some older TSRs rely on MS-DOS interrupts to monitor everything that happens on the system. However, because of its protected-mode file system, Windows&nbsp;95 doesn't use MS-DOS interrupts. If Windows&nbsp;95 detects that a TSR is trying to monitor these interrupts, it will accommodate the application and will send all system information through MS-DOS interrupts. This way, the TSR can monitor system events successfully. However, doing this will slow the performance of the operating system significantly.</P>
<P>The IOS.INI file, as described in Chapter 19, "Devices," includes a list of "safe" drivers and applications. If Windows&nbsp;95 finds the application listed in IOS.INI, it will not send system events through MS-DOS interrupts, thus avoiding slowed performance. </P>
<H4><A NAME="sec2"></A>Fixing Version-Checking Errors</H4>
<P>If you are using an MS-DOS – based application that was designed for an MS-DOS version other than 7.0 (which is the version that Windows&nbsp;95 reports), you may receive a message that says you are not using the correct version of MS-DOS. If this is the case, you can add the application to the version table. The version table contains a list of executable files followed by the version number of MS-DOS that the applications were designed to run with.</P>
<P>To display the version table, type <B>setver</B> in a command prompt window. For information about the syntax, parameters, and switches you can use to add an application to the version table, type <B>setver /?</B> at the command prompt. </P>
<P>Windows&nbsp;95 cannot report the correct MS-DOS version to applications unless the version table is loaded into memory. To load the version table, include a <B>device </B>command in CONFIG.SYS; for example:</P>
<P><BR></P>
<pre><code>device=c:\windows\setver.exe </code></pre>
<P>If you modify the version table or CONFIG.SYS, restart the computer so the changes can take effect.</P>
<P>Some applications incorrectly check the version number of Windows&nbsp;95. Incorrect version-checking techniques sometimes invert the two bytes that record the version number; thus, version 3.10 would be reported as 10.3. Windows&nbsp;95 tries to accommodate this possible version-checking error by reporting 3.95 as the version. This way, if an application looks for a version greater than 3.10 or its inverse, 10.3, the new Windows&nbsp;95 version will prove to be greater. </P>
<P>If the application looks for an exact match for the version number, such as Windows version 3.10, it may not run under Windows&nbsp;95. To resolve this problem, add the following line to the [Compatibility] section of the WIN.INI file:</P>
<P><BR></P>
<pre><code><I>compiled_module_name</I>=0x00200000</code></pre>
<P>To determine the compiled module name, right-click an executable file in Windows Explorer, and then click Quick View. The Module Name line provides this information. After you have obtained the module name, the section you add to the WIN.INI file should look similar to this entry for cc:Mail&trade;:</P>
<P><BR></P>
<pre><code>[Compatibility]
CCMAIL=0x00200000</code></pre>
<P>Windows&nbsp;95 Setup adds entries to the WIN.INI file for many applications that are known to have this problem.</P>
<P><b>Note</b></P>
<P>Do not add a permanent entry to WIN.INI for an installation application. Install your application first, and then edit the compiled module name in WIN.INI. </P>
<P>If a setup application incorrectly detects the version of Windows&nbsp;95, you may be unable to install the application. In this case, add an entry to the [Compatibility] section of WIN.INI for the setup application (for example, SETUP=0x00200000). Install the application, and then immediately remove the section that you added to WIN.INI.</P>
<H4><A NAME="sec3"></A>Running Applications That Replace System DLLs</H4><P>Some setup applications do not check the version of the system files they are installing and overwrite the newer Windows&nbsp;95 versions of those DLLs. Windows&nbsp;95 restores its original DLLs after every setup application runs and for the first three startups thereafter. If an application stops running or behaves erratically after you install it, you may need to obtain an updated version of the application that does not overwrite Windows&nbsp;95 system files.</P>
<P>Earlier versions of Windows allowed applications to redistribute parts of the system with no ill effects. For example, an application might overwrite a system file with no adverse consequences. </P>
<P>In Windows&nbsp;95, multiple system files have been consolidated to expedite the startup process. If an application tries to overwrite a system file that is no longer used, Windows allows the application to copy the file, but does not use it.</P>
<P>If your application must run with a replacement file, you can add that file to the Windows SYSTEM\VMM32 directory (which is initially empty after you set up Windows&nbsp;95).</P>
<P>After you install an application, Windows 95 checks for files that are commonly overwritten by setup applications. If any are found, a dialog box appears, enabling you to restore the files from the hidden Windows SYSBCKUP directory.</P></FONT></BODY></HTML>
