<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Core System Components</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" size="2">
<h2>Core System Components</H2><P>Similar to Windows version 3.1 and Windows for Workgroups version 3.1, Windows&nbsp;95 includes a core composed of three components —  User, Kernel, and graphical device interface (GDI). </P>
<P><img src="RK31_05.gif"></P>
<P>Each of these components includes a pair of DLLs — one 32-bit and one 16-bit —  which provide services for the applications you run. Windows&nbsp;95 is designed to use 32-bit code wherever it significantly improves performance without sacrificing application compatibility. Windows&nbsp;95 retains existing 16-bit code where it is required to maintain compatibility or where 32-bit code would increase memory requirements without significantly improving performance. All the Windows&nbsp;95 I/O subsystems (such as networking and file systems) and device drivers are 32-bit, as are all the memory management and scheduling components, including the Kernel and Virtual Memory Manager.</P>
<P>As shown in the following illustration, the lowest-level services provided by the Windows&nbsp;95 Kernel are implemented as 32-bit code to ensure a high-performance core. Most of the remaining 16-bit code consists of hand-tuned assembly language, delivering performance that rivals some 32-bit code used by other operating systems.</P>
<P><img src="RK31_06.gif"></P>
<P>Many functions provided by the GDI — which are mostly complex, CPU-intensive functions — are now rewritten as 32-bit code to improve performance. Much of the window management code in the User components— which are small, fast functions — remains 16-bit, thus retaining application compatibility.</P>
<P>Windows&nbsp;95 also improves on the MS-DOS and Windows 3.1<I> </I>environments by implementing many device drivers as 32-bit, protected-mode code. Virtual device drivers in Windows&nbsp;95 assume the functionality provided by many real-mode MS-DOS – based device drivers, eliminating the need to load them in MS-DOS. This results in a minimal conventional memory footprint, improved performance, and improved reliability and stability of the system over real-mode device drivers.</P>
<P>The following sections describe the services provided by these core components.</P></FONT></BODY></HTML>
