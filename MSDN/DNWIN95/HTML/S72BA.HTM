<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Windows 95 Registry</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" size="2">
<h2>Windows 95 Registry</H2><P>The central information database for Windows&nbsp;95 is called the Registry. This hierarchical database both simplifies the operating system and makes it more adaptable. The Registry simplifies the operating system by eliminating the need for AUTOEXEC.BAT, CONFIG.SYS, and INI files (except when legacy applications require them). It makes the operating system more adaptable by storing user-specific and configuration-specific information so you can share one computer among multiple users and you can have more than one configuration (such as in-the-office and on-the-road configurations) for each computer.</P>
<P></P>
<P>A primary role of the Registry in Windows&nbsp;95 is to serve as a central repository for hardware-specific information for use by the hardware detection and Plug and Play system components. Windows&nbsp;95 maintains information about hardware components and devices that have been identified through an enumeration process in the hierarchical structure of the Registry. (This process is "Configuration Manager" later in this chapter.) When new devices are installed, the system checks the existing configuration in the Registry to determine the hardware resources (for example, IRQs, I/O addresses, DMA channels, and so on) that are not being used, so the new device can be properly configured without conflicting with a device already installed in the system.</P>
<P>Windows 3.1<I> </I>used initialization (INI) files to store system-specific or application-specific information on the state or configuration of the system. For example, the WIN.INI file stored information about the appearance of the Windows environment, the SYSTEM.INI file stored system-specific information on the hardware and device driver configuration of the system, and various INI files (such as MSMAIL.INI and WINWORD6.INI) stored application-specific information.</P>
<P>The Registry remedies this situation by providing a single location for a computer's configuration information. The following table shows other difficulties or limitations caused by using INI files that are overcome by using the Registry.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="174pt" VALIGN="TOP"><COL WIDTH="174pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Problems using INI files</B></P></TD><TD VALIGN="TOP"><P><B>Solutions using the Registry</B></P></TD></TR><TR><TD VALIGN="TOP"><P>INI files are text-based, and are limited to 64K in total size.</P></TD><TD VALIGN="TOP"><P>The Registry has no size restriction and can include binary and text values. </P></TD></TR><TR><TD VALIGN="TOP"><P>Information stored in INI files is non-hierarchical and supports only two levels of information (specifically, section headings with a list of key names under each).</P></TD><TD VALIGN="TOP"><P>The Registry is hierarchically arranged.</P></TD></TR><TR><TD VALIGN="TOP"><P>Many INI files contain a myriad of switches and entries that are complicated to configure or are used only by operating system components.</P></TD><TD VALIGN="TOP"><P>The Registry contains more standardized values. For more information, see Chapter 6, "Setup Technical Discussion."</P></TD></TR><TR><TD VALIGN="TOP"><P>INI files provide no mechanism for storing user-specific information, thus making it difficult for multiple users to share a single computer or for users who move around on the network to have access to their user-specific settings.</P></TD><TD VALIGN="TOP"><P>The Hkey_Users key stores user-specific information. </P></TD></TR><TR><TD VALIGN="TOP"><P>Configuration information in INI files is local to each system, and no API mechanisms are available for remotely managing configuration, thus making it difficult to manage multiple computers.</P></TD><TD VALIGN="TOP"><P>The Registry can be remotely administered and system policies (which are stored as Registry values) can be downloaded from a central server each time a new user logs on. For more information, see Chapter 15, "User Profiles and System Policies," and Chapter 16, "Remote Administration."</P></TD></TR></TBODY></TABLE>
<P><BR></P><P>When you upgrade from Windows 3.1 to Windows&nbsp;95, system-specific information such as the static reference to loading virtual device drivers is moved, as appropriate, from the SYSTEM.INI file to the Registry. </P>
<P>For backward compatibility, Windows&nbsp;95 does not ignore AUTOEXEC.BAT, CONFIG.SYS, and INI files, because many Win16-based applications still use them. For example, Windows&nbsp;95 allows Win16-based applications to use INI files for the parameters, device drivers, and so on, that the applications need to run. In addition, Windows&nbsp;95 continues to examine the [386Enh] section of SYSTEM.INI at startup to check for virtual device drivers. </P>
<P>One advantage of the Registry for Win32-based applications is that many of the Win32-based Registry APIs can be used remotely through the remote procedure call (RPC) mechanism in Windows&nbsp;95 to provide access to Registry information across a network. This means that network administrators can use system management tools to access the contents of the Registry for any computer on the network. (Of course, the remote computer must be configured to allow remote administration, and must have user-level security.)</P>
<P>With Windows&nbsp;95 remote administration, industry management mechanisms such as Simple Network Management Protocol (SNMP) can easily be integrated into Windows&nbsp;95, simplifying the management and support burden of the network administrator. For more information, see Chapter 16, "Remote Administration."</P></FONT></BODY></HTML>
