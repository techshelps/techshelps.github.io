<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Other Device Types</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" size="2">
<h3>Other Device Types </H3><P>Other device types can take advantage of Plug and Play if they provide mechanisms for identification and configuration. These include IDE controllers, Extended Capabilities Ports (ECP), and communications ports. </P>
<P>Parallel ports, also known as LPT ports, can also take advantage of Plug and Play. The most common parallel port type is the Centronics&reg; interface. Plug and Play parallel ports meet Compatibility and Nibble mode protocols defined in IEEE P1284. Compatibility mode provides a byte-wide channel from the computer to the peripheral. Nibble mode provides a channel from the peripheral to the host through which data is sent as 4-bit nibbles using the port's status lines. These modes provide two-way communication between the host and the peripheral. Nibble mode is also used to read the device ID from the peripheral for device enumeration.</P>
<P></P>

<P>For computers that are totally Plug and Play-compliant, the BIOS also meets Plug and Play specifications. In this case, the file named BIOS.VXD provides the BIOS Plug and Play enumerator.</P>
<P></P></FONT></BODY></HTML>
