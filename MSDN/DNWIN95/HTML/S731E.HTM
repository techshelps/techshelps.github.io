<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Command Syntax</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" size="2">
<h2>Command Syntax</H2><P><I>Syntax</I> is the order in which you must type a command and the elements that follow the command. Commands have up to four elements:  <I>command name</I>, <I>parameters</I>, <I>switches</I>, and <I>values</I>. In the following illustration, the first example lists all hidden files in the C:\LETTERS directory. The second example allows up to 10 users to connect to the C:\USERS\PUBLIC directory. </P>
<P><img src="RKA_09.gif"></P>
<P>Besides these four elements, command symbols can be used to direct the output. Each element is explained below.</P>
<P><B>Command Name</B></P>
<P>States the action you want Windows&nbsp;95 to carry out. Some commands (such as the <B>cls</B> command, which clears the screen) consist only of a command name. Most commands require more than a name. For all network commands, type <B>net </B>followed by a space and the command name, as in the following:</P>
<P><B>net config</B></P>
<P><B>Parameter</B></P>
<P>Defines or creates the object you want Windows&nbsp;95 to act on. Windows&nbsp;95 sometimes requires additional information, which you specify in one or more parameters after the command name. For example, the <B>del</B> command requires a parameter that is the name of the file you want to delete. Some commands require more than one parameter. For example, to rename a file by using the <B>rename</B> (<B>ren</B>) command, you must include the original name of the file in addition to the new name. The following command renames LETTER.TXT to MEMO.TXT:  </P>
<P><B>ren letter.txt memo.txt</B></P>
<P><B>Caution</B>   Some commands accept semicolons to separate parameters. For example, if you wanted to delete all files on drive A and typed <B>del a;\*.*</B> by mistake, Windows&nbsp;95 would erase the file A in the current directory and all files in the root directory of the current drive.</P>
<P>Position in the syntax line determines how a command works and whether a parameter is a <I>source</I> (first) or a <I>destination</I> (second). In the example above, the source, LETTER.TXT, specifies the location of data to be transferred or used as input to a command. The destination, MEMO.TXT, specifies a location to which the data specified by source is to be transferred. </P>
<P><B>Switches</B></P>
<P>Modify how a command performs a task. A switch is a forward slash (/) or a hyphen (-), usually followed by words, letters, or numbers. Some commands do not have switches, whereas others have several. If a command has more than one switch, you type them one after the other, separated with a space. Switches can be in any position or order after the command name. Some commands accept more than one switch after a forward slash. Other commands, such as TCP/IP utilities, accept a hyphen (-) instead of the forward slash. </P>
<P><B>Tip</B>   The terms "parameter" and "switch" are often interchanged, since both elements follow the command name. The only meaningful difference between a switch and parameter is the presence of a forward slash or hyphen to indicate a switch and the parameter position in the syntax line to indicate whether the parameter is a source or a destination. The term "argument" is also used to refer to parameters or switches.</P>
<P>With some network commands for real-mode networking, Windows&nbsp;95 presents a prompt that requires a user response before a task can be completed. Append the <B>/yes</B> (<B>/y) </B>or <B>/no</B> (<B>/n</B>) switch to a command to force a Yes or No answer for all responses. For example, stopping the workstation service causes Windows&nbsp;95 to stop dependent services; Windows&nbsp;95 prompts you before stopping each dependent service unless the <B>/yes</B> switch is included, as in the following:  </P>
<P><B>net stop workstation /y</B></P>
<P><B>Value</B></P>
<P>Determines how a switch works. A value is a colon (:) or an equal sign (=), followed by a word, letter, or number and must immediately follow the switch it modifies without a space. The following example of the <B>format</B> command contains two values — the file system to use (VFAT in the following example) and a volume label (Backup2):  </P>
<P><B>format d:  /f:1.2 /v:backup2</B></P>
<P></P>
<P>Check the syntax for the specific command in online Help to determine whether the command you want to use requires an equal sign or a colon.</P>
<P></P>
<P><B>Command symbols</B></P>
<P>Direct the input or output of a command and permit conditional execution of a command. Used with commands and filter commands, the command symbols are powerful tools.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="62pt" VALIGN="TOP"><COL WIDTH="285pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Symbol</B></P></TD><TD VALIGN="TOP"><P><B>Purpose</B></P></TD></TR><TR><TD VALIGN="TOP"><P>&gt;</P></TD><TD VALIGN="TOP"><P>Redirects output.</P></TD></TR><TR><TD VALIGN="TOP"><P>&gt;&gt;</P></TD><TD VALIGN="TOP"><P>Appends redirected output to existing data.</P></TD></TR><TR><TD VALIGN="TOP"><P>&lt;</P></TD><TD VALIGN="TOP"><P>Redirects input.</P></TD></TR><TR><TD VALIGN="TOP"><P>|</P></TD><TD VALIGN="TOP"><P>Pipes output.</P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><B>Sort</B>, <B>more</B>, and <B>find</B> are the built-in filter commands that work in the same way as command symbols, to allow you to sort input and output, cause output to the screen to be displayed one screen at a time, and search for specified text in a file. </P></FONT></BODY></HTML>
