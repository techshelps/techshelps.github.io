<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IExchExtMessageEvents : IUnknown</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_mapi1book_iexchextmessageevents_iunknown"></a>IExchExtMessageEvents : IUnknown</h1>
<p>
The<b> IExchExtMessageEvents</b> interface is implemented by extension objects and gives them the ability to replace or enhance the default message-handling behavior of Microsoft Exchange. Microsoft Exchange always calls these methods in pairs. For example, if it calls the <b>IExchExtMessageEvents::OnRead</b> method, it also calls the <b>IExchExtMessageEvents::OnReadComplete</b> method; if it calls the <b>IExchExtMessageEvents::OnWrite</b> method, it also calls the <b>IExchExtMessageEvents::OnWriteComplete</b> method, and so forth. The <b>OnReadComplete</b>, <b>OnWriteComplete</b>, <b>IExchExtMessageEvents::OnSubmitComplete</b>, and <b>IExchExtMessageEvents::OnCheckNamesComplete</b> methods are used to undo operations whenever an error occurs. They are also used to release resources that are allocated during calls to the <b>OnRead</b>, <b>OnWrite</b>, <b>IExchExtMessageEvents::OnSubmit</b>, and <b>IExchExtMessageEvents::OnCheckNames</b> methods. For example, an extension object can allocate buffers to validate text during a call to the <b>OnRead</b> method, and deallocate these buffers during a call to the <b>OnReadComplete</b> method. </p>
<p>
There is a specific set of steps followed by Microsoft Exhange to handle errors during a call to these functions. This is best illustrated with a specific example that applies to all other methods in this interface. Suppose Microsoft Exchange calls <b>OnCheckNames</b> to notify extensions that it is about to check names and give extensions an opportunity to resolve names. If no extensions return S_OK, Microsoft Exchange performs the name resolution itself. After the resolution is completed or if it failed, Microsoft Exchange calls the <b>OnCheckNamesComplete</b> method of all the extensions whose <b>OnCheckNames</b> method it called, passing in EEME_FAILED if the operation failed. If any extension returns an error from <b>OnCheckNamesComplete</b>, Microsoft Exchange calls each of those extensions again, passing in EEME_COMPLETE_FAILED as the value for the <i>ulFlags</i> parameter. The same series of steps applies to other methods in this interface.</p>
<p>
<b>IExchExtMessageEvents</b> is used only in the following contexts: </p>
<p class=indent1>
EECONTEXT_SENDNOTEMESSAGE</p>
<p class=indent1>
EECONTEXT_READNOTEMESSAGE</p>
<p class=indent1>
EECONTEXT_SENDPOSTMESSAGE</p>
<p class=indent1>
EECONTEXT_READPOSTMESSAGE</p>
<p class=indent1>
EECONTEXT_READREPORTMESSAGE</p>
<p class=indent1>
EECONTEXT_SENDRESENDMESSAGE </p>
<p>
This interface is optional.</p>
<h4>Quick Info</h4>
<table cellspacing=4 cols=2 width=464>
<tr valign=top>
<td width=43%>Header file:</td>
<td width=57%>EXCHEXT.H</td>
</tr>
<tr valign=top>
<td width=43%>Exposed by:</td>
<td width=57%>Extension objects</td>
</tr>
<tr valign=top>
<td width=43%>Implemented by:</td>
<td width=57%>Extension objects</td>
</tr>
<tr valign=top>
<td width=43%>Called by:</td>
<td width=57%>Microsoft Exchange</td>
</tr>
<tr valign=top>
<td width=43%>Corresponding pointer type:</td>
<td width=57%>LPEXCHEXTMESSAGEEVENTS</td>
</tr>
</table><br>
<h4>Vtable Order</h4>
<table cellspacing=4 cols=2 width=487>
<tr valign=top>
<td width=36%><a href="ref-c01k_6q78.htm"><b>OnRead</b></a></td>
<td width=64%>Replaces or enhances the behavior of Microsoft Exchange when reading information from a message.</td>
</tr>
<tr valign=top>
<td width=36%><a href="ref-c01k_8b51.htm"><b>OnReadComplete</b></a></td>
<td width=64%>Enables extension objects to roll back their implementation of the <b>OnRead</b> method in case of an error or to release resources allocated by <b>OnRead</b>.</td>
</tr>
<tr valign=top>
<td width=36%><a href="ref-c01k_2bfp.htm"><b>OnWrite</b></a></td>
<td width=64%>Replaces or enhances the behavior of Microsoft Exchange when writing information to a message.</td>
</tr>
<tr valign=top>
<td width=36%><a href="ref-c01k_98f9.htm"><b>OnWriteComplete</b></a></td>
<td width=64%>Enables extension objects to roll back their implementation of the <b>OnWrite</b> method in case of an error or to release resources allocated by <b>OnWrite</b>.</td>
</tr>
<tr valign=top>
<td width=36%><a href="ref-c01k_9msz.htm"><b>OnCheckNames</b></a></td>
<td width=64%>Replaces or enhances the behavior of Microsoft Exchange when recipient names typed by the user are being resolved to their address book entries.</td>
</tr>
<tr valign=top>
<td width=36%><a href="ref-c01k_9xt1.htm"><b>OnCheckNamesComplete</b></a></td>
<td width=64%>Enables extension objects to roll back their implementation of the <b>OnCheckNames</b> method in case of an error or to release resources allocated by <b>OnCheckNames</b>.</td>
</tr>
<tr valign=top>
<td width=36%><a href="ref-c01k_14c4.htm"><b>OnSubmit</b></a></td>
<td width=64%>Replaces or enhances the behavior of Microsoft Exchange when a message has been submitted.</td>
</tr>
<tr valign=top>
<td width=36%><a href="ref-c01k_6kpx.htm"><b>OnSubmitComplete</b></a></td>
<td width=64%>Enables extension objects to roll back their implementation of the <b>OnSubmit</b> method in case of an error or to release resources allocated by <b>OnSubmit</b>. </td>
</tr>
</table><br>
<p>&nbsp;</p></body>
</HTML>
