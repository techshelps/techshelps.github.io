<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IExchExtCommands::InstallCommands</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_iexchextcommands_installcommands"></a>IExchExtCommands::InstallCommands</h2>
<p>
Enables an extension object to install its menu commands and toolbar command buttons into a Microsoft Exchange window.</p>
<h4>Quick Info</h4>
<p>
See <a href="ref-c01k_15bi.htm"><b>IExchExtCommands : IUnknown</b></a>.</p>
<pre><code><b>HRESULT InstallCommands(
  LPEXCHEXTCALLBACK</b><i> lpeecb</i><b>,</b>              
<b>  HWND</b><i> hwnd</i><b>,</b>                             
<b>  HMENU hmenu; UINT FAR *</b><i> lpcmdidBase</i><b>,</b>   
<b>  LPTBENTRY</b><i> lptbeArray</i><b>,</b>                  
<b>  UINT</b><i> ctbe</i><b>,</b>                             
<b>  ULONG</b><i> ulFlags                          </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpeecb</i></dt>
<dd>
[in] Pointer to an <a href="ref-c01k_62lq.htm"><b>IExchExtCallback</b></a> interface.</dd>
<dt>
<i>hwnd</i></dt>
<dd>
[in] Handle of the top-level Microsoft Exchange window.</dd>
<dt>
<i>hmenu</i></dt>
<dd>
[in] Microsoft Exchange menu handle.</dd>
<dt>
<i>lpcmdidBase</i></dt>
<dd>
[in, out] Pointer to the first command identifier the extension object can use. This is also the command identifier for a menu item or toolbar button.</dd>
<dt>
<i>lptbeArray</i></dt>
<dd>
[in] Pointer to an array of toolbars.</dd>
<dt>
<i>ctbe</i></dt>
<dd>
[in] Count of toolbars in the <i>lptbeArray </i>parameter.</dd>
<dt>
<i>ulFlags</i></dt>
<dd>
Reserved; must be zero.
</dd>
</dl>
<p>
The following members are used with the <b>TBENTRY</b> structure, which is defined in the EXCHEXT.H header file:
<dl>
<dt>
<b>hwnd</b></dt>
<dd>
Input member indicating the window handle of the toolbar.</dd>
<dt>
<b>tbid</b></dt>
<dd>
Input member indicating the toolbar identifier. A toolbar identifier distinguishes between multiple toolbars, such as the standard toolbar and the format toolbar. Currently, only the standard toolbar is defined with the EETB_STANDARD value identifier.</dd>
<dt>
<b>ulFlags</b></dt>
<dd>
Reserved; must be zero.</dd>
<dt>
<b>itbbBase</b></dt>
<dd>
Input-output member indicating the index of the extension's first toolbar button in the set of available buttons.
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
No error occurred.
</dd>
</dl>
<h4>Remarks</h4>
<p>
Microsoft Exchange calls the <b>IExchExtCommands::InstallCommands</b> method to enable an extension object to install its menu commands and toolbar command buttons into a Microsoft Exchange window. Microsoft Exchange invokes <b>InstallCommands</b> before a top level Microsoft Exchange window, such as the Viewer, is made visible. </p>
<p>
To prevent identifier collisions, the <i>lpcmdidBase</i> parameter points to the first identifier the extension object can use for a command identifier. The extension must update the contents of the <i>lpcmdidBase</i> parameter, so that on return it contains the first identifier the next extension can use. The <i>lptbeArray</i> parameter contains a list of toolbars with the number of toolbars in the <i>ctbe </i>parameter.</p>
<p>
To prevent identifier collisions, the <i>itbbBase</i> parameter contains the index of the extension's first toolbar button in the set of available buttons. This index is not the same as the position of the extension's first button displayed in the toolbar.</p>
<p>
The extension object must use the Windows API to add menus, popup menus, and top-level menus. Windows 95 toolbar messages are used on all platforms to register and add toolbar buttons. If an extension object elects to place its toolbar buttons on the toolbar by default, the extension object must add them to the toolbar's set of available buttons when <b>InstallCommands</b> is called and then position those buttons on the toolbar when the <b>IExchExtCommands::ResetToolbar</b> method is called.</p>
<p>
If an error is returned, Microsoft Exchange will not try to install another extension and will fail to create the window associated with the context.</p>
<p>&nbsp;</p></body>
</HTML>
