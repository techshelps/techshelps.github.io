<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Implementing Advanced Criteria Extensions</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_implementing_advanced_criteria_extensions"></a>Implementing Advanced Criteria Extensions</h2>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To implement advanced criteria extensions </h5>
<ol>
<li>
Create a single DLL that contains one or more extension objects.  </li>
<li>
Implement the following interfaces:<ul>
<li>
<a href="ref-c01k_2p4e.htm"><b>IExchExt</b></a></li>
<li>
<a href="ref-c01k_8jam.htm"><b>IExchExtAdvancedCriteria</b></a></li>
</ul>
</li>
<li>
Register for the EECONTEXT_ADVANCED_CRITERIA context by placing an entry in the EXCHNG.INI file or 16-bit versions of Microsoft Windows or in the registry on Windows NT or Windows 95.</li>
</ol>
<p>
Advanced criteria extensions enable you to create your own advanced criteria window that can be used when searching for messages. This is especially useful when you want to enable users to search for custom message properties.</p>
<p>
Although several extensions that supply advanced criteria dialog boxes might be available, only one advanced criteria window at a time can be displayed from a single context. Multiple advanced criteria contexts can be active at the same time; for example, when more than one Find window is open. Extensions are called in the order in which they were installed.</p>
<p>
Because more than one advanced criteria extension might be installed, it is important to ensure that your advanced criteria is as selective as possible before choosing to install extensions into an advanced criteria context. For instance, a public folder application should only choose to install its advanced criteria interface when its public folder is open or highlighted.</p>
<p>
Advanced criteria extensions that are more selective should be listed ahead of more general ones in the EXCHNG.INI file or the registry. Because Microsoft Exchange itself uses very general advanced criteria, most extensions should register themselves before Microsoft Exchange. If two or more such general advanced criteria extensions are present, the first one installed will always be used. The ordering of extensions is determined by their entry order in the EXCHNG.INI file or in the registry. For more information on creating extension entries, see <a href="cx-01_9a0j.htm">Registering Extensions</a>. </p>
<p>
The sequence of events that should occur when Microsoft Exchange interacts with your extension object to add a custom advanced criteria dialog box to the Microsoft Exchange client is as follows:
<ol>
<li>
When the user chooses the <b>Find</b> command from the <b>Tools</b> menu, Microsoft Exchange calls the <a href="ref-c01k_5qss.htm"><b>IExchExt::Install</b></a> method on all extension objects with the EECONTEXT_ADVANCEDCRITERIA bit set in the context map. During the call, it passes each extension a pointer to an <a href="ref-c01k_62lq.htm"><b>IExchExtCallback</b></a> interface along with the context, which in this case is EECONTEXT_ADVANCEDCRITERIA. The <b>IExchExtCallBack</b> pointer enables the extension to retrieve information about the current context. In this case, the current message store and folder will probably be useful. If it is the right context for you, return S_OK; otherwise, S_FALSE.</li>
<li>
Microsoft Exchange calls the <a href="ref-c01k_890h.htm"><b>IExchExtAdvancedCriteria::InstallAdvancedCriteria</b></a> method on the first extension to return S_OK from <b>Install</b>. Microsoft Exchange uses <b>InstallAdvancedCriteria</b> to pass information to the extension, including the window handle of the <b>Find</b> dialog box, the current advanced criteria restriction, and an array of folder entry identifiers to which the criteria will be applied. If the extension returns S_OK from <b>InstallAdvancedCriteria</b>, Microsoft Exchange will call the <a href="ref-c01k_3oyv.htm"><b>IExchExtAdvancedCriteria::DoDialog</b></a> method when the user selects the <b>Advanced</b> button in the <b>Find</b> dialog box.<p>
If S_FALSE is returned from <b>InstallAdvancedCriteria</b>, remaining extensions will be given the opportunity to examine the current search restriction and display a custom search dialog box. If no extension returns S_OK, Microsoft Exchange will display the standard default advanced criteria dialog box.
</li>
<li>
If the user chooses the <b>New Search</b> button, changes folders, or closes the <b>Find</b> dialog box after Microsoft Exchange calls <b>InstallAdvancedCriteria</b>, Microsoft Exchange calls the <a href="ref-c01k_8xpu.htm"><b>IExchExtAdvancedCriteria::Clear</b></a>, <a href="ref-c01k_886r.htm"><b>IExchExtAdvancedCriteria::SetFolders</b></a>, or<b> <a href="ref-c01k_3l4e.htm">IExchExtAdvancedCriteria::QueryRestriction</a></b> methods respectively to inform the extension of the changes.</li>
<li>
When the user closes the advanced criteria window, Microsoft Exchange calls the <a href="ref-c01k_86g1.htm"><b>IExchExtAdvancedCriteria::UninstallAdvancedCriteria</b></a> method, which allows the extension to free any resources associated with the advanced criteria window that it displayed.</li>
</ol>
<p>
The following table summarizes the interaction between a user, Microsoft Exchange and an extension object when using a custom advanced criteria dialog box. It also shows which component — Microsoft Exchange or the client extension — performs the step and in the case of the client extension, what method is invoked.</p>
<p>
<img src="images/cx02f05.gif" border=0></p>
<p>&nbsp;</p></body>
</HTML>
