<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Why Target Internet Explorer when Writing an ActiveX Control?</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">


<p>&nbsp;</p>

<h2><font size="2" face="VERDANA,ARIAL,HELVETICA">Why Target
Internet Explorer when Writing an ActiveX Control?</font></h2>

<p><font size="2" face="VERDANA,ARIAL,HELVETICA">The primary
reasons for the increased prevalence of the Internet should be
fairly obvious; however, a point that might not immediately
spring to mind is worthy of some consideration when planning.
Internet Explorer is based on a component architecture; two of
the main components are available for reuse as part of other
applications as the WebBrowser control and the Mshtml.dll
rendering engine. This means that an increasing number of
Microsoft and third-party applications will be using the same
underlying control container. Thus, if a control works well in
Internet Explorer 4.0 it will also work well in future
applications. This component reuse can already be seen in the
Internet Explorer suite&#151;Active Desktop and Outlook Express
use the same HTML rendering engine that also is the host of
ActiveX Controls. </font></p>
</body>
</html>
