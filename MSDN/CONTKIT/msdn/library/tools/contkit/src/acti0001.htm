<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ActiveX control support in Office 97 documents, worksheets and slides</title><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY bgcolor="#FFFFFF">

<h1>ActiveX control support in Office 97 documents, worksheets and slides</h1>
<p>
The issues discussed here apply to ActiveX controls used with Office 97 applications. Some of these issues  apply only to specific applications within the Office 97 and are called out as appropriate.</p>
<p>
<B>1. </B>The ActiveX control container implementations in Word, Excel and PowerPoint 97 use the <FONT FACE="Courier" SIZE="2">IDataObject</FONT> interface and not <FONT FACE="Courier" SIZE="2">IViewObject</FONT> to draw controls. ActiveX controls (from Microsoft or other vendors) that do not support <FONT FACE="Courier" SIZE="2">IDataObject</FONT> but instead require <FONT FACE="Courier" SIZE="2">IViewObject</FONT> support in their containers will not work in Word, Excel or PowerPoint 97 documents. Access 97 does not have this limitation and can host controls that do not support <FONT FACE="Courier" SIZE="2">IDataObject</FONT>.<b> </b>Note that Microsoft Forms (used to create custom user dialogs in Microsoft Word, Microsoft Excel, Microsoft Outlook, and Microsoft PowerPoint 97) do not have this restriction either.  
<P>You need to contact the control vendor to determine whether an ActiveX control requires the <FONT FACE="Courier" SIZE="2">IViewObject</FONT> interface to be supported in its container. </p>
<p>
<B>2.</B> ActiveX controls may behave unpredictably when seen in multiple views of the same document. 
For an ActiveX control to display and function properly in multiple views of the same document (windows or panes), the container application should support the <FONT FACE="Courier" SIZE="2">IViewObject</FONT> interface. Since Word, Excel and PowerPoint 97 do not support this interface (as discussed in 1 above), the behavior of an ActiveX control that is viewed in two different windows (e.g., using Window.New Window, or by using the splitter pane) may be unpredictable. 
<p>
<B>3.</B>There is a class of ActiveX controls called simple frame controls that implement and interface called ISimpleFrame and will only work inside containers that support the ISimpleFrameSite interface. Access, Word, Excel and PowerPoint 97 <i>do not support</i> ISimpleFrameSite and will not be able to host such controls. This is also true for Microsoft Forms.</p>
<p>
<B>4.</B> In-place limitations</p>
<p>
<b>a)  </b>When Excel 97 is in-place active inside a container, ActiveX controls in Excel’s worksheets cannot be activated. When the user clicks on an ActiveX control while Excel 97 is in-place active, the following alert will appear –  “<i>This control can only be used while the sheet is in a Microsoft Excel window. Open into a Microsoft Excel Window?</i>”. This alert will have Yes and No buttons; choosing No will result in no action, choosing Yes will open the embedding in its native Excel application window where the control will be fully functional . </p>
<p>
Note that ActiveX controls in the in-place active Excel worksheet will be displayed correctly and can even be selected in Design Mode – these controls  are simply restricted from being in-place active. If it is important that controls be fully functional when an Excel sheet is in-place active, developers have the option of using built-in Excel controls available on the Forms toolbar .</p>
<p>
<B>b)</B> Whenever an ActiveX control in an in-place active Word document gets UI activation (e.g., when the user clicks on a button control on a Word document embedded in Internet Explorer), Word’s toolbars and menus will un-merge themselves from those belonging to the container. When the focus returns to the Word document (e.g., the same user clicks on text anywhere in the same Word document) the Word toolbars and menus will re-merge with the container ones. This behavior may result in UI-flashing when dealing with a Word document with ActiveX controls being activated as a Binder section or as an ActiveX document inside of Internet Explorer.<b> </b></p>
<p>
<B>5.</B> Excel Charts cannot contain ActiveX controls</p>
<p>
ActiveX controls cannot be inserted into Excel 97 charts. Controls may be placed on top of chart objects that are embedded in a worksheet, but such controls will not be active when the chart is activated.</p>
<p>
<B>6.</B> “Component Categories” are not supported by Word, Excel or PowerPoint 97.</p>
<p>
Word, Excel and PowerPoint 97 do not support ActiveX control categories. The implication is that controls that show up in the UI to insert non-Office controls may not necessarily work in these Office applications. There is no UI-filtering based on component categories, so it is possible, for instance, for an <FONT FACE="Courier" SIZE="2">ISimpleFrame</FONT> control to show up in the “More Controls” list for Word even though it would not work there.</p>
<p>
Access 97 supports component categories, controls that Access does not support will not show up in their control list. This functionality requires that  the control vendor building controls that support categories.</p>
<p>
<B>7.</B> No automatic download of ActiveX controls embedded in Office 97 documents when browsing using Internet Explorer</p>
<p>
While browsing an intranet web with a mixture of HTML and Office 97 documents using Internet Explorer  3.0 (or higher), ActiveX controls embedded in Office 97 documents do not get automatically downloaded to the client machine. On the other hand, IE ensures that this happens automatically in the case of HTML pages that have ActiveX controls in them. The one case where this will work is when the client machine has Office 97 installed and the document in question makes <i>exclusive</i> use of the ActiveX controls that ship in the Office 97 box. </p>
<p>
<B>8.</B> Miscellaneous limitations</p>
<p>
The following additional ActiveX control features are not supported in Access, Word, Excel or PowerPoint 97. </p>
<ul>
<li>
Restarting the machine with control active - Selecting Shut Down from the Start menu with an ActiveX control UI Active will result in the message &quot;Cannot quit Microsoft Excel&quot; being displayed.  Workaround is to deactivate any UI Active control before shutting down the system.<p>
</li>
<li>
ListFillRange property set to a named range does not reflect col/row changes - Changing the value of a named range does not automatically send a change notification to a bound control.  Workaround is to reenter the value of the ListFillRange property.<p>
</li>
<li>
Failing control insertion dirties workbook - If a control fails to insert, the dirty state of the workbook is not reset.  Closing the workbook will result in a &quot;Save Changes?&quot; alert being displayed.  Workaround:  None.<p>
</li>
<li>
Activation of an ActiveX control is not recorded.  Recording the UI Activation of a control (i.e. a mouse click on the control while in run mode) is not supported.  Also, property changes via the Properties window are not recorded.<p>
</li>
<li>
Register Custom Control dialog doesn't automatically try default extensions.  When using the Register Custom Control dialog, entering a filename without the extension could result in the control not being found.  Workaround is to include the file's extension when typing in a filename.</li>
</ul>
</BODY>
</HTML>
