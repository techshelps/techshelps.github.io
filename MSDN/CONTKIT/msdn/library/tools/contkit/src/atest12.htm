<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Property Merging in the Access Property Sheet</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">


<p>&nbsp;</p>

<p><a name="_Toc383926432"><font face="Arial"><b><i>Property
Merging in the Access Property Sheet</i></b></font></a></p>

<p><font size="2">An interesting scenario is to verify specific
property pages can be invoked from the merged Access control
property sheet. When your control is selected in either form or
report design view, select <i>View | Properties</i> from the
menus. The properties defined by the control will be merged with
the extender object that wraps the control and provides
properties common to other Access intrinsic controls. The ActiveX
Control&#146;s properties are listed on the <i>Other</i> and <i>All
</i>tabs on this property sheet below the <i>Custom </i>property.
Ensure that for your control all of the properties (excluding
hidden properties) are shown in this merged property sheet. This
includes read-only properties as well. Also, ensure that the
&quot;&#133;&quot; builder button next to the <i>Custom</i>
property invokes the all of the property pages for the control,
given that the control supplies property pages. </font></p>

<p><font size="2">Further down the list of properties in the
sheet, specific properties will require only showing a single
property page, like the <i>Color</i> property page for the <i>BackColor
</i>property in the case of the Calendar Control, or only the
General property page for the <i>Month </i>property. Click on the
builder button next to these properties to see the single
property page invoked. If applicable, ensure for your control
that changes can be made to the properties on these pages, and
then applied or cancelled, and the appropriate settings based on
your actions have been propagated back to the merged property
sheet. These properties can get converted to different types as
the settings are propagated back to the property sheet. Also,
verify that you can set each of these properties from within the
Access merged property sheet directly.</font></p>

<p><font size="2">It is also important to ensure the properties
that supply a list of enumerated names instead of the underlying
integer value that is persisted, show the correct strings in the
merged property sheet. For example, in the Calendar Control that
ships with Access, the <i>GridCellEffect</i> property displays a
dropdown in the merged property sheet with the strings
&quot;Flat&quot;, &quot;Raised&quot;, and &quot;Sunken&quot;.
Ensure that selecting each type of enumerated name sets the
property to the appropriate value, and that typing the enumerated
name into the property sheet works as well.</font></p>

<p><font size="2">If you have any read-only properties, try
setting the properties through the merged property sheet and
verify that an acceptable error is displayed. </font></p>

<p><font size="2">Verify that setting invalid values and data of
the incorrect type for each control property returns an
acceptable error. These errors should be similar to the errors
returned by the control when invalid values are entered in the
control's property pages as well. </font></p>
</body>
</html>
