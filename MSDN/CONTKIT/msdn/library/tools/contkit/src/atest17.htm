<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Instantiating Control Instances With Events Programatically</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">


<p><font face="Arial"><b><i></i></b></font>&nbsp;</p>

<p><a name="_Toc383926437"><font face="Arial"><b><i>Instantiating
Control Instances With Events Programatically</i></b></font></a></p>

<p><font size="2">If you have added a reference in the current
databases VBA project to your control's type library (Access does
this for you when you insert a control onto a form or report
design surface), you can write VBA code that creates instances of
your control. In addition, you can declare these objects using
the <i>WithEvents</i> keyword in a class module which will cause
events to fire on that instance of the object in class. For more
information on this see the online help for the <i>WithEvents</i>
keyword. Essentially, the object declared <i>WithEvents</i> shows
up in the object dropdown in the class module code window. When
it is selected, the right-hand dropdown containing the event
procedures for the object will list all of the events. You can
verify that the code in these event procedures are fired when the
class is instantiated, and the instance of the control in the
class, and some action or code causes the event code to fire.</font></p>
</body>
</html>
