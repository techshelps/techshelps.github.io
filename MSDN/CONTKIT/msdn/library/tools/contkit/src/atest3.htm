<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Registration</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">


<p>&nbsp;</p>

<p><a name="_Toc383926423"><font face="Arial"><b><i>Registration</i></b></font></a></p>

<p><font size="2">Access &#146;97 uses Component Categories
(comcat.dll) to filter the list of controls that may be inserted,
since controls may require specific interfaces that not all
control containers are required to support.</font></p>

<p><font size="2">When the <i>Tools | ActiveX Controls</i>...
menu item is selected in Access, a list of available controls on
the system is shown. (NOTE: Previous versions of Access scanned
through a portion of the Windows registry looking for controls by
looking for the Control key and the InprocServer32 key. Since
ComCat in Access &#146;97 is providing a list of controls that
match the specifications we are requesting, it returns a list of
controls that we show as currently registered that we support
based on this info. This however uncovers a bug in the ComCat
component; they show 16 bit controls in this list even though a
32-bit container is querying this information.) When the user
chooses to register or un-register a control, Access simply calls
the controls self registration or un-register entry points. This
should behave similarly to the case where the user is using
regsvr32 to register or un-register the control. The important
note here is that you should be able to register your control in
this dialog (and un-register it) given that it doesn&#146;t
require some special setup procedure beyond calling the entry
point for self-registration.</font></p>

<p><font size="2">Access requests that ComCat filter out controls
that it cannot support due to requirements for interfaces that
are not implemented. For example, the Microsoft Data Bound List
Controls in DBLIST32.OCX don&#146;t appear in the list of
controls to register, un-register, or insert on a form or report
since these controls require that the Visual Basic interfaces for
advanced data-binding be implemented by the container. This
control has listed this component category as a requirement for
its use. Controls that don&#146;t have this component category
flagged as a requirement will not be filtered out by ComCat, and
therefore will show up in this list even though they may not work
in the container. An example is the Apex Databound Grid control.
This control appears in the list of insertable controls when an
Access form or report is in design view since it shipped before
the ComCat component was completed. When the user tries to insert
the control into Access, an error occurs. Access has special
cased this particular control since it ships in Visual Basic,
however, other controls that require these interfaces will simply
propagate an error back to the host at some point (either at
insertion time or browse time depending on when the interface is
queried).</font></p>
</body>
</html>
