<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Registering a Consumer for an Event</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_hmm_registering_a_consumer_for_an_event"></a>Registering a Consumer for an Event</h3>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
If you followed the previously described examples, you created permanent consumers. To register to receive an event notification, permanent consumers must create at least one of each of the following instances: 
<ul>
<li>
Event consumer instance.</li>
<li>
Event filter instance.</li>
<li>
Binding between the consumer and filter.</li>
</ul>
<p>
The examples create the first two of these, as well as timers that will demonstrate that functionality. This section describes the third item, which is binding particular consumers and filters together.</p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To display the example consumers and filters</h5>
<ol>
<li>
Select <b>Consumers</b> in the drop-down list box.</li>
<li>
Expand the whole inheritance tree.</li>
<li>
Click on one of the example consumer instances.</li>
</ol>
<p>
The Event Registration screen now looks like this:</p>
<p>
<img src="nonregscrn.gif" border=0></p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To register the ServiceStopped consumer for an event</h5>
<ol>
<li>
In the left pane, click on the ServiceStopped consumer.</li>
<li>
In the right pane, click on the ServiceStoppedEvent filter.</li>
<li>
Click the <b>Register</b> button.</li>
</ol>
<p>
The Event Registration screen now looks like this:</p>
<p>
<img src="ssreg.gif" border=0></p>
<p>
<b>Note</b>&nbsp;&nbsp;The name of the <b>Register</b> button now changes to <b>Unregister</b>. Click it to unregister the selected consumer and filter.</p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To test the ServiceStopped consumer-filter binding</h5>
<ol>
<li>
In Control Panel, open the Services program.</li>
<li>
Find a running service that can be safely stopped.<p>
—or—
</li>
<li>
Find an unstarted service and start it.</li>
<li>
Stop the service.<p>
The <a href="toolsguide_7v02.htm">Event Viewer</a> appears, notifying you of the event:
</li>
</ol>
<p>
<img src="ssev.gif" border=0></p>
<p>
As shown in the <a href="toolsguide_7v02.htm">Event Viewer</a>, this event is an instance of <a href="hmmclass_4h9w.htm"><b>__InstanceModificationEvent</b></a>. </p>
<p>
The query in the ServiceStoppedEvent filter uses no timers. The two other example filters do. </p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To register the TimerEvent consumer for an absolute event</h5>
<p>
Absolute events occur only once, at a particular date and time.
<ol>
<li>
From the drop-down list box, choose <b>Timers</b>.</li>
<li>
Expand the inheritance tree under <b>__AbsoluteTimerInstruction</b>, then click AbsTimer to open the <b>Edit Instance Properties</b> dialog box.</li>
<li>
Click on the Value field of the EventDateTime property to open the <b>Time</b> dialog box.</li>
<li>
Set the time to a minute or two in the future, and click OK.</li>
<li>
From the drop-down list box, choose <b>Consumers</b>. </li>
<li>
In the left pane, expand the consumer inheritance tree and click on the TimerEvent consumer.</li>
<li>
In the right pane, click on AbsTimerFilter.</li>
<li>
Click the <b>Register</b> button.<p>
When you reach the set time, the <a href="toolsguide_7v02.htm">Event Viewer</a> appears, showing the timer event generated at the set time:
</li>
</ol>
<p>
<img src="evabs.gif" border=0></p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To register the TimerEvent consumer for an interval event</h5>
<p>
Interval events occur at regularly occurring intervals.
<ol>
<li>
From the drop-down list box, choose <b>Consumers</b>. </li>
<li>
In the left pane, expand the consumer inheritance tree, and click on the TimerEvent consumer.</li>
<li>
In the right pane, click on IntervalTimerFilter.</li>
<li>
Click the <b>Register</b> button.<p>
The <a href="toolsguide_7v02.htm">Event Viewer</a> appears, showing the timer event generated every five seconds:
</li>
</ol>
<p>
<img src="evvwscrn.gif" border=0></p>
<p>
<a href="toolsguide_2vub.htm">Viewing Class Properties</a></p>
<p>
<a href="toolsguide_8obp.htm">Creating an Event Consumer Instance</a></p>
<p>
<a href="toolsguide_58yt.htm">Creating an Event Filter Instance</a></p>
<p>
<a href="toolsguide_3pr9.htm">Creating an Event Timer Instance</a></p>
<h4>See Also</h4>
<p>
<a href="hmmclass_6msn.htm"><b>__FilterToConsumerBinding</b></a></p>
<p>
<a href="event_9vsi.htm">Binding a Logical Consumer to an Event Filter</a></p>
<p>&nbsp;</p></body>
</HTML>
