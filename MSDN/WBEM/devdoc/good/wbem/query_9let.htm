<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SELECT Statement GROUP BY Clause</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_hmm_select_statement_group_by_clause"></a>SELECT Statement GROUP BY Clause</h3>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The GROUP BY clause is used to reduce the flow of notifications by combining several notifications into a single aggregate notification. The aggregate notification is an instance of the system class <a href="hmmclass_6wdw.htm"><b>__AggregateEvent</b></a>, a class that contains two properties: <b>Representative</b> and <b>NumberOfEvents</b>. <b>Representative</b> is an object property that contains the event instance, while <b>NumberOfEvents</b> stores the number of events that were combined to form the single aggregate event. </p>
<p>
The GROUP BY clause can be placed anywhere after the WHERE clause as is shown in the following syntax:</p>
<pre><code>select &lt;property_list&gt; from &lt;class&gt;<i> </i>&lt;where_clause&gt; 
        GROUP BY property_list
 </code></pre>
<p>
The property list that follows the BY keyword is a comma-delimited list of properties that are included in the event class. </p>
<p>
For example, the following statement requests notifications about instance modification events reporting changes to <b>Win32_LogicalDisk</b> instances. CIMOM groups all events that occur for a particular drive letter and sends one notification for each group. The notification is an instance of the <b>__AggregateEvent</b> class:</p>
<pre><code>select * from __InstanceModificationEvent 
    where TargetInstance isa Win32_LogicalDisk
    group by DriveLetter
 </code></pre>
<p>
Without the GROUP BY clause, the aggregate event would not provide any meaningful information about drive letters. Without the WITHIN clause, the consumer runs the potential risk of being flooded with notifications. Combining the WITHIN and GROUP BY clauses simplies the processing of event notifications and reduces excessive traffic. </p>
<p>
Event providers implement the following tasks to support aggregated event notifications:
<ol>
<li>
Start a clock at the next event.</li>
<li>
Aggregate any new events within the time interval in the WITHIN<b> </b>clause.</li>
<li>
When the interval expires, deliver an aggregate event.</li>
<li>
Restart the clock and repeat with steps 2 and 3. </li>
</ol>
<p>&nbsp;</p></body>
</HTML>
