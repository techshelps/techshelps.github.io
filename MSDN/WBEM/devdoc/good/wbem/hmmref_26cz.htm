<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IWbemClassObject::SpawnDerivedClass</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_hmm_iwbemclassobject_spawnderivedclass"></a>IWbemClassObject::SpawnDerivedClass</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Use the <b>IWbemClassObject::SpawnDerivedClass</b> method to create a new derived class object from the current object. The current object must be a class definition that becomes the superclass of the spawned object.</p>
<pre><code><b>HRESULT IWbemClassObject::SpawnDerivedClass(
  [in] Long</b><i> lFlags</i><b>,</b>
<b>  [out] IWbemClassObject</b><i> **ppNewClass</i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lFlags</i></dt>
<dd>
Reserved. It must be zero.</dd>
<dt>
<i>ppNewClass</i></dt>
<dd>
Must not be NULL. This receives the pointer to the new class definition object. The caller must invoke <a href="hmmref_9vhh.htm"><b>IWbemClassObject::Release</b></a> when the object is no longer required, typically after you have invoked <a href="hmmref_9j5f.htm"><b>IWbemServices::PutClass</b></a> to write the class definition. On error, a new object is not<i> </i>returned, and <i>ppNewClass </i>is set to point to NULL.
</dd>
</dl>
<h4>Return Values</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=50%>WBEM_E_FAILED</td>
<td width=50%>General failure.</td>
</tr>
<tr valign=top>
<td width=50%>WBEM_E_ILLEGAL_OPERATION</td>
<td width=50%>An illegal operation was requested, such as spawning a class from an instance.</td>
</tr>
<tr valign=top>
<td width=50%>WBEM_E_INCOMPLETE_CLASS</td>
<td width=50%>The source class was not completely defined or registered with CIMOM, so a new derived class is not permitted.</td>
</tr>
<tr valign=top>
<td width=50%>WBEM_E_INVALID_PARAMETER</td>
<td width=50%><i>ppNewClass</i> is NULL.</td>
</tr>
<tr valign=top>
<td width=50%>WBEM_E_OUT_OF_MEMORY</td>
<td width=50%>There was not enough memory to complete the operation.</td>
</tr>
<tr valign=top>
<td width=50%>WBEM_NO_ERROR</td>
<td width=50%>Success.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
The new object returned in <i>ppNewClass</i> automatically becomes a subclass of the current object. This behavior cannot be overridden. There is no other method by which derived classes can be created.</p>
<p>
You cannot create a derived class from a class that is local to your own client process. The base class must be created and registered with CIMOM, and then retrieved using <a href="hmmref_15bo.htm"><b>IWbemServices::GetObject</b></a> before this method can be used to create a derived class. To create a class hierarchy, you must create the initial class with <a href="hmmref_9j5f.htm"><b>IWbemServices::PutClass</b></a>, retrieve it using <b>IWbemServices::GetObject</b>, and use the retrieved object to create the newly derived class. Then, this new derived class must be created using <b>IWbemServices::PutClass</b>. To create other derived classes, you must call <b>IWbemServices::GetObject</b> , then call <b>IWbemClassObject::SpawnDerivedClass</b>, and so on, in a cycle for each new derivation level. You must follow this procedure in order to prevent version errors and concurrency conflicts. See <a href="mof_750z.htm">Class Creation</a> to create a class with no parent.</p>
<h4>See Also</h4>
<p>
<a href="hmmref_15bo.htm"><b>IWbemServices::GetObject</b></a>, <a href="hmmref_9j5f.htm"><b>IWbemServices::PutClass</b></a></p>
<p>&nbsp;</p></body>
</HTML>
