<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>COM APIs</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_hmm_com_apis"></a>COM APIs</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The Common Information Model Object Manager (CIMOM) programmer's reference provides the application programming interface (API) definitions for the Web-Based Enterprise Management (WBEM) Win32® Component Object Model (COM). This programmer's reference describes the communication link to CIMOM; these APIs enable you to access CIMOM services. The reference provides information for advanced system administrators, as well as developers who are writing client and provider applications.</p>
<p class=indent1>
<b>Note</b>&nbsp;&nbsp;Microsoft only supports WBEM C++ development using Microsoft Visual C++ version 5.0; However, other compilers such as Borland, Watcom, etc. can easily be used. </p>
<p>
Each of the many different CIMOM objects inherits from an interface that is ultimately inherited from <b>IUnknown</b>. COM dictates how object implementers, or interfaces, handle tasks such as memory management, parameter management, and multithreading. By conforming to this model, an interface adheres to a contract as specified by the interfaces included in the object.</p>
<p>
CIMOM is accessed through the following COM interfaces specific to WBEM:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=37%>WBEM COM Interfaces</th>
<th align=left width=63%>Description</th>
</tr>
<tr valign=top>
<td width=37%><a href="hmmref_2px0.htm"><b>IEnumWbemClassObject</b></a></td>
<td width=63%>This interface is an enumerator that works with objects of type <b>IWbemClassObject</b>. It is similar to standard COM enumerators, such as <b>IEnumVariant</b>.</td>
</tr>
<tr valign=top>
<td width=37%><a href="hmmref_30qc.htm"><b>IWbemCallResult</b></a></td>
<td width=63%>This interface is optionally used to query for the result of <a href="progintro_3nxj.htm">semisynchronous calls</a>.</td>
</tr>
<tr valign=top>
<td width=37%><a href="hmmref_0984.htm"><b>IWbemClassObject</b></a></td>
<td width=63%>This interface contains and manipulates both class definitions and class object instances. Users do not implement this interface; the implementation is provided.</td>
</tr>
<tr valign=top>
<td width=37%><a href="hmmref_3438.htm"><b>IWbemContext</b></a></td>
<td width=63%>This interface is used optionally to provide additional context information along with the other WBEM calls.</td>
</tr>
<tr valign=top>
<td width=37%><a href="hmmref_0fg2.htm"><b>IWbemEventConsumerProvider</b></a></td>
<td width=63%>This interface is used to initiate communication with a consumer provider.</td>
</tr>
<tr valign=top>
<td width=37%><a href="hmmref_5auq.htm"><b>IWbemEventProvider</b></a></td>
<td width=63%>This interface is used to initiate communication with a provider.</td>
</tr>
<tr valign=top>
<td width=37%><a href="hmmref_34a3.htm"><b>IWbemEventProviderQuerySink</b></a></td>
<td width=63%>This interface is optionally implemented by event providers that expose what kinds of event query filters are currently active in order to optimize performance.</td>
</tr>
<tr valign=top>
<td width=37%></td>
<td width=63%></td>
</tr>
<tr valign=top>
<td width=37%><a href="hmmref_414i.htm"><b>IWbemLocator</b></a></td>
<td width=63%>This interface obtains the initial <b>IWbemServices</b> pointer to CIMOM on a particular host machine.</td>
</tr>
<tr valign=top>
<td width=37%></td>
<td width=63%></td>
</tr>
<tr valign=top>
<td width=37%><a href="hmmref_671u.htm"><b>IWbemPropertyProvider</b></a></td>
<td width=63%>This interface is implemented only by dynamic property providers, which need to expose their data sources at the granularity of properties rather than instances.</td>
</tr>
<tr valign=top>
<td width=37%><a href="hmmref_9rjo.htm"><b>IWbemProviderInit</b></a></td>
<td width=63%>This interface is used to initialize all provider types.</td>
</tr>
<tr valign=top>
<td width=37%><a href="hmmref_8qpg.htm"><b>IWbemQualifierSet</b></a></td>
<td width=63%>This interface enables WBEM clients to read or modify qualifiers on properties or entire objects. Users do not implement this interface; the implementation is provided.</td>
</tr>
<tr valign=top>
<td width=37%><a href="hmmref_9bxv.htm"><b>IWbemServices</b></a></td>
<td width=63%>This is the primary CIMOM interface. It provides management services to client processes and to other providers.</td>
</tr>
<tr valign=top>
<td width=37%><a href="hmmref_2l7v.htm"><b>IWbemUnboundObjectSink</b></a></td>
<td width=63%>This interface is implemented by event consumers.  It is a simple sink interface which accepts delivery of event objects.</td>
</tr>
</table><br>
<p>
The Microsoft® Platform SDK documentation includes a comprehensive discussion of the rules for implementing objects that conform to the COM. These rules address how to:
<ul>
<li>
Design interfaces and objects.</li>
<li>
Implement <b>IUnknown</b>.</li>
<li>
Manage memory.</li>
<li>
Handle reference counting.</li>
</ul>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
