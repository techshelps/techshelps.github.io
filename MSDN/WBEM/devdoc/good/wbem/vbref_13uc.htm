<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DWbemClassObject.Put</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_hmm_dwbemclassobject.put"></a>DWbemClassObject.Put</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>DWbemClassObject.Put</b> method sets a named property to a new value. This method always overwrites the current value with the new one.</p>
<pre><code><b>DWbemClassObject.Put(
  [in] </b><i>Name <b> </b></i><b>As<i> </i>String, </b>
<b>  [in] </b><i>lFlags <b> </b></i><b>As<i> </i>Long,</b>
<b>  [in] </b><i>pVal <b> </b></i><b>As<i> </i>VARIANT,</b>
<b>  [in] </b><i>vtType <b> </b></i><b>As<i> </i>Long</b><i> </i>
<b>) As Long</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>Name</i></dt>
<dd>
String that contains the name of the property to be set. This cannot be <b>vbNullString</b>.</dd>
<dt>
<i>lFlags</i></dt>
<dd>
Reserved. It must be zero.</dd>
<dt>
<i>pVal</i></dt>
<dd>
<b>VARIANT</b> which becomes the new property value. If <i>pVal</i> is <b>NULL</b>, the property is set to <b>NULL</b>.

<p>
<b>Note</b>&nbsp;&nbsp;

<p>
If <i>pVal</i> is <b>NULL</b>, the type of the property is inferred from the <i>vtType</i> parameter.


</dd>
<dt>
<i>vtType</i></dt>
<dd>
Use this parameter only when <i>pVal</i> is <b>NULL</b>. In such a case, the <i>vtType</i> parameter specifies a COM type of the property. In every other case, <i>vtType</i> must be zero. <i>vtType</i> must also be zero whenever the underlying object is an instance (even if <i>pVal</i> is <b>NULL</b>), since the type of the property is fixed and cannot be changed. In other words, <i>vtType</i> is used only if <i>pVal</i> is <b>NULL</b>, and the underlying object is a class.
</dd>
</dl>
<h4>Return Values</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=57%>WBEM_E_FAILED</td>
<td width=43%>Unspecified error.</td>
</tr>
<tr valign=top>
<td width=57%>WBEM_E_INVALID_PARAMETER</td>
<td width=43%>An invalid parameter was specified, or the namespace could not be parsed.</td>
</tr>
<tr valign=top>
<td width=57%>WBEM_E_INVALID_PROPERTY_TYPE</td>
<td width=43%>Property type is not recognized.</td>
</tr>
<tr valign=top>
<td width=57%>WBEM_E_OUT_OF_MEMORY</td>
<td width=43%>There was not enough memory to complete the operation.</td>
</tr>
<tr valign=top>
<td width=57%>WBEM_E_TYPE_MISMATCH</td>
<td width=43%>For instances, this error code indicates that the <i>pVal</i> parameter is a <b>VARIANT</b> of an incorrect type for the property. For class definitions, this returns if the property already exists in the parent class, and the new COM type is different from the old COM type. Such properties are read-only for the derived class.</td>
</tr>
<tr valign=top>
<td width=57%>WBEM_NO_ERROR</td>
<td width=43%>Success.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
If the property exists in the superclass, its default value is changed unless it is a type mismatch. If the property does not exist and it is not a type mismatch, the property is created.</p>
<p>
When you execute this method on an instance, there will always be an overwrite. This is because the property always exists.</p>
<p>
When you create a new class, and the underlying type of the property is an object reference, a date/time string, or other special type, it might be necessary to modify the CIMTYPE qualifier for the property to show the special new class. When you modify properties of an instance, set the qualifiers to the correct values ahead of time.</p>
<p>
You can only write system properties when you create a new class. In that case, the name of the class you create is designated when you write it to the system property <a href="concepts_9kmr.htm"><b>__CLASS</b></a>.</p>
<h4>See Also</h4>
<p>
<a href="hmmclass_4o4l.htm">System Classes, Properties, and Qualifiers</a></p>
<p>&nbsp;</p></body>
</HTML>
