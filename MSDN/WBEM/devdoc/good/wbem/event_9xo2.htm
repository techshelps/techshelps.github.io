<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Registering as a Temporary Consumer</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_hmm_registering_as_a_temporary_consumer"></a>Registering as a Temporary Consumer</h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
One of the following <a href="hmmref_9bxv.htm"><b>IWbemServices</b></a> methods are called to register as a temporary event consumer:
<ul>
<li>
<a href="hmmref_65ix.htm"><b>ExecNotificationQuery</b></a>, if the consumer relies on polling to receive events</li>
<li>
<a href="hmmref_3rkz.htm"><b>ExecNotificationQueryAsync</b></a>, if the consumer receives events asynchronously</li>
</ul>
<p>
Both of these methods require a query that specifies the event type and the conditions under which a notification is delivered. The asynchronous version of the call also specifies the sink, the object to receive the notifications as they arrive. The sink is an implementation of the <b>IWbemObjectSink</b> interface. </p>
<p>
Do not call <b>IWbemServices::ExecNotificationQueryAsync</b> multiple times with the same sink. Use a separate sink for each class of registered event. Having a dedicated sink simplifies processing and aids in maintenance, making it possible to cancel one registration without affecting the others. </p>
<p>
Temporary consumers that perform separate tasks after notification of a particular event type need to make separate calls to <b>ExecNotificationQuery</b> or <b>ExecNotificationQueryAsync</b> for each event type. For example, a consumer might be interested in instance modification events for a specific class of device and security violation events. The tasks to be performed upon receiving the instance modification event notification are much different than those to be performed upon receiving the security violation event. The consumer makes one call to the <b>IWbemServices</b> method of choice to register for the instance modification event and another call to register for the security violation event.</p>
<p>
Make each query as specific as possible. The goal of registration is to register to receive only wanted notifications. Receiving superfluous notifications wastes processing and delivery time and does not use CIMOM's filtering ability to its fullest potential.</p>
<p>&nbsp;</p></body>
</HTML>
