<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Declaring Instances</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_hmm_declaring_instances"></a>Declaring Instances</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
An instance is an object that is derived from a WBEM class. To declare the most basic instance of a class, use the <b>Instance of </b>keyword followed by the class name, curly braces, and a semi-colon:</p>
<pre><code>instance of ClassName
{</code></pre>
<p>
};</p>
<p>
All properties of the class are properties of each instance derived from the class. If the class is a derived class, instances inherit all of the properties belonging to both the derived class and its base class. </p>
<p>
Because properties are strongly typed, instances can not change the type of properties that they have inherited. The value of these properties, however, can be changed. By default, when a class assigns a default value to a property, that value is inherited along with the property. Instances can override that value by placing an assignment statement between the curly braces as follows:</p>
<pre><code>instance of ClassName
{
    InheritedProp = "value";
};
</code></pre>
<p>
Instances need not provide explicit values for properties unless the property is a key. Values for key properties must be explicitly set to enable the instance to be properly identified. <a href="hmmprop_4ld1.htm">System properties</a> cannot be set in the instance declaration; they are assigned values by the CIM Object Manager when the instance is created. </p>
<p>
Instances can also inherit optional tags known as qualifiers that are attached to the class or properties of the class. When the flag <b>ToInstance</b> is associated with a qualifier that is attached to a class, that qualifier is propagated to all of the instances of that class. <b>ToInstance</b> is one of several qualifier flags known as flavors. Flavors provide information about the use of the qualifier to which they are associated. For more information about qualifiers and qualifier flavors, see <a href="mof_5hmb.htm">Using Qualifiers</a> and <a href="mof_4uer.htm">Using Qualifier Flavors</a>.</p>
<p>
The following class and instance declarations show how an instance specifies data for properties defined by the class. The class defines three properties: a character string, a 32-bit signed integer, and a 32-bit unsigned integer. The instance provides data values for each of these properties.</p>
<pre><code>class MyClass 
{
    string   strProp;
    sint32   dwProp1;
    uint32       dwProp2;
}

instance of MyClass 
{
    strProp = "hello";
    dwProp1 = -1;
    dwProp2 = 0xffffffff;
}
</code></pre>
<p>&nbsp;</p></body>
</HTML>
