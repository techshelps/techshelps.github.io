<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Localizing a Class</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_hmm_localizing_a_class"></a>Localizing a Class</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
CIMOM supports the localization of the following WBEM class elements:
<ul>
<li>
Class names</li>
<li>
Property names</li>
<li>
Property values</li>
<li>
Descriptive help text</li>
<li>
Qualifier names</li>
<li>
Qualifer values</li>
</ul>
<p>
These elements can be localized whether a class was created using the Managed Object Format (MOF) language or the CIMOM API. </p>
<p>
There are three steps to localizing a system or custom class:
<ol>
<li>
Build a translation table by creating an instance of the system class <b>__Lexicon</b>. </li>
<li>
Bind the class or particular element to be localized to the translation table by attaching the <b>Lexicon</b> qualifier.</li>
<li>
Specify the original language of the class or particular element to be localized by attaching the <b>Locale</b> qualifier.</li>
</ol>
<p>
Some derived classes can use the same translation tables as their superclasses. If the derived class inherits all of its properties from the superclass and does not add new ones, it can use the translation table or the superclass. A derived class that introduces new properties must define its own translation table. </p>
<p>&nbsp;</p></body>
</HTML>
