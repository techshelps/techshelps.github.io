<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Windows NT Event Log Provider</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_hmm_windows_nt_event_log_provider"></a>Windows NT Event Log Provider</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The Windows NT Event Log Provider functions as both an instance provider and an event provider. As an instance provider, the Event Log Provider returns data that describes events that have been logged to the Windows NT Event Log service and stored as formatted records in a log file. Typically, three log files reside on every machine: application, system, and security; Windows NT 5.0 has a fourth for directory events. The format for events is defined in the Win32 <b>EVENTLOGRECORD</b> data structure. The Event Log Provider maps each field in the <b>EVENTLOGRECORD</b> to a property in an instance of the <b>Win32_NTLogEvent</b> class. The Event Log Provider supports the <b>Win32_NTLogEvent</b> class for describing Windows NT events. 
<dl>
<dt>
Windows NT events are written to a log file in the order in which they are received. Because log files are restricted to a particular size and events are frequently sent, the Event Log service must adopt a strategy for maintaining the size. Log files can either refuse to accept new events, remove events that are older than a specified age, or replace old events with new events as necessary. A log file can also be cleared or archived. The Event Log Provider also supports a class named Win32_NTLogFile which represents the Windows NT log. This class allows the overwrite policy and max file size to be set. Also allows the clear and archive operations to be performed.</dt>
</dl>
<p>
he Event Log instance Provider exposes an implementation of the <b>IWbemProviderInit</b> interface for initialization and implementations of the following methods of the <b>IWbemServices</b> interface:
<ul>
<li>
<b>GetObjectAsync</b></li>
<li>
<b>ExecMethodAsync</b></li>
<li>
<b>ExecQueryAsync</b></li>
<li>
<b>CreateInstanceEnumAsync</b></li>
<li>
<b>PutInstanceAsync</b></li>
<li>
<b>EnumInstanceAsync</b></li>
</ul>
<p>
Clients of the Event Log Provider can call either the asychronous or synchronous version of these methods. However, because all WBEM providers only implement the asynchronous <b>IWbemServices</b> methods, it is up to CIMOM to pass all client requests asynchronously. </p>
<p>
As an event provider, the Event Log Provider registers with the NT Event Log service to receive notifications of new NT events. For each notification that it receives, the Event Log Provider generates a corresponding WBEM event by creating an instance of the <b>__InstanceCreationEvent </b>class. The Event Log Provider embeds an instance of <b>Win32_NTLogEvent</b> class as the <b>TargetInstance</b> property with the data taken from the logged event. CIMOM sends the instance creation event to all consumers that have registered to receive events of type <b>__InstanceCreationEvent </b>with an embedded<b> Win32_NTLogEvent</b>. </p>
<p>
The <b>Win32_EventlogFile</b> and <b>Win32_NTLogEvent</b> classes and related association classes are included as part of the Win32 schema. The Event Log Provider is supported only in the \Root\Cimv2 namespace. 
<dl>
<dt>
The Event Log Provider consists of a COM server implemented as a dynamic link library (DLL) and a MOF file. The DLL is loaded by CIMOM when it is needed to handle a client request. The MOF file contains definitions of the classes that the Event Log Provider supports as an instance provider, an event provider, and for registration. However, because the Event Log Provider is automatically registered when the WBEM SDK is installed, registration by a client is unnecessary.</dt>
</dl>
<p>&nbsp;</p></body>
</HTML>
