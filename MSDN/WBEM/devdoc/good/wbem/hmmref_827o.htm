<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IWbemQualifierSet::Put</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_hmm_iwbemqualifierset_put"></a>IWbemQualifierSet::Put</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>IWbemQualifierSet::Put</b> method writes the named qualifier and value. If the qualifier does not exist, it is created. The new qualifier overwrites the previously existing value of the same name.</p>
<p>
In some cases, it is not possible to write the value of a qualifier if it was propagated from another object. Propagated qualifiers are generally read-only, but they can be overridden in some cases. See <a href="concepts_5mk3.htm">Qualifier Flavors</a>.</p>
<p>
When writing the <i>key </i>qualifier, it is not necessary to specify any flavors or propagation rules.</p>
<pre><code><b>HRESULT IWbemQualifierSet::Put(
  [in] BSTR</b><i> bstrName</i><b>,</b>
<b>  [in] VARIANT</b><i> *pVal</i><b>,</b>
<b>  [in] LONG</b><i> lFlavor</i><b>,</b>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>bstrName</i></dt>
<dd>
The name of the qualifier that is being written. This must point to a valid BSTR. The pointer is treated as read-only.</dd>
<dt>
<i>pVal</i></dt>
<dd>
Cannot be NULL. This must point to a valid <b>VARIANT</b> that contains the qualifier value to be written. The pointer is treated as read-only. It is the caller's responsibility to call <b>VariantClear</b> on this pointer after the value is no longer needed.
<p>
Only variants of type VT_I4, VT_R8, VT_BSTR, VT_BOOL and arrays of types VT_BSTR, VT_I4, VT_R8, and VT_BOOL are supported.
</dd>
<dt>
<i>lFlavor</i></dt>
<dd>
The desired qualifier flavor for this qualifier. See <a href="concepts_5mk3.htm">Qualifier Flavors</a>.</dd>
<dt>
Not required if the qualifier is the <i>key </i>qualifier.</dt>
<dd>
</dd>
</dl>
<h4>Return Values</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=56%>WBEM_E_CANNOT_BE_KEY</td>
<td width=44%>There was an illegal attempt to specify a key qualifier on a property that cannot be a key. The keys are specified in the class definition for an object, and cannot be altered on a per-instance basis.</td>
</tr>
<tr valign=top>
<td width=56%>WBEM_E_INVALID_PARAMETER</td>
<td width=44%>An invalid parameter was specified or the namespace could not be parsed.</td>
</tr>
<tr valign=top>
<td width=56%>WBEM_E_INVALID_QUALIFIER_TYPE</td>
<td width=44%>The <i>pVal</i> parameter is not of a legal qualifier type. </td>
</tr>
<tr valign=top>
<td width=56%>WBEM_E_OVERRIDE_NOT_ALLOWED</td>
<td width=44%>It is not possible to perform the <b>IWbemQualifierSet::Put</b> operation on this qualifier because the owning object does not permit overrides.</td>
</tr>
<tr valign=top>
<td width=56%>WBEM_NO_ERROR</td>
<td width=44%>Success.</td>
</tr>
</table><br>
<h4>See Also</h4>
<p>
<a href="concepts_5mk3.htm">Qualifier Flavors</a></p>
<p>&nbsp;</p></body>
</HTML>
