<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating and Modifying an Instance</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_hmm_creating_and_modifying_an_instance"></a>Creating and Modifying an Instance</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
To create an instance of an existing class, call <b>IWbemClassObject::SpawnInstance</b>. Every instance of a class inherits the properties that are defined with the class. Instances can differ from their classes only in the values of properties and qualifiers and in the number and types of qualifiers. Each instance can have its own set of qualifiers attached both to the instance itself and to any of the properties of the instance. These instance-specific qualifiers do not need to appear in the class declaration. </p>
<p>
To store the instance in the CIMOM repository, call <b>IWbemServices::PutInstance</b>. </p>
<p>
An instance can have instance-specific qualifiers and qualifiers that are attached to a property of the instance. These qualifiers do not have to appear in the class definition. An instance can override the value of a class qualifier only if the flavor of that qualifier was set to <b>EnableOverride</b>. See <a href="concepts_5mk3.htm">Qualifier Flavors</a> for more information about overriding qualifier values. </p>
<p>
An overridable qualifier can be modified or deleted by any instance of the class to which the qualifier is attached. Class qualifiers with flavors set to <b>DisableOverride</b> cannot be modified or deleted in any way. </p>
<p>
The following code creates an instance of the <b>Example</b> class:</p>
<pre><code>IWbemClassObject *pNewInstance = 0;
IWbemClassObject *pExampleClass = 0;

BSTR PathToClass = SysAllocString(L"Example");
HRESULT hRes = g_pNamespace-&gt;GetObject(PathToClass, 0, &amp;pExampleClass, 0);
SysFreeString(PathToClass);

if (hRes != 0)
   return;

pExampleClass-&gt;SpawnInstance(0, &amp;pNewInstance);
pExampleClass-&gt;Release();  // Don't need the class any more

VARIANT v;
VariantInit(&amp;v);

// Create the index value.
// =======================

V_VT(&amp;v) = VT_BSTR;

V_BSTR(&amp;v) = SysAllocString(L"IX100");
BSTR KeyProp = SysAllocString(L"Index");
pNewInstance-&gt;Put(KeyProp, 0, &amp;v);
SysFreeString(KeyProp);
VariantClear(&amp;v);

// Other properties acquire the 'default' value specified
// in the class definition unless otherwise modified here.

// Write the instance to CIMOM
hRes = g_pNamespace-&gt;PutInstance(pNewInstance, 0, 0);
pNewInstance-&gt;Release();
 </code></pre>
<p>
After its creation, this instance has a path of \\.\Root\Default:Example.Index="IX100." </p>
<p>
New properties are created initially with the VARIANT data type unless the <b>Cimtype</b> standard qualifier is attached to the property to specify its true type. For example, a date/time property should be created with the <b>Cimtype</b> qualifier set to the DATETIME type. When the <b>Cimtype</b> qualified is used, CIMOM checks that the qualifier specifies a type that is correct for the property. </p>
<p>
To establish references to other objects, attach the <b>Cimtype</b> qualifier containing a string of the following format to a property of type VT_BSTR:</p>
<pre><code>REF:ClassName</code></pre>
<p>
For example, if you require an object reference property that refers to <b>Win32LogicalDisk</b> instances, the <b>Cimtype</b> qualifier is attached to the property when you create your class definition.</p>
<pre><code>BSTR RefProp = SysAllocString(L"MyReferenceProperty");
  IWbemQualifierSet *pQual = 0;
  pNewClass-&gt;GetPropertyQualifierSet(RefProp, &amp;pQual);

  VARIANT v;
  VariantInit(&amp;v);
  V_VT(&amp;v) = VT_BSTR;
  V_BSTR(&amp;v) = SysAllocString(L"REF:Win32LogicalDisk");
  BSTR QualName = SysAllocString(L"CIMTYPE");
  pQual-&gt;Put(QualName, WBEM_FLAVOR_FLAG_PROPAGATE_TO_INSTANCE, &amp;v);
</code></pre>
<p>
However, if there is an embedded object, use the keyword <b>object</b> instead of <b>ref</b>. </p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
