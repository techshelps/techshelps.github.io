<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IEnumWbemClassObject::Next</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_hmm_ienumwbemclassobject_next"></a>IEnumWbemClassObject::Next</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>IEnumWbemClassObject::Next</b> method returns the next object or objects starting at the current cursor position. It then advances the cursor position by that many objects, so that subsequent calls return the subsequent objects.</p>
<pre><code><b>HRESULT Next(
  [in]</b> <b>long </b><i>lTimeOut,</i>
<b>  [in] ULONGARG </b><i>uCount</i><b>,</b>
<b>  [out, size_is(uCount), length_is(*puReturned)] IWbemClassObject **</b><i>ppObjects</i><b>,</b>
<b>  [out] ULONGARG *</b><i>puReturned</i>
<b>);</b>
<b> </b></code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lTimeout</i></dt>
<dd>
Specifies the maximum amount of time in milliseconds you must wait before objects are available. If you use the Win32® constant <b>INFINITE</b> (0xFFFFFFFF), the call blocks until objects are available. If you use the value zero, the call immediately returns with those objects that are waiting.</dd>
<dt>
<i>uCount</i></dt>
<dd>
The number of requested objects.</dd>
<dt>
<i>ppObjects</i></dt>
<dd>
A pointer to enough storage to hold the number of pointers specified by <i>uCount</i>. This storage must be supplied by the caller. It cannot be NULL, but must point to NULL. The caller must call <b>Release</b> on each of the objects using the pointers that are returned when they are no longer needed.</dd>
<dt>
<i>puReturned</i></dt>
<dd>
A pointer to a <b>ULONG</b> that receives the number of objects returned. This number can be less than the number requested in <i>uCount</i>. This pointer cannot be NULL.

<p>
<b>Note</b>&nbsp;&nbsp;The <a href="hmmref_6ino.htm"><b>IWbemClassObject::Next</b></a> method returns S_FALSE even when a nonzero number of objects is returned. S_OK is returned only when the number of objects returned matches the number requested in <i>uCount</i>. Therefore, loop termination logic should examine the <i>puReturned</i> value to ensure you have reached the end of the enumeration.

</dd>
</dl>
<h4>Return Values</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=53%>S_OK</td>
<td width=47%>The number of objects returned was the same as the number requested.</td>
</tr>
<tr valign=top>
<td width=53%>S_FALSE</td>
<td width=47%>The number of objects returned was less than the number requested.</td>
</tr>
<tr valign=top>
<td width=53%>WBEM_S_TIMEDOUT</td>
<td width=47%>A timeout occurred before you obtained all the objects.</td>
</tr>
</table><br>
<p>
On error, you can call the COM function <b>GetErrorInfo</b> to obtain more error information.</p>
<p>
In the following sample, since objects are only requested one at a time, checking the return code for S_OK is correct:</p>
<pre><code>void ListObjects(IEnumWbemClassObject *pEnum)
{
    pEnum-&gt;Reset();

    IWbemClassObject *pObject = 0;
    ULONG uReturned;

    while (pEnum-&gt;Next(INFINITE, 1, &amp;pObject, &amp;uReturned) == S_OK)
    {
        pObject-&gt;… // Access IWbemClassObject methods
        pObject-&gt;Release();
    }
}
 </code></pre>
<p>
In the next sample, <b>Next</b><i> </i>may return S_FALSE, even though some objects are returned, so checking <i>uReturned </i>is required:</p>
<pre><code>void ListObjects2(IEnumWbemClassObject *pEnum)
{
    pEnum-&gt;Reset();

    IWbemClassObject *paObjects[10];
    ULONG uReturned;
    HRESULT hRes;

    while (1)
    {
        hRes = pEnum-&gt;Next(INFINITE, 10, paObjects, &amp;uReturned);

        if (uReturned == 0)
            break;

        for (ULONG u = 0; u &lt; uReturned; u++)
        {
            IWbemClassObject *pObj = paObjects[u];


            // ... use the object

            pObj-&gt;Release();
        }

    }

    // examine hRes to see if the termination finished normally
}
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
