<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DIWbemServices.OpenNamespace</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_hmm_diwbemservices.opennamespace"></a>DIWbemServices.OpenNamespace</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>DIWbemServices.OpenNamespace</b> method provides the caller with a new <b>DIWbemServices</b> object that has the specified child namespace as its operating context. All operations through the new object, such as class or instance creation, only affect that namespace. The namespace must be a child namespace of the current object through which this method is called.</p>
<pre><code><b>DIWbemServices.OpenNamespace(
  [in]  </b><i>Namespace </i></code><b>As String<code>,               </code>
<code>  [in]  </code></b><code><i>lFlags </i><b>As</b><i> </i><b>Long,                  </b>
<b>  [in] </b><i>pCtx </i></code><b>As Object<code>,              </code>
<code>  [out, OPTIONAL] </code></b><i><code>ppWorkingNamespace </code></i><b>As Object<code>, </code></b><code> 
<b>  [out, OPTIONAL] </b><i>ppResult </i></code><b>As Object</b><code><i>  
</i><b>) As Long</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>Namespace</i></dt>
<dd>
The <a href="concepts_5lyr.htm">object path</a> to the target namespace. See <a href="concepts_8m2b.htm">Namespaces</a>. This namespace can only be relative to the current namespace associated with the <b>DIWbemServices</b> interface object. It cannot be an absolute path. This parameter cannot be <b>vbNullString</b>.</dd>
<dt>
<i>lFlags</i></dt>
<dd>
Reserved. It must be zero.</dd>
<dt>
<i>pCtx</i></dt>
<dd>
Reserved. It must be <b>NOTHING</b>.</dd>
<dt>
<i>ppWorkingNamespace</i></dt>
<dd>
Receives the object representing the new namespace context. If you specify this parameter, <i>ppResult</i> must be set to<b>NOTHING</b>.</dd>
<dt>
<i>ppResult</i></dt>
<dd>
Typically <b>NOTHING</b>. If not <b>NOTHING</b>, <i>ppWorkingNamespace </i>must be <b>NOTHING</b>. In this case, the parameter receives a new <b>DIWbemCallResult</b> object, and the call returns immediately. Then, you can periodically poll the <a href="vbref_6a0j.htm"><b>DIWbemCallResult.GetResultServices</b></a> method until the requested namespace becomes available. This parameter is set to <b>NOTHING</b> on error and a new object is not returned.

<p>
<b>IMPORTANT If you use this parameter, DCOM requires that ppResult must be set to NOTHING before you call the method.</b>&nbsp;&nbsp;
</dd>
</dl>
<h4>Return Values</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=50%>WBEM_E_ACCESS_DENIED</td>
<td width=50%>The user does not have permission to access the requested context.</td>
</tr>
<tr valign=top>
<td width=50%>WBEM_E_FAILED</td>
<td width=50%>Unspecified error.</td>
</tr>
<tr valign=top>
<td width=50%>WBEM_E_INVALID_NAMESPACE</td>
<td width=50%>The specified namespace does not exist.</td>
</tr>
<tr valign=top>
<td width=50%>WBEM_E_INVALID_PARAMETER</td>
<td width=50%>An invalid parameter was specified, or the namespace could not be parsed.</td>
</tr>
<tr valign=top>
<td width=50%>WBEM_E_OUT_OF_MEMORY</td>
<td width=50%>There was not enough memory to complete the operation.</td>
</tr>
<tr valign=top>
<td width=50%>WBEM_NO_ERROR</td>
<td width=50%>Success.</td>
</tr>
</table><br>
<p>
For more information on return values see <b>Visual Basic error handeling and return values</b> </p>
<h4>Remarks</h4>
<p>
<a href="vbref_0bea.htm">You can also use<b> DWbemLocator.ConnectServer</b></a> to open the same namespace. The only difference is that the <b>OpenNamespace</b> method allows you to place relative object paths in the <i>Namespace</i> parameter so you can open child namespaces recursively. <b>DWbemLocator.ConnectServer</b> requires a full object path. See <a href="concepts_5lyr.htm">Object Paths</a>.</p>
<p>
For example, if Root is the current namespace associated with the <b>DIWbemServices</b> interface object, using Default in the <i>Namespace</i> parameter yields a new object bound to the \Root\Default namespace.</p>
<h4>See Also</h4>
<p>
<b>Error Objects</b>, <a href="vbref_0bea.htm"><b>DWbemLocator.ConnectServer</b></a>, <a href="concepts_8m2b.htm">Namespaces</a></p>
<p>&nbsp;</p></body>
</HTML>
