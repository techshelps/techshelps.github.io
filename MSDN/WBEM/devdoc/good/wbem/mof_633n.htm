<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Aliases</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_hmm_using_aliases"></a>Using Aliases</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
An alias is a symbolic reference in either a class or instance declaration to an object located elsewhere in a MOF file. Alias names follow the same rules as instance and class names, except that they must begin with a dollar sign ($) to mark them as an alias. Underscores can appear in an alias name following the initial character. Aliases are typically used as shortcuts to lengthy object paths. </p>
<p>
To define an alias, add the phrase "as $AliasName" to the instance or class declaration:</p>
<pre><code>class MyClass as $MyClassAlias
{
}

instance of MyClass as $MyInstanceAlias
{
}
</code></pre>
<p>
The following examples illustrate how to use an alias as a symbolic reference to an object path. Two classes are declared to describe a disk: the Disk class for the drive letter and the DiskRef class for its path. An alias is defined for the Disk class instance and is used as the value for the PathToDisk property in the DiskRef instance. </p>
<pre><code>class Disk {
    [key]  string    DriveLetter;
};

class DiskRef 
{
    [key]  string    MyKey;
    Disk   ref       PathToDisk;
};

instance of Disk as $DiskAlias 
{
    DriveLetter = "c";
};

instance of DiskRef
{
    MyKey      =  "hello";
    PathToDisk = $DiskAlias;
}
</code></pre>
<p>
Aliases have scope only within the MOF file in which they are declared. They are used at compile time to make it easy to establish references and are not available programmatically. </p>
<p>
<b>Note</b>&nbsp;&nbsp;WBEM supports forward-referencing but not circular aliases.</p>
<p>&nbsp;</p></body>
</HTML>
