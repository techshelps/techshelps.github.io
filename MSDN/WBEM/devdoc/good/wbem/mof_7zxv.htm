<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MOF Object References</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_hmm_mof_object_references"></a>MOF Object References </h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
An object reference is a path to the location of an object. It can be either a fully qualified path to a server and namespace or a relative path to another object in the same namespace. Object references can be used as properties or parameters to methods. </p>
<p>
MOF supports the use of object references with the <b>ref</b> data type. Object references are implemented programmatically as strings. Using object references reduces transport time and encoding if the object already exists in its entirety within the CIM repository. </p>
<p>
MOF supports the concept of a weakly typed reference and a strongly typed reference. Both types map to the VT_BSTR Automation type. A weakly typed reference uses the <b>ref</b> data type with the <b>object</b> keyword whereas a strongly typed reference uses <b>ref</b> with the class name:</p>
<pre><code>class MyClass
{
    object ref RefToAnyClass;                // weakly typed
    ClassX ref RefToClassX;                    // strongly typed
}
</code></pre>
<p>
In the preceeding example, RefToAnyClass can be legally set to point to any class or instance while RefToClassX can only be set to point to objects of the class ClassX. This includes instances of ClassX as well as instances of any class derived from Class X.</p>
<p>
The following class definition shows how to include two object references: one to a Win32LogicalDisk object and the other to a generic object: </p>
<pre><code>Class MyClass
{
    sint32 MyMethod1 ([in] Win32LogicalDisk ref DiskRef);
    sint32 MyMethod2 ([in] object ref AnyObject);
}
</code></pre>
<p>
If the object to be referenced is located within the same MOF file, an alias can be used. For information on referencing another object in the same MOF file, see <a href="mof_633n.htm">Using Aliases</a>.</p>
<p>&nbsp;</p></body>
</HTML>
