<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SNMP Primitive Types</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_hmm_snmp_primitive_types"></a>SNMP Primitive Types</h3>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
SNMP primitive types map to CIM defined types. The following tables define the mapping where the SYNTAX clause explicitly refers to a primitive type.  </p>

<h4><a name="_msi_table_1_mapping_snmpv1_primitive_types"></a>Table 1: Mapping SNMPv1 Primitive Types</h4>
<table cellspacing=4 cols=7>
<tr valign=top>
<th align=left width=15%>MIB type</th>
<th align=left width=10%>Variant type </th>
<th align=left width=18%>Textual convention qualifier</th>
<th align=left width=19%>Encoding qualifier</th>
<th align=left width=18%>Object syntax qualifier</th>
<th align=left width=11%>Cimtype qualifier</th>
<th align=left width=9%>Default value</th>
</tr>
<tr valign=top>
<td width=15%>INTEGER</td>
<td width=10%>VT_I4</td>
<td width=18%>INTEGER</td>
<td width=19%>INTEGER</td>
<td width=18%>INTEGER</td>
<td width=11%>sint32</td>
<td width=9%>0</td>
</tr>
<tr valign=top>
<td width=15%>OCTET STRING</td>
<td width=10%>VT_BSTR</td>
<td width=18%>OCTETSTRING</td>
<td width=19%>OCTETSTRING</td>
<td width=18%>OCTETSTRING</td>
<td width=11%>string</td>
<td width=9%></td>
</tr>
<tr valign=top>
<td width=15%>OBJECT IDENTIFIER</td>
<td width=10%>VT_BSTR</td>
<td width=18%>OBJECTIDENTIFIER</td>
<td width=19%>OBJECTIDENTIFIER</td>
<td width=18%>OBJECTIDENTIFIER</td>
<td width=11%>string</td>
<td width=9%>0.0</td>
</tr>
<tr valign=top>
<td width=15%>NULL</td>
<td width=10%>VT_NULL</td>
<td width=18%>NULL</td>
<td width=19%>NULL</td>
<td width=18%>NULL</td>
<td width=11%>Not supported (1)</td>
<td width=9%>N/A</td>
</tr>
<tr valign=top>
<td width=15%>IpAddress</td>
<td width=10%>VT_BSTR</td>
<td width=18%>IpAddress</td>
<td width=19%>IpAddress</td>
<td width=18%>IpAddress</td>
<td width=11%>string</td>
<td width=9%>0.0.0.0</td>
</tr>
<tr valign=top>
<td width=15%>Counter</td>
<td width=10%>VT_I4</td>
<td width=18%>Counter</td>
<td width=19%>Counter</td>
<td width=18%>Counter</td>
<td width=11%>uint</td>
<td width=9%>0</td>
</tr>
<tr valign=top>
<td width=15%>Gauge</td>
<td width=10%>VT_I4</td>
<td width=18%>Gauge</td>
<td width=19%>Gauge</td>
<td width=18%>Gauge</td>
<td width=11%>string</td>
<td width=9%>0</td>
</tr>
<tr valign=top>
<td width=15%>TimeTicks</td>
<td width=10%>VT_I4</td>
<td width=18%>TimeTicks</td>
<td width=19%>TimeTicks</td>
<td width=18%>TimeTicks</td>
<td width=11%>uint32</td>
<td width=9%>0</td>
</tr>
<tr valign=top>
<td width=15%>Opaque</td>
<td width=10%>VT_BSTR</td>
<td width=18%>Opaque</td>
<td width=19%>Opaque</td>
<td width=18%>Opaque</td>
<td width=11%>string</td>
<td width=9%></td>
</tr>
<tr valign=top>
<td width=15%>NetworkAddress</td>
<td width=10%>VT_BSTR</td>
<td width=18%>NetworkAddress</td>
<td width=19%>NetworkAddress</td>
<td width=18%>NetworkAddress</td>
<td width=11%>string</td>
<td width=9%>0.0.0.0</td>
</tr>
</table><br>
<p>
(1) When the SYNTAX clause of the OBJECT-TYPE macro refers to NULL either explicitly or through a named type assignment, that OBJECT-TYPE macro is ignored. </p>

<h4><a name="_msi_table_2_mapping_snmpv2c_primitive_types"></a>Table 2: Mapping SNMPv2C Primitive Types</h4>
<table cellspacing=4 cols=7>
<tr valign=top>
<th align=left width=15%>MIB type</th>
<th align=left width=12%>Variant type </th>
<th align=left width=18%>Textual convention qualifier</th>
<th align=left width=19%>Encoding qualifier</th>
<th align=left width=18%>Object syntax qualifier</th>
<th align=left width=9%>Cimtype qualifier</th>
<th align=left width=9%>Default value</th>
</tr>
<tr valign=top>
<td width=15%>INTEGER</td>
<td width=12%>VT_I4</td>
<td width=18%>INTEGER</td>
<td width=19%>INTEGER</td>
<td width=18%>INTEGER</td>
<td width=9%>sint32</td>
<td width=9%>0</td>
</tr>
<tr valign=top>
<td width=15%>OCTET STRING</td>
<td width=12%>VT_BSTR</td>
<td width=18%>OCTETSTRING</td>
<td width=19%>OCTETSTRING</td>
<td width=18%>OCTETSTRING</td>
<td width=9%>string</td>
<td width=9%></td>
</tr>
<tr valign=top>
<td width=15%>OBJECT IDENTIFIER</td>
<td width=12%>VT_BSTR</td>
<td width=18%>OBJECTIDENTIFIER</td>
<td width=19%>OBJECTIDENTIFIER</td>
<td width=18%>OBJECTIDENTIFIER</td>
<td width=9%>string</td>
<td width=9%>0.0</td>
</tr>
<tr valign=top>
<td width=15%>IpAddress</td>
<td width=12%>VT_BSTR</td>
<td width=18%>IpAddress</td>
<td width=19%>IpAddress</td>
<td width=18%>IpAddress</td>
<td width=9%>string</td>
<td width=9%>0.0.0.0</td>
</tr>
<tr valign=top>
<td width=15%>Counter32</td>
<td width=12%>VT_I4</td>
<td width=18%>Counter32</td>
<td width=19%>Counter32</td>
<td width=18%>Counter32</td>
<td width=9%>uint32</td>
<td width=9%>0</td>
</tr>
<tr valign=top>
<td width=15%>Gauge32</td>
<td width=12%>VT_I4</td>
<td width=18%>Gauge32</td>
<td width=19%>Gauge32</td>
<td width=18%>Gauge32</td>
<td width=9%>uint32</td>
<td width=9%>0</td>
</tr>
<tr valign=top>
<td width=15%>Unsigned32</td>
<td width=12%>VT_I4</td>
<td width=18%>Unsigned32</td>
<td width=19%>Unsigned32</td>
<td width=18%>Unsigned32</td>
<td width=9%>uint32</td>
<td width=9%>0</td>
</tr>
<tr valign=top>
<td width=15%>Integer32</td>
<td width=12%>VT_I4</td>
<td width=18%>Integer32</td>
<td width=19%>Integer32</td>
<td width=18%>Integer32</td>
<td width=9%>sint32</td>
<td width=9%>0</td>
</tr>
<tr valign=top>
<td width=15%>Counter64</td>
<td width=12%>VT_BSTR</td>
<td width=18%>Counter64</td>
<td width=19%>Counter64</td>
<td width=18%>Counter64</td>
<td width=9%>uint64</td>
<td width=9%>0</td>
</tr>
<tr valign=top>
<td width=15%>TimeTicks</td>
<td width=12%>VT_I4</td>
<td width=18%>TimeTicks</td>
<td width=19%>TimeTicks</td>
<td width=18%>TimeTicks</td>
<td width=9%>uint32</td>
<td width=9%>0</td>
</tr>
<tr valign=top>
<td width=15%>Opaque</td>
<td width=12%>VT_BSTR</td>
<td width=18%>Opaque</td>
<td width=19%>Opaque</td>
<td width=18%>Opaque</td>
<td width=9%>string</td>
<td width=9%></td>
</tr>
</table><br>
<p>
The CIM named qualifier <b>textual_convention</b> defines the textual representation of the SYNTAX clause of the <b>OBJECT-TYPE</b> macro. </p>
<p>
The CIM named qualifier <b>object_syntax</b> defines the named type definition present within the SYNTAX clause of the <b>OBJECT-TYPE</b> macro. The <b>object_syntax</b> is copied verbatim from the SYNTAX clause of the <b>OBJECT-TYPE</b> macro.</p>
<p>
The CIM named qualifier <b>encoding</b> defines the SNMP type used when encoding SNMPv1 and SNMPv2C protocol frames.</p>
<p>&nbsp;</p></body>
</HTML>
