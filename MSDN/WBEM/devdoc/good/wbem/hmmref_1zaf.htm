<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IWbemCallResult::GetResultString</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_hmm_iwbemcallresult_getresultstring"></a>IWbemCallResult::GetResultString</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>IWbemCallResult::GetResultString</b> method returns the assigned object path of an instance newly created by <a href="hmmref_0sh1.htm"><b>IWbemServices::PutInstance</b></a>.</p>
<p class=indent1>
<b>Note</b>&nbsp;&nbsp;The call result object is primarily used when the <i>PutInstance </i>call is carried out by a provider and the client needs to know the object path (the values of the key properties) assigned the provider.&nbsp; For example, if the the <i>key </i>property to the class is a GUID and is assigned by the provider during the <i>PutInstance </i>operation, the client would have no way of knowing this GUID unless the provider was able to return it in this way.</p>
<pre><code><b>HRESULT GetResultString(
  [in] Long</b><i> lTimeout</i><b>,</b>
<b>  [out] BSTR </b><i>*pbstrResultString</i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lTimeout</i></dt>
<dd>
Specifies the maximum time in milliseconds you must wait for the call to return. If you use the Win32® constant <b>INFINITE</b> (0xFFFFFFFF), the call will block until the object path is available. If you use zero, the call immediately returns either the object path or a status code.</dd>
<dt>
<i>pbstrResultString</i></dt>
<dd>
Cannot be NULL. This parameter receives a pointer to the object path, which, in turn, leads to the newly created object. The returned string must be deallocated using the system call <b>SysFreeString</b><i>. </i>On error, a new string is not returned.
</dd>
</dl>
<h4>Return Values</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=53%>WBEM_NO_ERROR</td>
<td width=47%>The object path was retrieved.</td>
</tr>
<tr valign=top>
<td width=53%>WBEM_S_PENDING</td>
<td width=47%>The call has not yet completed.</td>
</tr>
<tr valign=top>
<td width=53%>WBEM_E_UNEXPECTED</td>
<td width=47%>An internal failure occurred.</td>
</tr>
<tr valign=top>
<td width=53%>WBEM_E_TRANSPORT_FAILURE</td>
<td width=47%>The remote connection to CIMOM has failed.</td>
</tr>
<tr valign=top>
<td width=53%>WBEM_E_ACCESS_DENIED</td>
<td width=47%>The caller attempted an unauthorized operation.</td>
</tr>
<tr valign=top>
<td width=53%>WBEM_E_INVALID_PARAMETER</td>
<td width=47%>An invalid parameter was specified, or the namespace could not be parsed.</td>
</tr>
</table><br>
<p>
On error, you can call the COM function <b>GetErrorInfo </b>to obtain more error information.</p>
<h4>See Also</h4>
<p>
<a href="hmmref_0sh1.htm"><b>IWbemServices::PutInstance</b></a></p>
<p>&nbsp;</p></body>
</HTML>
