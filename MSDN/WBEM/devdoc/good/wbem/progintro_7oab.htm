<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating a Base Class</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_hmm_creating_a_base_class"></a>Creating a Base Class </h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Classes can be created using the Managed Object Format (MOF) language or the CIMOM COM API. To create a class with MOF, see <a href="mof_750z.htm">Declaring Classes</a>. </p>
<p>
To create a class with the COM interfaces of the CIMOM API, use code similar to the following sample. This sample creates a class called <b>Example</b>. The <b>g_pNamespace</b> pointer is an <b>IWbemServices</b> pointer bound to the Root\Default namespace and obtained from <a href="hmmref_28qa.htm"><b>IWbemLocator::ConnectServer</b></a>. Some of the error-checking code is omitted for clarity:</p>
<pre><code>void CreateClass()
{
  IWbemClassObject *pNewClass = 0;
  HRESULT hRes = g_pNamespace-&gt;GetObject(0, 0, &amp;pNewClass, 0);
  VARIANT v;
  VariantInit(&amp;v);

  // Create the class name
  // =====================

  V_VT(&amp;v) = VT_BSTR;
  V_BSTR(&amp;v) = SysAllocString(L"Example");
  BSTR Class = SysAllocString(L"__CLASS");
  pNewClass-&gt;Put(Class, 0, &amp;v);
  SysFreeString(Class);
  VariantClear(&amp;v);

  // Create the key property
  // =======================

  V_VT(&amp;v) = VT_BSTR;
  V_BSTR(&amp;v) = SysAllocString(L"&lt;default&gt;");
  BSTR KeyProp = SysAllocString(L"Index");
  pNewClass-&gt;Put(KeyProp, 0, &amp;v);
  VariantClear(&amp;v);
  SysFreeString(KeyProp);

  // Mark the "Index" property as the 'key'.
  // =======================================
  IWbemQualifierSet *pQual = 0;
  pNewClass-&gt;GetPropertyQualifierSet(KeyProp, &amp;pQual);

  V_VT(&amp;v) = VT_BOOL;
  V_BOOL(&amp;v) = VARIANT_TRUE;
  BSTR Key = SysAllocString(L"Key");

  pQual-&gt;Put(Key, 0, &amp;v);   // Qualifier flavors not required for KEY 
  SysFreeString(Key);

  pQual-&gt;Release();   // No longer need the qualifier set for "Index"  
  VariantClear(&amp;v);

  // Create another property
  // =======================
  V_VT(&amp;v) = VT_BSTR;
  V_BSTR(&amp;v) = SysAllocString(L"&lt;default&gt;");
  BSTR OtherProp = SysAllocString(L"OtherInfo");
  pNewClass-&gt;Put(OtherProp, 0, &amp;v, NULL);
  SysFreeString(OtherProp);
  VariantClear(&amp;v);

  // Register the class with CIMOM
  // ============================
  hRes = g_pNamespace-&gt;PutClass(pNewClass, 0, 0);
  pNewClass-&gt;Release();
}</code></pre>
<p>
<b>Note</b>&nbsp;&nbsp;The class name is specified by setting the system property <b>__CLASS</b> to <b>Example</b>. Because properties marked as keys or indexes cannot be changed after a class has been created, it is important to specify key and index properties by calling <b>IWbemServices::PutClass</b> or <b>IWbemServices::PutClassAsync</b> before creating the class. </p>
<p>&nbsp;</p></body>
</HTML>
