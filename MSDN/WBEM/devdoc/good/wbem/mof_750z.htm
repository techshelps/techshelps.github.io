<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Declaring Classes</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_hmm_declaring_classes"></a>Declaring Classes</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The MOF language can be used to define either new base classes and classes that derive from existing classes. To declare the most basic class, use the <b>Class</b> keyword with the name of your new class followed by a pair of curly braces and a semi-colon:</p>
<pre><code>class ClassName
{
};
</code></pre>
<p>
Class names must start with a letter and never an underscore. WBEM only allows system classes and system properties to start with an underscore. All remaining characters must be letters, digits, or underscores. WBEM recommends that you use a two-part name joined by an underscore. Specify your vendor name as the first part and a descriptive class name for the second part. For example, <code>Acme_LogicalDisk</code> describes the LogicalDisk class manufactured by Acme. </p>
<p>
Most classes include properties to describe the data of the class. To declare a property, include the property's data type, name, and an optional default value between the curly braces as follows:</p>
<pre><code>class MyClass 
{
    string   strProp;
    sint32   dwProp1 = 21;
    uint32       dwProp2;
}
</code></pre>
<p>
The MyClass class has three properties: a character string, a 32-bit signed integer, and a 32-bit unsigned integer. As an option, a property can be assigned an initial value in the class declaration. Instances of a class inherit all of the properties of the class and any initial values. However, each instance can choose whether to accept these default values or override them with alternate values. </p>
<p>
Methods are declared much like properties. The following sample illustrates how to declare a class that includes two methods: one that returns a 32-bit integer and another that has no return value. The VOID keyword can be used to indicate a method that does not have a return value. </p>
<pre><code>class MyClass
{
    sint32  Method1 ();
    void    Method2 ([in] sint32 InParam);
};
</code></pre>
<p>
Class definitions can be more complicated, including such MOF features as <a href="mof_633n.htm">aliases</a> and <a href="mof_5hmb.htm">qualifiers</a>. Default values can be assigned to properties and qualifiers using one of the <a href="mof_1u0j.htm">MOF data types</a>.</p>
<p>&nbsp;</p></body>
</HTML>
