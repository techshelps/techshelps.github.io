<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Object Paths to Instances</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_hmm_object_paths_to_instances"></a>Object Paths to Instances</h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The syntax for an object path to an instance with a single key property is as follows:</p>
<pre><code>&lt;server&gt;&lt;namespace&gt;:&lt;classname&gt;.&lt;key property&gt;=&lt;key&gt;
</code></pre>
<p>
For an instance that includes multiple key properties, the syntax is:</p>
<pre><code>&lt;server&gt;&lt;namespace&gt;:&lt;classname&gt;.&lt;key property&gt;=&lt;key&gt;,
                                    &lt;keyproperty&gt;=&lt;key&gt;, etc...
</code></pre>
<p>
The following table describes the items in the object path syntax:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Object path syntax item</th>
<th align=left width=52%>Description</th>
</tr>
<tr valign=top>
<td width=48%>&lt;server&gt;</td>
<td width=52%>A double leading backslash followed by the network name of the machine.</td>
</tr>
<tr valign=top>
<td width=48%>&lt;namespace&gt;</td>
<td width=52%>Object path to the appropriate namespace on the server specified by &lt;server&gt;.</td>
</tr>
<tr valign=top>
<td width=48%>&lt;classname&gt;</td>
<td width=52%>Relative object path to the instance within the namespace.</td>
</tr>
<tr valign=top>
<td width=48%>&lt;key property&gt;</td>
<td width=52%>Name of the property that serves as the key for the instance.</td>
</tr>
<tr valign=top>
<td width=48%>&lt;key&gt;</td>
<td width=52%>Value of the key property.</td>
</tr>
</table><br>
<p>
When accessing an instance that resides on the current server and in the current namespace, all that is necessary is the classname and key. For example, the following object paths point to single instances in the current namespace on the current server:</p>
<pre><code>LogicalDisk="E:"  

    ComPort=2 
 </code></pre>
<p>
To retrieve a particular instance, use code similar to the following sample. The call to <b>SysAllocString</b> allocates and initializes the character string for the object path.The call to <b>IWbemServices::GetObject</b> retrieves the instance and places it in the contents of the <i>pComPort</i> parameter. </p>
<pre><code>BSTR Path = SysAllocString(L"ComPort=2");    
    IWbemClassObject *pComPort = 0;
    pWbemSvcs-&gt;GetObject(Path, 0, 0, &amp;pComPort, 0);
 </code></pre>
<p>
For instances of classes that specify multiple properties as the key, there is no implied ordering of properties that make up the key. It is necessary to specify the value of each of the properties in the object path. For example, assume that the class <b>MyClass2</b> has a compound key consisting of an integer property <b>IntVal</b> and a string property <b>StrVal</b>. The following object paths show two different ways to identify the same instance of <b>MyClass2</b>:</p>
<pre><code>"MyClass.IntVal=33,StrVal=\"AAA\""
    "MyClass.StrVal=\"AAA\",IntVal=33"
 </code></pre>
<p>
Notice that because of the embedded quotes, the escape character must be used, as in a C-language or Microsoft® Visual C++® program.</p>
<p>
Object paths to instances are used in calls to:
<ul>
<li>
<b>IWbemServices::DeleteInstance</b> and <b>IWbemServices::DeleteInstanceAsync</b> to remove a particular instance.</li>
<li>
<b>IWbemCallResult::GetResultString</b> to retrieve the path to an instance that has been newly added to the CIMOM repository. </li>
<li>
<b>IWbemServices::GetObject</b> and<b> IWbemServices::GetObjectAsync</b> to retrieve a particular instance.</li>
</ul>
<p>
<b>Note</b>&nbsp;&nbsp;Only decimal integers of type VT_I4, Booleans of type VT_BOOL, and strings of type VT_BSTR can act as keys or parts of compound keys. Other key types, including arrays, are not permitted. Within the object path string, only decimal values are recognized as numeric portions of keys. Escaped quotes are permitted as part of an object path if embedded quotes are required.</p>
<p>&nbsp;</p></body>
</HTML>
