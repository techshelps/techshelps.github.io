<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Textual Conventions for SNMPv1 and SNMPv2C</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_hmm_textual_conventions_for_snmpv1_and_snmpv2c"></a>Textual Conventions for SNMPv1 and SNMPv2C</h3>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
SNMP textual conventions map to CIM defined types. The following table defines the mapping where the SYNTAX clause explicitly refers to a textual convention or refers to an implied textual convention.  </p>

<h4><a name="_msi_table_3_mapping_snmpv1_and_snmpv2c_textual_conventions"></a>Table 3: Mapping SNMPv1 and SNMPv2C Textual Conventions</h4>
<table cellspacing=4 cols=7>
<tr valign=top>
<th align=left width=15%>Textual convention</th>
<th align=left width=10%>Variant type</th>
<th align=left width=17%>Textual convention qualifier</th>
<th align=left width=14%>Encoding qualifier</th>
<th align=left width=17%>Object syntax qualifier</th>
<th align=left width=10%>Cimtype qualifier</th>
<th align=left width=17%>Default value</th>
</tr>
<tr valign=top>
<td width=15%>DateAndTime</td>
<td width=10%>VT_BSTR</td>
<td width=17%>DateAndTime</td>
<td width=14%>OCTETSTRING</td>
<td width=17%>DateAndTime</td>
<td width=10%>string</td>
<td width=17%>0-0-0,0:0:0.0,+0:0</td>
</tr>
<tr valign=top>
<td width=15%>Displaystring</td>
<td width=10%>VT_BSTR</td>
<td width=17%>Displaystring</td>
<td width=14%>OCTETSTRING</td>
<td width=17%>Displaystring</td>
<td width=10%>string</td>
<td width=17%></td>
</tr>
<tr valign=top>
<td width=15%>MacAddress</td>
<td width=10%>VT_BSTR</td>
<td width=17%>MacAddress</td>
<td width=14%>OCTETSTRING</td>
<td width=17%>MacAddress</td>
<td width=10%>string</td>
<td width=17%>00:00:00:00:00:00</td>
</tr>
<tr valign=top>
<td width=15%>PhysAddress</td>
<td width=10%>VT_BSTR</td>
<td width=17%>PhysAddress</td>
<td width=14%>OCTETSTRING</td>
<td width=17%>PhysAddress</td>
<td width=10%>string</td>
<td width=17%></td>
</tr>
<tr valign=top>
<td width=15%>SnmpUDPAddress</td>
<td width=10%>VT_BSTR</td>
<td width=17%>SnmpUDPAddress</td>
<td width=14%>OCTETSTRING</td>
<td width=17%>SnmpUDPAddress</td>
<td width=10%>string</td>
<td width=17%>0.0.0.0/0</td>
</tr>
<tr valign=top>
<td width=15%>SnmpOSIAddress</td>
<td width=10%>VT_BSTR</td>
<td width=17%>SnmpOSIAddress</td>
<td width=14%>OCTETSTRING</td>
<td width=17%>SnmpOSIAddress</td>
<td width=10%>string</td>
<td width=17%>00/00</td>
</tr>
<tr valign=top>
<td width=15%>SnmpIPXAddress</td>
<td width=10%>VT_BSTR</td>
<td width=17%>SnmpIPXAddress</td>
<td width=14%>OCTETSTRING</td>
<td width=17%>SnmpIPXAddress</td>
<td width=10%>string</td>
<td width=17%>0.00:00:00:00:00:00.0</td>
</tr>
</table><br>
<p>
The CIM named qualifier <b>textual_convention</b> defines the textual representation of the SYNTAX clause of the <b>OBJECT-TYPE</b> macro. </p>
<p>
The CIM named qualifier <b>object_syntax</b> defines the named type definition present within the SYNTAX clause of the <b>OBJECT-TYPE</b> macro. The <b>object_syntax</b> is copied verbatim from the SYNTAX clause of the <b>OBJECT-TYPE</b> macro.</p>
<p>
The CIM named qualifier <b>encoding</b> defines the SNMP type used when encoding SNMPv1 and SNMPv2C protocol frames.</p>
<p>
For textual conventions not present within the preceding table, the CIM-defined variant type, <b>textual_convention</b> qualifier, <b>encoding</b> qualifier, <b>object_syntax</b> qualifier, and <b>CIMType</b> qualifier are mapped using the primitive type mapping table specified previously and the underlying primitive type, possibly generated through a type assignment hierarchy.</p>
<p>
The CIM named qualifier <b>display_hint</b> defines the DISPLAY-HINT clause present within a referenced SNMPv2C <b>TEXTUAL-CONVENTION</b> macro. Where the SYNTAX clause of the SNMPv2C <b>OBJECT-TYPE</b> macro references an SNMPv2C <b>TEXTUAL-CONVENTION</b> macro that contains a DISPLAY-HINT clause, the <b>display_hint</b> qualifier is set to the value of that DISPLAY-HINT clause. Where no reference is made to an SNMPv2C <b>TEXTUAL-CONVENTION</b> macro or no DISPLAY-HINT clause is present within the referenced SNMPv2C <b>TEXTUAL-CONVENTION</b> macro, the <b>display_hint</b> qualifier is not generated.</p>
<p>
<b>Example 1 (SNMPv1):</b></p>
<pre><code>myNamedType ::= DISPLAYSTRING (SIZE (0..127))

    myNamedProperty OBJECT-TYPE
    SYNTAX  myNamedType
    ACCESS read-only
    STATUS MANDATORY
    DESCRIPTION ""
</code></pre>
<p>
This SNMPv1 example generates the following CIM qualifiers:</p>
<pre><code>object_syntax("myNamedType"),
textual_convention("DISPLAYSTRING"),
encoding("OCTETSTRING"),
variable_length("0..127")
 </code></pre>
<p>
<b>Example 2 (SNMPv2C):</b></p>
<pre><code>myDisplaystring ::= TEXTUAL-CONVENTION
DISPLAY-HINT "255a"
STATUS current
DESCRIPTION "" 
SYNTAX OCTET STRING (SIZE (0..127))

myNamedProperty OBJECT-TYPE
SYNTAX  myDisplaystring
MAX-ACCESS read-only
STATUS current
DESCRIPTION ""
 </code></pre>
<p>
This SNMPv2C example generates the following CIM qualifiers:</p>
<pre><code>object_syntax("myDisplaystring"),
textual_convention("OCTETSTRING"),
encoding("OCTETSTRING"),
display_hint("255a"),
variable_length("0..127")
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
