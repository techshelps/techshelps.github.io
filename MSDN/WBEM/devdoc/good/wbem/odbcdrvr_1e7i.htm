<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ODBC Adapter Synchronous and Asynchronous Operation</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_hmm_odbc_adapter_synchronous_and_asynchronous_operation"></a>ODBC Adapter Synchronous and Asynchronous Operation</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
By default, the adapter operates in synchronous mode. That is, the adapter does not return control to a client application until the function call completes. </p>
<p>
However, the adapter also supports asynchronous operation. In ODBC, asynchronous processing is performed on a statement-by-statement basis. </p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To have a client application execute a statement asynchronously</h5>
<ol>
<li>
Call <b>SQLSetStmtOption</b> with the <b>SQL_ASYNC_ENABLE</b> option.</li>
<li>
Call the <b>ODBC</b> function. The adapter begins asynchronous operation and returns SQL_SQL_STILL_EXECUTING.</li>
<li>
Perform other operations and call other ODBC functions on different statement handles while the adapter is working. </li>
<li>
Optionally, the application can call the original function on the original statement handle to determine if the function has completed. If it has completed, the function returns with SQL_SUCCESS or SQL_SUCCESS_WITH_INFO. Otherwise, it returns with SQL_STILL_EXECUTING.</li>
</ol>
<p>
<b>Note</b>&nbsp;&nbsp;The ODBC adapter is a Common Information Model (CIM) client. Therefore, it has limited control over the duration of synchronous CIM calls, and this duration can be substantial. Applications may have to spawn a thread to implement ODBC functionality. This is especially true for all ODBC client applications designated for use with diverse ODBC data sources.</p>
<h4>See Also</h4>
<p>
<a href="odbcdrvr_9wdv.htm">ODBC Handles</a></p>
<p>&nbsp;</p></body>
</HTML>
