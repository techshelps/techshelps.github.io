<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Schema Associations</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_hmm_schema_associations"></a>Schema Associations</h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The ASSOCIATORS OF and REFERENCES OF statements can be used to query for schema associations in addition to querying for data associations. With data association queries, instances are returned. With schema association queries, names of classes are returned. For example, a schema query can be used to find all of the association classes defined in the schema that reference a source class. </p>
<p>
The syntax for the ASSOCIATORS OF and REFERENCES OF statements is the same for schema association queries as it is for data association queries with two exceptions:
<ul>
<li>
The source is a class rather than an instance.</li>
<li>
There is an additional keyword, <b>SchemaOnly</b>, which identifies the query as applying to a schema rather than to data.</li>
</ul>
<p>
The complete syntax of the ASSOCIATORS OF statement for a schema query is:</p>
<pre><code>associators of {SourceClass} where 
    AssocClass = AssocClassName
    ClassDefsOnly
    RequiredAssocQualifier = QualifierName
    RequiredQualifier = QualifierName
    ResultClass = ClassName
    ResultRole = PropertyName
    Role = PropertyName
    SchemaOnly
</code></pre>
<p>
The complete syntax of the REFERENCES OF statement for a schema query is:</p>
<pre><code>references of {SourceClass} where
    ClassDefsOnly
    ResultClass = ClassName
    Role = PropertyName
    RequiredQualifier = QualifierName
    SchemaOnly
</code></pre>
<p>
For example, the following query returns the <b>Protocol</b> and <b>Driver</b> classes, the two classes that refer to the source class:</p>
<pre><code>associators of {Adapter} where 
    SchemaOnly
</code></pre>
<p>
This next query returns only the <b>Driver</b> class because of the restriction placed by the <b>AssocClass</b> keyword:</p>
<pre><code>associators of {Adapter} where 
    AssocClass = AdapterDriver
    SchemaOnly
</code></pre>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
