<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MOF Embedded Objects</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_hmm_mof_embedded_objects"></a>MOF Embedded Objects </h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
MOF supports the use of objects fully embedded in class or instance declarations. Objects in this context refer to instances of another class. These objects can be declared as strongly typed or weakly typed, depending on whether a class name or the keyword <b>Object</b> is used with the declaration. Both types map to the VT_UNKNOWN type. The following class declaration illustrates how to declare strongly and weakly typed embedded objects:</p>
<pre><code>class MyClass
{
    EmbedClass    Object1;          // strong typed
    object            Object2;          // weakly typed
}
</code></pre>
<p>
The following examples show how to declare embedded objects within a class declaration:</p>
<pre><code>class Class1 
{ 
     [key] sint32 Class1Index;
};

class Class2 
{
    [key] sint32 Class2Index;
    Class1 EmbedObject1 = instance of Class1{Class1Index = 3;};
};

class Class3
{
    [key] sint32 Class3Index;
    Class2 EmbedObject2 = instance of Class2 {Class2Index = 4;};</code></pre>
<p>
};</p>
<p>
An embedded object can be an alias only if that object is a reference:</p>
<pre><code>Instance of MyClass as $A
{
    intval = 33;
}

Instance of AnotherClass2
{
    intval = 34;
    EmbeddedObject = $A;      
}
 </code></pre>
<p>
To initialize an embedded object, use the syntax for declaring an instance:</p>
<pre><code>Instance of AnotherClass
{
    intval = 33;
    EmbeddedObject = instance of MyClass { intval = 99; }
}
</code></pre>
<p>
Arrays of embedded objects are permitted. Because arrays can be weakly typed, they can be heterogeneous:</p>
<pre><code>Instance of SomeClass
{
    ObArray = { instance of MyClass {intval = 33; }, 
      instance of YourClass { stringval = "Hello"; } };
}
 </code></pre>
<p>
Explicit use of NULL for the default value of embedded objects and paths is allowed, both for initializers and declarations.</p>
<p>&nbsp;</p></body>
</HTML>
