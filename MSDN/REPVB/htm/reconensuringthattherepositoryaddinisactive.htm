<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Ensuring that the Repository Add-in Is Active</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="reconensuringthattherepositoryaddinisactive"></a>Ensuring that the Repository Add-in Is Active</h1>
<p>
By default, the Repository Add-in for Visual Basic is not active. Each Visual Basic user can choose to add the Repository Add-in to the list of active add-in modules. If your add-in module calls the Repository Add-in for Visual Basic, you must ensure that it is active before making those calls.</p>
<p>
There are two cases to consider:
<ul type=disc>
<li>
If your add-in module is loaded manually while Visual Basic is running, you can check immediately to see if the Repository Add-in is active.<br><br></li>
<li>
If your module is loaded as part of the Visual Basic initialization procedure, you must wait until Visual Basic fires the event indicating that all add-in modules have been loaded. Only then can you check whether the Repository Add-in is active.</li>
</ul>
<p>
Even if the Repository Add-in is active when your module starts, situations can arise that cause the Repository Add-in to shut down. If the Repository Add-in shuts down, it fires a Shutdown event during its shutdown processing. Your add-in module should register for this event.</p>
</BODY>
</HTML>
