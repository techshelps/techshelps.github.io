<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Accessing Automation Object Members</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="reconaccessingautomationobjectmembers"></a>Accessing Automation Object Members</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="reobjMdoVBForm; recolMdoVBFormMdoControls">
</object><a href=JavaScript:alink_1.Click()>See Also</a></p>
<p>
The MDO Model contains a number of Automation objects that support multiple interfaces. With each Automation object, one interface is defined to be the default interface, and the members (the properties, methods, and collections) that are attached to that interface are accessible via the standard Visual Basic mechanisms.</p>
<p>
When accessing members that are attached to an interface that is <i>not</i> the default interface for an Automation object, a different access technique must be used. An additional reference to the object must be declared that explicitly calls for the non-default interface. The non-default interface members can then be accessed via the new object reference.</p>
<p>
The following example illustrates how to access a collection that is attached to an interface that is not the default interface for an Automation object.</p>
<p>
In this example, the repository object that represents the first control in a Visual Basic form is retrieved. <b>MdoVBForm</b> objects implement the <b>IMdoControlContainer</b> interface; this interface is not the default interface. The <b>MdoControls</b> collection is attached to the IMdoControlContainer interface. The MdoControls collection is the collection of controls that are contained in the form.</p>
<pre><code>Dim <i>vbFormObj</i> &nbsp;&nbsp; As MdoVBForm
Dim <i>nonDefIfcObj</i> As IMdoControlContainer
Dim <i>controlObj</i> &nbsp; As MdoControl

'&nbsp; Initialize the <i>vbFormObj</i> object by retrieving it
'&nbsp; from the collection of components that are part
'&nbsp; of a particular Visual Basic project.

Set <i>nonDefIfcObj</i> = vbFormObj
Set <i>controlObj</i> = <i>nonDefIntObj</i>.MdoControls(1)
</code></pre>
</BODY>
</HTML>
