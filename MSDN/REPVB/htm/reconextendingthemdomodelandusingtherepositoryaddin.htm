<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Extending the MDO Model and Using the Repository Add-in</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="reconextendingthemdomodelandusingtherepositoryaddin"></a>Extending the MDO Model and Using the Repository Add-in</h1>
<p>
One useful extension to the MDO for developers (and development managers) would be a target completion date, or <i>due date,</i> for Visual Basic projects that are under development. You could then create a Visual Basic add-in that prompts you for a due date each time you create a new project. To create such an add-in, you should follow these steps:</p>
<p class=label>
<b>To extend the MDO Model by adding a property, DateDue, to the MdoProject class</b>
<ol>
<li>
Register the Repository Add-in for Visual Basic as an add-in.<br><br></li>
<li>
Create <i>your</i> add-in as a Visual Basic project.<br><br></li>
<li>
Within the Visual Basic project that implements your add-in, add references to the Microsoft Repository type library and the Microsoft Development Objects type library.<br><br></li>
<li>
Register your add-in with Visual Basic.</li>
</ol>
<p>
After you have registered your add-in, it will prompt you for a due date each time you create a new Visual Basic project. (To learn how to extend an information model, see <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="reconInformationModelCreation">
</object><a href=JavaScript:alink_1.Click()>Information Model Creation</a>.</p>
<p class=label>
<b>To create a Visual Basic project that implements your add-in</b>
<ol>
<li>
At design time, create an MdoProjectEvents event sink module.<br><br></li>
<li>
At run time, when your add-in is started, it must register your event sink object for project-related events via the <b>RepVB.ConnectProjectEvents</b> method of the Repository Add-in.<br><br></li>
<li>
When a new project is created, the <b>ObjectAdded</b> method of your event sink object will be invoked.<br><br></li>
<li>
Within that method, prompt the user for a due date and establish that user-supplied date as the value of the property DueDate in the repository’s representation of the new project.</li>
</ol>
<p>
<B><b>For More Information&nbsp;&nbsp;&nbsp;</b></B><a href="reobjrepvb.htm">RepVB Object</a>; <a href="reobjmdoprojectevents.htm">MdoProjectEvents Object</a> </p>
</BODY>
</HTML>
