<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MDO Model Collections</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="reconmdomodelcollections"></a>MDO Model Collections</h1>
<p>
When the Repository Add-in for Visual Basic creates the MDO Model in your repository, it adds the <b>Contents </b>collection to the Root Repository Object. This enables you to enumerate all of the Visual Basic projects that have been stored in the repository.</p>
<p>
Within each MdoProject object, the <b>MdoComponents</b> collection contains one object for each component that exists in the project. This collection is a collection of heterogeneous objects; that is, the various controls, forms, modules, and so on are all in the collection. Although the objects in the collection conform to different MDO Model classes, they all also conform to the <b>RepositoryObject</b> class. Thus, they can all be manipulated (at a fundamental level) in a homogeneous manner.</p>
<p>
Within each <b>MdoProject</b> object, the <b>MdoReferences</b> collection contains one object for each reference to either an external type library or another Visual Basic project.</p>
<p>
Each <b>MdoControl</b>, <b>MdoMDIForm</b>, <b>MdoPropertyPage</b>, <b>MdoUserControl</b>, <b>MdoDocument</b>, and <b>MdoVBForm</b> has an <b>MdoControls</b> collection. The <b>MdoControls</b> collection contains one object for each imbedded control. If there are no imbedded controls, the collection is empty (but it still exists). Since controls can contain other controls, the control-collection-control arrangement recurses until a control is reached that has no imbedded controls.</p>
<p>
Some <b>MdoControl</b> objects represent custom controls or controls that have been supplied by an independent software vendor (ISV). For each of these <b>MdoControl</b> objects, the <b>MdoControlUsage</b> collection connects the <b>MdoControl</b> object to its corresponding <b>MdoUserControl</b> object.</p>
</BODY>
</HTML>
