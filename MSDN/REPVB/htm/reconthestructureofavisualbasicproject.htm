<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Structure of a Visual Basic Project</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="reconthestructureofavisualbasicproject"></a>The Structure of a Visual Basic Project</h1>
<p>
Consider an accounts receivable project, which contains one module and two forms. Each of the forms contains some controls. The structure of the project is shown in the following outline:</p>
<pre><code><b>Project:</b> <i>AccountsReceivable</i>
 &nbsp; <b>Module:</b> <i>MyMain</i>
 &nbsp; <b>Form: </b><i>Customer</i>
 &nbsp;&nbsp;&nbsp;&nbsp; <b>Control: </b><i>LabelCustomerName</i>
 &nbsp;&nbsp;&nbsp;&nbsp; <b>Control: </b><i>LabelOutstandingBalance</i>
 &nbsp;&nbsp;&nbsp;&nbsp; <b>Control: </b><i>TextCustomerName</i>
<b> &nbsp;&nbsp;&nbsp;&nbsp; Control: </b><i>TextOutstandingBalance</i>
 &nbsp; <b>Form: </b><i>Invoice</i>
 &nbsp;&nbsp;&nbsp;&nbsp; <b>Control: </b><i>LabelCustomerName</i>
<b> &nbsp;&nbsp;&nbsp;&nbsp; Control: </b><i>LabelInvoiceDate</i>
<b> &nbsp;&nbsp;&nbsp;&nbsp; Control: </b><i>LabelPastDueCharges</i>
<b> &nbsp;&nbsp;&nbsp;&nbsp; Control: </b><i>LabelCurrentCharges</i>
<b> &nbsp;&nbsp;&nbsp;&nbsp; Control: </b><i>LabelTotalCharges</i>
<b> &nbsp;&nbsp;&nbsp;&nbsp; Control: </b><i>TextCustomerName</i>
<b> &nbsp;&nbsp;&nbsp;&nbsp; Control: </b><i>TextInvoiceDate</i>
<b> &nbsp;&nbsp;&nbsp;&nbsp; Control: </b><i>TextPastDueCharges</i>
<b> &nbsp;&nbsp;&nbsp;&nbsp; Control: </b><i>TextCurrentCharges</i>
<b> &nbsp;&nbsp;&nbsp;&nbsp; Control: </b><i>TextTotalCharges</i>
<b> &nbsp;&nbsp;&nbsp;&nbsp; Control: </b><i>FrameInvoiceCopies</i>
<b> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Control: </b><i>CheckboxAccountSupervisor</i>
<b> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Control: </b><i>CheckboxRegionalCreditDept</i>
<b> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Control: </b><i>CheckboxCollectionsDept</i>
<b> &nbsp;&nbsp;&nbsp;&nbsp; Control: </b><i>CommandPrintInvoice</i>
<b> &nbsp;&nbsp;&nbsp;&nbsp; Control: </b><i>CommandSaveWithoutPrint</i>
<b> &nbsp;&nbsp;&nbsp;&nbsp; Control: </b><i>CommandCancelInvoice</i>
</code></pre>
<p>
The <i>AccountsReceivable</i> project contains two forms and a module at the first outline level below the project itself. The outline shows other kinds of component organized at the next level under the two forms, but there are none shown under the <i>MyMain</i> module. The outline reveals a characteristic of Visual Basic projects; forms may contain controls, but modules may not.</p>
<p>
The <i>Invoice</i> form contains <i>FrameInvoiceCopies</i>, a control that contains three other controls. Here too, the example illustrates a characteristic of Visual Basic projects; a control can contain other controls. The following figure represents the <i>FrameInvoiceCopies</i> control:</p>
<p>
<img src="repgvb03.gif" border=0></p>
<p>
There are four controls visible in the figure: one frame and three checkboxes. Speaking casually, we might say that the <i>Invoice</i> form contains all four controls. However, it is more precise to say that the <i>Invoice</i> form contains only the <i>FrameInvoiceCopies</i> control. Each checkbox is contained not within the <i>Invoice</i> form, but within the <i>FrameInvoiceCopies</i> control. </p>
<p>
There is a similar outline that can be created for any Visual Basic project because every Visual Basic project has an inherent structure. It is this structure that the Repository Add-in for Visual Basic stores in the repository when it populates the MDO Model. And so it is this structure that the MDO Model must accommodate.</p>
</BODY>
</HTML>
