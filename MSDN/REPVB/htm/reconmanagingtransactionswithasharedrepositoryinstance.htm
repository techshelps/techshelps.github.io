<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Managing Transactions with a Shared Repository Instance</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="reconmanagingtransactionswithasharedrepositoryinstance"></a>Managing Transactions with a Shared Repository Instance</h1>
<p>
If you share a repository instance with the Repository Add-in, you also share a transaction space with it. The Repository Add-in cooperates with the other add-ins with which it shares transaction space by adhering to these rules:
<ul type=disc>
<li>
The Repository Add-in commits or cancels its pending transactions before firing any events to other add-in modules.<p class=tl>
Thus, whenever your add-in needs to respond to an event by modifying the contents of the repository, it can bracket the modifications in a transaction, make the appropriate modifications, and complete the transaction.</P></li>
<li>
When the Repository Add-in fires events to the various repository-aware add-in modules, it does so sequentially.<p class=tl>
That is, the Repository Add-in invokes the event sink method for the first registered add-in module, waits for that module to complete its processing in response to that event, and then invokes the event sink method for the next registered add-in module. Thus, when your add-in receives an event fired by the Repository Add-in, you can be confident that no other add-in module is currently responding to that event.</P></li>
</ul>
<p>
Your add-in module might not be the only module that shares a repository instance with the Repository Add-in; design your add-in to cooperate with other add-in modules. Thus, you should never return control to the Repository Add-in until your thread has finished responding to the event that the Repository Add-in fired. That is, do not return control to the Repository Add-in while you still have an active transaction in that repository instance.</p>
</BODY>
</HTML>
