<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Can I Write a Snap-In?</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_slate_can_i_write_a_snap_in_"></a>Can I Write a Snap-In?</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
If you've never written a COM application, writing a snap-in that's implemented as a COM in-proc server may sound daunting; however, it may not be as difficult as you think. By leveraging the code provided in the sample application accompanying MMC and studying other COM samples, you can reduce the resources required to complete a snap-in.</p>
<p>
If you intend to explore COM and ActiveX™ technologies further, you can find more in-depth explanations and code sample in the COM and ActiveX Object Services section of the Microsoft Platform Software Development kit (SDK). Microsoft also provides an invaluable source of sample code in the ActiveX tutorial, which itself also covers topics directly applicable to building snap-ins. Finally, although there is a growing number of books about COM and ActiveX now available, three books from Microsoft Press are particularly informative:
<ul>
<li>
<b>Inside OLE</b> (second edition), by Kraig Brockschmidt, 1995. A quintessential programming guide, it is full of technical explanations, details, and samples. This book is also included in the MSDN Library.</li>
<li>
<b>Inside COM</b> by Dale Rogerson, 1997. (Targets  C++ programmers.)</li>
<li>
<b>Understanding ActiveX and OLE,</b> by David Chappell, 1996. A solid introduction without much code.</li>
</ul>
<p>
Choosing the right development tools can also make a major difference. A COM in-process server can be written in virtually any language that supports function calls, but using C++ is generally the easiest way to implement and use COM. At present, the MMC-specific interfaces described in this documentation do not support Java or Microsoft® Visual Basic®, although this will change further into the development process.</p>
<p>
The Step4 sample application included with the MMC software development kit is written in C++ and makes use of the Microsoft Foundation Classes (MFC) and the Active Template Library (ATL). Like you, we do what we can to reduce our coding time and these tools help do just that. You are not required to use Microsoft software development tools, of course, but you will probably benefit by using something that reduces line-by-line coding.</p>
<p>
Additional information about MMC is also available on the worldwide web at http://www.microsoft.com/management.</p>
<p>&nbsp;</p></body>
</HTML>
