<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Console and Snap-in Communication</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_slate_console_and_snap_in_communication"></a>Console and Snap-in Communication</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
MMC is based on COM interfaces and it implements a variety of interfaces through which a snap-in can implement its own interfaces to communicate with the console and perform assigned tasks. Foremost among those interfaces the snap-in's interface to the console, <a href="mmc_ref1_3mcl.htm"><b>IConsole</b></a>. </p>
<p>
The snap-in implements <a href="mmc_ref1_4xup.htm"><b>IComponentData</b></a> and <a href="mmc_ref1_3cok.htm"><b>IComponent</b></a> interfaces specifically to interact with <a href="mmc_ref1_3mcl.htm"><b>IConsole</b></a>. Looking at <b>IComponentData</b> first, any snap-in component that extends the namespace is an <b>IConsole</b> and <b>IComponentData</b> pair. The <b>IComponent</b> interface is closely associated with items displayed in the result view pane and is typically implemented at the view level. <b>IComponent</b> is required for any snap-in component that will enumerate items in the result pane.</p>
<p>&nbsp;</p></body>
</HTML>
