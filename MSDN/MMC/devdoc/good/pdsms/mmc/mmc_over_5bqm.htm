<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Context Information</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_slate_context_information"></a>Context Information</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Context information is data shared between snap-ins. In MMC, information is shared based on hierarchy. The console itself acts like a snap-in, and root snap-ins thus get base context information. This data comes from basic information, command line parameters, and other sources. Snap-ins are responsible for providing data to their own nodes in that the console has no need to know or interfere with how a snap-in disseminates information to its own nodes.</p>
<p>
The COM interface <b>IDataObject</b> is implemented by the snap-in, and data is shared in clipboard formats. This interface includes methods that enable data to be transferred and notifications to be generated when data changes. The console uses <b>IDataObject::GetDataHere</b> to get the information. This interface and method are documented in the Platform SDK.</p>
<p>
Snap-ins are required to support four <a href="mmc_over_78he.htm">formats</a> and the TYMED is always an HGLOBAL.</p>
<p>
Calling <b>AddRef</b> (also documented in the Platform SDK) to increment the reference count on these data objects is generally not advantageous because it is possible that the snap-in could unload by the time it is needed. If the snap-in uses the function call that it was handed, the data object is guaranteed to be valid, unless an exception such as an access violation occurs.</p>
<p>&nbsp;</p></body>
</HTML>
