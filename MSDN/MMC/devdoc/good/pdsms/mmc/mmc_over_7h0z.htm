<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Extending Toolbars and Toolbar Buttons for Snap-Ins</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_slate_extending_toolbars_and_toolbar_buttons_for_snap_ins"></a>Extending Toolbars and Toolbar Buttons for Snap-Ins</h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Toolbars are among the most-frequently included features in today's applications and the Microsoft Management Console makes taking advantage of them rather simple. Your snap-in can either extend the toolbars made available by the console or it can provide its own. There are several interfaces related to this feature, beginning with <a href="mmc_ref1_24s2.htm"><b>IControlbar</b></a>. This interface allows for creating and manipulating a control bar to hold toolbars and other controls. This interface's methods includes <a href="mmc_ref1_4605.htm"><b>Create</b></a>, which is used to create and return the control requested. At this time, this can be either a toolbar or a combo box bar. The other <a href="mmc_ref1_24s2.htm"><b>IControlbar</b></a> methods are <a href="mmc_ref1_9l0o.htm"><b>Attach</b></a>, which associates a control with the control bar, and <a href="mmc_ref1_7prc.htm"><b>Detach</b></a>, which breaks that association. You should also use these methods to use display or hide the toolbar.</p>
<p>
The <a href="mmc_ref1_0p82.htm"><b>IExtendControlbar</b></a> interface allows an extension snap-in to add toolbars by using a callback interface, and has two methods. The first is <a href="mmc_ref1_2z3m.htm"><b>SetControlBar</b></a>, which gets a pointer to the <a href="mmc_ref1_24s2.htm"><b>IControlbar</b></a> interface implemented by the console. The second method, <a href="mmc_ref1_5k3d.htm"><b>ControlbarNotify</b></a>, is the mechanism that allows the snap-in to respond to user actions such as mouse-button clicks. When the user causes an event, the node manager sends a notification message to the snap-in. All notifications applicable to MMC are listed alphabetically in <a href="mmc_ref2_3to3.htm">MMC Notifications</a>.</p>
<p>
<a href="mmc_ref2_9nhu.htm"><b>IToolbar</b></a> is implemented by the console and it allows your snap-in to perform a variety of actions related to toolbars, including creating them, adding items to them, extending them, and displaying them. <a href="mmc_ref2_8wmo.htm"><b>AddBitmap</b></a> allows you to add an image to the toolbar, and <a href="mmc_ref2_8qcz.htm"><b>AddButtons</b></a> provides a way to add an array of buttons to the toolbar. To add a single button, you can use <a href="mmc_ref2_8iwe.htm"><b>InsertButton</b></a> and to remove one, you can use <a href="mmc_ref2_4ffy.htm"><b>DeleteButton</b></a>. Finally, you can get an attribute of a button by using <a href="mmc_ref2_8iqt.htm"><b>GetButtonState</b></a> and set an attribute with <a href="mmc_ref2_2zc5.htm"><b>SetButtonState</b></a>.</p>
<p>
The last interface you have to consider when working with toolbars is <a href="mmc_ref1_97c2.htm"><b>IConsoleVerb</b></a>. The verbs are listed in the <a href="mmc_ref2_6uaq.htm">MMC_CONSOLE_VERB</a> enumeration and include cut, copy, paste, print, and others you would expect to see. You can determine the state of a verb by using the <a href="mmc_ref1_83fp.htm"><b>GetVerbState</b></a> method and you can set the state with <a href="mmc_ref1_98iq.htm#_slate_iconsoleverb_setverbstate"><b>SetVerbState</b></a>.</p>
<p>&nbsp;</p></body>
</HTML>
