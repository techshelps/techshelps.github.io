<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Implementing the IComponentData Interface</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_slate_implementing_the_icomponentdata_interface"></a>Implementing the IComponentData Interface</h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Every snap-in that extends the namespace must implement <a href="mmc_ref1_4xup.htm"><b>IComponentData</b></a>. As noted earlier, this is one of the console's interfaces to the snap-in and is closely associated with the functionality of the items (folders) displayed in the scope pane.</p>
<p>
Among the <b>IComponentData</b> methods, <a href="mmc_ref1_3l5x.htm"><b>Initialize</b></a> provides an entry point for the snap-in by allowing <a href="mmc_ref1_4xup.htm"><b>QueryInterface</b></a> calls to the <a href="mmc_ref1_3mcl.htm"><b>IConsole</b></a> and <a href="mmc_ref1_319h.htm"><b>IConsoleNamespace</b></a> interfaces. <a href="mmc_ref1_3l5x.htm"><b>Initialize</b></a> must be called before the namespace can be enumerated. <a href="mmc_ref1_9hf8.htm"><b>CreateComponent</b></a> is used to create a snap-in's object that exposes the <a href="mmc_ref1_3cok.htm"><b>IComponent</b></a> interface.</p>
<p>
<a href="mmc_ref1_1rzt.htm"><b>Notify</b></a> is called by the console to inform the snap-in component of an event that has occurred as the application's end user clicks on the mouse and so on. <a href="mmc_ref1_83sp.htm"><b>Destroy</b></a> releases all interfaces to the console such as <a href="mmc_ref1_3mcl.htm"><b>IConsole</b></a> and <a href="mmc_ref1_319h.htm"><b>IConsoleNamespace</b></a>. You should be aware that MMC remains in a state in which everything can be queried during the call to <b>Destroy</b> so the snap-in can get information from the console. On return from <a href="mmc_ref1_83sp.htm"><b>Destroy</b></a>, however, data integrity cannot be guaranteed.</p>
<p>
<a href="mmc_ref1_1g38.htm"><b>QueryDataObject</b></a> is used to get a data object for a specific cookie, including the static folder (NULL cookie). The data object type is taken from the <a href="mmc_ref2_0gc3.htm">DATA_OBJECT_TYPES</a> enumeration and is used to determine the context in which someone is asking for the data object. A CCT_SCOPE flag is set to indicate that the data object is for the scope pane. CCT_RESULT is set to indicate it is for the result view pane, and another, CCT_SNAPIN_MANAGER, indicates when the snap-in manager is being used. Another constant, CCT_UNITIALIZED indicates that the data object has an invalid type. Given context information, the snap-in can determine the context in which it is being asked for a data object.</p>
<p>
For example, when inserting a snap-in into the <a href="mmc_over_8l7p.htm">scope pane</a> using the <a href="mmc_over_9po2.htm">snap-in manager</a> (CCT_SNAPIN_MANAGER), the snap-in may use one set of property pages on the static node (folder). After it has been inserted into the scope pane, the user may issue a Properties request on the folder. A request for a data object must be made. The context type CCT_SCOPE is used, giving the same snap-in the option of displaying different property sheets. This behavior is not required, but the console provides the information anyway. </p>
<p>
As noted earlier, <a href="mmc_ref1_3mcl.htm"><b>IConsole</b></a> is the snap-in's interface to the console, and objects that expose the <b>IDataObject</b> interface are used to pass context information from the snap-in to the console or between snap-ins. <b>IDataObject</b> is documented in the Platform SDK.</p>
<p>
The <a href="mmc_ref1_76gf.htm"><b>GetDisplayInfo</b></a> method retrieves display information for a namespace item in the scope pane. This is similar to the Win32 callback mode for the tree-view control. <a href="mmc_ref1_66b7.htm"><b>CompareObjects</b></a> provides a way for a snap-in component to compare two data objects and determine whether they refer to the same physical object. This method is used for detecting duplicate property sheets. The snap-in must compare the two managed objects.</p>
<p>&nbsp;</p></body>
</HTML>
