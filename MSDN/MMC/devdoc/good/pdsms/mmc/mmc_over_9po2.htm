<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Snap-In Manager</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_slate_snap_in_manager"></a>Snap-In Manager</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Another important feature of MMC is the snap-in manager. This the console-provided means of identifying available snap-ins and allowing the user to select and then manipulate a snap-in. The console identifies snap-ins by the information you make available through the system registry. This is explained in the section of this documentation called <a href="mmc_over_7awp.htm">Snap-In Components and the Registry</a>.</p>
<p>
The snap-in manager is responsible for presenting a list of available snap-in components and allowing the user to insert or delete properties in the scope pane. The snap-in manager relies on complete and accurate entries in the system registry. Accordingly, snap-ins should be self-registering and should complete this task as part of the installation sequence.</p>
<p>
If you are writing a snap in, you need to understand that during this phase of console configuration the console requests the snap-in to optionally put up a configuration wizard for gathering settings during the insertion process. The console passes in the CCT_SNAPIN_MANAGER as a value for the <a href="mmc_ref2_0gc3.htm">DATA_OBJECT_TYPES</a>.</p>
<p>&nbsp;</p></body>
</HTML>
