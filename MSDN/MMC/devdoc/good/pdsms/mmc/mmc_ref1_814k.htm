<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IExtendPropertySheet</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_slate_iextendpropertysheet"></a>IExtendPropertySheet</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>IExtendPropertySheet </b>interface enables a snap-in component to add pages to the property sheet of an item. </p>
<h5>When to Implement</h5>
<p>
You implement this interface in your in-process server DLL to add property pages for a snap-in component. <b>QueryInterface</b> is called on the primary snap-in object and the console then calls <a href="mmc_ref1_4pf6.htm"><b>IExtendPropertySheet::QueryPagesFor</b></a>. If the snap-in responds with S_OK, the console calls <a href="mmc_ref1_08c3.htm"><b>IExtendPropertySheet::CreatePropertyPages</b></a> which gives the snap-in an opportunity to add its pages. Finally, the console creates the sheet to display the pages. If the snap-in returns S_FALSE, no property sheet is created for the object. </p>
<p>
Note that each property sheet is created in its own thread. If any COM interface pointer is passed from the <a href="mmc_ref1_3cok.htm"><b>IComponent</b></a> to the property page, this pointer must be marshaled. For more information, see Processes and Threads in the Microsoft Platform SDK and the Apartment Model discussion in the COM specification. The size of the property page is determined by the primary snap-in. If you are extending a property sheet for an object that does not belong to your snap-in, the dialog templates you use should conform to the dimensions established by the primary snap-in. </p>
<h5>When to Use</h5>
<p>
This interface can be used to add information about the properties of an object whenever you consider it appropriate. It may also be useful to know that property pages can also be implemented using either the Win32 API or a class library such as the Microsoft Foundation Class Library. </p>
<h4>Methods in Vtable Order</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=45%>IUnknown Methods</th>
<th align=left width=55%>Description</th>
</tr>
<tr valign=top>
<td width=45%><b>QueryInterface</b></td>
<td width=55%>Returns pointers to supported interfaces.</td>
</tr>
<tr valign=top>
<td width=45%><b>AddRef</b></td>
<td width=55%>Increments reference count.</td>
</tr>
<tr valign=top>
<td width=45%><b>Release</b></td>
<td width=55%>Decrements reference count.</td>
</tr>
</table><br>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=44%><b>IExtendPropertySheet Methods</b></td>
<td width=56%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=44%><a href="mmc_ref1_08c3.htm"><b>CreatePropertyPages</b></a></td>
<td width=56%>Adds pages to a property sheet.</td>
</tr>
<tr valign=top>
<td width=44%><a href="mmc_ref1_4pf6.htm"><b>QueryPagesFor</b></a></td>
<td width=56%>Determines whether object needs pages.</td>
</tr>
</table><br>
<p>&nbsp;</p></body>
</HTML>
