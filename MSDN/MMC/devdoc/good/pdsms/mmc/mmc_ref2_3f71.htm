<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CONTEXTMENUITEM</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_slate_contextmenuitem"></a>CONTEXTMENUITEM</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>CONTEXTMENUITEM</b> structure is passed to <a href="mmc_ref1_0bvx.htm"><b>IContextMenuCallback::AddItem</b></a> or <b>IContextMenuProvider::AddItem</b> to define a new menu item, submenu, or insertion point. The context menu is built from the root down, with each new item going to the end of the submenu or insertion point where it is inserted.</p>
<pre><code>typedef struct _CONTEXTMENUITEM
{
    LPWSTR    strName;
    LPWSTR    strStatusBarText;
    LONG      lCommandID;
    LONG      lInsertionPointID;
    LONG      fFlags;
    LONG      fSpecialFlags;
} CONTEXTMENUITEM;
typedef CONTEXTMENUITEM* LPCONTEXTMENUITEM;
</code></pre>
<h4>Members</h4>
<dl>
<dt>
<i>strName</i></dt>
<dd>
Pointer to a zero-terminated string containing the name of the menu item or of the submenu. This member may not be NULL except for a separator or insertion point.</dd>
<dt>
<i>strStatusBarText</i></dt>
<dd>
Pointer to a zero-terminated string containing the text that will be displayed in the status bar when this item is highlighted. This member may be NULL.</dd>
<dt>
<i>lCommandID</i></dt>
<dd>
Specifies the command identifier for menu items. 
<p>
If this menu item is added by <a href="mmc_ref1_541f.htm"><b>IExtendContextMenu::AddMenuItems</b></a> and then selected, this is the command ID that will be passed back to <a href="mmc_ref1_1hes.htm"><b>IExtendContextMenu::Command</b></a>. 

<p>
If this menu item is added by <a href="mmc_ref1_1dma.htm"><b>IContextMenuProvider</b></a> and then selected, this is the command ID that will be passed back to <i>pISelected</i> by <a href="mmc_ref1_8ir9.htm"><b>IContextMenuProvider::ShowContextMenu</b></a>.

<p>
If this is an insertion point (CCM_SPECIAL_INSERTION_POINT is set in <i>fSpecialFlags</i>) or a submenu (MF_POPUP is set in <i>fFlags</i>), you can use <i>lCommandID</i> in subsequent calls as <i>lInsertionPoint </i>(see the following table). Read the following discussion carefully because specific bits in the new insertion point ID must be on and others must be off.

<p>
Some bits in the command ID require special handling for items that are not insertion points or submenus.

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Value</th>
<th align=left width=52%>Meaning</th>
</tr>
<tr valign=top>
<td width=48%>CCM_COMMANDID_MASK_<br>
RESERVED = 0xFFFF0000</td>
<td width=52%>Items other than insertion points and submenus may not be added with these bits set.</td>
</tr>
</table><br>


<p>
Some bits in the insertion point ID require special handling for items that are insertion points (<i>fSpecialFlags</i> and CCM_SPECIAL_INSERTION_POINT) or submenus (<i>fFlags</i> and MF_POPUP).

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Value</th>
<th align=left width=52%>Meaning</th>
</tr>
<tr valign=top>
<td width=48%>CCM_INSERTIONPOINTID_<br>
MASK_SPECIAL = 0xFFFF0000</td>
<td width=52%>Special behavior. Snap-ins may use the other bits as they see fit.</td>
</tr>
<tr valign=top>
<td width=48%>CCM_INSERTIONPOINTID_<br>
MASK_SHARED = 0x80000000</td>
<td width=52%>These insertion points and submenus are shared between the creator of the context menu, the primary extension, and the third-party extension. Any of these entities adding items to a shared insertion point or submenu add them to the same insertion point or submenu.<p>
If this bit is not set, <a href="mmc_ref1_1dma.htm"><b>IContextMenuProvider</b></a> and each extension may use the same ID and each refers to a different insertion point or submenu.</p>
<p>
Only <a href="mmc_ref1_1dma.htm"><b>IContextMenuProvider</b></a> may create insertion points or submenus with this bit set, unless CCM_INSERTIONPOINTID_MASK_CREATE_PRIMARY is also set in the insertion point ID. If it is, only the primary extension may create them.</p>
</td>
</tr>
<tr valign=top>
<td width=48%>CCM_INSERTIONPOINTID_<br>
MASK_CREATE_PRIMARY = 0x40000000</td>
<td width=52%>Only the system may add insertion points or submenus for which CCM_INSERTIONPOINTID_MASK_SHARED is set and this bit is not set. Only the primary extension may add insertion points or submenus for which both bits are set. This prevents insertion point ID conflicts between insertion points and submenus created by <a href="mmc_ref1_1dma.htm"><b>IContextMenuProvider</b></a> and those created by the primary extension.</td>
</tr>
<tr valign=top>
<td width=48%>CCM_INSERTIONPOINTID_<br>
MASK_ADD_PRIMARY = 0x20000000</td>
<td width=52%>If CCM_INSERTIONPOINT_SHARED is set and this bit is not set, the primary extension may not add to this insertion point or submenu.</td>
</tr>
<tr valign=top>
<td width=48%>CCM_INSERTIONPOINTID_<br>
MASK_ADD_3<sup>RD</sup>PARTY = 0x10000000</td>
<td width=52%>If CCM_INSERTIONPOINT_SHARED is set and this bit is not set, the third-party extensions may not add to this insertion point or submenu.</td>
</tr>
<tr valign=top>
<td width=48%>CCM_INSERTIONPOINTID_<br>
MASK_RESERVED = 0x0FFF0000</td>
<td width=52%>Insertion points or submenus may not be added with any of these bits set.</td>
</tr>
</table><br>

</dd>
<dt>
<i>lInsertionPointID</i></dt>
<dd>
Specifies where in the context menu the new item should be added. Extensions are limited in where they can place menu items. The following are the insertion points created by Microsoft Management Console in the default context menus for items in the scope pane and list view result pane:
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=43%>Value</th>
<th align=left width=57%>Meaning</th>
</tr>
<tr valign=top>
<td width=43%>0 (zero)</td>
<td width=57%>An <i>IInsertionPointID</i> of zero refers to the root menu for this context menu. Zero may be used interchangeably with CCM_INSERTIONPOINTID_ROOT_MENU. Note that only <a href="mmc_ref1_1dma.htm"><b>IContextMenuProvider</b></a> is permitted to add items directly to the root menu. Extensions may only add items to insertion points and submenus added to the root menu by <a href="mmc_ref1_1dma.htm"><b>IContextMenuProvider</b></a> or by Microsoft Management Console.</td>
</tr>
<tr valign=top>
<td width=43%>CCM_INSERTIONPOINTID_<br>
PRIMARY_TOP = 0xA0000000</td>
<td width=57%>The primary extension may use this insertion point to add items to the top of the main context menu.</td>
</tr>
<tr valign=top>
<td width=43%>CCM_INSERTIONPOINTID_<br>
PRIMARY_NEW = 0xA0000001</td>
<td width=57%>The primary extension may use this insertion point to add items to the top of the Create New submenu. The Create New submenu is only present for context menus in the scope pane and not for context menus in the result pane.</td>
</tr>
<tr valign=top>
<td width=43%>CCM_INSERTIONPOINTID_<br>
PRIMARY_TASK = 0xA0000002</td>
<td width=57%>The primary extension may use this insertion point to add items to the top of the Task submenu.</td>
</tr>
<tr valign=top>
<td width=43%>CCM_INSERTIONPOINTID_<br>
PRIMARY_VIEW</td>
<td width=57%>If the user clicks the View dropdown menu in the toolbar, this insertion point will be present but the New and Task insertion points will be absent.</td>
</tr>
<tr valign=top>
<td width=43%>CCM_INSERTIONPOINTID_<br>
3RDPARTY_NEW = 0x90000001</td>
<td width=57%>Third-party extensions may use this insertion point to add items to the bottom of the Create New submenu. The Create New submenu is only present for context menus in the scope pane and not for context menus in the result pane.</td>
</tr>
<tr valign=top>
<td width=43%>CCM_INSERTIONPOINTID_<br>
3RDPARTY_TASK = 0x90000002</td>
<td width=57%>Third-party extensions may use this insertion point to add items to the bottom of the Task submenu.</td>
</tr>
<tr valign=top>
<td width=43%>CCM_INSERTIONPOINTID_<br>
ROOT_MENU = 0x80000000</td>
<td width=57%><a href="mmc_ref1_1dma.htm"><b>IContextMenuProvider</b></a> may use this insertion point to add items to the root menu.<p>
Neither primary extensions nor third-party extensions may add items to the root menu except through insertion points added by <a href="mmc_ref1_1dma.htm"><b>IContextMenuProvider</b></a>.</p>
</td>
</tr>
</table><br>

</dd>
<dt>
<i>fFlags</i></dt>
<dd>
Specifies one or more of the following style flags:
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=38%>Value</th>
<th align=left width=62%>Meaning</th>
</tr>
<tr valign=top>
<td width=38%>MF_POPUP</td>
<td width=62%>Specifies that this is a submenu within the context menu. Menu items, insertion points, and further submenus may be added to this submenu using its <i>lCommandID</i> as their <i>lInsertionPointID</i>.</td>
</tr>
<tr valign=top>
<td width=38%>MF_BITMAP<br>
MF_OWNERDRAW</td>
<td width=62%>These flags are not permitted and will result in <a href="mmc_ref1_0bvx.htm"><b>IContextMenuCallback::AddItem</b></a> returning E_INVALIDARG.</td>
</tr>
<tr valign=top>
<td width=38%>MF_SEPARATOR</td>
<td width=62%>Draws a horizontal dividing line. <p>
Only <a href="mmc_ref1_1dma.htm"><b>IContextMenuProvider</b></a> is allowed to add menu items with MF_SEPARATOR set.</p>
</td>
</tr>
</table><br>


<p>
The following flags all operate the same as in the Win32 API:

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=38%>Value</th>
<th align=left width=62%>Meaning</th>
</tr>
<tr valign=top>
<td width=38%>MF_CHECKED</td>
<td width=62%>Places a check mark next to the menu item.</td>
</tr>
<tr valign=top>
<td width=38%>MF_DISABLED</td>
<td width=62%>Disables the menu item so it cannot be selected, but the flag does not gray it.</td>
</tr>
<tr valign=top>
<td width=38%>MF_ENABLED</td>
<td width=62%>Enables the menu item so it can be selected, restoring it from its grayed state.</td>
</tr>
<tr valign=top>
<td width=38%>MF_GRAYED</td>
<td width=62%>Disables the menu item, graying it so it cannot be selected.</td>
</tr>
<tr valign=top>
<td width=38%>MF_MENUBARBREAK</td>
<td width=62%>Functions the same as the MF_MENUBREAK flag for a menu bar. For a drop-down menu, submenu, or shortcut menu, the new column is separated from the old column by a vertical line.</td>
</tr>
<tr valign=top>
<td width=38%>MF_MENUBREAK</td>
<td width=62%>Places the item on a new line (for a menu bar) or in a new column (for a drop-down menu, submenu, or shortcut menu) without separating columns.</td>
</tr>
<tr valign=top>
<td width=38%>MF_UNCHECKED</td>
<td width=62%>Does not place a check mark next to the item (default). </td>
</tr>
</table><br>

</dd>
</dl>
<p>
The following groups of flags cannot be used together:
<ul>
<li>
MF_DISABLED, MF_ENABLED, and MF_GRAYED</li>
<li>
MF_MENUBARBREAK and MF_MENUBREAK</li>
<li>
MF_CHECKED and MF_UNCHECKED</li>
</ul>
<dl>
<dt>
<i>fSpecialFlags</i></dt>
<dd>
Specifies one or more of the following flags:
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=45%>Flag</th>
<th align=left width=55%>Meaning</th>
</tr>
<tr valign=top>
<td width=45%>CCM_SPECIAL_SEPARATOR = 0x0001</td>
<td width=55%>Ignore all other parameters except <i>lInsertionPointID</i>. Add a separator to the end of the menu or the specified insertion point, except that CCM_SPECIAL_SEPARATOR will never add a separator as the first or last item in a menu or submenu. If two or more consecutive CCM_SPECIAL_SEPARATORs are added, only one appears in the menu.<p>
Only <a href="mmc_ref1_1dma.htm"><b>IContextMenuProvider</b></a> is permitted to add separators, either special or otherwise.</p>
</td>
</tr>
<tr valign=top>
<td width=45%>CCM_SPECIAL_SUBMENU = 0x0002</td>
<td width=55%>If this submenu is empty, it will be grayed and disabled. This is only valid for MF_POPUP items.</td>
</tr>
<tr valign=top>
<td width=45%>CCM_SPECIAL_DEFAULT_<br>
ITEM = 0x0004</td>
<td width=55%>This should be the default menu item. If more than one menu item specifies this flag, the last one in each submenu takes precedence.</td>
</tr>
<tr valign=top>
<td width=45%>CCM_SPECIAL_INSERTION_<br>
POINT = 0x0008</td>
<td width=55%> Ignore all other parameters except <i>lCommandID</i> and <i>lInsertionPointID</i>. This creates a new insertion point at the end of the insertion point or submenu identified by <i>lInsertionPointID.</i><p>
Subsequent calls may use the <i>lCommandID</i> from this call as their <i>lInsertionPointID</i>, and insert their own menu items, submenus, or insertion points at this point in this menu.</p>
</td>
</tr>
</table><br>

</dd>
</dl>
<h4>See Also</h4>
<p>
<a href="mmc_ref1_4g8b.htm"><b>IContextMenuCallback</b></a>, <a href="mmc_ref1_1dma.htm"><b>IContextMenuProvider</b></a>, <b>IExtendContextMenu</b> </p>
<p>&nbsp;</p></body>
</HTML>
