<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Nodes in the MMC NameSpace</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_slate_nodes_in_the_mmc_namespace"></a>Nodes in the MMC NameSpace</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The node manager is the COM in-process server that implements all the interfaces that the console and snap-ins use. It is the most important aspect of the console. It includes the code required for your snap-in to function within the console's environment. If you've looked at the list of MMC-related interfaces, you probably noticed that the node manager implements the majority of them. As a result, much of the functionality you are likely to want for your snap-in is already available to you.</p>
<p>
The node manager creates instances of your in-process server as needed and calls the methods of the interfaces your server offers. In turn, your server can call the methods of the interfaces that the node manager offers, thereby incorporating features such as toolbars, context menus, and property sheets. If you don't extend the console in at least one way, your snap-in will never be loaded. </p>
<p>
For any instance of a snap-in, one object exposing <a href="mmc_ref1_4xup.htm"><b>IComponentData</b></a> is created using <b>CoCreateInstance</b>, a function fully explained in the Microsoft Platform SDK. For each view of the snap-in (that is, each MDI child window), MMC asks <a href="mmc_ref1_9hf8.htm"><b>IComponentData::CreateComponent</b></a> to create an instance of an object exposing <a href="mmc_ref1_3cok.htm"><b>IComponent</b></a>. Most snap-ins internally create a new instance of the object for each request. This simplifies the internal memory model for the snap-in author. The snap-in can get added any number of times. For each time, however, another object exposing <a href="mmc_ref1_4xup.htm"><b>IComponentData</b></a> is created.</p>
<p>&nbsp;</p></body>
</HTML>
