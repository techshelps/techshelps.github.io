<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Dual Mode Snap-In</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_slate_dual_mode_snap_in"></a>Dual Mode Snap-In </h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Many Snap-Ins will support both modes of operation, offering some stand-alone functionality and also extending the functionality of other snap-ins. For example, the Windows NT Event Log snap-in reads the event logs of computers. If the MyComputer object exists in the console, the event log Snap-In automatically extends each instance of a MyComputer object and provides the event logs for that computer. Alternatively, the event log can also operate in stand-alone mode, in which case an administrator must manually provide a computer name when the snap-in is opened, and the snap-in simply provides the event logs of this one computer. </p>
<p>
Almost all snap-ins are expected to function standalone, and it's quite common to see snap-ins supporting both modes of behavior. Generally, a snap-in built to support either of these modes is built the same way. The main difference is in how they are registered. Incidentally, the sample snap-in provided with this software development kit is dual mode.</p>
<p>&nbsp;</p></body>
</HTML>
