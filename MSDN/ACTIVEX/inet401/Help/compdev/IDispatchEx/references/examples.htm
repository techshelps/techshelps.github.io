<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Examples</TITLE>

<META NAME=MS-HKWD CONTENT="Examples">
<META NAME="Keywords" CONTENT="Component Development">
<META NAME="Platform" CONTENT="Windows, Win95, WinNT">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">


<SCRIPT>
//<!--
var g_isIE = false, g_isNav = false, g_iMaj = 0, g_sPlat = "";
// -->
</SCRIPT>
<SCRIPT SRC="../../../code/ver.js"></SCRIPT>


<SCRIPT DEFER SRC="../../../code/common.js"></SCRIPT>
<SCRIPT DEFER>
//<!--
function InitPage()
{
	if (g_isIE && g_iMaj >= 4)	
	{
		SetTOC();
	}
}
//-->
</SCRIPT>

<LINK REL="stylesheet" HREF="/msdn/sdk/inetsdk/help/basicsdkIE4.css" TYPE="text/css">
<!-- STYLE_START -->


<SCRIPT>
//<!--
   var sVR = '../../../'	// Set root for the style sheet
   var sCSS = '<LINK REL="stylesheet" HREF="' + sVR;

   if(g_isIE)
   {
	   if (g_iMaj >= 4) // For MSIE 4.0 or later
	   {
		   sCSS += 'basicSDKIE4';
		   if (g_sPlat == "Win") // Windows only for now
		   {
			   document.createStyleSheet(sVR + 'advSDKIE4.css');
		   }
	   }
	   else // For MSIE 3.0 or earlier
	   {
		   sCSS += 'basicSDKIE3';
	   }
   }
   else if (g_isNav) // For all Nav versions
   {
	   sCSS += 'basicSDKNAV';
   }
   else
   {
	   sCSS += 'basicSDKIE3'; // default to IE3 sheet
   }

   sCSS += (sCSS == '' ? '' : '.css" TYPE="text/css">');

   document.write(sCSS);
//-->
</SCRIPT>
<!-- STYLE_END -->
</HEAD>
<BODY onload="InitPage()" BGCOLOR="#FFFFFF">

<A NAME="pagetop"></A><A NAME="ref_idi_examples"></A>
<!-- NAV_LINKS_START -->
<TABLE class=main BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="10%"><TR><TD ROWSPAN="3" VALIGN="TOP" WIDTH="121"><IMG SRC="../../../art/headbar2.gif" WIDTH="121" HEIGHT="82" BORDER=0 ALT="Examples"></TD><TD ROWSPAN="2" VALIGN="TOP" WIDTH="186"><IMG SRC="../../../art/headbarc.gif" WIDTH="186" HEIGHT="44" BORDER=0 ALT="Examples"></TD><TD VALIGN="TOP" WIDTH="470"><IMG SRC="../../../art/replace1.gif" WIDTH="470" HEIGHT="17" BORDER=0 ALT="*"></TD></TR><TR><TD><PRE><IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_1" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Contents>
</object><A STYLE="color:black" ID=TOC HREF=JavaScript:hhal_1.Click()>Contents</A>  <IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_2" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Index_1sz1>
</object><A STYLE="color:black" HREF=JavaScript:hhal_2.Click()>Index</A>  <IMG SRC="../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" HREF="../IDispatchEx.htm#ch_script_idispex">Topic Contents</A>
</PRE></TD></TR>
<TR><TD COLSPAN="2"><PRE><IMG SRC="../../../art/arrowlft.gif" WIDTH="17" HEIGHT="15" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="IDispatch.htm">IDispatch Methods</A>
<IMG SRC="../../../art/arrownxt.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="../../iprovidemultipleclassinfo/multinfo.htm">IProvideMultipleClassInfo</A>
</PRE></TD></TR>
</TABLE>
<!-- NAV_LINKS_END -->
<BLOCKQUOTE class="body">
<!-- CONTENTS_START -->
<h1>Examples</h1>

<P>This JScript code in the function test() does the following:
<UL>
<LI>Create a new object by calling the "Object" constructor and assign a pointer to the new object to the variable "Obj".
<LI>Create a new element ("Elem") in the object and assign to this element a pointer to the function "foo".
<LI>Call this function. Since it is being called as a method, the "this" pointer refers to the object "Obj". The function adds a new element "Bar" to the object.
</UL>
<PRE>  &lt;HTML&gt;
   &lt;BODY&gt;
   &lt;SCRIPT LANGUAGE="JScript"&gt;
   function foo()
   {
      // Create new element and assign the value 10
      this.Bar = 10;
   }

   function test()
   {
      // Construct new object
      Obj = new Object();

      // Create new element and assign function pointer
      Obj.Elem = foo;

      // Call Elem method ("this" == Obj)
      Obj.Elem();

      // Obj.Bar now exists
   }
   test();
   &lt;/SCRIPT&gt;
   &lt;/BODY&gt;
   &lt;/HTML&gt;
</PRE>

<P>A control placed on this same web page could obtain from the browser a dispatch pointer to the script engines. The control could then implement the function test():
<PRE>  &lt;HTML&gt;
   &lt;BODY&gt;
   &lt;SCRIPT LANGUAGE="JScript"&gt;
   function foo()
   {
      // Create new element and assign the value 10
      this.Bar = 10;
   }
   &lt;/SCRIPT&gt;
   &lt;OBJECT ID="test" &lt;CLASSID="CLSID:9417DB5D-FA2A-11D0-8CB3-00C04FC2B085"&gt;&gt;
   &lt;/OBJECT&gt;
   &lt;/BODY&gt;
   &lt;/HTML&gt;
</PRE>

<P>Code from the control "test" that does the same thing as the JScript function test(). Note that these dispatch calls are made into the 'running' JScript engine and change the state of the engine:
<UL>
<LI>Obtain the dispatch pointer to the "foo" function using <A HREF="IDispatchEx_GetDispID.htm#GetDispID">GetDispID</A>().
<LI>Obtain the dispatch pointer to the "Object" function using <A HREF="IDispatchEx_GetDispID.htm#GetDispID">GetDispID</A>().
<LI>Construct an object by calling the "Object" function with <A HREF="IDispatchEx_InvokeEx.htm#InvokeEx">InvokeEx</A>() and obtain a dispatch pointer to the newly constructed object.
<LI>Create a new element "Elem" in the object using <A HREF="IDispatchEx_GetDispID.htm#GetDispID">GetDispID</A>() with the <I>fdexNameEnsure</I> flag.
<LI>Put the dispatch pointer to "foo" in the element using <A HREF="IDispatchEx_InvokeEx.htm#InvokeEx">InvokeEx</A>().
<LI>Call the dispatch pointer to "foo" as a method by calling <A HREF="IDispatchEx_InvokeEx.htm#InvokeEx">InvokeEx</A>() and passing in the dispatch pointer to the constructed object as the "this" pointer.
<LI>The "foo" method creates a new element "Bar" on the current "this" object.
<LI>Verify that the new element "Bar" was created in the constructed object by enumerating through the elements using <A HREF="IDispatchEx_GetNextDispID.htm#GetNextDispID">GetNextDispID</A>().
</UL>
<PRE>  BOOL test(IDispatchEx *pdexScript)
   {
      HRESULT hr;
      VARIANT var;
      BSTR bstrName;
      DISPID dispid, putid;
      IDispatchEx *pdexObj;
      IDispatch   *pdispObj, *pdispFoo;
      DISPPARAMS dispparams, dispparamsNoArgs = {NULL, NULL, 0, 0};

      // Get dispatch pointer for "foo"
      bstrName = SysAllocString(OLESTR("foo"));
      pdexScript-&gt;GetDispID(bstrName, 0, &amp;dispid);
      SysFreeString(bstrName);
      pdexScript-&gt;InvokeEx(dispid, LOCALE_USER_DEFAULT, 
         DISPATCH_PROPERTYGET, &amp;dispparamsNoArgs, 
         &amp;var, NULL, NULL);
      pdispFoo = var.pdispVal;

      // Create object by calling "Object" constructor
      bstrName = SysAllocString(OLESTR("Object"));
      pdexScript-&gt;GetDispID(bstrName, 0, &amp;dispid);
      SysFreeString(bstrName);
      pdexScript-&gt;InvokeEx(dispid, LOCALE_USER_DEFAULT, 
         DISPATCH_CONSTRUCT, &amp;dispparamsNoArgs, 
         &amp;var, NULL, NULL);
      pdispObj = var.pdispVal;
      pdispObj-&gt;QueryInterface(IID_IDispatchEx, (void **)&amp;pdexObj);

      // Create new element in object
      bstrName = SysAllocString(OLESTR("Elem"));
      pdexObj-&gt;GetDispID(bstrName, fdexNameEnsure, &amp;dispid);
      SysFreeString(bstrName);

      // Assign "foo" dispatch pointer to element
      putid = DISPID_PROPERTYPUT;
      var.vt = VT_DISPATCH;
      var.pdispVal = pdispFoo;
      dispparams.rgvarg = &amp;var;
      dispparams.rgdispidNamedArgs = &amp;putid;
      dispparams.cArgs = 1;
      dispparams.cNamedArgs = 1;
      pdexObj-&gt;InvokeEx(dispid, LOCALE_USER_DEFAULT, 
         DISPATCH_PROPERTYPUTREF, &amp;dispparams,
         NULL, NULL, NULL);

      // Invoke method with "this" pointer
      putid = DISPID_THIS;
      var.vt = VT_DISPATCH;
      var.pdispVal = pdispObj;
      dispparams.rgvarg = &amp;var;
      dispparams.rgdispidNamedArgs = &amp;putid;
      dispparams.cArgs = 1;
      dispparams.cNamedArgs = 1;
      pdexObj-&gt;InvokeEx(dispid, LOCALE_USER_DEFAULT,
         DISPATCH_METHOD, &amp;dispparams,
      NULL, NULL, NULL);

      // Confirm that new element "Bar" is in object
      hr = pdexObj-&gt;GetNextDispID(fdexEnumAll, DISPID_STARTENUM, &amp;dispid);
      while (hr != S_FALSE)
      {
         pdexObj-&gt;GetMemberName(dispid, &amp;bstrName);
         if (!wcscmp(bstrName, OLESTR("Bar")))
            return TRUE;
         SysFreeString(bstrName);
         hr = pdexObj-&gt;GetNextDispID(fdexEnumAll, dispid, &amp;dispid);
      }
      return FALSE;
   }
</PRE>
<!-- CONTENTS_END -->
<!-- START PAGE FOOTER -->
<H6><HR size=1></H6>
<P><A ID=line HREF="#pagetop"><IMG src="../../../art/arrowup1.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER="0" ALT="Up">&nbsp;Top of Page</A>
<BR><A ID=line HREF="http://www.microsoft.com/misc/cpyright.htm" TARGET="_top">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
<!-- END PAGE FOOTER -->
</BLOCKQUOTE>
</BODY>
</HTML>
