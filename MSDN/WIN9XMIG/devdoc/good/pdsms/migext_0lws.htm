<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Testing a Migration DLL</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_zaw_testing_a_migration_dll"></a>Testing a Migration DLL</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Applications that do not survive migration from one version of Microsoft® Windows® to another will not comply with Windows logo requirements. Your migration DLL can help to preserve your logo compliance. </p>
<p>
The Setup program attempts to detect conflicts that arise from implementing your application under the new operating system. It may or may not succeed in identifying inconsistencies. Because of this, you should test your application extensively under various migration scenarios.</p>
<p>
The migration functionality is provided to enable you to ensure that your customer base can use your application under the new operating system. You should test how your application behaves under different versions of Windows. Ideally, it behaves the same under different versions. </p>
<p>
If conflicts exist, you have two options. You can either correct the intrinsic problem so that no problems occur during migration, or you can create a migration DLL. If you do not take advantage of the Migration Extension Interface, your customers will need to reinstall your application for it to run correctly under the newly installed system.</p>
<p>
Migration DLLs must be thoroughly tested before being distributed to end users by means of the World Wide Web or other media. The following procedures outline the minimal process you should undertake during your test. Note that you should repeat the tests for multiple user account scenarios (that is, default, roaming, workgroup, and domain users). The scenarios should also cover combinations of these user accounts.</p>
<h5>To test your migration DLL under an attended upgrade:</h5>
<ol>
<li>
Install Windows 95 or Windows 98 on a computer.</li>
<li>
Install the target application on the computer.</li>
<li>
Start Windows NT Setup, and select the <b>Upgrade</b> option on the <b>Welcome</b> page.</li>
<li>
When prompted, insert the media containing the migration DLL.</li>
<li>
Complete Windows NT Setup.</li>
<li>
Launch the migrated application on Windows NT.</li>
<li>
Run any test suites to determine if the application is fully functional.</li>
</ol>
<h5>To test your migration DLL under an unattended upgrade:</h5>
<ol>
<li>
Install Windows 95 or Windows 98<i> </i>on a computer.</li>
<li>
Install the target application on the computer.</li>
<li>
Place the migration DLL in a subdirectory of %windir%\setup\win95upg.</li>
<li>
Start Windows NT Setup in unattended mode with the "Win95Upgrade = Yes" key set in the answer file.</li>
<li>
Complete Windows NT Setup.</li>
<li>
Launch the migrated application on Windows NT.</li>
<li>
Run any test suites to determine if the application is fully functional.</li>
</ol>
<p>&nbsp;</p></body>
</HTML>
