<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Initialize9x</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_zaw_initialize9x"></a>Initialize9x</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Setup calls <b>Initialize9x</b> after relocating the migration DLL to the local hard disk. </p>
<pre><code><b>LONG
CALLBACK</b> 
<b>Initialize9x(</b>
    <b>IN LPCSTR</b> <i>WorkingDirectory</i><b>,</b>
    <b>IN LPCSTR</b> <i>SourceDirectories</i><b>,</b><i>
</i>    <b>LPVOID</b> <i>Reserved</i>
    <b>);</b></code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>WorkingDirectory </i></dt>
<dd>
Points to the path of a Setup-supplied directory your migration DLL can use to store its private temporary data. This directory will contain MIGRATE.DLL and all associated files. Your migration DLL must write to this directory if it needs temporary data storage. Setup provides this directory again during the Windows NT phase of the upgrade process and automatically deletes it after the upgrade is complete. </dd>
<dt>
<i>SourceDirectories </i></dt>
<dd>
Points to the path of the Windows NT installation files. This path is a multi-sz string to enable you to specify multiple source directories. Normally, this directory is D:\I386 where D:\ is the CD-ROM drive on the computer.

<p>
<b>Note</b>  Compressed files on the Windows NT installation compact disc can be decompressed by using the Setup API functions <b>SetupGetFileCompressionInfo</b> and <b>SetupDecompressOrCopyFile</b>.

</dd>
<dt>
<i>Reserved </i></dt>
<dd>
Reserved for future use.</dd>
</dl>
<h4>Return Values</h4>
<p>
ERROR_SUCCESS if your migration DLL found one or more installed components for the target application. If your DLL does not attempt to detect installed components in <b>Initialize9x</b>, it must also return ERROR_SUCCESS. </p>
<p>
ERROR_NOT_INSTALLED if the migration DLL initializes properly but does not find any of its components installed on the active Windows 95 or Windows 98 installation. Note that Setup will not call your DLL again if it returns ERROR_NOT_INSTALLED.</p>
<p>
All other return values (Win32 error values) are considered initialization errors. Setup reports the error to the user, cleans up your migration DLL files, and asks the user to abort or continue the Windows NT installation process.</p>
<p>
Exceptions generated by your migration DLL cause Setup to report RPC error messages. Setup provides more information in SETUPERR.LOG.</p>
<h4>Remarks</h4>
<p>
Setup calls <b>Initialize9x</b> after relocating your migration DLL to the local hard disk. During this call, your DLL should try to detect its new installation. It should return ERROR_SUCCESS if it is ready to be called by Setup during the Windows NT portion of the upgrade. If the DLL returns ERROR_NOT_INSTALLED, Setup will stop processing it. </p>
<p>
The current directory is set to the working directory and will not be changed by Setup during the processing of a migration DLL. </p>
<p>&nbsp;</p></body>
</HTML>
