<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ScrollWindow</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_scrollwindow"></a>ScrollWindow</h1>
<p>
The <b>ScrollWindow</b> function scrolls the content of the specified window's client area. The <b>ScrollWindow</b> function exists for backward compatibility. New applications should use the <b>ScrollWindowEx</b> function.</p>
<pre><code><b>BOOL ScrollWindow(
  HWND</b><i> hWnd</i><b>,    </b>// handle to window to scroll
<b>  int</b><i> XAmount</i><b>,  </b>// amount of horizontal scrolling
<b>  int</b><i> YAmount</i><b>,  </b>// amount of vertical scrolling
  <b>CONST RECT</b> <i>*lpRect</i><b>,</b>
<b>                </b>// address of structure with scroll rectangle
<b>  CONST RECT</b><i> *lpClipRect</i> 
                // address of structure with clip rectangle
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hWnd</i></dt>
<dd>
Handle to the window where the client area is to be scrolled. </dd>
<dt>
<i>XAmount</i></dt>
<dd>
Specifies the amount, in device units, of horizontal scrolling. If the window being scrolled has the CS_OWNDC or CS_CLASSDC style, then this parameter uses logical units rather than device units. This parameter must be a negative value to scroll the content of the window to the left. </dd>
<dt>
<i>YAmount</i></dt>
<dd>
Specifies the amount, in device units, of vertical scrolling. If the window being scrolled has the CS_OWNDC or CS_CLASSDC style, then this parameter uses logical units rather than device units. This parameter must be a negative value to scroll the content of the window up. </dd>
<dt>
<i>lpRect</i></dt>
<dd>
Pointer to the <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_rect_str">
</object><a href=JavaScript:alink_1.Click()><b>RECT</b></a> structure specifying the portion of the client area to be scrolled. If this parameter is NULL, the entire client area is scrolled. </dd>
<dt>
<i>lpClipRect</i></dt>
<dd>
Pointer to the <b>RECT</b> structure containing the coordinates of the clipping rectangle. Only device bits within the clipping rectangle are affected. Bits scrolled from the outside of the rectangle to the inside are painted; bits scrolled from the inside of the rectangle to the outside are not painted. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is nonzero.</p>
<p>
If the function fails, the return value is zero. To get extended error information, call <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_getlasterror">
</object><a href=JavaScript:alink_2.Click()><b>GetLastError</b></a>. </p>
<h4>Remarks</h4>
<p>
If the caret is in the window being scrolled, <b>ScrollWindow</b> automatically hides the caret to prevent it from being erased and then restores the caret after the scrolling is finished. The caret position is adjusted accordingly. </p>
<p>
The area uncovered by <b>ScrollWindow</b> is not repainted, but it is combined into the window's update region. The application eventually receives a WM_PAINT message notifying it that the region must be repainted. To repaint the uncovered area at the same time the scrolling is in action, call the <b>UpdateWindow</b> function immediately after calling <b>ScrollWindow</b>. </p>
<p>
If the <i>lpRect</i> parameter is NULL, the positions of any child windows in the window are offset by the amount specified by the <i>XAmount</i> and <i>YAmount</i> parameters; invalid (unpainted) areas in the window are also offset. <b>ScrollWindow</b> is faster when <i>lpRect</i> is NULL. </p>
<p>
If <i>lpRect</i> is not NULL, the positions of child windows are not changed and invalid areas in the window are not offset. To prevent updating problems when <i>lpRect</i> is not NULL, call <b>UpdateWindow</b> to repaint the window before calling <b>ScrollWindow</b>. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winuser.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use user32.lib.</p>
<h4>See Also</h4>
<p>
<a href="scrolbar_3v8z.htm">Scroll Bars Overview</a>, <a href="scrolbar_714j.htm">Scroll Bar Functions</a>, <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_rect_str">
</object><a href=JavaScript:alink_3.Click()><b>RECT</b></a>, <a href="scrolbar_7fc3.htm"><b>ScrollDC</b></a>, <a href="scrolbar_0jaw.htm"><b>ScrollWindowEx</b></a>, <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_updatewindow">
</object><a href=JavaScript:alink_4.Click()><b>UpdateWindow</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
