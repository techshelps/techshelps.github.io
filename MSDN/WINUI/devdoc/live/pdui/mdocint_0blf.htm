<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating Frame and Child Windows</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_creating_frame_and_child_windows"></a>Creating Frame and Child Windows</h2>
<p>
After registering its window classes, an MDI application can create its windows. First, it creates its frame window by using the <a href="windows_33jr.htm"><b>CreateWindow</b></a> or <a href="windows_1w6w.htm"><b>CreateWindowEx</b></a> function. After creating its frame window, the application creates its client window, again by using <b>CreateWindow</b> or <b>CreateWindowEx</b>. The application should specify MDICLIENT as the client window's class name; MDICLIENT is a preregistered window class defined by the system. The <i>lpvParam</i> parameter of <b>CreateWindow</b> or <b>CreateWindowEx</b> should point to a <a href="windows_5bhu.htm"><b>CLIENTCREATESTRUCT</b></a> structure. This structure contains the members described in the following table: </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=25%>Member</th>
<th align=left width=75%>Description</th>
</tr>
<tr valign=top>
<td width=25%><b>hWindowMenu</b></td>
<td width=75%>Handle to the <b>Window</b> menu used for controlling MDI child windows. As child windows are created, the application adds their titles to the <b>Window</b> menu as menu items. The user can then activate a child window by clicking its title on the <b>Window</b> menu.</td>
</tr>
<tr valign=top>
<td width=25%><b>idFirstChild</b></td>
<td width=75%>Specifies the identifier of the first MDI child window. The first MDI child window created is assigned this identifier. Additional windows are created with incremented window identifiers. When a child window is destroyed, the system immediately reassigns the window identifiers to keep their range contiguous.</td>
</tr>
</table><br>
<p>
When a child window's title is added to the <b>Window</b> menu, the system assigns an identifier to the child window. When the user clicks a child window's title, the frame window receives a <a href="editcon_8wh0.htm">WM_COMMAND</a> message with the identifier in the <i>wParam</i> parameter. You should specify a value for the <b>idFirstChild</b> member that does not conflict with menu-item identifiers in the frame window's menu. </p>
<p>
Multipad's frame window procedure creates the MDI client window while processing the <a href="windows_41d1.htm">WM_CREATE</a> message. The following example shows how the client window is created.</p>
<pre><code>case WM_CREATE: 
    { 
        CLIENTCREATESTRUCT ccs; 
 
        // Retrieve the handle to the Window menu and assign the 
        // first child window identifier. 
 
        ccs.hWindowMenu = GetSubMenu(GetMenu(hwnd), WINDOWMENU); 
        ccs.idFirstChild = IDM_WINDOWCHILD; 
 
        // Create the MDI client window. 
 
        hwndMDIClient = CreateWindow( "MDICLIENT", (LPCTSTR) NULL, 
            WS_CHILD | WS_CLIPCHILDREN | WS_VSCROLL | WS_HSCROLL, 
            0, 0, 0, 0, hwnd, (HMENU) 0xCAC, hInst, (LPSTR) &amp;ccs); 
 
        ShowWindow(hwndMDIClient, SW_SHOW); 
    } 
    break; 
 </code></pre>
<p>
Titles of child windows are added to the bottom of the <b>Window</b> menu. If the application adds strings to the <b>Window</b> menu by using the <a href="newmenus_0met.htm"><b>AppendMenu</b></a> function, these strings can be overwritten by the titles of the child windows when the <b>Window</b> menu is repainted (whenever a child window is created or destroyed). An MDI application that adds strings to its <b>Window</b> menu should use the <a href="newmenus_9yid.htm"><b>InsertMenu</b></a> function and verify that the titles of child windows have not overwritten these new strings. </p>
<p>
Use the WS_CLIPCHILDREN style to create the MDI client window to prevent the window from painting over its child windows. </p>
<p>&nbsp;</p></body>
</HTML>
