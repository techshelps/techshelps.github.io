<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>keybd_event</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_keybd_event"></a>keybd_event</h1>
<p>
The <b>keybd_event</b> function synthesizes a keystroke. The system can use such a synthesized keystroke to generate a <a href="keybinpt_45dc.htm">WM_KEYUP</a> or <a href="keybinpt_9l7y.htm">WM_KEYDOWN</a> message. The keyboard driver's interrupt handler calls the <b>keybd_event</b> function. </p>
<p>
<b>Windows NT:</b> This function has been superseded. Use <a href="keybinpt_7id0.htm"><b>SendInput</b></a> instead.</p>
<pre><code><b>VOID keybd_event(
  BYTE</b><i> bVk</i><b>,           </b>// virtual-key code
<b>  BYTE</b><i> bScan</i><b>,         </b>// hardware scan code
<b>  DWORD</b><i> dwFlags</i><b>,      </b>// flags specifying various function options
<b>  DWORD</b><i> dwExtraInfo</i>   // additional data associated with keystroke
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>bVk</i></dt>
<dd>
Specifies a virtual-key code. The code must be a value in the range 1 to 254. </dd>
<dt>
<i>bScan</i></dt>
<dd>
Specifies a hardware scan code for the key. </dd>
<dt>
<i>dwFlags</i></dt>
<dd>
A set of flag bits that specify various aspects of function operation. An application can use any combination of the following predefined constant values to set the flags. 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=45%>Value</th>
<th align=left width=55%>Meaning</th>
</tr>
<tr valign=top>
<td width=45%>KEYEVENTF_EXTENDEDKEY</td>
<td width=55%>If specified, the scan code was preceded by a prefix byte having the value 0xE0 (224).</td>
</tr>
<tr valign=top>
<td width=45%>KEYEVENTF_KEYUP</td>
<td width=55%>If specified, the key is being released. If not specified, the key is being depressed.</td>
</tr>
</table><br>

</dd>
<dt>
<i>dwExtraInfo</i></dt>
<dd>
Specifies an additional 32-bit value associated with the key stroke. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
This function has no return value. </p>
<h4>Remarks</h4>
<p>
Although <b>keybd_event</b> passes an OEM-dependent hardware scan code to the system, applications should not use the scan code. The system converts scan codes to virtual-key codes internally and clears the up/down bit in the scan code before passing it to applications. </p>
<p>
An application can simulate a press of the PRINTSCREEN key in order to obtain a screen snapshot and save it to the clipboard. To do this, call <b>keybd_event</b> with the <i>bVk</i> parameter set to VK_SNAPSHOT, and the <i>bScan</i> parameter set to 0 for a snapshot of the full screen or set <i>bScan</i> to 1 for a snapshot of the active window. </p>
<p>
<b>Windows CE:</b> Windows CE supports an additional flag for the <i>dwFlags</i> parameter. Use the KEYEVENTF_SILENT flag to simulate a keystroke without making a clicking sound.</p>
<p>
Windows CE does not support the KEYEVENTF_EXTENDEDKEY flag.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 1.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winuser.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use user32.lib.</p>
<h4>See Also</h4>
<p>
<a href="keybinpt_4l9w.htm">Keyboard Input Overview</a>, <a href="keybinpt_43jn.htm">Keyboard Input Functions</a>, <a href="keybinpt_1x0l.htm"><b>GetAsyncKeyState</b></a>, <a href="keybinpt_4z51.htm"><b>GetKeyState</b></a>, <a href="keybinpt_0hfd.htm"><b>MapVirtualKey</b></a>, <a href="keybinpt_2iqt.htm"><b>SetKeyboardState</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
