<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WM_GETTEXTLENGTH</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_wm_gettextlength"></a>WM_GETTEXTLENGTH</h1>
<p>
An application sends a WM_GETTEXTLENGTH message to determine the length, in characters, of the text associated with a window. The length does not include the terminating null character. </p>
<pre><code>WM_GETTEXTLENGTH 
wParam = 0; // not used; must be zero 
lParam = 0; // not used; must be zero 
 </code></pre>
<h4>Parameters</h4>
<p>
This message has no parameters. </p>
<h4>Return Values</h4>
<p>
The return value is the length, in characters, of the text. </p>
<h4>Default Action</h4>
<p>
The <a href="winprocs_10o3.htm"><b>DefWindowProc</b></a> function returns the length, in characters, of the text. Under certain conditions, this value may actually be greater than the length of the text. For more information, see the following Remarks section.</p>
<h4>Remarks</h4>
<p>
For an edit control, the text to be copied is the content of the edit control. For a combo box, the text is the content of the edit control (or static-text) portion of the combo box. For a button, the text is the button name. For other windows, the text is the window title. To determine the length of an item in a list box, an application can use the LB_GETTEXTLEN message. </p>
<p>
Under certain conditions, the <a href="winprocs_10o3.htm"><b>DefWindowProc</b></a><b> </b>function returns a value that is larger than the actual length of the text. This occurs with certain mixtures of ANSI and Unicode, and is due to the system allowing for the possible existence of DBCS characters within the text. The return value, however, will always be at least as large as the actual length of the text; you can thus always use it to guide buffer allocation. This behavior can occur when an application uses both ANSI functions and common dialogs, which use Unicode. </p>
<p>
To obtain the exact length of the text, use the WM_GETTEXT, LB_GETTEXT, or CB_GETLBTEXT messages, or the <b>GetWindowText</b> function.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 1.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winuser.h.</p>
<h4>See Also</h4>
<p>
<a href="windows_6t2r.htm">Windows Overview</a>, <a href="windows_2v8z.htm">Window Messages</a>, <a href="combobox_6bjo.htm">CB_GETLBTEXT</a>, <a href="winprocs_10o3.htm"><b>DefWindowProc</b></a>, <a href="windows_5gms.htm"><b>GetWindowText</b></a>, <a href="windows_0294.htm"><b>GetWindowTextLength</b></a>, <a href="listbox_6a9g.htm">LB_GETTEXT</a>, <a href="listbox_1qr2.htm">LB_GETTEXTLEN</a>, <a href="windows_34ok.htm">WM_GETTEXT</a> </p>
<p>&nbsp;</p></body>
</HTML>
