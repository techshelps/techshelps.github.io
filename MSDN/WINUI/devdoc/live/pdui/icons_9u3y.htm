<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ExtractAssociatedIcon</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_extractassociatedicon"></a>ExtractAssociatedIcon</h1>
<p>
The <b>ExtractAssociatedIcon</b> function returns a handle to an indexed icon found in a file or an icon found in an associated executable file. </p>
<pre><code><b>HICON ExtractAssociatedIcon(
  HINSTANCE</b><i> hInst</i><b>,    </b>// application instance handle
<b>  LPTSTR</b><i> lpIconPath</i><b>,  </b>// path and filename of file for which icon is 
                      // wanted
<b>  LPWORD</b><i> lpiIcon</i>      // pointer to icon index
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hInst</i></dt>
<dd>
Specifies the instance of the application calling the function. </dd>
<dt>
<i>lpIconPath</i></dt>
<dd>
Pointer to a string that specifies the full path and filename of the file for which an icon is desired. The function extracts the icon handle from that file, or from an executable file associated with that file. 
<p>
If the icon handle is obtained from an executable file, the function stores the full path and filename of that executable in the string pointed to by <i>lpIconPath</i>. 
</dd>
<dt>
<i>lpiIcon</i></dt>
<dd>
Pointer to a <b>WORD</b> that specifies the index of the icon whose handle is to be obtained. 
<p>
If the icon handle is obtained from an executable file, the function stores the icon's identifier in the <b>WORD</b> pointed to by <i>lpiIcon</i>. 

</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is an icon handle. If the icon is extracted from an associated executable file, the function stores the full path and filename of the executable file in the string pointed to by <i>lpIconPath</i>, and stores the icon's identifier in the <b>WORD</b> pointed to by <i>lpiIcon</i>. </p>
<p>
If the function fails, the return value is NULL. </p>
<h4>Remarks</h4>
<p>
The <b>ExtractAssociatedIcon</b> function first looks for the indexed icon in the file specified by <i>lpIconPath</i>. If the function cannot obtain the icon handle from that file, and the file has an associated executable file, it looks in that executable file for an icon. Associations with executable files are based on filename extensions, are stored in the per-user part of the registry, and can be defined using File Manager's Associate command. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.5 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in shellapi.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use shell32.lib.<br>
<b>&nbsp;&nbsp;Unicode: </b>Implemented as Unicode and ANSI versions on Windows NT.</p>
<h4>See Also</h4>
<p>
<a href="icons_1xpv.htm">Icons Overview</a>, <a href="icons_7zlf.htm">Icon Functions</a>, <a href="icons_7h2m.htm"><b>ExtractIcon</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
