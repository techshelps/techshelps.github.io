<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the Print Property Sheet</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_using_the_print_property_sheet"></a>Using the Print Property Sheet</h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
This topic describes sample code that displays a <b>Print</b> property sheet so a user can select options for printing a document. The sample code first allocates and initializes a <a href="commdlg3_53hu.htm"><b>PRINTDLGEX</b></a> structure, then calls the <a href="commdlg3_5s54.htm"><b>PrintDlgEx</b></a> function to display the property sheet. </p>
<p>
The sample code sets the PD_RETURNDC flag in the <b>Flags</b> member of the <a href="commdlg3_7xwy.htm"><b>PRINTDLG</b></a> structure. This causes the <b>PrintDlgEx</b> function to return a device context handle for the selected printer in the <b>hDC</b> member. You can use the handle in functions such as <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_drawtext">
</object><a href=JavaScript:alink_1.Click()><b>DrawText</b></a> that render output sent to the printer. </p>
<p>
On input, the sample code sets the <b>hDevMode</b> and <b>hDevNames</b> members to NULL. If the function returns S_OK, these members return handles to <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_devmode_str">
</object><a href=JavaScript:alink_2.Click()><b>DEVMODE</b></a> and <a href="commdlg3_4liq.htm"><b>DEVNAMES</b></a> structures containing the user's input and information about the printer. You can use this information to prepare the output to be sent to the selected printer. </p>
<p>
After the printing operation has been completed, the sample code frees the <b>DEVMODE</b> and <b>DEVNAMES</b> buffers and calls the <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_deletedc">
</object><a href=JavaScript:alink_3.Click()><b>DeleteDC</b></a> function to delete the device context.</p>
<pre><code>HRESULT DisplayPrintPropertySheet(
    HWND hWnd  // Window that owns the property sheet
)
{
HRESULT hResult;
LPPRINTDLGEX pPDX = NULL;
LPPRINTPAGERANGE pPageRanges = NULL;

// Allocate the PRINTDLGEX structure.

pPDX = (LPPRINTDLGEX)GlobalAlloc(GPTR, sizeof(PRINTDLGEX));
if (!pPDX)
    return E_OUTOFMEMORY;

// Allocate an array of PRINTPAGERANGE structures.

pPageRanges = (LPPRINTPAGERANGE) GlobalAlloc(GPTR, 
                   10 * sizeof(PRINTPAGERANGE));
if (!pPageRanges)
    return E_OUTOFMEMORY;

//  Initialize the PRINTDLGEX structure.

pPDX-&gt;lStructSize = sizeof(PRINTDLGEX);
pPDX-&gt;hwndOwner = hWnd;
pPDX-&gt;hDevMode = NULL;
pPDX-&gt;hDevNames = NULL;
pPDX-&gt;hDC = NULL;
pPDX-&gt;Flags = PD_RETURNDC | PD_COLLATE;
pPDX-&gt;Flags2 = 0;
pPDX-&gt;ExclusionFlags = 0;
pPDX-&gt;nPageRanges = 0;
pPDX-&gt;nMaxPageRanges = 10;
pPDX-&gt;lpPageRanges = pPageRanges;
pPDX-&gt;nMinPage = 1;
pPDX-&gt;nMaxPage = 1000;
pPDX-&gt;nCopies = 1;
pPDX-&gt;hInstance = 0;
pPDX-&gt;lpPrintTemplateName = NULL;
pPDX-&gt;lpCallback = NULL;
pPDX-&gt;nPropertyPages = 0;
pPDX-&gt;lphPropertyPages = NULL;
pPDX-&gt;nStartPage = START_PAGE_GENERAL;
pPDX-&gt;dwResultAction = 0;

//  Invoke the Print property sheet.

hResult = PrintDlgEx(pPDX);

if ( (hResult == S_OK) &amp;&amp;
           pPDX-&gt;dwResultAction == PD_RESULT_PRINT) {

    // User clicked the Print button, so
    // use the DC and other information returned in the 
    // PRINTDLGEX structure to print the document

}

if (pPDX-&gt;hDC != NULL) 
    DeleteDC(pPDX-&gt;hDC);
if (pPDX-&gt;hDevMode != NULL) 
    GlobalFree(pPDX-&gt;hDevMode); 
if (pPDX-&gt;hDevNames != NULL) 
    GlobalFree(pPDX-&gt;hDevNames); 

return hResult;
}
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
