<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Displaying a Cursor</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_displaying_a_cursor"></a>Displaying a Cursor</h2>
<p>
The system automatically displays the class cursor (the cursor associated with the window to which the cursor is pointing). You can assign a class cursor while registering a window class. The following example illustrates this by assigning a cursor handle to the <b>hCursor</b> member of the <a href="winclass_8yk2.htm"><b>WNDCLASS</b></a> structure identified by the <i>wc</i> parameter. </p>
<pre><code>WNDCLASS  wc; 
 
// Fill the window class structure with parameters that 
// describe the main window. 
 
wc.style = NULL;                        // class style(s) 
wc.lpfnWndProc = (WNDPROC) MainWndProc; // window procedure 
wc.cbClsExtra = 0;           // no per-class extra data 
wc.cbWndExtra = 0;           // no per-window extra data 
wc.hInstance = hinst;        // application that owns the class 
wc.hIcon = LoadIcon(NULL, IDI_APPLICATION);     // class icon 
wc.hCursor = LoadCursor(hinst, MAKEINTRESOURCE(230)); // class cursor 
wc.hbrBackground = GetStockObject(WHITE_BRUSH); // class background 
wc.lpszMenuName =  "GenericMenu";               // class menu 
wc.lpszClassName = "GenericWClass"              // class name 
 
// Register the window class. 
 
return RegisterClass(&amp;wc); 
 </code></pre>
<p>
When the window class is registered, the cursor identified by 230 in the application's resource-definition file will be the default cursor for all windows based on the class. </p>
<p>
Your application can change the design of the cursor by using the <a href="cursors_2mcy.htm"><b>SetCursor</b></a> function and specifying a different cursor handle. However, when the cursor moves, the system redraws the class cursor at the new location. To prevent the class cursor from being redrawn, you must process the <a href="cursors_5mb6.htm">WM_SETCURSOR</a> message. Each time the cursor moves and mouse input is not captured, the system sends this message to the window in which the cursor is moving. </p>
<p>
You can specify different cursors for different conditions while processing WM_SETCURSOR. For example, the following example shows how to display the <i>hCurs3</i> cursor whenever the cursor moves over the icon of a minimized application. </p>
<pre><code>case WM_SETCURSOR: 
 
    // If the window is minimized, draw the hCurs3 cursor. 
    // If the window is not minimized, draw the default 
    // cursor (class cursor). 
 
    if (IsIconic(hwnd)) 
    { 
        SetCursor(hCurs3); 
        break; 
    } 
 </code></pre>
<p>
When the window is not minimized, the system displays the class cursor. </p>
<p>
You can replace a class cursor by using the <a href="winclass_1d2f.htm"><b>SetClassLong</b></a> function. This function changes the default window settings for all windows of a given class. The following example replaces the existing class cursor with the <i>hCurs2</i> cursor. </p>
<pre><code>// Change the cursor for window class represented by hwnd. 
 
SetClassLong(hwnd,    // window handle 
    GCL_HCURSOR,      // change cursor 
    (LONG) hCurs2);   // new cursor 
 </code></pre>
<p>
For more information, see <a href="winclass_1ooj.htm">Window Classes</a> and <a href="mousinpt_5rjo.htm">Mouse Input</a>. </p>
<p>&nbsp;</p></body>
</HTML>
