<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SetCapture</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_setcapture"></a>SetCapture</h1>
<p>
The <b>SetCapture</b> function sets the mouse capture to the specified window belonging to the current thread. Once a window has captured the mouse, all mouse input is directed to that window, regardless of whether the cursor is within the borders of that window. Only one window at a time can capture the mouse. </p>
<p>
If the mouse cursor is over a window created by another thread, the system will direct mouse input to the specified window only if a mouse button is down. </p>
<pre><code><b>HWND SetCapture(
  HWND</b><i> hWnd</i>   // handle of window to receive mouse capture
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hWnd</i></dt>
<dd>
Handle to the window in the current thread that is to capture the mouse. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
The return value is the handle of the window that had previously captured the mouse. If there is no such window, the return value is NULL. </p>
<h4>Remarks</h4>
<p>
Only the foreground window can capture the mouse. When a background window attempts to do so, the window receives messages only for mouse events that occur when the cursor hot spot is within the visible portion of the window. Also, even if the foreground window has captured the mouse, the user can still click another window, bringing it to the foreground. </p>
<p>
When the window no longer requires all mouse input, the thread that created the window should call the <b>ReleaseCapture</b> function to release the mouse. </p>
<p>
This function cannot be used to capture mouse input meant for another process. </p>
<p>
<b>Windows 95:</b> Calling <b>SetCapture</b> causes the window that is losing the mouse capture to receive a WM_CAPTURECHANGED message.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 1.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winuser.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use user32.lib.</p>
<h4>See Also</h4>
<p>
<a href="mousinpt_5rjo.htm">Mouse Input Overview</a>, <a href="mousinpt_50xf.htm">Mouse Input Functions</a>, <a href="mousinpt_4sf9.htm"><b>GetCapture</b></a>, <a href="mousinpt_7asl.htm"><b>ReleaseCapture</b></a>, <a href="mousinpt_5fvo.htm">WM_CAPTURECHANGED</a> </p>
<p>&nbsp;</p></body>
</HTML>
