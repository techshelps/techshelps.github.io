<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Registering a Window Class</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_registering_a_window_class"></a>Registering a Window Class</h2>
<p>
A window class defines the attributes of a window, such as its style, icon, cursor, menu, and window procedure. The first step in registering a window class is to fill in a <a href="winclass_450y.htm"><b>WNDCLASSEX</b></a> structure with the window class information. For more information, see <a href="winclass_1qcz.htm">Elements of a Window Class</a>. Next, pass the structure to the <a href="winclass_0wc8.htm"><b>RegisterClassEx</b></a> function. For more information, see <a href="winclass_4lv7.htm">Using Window Classes</a>. </p>
<p>
To register an application global class, specify the CS_GLOBALCLASS style in the <b>style</b> member of the <b>WNDCLASSEX</b> structure. When registering an application local class, do not specify the CS_GLOBALCLASS style. </p>
<p>
If you register the window class using the ANSI version of <b>RegisterClassEx</b>, <b>RegisterClassExA</b>, the application requests that the system pass text parameters of messages to the windows of the created class using the ANSI character set; if you register the class using the Unicode version of <b>RegisterClassEx</b>, <b>RegisterClassExW</b>, the application requests that the system pass text parameters of messages to the windows of the created class using the Unicode character set. The <a href="windows_6w2t.htm"><b>IsWindowUnicode</b></a> function enables applications to query the nature of each window. For more information on ANSI and Unicode functions in the Win32 API, see <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_win32_function_prototypes">
</object><a href=JavaScript:alink_1.Click()>Win32 Function Prototypes</a>.</p>
<p>
The executable or DLL that registered the class is the owner of the class. The system determines class ownership from the <b>hInstance</b> member of the <a href="winclass_450y.htm"><b>WNDCLASSEX</b></a> structure passed to the <a href="winclass_0wc8.htm"><b>RegisterClassEx</b></a> function when the class is registered. For DLLs, the <b>hInstance</b> member <i>must</i> be the instance handle of the DLL. </p>
<p>
<b>Windows 95:</b> The class is destroyed when the owner closes or is unloaded. For this reason, the process must destroy all windows using the class before the owner closes or is unloaded. </p>
<p>
<b>Windows NT:</b> The class is not destroyed when the DLL that owns it is unloaded. Therefore, if the system calls the window procedure for a window of that class, it will cause an access violation, because the DLL containing the window procedure is no longer in memory. The process must destroy all windows using the class before the DLL is unloaded and call the <a href="winclass_7bjn.htm"><b>UnregisterClass</b></a> function. </p>
<p>&nbsp;</p></body>
</HTML>
