<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GetKeyState</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_getkeystate"></a>GetKeyState</h1>
<p>
The <b>GetKeyState</b> function retrieves the status of the specified virtual key. The status specifies whether the key is up, down, or toggled (on, off — alternating each time the key is pressed). </p>
<pre><code><b>SHORT GetKeyState(
  int</b><i> nVirtKey</i>   // virtual-key code
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>nVirtKey</i></dt>
<dd>
Specifies a virtual key. If the desired virtual key is a letter or digit (A through Z, a through z, or 0 through 9), <i>nVirtKey</i> must be set to the ASCII value of that character. For other keys, it must be a virtual-key code. 
<p>
If a non-English keyboard layout is used, virtual keys with values in the range ASCII A through Z and 0 through 9 are used to specify most of the character keys. For example, for the German keyboard layout, the virtual key of value ASCII O (0x4F) refers to the "o" key, whereas VK_OEM_1 refers to the "o with umlaut" key. 

</dd>
</dl>
<h4>Return Values</h4>
<p>
The return value specifies the status of the given virtual key, as follows: 
<ul>
<li>
If the high-order bit is 1, the key is down; otherwise, it is up. </li>
<li>
If the low-order bit is 1, the key is toggled. A key, such as the caps lock key, is toggled if it is turned on. The key is off and untoggled if the low-order bit is 0. A toggle key's indicator light (if any) on the keyboard will be on when the key is toggled, and off when the key is untoggled. </li>
</ul>
<h4>Remarks</h4>
<p>
The key status returned from this function changes as a given thread reads key messages from its message queue. The status does not reflect the interrupt-level state associated with the hardware. Use the <a href="keybinpt_1x0l.htm"><b>GetAsyncKeyState</b></a> function to retrieve that information. </p>
<p>
An application calls <b>GetKeyState</b> in response to a keyboard-input message. This function retrieves the state of the key when the input message was generated. </p>
<p>
To retrieve state information for all the virtual keys, use the <a href="keybinpt_0nhh.htm"><b>GetKeyboardState</b></a> function. </p>
<p>
An application can use the virtual-key code constants VK_SHIFT, VK_CONTROL, and VK_MENU as values for the <i>nVirtKey</i> parameter. This gives the status of the shift, ctrl, or alt keys without distinguishing between left and right. An application can also use the following virtual-key code constants as values for <i>nVirtKey</i> to distinguish between the left and right instances of those keys. </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=25%>VK_LSHIFT</td>
<td width=75%>VK_RSHIFT</td>
</tr>
<tr valign=top>
<td width=25%>VK_LCONTROL</td>
<td width=75%>VK_RCONTROL</td>
</tr>
<tr valign=top>
<td width=25%>VK_LMENU</td>
<td width=75%>VK_RMENU</td>
</tr>
</table><br>
<p>
These left- and right-distinguishing constants are available to an application only through the <b>GetKeyboardState</b>, <b>SetKeyboardState</b>, <b>GetAsyncKeyState</b>, <b>GetKeyState</b>, and <b>MapVirtualKey</b> functions. </p>
<p>
<b>Windows CE:</b> The <b>GetKeyState</b> function can only be used to check the down state of the following virtual keys:</p>
<p class=indent1>
VK_CONTROL</p>
<p class=indent1>
VK_SHIFT</p>
<p class=indent1>
VK_MENU</p>
<p class=indent1>
VK_LCONTROL</p>
<p class=indent1>
VK_LSHIFT</p>
<p class=indent1>
VK_LMENU</p>
<p class=indent1>
VK_RCONTROL</p>
<p class=indent1>
VK_RSHIFT</p>
<p class=indent1>
VK_RMENU</p>
<p>
<b>GetKeyState</b> can only be used to check the toggled state of the VK_CAPITAL virtual key. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 1.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winuser.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use user32.lib.</p>
<h4>See Also</h4>
<p>
<a href="keybinpt_4l9w.htm">Keyboard Input Overview</a>, <a href="keybinpt_43jn.htm">Keyboard Input Functions</a>, <a href="keybinpt_1x0l.htm"><b>GetAsyncKeyState</b></a>, <a href="keybinpt_0nhh.htm"><b>GetKeyboardState</b></a>, <a href="keybinpt_0hfd.htm"><b>MapVirtualKey</b></a>, <a href="keybinpt_2iqt.htm"><b>SetKeyboardState</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
