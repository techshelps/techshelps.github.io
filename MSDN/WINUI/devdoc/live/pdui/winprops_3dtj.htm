<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Listing Window Properties for a Given Window</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_listing_window_properties_for_a_given_window"></a>Listing Window Properties for a Given Window</h2>
<p>
In the following example, the <a href="winprops_38hk.htm"><b>EnumPropsEx</b></a> function lists the string identifiers of the window properties for the window identified by the application-defined hwndSubclass variable. This function relies on the application-defined callback function WinPropProc to display the strings in the window's client area. </p>
<pre><code>EnumPropsEx(hwndSubclass, WinPropProc, NULL); 
 
// WinPropProc is an application-defined callback function 
// that lists a window property. 
 
BOOL CALLBACK WinPropProc( 
    HWND hwndSubclass,  // handle of window with property 
    LPCSTR lpszString,  // property string or atom 
    HANDLE hData)       // data handle 
{ 
    static int nProp = 1;    // property counter 
    TCHAR tchBuffer[BUFFER]; // expanded-string buffer 
    int nSize;               // size of string in buffer 
    HDC hdc;                 // device-context handle 
 
    hdc = GetDC(hwndSubclass); 
 
    // Display window property string in client area. 
 
    nSize = sprintf(tchBuffer, "WinProp %d:  %s", nProp++, 
        lpszString); 
    TextOut(hdc, 10, nProp * 20, tchBuffer, nSize); 
 
    ReleaseDC(hwndSubclass, hdc); 
 
    return TRUE; 
} 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
