<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Filenames and Directories</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_filenames_and_directories"></a>Filenames and Directories</h3>
<p>
The information in this section applies to both Explorer-style and old-style <b>Open</b> and <b>Save As</b> dialog boxes.</p>
<p>
Before calling the <a href="commdlg3_3cbp.htm"><b>GetOpenFileName</b></a> or <a href="commdlg3_7zqd.htm"><b>GetSaveFileName</b></a> functions, the <b>lpstrFile</b> member of the <a href="commdlg3_1hma.htm"><b>OPENFILENAME</b></a> structure must point to the buffer to receive the filename. The <b>nMaxFile</b> member must specify the size, in bytes (ANSI version) or 16-bit characters (Unicode version), of the <b>lpstrFile</b> buffer. </p>
<p>
If the user specifies a filename and clicks the <b>OK</b> button, the dialog box copies the selected drive, directory, and filename to the <b>lpstrFile</b> buffer. The function also sets the <b>nFileOffset</b> and <b>nFileExtension</b> members to the offsets, in bytes (ANSI version) or 16-bit characters (Unicode version), from the start of the buffer to the filename and to the filename extension, respectively. </p>
<p>
To retrieve just the filename and extension, set the <b>lpstrFileTitle</b> member to point to a buffer and set the <b>nMaxFileTitle</b> member to the size, in bytes (ANSI version) or 16-bit characters (Unicode version), of the buffer. Alternatively, you can pass the <b>lpstrFile</b> buffer in a call to the <a href="commdlg3_8vhh.htm"><b>GetFileTitle</b></a> function to get the display name of the selected file. Note, however, that the filename that <b>GetFileTitle</b> returns includes an extension only if that is the user's preference for displaying filenames. </p>
<p>
The dialog box uses the current directory for the calling process as the initial directory from which to display files and directories. Use the <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_getcurrentdirectory">
</object><a href=JavaScript:alink_1.Click()><b>GetCurrentDirectory</b></a> or <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_setcurrentdirectory">
</object><a href=JavaScript:alink_2.Click()><b>SetCurrentDirectory</b></a> functions to get or change your current directory. To specify a different initial directory without changing your current directory, use the <b>lpstrInitialDir</b> member to specify the name of a directory. The dialog box automatically changes your current directory when the user selects a different drive or directory. To prevent the dialog box from changing your current directory, set the OFN_NOCHANGEDIR flag. This flag does not prevent the user from changing directories to find a file.</p>
<p>
To specify a default filename extension, use the <b>lpstrDefExt</b> member. If the user specifies a filename that does not have an extension, the dialog box adds your default extension. If you specify a default extension and the user specifies a filename with a different extension, the dialog box sets the OFN_EXTENSIONDIFFERENT flag. </p>
<p>
To let the user select more than one file from a directory, set the OFN_ALLOWMULTISELECT flag. For compatibility with older applications, the default multiple selection dialog box uses the old-style user interface. To display an Explorer-style multiple selection dialog box, you must also set the OFN_EXPLORER flag.</p>
<p>
If the user selects more than one file, the buffer pointed to by the <b>lpstrFile</b> member returns the path to the current directory followed by the filenames of the selected files. The <b>nFileOffset</b> member is the offset to the first filename, and the <b>nFileExtension</b> member is not used. The following table describes the difference between Explorer-style and old-style dialog boxes in returning multiple filenames.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=27%>Dialog box style</th>
<th align=left width=73%>Description</th>
</tr>
<tr valign=top>
<td width=27%>Explorer-style dialog boxes</td>
<td width=73%>The directory and filename strings are NULL separated, with an extra NULL character after the last filename. This format enables the Explorer-style dialogs to return long filenames that include spaces. </td>
</tr>
<tr valign=top>
<td width=27%>Old-style dialog boxes</td>
<td width=73%>The directory and filename strings are separated by spaces. For filenames with spaces, the function uses short filenames.</td>
</tr>
</table><br>
<p>
You can use the <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_findfirstfile">
</object><a href=JavaScript:alink_3.Click()><b>FindFirstFile</b></a> function to convert between long and short filenames. </p>
<p>&nbsp;</p></body>
</HTML>
