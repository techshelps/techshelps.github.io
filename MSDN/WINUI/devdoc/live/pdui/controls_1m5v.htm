<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Predefined Controls</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_predefined_controls"></a>Predefined Controls</h2>
<p>
The system provides several predefined window classes for controls. Controls belonging to these window classes are called <i>predefined controls</i>. An application creates a predefined control of a particular type by specifying the appropriate window class name in either the <a href="windows_1w6w.htm"><b>CreateWindowEx</b></a> function or the dialog box template. The following are the predefined window classes. </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=30%>Name</th>
<th align=left width=70%>Description</th>
</tr>
<tr valign=top>
<td width=30%>BUTTON</td>
<td width=70%>Creates button controls. These controls typically notify the parent window when the user chooses the control. For more information, see <a href="buttons_7zhv.htm">Buttons</a>. </td>
</tr>
<tr valign=top>
<td width=30%>COMBOBOX</td>
<td width=70%>Creates combo boxes. These controls are a combination of list boxes and edit controls, letting the user choose and edit items. For more information, see <a href="combobox_77eb.htm">Combo Boxes</a>. </td>
</tr>
<tr valign=top>
<td width=30%>EDIT</td>
<td width=70%>Creates edit controls. These controls let the user view and edit text. For more information, see <a href="editcon_4uwj.htm">Edit Controls</a>. </td>
</tr>
<tr valign=top>
<td width=30%>LISTBOX</td>
<td width=70%>Creates list boxes. These controls display a list from which the user can select one or more items. For more information, see <a href="listbox_9s4z.htm">List Boxes</a>. </td>
</tr>
<tr valign=top>
<td width=30%>RichEdit</td>
<td width=70%>Creates Rich Edit version 1.0 controls. These controls let the user view and edit text with character and paragraph formatting, and can include embedded COM objects. For more information, see <a href="richedit_5a7n.htm">Rich Edit Controls</a>. </td>
</tr>
<tr valign=top>
<td width=30%>RICHEDIT_CLASS</td>
<td width=70%>Creates Rich Edit version 2.0 controls. These controls let the user view and edit text with character and paragraph formatting, and can include embedded COM objects. For more information, see <a href="richedit_5a7n.htm">Rich Edit Controls</a>. </td>
</tr>
<tr valign=top>
<td width=30%>SCROLLBAR</td>
<td width=70%>Creates scroll bar controls. These controls let the user choose the direction and distance to scroll information in a related window. For more information, see <a href="scrolbar_3v8z.htm">Scroll Bars</a>. </td>
</tr>
<tr valign=top>
<td width=30%>STATIC</td>
<td width=70%>Creates static controls. These controls often act as labels for other controls. For more information, see <a href="statcon_1qib.htm">Static Controls</a>. </td>
</tr>
</table><br>
<p>
Each predefined window class has a corresponding set of <i>control styles</i> that enable an application to vary the appearance and behavior of the controls it creates. For example, the BUTTON class supports styles to create push buttons, radio buttons, check boxes, and group boxes. An application specifies the style when creating the control. </p>
<p>
Each predefined window class has a corresponding set of notification and control messages. Applications rely on the notification messages to determine when the user has provided input to the controls. For example, a push button sends a <a href="buttons_8810.htm">BN_CLICKED</a> message to the parent window when the user clicks the button. Applications use the control messages to retrieve information from the controls and to manipulate the appearance and behavior of the controls. For example, an application can send a <a href="buttons_214b.htm">BM_GETCHECK</a> message to a check box to determine whether it currently contains a check mark. </p>
<p>
Most applications make extensive use of predefined controls in dialog boxes and other windows. Because predefined controls offer many capabilities, a full discussion of each is beyond the scope of this topic. </p>
<p>&nbsp;</p></body>
</HTML>
