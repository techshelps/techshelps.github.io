<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SetScrollRange</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_setscrollrange"></a>SetScrollRange</h1>
<p>
The <b>SetScrollRange</b> function sets the minimum and maximum position values for the specified scroll bar. </p>
<p>
The <b>SetScrollRange</b> function is provided for backward compatibility. New applications should use the <a href="scrolbar_9tkf.htm"><b>SetScrollInfo</b></a> function.  </p>
<pre><code><b>BOOL SetScrollRange(
  HWND</b><i> hWnd</i><b>,    </b>// handle to window with scroll bar
<b>  int</b><i> nBar</i><b>,     </b>// scroll bar flag
<b>  int</b><i> nMinPos</i><b>,  </b>// minimum scrolling position
<b>  int</b><i> nMaxPos</i><b>,  </b>// maximum scrolling position
<b>  BOOL</b><i> bRedraw</i>  // redraw flag
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hWnd</i></dt>
<dd>
Handle to a scroll bar control or a window with a standard scroll bar, depending on the value of the <i>nBar</i> parameter. </dd>
<dt>
<i>nBar</i></dt>
<dd>
Specifies the scroll bar to be set. This parameter can be one of the following values: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=22%>Value</th>
<th align=left width=78%>Meaning</th>
</tr>
<tr valign=top>
<td width=22%>SB_CTL</td>
<td width=78%>Sets the range of a scroll bar control. The <i>hWnd</i> parameter must be the handle to the scroll bar control.</td>
</tr>
<tr valign=top>
<td width=22%>SB_HORZ</td>
<td width=78%>Sets the range of a window's standard horizontal scroll bar.</td>
</tr>
<tr valign=top>
<td width=22%>SB_VERT</td>
<td width=78%>Sets the range of a window's standard vertical scroll bar.</td>
</tr>
</table><br>

</dd>
<dt>
<i>nMinPos</i></dt>
<dd>
Specifies the minimum scrolling position. </dd>
<dt>
<i>nMaxPos</i></dt>
<dd>
Specifies the maximum scrolling position. </dd>
<dt>
<i>bRedraw</i></dt>
<dd>
Specifies whether the scroll bar should be redrawn to reflect the change. If this parameter is TRUE, the scroll bar is redrawn. If it is FALSE, the scroll bar is not redrawn. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is nonzero.</p>
<p>
If the function fails, the return value is zero. To get extended error information, call <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_getlasterror">
</object><a href=JavaScript:alink_1.Click()><b>GetLastError</b></a>. </p>
<h4>Remarks</h4>
<p>
You can use <b>SetScrollRange</b> to hide the scroll bar by setting <i>nMinPos</i> and <i>nMaxPos</i> to the same value. An application should not call the <b>SetScrollRange</b> function to hide a scroll bar while processing a scroll bar message. New applications should use the <a href="scrolbar_6rzm.htm"><b>ShowScrollBar</b></a> function to hide the scroll bar. </p>
<p>
If the call to <b>SetScrollRange</b> immediately follows a call to the <a href="scrolbar_4ipf.htm"><b>SetScrollPos</b></a> function, the <i>bRedraw</i> parameter in <b>SetScrollPos</b> must be zero to prevent the scroll bar from being drawn twice. </p>
<p>
The default range for a standard scroll bar is 0 through 100. The default range for a scroll bar control is empty (both the <i>nMinPos</i> and <i>nMaxPos</i> parameter values are zero). The difference between the values specified by the <i>nMinPos</i> and <i>nMaxPos</i> parameters must not be greater than the value of MAXLONG. </p>
<p>
Because the messages that indicate scroll bar position, WM_HSCROLL and WM_VSCROLL, are limited to 16 bits of position data, applications that rely solely on those messages for position data have a practical maximum value of 65,535 for the <b>SetScrollRange</b> function's <i>nMaxPos</i> parameter. </p>
<p>
However, because the <b>SetScrollInfo</b>, <b>SetScrollPos</b>, <b>SetScrollRange</b>, <b>GetScrollInfo</b>, <b>GetScrollPos</b>, and <b>GetScrollRange</b> functions support 32-bit scroll bar position data, there is a way to circumvent the 16-bit barrier of the WM_HSCROLL and WM_VSCROLL messages. See <b>GetScrollInfo</b> for a description of the technique. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 2.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winuser.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use user32.lib.</p>
<h4>See Also</h4>
<p>
<a href="scrolbar_3v8z.htm">Scroll Bars Overview</a>, <a href="scrolbar_714j.htm">Scroll Bar Functions</a>, <a href="scrolbar_52b3.htm"><b>GetScrollInfo</b></a>, <a href="scrolbar_44s3.htm"><b>GetScrollPos</b></a>, <a href="scrolbar_83l1.htm"><b>GetScrollRange</b></a>, <a href="scrolbar_9tkf.htm"><b>SetScrollInfo</b></a>, <a href="scrolbar_4ipf.htm"><b>SetScrollPos</b></a>, <a href="scrolbar_6rzm.htm"><b>ShowScrollBar</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
