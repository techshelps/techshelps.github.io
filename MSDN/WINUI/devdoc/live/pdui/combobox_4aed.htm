<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CB_INITSTORAGE</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_cb_initstorage"></a>CB_INITSTORAGE</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
An application sends the CB_INITSTORAGE message before adding a large number of items to the list box portion of a combo box. This message allocates memory for storing list box items.</p>
<pre><code>CB_INITSTORAGE 
wParam = (WPARAM) (int) cItems;  // number of items to add 
lParam = (LPARAM) (DWORD) cb;    // amount of memory to allocate, in bytes 
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>cItems</i></dt>
<dd>
Specifies the number of items to add.</dd>
<dt>
<i>cb</i></dt>
<dd>
Specifies the amount of memory to allocate for item strings, in bytes.
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the message is successful, the return value is the total number of items for which memory has been pre-allocated, that is, the total number of items added by all successful CB_INITSTORAGE messages.</p>
<p>
If the message fails, the return value is CB_ERRSPACE. </p>
<p>
<b>Windows NT:</b> For Windows NT version 4.0, this message does not allocate the specified amount of memory; however, it always returns the value specified in the <i>cItems</i> parameter. For Windows NT version 5.0, the message allocates memory and returns the success and error values described above. </p>
<h4>Remarks</h4>
<p>
The CB_INITSTORAGE message helps speed up the initialization of combo boxes that have a large number of items (over 100). It reserves the specified amount of memory so that subsequent CB_ADDSTRING, CB_INSERTSTRING, and CB_DIR messages take the shortest possible time. You can use estimates for the <i>cItems</i> and <i>cb</i> parameters. If you overestimate, the extra memory is allocated, if you underestimate, the normal allocation is used for items that exceed the requested amount. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 1.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winuser.h.</p>
<h4>See Also</h4>
<p>
<a href="combobox_77eb.htm">Combo Boxes Overview</a>, <a href="combobox_7icz.htm">Combo Box Messages</a>, <a href="combobox_4c4n.htm">CB_ADDSTRING</a>, <a href="combobox_9h9u.htm">CB_DIR</a>, <a href="combobox_7izr.htm">CB_INSERTSTRING</a> </p>
<p>&nbsp;</p></body>
</HTML>
