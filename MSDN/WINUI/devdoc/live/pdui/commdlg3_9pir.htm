<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Filters</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_filters"></a>Filters</h3>
<p>
The information in this section applies to both Explorer-style and old style <b>Open</b> and <b>Save As</b> dialog boxes.</p>
<p>
You can provide filename filters to assist the user in limiting the filenames that the dialog box displays. A filename filter consists of a pair of null-terminated strings, a description and a pattern, one concatenated to the other. The dialog box displays the description to let the user pick which filter to use; and it uses the pattern to select the files to display. </p>
<p>
To specify the filters, set the <b>lpstrFilter</b> member of the <a href="commdlg3_1hma.htm"><b>OPENFILENAME</b></a> structure to point to a buffer that contains an array of filter string pairs. The last string in the array must be followed by an extra null character. </p>
<p>
A pattern string can be a combination of valid filename characters and the asterisk (*). The asterisk is a wildcard that represents any combination of valid filename characters. The dialog box displays only those files that match the pattern. To specify multiple patterns for the same description, you must use a semicolon (;) to separate the patterns. Note that space characters in the pattern string can produce unexpected results. </p>
<p>
The following code fragment specifies two filters. The filter with the "Source" description has two patterns. If the user selects this filter, the dialog box displays only files that have the .C and .CXX extensions.</p>
<pre><code>OPENFILENAME ofn;       // common dialog box structure

ofn.lpstrFilter = "Source\0*.C;*.CXX\0All\0*.*\0"
ofn.nFilterIndex = 1;
 </code></pre>
<p>
The <b>nFilterIndex</b> member of the <a href="commdlg3_1hma.htm"><b>OPENFILENAME</b></a> structure specifies an index that indicates which filter the dialog box initially uses. The first filter in the buffer has index 1, the second 2, and so on. If the user changes the filter while using the dialog box, the <b>nFilterIndex</b> member is set to the index of the selected filter on return.</p>
<p>
You can create a custom filter by setting the <b>lpstrCustomFilter</b> member to the address of a buffer that contains a single filter, and by setting the <b>nMaxCustFilter</b> member to the size of the buffer, in characters or bytes. The dialog box always places the custom filter at the beginning of the list of filters and, on return, always updates the pattern part of the filter with the pattern from the filter selected by the user. </p>
<p>
For Explorer-style dialog boxes, the default extension may change if the user selects a different filter. If the user selects a filter whose first pattern is of the form *.<i>xxx</i> (that is, the extension does not include a wildcard character), the dialog box uses <i>xxx</i> as the default extension. This occurs only if you specified a default extension in the <b>lpstrDefExt</b> member of the <b>OPENFILENAME</b> structure. For example, if the user selects the "Source\0*.C;*.CXX\0" filter, the default extension changes to "C". However, if you had defined the filter as "Source\0*.C*\0", the default extension would not change because the extension includes a wildcard. </p>
<p>&nbsp;</p></body>
</HTML>
