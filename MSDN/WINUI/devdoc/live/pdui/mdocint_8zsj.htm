<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Multiple Document Menus</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_multiple_document_menus"></a>Multiple Document Menus</h2>
<p>
The frame window of an MDI application should include a menu bar with a <b>Window</b> menu. The <b>Window</b> menu should include items that arrange the child windows within the client window or that close all child windows. The <b>Window</b> menu of a typical MDI application might include the items in the following table. </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=22%>Menu item</th>
<th align=left width=78%>Purpose</th>
</tr>
<tr valign=top>
<td width=22%><b>Tile</b></td>
<td width=78%>Arranges child windows in a tile format so that each appears in its entirety in the client window.</td>
</tr>
<tr valign=top>
<td width=22%><b>Cascade</b></td>
<td width=78%>Arranges child windows in a cascade format. The child windows overlap one another, but the title bar of each is visible.</td>
</tr>
<tr valign=top>
<td width=22%><b>Arrange</b> <b>Icons</b></td>
<td width=78%>Arranges the icons of minimized child windows along the bottom of the client window.</td>
</tr>
<tr valign=top>
<td width=22%><b>Close</b> <b>All</b></td>
<td width=78%>Closes all child windows.</td>
</tr>
</table><br>
<p>
Whenever a child window is created, the system automatically appends a new menu item to the <b>Window</b> menu. The text of the menu item is the same as the text on the menu bar of the new child window. By clicking the menu item, the user can activate the corresponding child window. When a child window is destroyed, the system automatically removes the corresponding menu item from the <b>Window</b> menu. </p>
<p>
The system can add up to ten menu items to the <b>Window</b> menu. When the tenth child window is created, the system adds the <b>More Windows</b> item to the <b>Window</b> menu. Clicking this item displays the <b>Select Window</b> dialog box. The dialog box contains a list box with the titles of all MDI child windows currently available. The user can activate a child window by clicking its title in the list box. </p>
<p>
If your MDI application supports several types of child windows, tailor the menu bar to reflect the operations associated with the active window. To do this, provide separate menu resources for each type of child window the application supports. When a new type of child window is activated, the application should send a <a href="mdocint_19px.htm">WM_MDISETMENU</a> message to the client window, passing to it the handle to the corresponding menu. </p>
<p>
When no child window exists, the menu bar should contain only items used to create or open a document. </p>
<p>
When the user is navigating through an MDI application's menus by using cursor keys, the keys behave differently than when the user is navigating through a typical application's menus. In an MDI application, control passes from the application's <b>window</b> menu to the <b>window</b> menu of the active child window, and then to the first item on the menu bar. </p>
<p>&nbsp;</p></body>
</HTML>
