<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SetWindowPos</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_setwindowpos"></a>SetWindowPos</h1>
<p>
The <b>SetWindowPos</b> function changes the size, position, and Z order of a child, pop-up, or top-level window. Child, pop-up, and top-level windows are ordered according to their appearance on the screen. The topmost window receives the highest rank and is the first window in the Z order. </p>
<pre><code><b>BOOL SetWindowPos(
  HWND</b><i> hWnd</i><b>,             </b>// handle to window
<b>  HWND</b><i> hWndInsertAfter</i><b>,  </b>// placement-order handle
<b>  int</b><i> X</i><b>,                 </b>// horizontal position
<b>  int</b><i> Y</i><b>,                 </b>// vertical position
<b>  int</b><i> cx</i><b>,                </b>// width
<b>  int</b><i> cy</i><b>,                </b>// height
<b>  UINT</b><i> uFlags</i>            // window-positioning flags
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hWnd</i></dt>
<dd>
Handle to the window. </dd>
<dt>
<i>hWndInsertAfter</i></dt>
<dd>
Handle to the window to precede the positioned window in the Z order. This parameter must be a window handle or one of the following values: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=36%>Value</th>
<th align=left width=64%>Meaning</th>
</tr>
<tr valign=top>
<td width=36%>HWND_BOTTOM</td>
<td width=64%>Places the window at the bottom of the Z order. If the <i>hWnd</i> parameter identifies a topmost window, the window loses its topmost status and is placed at the bottom of all other windows.</td>
</tr>
<tr valign=top>
<td width=36%>HWND_NOTOPMOST</td>
<td width=64%>Places the window above all non-topmost windows (that is, behind all topmost windows). This flag has no effect if the window is already a non-topmost window.</td>
</tr>
<tr valign=top>
<td width=36%>HWND_TOP</td>
<td width=64%>Places the window at the top of the Z order.</td>
</tr>
<tr valign=top>
<td width=36%>HWND_TOPMOST</td>
<td width=64%>Places the window above all non-topmost windows. The window maintains its topmost position even when it is deactivated.</td>
</tr>
</table><br>


<p>
For more information about how this parameter is used, see the following Remarks section. 
</dd>
<dt>
<i>X</i></dt>
<dd>
Specifies the new position of the left side of the window, in client coordinates. </dd>
<dt>
<i>Y</i></dt>
<dd>
Specifies the new position of the top of the window, in client coordinates. </dd>
<dt>
<i>cx</i></dt>
<dd>
Specifies the new width of the window, in pixels. </dd>
<dt>
<i>cy</i></dt>
<dd>
Specifies the new height of the window, in pixels. </dd>
<dt>
<i>uFlags</i></dt>
<dd>
Specifies the window sizing and positioning flags. This parameter can be a combination of the following values: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=40%>Value</th>
<th align=left width=60%>Meaning</th>
</tr>
<tr valign=top>
<td width=40%>SWP_ASYNCWINDOWPOS</td>
<td width=60%>If the calling thread does not own the window, the system posts the request to the thread that owns the window. This prevents the calling thread from blocking its execution while other threads process the request. </td>
</tr>
<tr valign=top>
<td width=40%>SWP_DEFERERASE</td>
<td width=60%>Prevents generation of the WM_SYNCPAINT message. </td>
</tr>
<tr valign=top>
<td width=40%>SWP_DRAWFRAME</td>
<td width=60%>Draws a frame (defined in the window's class description) around the window.</td>
</tr>
<tr valign=top>
<td width=40%>SWP_FRAMECHANGED</td>
<td width=60%>Sends a WM_NCCALCSIZE message to the window, even if the window's size is not being changed. If this flag is not specified, WM_NCCALCSIZE is sent only when the window's size is being changed.</td>
</tr>
<tr valign=top>
<td width=40%>SWP_HIDEWINDOW</td>
<td width=60%>Hides the window.</td>
</tr>
<tr valign=top>
<td width=40%>SWP_NOACTIVATE</td>
<td width=60%>Does not activate the window. If this flag is not set, the window is activated and moved to the top of either the topmost or non-topmost group (depending on the setting of the <i>hWndInsertAfter</i> parameter).</td>
</tr>
<tr valign=top>
<td width=40%>SWP_NOCOPYBITS</td>
<td width=60%>Discards the entire contents of the client area. If this flag is not specified, the valid contents of the client area are saved and copied back into the client area after the window is sized or repositioned.</td>
</tr>
<tr valign=top>
<td width=40%>SWP_NOMOVE</td>
<td width=60%>Retains the current position (ignores the <i>X</i> and <i>Y</i> parameters).</td>
</tr>
<tr valign=top>
<td width=40%>SWP_NOOWNERZORDER</td>
<td width=60%>Does not change the owner window's position in the Z order.</td>
</tr>
<tr valign=top>
<td width=40%>SWP_NOREDRAW</td>
<td width=60%>Does not redraw changes. If this flag is set, no repainting of any kind occurs. This applies to the client area, the nonclient area (including the title bar and scroll bars), and any part of the parent window uncovered as a result of the window being moved. When this flag is set, the application must explicitly invalidate or redraw any parts of the window and parent window that need redrawing.</td>
</tr>
<tr valign=top>
<td width=40%>SWP_NOREPOSITION</td>
<td width=60%>Same as the SWP_NOOWNERZORDER flag.</td>
</tr>
<tr valign=top>
<td width=40%>SWP_NOSENDCHANGING</td>
<td width=60%>Prevents the window from receiving the WM_WINDOWPOSCHANGING message.</td>
</tr>
<tr valign=top>
<td width=40%>SWP_NOSIZE</td>
<td width=60%>Retains the current size (ignores the <i>cx</i> and <i>cy</i> parameters).</td>
</tr>
<tr valign=top>
<td width=40%>SWP_NOZORDER</td>
<td width=60%>Retains the current Z order (ignores the <i>hWndInsertAfter</i> parameter).</td>
</tr>
<tr valign=top>
<td width=40%>SWP_SHOWWINDOW</td>
<td width=60%>Displays the window.</td>
</tr>
</table><br>

</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is nonzero.</p>
<p>
If the function fails, the return value is zero. To get extended error information, call <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_getlasterror">
</object><a href=JavaScript:alink_1.Click()><b>GetLastError</b></a>. </p>
<h4>Remarks</h4>
<p>
If the SWP_SHOWWINDOW or SWP_HIDEWINDOW flag is set, the window cannot be moved or sized. </p>
<p>
If you have changed certain window data using <b>SetWindowLong</b>, you must call <b>SetWindowPos</b> to have the changes take effect. Use the following combination for <i>uFlags</i>: SWP_NOMOVE | SWP_NOSIZE | SWP_NOZORDER | SWP_FRAMECHANGED. </p>
<p>
A window can be made a topmost window either by setting the <i>hWndInsertAfter</i> parameter to HWND_TOPMOST and ensuring that the SWP_NOZORDER flag is not set, or by setting a window's position in the Z order so that it is above any existing topmost windows. When a non-topmost window is made topmost, its owned windows are also made topmost. Its owners, however, are not changed. </p>
<p>
If neither the SWP_NOACTIVATE nor SWP_NOZORDER flag is specified (that is, when the application requests that a window be simultaneously activated and its position in the Z order changed), the value specified in <i>hWndInsertAfter</i> is used only in the following circumstances: 
<ul>
<li>
Neither the HWND_TOPMOST nor HWND_NOTOPMOST flag is specified in <i>hWndInsertAfter</i>. </li>
<li>
The window identified by <i>hWnd</i> is not the active window. </li>
</ul>
<p>
An application cannot activate an inactive window without also bringing it to the top of the Z order. Applications can change an activated window's position in the Z order without restrictions, or it can activate a window and then move it to the top of the topmost or non-topmost windows. </p>
<p>
If a topmost window is repositioned to the bottom (HWND_BOTTOM) of the Z order or after any non-topmost window, it is no longer topmost. When a topmost window is made non-topmost, its owners and its owned windows are also made non-topmost windows. </p>
<p>
A non-topmost window can own a topmost window, but the reverse cannot occur. Any window (for example, a dialog box) owned by a topmost window is itself made a topmost window, to ensure that all owned windows stay above their owner. </p>
<p>
If an application is not in the foreground, and should be in the foreground, it must call the <b>SetForegroundWindow</b> function. </p>
<p>
<b>Windows CE:</b> If this is a visible top-level window, and the SWP_NOACTIVATE flag is not specified, this function will activate the window. If this is the currently active window, and either the SWP_NOACTIVATE flag or the SWP_HIDEWINDOW flag is specified, the activation is passed on to another visible top-level window.</p>
<p>
When you set the SWP_FRAMECHANGED flag in the <i>nFlags</i> parameter to this function, Windows CE redraws the entire non-client area of the window, which may change the size of the client area. This is the only way to get the non-client area to be recalculated and is typically used after a you've changed the window style by calling <b>SetWindowLong</b>. </p>
<p>
<b>SetWindowPos</b> will always cause a WM_WINDOWPOSCHANGED message to be sent to the window. The flags passed in this message are exactly the same as those passed into the function. No other messages are sent by this function. </p>
<p>
Windows CE 1.0 does not support the HWND_TOPMOST and HWND_NOTOPMOST constants in the <i>hwndInsertAfter</i> parameter.</p>
<p>
Windows CE 1.0 does not support the SWP_DRAWFRAME or SWP_NOCOPYBITS flags in the <i>fuFlags</i> paramete.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 1.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winuser.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use user32.lib.</p>
<h4>See Also</h4>
<p>
<a href="windows_6t2r.htm">Windows Overview</a>, <a href="windows_8qyb.htm">Window Functions</a>, <a href="windows_92nr.htm"><b>MoveWindow</b></a>, <a href="keybinpt_57w7.htm"><b>SetActiveWindow</b></a>, <a href="windows_1eev.htm"><b>SetForegroundWindow</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
