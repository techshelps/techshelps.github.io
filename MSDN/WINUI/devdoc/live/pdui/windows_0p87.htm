<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GetWindow</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_getwindow"></a>GetWindow</h1>
<p>
The <b>GetWindow</b> function retrieves a handle to a window that has the specified relationship (<a href="windows_4khe.htm">Z order</a> or owner) to the specified window. </p>
<pre><code><b>HWND GetWindow(
  HWND</b><i> hWnd</i><b>,  </b>// handle to original window
<b>  UINT</b><i> uCmd</i>   // relationship flag
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hWnd</i></dt>
<dd>
Handle to a window. The window handle retrieved is relative to this window, based on the value of the <i>uCmd</i> parameter. </dd>
<dt>
<i>uCmd</i></dt>
<dd>
Specifies the relationship between the specified window and the window whose handle is to be retrieved. This parameter can be one of the following values: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=34%>Value</th>
<th align=left width=66%>Meaning</th>
</tr>
<tr valign=top>
<td width=34%>GW_CHILD</td>
<td width=66%>The retrieved handle identifies the child window at the top of the Z order, if the specified window is a parent window; otherwise, the retrieved handle is NULL. The function examines only child windows of the specified window. It does not examine descendant windows.</td>
</tr>
<tr valign=top>
<td width=34%>GW_ENABLEDPOPUP</td>
<td width=66%><b>Windows NT 5.0 and later:</b> The retrieved handle identifies the enabled popup window owned by the specified window (the search uses the first such window found using GW_HWNDNEXT); otherwise, if there are no enabled popup windows, the retrieved handle is that of the specified window. </td>
</tr>
<tr valign=top>
<td width=34%>GW_HWNDFIRST</td>
<td width=66%>The retrieved handle identifies the window of the same type that is highest in the Z order. If the specified window is a topmost window, the handle identifies the topmost window that is highest in the Z order. If the specified window is a top-level window, the handle identifies the top-level window that is highest in the Z order. If the specified window is a child window, the handle identifies the sibling window that is highest in the Z order.</td>
</tr>
<tr valign=top>
<td width=34%>GW_HWNDLAST</td>
<td width=66%>The retrieved handle identifies the window of the same type that is lowest in the Z order. If the specified window is a topmost window, the handle identifies the topmost window that is lowest in the Z order. If the specified window is a top-level window, the handle identifies the top-level window that is lowest in the Z order. If the specified window is a child window, the handle identifies the sibling window that is lowest in the Z order.</td>
</tr>
<tr valign=top>
<td width=34%>GW_HWNDNEXT</td>
<td width=66%>The retrieved handle identifies the window below the specified window in the Z order. If the specified window is a topmost window, the handle identifies the topmost window below the specified window. If the specified window is a top-level window, the handle identifies the top-level window below the specified window. If the specified window is a child window, the handle identifies the sibling window below the specified window.</td>
</tr>
<tr valign=top>
<td width=34%>GW_HWNDPREV</td>
<td width=66%>The retrieved handle identifies the window above the specified window in the Z order. If the specified window is a topmost window, the handle identifies the topmost window above the specified window. If the specified window is a top-level window, the handle identifies the top-level window above the specified window. If the specified window is a child window, the handle identifies the sibling window above the specified window.</td>
</tr>
<tr valign=top>
<td width=34%>GW_OWNER</td>
<td width=66%>The retrieved handle identifies the specified window's owner window, if any.</td>
</tr>
</table><br>

</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is a window handle. If no window exists with the specified relationship to the specified window, the return value is NULL. To get extended error information, call <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_getlasterror">
</object><a href=JavaScript:alink_1.Click()><b>GetLastError</b></a>. </p>
<h4>Remarks</h4>
<p>
The <a href="windows_46cz.htm"><b>EnumChildWindows</b></a> function is more reliable than calling <b>GetWindow</b> in a loop. An application that calls <b>GetWindow</b> to perform this task risks being caught in an infinite loop or referencing a handle to a window that has been destroyed. </p>
<p>
<b>Windows CE:</b> In Windows CE version 1.0, the GW_OWNER flag value for the <i>uCmd</i> parameter is only supported for dialog boxes.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 1.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winuser.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use user32.lib.</p>
<h4>See Also</h4>
<p>
<a href="windows_6t2r.htm">Windows Overview</a>, <a href="windows_8qyb.htm">Window Functions</a>, <a href="windows_46cz.htm"><b>EnumChildWindows</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
