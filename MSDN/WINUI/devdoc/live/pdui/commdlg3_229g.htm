<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Help Support</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_help_support"></a>Help Support</h3>
<p>
Common dialog boxes provide context-sensitive Help for the standard controls of the dialog box. To provide additional help for a common dialog box, you can display a <b>Help</b> button and process messages generated when the user clicks the button. The <b>Help</b> button is a supplement to the default context-sensitive Help. The <b>Help</b> button is useful for describing the general purpose of the dialog box as it applies to your application. </p>
<h4>Context-Sensitive Help</h4>
<p>
All common dialog boxes provide context-sensitive Help for the standard controls of the dialog box. The user can display Help for individual controls by any of the following methods:
<ul>
<li>
Selecting the control and pressing the f1 key</li>
<li>
Clicking the <b>?</b> button in the title bar and subsequently clicking on a control</li>
<li>
Clicking the right mouse button over a control</li>
</ul>
<p>
If you customize a dialog box by adding new controls, you must also extend help support for these controls by processing requests for help in the hook procedure. The hook procedure receives the following messages when the user requests help.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=61%>User Action</th>
<th align=left width=39%>Message</th>
</tr>
<tr valign=top>
<td width=61%>The user clicked the right mouse button over a control.</td>
<td width=39%><a href="newmenus_68vp.htm">WM_CONTEXTMENU</a> </td>
</tr>
<tr valign=top>
<td width=61%>The user pressed the f1 key. </td>
<td width=39%><object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_wm_help">
</object><a href=JavaScript:alink_1.Click()>WM_HELP</a> </td>
</tr>
<tr valign=top>
<td width=61%>The user clicked the <b>?</b> button on the title bar and then clicked a control.</td>
<td width=39%><object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_wm_help">
</object><a href=JavaScript:alink_2.Click()>WM_HELP</a> </td>
</tr>
</table><br>
<p>
You should process these messages for the controls you have added, but let the default dialog box procedure process the messages for the standard controls. For more information about how to process these messages, see the <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_help">
</object><a href=JavaScript:alink_3.Click()>Help</a> overview. </p>
<h4>The Help Button</h4>
<p>
You can display a <b>Help</b> button in any of the common dialog boxes by setting a SHOWHELP value in the <b>Flags</b> member of the initialization structure for the dialog box. If you display the <b>Help</b> button, you must process the user's request for help. The processing can be done either in one of your application's window procedures or in a hook procedure for the dialog box. Typically, you would process the request for help by calling the <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_winhelp">
</object><a href=JavaScript:alink_4.Click()><b>WinHelp</b></a> function.</p>
<p>
To process help messages in one of your window procedures, you must get a message identifier for the string defined by the <a href="commdlg3_9d2f.htm">HELPMSGSTRING</a> value and identify the window to receive messages. To get the message identifier, specify HELPMSGSTRING as the parameter in a call to the <a href="messques_10h1.htm"><b>RegisterWindowMessage</b></a> function. When you create the common dialog box, use the <b>hwndOwner</b> member of the dialog box initialization structure to identify the window that is to receive the messages. The dialog box procedure sends the message to the window procedure whenever the user clicks the <b>Help</b> button. </p>
<p>
To process help messages in a hook procedure, you should process the <a href="editcon_8wh0.htm">WM_COMMAND</a> message. The hook procedure provides help if the <i>wParam</i> parameter of this message indicates that the user clicked the <b>Help</b> button. The identifier of the <b>Help</b> button is the <b>pshHelp</b> constant defined in the DLGS.H file. </p>
<p>
Hook procedures for the Explorer-style <b>Open</b> and <b>Save As</b> common dialog boxes do not receive WM_COMMAND messages for the <b>Help</b> button. Instead, the dialog box sends a <a href="commdlg3_8okw.htm">CDN_HELP</a> notification message to the hook procedure when the <b>Help</b> button is clicked. </p>
<p>&nbsp;</p></body>
</HTML>
