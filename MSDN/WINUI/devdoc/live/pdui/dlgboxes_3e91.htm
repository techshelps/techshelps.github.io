<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The WS_TABSTOP Style</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_the_ws_tabstop_style"></a>The WS_TABSTOP Style</h3>
<p>
The tab key and shift+tab keys have no effect when the controls in the dialog box do not have the WS_TABSTOP style. The system looks for this style as it searches for the next control in the dialog box to receive the input focus. </p>
<p>
When the user presses tab or shift+tab, the system first determines whether the control having the input focus processes these keys. It sends the control a <a href="dlgboxes_5bl1.htm">WM_GETDLGCODE</a> message, and if the control returns DLGC_WANTTAB, the system passes the keys to the control. Otherwise, the system uses the <a href="dlgboxes_1uzx.htm"><b>GetNextDlgTabItem</b></a> function to locate the next control that is visible, not disabled, and that has the WS_TABSTOP style. The search starts with the control currently having the input focus and proceeds in the order in which the controls were created — that is, the order in which they are defined in the dialog box template. When the system locates a control having the required characteristics, the system moves the input focus to it. </p>
<p>
An application can also use <b>GetNextDlgTabItem</b> to locate controls having the WS_TABSTOP style. The function retrieves the window handle of the next or previous control having the WS_TABSTOP style without moving the input focus. </p>
<p>&nbsp;</p></body>
</HTML>
