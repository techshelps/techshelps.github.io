<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Setting Up the Printed Page</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_setting_up_the_printed_page"></a>Setting Up the Printed Page</h2>
<p>
This topic describes sample code that displays a <b>Page Setup</b> dialog box so a user can select the attributes of the printed page, such as the paper type, paper source, page orientation, and page margins. The sample code first initializes a <a href="commdlg3_6waa.htm"><b>PAGESETUPDLG</b></a> structure, and then calls the <a href="commdlg3_89rb.htm"><b>PageSetupDlg</b></a> function to display the dialog box. </p>
<p>
This example sets the PSD_MARGINS flag in the <b>Flags</b> member and uses the <b>rtMargin</b> member to specify the initial margin values. It sets the PSD_INTHOUSANDTHSOFINCHES flag to ensure that the dialog box expresses margin dimensions in thousandths of an inch. </p>
<p>
On input, the sample code sets the <b>hDevMode</b> and <b>hDevNames</b> members to NULL. If the function returns TRUE, the function uses these members to return handles to <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_devmode_str">
</object><a href=JavaScript:alink_1.Click()><b>DEVMODE</b></a> and <a href="commdlg3_4liq.htm"><b>DEVNAMES</b></a> structures containing the user's input and information about the printer. You can use this information to prepare the output to be sent to the selected printer. </p>
<p>
The example also enables a <a href="commdlg3_05nv.htm"><b>PagePaintHook</b></a> hook procedure to customize drawing of the contents of the sample page. </p>
<pre><code>PAGESETUPDLG psd;    // common dialog box structure
HWND hwnd;           // owner window

// Initialize PAGESETUPDLG
ZeroMemory(&amp;psd, sizeof(PAGESETUPDLG));
psd.lStructSize = sizeof(PAGESETUPDLG);
psd.hwndOwner   = hwnd;
psd.hDevMode    = NULL; // Don't forget to free or store hDevMode.
psd.hDevNames   = NULL; // Don't forget to free or store
                  hDevNames.
psd.Flags       = PSD_INTHOUSANDTHSOFINCHES | PSD_MARGINS | 
                  PSD_ENABLEPAGEPAINTHOOK; 
psd.rtMargin.top = 1000;
psd.rtMargin.left = 1250;
psd.rtMargin.right = 1250;
psd.rtMargin.bottom = 1000;
psd.lpfnPagePaintHook = PaintHook;

if (PageSetupDlg(&amp;psd)==TRUE) {
    // check paper size and margin values here
}
 </code></pre>
<p>
The following example shows a sample <a href="commdlg3_05nv.htm"><b>PagePaintHook</b></a> hook procedure that draws the margin rectangle in the sample page area:</p>
<pre><code>BOOL CALLBACK PaintHook(HWND hwndDlg, UINT uMsg, WPARAM wParam,     
    LPARAM lParam) 
{ 
    LPRECT lprc; 
    COLORREF crMargRect; 
    HDC hdc, hdcOld; 
 
    switch (uMsg) { 
 
        // Drawing the margin rectangle. 
        case WM_PSD_MARGINRECT: 
            hdc = (HDC) wParam; 
            lprc = (LPRECT) lParam; 
 
            // Get the system highlight color. 
            crMargRect = GetSysColor(COLOR_HIGHLIGHT); 
 
            // Create a dash-dot pen of the system highlight color and 
            // select it into the DC of the sample page. 
            hdcOld = SelectObject(hdc, CreatePen(PS_DASHDOT, .5, 
                crMargRect)); 
 
            // Draw the margin rectangle. 
            Rectangle(hdc, lprc-&gt;left, lprc-&gt;top, lprc-&gt;right, 
                lprc-&gt;bottom); 
 
            // Restore the previous pen to the DC. 
            SelectObject(hdc, hdcOld); 
            return TRUE; 
 
        default: 
            return FALSE; 
    } 
    return TRUE; 
} 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
