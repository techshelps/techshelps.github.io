<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ToAsciiEx</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_toasciiex"></a>ToAsciiEx</h1>
<p>
The <b>ToAsciiEx</b> function translates the specified virtual-key code and keyboard state to the corresponding character or characters. The function translates the code using the input language and physical keyboard layout identified by the given keyboard layout handle.</p>
<pre><code><b>int ToAsciiEx(
  UINT</b><i> uVirtKey</i><b>,     </b>// virtual-key code
<b>  UINT</b><i> uScanCode</i><b>,    </b>// scan code
<b>  PBYTE</b><i> lpKeyState</i><b>,  </b>// key-state array
<b>  LPWORD</b><i> lpChar</i><b>,     </b>// buffer for translated key
<b>  UINT</b><i> uFlags</i><b>,       </b>// active-menu flag
<b>  HKL</b><i> dwhkl          </i>// keyboard layout handle
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>uVirtKey</i></dt>
<dd>
Specifies the virtual-key code to be translated. </dd>
<dt>
<i>uScanCode</i></dt>
<dd>
Specifies the hardware scan code of the key to be translated. The high-order bit of this value is set if the key is up (not pressed). </dd>
<dt>
<i>lpKeyState</i></dt>
<dd>
Pointer to a 256-byte array that contains the current keyboard state. Each element (byte) in the array contains the state of one key. If the high-order bit of a byte is set, the key is down (pressed). 
<p>
The low bit, if set, indicates that the key is toggled on. In this function, only the toggle bit of the caps lock key is relevant. The toggle state of the num lock and scroll lock keys is ignored.
</dd>
<dt>
<i>lpChar</i></dt>
<dd>
Pointer to the buffer that will receive the translated character or characters. </dd>
<dt>
<i>uFlags</i></dt>
<dd>
Specifies whether a menu is active. This parameter must be 1 if a menu is active, zero otherwise. </dd>
<dt>
<i>dwhkl</i></dt>
<dd>
Handle to the keyboard layout to use to translate the given code. This parameter can be any keyboard layout handle previously returned by the <a href="keybinpt_1u44.htm"><b>LoadKeyboardLayout</b></a> function.
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the specified key is a dead key, the return value is negative. Otherwise, it is one of the following values. </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=12%>Value</th>
<th align=left width=88%>Meaning</th>
</tr>
<tr valign=top>
<td width=12%>0</td>
<td width=88%>The specified virtual key has no translation for the current state of the keyboard.</td>
</tr>
<tr valign=top>
<td width=12%>1</td>
<td width=88%>One character was copied to the buffer.</td>
</tr>
<tr valign=top>
<td width=12%>2</td>
<td width=88%>Two characters were copied to the buffer. This usually happens when a dead-key character (accent or diacritic) stored in the keyboard layout cannot be composed with the specified virtual key to form a single character.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
The parameters supplied to the <b>ToAsciiEx</b> function might not be sufficient to translate the virtual-key code, because a previous dead key is stored in the keyboard layout. </p>
<p>
Typically, <b>ToAsciiEx</b> performs the translation based on the virtual-key code. In some cases, however, bit 15 of the <i>uScanCode</i> parameter may be used to distinguish between a key press and a key release. The scan code is used for translating ALT+<i>number key</i> combinations. </p>
<p>
Although num lock is a toggle key that affects keyboard behavior, <b>ToAsciiEx</b> ignores the toggle setting (the low bit) of <i>lpKeyState</i> (VK_NUMLOCK, because the <i>uVirtKey</i> parameter alone is sufficient to distinguish the cursor movement keys (VK_HOME, VK_INSERT, and so on) from the numeric keys (VK_DECIMAL, VK_NUMPAD0 - VK_NUMPAD9).</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 4.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winuser.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use user32.lib.</p>
<h4>See Also</h4>
<p>
<a href="keybinpt_4l9w.htm">Keyboard Input Overview</a>, <a href="keybinpt_43jn.htm">Keyboard Input Functions</a>, <a href="keybinpt_1u44.htm"><b>LoadKeyboardLayout</b></a>, <a href="keybinpt_2wu0.htm"><b>MapVirtualKeyEx</b></a>, <a href="keybinpt_6s6m.htm"><b>OemKeyScan</b></a>, <a href="keybinpt_8qp5.htm"><b>ToAscii</b></a>, <a href="keybinpt_897y.htm"><b>VkKeyScan</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
