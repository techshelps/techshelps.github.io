<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>List Contents</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_list_contents"></a>List Contents</h3>
<p>
When an application creates a combo box, it typically initializes the combo box by adding one or more items to the list. Later, an application may add or delete list items, reinitialize the list, or retrieve item information from it. </p>
<p>
An application adds list items to a combo box by sending the <a href="combobox_4c4n.htm">CB_ADDSTRING</a> message to it. The specified item is added to the end of the list or, in a sorted combo box, in its correct sorted position based on the item's string. In an unsorted combo box, an application can use the <a href="combobox_7izr.htm">CB_INSERTSTRING</a> message to insert an item at a specific position. Once added, a list item is identified by its position. </p>
<p>
By using the <a href="combobox_1yhz.htm">CB_FINDSTRING</a> or <a href="combobox_37as.htm">CB_FINDSTRINGEXACT</a> message, an application can determine the position of a list item. CB_FINDSTRING finds an item whose string begins with the specified string. CB_FINDSTRINGEXACT finds an item whose string matches the string exactly. Neither message is case sensitive. </p>
<p>
An application can remove a list item by using the <a href="combobox_3fjb.htm">CB_DELETESTRING</a> message. If an application needs to reinitialize the combo box list, it can first clear its entire contents by using the <a href="combobox_80s4.htm">CB_RESETCONTENT</a> message. When adding multiple items to the list after a combo box has already been shown, an application can clear the redraw flag to prevent the combo box from being repainted after each item is added. For more information about redrawing, see the description of the <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_wm_setredraw">
</object><a href=JavaScript:alink_1.Click()>WM_SETREDRAW</a> message. </p>
<p>
To retrieve the string associated with a list item, an application can use the <a href="combobox_6bjo.htm">CB_GETLBTEXT</a> message. The item's string is copied to the buffer specified by the application. To ensure that the buffer is large enough to receive the string, the application can first use the <a href="combobox_16pa.htm">CB_GETLBTEXTLEN</a> message to determine the length of the string. To get the number of list items in a combo box, an application can use the <a href="combobox_21v8.htm">CB_GETCOUNT</a> message. </p>
<p>&nbsp;</p></body>
</HTML>
