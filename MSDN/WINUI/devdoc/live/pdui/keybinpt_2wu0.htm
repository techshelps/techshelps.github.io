<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MapVirtualKeyEx</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_mapvirtualkeyex"></a>MapVirtualKeyEx</h1>
<p>
The <b>MapVirtualKeyEx</b> function translates (maps) a virtual-key code into a scan code or character value, or translates a scan code into a virtual-key code. The function translates the codes using the input language and physical keyboard layout identified by the given keyboard layout handle.</p>
<pre><code><b>UINT MapVirtualKeyEx(
  UINT</b><i> uCode</i><b>,     </b>// virtual-key code or scan code
<b>  UINT</b><i> uMapType</i><b>,  </b>// translation to perform
<b>  HKL</b><i> dwhkl       </i>// keyboard layout handle
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>uCode</i></dt>
<dd>
Specifies the virtual-key code or scan code for a key. How this value is interpreted depends on the value of the <i>uMapType</i> parameter. </dd>
<dt>
<i>uMapType</i></dt>
<dd>
Specifies the translation to perform. The value of this parameter depends on the value of the <i>uCode</i> parameter: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=16%>Value</th>
<th align=left width=84%>Meaning</th>
</tr>
<tr valign=top>
<td width=16%>0</td>
<td width=84%><i>uCode</i> is a virtual-key code and is translated into a scan code. If it is a virtual-key code that does not distinguish between left- and right-hand keys, the left-hand scan code is returned. If there is no translation, the function returns 0.</td>
</tr>
<tr valign=top>
<td width=16%>1</td>
<td width=84%><i>uCode</i> is a scan code and is translated into a virtual-key code that does not distinguish between left- and right-hand keys. If there is no translation, the function returns 0.</td>
</tr>
<tr valign=top>
<td width=16%>2</td>
<td width=84%><i>uCode</i> is a virtual-key code and is translated into an unshifted character value in the low order word of the return value. Dead keys (diacritics) are indicated by setting the top bit of the return value. If there is no translation, the function returns 0.</td>
</tr>
<tr valign=top>
<td width=16%>3</td>
<td width=84%><i>uCode</i> is a scan code and is translated into a virtual-key code that distinguishes between left- and right-hand keys. If there is no translation, the function returns 0.</td>
</tr>
</table><br>

</dd>
<dt>
<i>dwhkl</i></dt>
<dd>
Handle to the keyboard layout to use for translating the given code. This parameter can be any keyboard layout handle previously returned by the <a href="keybinpt_1u44.htm"><b>LoadKeyboardLayout</b></a> function.
</dd>
</dl>
<h4>Return Values</h4>
<p>
The return value is either a scan code, a virtual-key code, or a character value, depending on the value of <i>uCode</i> and <i>uMapType</i>. If there is no translation, the return value is zero.</p>
<h4>Remarks</h4>
<p>
An application can use <b>MapVirtualKeyEx</b> to translate scan codes to the virtual-key code constants VK_SHIFT, VK_CONTROL, and VK_MENU, and vice versa. These translations do not distinguish between the left and right instances of the shift, ctrl, or alt keys. An application can get the scan code corresponding to the left or right instance of one of these keys by calling <b>MapVirtualKeyEx</b> with <i>uCode</i> set to one of the following virtual-key code constants. </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=25%>VK_LSHIFT</td>
<td width=75%>VK_RSHIFT</td>
</tr>
<tr valign=top>
<td width=25%>VK_LCONTROL</td>
<td width=75%>VK_RCONTROL</td>
</tr>
<tr valign=top>
<td width=25%>VK_LMENU</td>
<td width=75%>VK_RMENU</td>
</tr>
</table><br>
<p>
These left- and right-distinguishing constants are available to an application only through the <b>GetKeyboardState</b>, <b>SetKeyboardState</b>, <b>GetAsyncKeyState</b>, <b>GetKeyState</b>, <b>MapVirtualKey</b>, and <b>MapVirtualKeyEx</b> functions. For list complete table of virtual key codes, see <a href="../pdref/vkeys_529f.htm">Virtual-Key Codes</a>. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 4.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winuser.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use user32.lib.<br>
<b>&nbsp;&nbsp;Unicode: </b>Implemented as Unicode and ANSI versions on Windows NT.</p>
<h4>See Also</h4>
<p>
<a href="keybinpt_4l9w.htm">Keyboard Input Overview</a>, <a href="keybinpt_43jn.htm">Keyboard Input Functions</a>, <a href="keybinpt_1x0l.htm"><b>GetAsyncKeyState</b></a>, <a href="keybinpt_0nhh.htm"><b>GetKeyboardState</b></a>, <a href="keybinpt_4z51.htm"><b>GetKeyState</b></a>, <a href="keybinpt_1u44.htm"><b>LoadKeyboardLayout</b></a>, <a href="keybinpt_0hfd.htm"><b>MapVirtualKey</b></a>, <a href="keybinpt_2iqt.htm"><b>SetKeyboardState</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
