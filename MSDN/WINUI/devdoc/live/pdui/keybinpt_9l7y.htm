<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WM_KEYDOWN</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_wm_keydown"></a>WM_KEYDOWN</h1>
<p>
The WM_KEYDOWN message is posted to the window with the keyboard focus when a nonsystem key is pressed. A nonsystem key is a key that is pressed when the alt key is <i>not</i> pressed. </p>
<pre><code>WM_KEYDOWN 
nVirtKey = (int) wParam;    // virtual-key code 
lKeyData = lParam;          // key data 
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>nVirtKey</i></dt>
<dd>
Value of <i>wParam</i>. Specifies the virtual-key code of the nonsystem key. </dd>
<dt>
<i>lKeyData</i></dt>
<dd>
Value of <i>lParam</i>. Specifies the repeat count, scan code, extended-key flag, context code, previous key-state flag, and transition-state flag, as shown in the following table. 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=16%>Value</th>
<th align=left width=84%>Description</th>
</tr>
<tr valign=top>
<td width=16%>0–15</td>
<td width=84%>Specifies the repeat count for the current message. The value is the number of times the keystroke is auto-repeated as a result of the user holding down the key. If the keystroke is held long enough, multiple messages are sent. However, the repeat count is not cumulative.</td>
</tr>
<tr valign=top>
<td width=16%>16–23</td>
<td width=84%>Specifies the scan code. The value depends on the original equipment manufacturer (OEM).</td>
</tr>
<tr valign=top>
<td width=16%>24</td>
<td width=84%>Specifies whether the key is an extended key, such as the right-hand alt and ctrl keys that appear on an enhanced 101- or 102-key keyboard. The value is 1 if it is an extended key; otherwise, it is 0.</td>
</tr>
<tr valign=top>
<td width=16%>25–28</td>
<td width=84%>Reserved; do not use.</td>
</tr>
<tr valign=top>
<td width=16%>29</td>
<td width=84%>Specifies the context code. The value is always 0 for a WM_KEYDOWN message.</td>
</tr>
<tr valign=top>
<td width=16%>30</td>
<td width=84%>Specifies the previous key state. The value is 1 if the key is down before the message is sent, or it is 0 if the key is up.</td>
</tr>
<tr valign=top>
<td width=16%>31</td>
<td width=84%>Specifies the transition state. The value is always 0 for a WM_KEYDOWN message.</td>
</tr>
</table><br>

</dd>
</dl>
<h4>Return Values</h4>
<p>
An application should return zero if it processes this message. </p>
<h4>Default Action</h4>
<p>
If the f10 key is pressed, the <a href="winprocs_10o3.htm"><b>DefWindowProc</b></a> function sets an internal flag. When <b>DefWindowProc</b> receives the WM_KEYUP message, the function checks whether the internal flag is set and, if so, sends a <a href="keybacel_19t0.htm">WM_SYSCOMMAND</a> message to the top-level window. The <i>wParam</i> parameter of the message is set to SC_KEYMENU. </p>
<h4>Remarks</h4>
<p>
Because of the autorepeat feature, more than one WM_KEYDOWN message may be posted before a WM_KEYUP message is posted. The previous key state (bit 30) can be used to determine whether the WM_KEYDOWN message indicates the first down transition or a repeated down transition. </p>
<p>
For enhanced 101- and 102-key keyboards, extended keys are the right alt and ctrl keys on the main section of the keyboard; the ins, del, home, end, page up, page down and arrow keys in the clusters to the left of the numeric keypad; and the divide (/) and enter keys in the numeric keypad. Other keyboards may support the extended-key bit in the <i>lKeyData</i> parameter. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 1.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winuser.h.</p>
<h4>See Also</h4>
<p>
<a href="keybinpt_4l9w.htm">Keyboard Input Overview</a>, <a href="keybinpt_4iib.htm">Keyboard Input Messages</a>, <a href="winprocs_10o3.htm"><b>DefWindowProc</b></a>, <a href="keybinpt_2otu.htm">WM_CHAR</a>, <a href="keybinpt_45dc.htm">WM_KEYUP</a>, <a href="keybacel_19t0.htm">WM_SYSCOMMAND</a> </p>
<p>&nbsp;</p></body>
</HTML>
