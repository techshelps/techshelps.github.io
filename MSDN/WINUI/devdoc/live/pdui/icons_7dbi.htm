<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Icon Creation</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_icon_creation"></a>Icon Creation</h2>
<p>
Standard icons are predefined, so it is not necessary to create them. To use a standard icon, an application can obtain its handle by using the <a href="resource_9fhi.htm"><b>LoadImage</b></a><b> </b>function. An <i>icon handle</i> is a unique value of the <b>HICON</b> type that identifies a standard or custom icon. </p>
<p>
To create a custom icon for an application, you would typically use a graphics application and include the <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_tools_icon_resource">
</object><a href=JavaScript:alink_1.Click()>ICON resource</a> in the application's resource-definition file. At run time, you can call <a href="icons_799r.htm"><b>LoadIcon</b></a> or <b>LoadImage</b> to retrieve a handle to the icon. An icon resource can contain a group images for several different display devices. <b>LoadIcon</b> and <b>LoadImage</b> automatically select the most appropriate icon from the group for the current display device. </p>
<p>
An application can also create a custom icon at run time by using the <a href="icons_7ir8.htm"><b>CreateIconIndirect</b></a> function, which creates an icon based on the contents of an <a href="icons_9eya.htm"><b>ICONINFO</b></a> structure. The <a href="icons_2227.htm"><b>GetIconInfo</b></a> function fills the structure with the hot spot coordinates and information about the bitmask bitmap and color bitmap for the icon. </p>
<p>
Applications should implement custom icons as resources and should use <b>LoadIcon</b> or <b>LoadImage</b>, rather than create the icon at run time. Using icon resources avoids device dependence, simplifies localization, and enables applications to share icon shapes. </p>
<p>
The <a href="icons_6mrc.htm"><b>CreateIconFromResourceEx</b></a> function enables an application to browse through the system's resources and create icons and cursors based on resource data. <b>CreateIconFromResourceEx</b> creates an icon based on binary resource data from other executable files or dynamic-link libraries (DLLs). An application must precede this function with calls to the <a href="icons_4th4.htm"><b>LookupIconIdFromDirectoryEx</b></a> function and several of the resource functions. <b>LookupIconIdFromDirectoryEx</b> returns the identifier of the most appropriate icon data for the current display device. For more information about the resource functions, see <a href="resource_69o3.htm">Resource Functions</a>. </p>
<p>&nbsp;</p></body>
</HTML>
