<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Hot-Key Support</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_hot_key_support"></a>Hot-Key Support</h2>
<p>
The Win32 API provides a set of functions that applications can use to define hot keys. A <i>hot key</i> is a key combination that generates a <a href="keybinpt_0gmx.htm">WM_HOTKEY</a> message, a message the system places at the top of a thread's message queue, bypassing any existing messages in the queue. Applications use hot keys to obtain high-priority keyboard input from the user. For example, by defining a hot key consisting of the ctrl+c key combination, an application can allow the user to cancel a lengthy operation. </p>
<p>
To define a hot key, an application calls the <a href="keybinpt_49tl.htm"><b>RegisterHotKey</b></a> function, specifying the combination of keys that generates the WM_HOTKEY message, the handle to the window to receive the message, and the identifier of the hot key. When the user presses the hot key, a WM_HOTKEY message is placed in the message queue of the thread that created the given window. The <i>wParam</i> parameter of the message contains the identifier of the hot key. The application can define multiple hot keys for a thread, but each hot key in the thread must have a unique identifier. Before the application terminates, it should use the <a href="keybinpt_3et5.htm"><b>UnregisterHotKey</b></a> function to destroy the hot key. </p>
<p>
Applications can use a hot key control to make it easy for the user to choose a hot key. Hot key controls are typically used to define a hot key that activates a window; they do not use the <b>RegisterHotKey</b> and <b>UnregisterHotKey</b> functions. Instead, an application that uses a hot key control typically sends the <a href="keybinpt_8n95.htm">WM_SETHOTKEY</a> message to set the hot key. Whenever the user presses the hot key, the system sends a <a href="keybacel_19t0.htm">WM_SYSCOMMAND</a> message specifying SC_HOTKEY. For more information about hot key controls, see <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_hot_key_controls">
</object><a href=JavaScript:alink_1.Click()>Hot-Key Controls</a>. </p>
<p>&nbsp;</p></body>
</HTML>
