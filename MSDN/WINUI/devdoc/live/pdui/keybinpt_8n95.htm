<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WM_SETHOTKEY</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_wm_sethotkey"></a>WM_SETHOTKEY</h1>
<p>
An application sends a WM_SETHOTKEY message to a window to associate a hot key with the window. When the user presses the hot key, the system activates the window. </p>
<pre><code>WM_SETHOTKEY 
wParam = (WPARAM) MAKEWORD(vkey, modifiers)   // virtual-key code and modifiers of hot key 
lParam = 0;                                   // not used; must be zero 
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>vkey</i></dt>
<dd>
Value of <i>wParam</i>. Specifies the virtual-key code and modifiers of the hot key to associate with the window. The virtual-key code is in the low byte of the parameter and the modifier flags are in the high byte. Setting this parameter to NULL removes the hot key associated with a window. The modifier byte can be a combination of the following flags.
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=45%>Value</th>
<th align=left width=55%>Meaning</th>
</tr>
<tr valign=top>
<td width=45%>HOTKEYF_ALT</td>
<td width=55%>ALT key</td>
</tr>
<tr valign=top>
<td width=45%>HOTKEYF_CONTROL</td>
<td width=55%>CTRL key</td>
</tr>
<tr valign=top>
<td width=45%>HOTKEYF_EXT</td>
<td width=55%>Extended key</td>
</tr>
<tr valign=top>
<td width=45%>HOTKEYF_SHIFT</td>
<td width=55%>SHIFT key</td>
</tr>
</table><br>

</dd>
</dl>
<h4>Return Values</h4>
<p>
The return value is one of the following: </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=12%>Value</th>
<th align=left width=88%>Meaning</th>
</tr>
<tr valign=top>
<td width=12%>–1</td>
<td width=88%>The function is unsuccessful — the hot key is invalid.</td>
</tr>
<tr valign=top>
<td width=12%>..0</td>
<td width=88%>The function is unsuccessful — the window is invalid.</td>
</tr>
<tr valign=top>
<td width=12%>..1</td>
<td width=88%>The function is successful, and no other window has the same hot key.</td>
</tr>
<tr valign=top>
<td width=12%>..2</td>
<td width=88%>The function is successful, but another window already has the same hot key.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
A hot key cannot be associated with a child window. </p>
<p>
VK_ESCAPE, VK_SPACE, and VK_TAB are invalid hot keys. </p>
<p>
When the user presses the hot key, the system generates a WM_SYSCOMMAND message with <i>wParam</i> equal to SC_HOTKEY and <i>lParam</i> equal to the window's handle. If this message is passed on to <b>DefWindowProc</b>, the system will bring the window's last active popup (if it exists) or the window itself (if there is no popup window) to the foreground.</p>
<p>
A window can only have one hot key. If the window already has a hot key associated with it, the new hot key replaces the old one. If more than one window has the same hot key, the window that is activated by the hot key is random. </p>
<p>
These hot keys are unrelated to the hot keys set by <b>RegisterHotKey</b>. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winuser.h.</p>
<h4>See Also</h4>
<p>
<a href="keybinpt_4l9w.htm">Keyboard Input Overview</a>, <a href="keybinpt_4iib.htm">Keyboard Input Messages</a>, <a href="keybinpt_49tl.htm"><b>RegisterHotKey</b></a>, <a href="keybinpt_5dbt.htm">WM_GETHOTKEY</a>, <a href="keybacel_19t0.htm">WM_SYSCOMMAND</a> </p>
<p>&nbsp;</p></body>
</HTML>
