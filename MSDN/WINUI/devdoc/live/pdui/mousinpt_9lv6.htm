<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TRACKMOUSEEVENT</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_trackmouseevent_str"></a>TRACKMOUSEEVENT</h1>
<p>
The <b>TRACKMOUSEEVENT</b> structure is used by the <b>TrackMouseEvent</b> function to track when the mouse pointer leaves a window or hovers over a window for a specified amount of time.</p>
<pre><code>typedef struct tagTRACKMOUSEEVENT {
    DWORD cbSize;
    DWORD dwFlags;
    HWND  hwndTrack;
    DWORD dwHoverTime;
} TRACKMOUSEEVENT, *LPTRACKMOUSEEVENT;
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>cbSize</b></dt>
<dd>
Specifies the size of the TRACKMOUSEEVENT structure.</dd>
<dt>
<b>dwFlags</b></dt>
<dd>
Specifies the services requested. This member can be a combination of the following values: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=29%>Value</th>
<th align=left width=71%>Meaning</th>
</tr>
<tr valign=top>
<td width=29%>TME_CANCEL</td>
<td width=71%>The caller wants to cancel a prior tracking request. <p>
The caller should also specify the type of tracking that it wants to cancel. For example, to cancel hover tracking, the caller must pass the TME_CANCEL and TME_HOVER flags.</p>
</td>
</tr>
<tr valign=top>
<td width=29%>TME_HOVER</td>
<td width=71%>The caller wants hover notification. Notification is delivered as a WM_MOUSEHOVER message. <p>
If the caller requests hover tracking while hover tracking is already active, the hover timer will be reset.</p>
<p>
This flag is ignored if the mouse pointer is not over the specified window or area.</p>
</td>
</tr>
<tr valign=top>
<td width=29%>TME_LEAVE</td>
<td width=71%>The caller wants leave notification. Notification is delivered as a WM_MOUSELEAVE message. <p>
If the mouse is not over the specified window or area, a leave notification is generated immediately and no further tracking is performed.</p>
</td>
</tr>
<tr valign=top>
<td width=29%>TME_QUERY</td>
<td width=71%>The function fills in the structure instead of treating it as a tracking request. The structure is filled such that had that structure been passed to <b>TrackMouseEvent</b> it would generate the current tracking. The only anomaly is that the hover timeout returned is always the actual timeout and not HOVER_DEFAULT, if HOVER_DEFAULT was specified during the original <b>TrackMouseEvent</b> request.</td>
</tr>
</table><br>

</dd>
<dt>
<b>hwndTrack</b></dt>
<dd>
Specifies the handle of the window to track.</dd>
<dt>
<b>dwHoverTime</b></dt>
<dd>
Specifies the hover timeout (if TME_HOVER was specified in dwFlags), in milliseconds. Can be HOVER_DEFAULT, which means to use the system default hover timeout.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The system default hover timeout is initially the menu dropdown time, which is 400 milliseconds. You can call <b>SystemParametersInfo</b> and use SPI_GETMOUSEHOVERTIME to retrieve the default hover timeout.</p>
<p>
The system default hover rectangle is the same as the double-click rectangle. You can call <b>SystemParametersInfo</b> and use SPI_GETMOUSEHOVERWIDTH and SPI_GETMOUSEHOVERHEIGHT to retrieve the size of the rectangle within which the mouse pointer has to stay for <b>TrackMouseEvent</b> to generate a WM_MOUSEHOVER message.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 4.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 98 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winuser.h.</p>
<h4>See Also</h4>
<p>
<a href="mousinpt_5rjo.htm">Mouse Input Overview</a>, <a href="mousinpt_9e0j.htm">Mouse Input Structures</a>, <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_systemparametersinfo">
</object><a href=JavaScript:alink_1.Click()><b>SystemParametersInfo</b></a><b>,</b> <b><br>
<a href="mousinpt_9gxg.htm">TrackMouseEvent</a></b> </p>
<p>&nbsp;</p></body>
</HTML>
