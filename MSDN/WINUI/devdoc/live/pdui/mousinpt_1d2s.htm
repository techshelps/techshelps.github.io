<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>mouse_event</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_mouse_event"></a>mouse_event</h1>
<p>
The <b>mouse_event</b> function synthesizes mouse motion and button clicks. </p>
<p>
<b>Windows NT:</b> This function has been superseded. Use <a href="keybinpt_7id0.htm"><b>SendInput</b></a> instead.</p>
<pre><code><b>VOID mouse_event(
  DWORD</b><i> dwFlags</i><b>, </b>// flags specifying various motion/click variants
<b>  DWORD</b><i> dx</i><b>,      </b>// horizontal mouse position or position change
<b>  DWORD</b><i> dy</i><b>,      </b>// vertical mouse position or position change
<b>  DWORD</b><i> dwData</i><b>,  </b>// amount of wheel movement
<b>  DWORD</b><i> dwExtraInfo</i> 
                 // 32 bits of application-defined information
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dwFlags</i></dt>
<dd>
A set of flag bits that specify various aspects of mouse motion and button clicking. The bits in this parameter can be any reasonable combination of the following values: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=49%>Value</th>
<th align=left width=51%>Meaning</th>
</tr>
<tr valign=top>
<td width=49%>MOUSEEVENTF_ABSOLUTE</td>
<td width=51%>Specifies that the <i>dx</i> and <i>dy</i> parameters contain normalized absolute coordinates. If not set, those parameters contain relative data: the change in position since the last reported position. This flag can be set, or not set, regardless of what kind of mouse or mouse-like device, if any, is connected to the system. For further information about relative mouse motion, see the following Remarks section.</td>
</tr>
<tr valign=top>
<td width=49%>MOUSEEVENTF_MOVE</td>
<td width=51%>Specifies that movement occurred.</td>
</tr>
<tr valign=top>
<td width=49%>MOUSEEVENTF_LEFTDOWN</td>
<td width=51%>Specifies that the left button is down.</td>
</tr>
<tr valign=top>
<td width=49%>MOUSEEVENTF_LEFTUP</td>
<td width=51%>Specifies that the left button is up.</td>
</tr>
<tr valign=top>
<td width=49%>MOUSEEVENTF_RIGHTDOWN</td>
<td width=51%>Specifies that the right button is down.</td>
</tr>
<tr valign=top>
<td width=49%>MOUSEEVENTF_RIGHTUP</td>
<td width=51%>Specifies that the right button is up.</td>
</tr>
<tr valign=top>
<td width=49%>MOUSEEVENTF_MIDDLEDOWN</td>
<td width=51%>Specifies that the middle button is down.</td>
</tr>
<tr valign=top>
<td width=49%>MOUSEEVENTF_MIDDLEUP</td>
<td width=51%>Specifies that the middle button is up.</td>
</tr>
<tr valign=top>
<td width=49%>MOUSEEVENTF_WHEEL</td>
<td width=51%><b>Windows NT:</b> Specifies that the wheel has been moved, if the mouse has a wheel. The amount of movement is given in <i>dwData</i></td>
</tr>
</table><br>

</dd>
<dt>
<i>dx</i></dt>
<dd>
Specifies the mouse's absolute position along the x-axis or its amount of motion since the last mouse event was generated, depending on the setting of MOUSEEVENTF_ABSOLUTE. Absolute data is given as the mouse's actual x-coordinate; relative data is given as the number of mickeys moved. A mickey is the amount that a mouse has to move for it to report that it has moved.</dd>
<dt>
<i>dy</i></dt>
<dd>
Specifies the mouse's absolute position along the y-axis or its amount of motion since the last mouse event was generated, depending on the setting of MOUSEEVENTF_ABSOLUTE. Absolute data is given as the mouse's actual y-coordinate; relative data is given as the number of mickeys moved. </dd>
<dt>
<i>dwData</i></dt>
<dd>
If <i>dwFlags</i> is MOUSEEVENTF_WHEEL, then <i>dwData</i> specifies the amount of wheel movement. A positive value indicates that the wheel was rotated forward, away from the user; a negative value indicates that the wheel was rotated backward, toward the user. One wheel click is defined as WHEEL_DELTA, which is 120.
<p>
If <i>dwFlags</i> is not MOUSEEVENTF_WHEEL, then <i>dwData</i> should be zero.
</dd>
<dt>
<i>dwExtraInfo</i></dt>
<dd>
Specifies an additional 32-bit value associated with the mouse event. An application calls <a href="messques_3pm7.htm"><b>GetMessageExtraInfo</b></a> to obtain this extra information. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
This function has no return value. </p>
<h4>Remarks</h4>
<p>
If the mouse has moved, indicated by MOUSEEVENTF_MOVE being set, <i>dx</i> and <i>dy</i> hold information about that motion. The information is given as absolute or relative integer values. </p>
<p>
If MOUSEEVENTF_ABSOLUTE value is specified, <i>dx</i> and <i>dy</i> contain normalized absolute coordinates between 0 and 65,535. The event procedure maps these coordinates onto the display surface. Coordinate (0,0) maps onto the upper-left corner of the display surface, (65535,65535) maps onto the lower-right corner. </p>
<p>
If the MOUSEEVENTF_ABSOLUTE value is not specified, <i>dx</i> and <i>dy</i> specify relative motions from when the last mouse event was generated (the last reported position). Positive values mean the mouse moved right (or down); negative values mean the mouse moved left (or up). </p>
<p>
Relative mouse motion is subject to the settings for mouse speed and acceleration level. An end user sets these values using the Mouse control panel application. An application obtains and sets these values with the <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_systemparametersinfo">
</object><a href=JavaScript:alink_1.Click()><b>SystemParametersInfo</b></a> function. </p>
<p>
The system applies two tests to the specified relative mouse motion when applying acceleration. If the specified distance along either the x or y axis is greater than the first mouse threshold value, and the mouse acceleration level is not zero, the operating system doubles the distance. If the specified distance along either the x or y axis is greater than the second mouse threshold value, and the mouse acceleration level is equal to two, the operating system doubles the distance that resulted from applying the first threshold test. It is thus possible for the operating system to multiply relatively-specified mouse motion along the x or y axis by up to four times.</p>
<p>
Once acceleration has been applied, the system scales the resultant value by the desired mouse speed. Mouse speed can range from 1 (slowest) to 20 (fastest) and represents how much the pointer moves based on the distance the mouse moves. The default value is 10, which results in no additional modification to the mouse motion. </p>
<p>
The <b>mouse_event</b> function is used to synthesize mouse events by applications that need to do so. It is also used by applications that need to obtain more information from the mouse than its position and button state. For example, if a tablet manufacturer wants to pass pen-based information to its own applications, it can write a dynamic-link library (DLL) that communicates directly to the tablet hardware, obtains the extra information, and saves it in a queue. The DLL then calls <b>mouse_event</b> with the standard button and x/y position data, along with, in the <i>dwExtraInfo</i> parameter, some pointer or index to the queued extra information. When the application needs the extra information, it calls the DLL with the pointer or index stored in <i>dwExtraInfo</i>, and the DLL returns the extra information. </p>
<p>
<b>Windows CE:</b> Windows CE does not support the MOUSEEVENTF_WHEEL constant in the <i>dwFlags</i> parameter.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winuser.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use user32.lib.</p>
<h4>See Also</h4>
<p>
<a href="mousinpt_5rjo.htm">Mouse Input Overview</a>, <a href="mousinpt_50xf.htm">Mouse Input Functions</a>, <a href="messques_3pm7.htm"><b>GetMessageExtraInfo</b></a>, <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_systemparametersinfo">
</object><a href=JavaScript:alink_2.Click()><b>SystemParametersInfo</b></a></p>
<p>&nbsp;</p></body>
</HTML>
