<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Custom Dialog Boxes</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_custom_dialog_boxes"></a>Custom Dialog Boxes</h2>
<p>
An application can create custom dialog boxes by using an application-defined window class for the dialog boxes instead of using the predefined dialog box class. Applications typically use this method when a dialog box is their main window, but it is also useful for creating modal and modeless dialog boxes for applications that have standard overlapping windows. </p>
<p>
The application-defined window class allows the application to define a window procedure for the dialog box and process messages before sending them to the dialog box procedure. It also lets the application define a class icon, a class background brush, and a class menu for the dialog box. The application must register the window class before attempting to create a dialog box and must provide the dialog box template with the atom value or name of the window class. </p>
<p>
Many applications create a new dialog box class by first retrieving the class information for the predefined dialog box class, and passing it to the <a href="winclass_40rz.htm"><b>GetClassInfo</b></a> function, which fills a <a href="winclass_8yk2.htm"><b>WNDCLASS</b></a> structure with the information. The application modifies individual members of the structure, such as the class name, brush, and icon, then registers the new class by using the <a href="winclass_70s3.htm"><b>RegisterClass</b></a> function. If an application fills the <b>WNDCLASS</b> structure on its own, it must set the <b>cbWndExtra</b> member to the DLGWINDOWEXTRA, which is the number of extra bytes the system requires for each dialog box. If an application also uses extra bytes for each dialog box, they must be beyond the extra bytes required by the system. </p>
<p>
The window procedure for the custom dialog box has the same parameters and requirements as any other window procedure. Unlike other window procedures, however, the window procedure for this dialog box should call the <a href="dlgboxes_1pgj.htm"><b>DefDlgProc</b></a> function instead of the <a href="winprocs_10o3.htm"><b>DefWindowProc</b></a> function for any messages it does not process. <b>DefDlgProc</b> carries out the same default message processing as the window procedure for the predefined dialog box, which includes calling the dialog box procedure. </p>
<p>
An application can also create custom dialog boxes by subclassing the window procedure of the predefined dialog box. The <a href="winclass_64tj.htm"><b>SetWindowLong</b></a> function lets an application set the address of the window procedure for a given window. The application may also attempt to subclass by using the <a href="winclass_1d2f.htm"><b>SetClassLong</b></a> function, but doing so affects all dialog boxes in the system, not just those belonging to the application. </p>
<p>
Applications that create custom dialog boxes sometimes provide an alternate keyboard interface for the dialog boxes. For modeless dialog boxes, this may mean the application does not call the <a href="dlgboxes_5t45.htm"><b>IsDialogMessage</b></a> function and instead processes all keyboard input in the custom window procedure. In such cases, the application can use the <a href="dlgboxes_2dm4.htm">WM_NEXTDLGCTL</a> message to minimize the code needed to move the input focus from one control to another. This message, when passed to <b>DefDlgProc</b>, moves the input focus to a specified control and updates the appearance of the controls, such as moving the default push button border or setting an automatic radio button. </p>
<p>&nbsp;</p></body>
</HTML>
