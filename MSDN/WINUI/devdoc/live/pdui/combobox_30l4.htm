<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Subclassing a Combo Box</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_subclassing_a_combo_box"></a>Subclassing a Combo Box</h2>
<p>
This section demonstrates how to subclass combo boxes so your application can use them outside a dialog box. The example in <a href="combobox_2hbm.htm">Creating a Combo-box Toolbar</a> shows the window procedure for a toolbar window containing two combo boxes. By subclassing the edit controls within the combo boxes, the toolbar window intercepts tab, enter, and esc keys that would otherwise be ignored. </p>
<p>
The following illustration shows the toolbar window. </p>
<p>
<img src="images/cscbx_02.gif" border=0></p>
<p>&nbsp;</p></body>
</HTML>
