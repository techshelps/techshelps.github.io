<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating a Keyboard Interface for a Standard Scroll Bar</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_creating_a_keyboard_interface_for_a_standard_scroll_bar"></a>Creating a Keyboard Interface for a Standard Scroll Bar</h2>
<p>
Although a scroll bar control provides a built-in keyboard interface, a standard scroll bar does not. To implement a keyboard interface for a standard scroll bar, a window procedure must process the <a href="keybinpt_9l7y.htm">WM_KEYDOWN</a> message and examine the virtual-key code specified by the <i>wParam</i> parameter. If the virtual-key code corresponds to an arrow key, the window procedure sends itself a <a href="scrolbar_2q5o.htm">WM_HSCROLL</a> or <a href="scrolbar_90mk.htm">WM_VSCROLL</a> message with the low-order word of the <i>wParam</i> parameter set to the appropriate scroll bar notification message. For example, when the user presses the up arrow key, the window procedure receives a WM_KEYDOWN message with <i>wParam</i> equal to VK_UP. In response, the window procedure sends itself a WM_VSCROLL message with the low-order word of <i>wParam</i> set to the SB_LINEUP notification message. </p>
<p>
The following example shows how to include a keyboard interface for a standard scroll bar. </p>
<pre><code>WORD wScrollNotify = 0xFFFF; 
 
case WM_KEYDOWN: 
    switch (wParam) 
    { 
        case VK_UP: 
            wScrollNotify = SB_LINEUP; 
            break; 
 
        case VK_PRIOR: 
            wScrollNotify = SB_PAGEUP; 
            break; 
 
        case VK_NEXT: 
            wScrollNotify = SB_PAGEDOWN; 
            break; 
 
        case VK_DOWN: 
            wScrollNotify = SB_LINEDOWN; 
            break; 
 
        case VK_HOME: 
            wScrollNotify = SB_TOP; 
            break; 
 
        case VK_END: 
            wScrollNotify = SB_BOTTOM; 
            break; 
    } 
 
    if (wScrollNotify != -1) 
        SendMessage(hwnd, WM_VSCROLL, MAKELONG(wScrollNotify, 0), 0L); 
 
    break; 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
