<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Processing the WM_INITDIALOG and WM_DESTROY Messages in a Simple Dialog Box</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_processing_the_wm_initdialog_and_wm_destroy_messages_in_a_simple_dialog_box"></a>Processing the WM_INITDIALOG and WM_DESTROY Messages in a Simple Dialog Box</h3>
<p>
When you use a combo box in a dialog box, you usually respond to the <a href="dlgboxes_4n1j.htm">WM_INITDIALOG</a> message by initializing the combo box. The code example in <a href="combobox_8fco.htm">Creating a Spell Dialog Box</a> calls the application-defined <code>OpenDictionary</code> function to load the dictionary. It then calls the application-defined <code>SelectNextWord</code> and <code>InitSpellList</code> functions to select the first misspelled word.</p>
<p>
<code>SelectNextWord</code> selects the next word in the edit control and copies it to the specified buffer. <code>InitSpellList</code> determines whether the selected word is in the dictionary. If not, it places the word in the selection field of the combo box and adds suggested spellings to the list.</p>
<p>
The dialog box procedure processes the <a href="windows_414p.htm">WM_DESTROY</a> message to free the resources allocated to the spelling dictionary.</p>
<p>&nbsp;</p></body>
</HTML>
