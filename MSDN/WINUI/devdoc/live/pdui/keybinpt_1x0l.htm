<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GetAsyncKeyState</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_getasynckeystate"></a>GetAsyncKeyState</h1>
<p>
The <b>GetAsyncKeyState</b> function determines whether a key is up or down at the time the function is called, and whether the key was pressed after a previous call to <b>GetAsyncKeyState</b>. </p>
<pre><code><b>SHORT GetAsyncKeyState(
  int</b><i> vKey</i>   // virtual-key code
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>vKey</i></dt>
<dd>
Specifies one of 256 possible virtual-key codes. For more information, see <a href="../pdref/vkeys_529f.htm">Virtual-Key Codes</a>. 
<p>
<b>Windows NT:</b> You can use left- and right-distinguishing constants to specify certain keys. See the Remarks section for further information.

</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value specifies whether the key was pressed since the last call to <b>GetAsyncKeyState</b>, and whether the key is currently up or down. If the most significant bit is set, the key is down, and if the least significant bit is set, the key was pressed after the previous call to <b>GetAsyncKeyState</b>. The return value is zero if a window in another thread or process currently has the keyboard focus. </p>
<p>
<b>Windows 95:</b> Windows 95 does not support the left- and right-distinguishing constants. If you call <b>GetAsyncKeyState</b> with these constants, the return value is zero. </p>
<h4>Remarks</h4>
<p>
The <b>GetAsyncKeyState</b> function works with mouse buttons. However, it checks on the state of the physical mouse buttons, not on the logical mouse buttons that the physical buttons are mapped to. For example, the call <b>GetAsyncKeyState</b>(VK_LBUTTON) always returns the state of the left physical mouse button, regardless of whether it is mapped to the left or right logical mouse button. You can determine the system's current mapping of physical mouse buttons to logical mouse buttons by calling </p>
<pre><code>GetSystemMetrics(SM_SWAPBUTTON) 
 </code></pre>
<p>
which returns TRUE if the mouse buttons have been swapped.</p>
<p>
You can use the virtual-key code constants VK_SHIFT, VK_CONTROL, and VK_MENU as values for the <i>vKey</i> parameter. This gives the state of the shift, ctrl, or alt keys without distinguishing between left and right. </p>
<p>
<b>Windows NT:</b> You can use the following virtual-key code constants as values for <i>vKey</i> to distinguish between the left and right instances of those keys. </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=25%>Code</th>
<th align=left width=75%>Meaning</th>
</tr>
<tr valign=top>
<td width=25%>VK_LSHIFT</td>
<td width=75%>VK_RSHIFT</td>
</tr>
<tr valign=top>
<td width=25%>VK_LCONTROL</td>
<td width=75%>VK_RCONTROL</td>
</tr>
<tr valign=top>
<td width=25%>VK_LMENU</td>
<td width=75%>VK_RMENU</td>
</tr>
</table><br>
<p>
These left- and right-distinguishing constants are only available when you call the <a href="keybinpt_0nhh.htm"><b>GetKeyboardState</b></a>, <a href="keybinpt_2iqt.htm"><b>SetKeyboardState</b></a>, <b>GetAsyncKeyState</b>, <a href="keybinpt_4z51.htm"><b>GetKeyState</b></a>, and <a href="keybinpt_0hfd.htm"><b>MapVirtualKey</b></a> functions. </p>
<p>
<b>Windows CE:</b> The <b>GetAsyncKeyState</b> function supports the left and right virtual key constants, so you can determine whether the left key or the right key was pressed. These constants are VK_LCONTROL, VK_RCONTROL, VK_LMENU, VK_RMENU, VK_LSHIFT, and VK_RSHIFT.</p>
<p>
The least significant bit of the return value is not valid in Windows CE, and should be ignored.</p>
<p>
<b>GetAsyncKeyState</b> will return the current key state even if a window in another thread or process currently has the keyboard focus. </p>
<p>
You can also use the VK_LBUTTON virtual-key code constant to determine the state of the stylus tip, (up/down), on the touch-screen.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 1.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winuser.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use user32.lib.</p>
<h4>See Also</h4>
<p>
<a href="keybinpt_4l9w.htm">Keyboard Input Overview</a>, <a href="keybinpt_43jn.htm">Keyboard Input Functions</a>, <a href="keybinpt_0nhh.htm"><b>GetKeyboardState</b></a>, <a href="keybinpt_4z51.htm"><b>GetKeyState</b></a>, <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_getsystemmetrics">
</object><a href=JavaScript:alink_1.Click()><b>GetSystemMetrics</b></a>, <a href="keybinpt_0hfd.htm"><b>MapVirtualKey</b></a>, <a href="keybinpt_2iqt.htm"><b>SetKeyboardState</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
