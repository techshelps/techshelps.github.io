<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>EditWordBreakProc</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_editwordbreakproc"></a>EditWordBreakProc</h1>
<p>
The <b>EditWordBreakProc</b> function is an application-defined callback function used with the <a href="editcon_93tv.htm">EM_SETWORDBREAKPROC</a> message. A multiline edit control or a rich edit control calls an <b>EditWordBreakProc</b> function whenever the control must break a line of text.</p>
<p>
The <b>EDITWORDBREAKPROC</b> type defines a pointer to this callback function. <b>EditWordBreakProc</b> is a placeholder for the application-defined function name. </p>
<pre><code><b>int CALLBACK EditWordBreakProc(
  LPTSTR</b><i> lpch</i><b>,     </b>// pointer to edit text
<b>  int</b><i> ichCurrent</i><b>,  </b>// index of starting point
<b>  int</b><i> cch</i><b>,         </b>// length in characters of edit text
<b>  int</b><i> code</i>         // action to take
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpch</i></dt>
<dd>
Pointer to the text of the edit control. </dd>
<dt>
<i>ichCurrent</i></dt>
<dd>
Specifies an index to a character position in the buffer of text that identifies the point at which the function should begin checking for a word break. </dd>
<dt>
<i>cch</i></dt>
<dd>
Specifies the number of characters in the edit control text. </dd>
<dt>
<i>code</i></dt>
<dd>
Specifies the action to be taken by the callback function. This parameter can be one of the following values: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=38%>Value</th>
<th align=left width=62%>Action</th>
</tr>
<tr valign=top>
<td width=38%>WB_CLASSIFY</td>
<td width=62%>Retrieve the character class and word break flags of the character at the specified position. This value is for use with rich edit controls.</td>
</tr>
<tr valign=top>
<td width=38%>WB_ISDELIMITER</td>
<td width=62%>Check whether the character at the specified position is a delimiter.</td>
</tr>
<tr valign=top>
<td width=38%>WB_LEFT</td>
<td width=62%>Find the beginning of a word to the left of the specified position.</td>
</tr>
<tr valign=top>
<td width=38%>WB_LEFTBREAK</td>
<td width=62%>Find the end-of-word delimiter to the left of the specified position. This value is for use with rich edit controls.</td>
</tr>
<tr valign=top>
<td width=38%>WB_MOVEWORDLEFT</td>
<td width=62%>Find the beginning of a word to the left of the specified position. This value is used during CTRL+LEFT key processing. This value is for use with rich edit controls.</td>
</tr>
<tr valign=top>
<td width=38%>WB_MOVEWORDRIGHT</td>
<td width=62%>Find the beginning of a word to the right of the specified position. This value is used during CTRL+RIGHT key processing. This value is for use with rich edit controls.</td>
</tr>
<tr valign=top>
<td width=38%>WB_RIGHT</td>
<td width=62%>Find the beginning of a word to the right of the specified position. (This is useful in right-aligned edit controls.)</td>
</tr>
<tr valign=top>
<td width=38%>WB_RIGHTBREAK</td>
<td width=62%>Find the end-of-word delimiter to the right of the specified position. (This is useful in right-aligned edit controls.) This value is for use with rich edit controls.</td>
</tr>
</table><br>

</dd>
</dl>
<h4>Return Values</h4>
<p>
If the <i>code</i> parameter specifies WB_ISDELIMITER, the return value is nonzero (TRUE) if the character at the specified position is a delimiter, or zero if it is not. If the <i>code</i> parameter specifies WB_CLASSIFY, the return value is the character class and word break flags of the character at the specified position. Otherwise, the return value is an index to the beginning of a word in the buffer of text. </p>
<h4>Remarks</h4>
<p>
A carriage return followed by a linefeed must be treated as a single word by the callback function. Two carriage returns followed by a linefeed also must be treated as a single word. </p>
<p>
An application must install the callback function by specifying the address of the callback function in an EM_SETWORDBREAKPROC message. </p>
<p>
For rich edit controls, you can alternately use the <a href="richedit_9um0.htm">EM_SETWORDBREAKPROCEX</a> message to replace the default extended word break procedure with an <a href="richedit_7m7s.htm"><b>EditWordBreakProcEx</b></a> callback function. This function provides additional information about the text, such as the character set. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winuser.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>User-defined.<br>
<b>&nbsp;&nbsp;Unicode: </b>Defined as Unicode and ANSI prototypes.</p>
<h4>See Also</h4>
<p>
<a href="editcon_4uwj.htm">Edit Controls Overview</a>, <a href="editcon_7ks3.htm">Edit Control Functions</a>, <a href="richedit_963v.htm">EM_FINDWORDBREAK</a>, <a href="editcon_93tv.htm">EM_SETWORDBREAKPROC</a>, <a href="richedit_9um0.htm">EM_SETWORDBREAKPROCEX</a>, <a href="richedit_7m7s.htm"><b>EditWordBreakProcEx</b></a>, <a href="messques_8ht1.htm"><b>SendMessage</b></a></p>
<p>&nbsp;</p></body>
</HTML>
