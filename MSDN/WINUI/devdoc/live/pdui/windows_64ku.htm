<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WinMain</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_winmain"></a>WinMain</h1>
<p>
The <b>WinMain</b> function is called by the system as the initial entry point for a Win32-based application. </p>
<pre><code><b>int WINAPI WinMain(
  HINSTANCE</b><i> hInstance</i><b>,  </b>// handle to current instance
<b>  HINSTANCE</b><i> hPrevInstance</i><b>,  </b>// handle to previous instance
<b>  LPSTR</b><i> lpCmdLine</i><b>,      </b>// pointer to command line
<b>  int</b><i> nCmdShow</i>          // show state of window
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hInstance</i></dt>
<dd>
Handle to the current instance of the application. </dd>
<dt>
<i>hPrevInstance</i></dt>
<dd>
Handle to the previous instance of the application. For a Win32-based application, this parameter is always NULL. 
<p>
If you need to detect whether another instance already exists, create a uniquely named mutex using the <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_createmutex">
</object><a href=JavaScript:alink_1.Click()><b>CreateMutex</b></a> function. <b>CreateMutex</b> will succeed even if the mutex already exists, but the <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_getlasterror">
</object><a href=JavaScript:alink_2.Click()><b>GetLastError</b></a> function will return ERROR_ALREADY_EXISTS. This indicates that another instance of your application exists, because it created the mutex first.
</dd>
<dt>
<i>lpCmdLine</i></dt>
<dd>
Pointer to a null-terminated string specifying the command line for the application, excluding the program name. To retrieve the entire command line, use the <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_getcommandline">
</object><a href=JavaScript:alink_3.Click()><b>GetCommandLine</b></a> function. </dd>
<dt>
<i>nCmdShow</i></dt>
<dd>
Specifies how the window is to be shown. This parameter can be one of the following values: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=43%>Value</th>
<th align=left width=57%>Meaning</th>
</tr>
<tr valign=top>
<td width=43%>SW_HIDE</td>
<td width=57%>Hides the window and activates another window.</td>
</tr>
<tr valign=top>
<td width=43%>SW_MINIMIZE</td>
<td width=57%>Minimizes the specified window and activates the top-level window in the system's list.</td>
</tr>
<tr valign=top>
<td width=43%>SW_RESTORE</td>
<td width=57%>Activates and displays a window. If the window is minimized or maximized, the system restores it to its original size and position (same as SW_SHOWNORMAL).</td>
</tr>
<tr valign=top>
<td width=43%>SW_SHOW</td>
<td width=57%>Activates a window and displays it in its current size and position.</td>
</tr>
<tr valign=top>
<td width=43%>SW_SHOWMAXIMIZED</td>
<td width=57%>Activates a window and displays it as a maximized window.</td>
</tr>
<tr valign=top>
<td width=43%>SW_SHOWMINIMIZED</td>
<td width=57%>Activates a window and displays it as an icon.</td>
</tr>
<tr valign=top>
<td width=43%>SW_SHOWMINNOACTIVE</td>
<td width=57%>Displays a window as an icon. The active window remains active.</td>
</tr>
<tr valign=top>
<td width=43%>SW_SHOWNA</td>
<td width=57%>Displays a window in its current state. The active window remains active.</td>
</tr>
<tr valign=top>
<td width=43%>SW_SHOWNOACTIVATE</td>
<td width=57%>Displays a window in its most recent size and position. The active window remains active.</td>
</tr>
<tr valign=top>
<td width=43%>SW_SHOWNORMAL</td>
<td width=57%>Activates and displays a window. If the window is minimized or maximized, the system restores it to its original size and position (same as SW_RESTORE).</td>
</tr>
</table><br>

</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, terminating when it receives a WM_QUIT message, it should return the exit value contained in that message's <i>wParam</i> parameter. If the function terminates before entering the message loop, it should return zero. </p>
<h4>Remarks</h4>
<p>
Your <b>WinMain</b> should initialize the application, display its main window, and enter a message retrieval-and-dispatch loop that is the top-level control structure for the remainder of the application's execution. Terminate the message loop when it receives a WM_QUIT message. At that point, your <b>WinMain</b> should exit the application, returning the value passed in the WM_QUIT message's <i>wParam</i> parameter. If WM_QUIT was received as a result of calling <b>PostQuitMessage</b>, the value of <i>wParam</i> is the value of the <b>PostQuitMessage</b> function's <i>nExitCode</i> parameter. For more information, see <a href="messques_77zk.htm">Creating a Message Loop</a>.</p>
<p>
ANSI applications can use the <i>lpCmdLine</i> parameter of the <b>WinMain</b> function to access the command-line string, excluding the program name. The reason that <b>WinMain</b> cannot return Unicode strings is that <i>lpCmdLine</i> uses the <b>LPSTR </b>data type, not the <b>LPTSTR</b> data type. The <b>GetCommandLine</b> function can be used to access Unicode strings in the command line, because it uses the <b>LPTSTR</b> data type. </p>
<p>
<b>Windows CE:</b> Windows CE does not support the following values for the <i>nCmdShow</i> parameter: </p>
<p class=indent1>
SW_MINIMIZE </p>
<p class=indent1>
SW_RESTORE </p>
<p class=indent1>
SW_SHOWMAXIMIZED </p>
<p class=indent1>
SW_SHOWMINIMIZED </p>
<p class=indent1>
SW_SHOWMINNOACTIVE </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 1.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>User-defined.</p>
<h4>See Also</h4>
<p>
<a href="windows_6t2r.htm">Windows Overview</a>, <a href="windows_8qyb.htm">Window Functions</a>, <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_createmutex">
</object><a href=JavaScript:alink_4.Click()><b>CreateMutex</b></a>, <a href="messques_55b9.htm"><b>DispatchMessage</b></a>, <object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_getcommandline">
</object><a href=JavaScript:alink_5.Click()><b>GetCommandLine</b></a>, <a href="messques_10kl.htm"><b>GetMessage</b></a>, <a href="messques_0tgl.htm"><b>PostQuitMessage</b></a>, <a href="messques_8vj9.htm"><b>TranslateMessage</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
