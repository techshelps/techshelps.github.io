<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating a Multiple-Selection List Box</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_creating_a_multiple_selection_list_box"></a>Creating a Multiple-Selection List Box</h2>
<p>
The following example displays and initializes the dialog box used in the preceding example. However, this code uses the LBS_MULTIPLESEL style to enable the user to select more than one file at a time. When the user chooses the <b>Delete</b> button, the example sends the <a href="listbox_8df8.htm">LB_GETSELCOUNT</a> message (to retrieve the number of files selected) and the <a href="listbox_2mgj.htm">LB_GETSELITEMS</a> message (to retrieve an array of selected list box items). After deleting a file, the code removes the corresponding item from the list box by sending the <a href="listbox_7jzb.htm">LB_DELETESTRING</a> message. </p>
<pre><code>#define BUFFER MAX_PATH 
 
#define BIGBUFF 8192 
 
BOOL APIENTRY DlgDelFilesProc( 
    HWND hDlg,            // window handle to dialog box 
    UINT message,         // type of message 
    UINT wParam,          // message-specific information 
    LONG lParam) 
{ 
    DWORD cchCurDir; 
    LPTSTR lpszCurDir; 
    LPTSTR lpszFileToDelete; 
    int nSelItems; 
    int nSelItemsInBuffer; 
    TCHAR tchBuffer[BUFFER]; 
    TCHAR tchMsgBuff[BUFFER]; 
    int nBuffer[BIGBUFF]; 
    int i; 
    BOOL fResult; 
    HWND hListBox; 
 
    switch (message) { 
 
        case WM_INITDIALOG: 
 
           // Initialize the list box by filling it with files from 
           // the current directory. 
 
           lpszCurDir = tchBuffer; 
           GetCurrentDirectory(cchCurDir, lpszCurDir); 
           DlgDirList(hDlg, lpszCurDir, IDL_FILES, IDS_PATHTOFILL, 0); 
 
           SetFocus(GetDlgItem(hDlg, IDL_FILES)); 
 
           return FALSE; 
 
        case WM_COMMAND: 
 
            switch (LOWORD(wParam)) 
            { 
                case IDOK: 
 
                    // When the user presses the Delete (IDOK) 
                    // button, delete all the selected files. 
 
                    lpszFileToDelete = tchBuffer; 
 
                    hListBox = GetDlgItem(hDlg, IDL_FILES); 
                    nSelItems = SendMessage(hListBox, 
                            LB_GETSELCOUNT, 0, 0); 
 
                    nSelItemsInBuffer = SendMessage(hListBox, 
                            LB_GETSELITEMS, 512, (LPARAM) nBuffer); 
 
                    if (nSelItems &gt; nSelItemsInBuffer) 
                    { 
                        MessageBox(hDlg, "Too many items selected.", 
                                NULL, MB_OK); 
                    } 
                    else 
                    { 
                        // Go through the list backwards because after 
                        // deleting an item the indices change for 
                        // every subsequent item. By going backward, 
                        // the indices are never invalidated. 
 
                        for (i = nSelItemsInBuffer - 1; i &gt;= 0; i--) 
                        { 
                            SendMessage(hListBox, LB_GETTEXT, 
                                        nBuffer[i], 
                                        (LPARAM) lpszFileToDelete); 
 
                            fResult = DeleteFile(lpszFileToDelete); 
                            if (!fResult) 
                            { 
                                sprintf(tchMsgBuff, 
                                        "Could not delete file: %s " 
                                        "GetLastError = %u", 
                                        (LPARAM) lpszFileToDelete); 
 
                                // Call app-defined error handler. 
 
                                ErrorHandler(tchMsgBuff); 
                            } 
                            else 
                            { 
                                SendMessage(hListBox, LB_DELETESTRING, 
                                        nBuffer[i], 0); 
                            } 
                        } 
                        SendMessage(hListBox, LB_SETCARETINDEX, 0, 0); 
                    } 
                    return TRUE; 
 
                case IDCANCEL: 
 
                    // Destroy the dialog box. 
 
                    EndDialog(hDlg, TRUE); 
                    return TRUE; 
 
                default: 
                    return FALSE; 
            } 
 
        default: 
                return FALSE; 
    } 
} 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
