<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Processing Character Messages</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_processing_character_messages"></a>Processing Character Messages</h2>
<p>
A window procedure receives a character message when the <a href="messques_8vj9.htm"><b>TranslateMessage</b></a> function translates a virtual-key code corresponding to a character key. The character messages are <a href="keybinpt_2otu.htm">WM_CHAR</a>, <a href="keybinpt_7c1e.htm">WM_DEADCHAR</a>, <a href="keybacel_125u.htm">WM_SYSCHAR</a>, and <a href="keybinpt_91de.htm">WM_SYSDEADCHAR</a>. A typical window procedure ignores all character messages except WM_CHAR. The <b>TranslateMessage</b> function generates a WM_CHAR message when the user presses any of the following keys: 
<ul>
<li>
Any character key</li>
<li>
backspace</li>
<li>
enter (carriage return)</li>
<li>
esc</li>
<li>
shift+enter (linefeed)</li>
<li>
tab</li>
</ul>
<p>
When a window procedure receives the <a href="keybinpt_2otu.htm">WM_CHAR</a> message, it should examine the character code that accompanies the message to determine how to process the character. The character code is in the message's <i>wParam</i> parameter. </p>
<p>
The following example shows the window procedure framework that a typical application uses to receive and process character messages. </p>
<pre><code>case WM_CHAR: 
            switch (wParam) 
            { 
                case 0x08: 
                    
                    // Process a backspace. 
                     
                    break; 
 
                case 0x0A: 
                    
                    // Process a linefeed. 
                     
                    break; 
 
                case 0x1B: 
                    
                    // Process an escape. 
                    
                    break; 
 
                case 0x09: 
                    
                    // Process a tab. 
                     
                    break; 
 
                case 0x0D: 
                    
                    // Process a carriage return. 
                     
                    break; 
 
                default: 
                    
                    // Process displayable characters. 
                     
                    break; 
            } 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
