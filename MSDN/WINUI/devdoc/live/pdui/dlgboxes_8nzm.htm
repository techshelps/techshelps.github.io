<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DLGTEMPLATE</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_dlgtemplate_str"></a>DLGTEMPLATE</h1>
<p>
The <b>DLGTEMPLATE</b> structure defines the dimensions and style of a dialog box. This structure, always the first in a standard template for a dialog box, also specifies the number of controls in the dialog box and therefore specifies the number of subsequent <a href="dlgboxes_971u.htm"><b>DLGITEMTEMPLATE</b></a> structures in the template. </p>
<pre><code>typedef struct { // dltt 
    DWORD style; 
    DWORD dwExtendedStyle; 
    WORD  cdit; 
    short x; 
    short y; 
    short cx; 
    short cy; 
} DLGTEMPLATE; 
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>style</b></dt>
<dd>
Specifies the style of the dialog box. This member can be a combination of window style values (such as WS_CAPTION and WS_SYSMENU) and one or more of the following dialog box style values: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=33%>Value</th>
<th align=left width=67%>Meaning</th>
</tr>
<tr valign=top>
<td width=33%>DS_3DLOOK</td>
<td width=67%>Gives the dialog box a nonbold font and draws three-dimensional borders around control windows in the dialog box. <p>
The DS_3DLOOK style is required only by Win32-based applications compiled for system versions earlier than Windows 95 or Windows NT 4.0. The system automatically applies the three-dimensional look to dialog boxes created by applications compiled for current versions of the system.</p>
</td>
</tr>
<tr valign=top>
<td width=33%>DS_ABSALIGN</td>
<td width=67%>Indicates that the coordinates of the dialog box are screen coordinates. If this style is not specified, The system assumes they are client coordinates.</td>
</tr>
<tr valign=top>
<td width=33%>DS_CENTER</td>
<td width=67%>Centers the dialog box in the working area; that is, the area not obscured by the tray.</td>
</tr>
<tr valign=top>
<td width=33%>DS_CENTERMOUSE</td>
<td width=67%>Centers the mouse cursor in the dialog box.</td>
</tr>
<tr valign=top>
<td width=33%>DS_CONTEXTHELP</td>
<td width=67%>Includes a question mark in the title bar of the dialog box. When the user clicks the question mark, the cursor changes to a question mark with a pointer. If the user then clicks a control in the dialog box, the control receives a WM_HELP message. The control should pass the message to the dialog box procedure, which should call the <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_winhelp">
</object><a href=JavaScript:alink_1.Click()><b>WinHelp</b></a> function using the HELP_WM_HELP command. The Help application displays a pop-up window that typically contains help for the control. <p>
Note that DS_CONTEXTHELP is only a placeholder. When the dialog box is created, the system checks for DS_CONTEXTHELP and, if it is there, adds WS_EX_CONTEXTHELP to the extended style of the dialog box. WS_EX_CONTEXTHELP cannot be used with the WS_MAXIMIZEBOX or WS_MINIMIZEBOX styles.</p>
</td>
</tr>
<tr valign=top>
<td width=33%>DS_CONTROL</td>
<td width=67%>Creates a dialog box that works well as a child window of another dialog box, much like a page in a property sheet. This style allows the user to tab among the control windows of a child dialog box, use its accelerator keys, and so on.</td>
</tr>
<tr valign=top>
<td width=33%>DS_FIXEDSYS</td>
<td width=67%>Causes the dialog box to use the SYSTEM_FIXED_FONT instead of the default SYSTEM_FONT. SYSTEM_FIXED_FONT is a monospace font compatible with the System font in Windows versions earlier than 3.0.</td>
</tr>
<tr valign=top>
<td width=33%>DS_LOCALEDIT</td>
<td width=67%>Applies to 16-bit applications only. This style directs edit controls in the dialog box to allocate memory from the application's data segment. Otherwise, edit controls allocate storage from a global memory object.</td>
</tr>
<tr valign=top>
<td width=33%>DS_MODALFRAME</td>
<td width=67%>Creates a dialog box with a modal dialog-box frame that can be combined with a title bar and System menu by specifying the WS_CAPTION and WS_SYSMENU styles.</td>
</tr>
<tr valign=top>
<td width=33%>DS_NOFAILCREATE</td>
<td width=67%><b>Windows 95:</b> Creates the dialog box even if errors occur — for example, if a child window cannot be created or if the system cannot create a special data segment for an edit control.</td>
</tr>
<tr valign=top>
<td width=33%>DS_NOIDLEMSG</td>
<td width=67%>Suppresses WM_ENTERIDLE messages that the system would otherwise send to the owner of the dialog box while the dialog box is displayed.</td>
</tr>
<tr valign=top>
<td width=33%>DS_SETFONT</td>
<td width=67%>Indicates that the header of the dialog box template contains additional data specifying the font to use for text in the client area and controls of the dialog box. The font data begins on the <b>WORD</b> boundary that follows the title array. It specifies a 16-bit point size value and a Unicode font name string. If possible, the system creates a font according to the specified values. Then the system passes the handle of the font to the dialog box and to each control by sending them the <a href="controls_7v90.htm">WM_SETFONT</a> message. <p>
If this style is not specified, the dialog box template does not include the font data.</p>
</td>
</tr>
<tr valign=top>
<td width=33%>DS_SETFOREGROUND</td>
<td width=67%>Causes the system to use the <a href="windows_1eev.htm"><b>SetForegroundWindow</b></a> function to bring the dialog box to the foreground. </td>
</tr>
<tr valign=top>
<td width=33%>DS_SYSMODAL</td>
<td width=67%>This style is obsolete and is included for compatibility with earlier versions of Windows. If you specify this style, the system creates the dialog box with the WS_EX_TOPMOST style. Do not combine this style with the DS_CONTROL style.</td>
</tr>
</table><br>

</dd>
<dt>
<b>dwExtendedStyle</b></dt>
<dd>
Specifies extended styles for a window. This member is not used to create dialog boxes, but applications that use dialog box templates can use it to create other types of windows.</dd>
<dt>
<b>cdit</b></dt>
<dd>
Specifies the number of items in the dialog box. </dd>
<dt>
<b>x</b></dt>
<dd>
Specifies the x-coordinate, in dialog box units, of the upper-left corner of the dialog box. </dd>
<dt>
<b>y</b></dt>
<dd>
Specifies the y-coordinate, in dialog box units, of the upper-left corner of the dialog box. </dd>
<dt>
<b>cx</b></dt>
<dd>
Specifies the width, in dialog box units, of the dialog box. </dd>
<dt>
<b>cy</b></dt>
<dd>
Specifies the height, in dialog box units, of the dialog box. 
</dd>
</dl>
<h4>Remarks</h4>
<p>
In a standard template for a dialog box, the <b>DLGTEMPLATE</b> structure is always immediately followed by three variable-length arrays that specify the menu, class, and title for the dialog box. When the DS_SETFONT style is given, these arrays are also followed by a 16-bit value specifying point size and another variable-length array specifying a typeface name. Each array consists of one or more 16-bit elements. The menu, class, title, and font arrays must be aligned on <b>WORD</b> boundaries. </p>
<p>
Immediately following the <b>DLGTEMPLATE</b> structure is a menu array that identifies a menu resource for the dialog box. If the first element of this array is 0x0000, the dialog box has no menu and the array has no other elements. If the first element is 0xFFFF, the array has one additional element that specifies the ordinal value of a menu resource in an executable file. If the first element has any other value, the system treats the array as a null-terminated Unicode string that specifies the name of a menu resource in an executable file. </p>
<p>
Following the menu array is a class array that identifies the window class of the control. If the first element of the array is 0x0000, the system uses the predefined dialog box class for the dialog box and the array has no other elements. If the first element is 0xFFFF, the array has one additional element that specifies the ordinal value of a predefined system window class. If the first element has any other value, the system treats the array as a null-terminated Unicode string that specifies the name of a registered window class. </p>
<p>
Following the class array is a title array that specifies a null-terminated Unicode string that contains the title of the dialog box. If the first element of this array is 0x0000, the dialog box has no title and the array has no other elements. </p>
<p>
The 16-bit point size value and the typeface array follow the title array, but only if the <b>style</b> member specifies the DS_SETFONT style. The point size value specifies the point size of the font to use for the text in the dialog box and its controls. The typeface array is a null-terminated Unicode string specifying the name of the typeface for the font. When these values are given, The system creates a font having the given size and typeface (if possible) and sends a WM_SETFONT message to the dialog box procedure and the control window procedures as it creates the dialog box and controls. </p>
<p>
Following the <b>DLGTEMPLATE</b> header in a standard dialog box template are one or more <b>DLGITEMTEMPLATE</b> structures that define the dimensions and style of the controls in the dialog box. The <b>cdit</b> member specifies the number of <b>DLGITEMTEMPLATE</b> structures in the template. These <b>DLGITEMTEMPLATE</b> structures must be aligned on <b>DWORD</b> boundaries.</p>
<p>
If you specify character strings in the menu, class, title, or typeface arrays, you must use Unicode strings. To create code that works on both Windows and Windows NT, use the <b>MultiByteToWideChar</b> function to generate these Unicode strings.</p>
<p>
The <b>x</b>, <b>y</b>, <b>cx</b>, and <b>cy</b> members specify values in dialog box units. You can convert these values to screen units (pixels) by using the <b>MapDialogRect</b> function. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 1.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winuser.h.</p>
<h4>See Also</h4>
<p>
<a href="dlgboxes_7foz.htm">Dialog Boxes Overview</a>, <a href="dlgboxes_4303.htm">Dialog Box Structures</a>, <a href="dlgboxes_1qd0.htm"><b>CreateDialogIndirect</b></a>, <a href="dlgboxes_8bhp.htm"><b>CreateDialogIndirectParam</b></a>, <a href="dlgboxes_4ddg.htm"><b>DialogBoxIndirect</b></a>, <a href="dlgboxes_1fe5.htm"><b>DialogBoxIndirectParam</b></a>, <a href="dlgboxes_971u.htm"><b>DLGITEMTEMPLATE</b></a>, <a href="dlgboxes_0jqq.htm"><b>DLGITEMTEMPLATEEX</b></a>, <a href="dlgboxes_1qwi.htm"><b>DLGTEMPLATEEX</b></a>, <a href="dlgboxes_4hf8.htm"><b>MapDialogRect</b></a>, <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_multibytetowidechar">
</object><a href=JavaScript:alink_2.Click()><b>MultiByteToWideChar</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
