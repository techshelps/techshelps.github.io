<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>EditStreamCallback</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_editstreamcallback"></a>EditStreamCallback</h1>
<p>
The <b>EditStreamCallback</b> function is an application-defined callback function used with the <a href="richedit_4be6.htm">EM_STREAMIN</a> and <a href="richedit_6sl0.htm">EM_STREAMOUT</a> messages. It is used to transfer a stream of data into or out of a rich edit control. The <b>EDITSTREAMCALLBACK</b> type defines a pointer to this callback function. <b>EditStreamCallback</b> is a placeholder for the application-defined function name. </p>
<pre><code><b>DWORD CALLBACK EditStreamCallback(
  DWORD</b><i> dwCookie</i><b>, </b>// application-defined value
<b>  LPBYTE</b><i> pbBuff</i><b>,  </b>// pointer to a buffer
<b>  LONG</b><i> cb</i><b>,        </b>// number of bytes to read or write
<b>  LONG</b><i> *pcb       </i>// pointer to number of bytes transferred
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dwCookie</i></dt>
<dd>
Specifies the value of the <b>dwCookie</b> member of the <a href="richedit_1sz6.htm"><b>EDITSTREAM</b></a> structure. The application specifies this value when it sends the <a href="richedit_4be6.htm">EM_STREAMIN</a> or <a href="richedit_6sl0.htm">EM_STREAMOUT</a> message.</dd>
<dt>
<i>pbBuff</i></dt>
<dd>
Pointer to a buffer to read from or write to. For a stream-in (read) operation, the callback function fills this buffer with data to transfer into the rich edit control. For a stream-out (write) operation, the buffer contains data from the control that the callback function writes to some storage. </dd>
<dt>
<i>cb</i></dt>
<dd>
Specifies the number of bytes to read or write. </dd>
<dt>
<i>pcb</i></dt>
<dd>
Pointer to a variable that the callback function sets to the number of bytes actually read or written.
</dd>
</dl>
<h4>Return Values</h4>
<p>
The callback function returns zero to indicate success.</p>
<p>
The callback function returns a nonzero value to indicate an error. If an error occurs, the read or write operation ends and the rich edit control discards any data in the <i>pbBuff</i> buffer. If the callback function returns a nonzero value, the rich edit control uses the <b>dwError</b> member of the <b>EDITSTREAM</b> structure to pass the value back to the application.</p>
<h4>Remarks</h4>
<p>
When you send the <a href="richedit_4be6.htm">EM_STREAMIN</a> or <a href="richedit_6sl0.htm">EM_STREAMOUT</a> message to a rich edit control, the <b>pfnCallback</b> member of the <a href="richedit_1sz6.htm"><b>EDITSTREAM</b></a> structure specifies a pointer to an <b>EditStreamCallback</b> function. The rich edit control repeatedly calls the function to transfer a stream of data into or out of the control. </p>
<p>
When you send the EM_STREAMIN or EM_STREAMOUT message, you specify a value for the <b>dwCookie</b> member of the <b>EDITSTREAM</b> structure. The rich edit control uses the <i>dwCookie</i> parameter to pass this value to your <b>EditStreamCallback</b> function. For example, you might use <b>dwCookie</b> to pass a handle to an open file. The callback function can then use the <i>dwCookie</i> handle to read from or write to the file. </p>
<p>
The control calls the callback function repeatedly, transferring a portion of the data with each call. The control continues to call the callback function until one of the following conditions occurs:
<ul>
<li>
The callback function returns a nonzero value. </li>
<li>
The callback function returns zero in the *pcb parameter.</li>
<li>
The value returned in the *pcb parameter is less than the number of bytes requested in the cb parameter.</li>
<li>
An error occurs that prevents the rich edit control from transferring data into or out of itself. Examples are out-of-memory situations, failure of a system function, or the read buffer contains an invalid character.</li>
<li>
For a stream-in operation, the RTF code contains data specifying the end of an RTF block.</li>
<li>
For a stream-in operation on a single-line edit control, the callback reads in a CRLF.</li>
</ul>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.51 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in richedit.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>User-defined.</p>
<h4>See Also</h4>
<p>
<a href="richedit_5a7n.htm">Rich Edit Controls Overview</a>, <a href="richedit_3rlf.htm">Rich Edit Callback Functions</a>, <a href="richedit_1sz6.htm"><b>EDITSTREAM</b></a>, <a href="richedit_4be6.htm">EM_STREAMIN</a>, <a href="richedit_6sl0.htm">EM_STREAMOUT</a> </p>
<p>&nbsp;</p></body>
</HTML>
