<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Scroll Bar Requests</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_scroll_bar_requests"></a>Scroll Bar Requests</h2>
<p>
The user makes scrolling requests by clicking various parts of a scroll bar. The system sends the request to the given window in the form of a <a href="scrolbar_2q5o.htm">WM_HSCROLL</a> or <a href="scrolbar_90mk.htm">WM_VSCROLL</a> message. A horizontal scroll bar sends the WM_HSCROLL message; a vertical scroll bar sends the WM_VSCROLL message. Each message includes a notification code that corresponds to the user's action, to the handle to the scroll bar (scroll bar controls only), and, in some cases, to the position of the scroll box. </p>
<p>
The following figure shows the notification messages that the user generates when clicking various parts of a scroll bar. </p>
<p>
<img src="images/csscr_02.gif" border=0></p>
<p>
The scroll bar notification codes specify the action the user takes. An application examines the codes that accompany the WM_HSCROLL and WM_VSCROLL messages and then performs the appropriate scrolling operation. In the following table of notification messages, the user's action is specified for each message, followed by the application's response. In each case, a unit is defined by the application as appropriate for the given data. For example, the typical unit for scrolling text vertically is a line of text. </p>
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=33%>Notification <br>
message</th>
<th align=left width=31%><br>
Action</th>
<th align=left width=36%><br>
Response</th>
</tr>
<tr valign=top>
<td width=33%>SB_LINEUP</td>
<td width=31%>The user clicks the top scroll arrow.</td>
<td width=36%>Decrements the scroll box position; scrolls toward the top of the data by one unit. </td>
</tr>
<tr valign=top>
<td width=33%>SB_LINEDOWN</td>
<td width=31%>The user clicks the bottom scroll arrow.</td>
<td width=36%>Increments the scroll box position; scrolls toward the bottom of the data by one unit. </td>
</tr>
<tr valign=top>
<td width=33%>SB_LINELEFT</td>
<td width=31%>The user clicks the left scroll arrow.</td>
<td width=36%>Decrements the scroll box position; scrolls toward the left end of the data by one unit. </td>
</tr>
<tr valign=top>
<td width=33%>SB_LINERIGHT</td>
<td width=31%>The user clicks the right scroll arrow.</td>
<td width=36%>Increments the scroll box position; scrolls toward the right end of the data by one unit. </td>
</tr>
<tr valign=top>
<td width=33%>SB_PAGEUP</td>
<td width=31%>The user clicks the scroll bar shaft above the scroll box.</td>
<td width=36%>Decrements the scroll box position by the number of data units in the window; scrolls toward the top of the data by the same number of units. </td>
</tr>
<tr valign=top>
<td width=33%>SB_PAGEDOWN</td>
<td width=31%>The user clicks the scroll bar shaft below the scroll box.</td>
<td width=36%>Increments the scroll box position by the number of data units in the window; scrolls toward the bottom of the data by the same number of units. </td>
</tr>
<tr valign=top>
<td width=33%>SB_PAGELEFT</td>
<td width=31%>The user clicks the scroll bar shaft to the left of the scroll box.</td>
<td width=36%>Decrements the scroll box position by the number of data units in the window; scrolls toward the left end of the data by the same number of units. </td>
</tr>
<tr valign=top>
<td width=33%>SB_PAGERIGHT</td>
<td width=31%>The user clicks the scroll bar shaft to the right of the scroll box.</td>
<td width=36%>Increments the scroll box position by the number of data units in the window; scrolls toward the right end of the data by the same number of units. </td>
</tr>
<tr valign=top>
<td width=33%>SB_THUMBPOSITION</td>
<td width=31%>The user releases the scroll box after dragging it.</td>
<td width=36%>Sets the scroll box to the position given in the message; scrolls the data by the same number of units the scroll box has moved. </td>
</tr>
<tr valign=top>
<td width=33%>SB_THUMBTRACK</td>
<td width=31%>The user drags the scroll box.</td>
<td width=36%>Sets the scroll box to the position given in the message and scrolls the data by the same number of units the scroll box has moved for applications that draw data quickly. Applications that cannot draw data quickly must wait for the SB_THUMBPOSITION message before moving the scroll box and scrolling the data. </td>
</tr>
<tr valign=top>
<td width=33%>SB_ENDSCROLL</td>
<td width=31%>The user releases the mouse after holding it on an arrow or in the scroll bar shaft. </td>
<td width=36%>No response is needed. </td>
</tr>
</table><br>
<p>
A scroll bar generates the SB_THUMBPOSITION and SB_THUMBTRACK notification messages when the user clicks and drags the scroll box. An application should be programmed to process either the SB_THUMBTRACK or the SB_THUMBPOSITION notification message. </p>
<p>
The SB_THUMBPOSITION notification message occurs when the user releases the mouse button after clicking the scroll box. An application that processes this message performs the scrolling operation after the user has dragged the scroll box to the desired position and released the mouse button. </p>
<p>
SB_THUMBTRACK notification messages occur as the user drags the scroll box. If an application processes SB_THUMBTRACK messages, it can scroll the content of a window as the user drags the scroll box. However, a scroll bar can generate many SB_THUMBTRACK notification messages in a short period, so an application should process these messages only if it can quickly repaint the content of the window. </p>
<p>&nbsp;</p></body>
</HTML>
