<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GetSystemMenu</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_getsystemmenu"></a>GetSystemMenu</h1>
<p>
The <b>GetSystemMenu</b> function allows the application to access the <b>window</b> menu (also known as the <b>system</b> menu or the <b>control</b> menu) for copying and modifying. </p>
<pre><code><b>HMENU GetSystemMenu(
  HWND</b><i> hWnd</i><b>,    </b>// handle to window to own window menu
<b>  BOOL</b><i> bRevert  </i>// reset flag
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hWnd</i></dt>
<dd>
Handle to the window that will own a copy of the <b>window</b> menu. </dd>
<dt>
<i>bRevert</i></dt>
<dd>
Specifies the action to be taken. If this parameter is FALSE, <b>GetSystemMenu</b> returns the handle to the copy of the <b>window</b> menu currently in use. The copy is initially identical to the <b>window</b> menu, but it can be modified. 
<p>
If this parameter is TRUE, <b>GetSystemMenu</b> resets the <b>window</b> menu back to the default state. The previous <b>window</b> menu, if any, is destroyed. 

</dd>
</dl>
<h4>Return Values</h4>
<p>
If the <i>bRevert</i> parameter is FALSE, the return value is the handle to a copy of the <b>window</b> menu. If the <i>bRevert</i> parameter is TRUE, the return value is NULL. </p>
<h4>Remarks</h4>
<p>
Any window that does not use the <b>GetSystemMenu</b> function to make its own copy of the <b>window</b> menu receives the standard <b>window</b> menu. </p>
<p>
The <b>window</b> menu initially contains items with various identifier values, such as SC_CLOSE, SC_MOVE, and SC_SIZE. </p>
<p>
Menu items on the <b>window</b> menu send <a href="keybacel_19t0.htm">WM_SYSCOMMAND</a> messages. </p>
<p>
All predefined <b>window</b> menu items have identifier numbers greater than 0xF000. If an application adds commands to the <b>window</b> menu, it should use identifier numbers less than 0xF000. </p>
<p>
The system automatically grays items on the standard <b>window</b> menu, depending on the situation. The application can perform its own checking or graying by responding to the <a href="keybacel_1q0l.htm">WM_INITMENU</a> message that is sent before any menu is displayed. </p>
<p>
<b>Windows CE:</b> Windows CE does not support a system menu, but <b>GetSystemMenu</b> is implemented as a macro to maintain compatibility with existing code. You can use the menu handle returned by this macro to disable the close box the same way you would in a Windows desktop platform. There is no other use for the return value in Windows CE. The <i>brevert</i> parameter is ignored. Use the following code to disable the <b>Close</b> button:</p>
<pre><code>EnableMenuItem (GetSystemMenu(hwnd, FALSE), SC_CLOSE,MF_BYCOMMAND | MF_GRAYED);</code></pre>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 1.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winuser.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use user32.lib.</p>
<h4>See Also</h4>
<p>
<a href="newmenus_1gz7.htm">Menus Overview</a>, <a href="newmenus_7uur.htm">Menu Functions</a>, <a href="newmenus_7y45.htm"><b>GetMenu</b></a>, <a href="keybacel_1q0l.htm">WM_INITMENU</a>, <a href="keybacel_19t0.htm">WM_SYSCOMMAND</a> </p>
<p>&nbsp;</p></body>
</HTML>
