<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WM_CTLCOLOREDIT</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_wm_ctlcoloredit"></a>WM_CTLCOLOREDIT</h1>
<p>
An edit control that is not read-only or disabled sends the WM_CTLCOLOREDIT message to its parent window when the control is about to be drawn. By responding to this message, the parent window can use the specified device context handle to set the text and background colors of the edit control. </p>
<pre><code>WM_CTLCOLOREDIT 
hdcEdit = (HDC) wParam;   // handle to display context 
hwndEdit = (HWND) lParam; // handle to static control 
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hdcEdit</i></dt>
<dd>
Value of <i>wParam</i>. Handle to the device context for the edit control window. </dd>
<dt>
<i>hwndEdit</i></dt>
<dd>
Value of <i>lParam</i>. Handle to the edit control. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If an application processes this message, it must return the handle of a brush. The system uses the brush to paint the background of the edit control. </p>
<h4>Default Action</h4>
<p>
The <b>DefWindowProc</b> function selects the default system colors for the edit control. </p>
<h4>Remarks</h4>
<p>
Read-only or disabled edit controls do not send the WM_CTLCOLOREDIT message; instead, they send the <a href="statcon_6dnn.htm">WM_CTLCOLORSTATIC</a> message. However, for compatibility purposes, the system sends the WM_CTLCOLOREDIT message for read-only and disabled edit controls if the application was designed for Windows 3.1 or earlier.</p>
<p>
The system does not automatically destroy the returned brush. It is the application's responsibility to destroy the brush when it is no longer needed.</p>
<p>
The WM_CTLCOLOREDIT message is never sent between threads, it is only sent within the same thread. </p>
<p>
If a dialog box procedure handles this message, it should cast the desired return value to a BOOL and return the value directly. If the dialog box procedure returns FALSE, then default message handling is performed. The DWL_MSGRESULT value set by the <b>SetWindowLong</b> function is ignored. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 2.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winuser.h.</p>
<h4>See Also</h4>
<p>
<a href="editcon_4uwj.htm">Edit Controls Overview</a>, <a href="editcon_3xyr.htm">Edit Control Messages</a>, <a href="winprocs_10o3.htm"><b>DefWindowProc</b></a>, <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_realizepalette">
</object><a href=JavaScript:alink_1.Click()><b>RealizePalette</b></a>, <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_selectpalette">
</object><a href=JavaScript:alink_2.Click()><b>SelectPalette</b></a>, <a href="buttons_0d4e.htm">WM_CTLCOLORBTN</a>, <a href="dlgboxes_0j1j.htm">WM_CTLCOLORDLG</a>, <a href="listbox_82t4.htm">WM_CTLCOLORLISTBOX</a>, <a href="dlgboxes_4ud4.htm">WM_CTLCOLORMSGBOX</a>, <a href="scrolbar_0cz6.htm">WM_CTLCOLORSCROLLBAR</a>, <a href="statcon_6dnn.htm">WM_CTLCOLORSTATIC</a> </p>
<p>&nbsp;</p></body>
</HTML>
