<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Edit Control Types and Styles</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_edit_control_types_and_styles"></a>Edit Control Types and Styles</h2>
<p>
There are several edit control styles. An individual edit control can have several styles at the same time. Most developers use tools to develop dialog boxes and so may not need to specify edit control styles explicitly. If an application creates an edit control using the <a href="windows_33jr.htm"><b>CreateWindow</b></a> or <a href="windows_1w6w.htm"><b>CreateWindowEx</b></a> function, however, it must specify these edit control styles. For a table of edit control styles, see <a href="editcon_7rqr.htm">Edit Control Styles</a>.</p>
<p>
Every edit control specifies a combination of style values that define the appearance and features of the edit control. The style values can establish the appearance of a single-line or multiline edit control, align the text in the control, and determine how, and even if, text appears in the edit control. The number and type of styles the application uses depend on the type and purpose of the edit control. </p>
<p>
There are two line styles for edit controls. The default is a single-line edit control that doesn't require an associated style. An application can create a multiline edit control by using the ES_MULTILINE style. </p>
<p>
There are three styles that cause the system to align the text in an edit control. The ES_LEFT, ES_CENTER, and ES_RIGHT styles determine whether text is aligned on the left, center, or right, respectively. </p>
<p>
An application can use a style to determine how the system displays text that a user enters into an edit control. The ES_LOWERCASE style converts the text into lowercase characters; the ES_UPPERCASE style converts the text into uppercase characters. Some applications may need to convert the text in a string (such as a filename) into a specific character set. The ES_OEMCONVERT style ensures the proper conversion of characters in these instances. For more information about character sets, see <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_consoles_and_character_mode_support">
</object><a href=JavaScript:alink_1.Click()>Consoles and Character-Mode Support</a>. </p>
<p>
When the amount of text to be displayed exceeds the size of the edit control, an application can use two styles to scroll the text through the edit control. The ES_AUTOHSCROLL style automatically scrolls text horizontally in single-line and multiline edit controls. When the application has a multiline edit control, it can also use the ES_AUTOVSCROLL style to automatically scroll text vertically, if necessary. </p>
<p>
Other available styles define different aspects of an edit control. The ES_NUMBER style restricts input to the edit control to digits only. The ES_NOHIDESEL style specifies that the selected text is not hidden when the edit control loses the keyboard focus. The ES_READONLY style makes the edit control read-only. The ES_PASSWORD style displays all characters in the edit control as asterisks. (An application can define a different character to display by using the <a href="editcon_799u.htm">EM_SETPASSWORDCHAR</a> message, as described later in this topic.) In multiline edit controls, an application can specify the ES_WANTRETURN style to request that the system insert a carriage return when the user presses the enter key in the edit control. </p>
<p>
By default, an edit control has no border. To give it one, an application can use the WS_BORDER window style. </p>
<p>&nbsp;</p></body>
</HTML>
