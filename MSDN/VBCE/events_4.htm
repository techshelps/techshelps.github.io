<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Change</title>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="_vbce_change"></a>Change</h2>
<p>
Indicates the contents of a control have changed. How and when this event occurs varies with the control:
<ul>
<li>
<b>ComboBox</b> — changes the text in the text box portion of the control. Occurs only if the <b>Style</b> property is set to 0 (Dropdown Combo) or 1 (Simple Combo) and the user changes the text or you change the <b>Text</b> property setting through code.</li>
<li>
<b>HScrollBar</b> and <b>VScrollBar </b>(horizontal and vertical scroll bars) — move the scroll box portion of the scroll bar. Occurs when the user scrolls or when you change the <b>Value</b> property setting through code.</li>
<li>
<b>Label</b> — changes the contents of the <b>Label</b>. Occurs when a DDE link updates data or when you change the <b>Caption</b> property setting through code.</li>
<li>
<b>TextBox</b> — changes the contents of the text box. Occurs when a DDE link updates data, when a user changes the text, or when you change the <b>Text</b> property setting through code.</li>
<li>
<b>Slider</b> — generated when the <b>Value</b> property changes, either through code, or when the user moves the control's slider.</li>
<li>
<b>Toolbar</b> — generated after the end user customizes a <b>Toolbar</b> control's toolbar using the <b>Customize</b> <b>Toolbar</b> dialog box.</li>
</ul>
<h4>Syntax</h4>
<p>
Private Sub <i>object</i>.<b>Change</b>(<i>[index])</i></p>
<p>
The <b>Change</b> event syntax has these parts:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Part</th>
<th align=left width=52%>Description</th>
</tr>
<tr valign=top>
<td width=48%><i>object</i></td>
<td width=52%>An object expression that evaluates to an object.</td>
</tr>
<tr valign=top>
<td width=48%><i>index</i></td>
<td width=52%>An integer that uniquely identifies a control.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
The <b>Change</b> event procedure can synchronize or coordinate data display among controls. For example, you can use a scroll bar's <b>Change</b> event procedure to update the scroll bar's <b>Value</b> property setting in a <b>TextBox</b> control. Or you can use a <b>Change</b> event procedure to display data and formulas in a work area and results in another area.</p>
<p>
<b>Note</b>  A <b>Change</b> event procedure can sometimes cause a cascading event. This occurs when the control's <b>Change</b> event alters the control's contents, for example, by setting a property in code that determines the control's value, such as the <b>Text</b> property setting for a <b>TextBox</b> control. To prevent a cascading event:</p>
<ul>
<li>
If possible, avoid writing a <b>Change</b> event procedure for a control that alters that control's contents. If you do write such a procedure, be sure to set a flag that prevents further changes while the current change is in progress.</li>
<li>
Avoid creating two or more controls whose <b>Change</b> event procedures affect each other, for example, two <b>TextBox </b>controls that update each other during their <b>Change</b> events.</li>
<li>
Avoid using a <b>MsgBox</b> function or statement in this event for <b>HScrollBar</b> and <b>VScrollBar</b> controls.</li>
</ul>
<p>&nbsp;</p></body>
</HTML>
