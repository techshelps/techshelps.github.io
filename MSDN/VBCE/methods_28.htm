<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Get</title>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="_vbce_get"></a>Get</h2>
<p>
Reads data from an open disk file into a variable. </p>
<h4>Syntax</h4>
<p>
<i>file</i>.<b>Get </b><i>Data</i> ,<i> [Recnumber]</i></p>
<p>
The parts of the <b>Get</b> statement syntax are described in the following table. </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Part</th>
<th align=left width=52%>Description</th>
</tr>
<tr valign=top>
<td width=48%><i>Data</i></td>
<td width=52%>Required. Variant variable into which data is read.</td>
</tr>
<tr valign=top>
<td width=48%><i>Recnumber</i></td>
<td width=52%>Optional. Variant (Long). Record number (Random mode files) or byte number (Binary mode files) at which reading begins.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
Data read with <b>Get</b> is usually written to a file with <b>Put</b>.</p>
<p>
The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on. If you omit <i>Recnumber</i>, the next record or byte following the last <b>Get</b> or <b>Put</b> statement (or pointed to by the last <b>Seek</b> function) is read.</p>
<p>
For files opened in Random mode, the following rules apply:
<ul>
<li>
If the length of the data being read is less than the length specified in the Len clause of the Open statement, <b>Get</b> reads subsequent records on record-length boundaries. The space between the end of one record and the beginning of the next record is padded with the existing contents of the file buffer. Because the amount of padding data cannot be determined with any certainty, it is generally a good idea to have the record length match the length of the data being read.</li>
<li>
If the variable being read into is a Variant of numeric type, <b>Get</b> reads 2 bytes identifying the VarType of the Variant and then the data that goes into the variable. For example, when reading a Variant of VarType 3, <b>Get</b> reads 6 bytes: 2 bytes identifying the Variant as VarType 3 (Long) and 4 bytes containing the Long data. The record length specified by the Len clause in the Open statement must be at least 2 bytes greater than the actual number of bytes required to store the variable.</li>
<li>
You can use the <b>Get</b> statement to read a Variant array from disk, but you cannot use <b>Get</b> to read a scalar Variant containing an array. You also cannot use <b>Get</b> to read objects from disk.</li>
<li>
If the variable being read into is a Variant of VarType 8 (String), <b>Get</b> reads 2 bytes identifying the VarType, 2 bytes indicating the length of the string, and then reads the string data. The record length specified by the Len clause in the Open statement must be at least 4 bytes greater than the actual length of the string.</li>
<li>
If the variable being read into is a dynamic array, <b>Get</b> reads a descriptor whose length equals 2 plus 8 times the number of dimensions, that is, 2 + 8 * NumberOfDimensions. The record length specified by the Len clause in the Open statement must be greater than or equal to the sum of all the bytes required to read the array data and the array descriptor. </li>
<li>
For files opened in Binary mode, all of the Random rules apply, except:<ul>
<li>
The Len clause in the Open statement has no effect. <b>Get</b> reads all variables from disk contiguously; that is, with no padding between records.</li>
</ul>
</li>
</ul>
<p>&nbsp;</p></body>
</HTML>
