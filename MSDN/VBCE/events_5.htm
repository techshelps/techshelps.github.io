<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Click</title>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="_vbce_click"></a>Click</h2>
<p>
Occurs when the user presses and then releases a mouse button over an object. It can also occur when the value of a control is changed.</p>
<p>
For a <b>Form</b> object, this event occurs when the user clicks either a blank area or a disabled control. For a control, this event occurs when the user:
<ul>
<li>
Clicks a control with the left or right mouse button. With a <b>CheckBox</b>, <b>CommandButton</b>, <b>Listbox</b>, or <b>OptionButton</b> control, the <b>Click</b> event occurs only when the user clicks the left mouse button.</li>
<li>
Selects an item in a <b>ComboBox</b> or <b>ListBox </b>control, either by pressing the arrow keys or by clicking the mouse button.</li>
<li>
Presses the SPACEBAR when a <b>CommandButton</b>, <b>OptionButton</b>, or <b>CheckBox </b>control has the focus.</li>
<li>
Presses ENTER when a form has a <b>CommandButton </b>control with its <b>Default</b> property set to <b>True</b>.</li>
<li>
Presses ESC when a form has a <b>Cancel</b> button — a <b>CommandButton</b> control with its <b>Cancel</b> property set to <b>True</b>.</li>
<li>
Presses an access key for a control. For example, if the caption of a <b>CommandButton</b> control is "&amp;Go", pressing ALT+G triggers the event.</li>
</ul>
<p>
You can also trigger the <b>Click</b> event in code by:
<ul>
<li>
Setting a <b>CommandButton</b> control's <b>Value</b> property to <b>True</b>.</li>
<li>
Setting an <b>OptionButton</b> control's <b>Value</b> property to <b>True</b>.</li>
<li>
Changing a <b>CheckBox</b> control's <b>Value</b> property setting.</li>
</ul>
<h4>Syntax</h4>
<p>
<i>Private Sub Form</i>_<b>Click</b>( )</p>
<p>
<i>Private Sub object</i>_<b>Click</b>(<i>[index]</i>)</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Part</th>
<th align=left width=52%>Description</th>
</tr>
<tr valign=top>
<td width=48%><i>object</i></td>
<td width=52%>An object expression that evaluates to an object.</td>
</tr>
<tr valign=top>
<td width=48%><i>index</i></td>
<td width=52%>An integer that uniquely identifies a control.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
Typically, you attach a <b>Click</b> event procedure to a <b>CommandButton</b> control, <b>Menu</b> object, or a <b>PictureBox</b> control to carry out commands and command-like actions. For the other applicable controls, use this event to trigger actions in response to a change in the control.</p>
<p>
You can use a control's <b>Value</b> property to test the state of the control from code. Clicking a control generates <b>MouseDown</b> and <b>MouseUp</b> events in addition to the <b>Click</b> event. The order in which these three events occur varies from control to control. </p>
<p>
For example, for <b>ListBox</b> and <b>CommandButton</b> controls, the events occur in this order: </p>
<p class=indent1>
<b>MouseDown</b>, <b>Click</b>, <b>MouseUp</b>. </p>
<p>
But for <b>Label</b>, or <b>PictureBox</b> controls, the events occur in this order: </p>
<p class=indent1>
<b>MouseDown</b>, <b>MouseUp</b>, <b>Click</b>. </p>
<p>
When you are attaching event procedures for these related events, be sure that their actions do not conflict. If the order of events is important in your application, test the control to determine the event order.</p>
<p>
If there is code in the <b>Click</b> event, the <b>DlbClick</b> event will never trigger, because the <b>Click</b> event is the first event to trigger between the two. As a result, the mouse click is intercepted by the <b>Click</b> event, so the <b>DblClick</b> event does not occur.</p>
<p>&nbsp;</p></body>
</HTML>
