<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Style</title>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="_vbce_style"></a>Style</h2>
<p>
Returns or sets a value indicating the display type and behavior of the control. Read-only at run time.</p>
<h4>Syntax</h4>
<p>
<i>object</i>.<b>Style</b></p>
<p>
The <i>object</i> placeholder represents an object expression that evaluates to an object.</p>
<h4>Settings</h4>
<p>
The <b>Style </b>property settings for the <b>Checkbox</b>, <b>CommandButton</b>, and <b>OptionButton</b> controls are described in the following table.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=47%>Value</th>
<th align=left width=53%>Description</th>
</tr>
<tr valign=top>
<td width=47%>0</td>
<td width=53%>(Default) Standard. The control displays as it did in previous versions of Visual Basic. That is, a <b>Checkbox</b> control displays as a checkbox with a label next to it, an <b>OptionButton </b>as an option button with a label next to it, and a <b>CommandButton </b>as a standard <b>CommandButton </b>without an associated graphic.</td>
</tr>
<tr valign=top>
<td width=47%>1</td>
<td width=53%>Graphical. The control displays in a graphical style. That is, a <b>Checkbox</b> control displays as a <b>CommandButton</b>-like button which can be toggled either up or down, an <b>OptionButton </b>displays as a <b>CommandButton</b>-like button which remains toggled up or down until another <b>OptionButton</b> in its option group is selected, and a <b>CommandButton </b>displays as a standard <b>CommandButton </b>that can also display an associated graphic.</td>
</tr>
</table><br>
<p>
The <b>Style </b>property settings for the <b>ComboBox</b> control are described in the following table. </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=47%>Value</th>
<th align=left width=53%>Description</th>
</tr>
<tr valign=top>
<td width=47%>0</td>
<td width=53%>(Default). Dropdown Combo. Includes a drop-down list and a text box. The user can select from the list or type in the text box.</td>
</tr>
<tr valign=top>
<td width=47%>1</td>
<td width=53%>Simple Combo. Includes a text box and a list, which does not drop down. The user can select from the list or type in the text box. The size of a Simple combo box includes both the edit and list portions. By default, a Simple combo box is sized so that none of the list is displayed. Increase the <b>Height</b> property to display more of the list.</td>
</tr>
<tr valign=top>
<td width=47%>2</td>
<td width=53%>Dropdown List. This style allows selection only from the drop-down list.</td>
</tr>
</table><br>
<p>
The <b>Style </b>property setting for the <b>ListBox</b> control is described in the following table. </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=47%>Value</th>
<th align=left width=53%>Description</th>
</tr>
<tr valign=top>
<td width=47%>0</td>
<td width=53%>(Default) Standard. The <b>ListBox</b> control displays as it did in previous versions of Visual Basic, as a list of text items.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
For the <b>ComboBox</b> control, follow these guidelines in deciding which setting to choose:
<ul>
<li>
Use setting 0 (Dropdown Combo) or setting 1 (Simple Combo) to give the user a list of choices. Either style enables the user to enter a choice in the text box. Setting 0 saves space on the form because the list portion closes when the user selects an item.</li>
<li>
Use setting 2 (Dropdown List) to display a fixed list of choices from which the user can select one. The list portion closes when the user selects an item.</li>
</ul>
<p>&nbsp;</p></body>
</HTML>
