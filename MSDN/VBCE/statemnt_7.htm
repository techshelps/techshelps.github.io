<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>For...Next</title>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="_vbce_vbs_for...next"></a>For...Next</h2>
<p>
Repeats a group of statements a specified number of times.</p>
<h4>Syntax</h4>
<p>
<b>For</b> <i>counter</i> <b>=</b> <i>start</i> <b>To</b> <i>end</i> [<b>Step</b> <i>step</i>]<br>
    [<i>statements</i>]<br>
    [<b>Exit For</b>]<br>
    [<i>statements</i>]<br>
<b>Next</b></p>
<p>
The <b>For...Next</b> statement syntax has these parts:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Part</th>
<th align=left width=52%>Description</th>
</tr>
<tr valign=top>
<td width=48%>counter</td>
<td width=52%>Numeric variable used as a loop counter. The variable can't be an array element or an element of a user-defined type.</td>
</tr>
<tr valign=top>
<td width=48%>start</td>
<td width=52%>Initial value of <i>counter</i>.</td>
</tr>
<tr valign=top>
<td width=48%>end</td>
<td width=52%>Final value of <i>counter</i>.</td>
</tr>
<tr valign=top>
<td width=48%>step</td>
<td width=52%>Amount <i>counter</i> is changed each time through the loop. If not specified, <i>step</i> defaults to one.</td>
</tr>
<tr valign=top>
<td width=48%>statements</td>
<td width=52%>One or more statements between <b>For</b> and <b>Next</b> that are executed the specified number of times.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
The <i>step</i> argument can be either positive or negative. The value of the <i>step</i> argument determines loop processing as follows:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Value</th>
<th align=left width=52%>Loop executes if</th>
</tr>
<tr valign=top>
<td width=48%>Positive or 0</td>
<td width=52%><i>counter &lt;= end</i></td>
</tr>
<tr valign=top>
<td width=48%>Negative</td>
<td width=52%><i>counter &gt;= end</i></td>
</tr>
</table><br>
<p>
Once the loop starts and all statements in the loop have executed, <i>step</i> is added to <i>counter</i>. At this point, either the statements in the loop execute again (based on the same test that caused the loop to execute initially), or the loop is exited and execution continues with the statement following the <b>Next</b> statement. Changing the value of <i>counter</i> while inside a loop can make it more difficult to read and debug your code.</p>
<p>
<b>Exit For</b> can only be used within a <b>For Each...Next</b> or <b>For...Next</b> control structure to provide an alternate way to exit. Any number of <b>Exit For</b> statements may be placed anywhere in the loop. <b>Exit For </b>is often used with the evaluation of some condition (for example, <b>If...Then</b>), and transfers control to the statement immediately following <b>Next</b>.</p>
<p>
You can nest <b>For...Next</b> loops by placing one <b>For...Next</b> loop within another. Give each loop a unique variable name as its <i>counter</i>. The following construction is correct: </p>
<pre><code>For I = 1 To 10
    For J = 1 To 10
        For K = 1 To 10
        . . .
        Next
    Next
Next
</code></pre>
<p>
<b>Note</b>  Optional counters on the next statement aren't supported: Next I will generate a compile-time error.</p>
<p>&nbsp;</p></body>
</HTML>
