<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Const</title>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="_vbce_vbs_const"></a>Const</h2>
<p>
Declares constants for use in place of literal values. </p>
<h4>Syntax</h4>
<p>
[<b>Public</b> | <b>Private</b>]<b> Const</b> <i>constname</i> = <i>expression</i></p>
<p>
The <b>Const</b> statement syntax has these parts:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Part</th>
<th align=left width=52%>Description</th>
</tr>
<tr valign=top>
<td width=48%><b>Public</b></td>
<td width=52%>Optional. Keyword used at module level to declare constants that are available to all procedures in all modules. Not allowed in procedures.</td>
</tr>
<tr valign=top>
<td width=48%><b>Private</b></td>
<td width=52%>Optional. Keyword used at module level to declare constants that are available only within the module where the declaration is made. Not allowed in procedures.</td>
</tr>
<tr valign=top>
<td width=48%><i>constname</i></td>
<td width=52%>Required. Name of the constant; follows standard variable naming conventions.</td>
</tr>
<tr valign=top>
<td width=48%><i>expression</i></td>
<td width=52%>Required. Literal or other constant, or any combination that includes all arithmetic or logical operators except <b>Is</b>.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
Constants are public by default. Within procedures, constants are always private; their visibility can't be changed. Within a module, the default visibility of a module -level constant can be changed using the <b>Private</b> keyword.</p>
<p>
To combine several constant declarations on the same line, separate each constant assignment with a comma. When constant declarations are combined in this way, the <b>Public</b> or<b> Private</b> keyword, if used, applies to all of them.</p>
<p>
You can't use variables, user-defined functions, or intrinsic Visual Basic for Windows CE run-time functions (such as <b>Chr</b>) in constant declarations. By definition, they can't be constants. You also can't create a constant from any expression that involves an operator, that is, only simple constants are allowed. Constants declared in a <b>Sub</b> or <b>Function</b> procedure are local to that procedure. A constant declared outside a procedure is defined throughout the module in which it is declared. You can use constants anywhere you can use an expression. </p>
<p>
<b>Note</b>  Constants can make your code self-documenting and easy to modify. Unlike variables, constants can't be inadvertently changed while your program is running.</p>
<p>&nbsp;</p></body>
</HTML>
