<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Call Stack Window</title>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="_vbce_call_stack_window"></a>Call Stack Window</h2>
<p>
The <b>Call Stack</b> window shows a list of all active procedure calls. <i>Active procedure calls </i>are the procedures in the application that were started but not completed. </p>
<p>
The <b>Call Stack</b> window helps you trace the operation of an application as it executes a series of nested procedures. For example, an event procedure can call a second procedure, which can call a third procedure—all before the event procedure that started this chain is completed. Such nested procedure calls can be difficult to follow and can complicate the debugging process. </p>
<p>
The <b>Call Stack</b> window is not available when the application is running. When executing code in a procedure, that procedure is added to a list of active procedure calls. Each time a procedure calls another procedure, the called procedure is added to the list. Called procedures are removed from the list when execution returns to the calling procedure.</p>
<p>
The red color indicates the currently active procedure. Double-click a procedure down the Call Stack to see the place in code where the procedure above it was called.</p>
<p>
<img src="callstw.gif" border=0></p>
<p>
<b>Toolbar button </b></p>
<p>&nbsp;</p></body>
</HTML>
