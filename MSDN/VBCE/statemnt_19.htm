<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Set</title>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="_vbce_vbs_set"></a>Set</h2>
<p>
Assigns an object reference to a variable or property.</p>
<h4>Syntax</h4>
<p>
<b>Set</b> <i>objectvar</i> <b>=</b> {<i>objectexpression</i> | <b>Nothing</b>} </p>
<p>
The <b>Set</b> statement syntax has these parts:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Part</th>
<th align=left width=52%>Description</th>
</tr>
<tr valign=top>
<td width=48%><i>objectvar</i></td>
<td width=52%>Name of the variable or property; follows standard variable naming conventions.</td>
</tr>
<tr valign=top>
<td width=48%><i>objectexpression</i></td>
<td width=52%>Expression consisting of the name of an object, another declared variable of the same object type, or a function or method that returns an object of the same object type.</td>
</tr>
<tr valign=top>
<td width=48%><b>Nothing</b></td>
<td width=52%>Discontinues association of <i>objectvar</i> with any specific object. Assigning <i>objectvar</i> to <b>Nothing</b> releases all the system and memory resources associated with the previously referenced object when no other variable refers to it.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
To be valid, <i>objectvar</i> must be an object type consistent with the object being assigned to it.</p>
<p>
The <b>Dim</b>, <b>Private</b>, <b>Public</b>, or <b>ReDim</b> statements only declare a variable that refers to an object. No actual object is referred to until you use the <b>Set</b> statement to assign a specific object.</p>
<p>
Generally, when you use <b>Set</b> to assign an object reference to a variable, no copy of the object is created for that variable. Instead, a reference to the object is created. More than one object variable can refer to the same object. Because these variables are references to (rather than copies of) the object, any change in the object is reflected in all variables that refer to it.</p>
<p>&nbsp;</p></body>
</HTML>
