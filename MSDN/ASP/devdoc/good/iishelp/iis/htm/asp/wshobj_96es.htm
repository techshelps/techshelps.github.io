<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Writing a Scripting Engine for Windows Scripting Host</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_wsh_writing_a_scripting_engine_for_windows_scripting_host"></a>Writing a Scripting Engine for Windows Scripting Host</h2>
<p>
The principal requirement for a third-party scripting engine is that it support the ActiveX™ <b>IActiveScriptParse</b> COM interface.</p>
<p>
The Windows Scripting Host reads and passes the contents of a specified script file to a registered scripting engine using the scripting engine's <b>IActiveScriptParse::ParseScriptText</b> method.</p>
<p>
A scripting engine can also call Wshom.ocx, an ActiveX control that supports the <b>IDispatch</b> COM interface. If the scripting engine supports ActiveX control creation in a script, Wshom.ocx can be called from within the script.</p>
<p>
If the scripting engine itself calls Wshom.ocx, you should obtain Iwshom.idl, Iwshom.h and Iwshom.iid from the Platform SDK. With these files, you can call methods in Wshom.ocx using the normal COM calling sequence. Wshom.ocx supports a dual interface, aggregation, and the <b>IErrorInfo</b> COM interface.</p>
<h4>Example</h4>
<pre><code>#include &lt;IWSHom.h&gt;

HRESULT
Use_WSHShell() {
    HRESULT hr;
    IWSHShell* pShell;

    hr = ::CoCreateInstance(CLSID_IWSHShell,
                       NULL,
                       CTX_INPROCSERVER,
                       IID_IWSHShell,
                       (LPVOID*) &amp;pShell );
    if (FAILED(hr)) return hr;

    hr = pShell-&gt;Run(bstrCommand,
 &amp;varWindowStyle,
 &amp;varWaitOnReturn,
               &amp;nExitCode );
    pShell-&gt;Release();

    return hr;
}
</code></pre>
<p>&nbsp;</p></body>
</HTML>
