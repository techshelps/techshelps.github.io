<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Add Method (CDONTS Messages Collection)</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_denali_add_method_cdonts_messages_collection_"></a>Add Method (CDONTS Messages Collection)  <a href="amsmtp_6f1b.htm"><img src="../../../../../images/group.gif" border=0></a></h3>
<p>
The <b>Add</b> method creates and returns a new <a href="amsmtp_3odb.htm">Message</a> object in the Messages collection. </p>
<h4>Syntax </h4>
<pre><code><b>Set </b><i>objMessage = collMessages</i>.<b>Add( [</b><i>subject</i><b>] [</b><i>, text</i><b>] [</b><i>, importance</i><b>] ) </b>
 </code></pre>
<dl>
<dt>
<i>objMessage </i></dt>
<dd>
On successful return, represents the new Message object added to the collection. </dd>
<dt>
<i>collMessages </i></dt>
<dd>
Required. The Messages collection object. </dd>
<dt>
<i>subject </i></dt>
<dd>
Optional. String. The subject line for the message. </dd>
<dt>
<i>text </i></dt>
<dd>
Optional. <b>IStream</b> object or String. The text of the message. </dd>
<dt>
<i>importance </i></dt>
<dd>
Optional. Long. The importance associated with the message. 
</dd>
</dl>
<h4>Remarks </h4>
<p>
The <i>subject</i>, <i>text</i>, and <i>importance</i> parameters correspond to the <a href="amsmtp_1333.htm"><b>Subject</b></a>, <a href="amsmtp_96jj.htm"><b>Text</b></a>, and <a href="amsmtp_323j.htm"><b>Importance</b></a> properties on the <a href="amsmtp_3odb.htm">Message</a> object. </p>
<p>
You must create all new messages in the Outbox folder. </p>
<p>
Only C/C++ and Java programs can use an <b>IStream</b> object for the <i>text</i> parameter. They should pass an <b>IUnknown</b> object that returns an <b>IStream</b> interface in response to <b>QueryInterface</b>. Microsoft® Visual Basic® supports the <b>IDispatch</b> interface and not <b>IUnknown</b>, so it cannot use an <b>IStream</b> object. </p>
<h4>Example </h4>
<p>
This code fragment replies to an original message: </p>
<pre><code>' from the sample function Util_ReplyToConversation 
Set objOutbox = objSession.GetDefaultFolder(CdoDefaultFolderOutbox) 
Set objNewMsg = objOutbox.Messages.Add 
' verify objNewMsg created successfully ... then supply properties 
Set objSenderAE = objOriginalMsg.Sender ' sender as AddressEntry 
With objNewMsg 
&nbsp;  .Text = "Here is a reply to your message." ' new text 
&nbsp;  .Subject = objOriginalMsg.Subject ' copy original properties 
&nbsp;  Set objRecip = .Recipients.Add(name:=objsenderAE.Name, _ 
&nbsp;               type:=CdoTo, _ 
&nbsp;               address:=objSenderAE.Type &amp; ":" &amp; objSenderAE.Address) 
&nbsp;  ' ** the preceding line is not strictly necessary with CDO for NTS, 
&nbsp;  ' ** but it allows this code to run with CDO for Exchange, where 
&nbsp;  ' ** Recipient.Address requires a FULL address concatenated from 
&nbsp;  ' ** AddressEntry.Type, ":", and AddressEntry.Address 
&nbsp;  .Send 
End With 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
