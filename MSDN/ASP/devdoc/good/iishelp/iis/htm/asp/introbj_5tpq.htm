<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Abandon</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_abandon"></a>Abandon</h1>
<p>
The <b>Abandon</b> method destroys all the objects stored in a <b>Session</b> object and releases their resources. If you do not call the <b>Abandon</b> method explicitly, the server destroys these objects when the session times out.</p>
<h4>Syntax</h4>
<pre><b><code>Session.Abandon
 </code></b></pre>
<h4>Remarks</h4>
<p>
When the <b>Abandon</b> method is called, the current <b>Session</b> object is queued for deletion, but is not actually deleted until all of the script commands on the current page have been processed. This means that you can access variables stored in the <b>Session </b>object on the same page as the call to <b>Abandon</b>, but not in any subsequent Web pages.</p>
<p>
For example, in the following script, the third line prints the value <code>Mary</code>. This is because the <b>Session</b> object is not destroyed until the server has finished processing the script. </p>
<pre><code>&lt;%
Session.Abandon 
Session("MyName") = "Mary"
Reponse.Write(Session("MyName"))
%&gt;
 </code></pre>
<p>
If you access the variable <code>MyName</code> on a subsequent Web page, it is empty. This is because <code>MyName</code> was destroyed with previous <b>Session</b> object when the page containing the above example finished processing. </p>
<p>
The server creates a new <b>Session</b> object when you open a subsequent Web page after abandoning a session. You can store variables and objects in this new <b>Session</b> object. </p>
<h4>Examples</h4>
<p>
The following example causes the session state to be released when the server finishes processing the current page.</p>
<pre><code>&lt;% Session.Abandon %&gt;
 </code></pre>
<h4>Applies To</h4>
<p>
<a href="introbj_12d0.htm"><b>Session Object</b></a> </p>
<h4>See Also</h4>
<p>
<a href="introbj_04vo.htm"><b>Timeout</b></a> </p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
