<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BinaryRead</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_binaryread"></a>BinaryRead</h1>
<p>
The <b>BinaryRead</b> method retrieves data sent to the server from the client as part of a POST request. This method retrieves the data from the client and stores it in a <b>SafeArray</b>. A <b>SafeArray</b> is an array that contains information about the number of dimensions and the bounds of its dimensions. </p>
<h4>Syntax</h4>
<pre><code><i>variant</i> = <b>Request.BinaryRead</b>(<i>count</i>)
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>variant</i></dt>
<dd>
Contains an array of unsigned bytes returned by this method. This parameter will be of type VT_ARRAY | VT_UI1. </dd>
<dt>
<i>count</i></dt>
<dd>
Before execution, specifies how many bytes to read from the client. After this method returns, <i>count</i> will contain the number of bytes successfully read from the client. The total number of bytes that will actually be read is less than or equal to <b>Request.TotalBytes</b>.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>BinaryRead</b> method is used to read the raw data sent by the client as part of a POST request. This method is used for low-level access to this data, as opposed to, for example, using the <b>Request.Form</b> collection to view form data sent in a POST request. Once you have called <b>BinaryRead</b>, referring to any variable in the <b>Request.Form</b> collection will cause an error. Conversely, once you have referred to a variable in the <b>Request.Form</b> collection, calling <b>BinaryWrite</b> will cause an error. Remember, if you access a variable in the <b>Request </b>collection without specifying which subcollection it belongs to, the <b>Request.Form</b> collection may be searched, bringing this rule into force.</p>
<h4>Example</h4>
<p>
The following example uses the <b>BinaryRead</b> method to place the content of a request into a safe array.</p>
<pre><code>&lt;%
Dim binread
Dim bytecount 
bytecount = Request.TotalBytes
binread = Request.BinaryRead(bytecount)
%&gt;
 </code></pre>
<h4>Applies To</h4>
<p>
<a href="introbj_5ulw.htm"><b>Request Object</b></a> </p>
<h4>See Also</h4>
<p>
<a href="introbj_1whf.htm"><b>TotalBytes</b></a>, <a href="introbj_8q5h.htm"><b>ClientCertificate</b></a>, <a href="introbj_0z3o.htm"><b>Cookies</b></a>, <a href="introbj_4fl9.htm"><b>Form</b></a>, <a href="introbj_53hj.htm"><b>QueryString</b></a>, <a href="introbj_5vsj.htm"><b>ServerVariables</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
