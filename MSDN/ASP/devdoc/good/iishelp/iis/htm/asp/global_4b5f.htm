<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TypeLibrary Declarations</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_typelibrary_declarations"></a>TypeLibrary Declarations</h1>
<p>
It is very common for ActiveX components to describe any constants that the component supports in a type library. A type library is a file that contains information about objects and types supported by an ActiveX component. If your Web application relies on ActiveX objects that have declared data types in type libraries, you can declare the type libraries in Global.asa. Doing so will make it possible to refer to the data types declared in the type libraries from any script within the application boundary.</p>
<p>
For more information about using constants in ASP, see <a href="../../../iis/htm/asp/iiwavar.htm"><b>Using Variables and Constants</b></a> </p>
<h4>Syntax</h4>
<pre><code>&lt;!--<b>METADATA TYPE</b>="TypeLib"
<b>FILE</b>="<i>file</i>"
<b>UUID</b>="<i>typelibraryuuid</i>"
<b>VERSION</b>="<i>majorversionnumber.minorversionnumber"</i>
<b>LCID</b>="<i>localeid</i>"
--&gt;</code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>file</i></dt>
<dd>
Absolute path to a type library. If this parameter and the <i>typelibraryuuid </i>parameter<i> </i>are provided, <i>file</i> is used to identify the type library. Either the <i>file</i> parameter or the <i>typelibraryuuid</i> parameter is required.</dd>
<dt>
<i>typelibraryuuid</i></dt>
<dd>
Universally unique identifer for the type library. Either the <i>file</i> parameter or the <i>typelibraryuuid</i> parameter is required.</dd>
<dt>
<i>majorversionnumber</i></dt>
<dd>
Used for selecting version. If the requested version is not found, then an error is returned (optional).</dd>
<dt>
<i>minorversionnumber</i></dt>
<dd>
Used for selecting version. If the requested version is not found, then an error is returned (optional).</dd>
<dt>
<i>localeid</i></dt>
<dd>
The locale identifier to be used for the type library. If the requested locale is not found, then an error is returned (optional)</dd>
</dl>
<h4>Error Values</h4>
<p>
The server can return one of the following error messages.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=31%>Error</th>
<th align=left width=69%>Description</th>
</tr>
<tr valign=top>
<td width=31%>ASP 0222</td>
<td width=69%>Invalid type library specification. The METADATA tag contains an invalid type library specification.</td>
</tr>
<tr valign=top>
<td width=31%>ASP 0223</td>
<td width=69%>Type library not found. The METADATA tag contains a type library specification that does not match any registry entry.</td>
</tr>
<tr valign=top>
<td width=31%>ASP 0224</td>
<td width=69%>Type library cannot be loaded. ASP cannot load the type library specified in the METADATA tag.</td>
</tr>
<tr valign=top>
<td width=31%>ASP 0225</td>
<td width=69%>Type library cannot be wrapped. ASP cannot create a <b>Type Library Wrapper</b> object from the type libraries specified in the METADATA tag.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
It is recommended that METADATA tags appear near the top of the Global.asa file. However, these tags can appear anywhere inside of the Global.asa file, including both inside and outside the SCRIPT tags.</p>
<p>
You can avoid ambiguous references to constants by adding the type library name as a prefix for the constant. For example, <b>ADODB.adErrItemNotFound</b> would be less ambiguous than <b>adErrItemNotFound</b>.</p>
<p>
If you use Microsoft Visual InterDev to create your global.asa file, the METADATA tags will include the optional STARTSPAN and ENDSPAN keywords. These keywords are ignored by IIS. </p>
<h4>Example</h4>
<p>
<code>MyComponent</code> in the following example was developed with Visual Basic 5.0. <code>MyComponent</code> defines the constant <code>MyError</code> with the following statement.</p>
<pre><code>Public Const MyError = "You are not using MyComponent correctly."
</code></pre>
<p>
The type library is contained in mycomponent.lib, which you have installed in the following directory.</p>
<pre><code>C:\MyComponent
</code></pre>
<p>
The following METADATA tag is included in the global.asa file for the MyApp application. This example uses the optional STARTSPAN and ENDSPAN tags. These tags are not required by IIS.</p>
<pre><code>&lt;!--METADATA TYPE="TypeLib"
FILE="<i>MyComponent.lib</i>"
--&gt;
 </code></pre>
<p>
Any ASP in the MyApp application can now include the following script:</p>
<pre><code>&lt;%
    Dim MyVar
    Set MyVar = Server.CreateObject("MyComponent.MyClass")
    Currentreturn = MyVar.MyMethod
    If Currentreturn = False
       Response.Write(MyError)
    End If
%&gt;
</code></pre>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
