<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using .WSH Files to Run Scripts</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_wsh_using_.wsh_files_to_run_scripts"></a>Using .WSH Files to Run Scripts</h2>
<p>
A .wsh file is analagous to the .pif files used to run older 16-bit applications. The .wsh file can be treated as if it were an executable or batch file.</p>
<p>
For example, suppose you have a script named Myscript.vbs for which you have created a .wsh file named Myscript.wsh. To run Myscript.vbs with the options recorded in Myscript.wsh, you can double-click Myscript.wsh in Windows Explorer. You can also pass Myscript.wsh as a script argument to CScript.exe or WScript.exe by typing the following in the Command Prompt window:</p>
<pre><code>cscript Myscript.wsh
</code></pre>
<p>
Administrators in particular will find .wsh files useful. By creating multiple different .wsh files for a given script, an administrator can tailor the way that script runs to the needs of specific groups or even individuals within an organization.</p>
<p>
The same logon script, for example, might serve two very different groups if invoked by two different .wsh files containing different settings and parameters.</p>
<p>&nbsp;</p></body>
</HTML>
