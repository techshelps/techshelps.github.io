<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Delete Method (CDONTS Attachment Object)</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_denali_delete_method_cdonts_attachment_object_"></a>Delete Method (CDONTS Attachment Object)  <a href="amsmtp_8hpb.htm"><img src="../../../../../images/group.gif" border=0></a></h3>
<p>
The <b>Delete</b> method removes the Attachment object from the <a href="amsmtp_18db.htm">Attachments</a> collection. </p>
<h4>Syntax </h4>
<pre><code><i>objAttach</i>.<b>Delete( ) </b>
 </code></pre>
<h4>Remarks </h4>
<p>
The <b>Delete</b> method performs an irreversible operation on the collection. It calls <b>Release</b> on the collection's reference to the Attachment object. If you have another reference to the attachment, you can still access its properties and methods, but you can never again associate it with any collection because the <a href="amsmtp_2vhb.htm"><b>Add</b></a> method always creates a new object. You should <b>Set</b> your reference variable either to <b>Nothing</b> or to another attachment. </p>
<p>
The final <b>Release</b> on the Attachment object takes place when you call <b>Delete</b> if you had no other reference, or when you assign your reference variable to <b>Nothing</b>. At this point the object is removed from memory. Attempted access to a released object results in an error return of <b>CdoE_INVALID_OBJECT</b>. </p>
<p>
The effect of the <b>Delete</b> operation is not permanent until you use the <a href="amsmtp_2fhb.htm"><b>Send</b></a> or <a href="amsmtp_4o2n.htm"><b>Delete</b></a> method on the <a href="amsmtp_3odb.htm">Message</a> object to which this attachment belongs. </p>
<p>
The immediate parent of this Attachment object is an <a href="amsmtp_18db.htm">Attachments</a> collection, which is a child of the message. You can delete all the message's attachments by calling the collection's <a href="amsmtp_7avz.htm"><b>Delete</b></a> method. </p>
<p>
The CDO for NTS Library does not permit any modifications to messages in the Inbox, other than deleting the entire message. Prohibited modifications include adding, deleting, or modifying any attachment; adding, deleting, or modifying any recipient; and modifying any message property, even one with read/write access. </p>
<h4>Example </h4>
<p>
This code fragment illustrates the two situations previously explained. The <b>Set</b> statement calls <b>AddRef</b> on the first Attachment object. That reference survives the call to <b>Delete</b> and has to be reassigned. The second Attachment object is deleted without creating another reference, and no other action is necessary. </p>
<pre><code>' assume valid Message object 
Set objAttach = objMessage.Attachments.Item(1) 
objAttach.Delete ' still have a reference from Set statement 
' ... other operations on objAttachment possible but pointless ... 
Set objAttach = Nothing ' necessary to remove reference 
' ... 
objMessage.Attachments.Item(2).Delete ' no reference to remove 
 </code></pre>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
