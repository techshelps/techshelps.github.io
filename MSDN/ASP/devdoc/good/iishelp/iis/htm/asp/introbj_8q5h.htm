<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ClientCertificate</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_clientcertificate"></a>ClientCertificate</h1>
<p>
The <b>ClientCertificate</b> collection retrieves the certification fields (specified in the X.509 standard) from a request issued by the Web browser. </p>
<p>
If a Web browser uses the SSL3.0/PCT1 protocol (in other words, it uses a URL starting with https:// instead of http://) to connect to a server and the server requests certification, the browser sends the certification fields. </p>
<p>
If no certificate is sent, the <b>ClientCertificate</b> collection returns EMPTY.</p>
<p>
Before you can use the <b>ClientCertificate</b> collection, you must configure your Web server to request client certificates.</p>
<h4>Syntax</h4>
<pre><code><b>Request.ClientCertificate(</b> <i>Key</i>[<i>SubField</i>] <b>)</b>
<b> </b></code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>Key</i></dt>
<dd>
Specifies the name of the certification field to retrieve. A client certificate consists of the following fields.
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=22%>Value</th>
<th align=left width=78%>Meaning</th>
</tr>
<tr valign=top>
<td width=22%>Certificate</td>
<td width=78%>A string containing the binary stream of the entire certificate content in ASN.1 format.</td>
</tr>
<tr valign=top>
<td width=22%>Flags</td>
<td width=78%>A set of flags that provide additional client certificate information. The following flags may be set:<p>
<b>ceCertPresent</b> - A client certificate is present.</p>
<p>
<b>ceUnrecognizedIssuer</b> - The last certification in this chain is from an unknown issuer.</p>
<p>
<b>Note</b>&nbsp;&nbsp;To use the preceding flags you must include the client-certificate include file in your ASP page. If you are using VBScript, include cervbs.inc. If you are using JScript, include cerjavas.inc. These files are installed in the \Inetpub\ASPSamp\Samples directory.</p>
</td>
</tr>
<tr valign=top>
<td width=22%>Issuer</td>
<td width=78%>A string that contains a list of subfield values containing information about the issuer of the certificate. If this value is specified without a <i>SubField</i>, the <b>ClientCertificate</b> collection returns a comma-separated list of subfields. For example, C=US, O=Verisign, and so on.</td>
</tr>
<tr valign=top>
<td width=22%>SerialNumber</td>
<td width=78%>A string that contains the certification serial number as an ASCII representation of hexidecimal bytes separated by hyphens (-). For example, 04-67-F3-02.</td>
</tr>
<tr valign=top>
<td width=22%>Subject</td>
<td width=78%>A string that contains a list of subfield values that themselves contain information about the subject of the certificate. If this value is specified without a <i>SubField</i>, the <b>ClientCertificate</b> collection returns a comma-separated list of subfields. For example, C=US, O=Msft, and so on.</td>
</tr>
<tr valign=top>
<td width=22%>ValidFrom</td>
<td width=78%>A date specifying when the certificate becomes valid. This date follows VBScript format and varies with international settings. For example, in the U.S. 9/26/96 11:59:59 <small>pm.</small></td>
</tr>
<tr valign=top>
<td width=22%>ValidUntil</td>
<td width=78%>A date specifying when the certificate expires.</td>
</tr>
</table><br>

</dd>
<dt>
<i>SubField</i></dt>
<dd>
An optional parameter you can use to a retrieve an individual field in either the Subject or Issuer keys. This parameter is added to the <i>Key </i>parameter as a suffix. For example, IssuerO or SubjectCN. The following table lists some common S<i>ubField</i> values. 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=18%>Value</th>
<th align=left width=82%>Meaning</th>
</tr>
<tr valign=top>
<td width=18%>C</td>
<td width=82%>Specifies the name of the country of origin. </td>
</tr>
<tr valign=top>
<td width=18%>CN</td>
<td width=82%>Specifies the common name of the user. (This subfield is only used with the Subject key.)</td>
</tr>
<tr valign=top>
<td width=18%>GN</td>
<td width=82%>Specifies a given name.</td>
</tr>
<tr valign=top>
<td width=18%>I</td>
<td width=82%>Specifies a set of initials.</td>
</tr>
<tr valign=top>
<td width=18%>L</td>
<td width=82%>Specifies a locality.</td>
</tr>
<tr valign=top>
<td width=18%>O</td>
<td width=82%>Specifies the company or organization name. </td>
</tr>
<tr valign=top>
<td width=18%>OU</td>
<td width=82%>Specifies the name of the organizational unit.</td>
</tr>
<tr valign=top>
<td width=18%>S</td>
<td width=82%>Specifies a state or province.</td>
</tr>
<tr valign=top>
<td width=18%>T</td>
<td width=82%>Specifies the title of the person or organization.</td>
</tr>
</table><br>


<p>
<i>SubField </i>values other than those listed in the preceding table can be identified by their ASN.1 identifier. The format of the ASN.1 identifier is a list of numbers separated by a period (.). For example,: 3.56.7886.34.
</dd>
</dl>
<h4>Remarks</h4>
<p>
You can use an iterator to loop through the keys of the <b>ClientCertificate</b> collection. This is demonstrated in the following example.</p>
<pre><code>&lt;%
For Each key in Request.ClientCertificate
  Response.Write( key &amp; ": " &amp; Request.ClientCertificate(key) &amp; "&lt;BR&gt;")
Next
%&gt;
 </code></pre>
<h4>Examples</h4>
<p>
The following example uses the <code>Subject</code> key to test whether a client certificate has been presented.</p>
<pre><code>&lt;%
If Len(Request.ClientCertificate("Subject")) = 0
  Response.Write("No client certificate was presented")
End if
%&gt;
 </code></pre>
<p>
The following example retrieves the common name of the company that issued the client certificate.</p>
<pre><code>&lt;%= Request.ClientCertificate("IssuerCN") %&gt;
 </code></pre>
<p>
The following example checks the organization name of the subject of the client certification.</p>
<pre><code>&lt;% 
If (Request.ClientCertificate("Subject")="Msft")
  Response.Write("Good Choice!")
End if
%&gt;
 </code></pre>
<p>
The following example displays the expiration date of the client certificate.</p>
<pre><code>This certification will expire on 
&lt;%= Request.ClientCertificate("ValidUntil") %&gt;
 </code></pre>
<p>
The following example uses the <code>Flags</code> key to test whether the issuer of the certificate is known. The include statement in the first line enables this script to use the named flag <code>ceUnrecognizedIssuer</code>.</p>
<pre><code>&lt;!--#include file="cervbs.inc" --&gt;
&lt;%
If Request.ClientCertificate("Flags") and ceUnrecognizedIssuer then
  Response.Write "Unrecognized issuer"
End If
%&gt;
 </code></pre>
<h4>Applies To</h4>
<p>
<a href="introbj_5ulw.htm"><b>Request Object</b></a> </p>
<h4>See Also</h4>
<p>
<a href="introbj_0z3o.htm"><b>Cookies</b></a>, <a href="introbj_4fl9.htm"><b>Form</b></a>, <a href="introbj_53hj.htm"><b>QueryString</b></a>, <a href="introbj_5vsj.htm"><b>ServerVariables</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
