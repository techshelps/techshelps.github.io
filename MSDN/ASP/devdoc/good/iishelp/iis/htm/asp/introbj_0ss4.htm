<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CreateObject</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_createobject"></a>CreateObject</h1>
<p>
The <b>CreateObject </b>method creates an instance of a server component. If the component has implemented the <b>OnStartPage</b> and <b>OnEndPage </b>methods, the <b>OnStartPage </b>method is called at this time. For more information about server components, see <a href="compref_275c.htm"><b>Installable Components for ASP</b></a>. </p>
<h4>Syntax</h4>
<pre><code><b>Server.CreateObject(</b> <i>progID</i> <b>)</b>
<b> </b></code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>progID</i></dt>
<dd>
Specifies the type of object to create. The format for <i>progID</i> is [<i>Vendor</i><b>.</b>]<i>Component</i>[<b>.</b><i>Version</i>].
</dd>
</dl>
<h4>Remarks</h4>
<p>
By default, objects created by the <b>Server.CreateObject</b> method have page scope. This means that they are automatically destroyed by the server when it finishes processing the current ASP page. </p>
<p>
To create an object with session or application scope, you can either use the &lt;OBJECT&gt; tag and set the SCOPE attribute to SESSION or APPLICATION, or store the object in a session or application variable. </p>
<p>
For example, an object stored in a session variable, as shown in the following script, is destroyed when the <a href="introbj_12d0.htm"><b>Session</b></a> object is destroyed. That is, when the session times out, or the <a href="introbj_5tpq.htm"><b>Abandon</b></a> method is called.</p>
<pre><code>&lt;% Set Session("ad") = Server.CreateObject("MSWC.AdRotator")%&gt;
 </code></pre>
<p>
You can also destroy the object by setting the variable to <code>Nothing</code> or setting the variable to a new value, as shown below. The first example releases the object <code>ad</code>. The second replaces <code>ad</code> with a string.</p>
<pre><code>&lt;% Session("ad") = Nothing %&gt;
&lt;% Session("ad") = "some other value" %&gt;
 </code></pre>
<p>
You cannot create an object instance with the same name as a built-in object. For example, the following returns an error.</p>
<pre><code>&lt;% Set Response = Server.CreateObject("Response") %&gt; 
 </code></pre>
<h4>Example</h4>
<pre><code>&lt;% Set MyAd = Server.CreateObject("MSWC.AdRotator") %&gt; 
 </code></pre>
<p>
The preceding example creates a server component, <code>MyAd</code>, as a <b>MSWC.AdRotator</b> component that can be used to automate rotation of advertisements on a Web page. </p>
<p>
For more information about server components, see <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_creating_components_for_asp">
</object><a href=JavaScript:alink_1.Click()><b>Creating Components for ASP</b></a>.</p>
<h4>Applies To</h4>
<p>
<a href="introbj_7838.htm"><b>Server Object</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
