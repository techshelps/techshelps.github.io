<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Properties Tab (Collection Builder Dialog Box)</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbdlgcollectionpropertiescollectionbuilderdialog"></a>Properties Tab (Collection Builder Dialog Box)</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbdlgCollectionPropertiesCollectionBuilderDialogC">
</object></p>
<p>
<img src="avhlp029.gif" border=0></p>
<p>
Displays and allows editing of the properties of the collection being added or edited.</p>
<h3>Dialog Box Options</h3>
<p class=dt>
<b>Name</b></p>
<p class=indent>
The name of the collection.</p>
<p class=dt>
<b>Based On</b></p>
<p class=indent>
The collection this collection is to be based on. All existing collections are listed in this list box. If the collection is to be based on an existing collection you select it with this text box. If this collection is based on another collection, all the properties, methods, and events shells are copied from the base collection to this collection; none of the code that has been added to the properties, events and methods shells of the base collection is copied over.</p>
<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;this copying of properties, methods, and events is done only when the collection is created; there is no link maintained between the base collection and this collection, and if the base collection is modified after this collection is created, the modifications will not be reflected in this collection.</p><p class=dt>
<b>Collection Of</b></p>
<p class=indent>
The class this collection is collecting.
<ul type=disc>
<li>
Existing Class — This collection is a collection of an existing class. All existing classes are listed in the list box; the class to collect should be selected from the list box.<br><br></li>
<li>
New Class — This collection is a collection of a new class. The name of the new class can be edited here, and the New Class Properties button will be enabled. Clicking the button displays a Class Module Builder dialog box so that the properties of the new class can be defined.</li>
</ul>
<p class=dt>
<b>New Class Properties</b></p>
<p class=indent>
Button to display the Class Properties dialog box to create a new class for this collection. This button is enabled when the Collection Of property is set to "[New Class]".</p>
<p class=dt>
<b>Instancing</b></p>
<p class=indent>
Determines how an external application can create an instance of the collection. Other classes in the project containing this collection can always create an instance of this collection.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Only available if the active project is an ActiveX exe or dll.
<ul type=disc>
<li>
Private — Other applications are not allowed access to the type library information about this class, and cannot create instances of it.<br><br></li>
<li>
Public Not Creatable — Other applications can use objects of this class only if the project this class is in creates the objects first. Other applications cannot use the CreateObject function or the New operator to create objects from this class.<br><br></li>
<li>
Single Use — Allows other applications to create objects from this class, but every object of this class that a client creates starts a new instance of this component. Not allowed in ActiveX DLL projects.<br><br></li>
<li>
Global Single Use — Like Single Use, with one addition: properties and methods of this class can be invoked as if they were simply global functions. It’s not necessary for the invoking application to explicitly create an instance of this class first; one will automatically be created. Not allowed in ActiveX DLL projects.<br><br></li>
<li>
Multi Use — Allows other applications to create objects from this class. One instance of the component will provide the objects created with this option.<br><br></li>
<li>
Global Multi Use — Like Multi Use, with one addition: properties and methods of this class can be invoked as if they were simply global functions. It's not necessary for the invoking application to explicitly create an instance of this class first; one will automatically be created.</li>
</ul>
<p class=dt>
<b>This collection is a Top Level Object</b></p>
<p class=indent>
Checking this option box makes this collection a top-level (root) object.</p>
</BODY>
</HTML>
