<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating a Unique Index</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="dvhowcreatinguniqueindex"></a>Creating a Unique Index</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvhowCreatingUniqueIndex_C;dvhowCreatingUniqueIndexC">
</object></p>
<p>
Create a unique <a href="dvovrvisualdatabasetoolsglossary.htm#dvmsgindex">index</a> when uniqueness is a characteristic of the data itself, but the combination of indexed <a href="dvovrvisualdatabasetoolsglossary.htm#dvmsgcolumn">columns</a> is not the same as the table’s <a href="dvovrvisualdatabasetoolsglossary.htm#dvmsgprimarykey">primary key</a>. For example, if you plan to query frequently on the Social Security number (<code>ssn</code>) column in the <code>employee</code> <a href="dvovrvisualdatabasetoolsglossary.htm#dvmsgtable">table</a> (where the primary key is <code>emp_id</code>), and you want to ensure Social Security numbers are unique, create a unique index on <code>ssn</code>. If the user enters the same Social Security number for more than one employee, the database displays an error and cannot save the table.</p>
<p class=indent>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;Although a unique index will help locate information, for the best performance results it is recommended that you use primary key or unique constraints instead. For more information about these constraints, see <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvovrPrimaryKeyConstraints">
</object><a href=JavaScript:alink_2.Click()>Primary Key Constraints</a> and <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvovrUniqueConstraints">
</object><a href=JavaScript:alink_3.Click()>Unique Constraints</a>.</p>
<p>
When you create or modify a unique index, you can set an option to ignore duplicate <a href="dvovrvisualdatabasetoolsglossary.htm#dvmsgkey">keys</a>. If this option is set and you attempt to create duplicate keys by adding or updating data that affects multiple <a href="dvovrvisualdatabasetoolsglossary.htm#dvmsgrow">rows</a> (with the INSERT or UPDATE statement), the row that causes the duplicates is not added or, in the case of an update, discarded. Neither the new value nor the original value of the row that would produce the duplicate exists in the updated table.</p>
<p>
For example, if you try to update "Smith" to "Jones" in a table where "Jones" already exists, you end up with one "Jones" and no "Smith" in the resulting table. The original "Smith" row is lost because an UPDATE statement is actually a DELETE followed by an INSERT. "Smith" was deleted and the attempt to insert an additional "Jones" failed. The whole transaction can’t be rolled back because the purpose of this option is to allow a transaction in spite of the presence of duplicates.</p>
<p class=indent>
<B><b>Caution</b></B>&nbsp;&nbsp;&nbsp;If you do not set the Ignore duplicate keys option and you try to update a row in a way that creates a duplicate key, the original row is discarded. The new value rather than the original value of the row that would produce the duplicate is retained in the updated table. This transaction cannot be rolled back.</p>
<p class=label>
<b>To create a unique index</b>
<ol>
<li>
In your database diagram, select the table you want to index.<br><br></li>
<li>
Right-click the table, and choose <b>Properties</b> from the shortcut menu.<br><br></li>
<li>
Choose the <b>Indexes/Keys</b> tab.<br><br></li>
<li>
Choose <b>New</b>. The <b>Selected index</b> list displays the system-assigned name of the new index.<br><br></li>
<li>
Under <b>Column name</b>, select the columns you want to index. You can select up to 16 columns. For optimal performance, select only one or two columns per index.<br><br></li>
<li>
Select the <b>Create UNIQUE</b> check box.<br><br></li>
<li>
Select the <b>Index</b> option.<br><br></li>
<li>
Select the <b>Ignore duplicate keys</b> option if you want to ignore new or updated data that would create a duplicate key in the index (with the INSERT or UPDATE statement).</li>
</ol>
<p>
The index is created in the database when you save the table or diagram.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;You cannot create a unique index on a single column if that column contains NULL in more than one row. Similarly, you cannot create a unique index on multiple columns if the combination of columns contains NULL in more than one row. These are treated as duplicate values for indexing purposes.</p>
<p class=indent>
<B><b>Note&nbsp;&nbsp;&nbsp;</b></B>Not all databases work with indexes in the same way. For more information, see <a href="dvovrdatabaseserverconsiderations.htm">Database Server Considerations</a>, or consult your database documentation.</p>
</BODY>
</HTML>
