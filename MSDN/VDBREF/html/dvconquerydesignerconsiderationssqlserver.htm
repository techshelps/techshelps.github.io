<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Query Designer Considerations for SQL Server Databases</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="dvconquerydesignerconsiderationssqlserver"></a>Query Designer Considerations for SQL Server Databases</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvconQueryDesignerConsiderationsSQLServer_C">
</object>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvconQueryDesignerConsiderationsSQLServer_T">
</object></p>
<p>
If you are creating queries using Microsoft<sup>®</sup> SQL Server™, you can take advantage of features specific to that server. The following guidelines outline differences you will notice in the Query Designer when you work with SQL Server, and provide information about SQL Server-specific features that you can use.</p>
<p>
Below you will find information about:
<ul type=disc>
<li>
<a href="#dvmscsqlserverversion">SQL Server Version</a><br><br></li>
<li>
<a href="#dvmscsqlsyntaxinsqlserver">SQL Syntax</a><br><br></li>
<li>
<a href="#dvmscidentifyingdatabaseobjectsinsqlserver">Identifying Database Objects</a><br><br></li>
<li>
<a href="#dvmscusingquotationmarks">Using Quotation Marks</a><br><br></li>
<li>
<a href="#dvmsccasesensitivityinsqlserver">Case Sensitivity</a><br><br></li>
<li>
<a href="#dvmsccreatingaliasesinsqlserver">Creating Aliases</a><br><br></li>
<li>
<a href="#dvmscusingoperatorsinexpressionsinsqlserver">Using Operators in Expressions</a><br><br></li>
<li>
<a href="#dvmscenteringkeywordsingridsqlpanesinsqlserver">Entering Keywords in the Grid and SQL Panes</a><br><br></li>
<li>
<a href="#dvmscenteringcurrencyvaluesinsqlserver">Entering Currency Values</a><br><br></li>
<li>
<a href="#dvmscusingdistinct">Using DISTINCT</a><br><br></li>
<li>
<a href="#dvmsccreatingouterjoinsinsqlserver">Creating Outer Joins</a><br><br></li>
<li>
<a href="#dvmscenteringblanksinsqlserver">Entering Blanks</a><br><br></li>
<li>
<a href="#dvmscincludingoptimizerhintcommentsinsqlserver">Including Optimizer Hint Comments</a><br><br></li>
<li>
<a href="#dvmscansitooemcharacterconversioninsqlserver">ANSI to OEM Character Conversion</a><br><br></li>
<li>
<a href="#dvmscunsupportedpartiallysupportedquerytypesinsqlserver">Unsupported and Partially Supported Query Types</a></li>
</ul>
<h2><a name="dvmscsqlserverversion"></a>SQL Server Version</h2>
<p>
The Query Designer is designed to support version 6.5 of the Microsoft SQL Server, but is fully compatible with earlier versions as well. If you are using a version of SQL Server earlier than 6.0, the Query Designer will not recognize SQL Server-specific features (such as syntax elements or functions). Instead, the Query Designer will recognize only standard ODBC syntax.</p>
<h2><a name="dvmscsqlsyntaxinsqlserver"></a>SQL Syntax</h2>
<p>
When the Query Designer builds a statement in the <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvrefSQLPane">
</object><a href=JavaScript:alink_3.Click()>SQL pane</a>, it will use syntax specific to SQL Server whenever possible. For example, <a href="dvovrvisualdatabasetoolsglossary.htm#dvmsgdatabaseobject">database objects</a> such as <a href="dvovrvisualdatabasetoolsglossary.htm#dvmsgtable">tables</a> and <a href="dvovrvisualdatabasetoolsglossary.htm#dvmsgview">views</a> are qualified using SQL Server owner names.</p>
<p>
You can also type SQL Server-specific syntax in the SQL pane yourself. In some cases when you verify a query, the Query Designer converts server-specific syntax to ANSI standard syntax. However, the changed query will always return the same results.</p>
<h2><a name="dvmscidentifyingdatabaseobjectsinsqlserver"></a>Identifying Database Objects</h2>
<p>
When you enter the names of database objects (tables, views, and columns) in the SQL pane, you must provide sufficient information for SQL Server to identify the object you want. Database objects are identified with unique names that consist of up to three parts (for tables and views) or four parts (for columns):</p>
<p>
<i>database.owner.table</i></p>
<p>
<i>database.owner.table.column</i></p>
<p>
In general, you need to provide only enough qualifiers to uniquely identify the object you want to work with. For example, if you are working with a column called <code>price</code> in the <code>titles</code> table in the current database, you can simply reference the column by name, as in this SQL statement:</p>
<pre><code>SELECT price
FROM titles
</code></pre>
<p>
However, if you are working with two tables such as <code>orders</code> and <code>products</code>, and each has a column called <code>price</code>, you must qualify references to the column with the appropriate table name, as in this example:</p>
<pre><code>SELECT products.prod_id, orders.price
FROM orders INNER JOIN products ON 
 orders.prod_id = products.prod_id
</code></pre>
<p>
When you use the <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvrefDiagramPane">
</object><a href=JavaScript:alink_4.Click()>Diagram pane</a> and <a href="dvrefgridpane.htm">Grid pane</a> to work with tables in the current database, the Query Designer automatically adds owner and table qualifiers for you. If you are not the owner of a table that you are working with, the owner’s name will appear in the table names. For example, if you work in the <code>pubs</code> database, the owner name <code>dbo</code> will appear in front of table names. If you are working with multiple tables, the Query Designer adds table name qualifiers to column names.</p>
<p>
For compatibility with other databases, you can use <code>[</code> and <code>]</code> around identifier names in the SQL pane. When the SQL statement is reformatted, <code>[</code> and <code>]</code> are replaced with double quotation marks (<code>"</code>), which are used to mark database identifiers.</p>
<h2><a name="dvmscusingquotationmarks"></a>Using Quotation Marks</h2>
<p>
The standard delimiters for literal strings in SQL are single quotation marks ('). By default, SQL Server reserves double quotation marks (") as delimiters for database objects (see Identifying Database Objects, above).</p>
<p>
The SQL Server ODBC driver supports a Quoted Identifiers setting for the session or connection. If this setting is on, double quotation marks are interpreted as delimiters for identifiers. However, if you turn this setting off, double quotation marks are interpreted instead as delimiters for literal strings.</p>
<p>
To avoid ambiguity, the Query Designer always sets Quoted Identifiers on, so that double quotation marks are always interpreted as database object delimiters. If you have previously turned Quoted Identifiers off, the Query Designer overrides your setting.</p>
<p>
Therefore, in the Query Designer, always use single quotation marks to enclose string literals. Use double quotation marks only as needed for database objects delimiters.</p>
<h2><a name="dvmsccasesensitivityinsqlserver"></a>Case Sensitivity</h2>
<p>
Text information in a SQL Server database can be stored in uppercase letters, lowercase letters, or a combination of both. For example, a last name can appear as "SMITH," "Smith," or "smith."</p>
<p>
Depending on how SQL Server was installed, databases can be case-sensitive or case-insensitive. If a database is case-sensitive, when you search for text data, you must construct your <a href="dvovrvisualdatabasetoolsglossary.htm#dvmsgsearchcondition">search conditions</a> using the exact combination of uppercase and lowercase letters. For example, if you are looking for a name such as "Smith," you cannot use the search conditions "=smith" or "=SMITH."</p>
<p>
In addition, if the <a href="dvovrvisualdatabasetoolsglossary.htm#dvmsgserver">server</a> was installed as case-sensitive, you must provide database, owner, table, and column names using the correct combination of uppercase and lowercase characters. If the case of the name you provide does not match exactly, SQL Server returns an error reporting an "invalid object name."</p>
<p>
When you create queries using the Diagram and Grid panes, the Query Designer will always accurately reflect the case-sensitivity of your server. However, if you enter queries in the <object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvrefSQLPane">
</object><a href=JavaScript:alink_5.Click()>SQL pane</a>, you must be careful to match names to the way they will be interpreted by the server.</p>
<p>
If the server was installed with a case-insensitive option, you can enter <a href="dvovrvisualdatabasetoolsglossary.htm#dvmsgdatabaseobject">database object</a> identifiers and search conditions using any combination of uppercase and lowercase characters.</p>
<p class=indent>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;To determine the case sensitivity of a server, execute the <a href="dvovrvisualdatabasetoolsglossary.htm#dvmsgstoredprocedure">stored procedure</a> <code>sp_server_info</code>, and then examine the contents of row 18. If the server has been installed with the case-insensitive setting, the option for <code>sort_order</code> will be set to nocase.</p>
<h2><a name="dvmsccreatingaliasesinsqlserver"></a>Creating Aliases</h2>
<p>
In the SQL pane, you can use the <code>=</code> operator to specify an alias, as in this example:</p>
<pre><code>SELECT tax = price * .1 
FROM table
</code></pre>
<p>
When you change panes or execute the query, the SQL statement is reformatted and the <code>=</code> is replaced with <code>AS</code>.</p>
<h2><a name="dvmscusingoperatorsinexpressionsinsqlserver"></a>Using Operators in Expressions</h2>
<p>
The SQL Server supports all standard operators for expressions, including % for modulus. In addition, you can use the following bitwise operators in expressions:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=49%><b>Operator</b></td>
<td class=label width=51%><b>Meaning</b></td>
</tr>
<tr valign=top>
<td width=49%>&amp;</td>
<td width=51%>BITAND</td>
</tr>
<tr valign=top>
<td width=49%>|</td>
<td width=51%>BITOR</td>
</tr>
<tr valign=top>
<td width=49%>^</td>
<td width=51%>BITXOR</td>
</tr>
<tr valign=top>
<td width=49%>~</td>
<td width=51%>BITNOT</td>
</tr>
</table><br>
<h2><a name="dvmscenteringkeywordsingridsqlpanesinsqlserver"></a>Entering Keywords in the Grid and SQL Panes</h2>
<p>
The Query Designer supports the use of certain SQL Server constants, variables, and reserved column names in the Grid or SQL panes. Generally, you can enter these values by typing them in, but the Grid pane will not display them in drop-down lists. Examples of supported names include:
<ul type=disc>
<li>
<b>IDENTITYCOL&nbsp;&nbsp;&nbsp;</b>If you enter this name in the Grid or SQL pane, the SQL Server will recognize it as a reference to an auto-incrementing column.<br><br></li>
<li>
<b>Predefined global values</b>&nbsp;&nbsp;&nbsp;You can enter values such as <code>@@CONNECTIONS</code> and <code>@@CURSOR_ROW</code> into the Grid and SQL panes.<br><br></li>
<li>
<b>Constants (niladic functions)</b>&nbsp;&nbsp;&nbsp;You can enter constant values such as <code>CURRENT_TIMESTAMP</code> and<code> CURRENT_USER</code> in either pane.<br><br></li>
<li>
<b>NULL</b>&nbsp;&nbsp;&nbsp;If you enter <code>NULL</code> in the Grid or SQL panes, it is treated as a literal value, not a constant.</li>
</ul>
<h2><a name="dvmscenteringcurrencyvaluesinsqlserver"></a>Entering Currency Values</h2>
<p>
In the Grid pane, to specify that you want data interpreted as money, precede the value with $ or $- (for negative values). Do not include a comma or other delimiter to indicate thousands. Formatting values this way alerts the Query Designer that you are entering values to be treated as or compared to data in <code>money</code> or <code>smallmoney</code> type columns. Values are rounded to the nearest hundredth of a unit.</p>
<p>
You can use $ no matter what currency you are working with. When a query displays values from money columns in the Results pane, it does not include the $ prefix. Depending on the setting in the Windows Regional Settings dialog box, currency data might or might not include a comma or other delimiter for thousands.</p>

<h2><a name="dvmscusingdistinct"></a>Using DISTINCT</h2>
<p>
If you are working with SQL Server version 6.5 or earlier, using the DISTINCT keyword creates a query that cannot be updated in the Results pane.</p>
<h2><a name="dvmsccreatingouterjoinsinsqlserver"></a>Creating Outer Joins</h2>
<p>
In the SQL pane, you can use the SQL Server-specific <code>*=</code> and <code>=*</code> operators to specify an <a href="dvovrvisualdatabasetoolsglossary.htm#dvmsgouterjoin">outer join</a>. When you change panes or execute the query, the Query Designer reformats your SQL statement, and replaces <code>*=</code> with <code>LEFT OUTER JOIN</code> and <code>=*</code> with <code>RIGHT OUTER JOIN</code>.</p>
<h2><a name="dvmscenteringblanksinsqlserver"></a>Entering Blanks</h2>
<p>
In SQL Server, two single quotation marks are treated as a single space. For example, you can use quotation marks in the following expression: <code>'abc' + '' + 'def'</code>. The resulting value would be <code>'abd def'</code>.</p>
<h2><a name="dvmscincludingoptimizerhintcommentsinsqlserver"></a>Including Optimizer Hint Comments</h2>
<p>
If you are entering a query directly in the SQL pane, you can add optimizer hints to specify the use of specific indexes, locking methods, and so on. However, when reformatting the contents of the SQL pane, the Query Designer might not maintain these comments. Optimizer comments are not represented graphically.</p>
<p>
For more details about optimizer hints, refer to the Microsoft SQL Server documentation.</p>
<h2><a name="dvmscansitooemcharacterconversioninsqlserver"></a>ANSI to OEM Character Conversion</h2>
<p>
Data containing extended characters — that is, characters outside the ASCII range 32 (space) to 126 (~), including international characters such as "ä," "ç," "é," "ñ," and "ß" — can require special handling when you are working with SQL Server.</p>
<p>
The representation of extended characters in a <a href="dvovrvisualdatabasetoolsglossary.htm#dvmsgresultset">result set</a> depends on the code page in use. A code page is a character set that a computer uses to interpret and display data properly. Code pages usually correspond to different platforms and languages and are used in international applications. For example, the ASCII value 174 might appear as the symbol "<sup>®</sup>" in one code page but as a chevron character in another code page.</p>
<p>
In general, code pages are divided into ANSI code pages and OEM code pages. ANSI code pages, in which high-numbered ASCII values represent international characters, are used in Windows. OEM code pages, in which in which high-numbered ASCII values represent line-drawing and punctuation characters, were designed for MS-DOS<sup>®</sup>.</p>
<p>
When data is entered into a SQL Server database, <a href="dvovrvisualdatabasetoolsglossary.htm#dvmsgodbc(opendatabaseconnectivity)">ODBC</a> settings on the local (client) computer specify whether the data is stored in ANSI or OEM format. The option is specified using the Convert OEM to ANSI Characters option in the ODBC SQL Server Setup dialog box.</p>
<p>
By default, this option is not selected for the SQL Server ODBC driver, a choice which causes the data to be stored in ANSI format. However, if this option has been selected, the ODBC driver converts high-numbered ASCII characters to OEM characters. For example, if the OEM conversion option is set and you enter the name "Günther" in a column and then save the row, the character "ü" will be converted to another character before the row is stored in the database.</p>
<p>
The results of queries that you create in the Query Designer are affected by the format in which extended-character data is stored in combination with the setting of the OEM conversion option in the ODBC SQL Server Setup dialog box. Depending on these variables:
<ul type=disc>
<li>
You might not be able to search for data that includes high-order ASCII characters.<br><br></li>
<li>
Your query results might appear in the <object id=alink_6 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvrefResultsPane">
</object><a href=JavaScript:alink_6.Click()>Results pane</a> with incorrect characters substituted for high-order ASCII characters.</li>
</ul>
<p>
In general, if data is stored in OEM format, you should set the OEM conversion option so the data will display properly and so you can search it. If data is stored in ANSI format (that is, it was not converted to OEM format) but you have set the OEM conversion option, the data will not display properly and you will not be able to search for it.</p>
<p>
To determine whether data was stored in OEM format, you can use a query to display the contents of the table or tables you are working with. If extended characters appear incorrect, the OEM conversion setting is probably wrong. Close the query and the project, change the setting in the ODBC SQL Server Setup dialog box, and then open the project and query again.</p>
<h2><a name="dvmscunsupportedpartiallysupportedquerytypesinsqlserver"></a>Unsupported and Partially Supported Query Types</h2>
<p>
Some types of legal SQL Server queries cannot be represented graphically in the Query Designer. You can still enter them in the SQL pane, and they will execute correctly. However, the Query Designer will display the <object id=alink_7 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvrefQueryDefinitionsDifferDialogBox">
</object><a href=JavaScript:alink_7.Click()>Query Definitions Differ</a> dialog box and report an error when you execute your query or change panes.</p>
<p>
The following types of SQL Server queries are not supported graphically:
<ul type=disc>
<li>
Queries using INTERSECT<br><br></li>
<li>
Queries using MINUS<br><br></li>
<li>
Queries using UNION [ALL]<br><br></li>
<li>
Queries using CASE<br><br></li>
<li>
Any data definition (DDL) query, including CREATE TABLE, ALTER TABLE, CREATE PROCEDURE, ALTER PROCEDURE, and so on. CREATE VIEW and ALTER VIEW queries are not supported graphically, but you can use the View Designer to create and edit views.<br><br></li>
<li>
Update and Delete queries that include an extra FROM clause (FROM <i>table</i> FROM <i>table</i>) that specifies the list of rows to update or delete.</li>
</ul>
<p>
The following types of queries cannot be represented graphically, so you must enter them in the SQL pane. They do not result in errors when you execute them or change panes.
<ul type=disc>
<li>
Queries using the FOR BROWSE clause<br><br></li>
<li>
Queries that include TSEQUAL and UPDATE as a search condition<br><br></li>
<li>
Queries including CURRENT OF<br><br></li>
</ul>
</BODY>
</HTML>
