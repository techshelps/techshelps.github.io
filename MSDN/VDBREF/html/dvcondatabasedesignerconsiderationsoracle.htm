<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Database Designer Considerations for Oracle Databases</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="dvcondatabasedesignerconsiderationsoracle"></a>Database Designer Considerations for Oracle Databases</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvconDatabaseDesignerConsiderationsOracle_C">
</object>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvconDatabaseDesignerConsiderationsOracle_T">
</object></p>
<p>
If you are creating database diagrams using the Oracle database server, you can take advantage of features specific to that <a href="dvovrvisualdatabasetoolsglossary.htm#dvmsgserver">server</a>. Although the Database Designer is designed to work well with Oracle databases, there are some important differences in how the Database Designer works with Oracle databases.</p>
<p>
For details about Oracle-specific issues raised here, see your Oracle database server documentation.</p>
<p>
The following sections outline differences you will notice in the Database Designer when you work with Oracle databases.
<ul type=disc>
<li>
<a href="#dvmscoracledriver">Oracle Driver</a><br><br></li>
<li>
<a href="#dvmsccasesensitivityofidentifiernames">Case Sensitivity of Identifier Names</a><br><br></li>
<li>
<a href="#dvmscerrormessages">Error Messages</a><br><br></li>
<li>
<a href="#dvmscaddingtableswithmlslabeldatatypetodatabasediagram">Adding Tables with the MLSLABEL Data Type to a Database Diagram</a><br><br></li>
<li>
<a href="#dvmscchangingcolumnpropertiesoracledb">Changing Column Properties</a><br><br></li>
<li>
<a href="#dvmscenforcedunenforcedtablerelationshipsoracledb">Enforced and Unenforced Table Relationships</a><br><br></li>
<li>
<a href="#dvmscconstraints">Constraints</a><br><br></li>
<li>
<a href="#dvmscoraclespecificdialogboxespropertypages">Oracle-Specific Dialog Boxes and Property Pages</a></li>
</ul>
<h2><a name="dvmscoracledriver"></a>Oracle Driver</h2>
<p>
You must use the Oracle <a href="dvovrvisualdatabasetoolsglossary.htm#dvmsgodbc(opendatabaseconnectivity)">ODBC</a> driver provided with the Microsoft<sup>®</sup> Visual Database Tools. This driver has been tested to ensure that it works properly with the Database Designer. The Database Designer works with Oracle version 7, and currently supports most of the features of later Oracle versions.</p>
<h2><a name="dvmsccasesensitivityofidentifiernames"></a>Case Sensitivity of Identifier Names</h2>
<p>
The names of database objects — tables, views, columns, and synonyms — are case-insensitive by default in the Oracle database server. When objects are added to a database diagram, their names are changed to all uppercase, unless the name is in double quotation marks.</p>
<p>
In the Data View window, however, database object names are displayed with the actual combination of uppercase and lowercase letters used when creating the objects.</p>
<h2><a name="dvmscerrormessages"></a>Error Messages</h2>
<p>
In many cases the Database Designer catches invalid syntax and displays an appropriate message. However, in some cases — usually involving syntax specific to Oracle databases — the Database Designer does not detect all errors. When Oracle attempts to display the changes to a database object, it detects an error and it returns an error number and string to the Database Designer. The Database Designer then displays the information in a "raw" state.</p>
<p>
If you receive such an error message, consult your Oracle documentation for details. If you do not have access to the Oracle documentation, you might have to experiment with your database diagram to determine where the error lies.</p>
<h2><a name="dvmscaddingtableswithmlslabeldatatypetodatabasediagram"></a>Adding Tables with the MLSLABEL Data Type to a Database Diagram</h2>
<p>
Because the MLSLABEL data type is designed for use primarily with high-security applications, it is not supported by the Microsoft Oracle ODBC driver. However, MLSLABEL is a legal data type in Oracle, so the Database Designer does not immediately detect an error when you add a table containing a column of this data type to a database diagram. You can make changes to this table that require only an ALTER TABLE statement. However, if you make any changes that require the table to be recreated, you'll get an "ORA-03115: unsupported network datatype or representation" error and the changes will not be allowed.</p>
<p>
To make the changes to the table, you can view the change script for the database diagram, save the appropriate SQL statements for the changes, and then use an Oracle client tool to execute these SQL statements against the Oracle database. </p>
<h2><a name="dvmscchangingcolumnpropertiesoracledb"></a>Changing Column Properties</h2>
<p>
Although the procedure for setting column properties using the Database Designer is similar regardless of the database you are using, the following sections contain information specific to Oracle databases.
<ul type=disc>
<li>
<a href="#dvmscvalidatingcolumnnames">Validating Column Names</a><br><br></li>
<li>
<a href="#dvmscrenamingcolumn">Renaming a Column</a><br><br></li>
<li>
<a href="#dvmscsupportedoracledatatypes">Supported Oracle Data Types</a><br><br></li>
<li>
<a href="#dvmsclongorlongrawdatatypevalidationrules">Long or Long Raw Data Type Validation Rules</a><br><br></li>
<li>
<a href="#dvmscconvertingdatatypes">Converting Data Types</a><br><br></li>
<li>
<a href="#dvmscdefaultdatatypefornewcolumns">Default Data Type for New Columns</a><br><br></li>
<li>
<a href="#dvmscchangingnulloptionassignedtocolumnoracledb">Changing the Null Option Assigned to a Column</a><br><br></li>
<li>
<a href="#dvmscaddingcolumncomments">Adding Column Comments</a></li>
</ul>
<p>
For information on how to set column properties using the Database Designer, see <a href="dvhowsettingcolumnproperties.htm">Setting Column Properties</a>.</p>
<h3><a name="dvmscvalidatingcolumnnames"></a>Validating Column Names</h3>
<p>
If you use an invalid name for a column in the Database Designer, the name is automatically put in double quotation marks. See your Oracle documentation for the rules governing naming database objects.</p>
<h3><a name="dvmscrenamingcolumn"></a>Renaming a Column</h3>
<p>
Oracle column names will be converted to upper case, unless the name is enclosed in quotation marks or the name is not valid when shifted to upper case. In the latter case, the column name will be automatically enclosed in quotation marks.</p>
<p>
For the procedure for changing column names, see <a href="dvhowrenamingcolumn.htm">Renaming a Column</a>.</p>
<h3><a name="dvmscsupportedoracledatatypes"></a>Supported Oracle Data Types</h3>
<p>
Even though Oracle supports both ANSI and their own data types, the Database Designer only allows data types native to Oracle and the ANSI float data type. The following table shows the Oracle data types supported in this version of the Visual Database Tools. The Database Designer uses the specified default lengths when the user changes from one data type to another (the length of the original data type is not preserved).</p>
<p>
For more information about these data types, consult your Oracle database documentation.</p>
<p class=label>
<b>Supported Oracle data types</b></p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=29%><b>Data type</b></td>
<td class=label width=49%><b>Description</b></td>
<td class=label width=22%><b>Default value</b></td>
</tr>
<tr valign=top>
<td width=29%><b>VARCHAR2( length)</b></td>
<td width=49%>Variable length character string having maximum <i>length</i> bytes. Maximum length is 2000, and minimum is 1. You must specify length for a VARCHAR2.</td>
<td width=22%>50</td>
</tr>
<tr valign=top>
<td width=29%><b>NUMBER( p,s)</b></td>
<td width=49%>Number having precision p and scale s. The precision p can range from 1 to 38. The scale s can range from –84 to 127.</td>
<td width=22%>22 No Edit</td>
</tr>
<tr valign=top>
<td width=29%><b>FLOAT( p)</b></td>
<td width=49%>ANSI Float type that is equivalent to NUMBER(38). The precision p can range from 1 to 126.</td>
<td width=22%>22 No Edit</td>
</tr>
<tr valign=top>
<td width=29%><b>LONG</b></td>
<td width=49%>Character data of variable length up to 2 gigabytes, or 2 31 –1 bytes.</td>
<td width=22%>0 No Edit</td>
</tr>
<tr valign=top>
<td width=29%><b>DATE</b></td>
<td width=49%>Valid date range from January 1, 4712 BC to December 31, 4712 AD.</td>
<td width=22%>7 No Edit</td>
</tr>
<tr valign=top>
<td width=29%><b>RAW( length)</b></td>
<td width=49%>Raw binary data of <i>length</i> bytes. Maximum length is 255 bytes. You must specify length for a RAW value.</td>
<td width=22%>50</td>
</tr>
<tr valign=top>
<td width=29%><b>LONG RAW</b></td>
<td width=49%>Raw binary data of variable length up to 2 gigabytes.</td>
<td width=22%>0 No Edit</td>
</tr>
<tr valign=top>
<td width=29%><b>CHAR( length)</b></td>
<td width=49%>Fixed length character data of <i>length</i> bytes. Maximum length is 255. Default and minimum length is 1 byte.</td>
<td width=22%>10</td>
</tr>
<tr valign=top>
<td width=29%><b>MLSLABEL</b></td>
<td width=49%>Binary format of an operating system label. This data type is used with Trusted Oracle7.</td>
<td width=22%>0 No Edit</td>
</tr>
<tr valign=top>
<td width=29%><b>ROWID</b></td>
<td width=49%>Hexadecimal string representing the unique address of a row in its table. This data type is primarily for values returned by the ROWID pseudocolumn.</td>
<td width=22%>6 No Edit</td>
</tr>
</table><br>
<p>
The Database Designer will allow you to decrement the Scale value of an existing column of type NUMBER. This will cause data loss, but no error message will be displayed.</p>
<h3><a name="dvmsclongorlongrawdatatypevalidationrules"></a>Long or Long Raw Data Type Validation Rules</h3>
<p>
A table can only have one column with a LONG or LONG RAW data type. The Database Designer verifies the data type when you exit the cell. If another column exists in the table with a LONG or LONG RAW data type, the Database Designer displays an error message and returns control back to the data type cell with the value selected.</p>
<h3><a name="dvmscconvertingdatatypes"></a>Converting Data Types</h3>
<p>
The following table shows the available data type conversions for Oracle version 7.</p>
<p>
<b>"S"</b> indicates that the conversion is supported.</p>
<p>
<b>"NS"</b> indicates that a conversion is not supported.</p>
<p class=label>
<b>Data type conversions</b></p>
<table border=1 cellpadding=5 cols=11 frame=below rules=rows>
<tr valign=top>
<td class=label width=9%><b>FROM</b><p class=label>
<b>TO</b></p>
</td>
<td class=label width=9%><b>CHAR</b></td>
<td class=label width=9%><b>DATE</b></td>
<td class=label width=9%><b>FLOAT</b></td>
<td class=label width=9%><b>LONG</b></td>
<td class=label width=9%><b>LONG RAW</b></td>
<td class=label width=9%><b>MLSLABEL</b></td>
<td class=label width=10%><b>NUMBER</b></td>
<td class=label width=8%><b>RAW</b></td>
<td class=label width=9%><b>ROWID</b></td>
<td class=label width=10%><b>VARCHAR2</b></td>
</tr>
<tr valign=top>
<td width=9%>CHAR</td>
<td width=9%>S</td>
<td width=9%>S</td>
<td width=9%>S</td>
<td width=9%>S</td>
<td width=9%>NS</td>
<td width=9%>S</td>
<td width=10%>S</td>
<td width=8%>S</td>
<td width=9%>S</td>
<td width=10%>S</td>
</tr>
<tr valign=top>
<td width=9%>DATE</td>
<td width=9%>S</td>
<td width=9%>S</td>
<td width=9%>S</td>
<td width=9%>NS</td>
<td width=9%>NS</td>
<td width=9%>S</td>
<td width=10%>S</td>
<td width=8%>S</td>
<td width=9%>S</td>
<td width=10%>S</td>
</tr>
<tr valign=top>
<td width=9%>FLOAT</td>
<td width=9%>S</td>
<td width=9%>S</td>
<td width=9%>S</td>
<td width=9%>NS</td>
<td width=9%>NS</td>
<td width=9%>S</td>
<td width=10%>S</td>
<td width=8%>S</td>
<td width=9%>S</td>
<td width=10%>S</td>
</tr>
<tr valign=top>
<td width=9%>LONG</td>
<td width=9%>S</td>
<td width=9%>S</td>
<td width=9%>S</td>
<td width=9%>S</td>
<td width=9%>NS</td>
<td width=9%>S</td>
<td width=10%>S</td>
<td width=8%>S</td>
<td width=9%>S</td>
<td width=10%>S</td>
</tr>
<tr valign=top>
<td width=9%>LONG RAW</td>
<td width=9%>S</td>
<td width=9%>S</td>
<td width=9%>S</td>
<td width=9%>S</td>
<td width=9%>S</td>
<td width=9%>NS</td>
<td width=10%>S</td>
<td width=8%>S</td>
<td width=9%>S</td>
<td width=10%>S</td>
</tr>
<tr valign=top>
<td width=9%>MLSLABEL</td>
<td width=9%>S</td>
<td width=9%>S</td>
<td width=9%>S</td>
<td width=9%>NS</td>
<td width=9%>NS</td>
<td width=9%>S</td>
<td width=10%>S</td>
<td width=8%>S</td>
<td width=9%>S</td>
<td width=10%>S</td>
</tr>
<tr valign=top>
<td width=9%>NUMBER</td>
<td width=9%>S</td>
<td width=9%>S</td>
<td width=9%>S</td>
<td width=9%>NS</td>
<td width=9%>NS</td>
<td width=9%>S</td>
<td width=10%>S</td>
<td width=8%>S</td>
<td width=9%>S</td>
<td width=10%>S</td>
</tr>
<tr valign=top>
<td width=9%>RAW</td>
<td width=9%>S</td>
<td width=9%>NS</td>
<td width=9%>NS</td>
<td width=9%>NS</td>
<td width=9%>NS</td>
<td width=9%>NS</td>
<td width=10%>NS</td>
<td width=8%>S</td>
<td width=9%>S</td>
<td width=10%>S</td>
</tr>
<tr valign=top>
<td width=9%>ROWID</td>
<td width=9%>S</td>
<td width=9%>NS</td>
<td width=9%>NS</td>
<td width=9%>NS</td>
<td width=9%>NS</td>
<td width=9%>NS</td>
<td width=10%>NS</td>
<td width=8%>NS</td>
<td width=9%>S</td>
<td width=10%>S</td>
</tr>
<tr valign=top>
<td width=9%>VARCHAR2</td>
<td width=9%>S</td>
<td width=9%>S</td>
<td width=9%>S</td>
<td width=9%>S</td>
<td width=9%>NS</td>
<td width=9%>S</td>
<td width=10%>S</td>
<td width=8%>S</td>
<td width=9%>S</td>
<td width=10%>S</td>
</tr>
</table><br>
<p>
If you attempt to change a data type to an unsupported type, the Database Designer displays an error message.</p>
<p>
Unlike Microsoft<sup>®</sup> SQL Server™, in Oracle a VARCHAR2 data type cannot relate to a CHAR data type. This means that the Database Designer will change the default length when going from VARCHAR2 to CHAR or the other way around.</p>
<h3><a name="dvmscdefaultdatatypefornewcolumns"></a>Default Data Type for New Columns</h3>
<p>
The Database Designer uses VARCHAR2 as the default data type for new columns defined in the field list control.</p>
<h3><a name="dvmscchangingnulloptionassignedtocolumnoracledb"></a>Changing the Null Option Assigned to a Column</h3>
<p>
You can toggle Allow Nulls on and off regardless of the column's data type. The default value is On for new columns.</p>
<p>
The Database Designer doesn’t allow you to name or disable null constraints. The Database Designer will preserve the null constraint name and its disabled state in table recreates.</p>
<p>
Disabled null constraints are visually the same as an enabled one. If you toggle Allow Nulls on for a disabled null constraint and then toggle it back off, the null constraint is recreated as enabled.</p>
<h3><a name="dvmscaddingcolumncomments"></a>Adding Column Comments</h3>
<p>
You can enter up to 2000 bytes for a column comment. If you want to include a single quotation mark in the string, use either a single or two single quotation marks to represent it. If you put in just one quotation mark character, the Database Designer adds the second quotation mark to make it valid for Oracle. For example, a comment of:</p>
<p class=tl>
Bill’s table</P><p>
becomes</p>
<p class=tl>
Bill’’s table</P><p>
when you exit the edit field.</p>
<p>
The Database Designer beeps when you type in more than 2000 characters in the Comment field. If the expansion of the single quotation mark to a double single quotation mark causes the comment to exceed 2000 characters, the Database Designer displays a message, allowing you to choose between truncating the comment or removing the single quotation mark and returning to the Comment field.</p>
<p>
Delete a comment by deleting the contents of the Comment field.</p>
<h2><a name="dvmscenforcedunenforcedtablerelationshipsoracledb"></a>Enforced and Unenforced Table Relationships</h2>
<p>
Oracle support for referential integrity differs from that in SQL Server.
<ul type=disc>
<li>
<a href="#dvmschowreferentialintegrityworksinoracle">How Referential Integrity Works in Oracle</a><br><br></li>
<li>
<a href="#dvmscenforcingreferentialintegritybetweentables">Enforcing Referential Integrity Between Tables</a></li>
</ul>
<p>
For more information about referential integrity, see <a href="dvhowenforcingreferentialintegritybetweentables.htm">Enforcing Referential Integrity Between Tables</a> in the Database Designer section of the documentation.</p>
<h3><a name="dvmschowreferentialintegrityworksinoracle"></a>How Referential Integrity Works in Oracle</h3>
<p>
Referential integrity is a system of rules that ensure relationships between rows in related tables are valid and that you don't accidentally delete or change related data.</p>
<p>
When referential integrity is enforced in an Oracle database, you must observe the following rules:
<ul type=disc>
<li>
You can't enter a value in the foreign key column of the related table if that value doesn't exist in the primary key of the related table. However, you can enter a null in the foreign key column. For example, you can't indicate that a job is assigned to an employee who isn’t included in the <code>employee</code> table, but you can indicate that an employee has no assigned job by entering a null in the <code>job_id</code> column of the <code>employee</code> table.<br><br></li>
<li>
You can't delete a row from a primary key table if rows matching it exist in a related table. For example, you can't delete a row from the <code>jobs</code><i> </i>table if there are employees assigned to the job represented by that row in the <code>employee</code><i> </i>table. However, if cascading deletes are enabled, you can delete a primary key row; all matching rows in related tables are also deleted.<br><br></li>
<li>
You can't change a primary key value in the primary key table if that row has related rows. For example, you can't delete an employee from the <code>employee</code> table if that employee is assigned to a job in the <code>jobs</code> table.</li>
</ul>
<p>
Oracle supports only two kinds of referential integrity:
<ul type=disc>
<li>
Enabling referential integrity to check values in related tables when you enter data. If the data value is not allowed (as determined by the rules above), the data entry fails and the data is not added to the database.<br><br></li>
<li>
Cascading deletes.</li>
</ul>
<p>
SQL Server, on the other hand, supports some additional kinds of referential integrity. You can set options to disable the foreign key constraint under these conditions:
<ul type=disc>
<li>
Upon creation, to check existing data<br><br></li>
<li>
During INSERT and UPDATE transactions<br><br></li>
<li>
During replication</li>
</ul>
<p>
As a result, the following topics in the Database Designer documentation are not valid for Oracle databases:</p>
<p>
<a href="dvhowcheckingexistingdatawhencreatingrelationship.htm">Checking Existing Data when Creating a Relationship</a></p>
<p>
<a href="dvhowdisablingforeignkeyconstraintwithinsertupdatestatements.htm">Disabling a Foreign Key Constraint with INSERT and UPDATE Statements</a></p>
<p>
<a href="dvhowdisablingforeignkeyconstraintforreplication.htm">Disabling a Foreign Key Constraint for Replication</a></p>
<h3><a name="dvmscenforcingreferentialintegritybetweentables"></a>Enforcing Referential Integrity Between Tables</h3>
<p>
Referential integrity between tables is enforced by default when you create a relationship in your database diagram. An enforced relationship ensures each value entered in a foreign key column matches an existing value in the related primary key column.</p>
<p>
You can change the conditions under which referential integrity is enforced by editing the relationship’s properties.</p>
<p class=label>
<b>To change referential integrity options for a new relationship</b>
<ol>
<li>
In your database diagram, create a relationship line. For details, see <a href="dvhowcreatingrelationshipbetweentables.htm">Creating a Relationship Between Tables</a>.<br><br></li>
<li>
In the <b>Create Relationship</b> dialog box, clear or select one or more of the options (<b>Enable relationship</b> or <b>ON DELETE CASCADE</b>).</li>
</ol>
<p class=label>
<b>To change referential integrity options for an existing relationship</b>
<ol>
<li>
In your database diagram, select the relationship line.<br><br></li>
<li>
Right-click the relationship line and select <b>Properties</b>.<br><br></li>
<li>
Choose the <b>Relationships</b> tab.<br><br></li>
<li>
Select the relationship from the <b>Selected relationship</b> list.<br><br></li>
<li>
Clear or select one or more of the options (<b>Enable relationship</b> or <b>ON DELETE CASCADE</b>).</li>
</ol>
<p>
The relationship is updated in the database when you save the diagram or either of the related tables.</p>
<p>
For more information on the options for setting referential integrity for Oracle databases, see <a href="#dvmscoraclespecificdialogboxespropertypages">Oracle-Specific Dialog Boxes and Property Pages</a>.</p>
<h2><a name="dvmscconstraints"></a>Constraints</h2>
<p>
Oracle databases have different functionality for constraints. For example, in Oracle, constraints can be enabled and disabled. For information on how constraints are applied and used in Oracle databases, see your Oracle documentation. For information on how Oracle constraints are set in the Database Designer, see <a href="#dvmscoraclespecificdialogboxespropertypages">Oracle-Specific Dialog Boxes and Property Pages</a>.</p>
<p>
The following topics contain information that is specific to SQL Server databases; the topics note where the implementation is different for Oracle databases.
<ul type=disc>
<li>
<a href="#dvmsccheckingexistingdatawhencreatingcheckconstraint">Checking Existing Data When Creating a Check Constraint</a><br><br></li>
<li>
<a href="#dvmscdisablingcheckconstraintforreplication">Disabling a Check Constraint for Replication</a><br><br></li>
<li>
<a href="#dvmsccreatinguniqueconstraint">Creating a Unique Constraint</a><br><br></li>
<li>
<a href="#dvmscdefiningprimarykey">Defining a Primary Key</a></li>
</ul>
<p>
For more information about using constraints in the Database Designer, see <a href="dvconconstraints.htm">Constraints</a>.</p>
<h3><a name="dvmsccheckingexistingdatawhencreatingcheckconstraint"></a>Checking Existing Data When Creating a Check Constraint</h3>
<p>
In the Database Designer topic <a href="dvhowcheckingexistingdatawhencreatingcheckconstraint.htm">Checking Existing Data When Creating a Check Constraint</a>, the following information is SQL Server specific:</p>
<p class=tl>
When you create a <a href="dvovrvisualdatabasetoolsglossary.htm#dvmsgcheckconstraint">check constraint</a>, you can set an option to apply it either to new data only or to existing data as well. The option of applying the constraint to new data only is useful when you know that the existing data already meets the new check constraint, or when a business rule requires the constraint to be enforced only from this point forward.</P><h3><a name="dvmscdisablingcheckconstraintforreplication"></a>Disabling a Check Constraint for Replication</h3>
<p>
In the Database Designer topic <a href="dvhowdisablingcheckconstraintforreplication.htm">Disabling a Check Constraint for Replication</a>, the following information applies to SQL Server only:</p>
<p class=tl>
You can disable a <a href="dvovrvisualdatabasetoolsglossary.htm#dvmsgcheckconstraint">check constraint</a> when your <a href="dvovrvisualdatabasetoolsglossary.htm#dvmsgtable">table</a> is replicated in another database. When you replicate a table, the table definition and data are copied from the source database to a destination database. These two databases are usually (but not necessarily) on separate servers. If the check constraints are specific to the source database, they may unnecessarily prevent new data from being entered in the destination database.</P><h3><a name="dvmsccreatinguniqueconstraint"></a>Creating a Unique Constraint</h3>
<p>
In Oracle, you can enable and disable constraints.</p>
<h3><a name="dvmscdefiningprimarykey"></a>Defining a Primary Key</h3>
<p>
In Oracle, you can enable and disable primary keys.</p>
<h2><a name="dvmscoraclespecificdialogboxespropertypages"></a>Oracle-Specific Dialog Boxes and Property Pages</h2>
<p>
The following dialog boxes and property pages are specific to Oracle. For more information on the fields and settings in these dialog boxes and property pages, see your Oracle documentation.</p>
<h3>Create Relationship Dialog Box</h3>
<p>
<img src="dv56lu1.gif" border=0></p>
<h3>Tables Tab (Database Diagram Property Pages)</h3>
<p>
<img src="dv56lu2.gif" border=0></p>
<h3>Relationships Tab (Database Diagram Property Pages)</h3>
<p>
<img src="dv56lu3.gif" border=0></p>
<h3>Indexes/Keys Tab (Database Diagram Property Pages)</h3>
<p>
<img src="dv56lu4.gif" border=0></p>
</BODY>
</HTML>
