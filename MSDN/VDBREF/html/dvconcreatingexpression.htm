<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating an Expression</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="dvconcreatingexpression"></a>Creating an Expression</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvconCreatingExpression_C;dvconCreatingExpressionC">
</object>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvconCreatingExpression_T;dvconCreatingExpressionT">
</object></p>
<p>
An expression consists of any combination of <a href="dvovrvisualdatabasetoolsglossary.htm#dvmsgcolumn">column</a> names, literals, operators, or functions. Follow these guidelines in combining elements to form expressions:
<ul type=disc>
<li>
Reference columns by typing their names. If your query uses more than one table and if you use a column name that is not unique, you must add the table name and a period to the column name. The following example shows the column name <code>job_id</code> qualified with the table name <code>employee</code>:<pre><code>employee.job_id
</code></pre>
</li>
<li>
Include literal text by enclosing it in single quotation marks; no quotation marks are necessary for numbers.<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;In some databases, terms in single quotation marks are interpreted as literal values whereas terms in double quotation marks are interpreted as <a href="dvovrvisualdatabasetoolsglossary.htm#dvmsgdatabaseobject">database objects</a> such as column or table references. Therefore, the Query Designer can accept terms in double quotation marks, but might interpret them differently than you expect. In SQL Server, the Query Designer always interprets double quotation marks as database object delimiters. For details, see <a href="dvconquerydesignerconsiderationssqlserver.htm">Query Designer Considerations for SQL Server Databases</a>.</p></li>
<li>
Use standard arithmetic operators for numbers and a concatenation operator for combining strings. For details, see <a href="dvconoperatorsforexpressions.htm">Operators for Expressions</a>.<br><br></li>
<li>
Include parentheses to establish precedence of operators.<br><br></li>
<li>
If you include a function, use these same guidelines for the arguments passed to the function. That is, reference columns by typing their names, enclose literal text in single quotation marks, and so on. For a list of functions you can use in expressions, see <a href="dvconfunctionsforexpressions.htm">Functions for Expressions</a>.<br><br></li>
<li>
If you pass column names as function arguments, be sure the data type of the column is appropriate for the function argument.</li>
</ul>
<p>
The following table illustrates the use of expressions in a query.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=49%><b>Expression<sup>1</sup></b></td>
<td class=label width=51%><b>Result</b></td>
</tr>
<tr valign=top>
<td width=49%><code>SELECT (price * .9)<br>
FROM products</code></td>
<td width=51%>Displays a discounted price (10% off the value in the price column).</td>
</tr>
<tr valign=top>
<td width=49%><code>SELECT (lname + ', ' + fname)<br>
FROM employee</code></td>
<td width=51%>Displays the concatenated values of the last name and first name columns with a comma between them.</td>
</tr>
<tr valign=top>
<td width=49%><code>SELECT sales.qty, titles.price</code><p>
<code>FROM sales INNER JOIN titles ON <br>
 sales.title_id = titles.title_id<br>
ORDER BY <br>
 (sales.qty * titles.price)</code></p>
</td>
<td width=51%>After joining two tables, sorts the <a href="dvovrvisualdatabasetoolsglossary.htm#dvmsgresultset">result set</a> by the total value of an order (quantity times price).</td>
</tr>
<tr valign=top>
<td width=49%><code>SELECT au_lname, au_fname<br>
FROM authors<br>
WHERE <br>
  (SUBSTRING(phone, 1, 3) = '415')</code></td>
<td width=51%>Displays authors whose area code is in the San Francisco area.</td>
</tr>
<tr valign=top>
<td width=49%><code>SELECT ord_num, ord_date<br>
FROM sales<br>
WHERE<br>
 (ord_date &gt;= <br>
 &nbsp; DATEADD(day, -10, GETDATE()))</code></td>
<td width=51%>Finds all orders in the <code>sales</code> table that were made in the last 10 days. Today’s date is returned by the GETDATE(&nbsp;) function.</td>
</tr>
</table><br>
<p class=mini>
<sup>1</sup>Some of the operators and functions shown here are specific to one database. For details about what operators and functions you can use, refer to the documentation for your database.</p>
</BODY>
</HTML>
