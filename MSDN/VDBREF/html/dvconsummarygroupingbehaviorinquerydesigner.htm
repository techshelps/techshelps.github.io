<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Summary and Grouping Behavior in the Query Designer</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="dvconsummarygroupingbehaviorinquerydesigner"></a>Summary and Grouping Behavior in the Query Designer</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvconSummaryGroupingBehaviorInQueryDesigner_C;dvconSummaryGroupingBehaviorInQueryDesignerC">
</object>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvconSummaryGroupingBehaviorInQueryDesigner_T;dvconSummaryGroupingBehaviorInQueryDesignerT">
</object></p>
<p>
When you create <a href="dvovrvisualdatabasetoolsglossary.htm#dvmsgaggregatequery">aggregate queries</a>, certain logical principles apply. For example, you cannot display the contents of individual rows in a summary query. The Query Designer helps you comply with these principles in the way the <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvrefDiagramPane">
</object><a href=JavaScript:alink_3.Click()>Diagram</a> and <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvrefGridPane">
</object><a href=JavaScript:alink_4.Click()>Grid</a> panes behave.</p>
<p>
By understanding the principles of aggregate queries and the Query Designer’s behavior, you can create logically correct aggregate queries. The overriding principle is that aggregate queries can result only in summary information. Thus, most of the principles that follow describe the ways that you can reference individual data columns within an aggregate query.
<ul type=disc>
<li>
<a href="#dvmscreferencingcolumnsforoutputsorting">Referencing Columns for Output and Sorting</a><br><br></li>
<li>
<a href="#dvmscreferencingcolumnsinsearchconditions">Referencing Columns in Search Conditions</a><br><br></li>
<li>
<a href="#dvmscworkingwithcolumnsinaggregatequeries">Working with Columns in Aggregate Queries</a></li>
</ul>
<h2><a name="dvmscreferencingcolumnsforoutputsorting"></a>Referencing Columns for Output and Sorting</h2>
<p>
The following principles describe how you can reference columns in an aggregate query for output and for sorting:
<ul type=disc>
<li>
If you include an aggregate function anywhere in a query, the query is considered an aggregate query. (This principle does not necessarily apply to <a href="dvovrvisualdatabasetoolsglossary.htm#dvmsgsubquery">subqueries</a>, which can include non-aggregate information.)<br><br></li>
<li>
You cannot display the contents of individual rows in an aggregate query; you can display only summary data. As a consequence, all columns marked for output must also be assigned to either an <a href="dvovrvisualdatabasetoolsglossary.htm#dvmsgaggregatefunction">aggregate function</a> or to the GROUP BY clause.<br><br></li>
<li>
Columns used in aggregate functions cannot appear in the GROUP BY clause.</li>
</ul>
<h2><a name="dvmscreferencingcolumnsinsearchconditions"></a>Referencing Columns in Search Conditions</h2>
<p>
The following principles describe how you can reference columns in an aggregate query in search conditions. In general, you can use a column in a search condition to filter the rows that should be summarized (a WHERE clause) or to determine which grouped results appear in the final output (a HAVING clause).
<ul type=disc>
<li>
Individual data columns can appear in either the WHERE or HAVING clause, depending on how they are used elsewhere in the query.<br><br></li>
<li>
WHERE clauses are used to select a subset of rows for summarizing and grouping and are thus applied before any grouping is done. Therefore, you can use a data column in a WHERE clause even if it is not part of the GROUP BY clause or contained in an aggregate function. For example, the following statement selects all titles that cost more than $10.00 and averages the price:<pre><code>SELECT AVG(price)
FROM titles
WHERE price &gt; 10
</code></pre>
</li>
<li>
If you create a <a href="dvovrvisualdatabasetoolsglossary.htm#dvmsgsearchcondition">search condition</a> that involves a column also used in a GROUP BY clause or aggregate function, the search condition can appear as either a WHERE clause or a HAVING clause — you can decide which when you create the condition. For example, the following statement creates an average price for the titles for each publisher, then displays the average for the publishers in which the average price is greater than $10.00:<pre><code>SELECT pub_id, AVG(price)
FROM titles
GROUP BY pub_id
HAVING (AVG(price) &gt; 10)
</code></pre>
</li>
<li>
If you use an aggregate function in a search condition, the condition involves a summary and must therefore be part of the HAVING clause.</li>
</ul>
<h2><a name="dvmscworkingwithcolumnsinaggregatequeries"></a>Working with Columns in Aggregate Queries</h2>
<p>
When you create aggregate queries using the <object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvrefDiagramPane">
</object><a href=JavaScript:alink_5.Click()>Diagram</a> and <object id=alink_6 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvrefGridPane">
</object><a href=JavaScript:alink_6.Click()>Grid</a> panes, the Query Designer makes certain assumptions so that your query adheres to the principles outlined earlier. For example, if you are creating an aggregate query and mark a data column for output, the Query Designer automatically makes the column part of the GROUP BY clause so that you do not inadvertently attempt to display the contents of an individual row in a summary.</p>
<p>
Even though the Query Designer works to help prevent logical errors, it is possible to create aggregate queries that will not execute. Therefore, be sure that you understand the principles listed earlier in order to avoid errors when you create queries.</p>
<p>
The Query Designer uses the following guidelines for working with columns:
<ul type=disc>
<li>
When you choose the Group By option or add an aggregate function to a query, all columns marked for output or used for sorting are automatically added to the GROUP BY clause. Columns are not automatically added to the GROUP BY clause if they are already part of an aggregate function.<p class=tl>
If you don’t want a particular column to be part of the GROUP BY clause, you must manually change it by selecting a different option in the Group By column of the Grid pane. (However, the Query Designer will not prevent you from choosing an option that can result in a query that will not run.)</P></li>
<li>
If you manually add a query output column to an aggregate function in either the Grid or SQL pane, the Query Designer does not automatically remove other output columns from the query. Therefore, you must remove the remaining columns from the query output or make them part of the GROUP BY clause or of an aggregate function.</li>
</ul>
<p>
When you enter a search condition into the Criteria column of the Grid pane, the Query Designer follows these rules:
<ol>
<li>
If the <b>Group By</b> column of the grid is not displayed (because you have not yet specified an aggregate query), the search condition is placed into the WHERE clause.<br><br></li>
<li>
If you are already in an aggregate query and have selected the option <b>Where</b> in the <b>Group By</b> column, the search condition is placed into the WHERE clause.<br><br></li>
<li>
If the <b>Group By</b> column contains any value other than <b>Where</b>, the search condition is placed in the HAVING clause.</li>
</ol>
</BODY>
</HTML>
