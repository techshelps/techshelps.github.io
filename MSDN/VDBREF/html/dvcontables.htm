<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tables</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="dvcontables"></a>Tables</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvconTables_C;dvconTablesC">
</object>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvconTables_T;dvconTablesT">
</object></p>
<p>
A database consists of one or more tables. A <a href="dvovrvisualdatabasetoolsglossary.htm#dvmsgtable">table</a> is a collection of data, arranged in <a href="dvovrvisualdatabasetoolsglossary.htm#dvmsgrow">rows</a> and <a href="dvovrvisualdatabasetoolsglossary.htm#dvmsgcolumn">columns</a>. For example, you might have a table for author information called <code>authors</code>. Each column would contain a certain type of information, such as the author’s last name. Each row would contain all the information about a specific author: first name, last name, address, and so on.</p>
<p>
In a database, you might have a number of tables, each devoted to a specific topic. For example, the <code>pubs</code> database might contain tables for authors, titles, and so on. Using a separate table for each topic can eliminate duplicate data, make data storage more efficient, and reduce data-entry errors.</p>
<p>
Tables are the basic building blocks of database diagrams. In a database diagram, each table is laid out in a matrix so that you can see all the <a href="dvovrvisualdatabasetoolsglossary.htm#dvmsgproperty">properties</a> defined for every column in your database table.</p>
<h3>Tables in a Database Diagram</h3>
<p>
Each table in a database diagram has three distinct features: a title bar, a row selector, and a set of property columns.
<ul type=disc>
<li>
<B><b>Title Bar</b></B>&nbsp;&nbsp;&nbsp;The title bar shows the name of the table. If another user owns the table, then that user’s name appears in parentheses at the end of the table name. <p>
<img src="dv3w4v1.gif" border=0></P><p class=tl>
For information about table owners, see <a href="dvconworkingwithdatabasediagramsinmulti-userenvironment.htm">Working in a Multi-User Environment</a>.</P><p class=tl>
If you have modified a table and have not yet saved it, an asterisk (*) appears at the end of the table name to indicate unsaved changes. For information about saving modified tables and diagrams, see <a href="dvconcontrollingdatabasechangesthroughdatabasediagrams.htm">Controlling Database Changes</a>.</P><table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td width=31%><img src="dv3w4y1.gif" border=0></td>
<td width=26%>or</td>
<td width=43%><img src="dv3w5h1.gif" border=0></td>
</tr>
</table><br>
</li>
<li>
<B><b>Row Selector</b></B>&nbsp;&nbsp;&nbsp;You can click the row selector <img src="dv3w3k1.gif" border=0> to select a database column in the table. The row selector displays a key symbol <img src="dv3w6f1.gif" border=0> if the column is in the table’s <a href="dvovrvisualdatabasetoolsglossary.htm#dvmsgprimarykey">primary key</a>. For information about primary keys, see <a href="dvhowdefiningprimarykey.htm">Defining a Primary Key</a>.<br><br></li>
<li>
<B><b>Property Columns</b></B>&nbsp;&nbsp;&nbsp;The set of property columns is visible in the Column Properties view or Customized view of your table. You can view a table in any of five different views to help you manage the size and layout of your diagram.<p>
<img src="dv3w541.gif" border=0></P><p class=tl>
For more information about column properties, see <a href="dvovrcolumnproperties.htm">Column Properties</a>. For more information about table views, see <a href="dvhowchangingtableview.htm">Changing a Table View</a>.</P></li>
</ul>
<p>
Before you begin defining the columns for a table, determine what type of data the table will hold and how that table relates to the other tables in your database.</p>
<h3>Designing Tables</h3>
<p>
To determine the structure of a new table, you need to decide:
<ul type=disc>
<li>
What type of data the table will contain.<br><br></li>
<li>
What columns you need in the table and the data type (and length, if required) for each column.<br><br></li>
<li>
Which columns should accept null values. For information about data types, allowing null values, and other column properties, see <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvovrColumns">
</object><a href=JavaScript:alink_3.Click()>Columns</a>.<br><br></li>
<li>
Whether to use constraints and if so, where. For more information, see <a href="dvconconstraints.htm">Constraints</a>.<br><br></li>
<li>
What types of <a href="dvovrvisualdatabasetoolsglossary.htm#dvmsgindex">indexes</a> you need, where you need them, and which columns should be the <a href="dvovrvisualdatabasetoolsglossary.htm#dvmsgprimarykey">primary key</a> and <a href="dvovrvisualdatabasetoolsglossary.htm#dvmsgforeignkey">foreign key</a>. For more information, see <a href="dvconindexes.htm">Indexes</a>.</li>
</ul>
<p>
After you decide on the structure of your table, you can create the table and define its columns in your database diagram. You can also alter the table’s appearance in your diagram so that the information you need is visible when you need it. When you save your table or the diagram, the table is created in your database.</p>
<p>
The Database Designer has two modes for working on tables. You can view tables directly in a database diagram using Column Properties view or you can open a single table in design mode by right-clicking the table name and choosing Design. This opens the table in a single window where you can define columns and properties for the table.</p>
<p>
If you know exactly what you want in a table, it is often most efficient to define everything you need at the beginning, including the table’s data restrictions and additional properties. However, in many cases, you’ll do best to first create a basic table and save it so it is created in your database. You can then add some test data to the table and experiment with the table in the database diagram to fine-tune its design.</p>
<p>
The Database Designer enables you to try out different designs by working with tables in your diagram. Through experimentation, you can determine what types of data are frequently entered and queried and then redesign your table accordingly.</p>
<p>
When you change a table’s design in a database diagram, any data that is stored in the table is preserved to the extent possible. When you’re satisfied with your basic design, you can add constraints, indexes, and any additional columns that you require. For more information, see <a href="dvconworkingindatabasediagrams.htm">Working in Database Diagrams</a>.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=50%><b>To</b></td>
<td class=label width=50%><b>See</b></td>
</tr>
<tr valign=top>
<td width=50%>Create a new table in your database, add existing tables or related tables to your database diagram</td>
<td width=50%><a href="dvhowaddingtabletodatabasediagram.htm">Adding Tables to a Database Diagram</a></td>
</tr>
<tr valign=top>
<td width=50%>Copy a table from one database diagram to another diagram</td>
<td width=50%><a href="dvhowcopyingtableacrossdatabasediagrams.htm">Copying a Table Across Database Diagrams</a></td>
</tr>
<tr valign=top>
<td width=50%>Create a new table that contains some of the same columns as an existing table in your diagram</td>
<td width=50%><a href="dvhowduplicatingtables.htm">Duplicating Tables</a></td>
</tr>
<tr valign=top>
<td width=50%>Deleting a table from a database diagram and the database</td>
<td width=50%><object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvhowRemovingTableFromDatabaseDiagram">
</object><a href=JavaScript:alink_4.Click()>Removing a Table from a database Diagram</a><br>
<a href="dvhowremovingtablefromdatabasediagram.htm">Deleting a Table from a Database Diagram and the Database</a></td>
</tr>
<tr valign=top>
<td width=50%>Change the name of a table in a database diagram and in the database</td>
<td width=50%><a href="dvhowrenamingtable.htm">Renaming a Table</a></td>
</tr>
<tr valign=top>
<td width=50%>Change the amount of information shown for the tables in the diagram</td>
<td width=50%><a href="dvhowchangingtableview.htm">Changing a Table View</a></td>
</tr>
<tr valign=top>
<td width=50%>Change the size of the table window in the diagram</td>
<td width=50%><a href="dvhowadjustingtablesize.htm">Adjusting the Table Size</a></td>
</tr>
<tr valign=top>
<td width=50%>Add or delete columns to a table, change column property settings </td>
<td width=50%><a href="dvovrcolumns.htm">Columns</a></td>
</tr>
</table><br>
</BODY>
</HTML>
