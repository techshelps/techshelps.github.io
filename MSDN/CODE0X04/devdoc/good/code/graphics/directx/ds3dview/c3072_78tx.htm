<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FILE.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context3075"></a>FILE.CPP</h2>
<pre><code>/*========================================================================== <br> * <br> *  Copyright 1995 - 1998 Microsoft Corporation. All Rights Reserved. <br> * <br> *  File: file.cpp <br> * <br> *  DESCRIPTION: Functionality to let users pick files and return their <br> *     names to the object viewer (one for XOF, one for WAV) <br> * <br> ***************************************************************************/ <br> <br>#include "d3drmwin.h" <br>#include "resource.h" <br>#include &lt;windows.h&gt; <br>#include &lt;stdio.h&gt; <br>#include &lt;string.h&gt; <br> <br>/* <br>** Lets the user select a new geometry file to load and returns the full path and filename <br>*/ <br> <br>char* OpenNewFile( HWND hwnd ) <br>{ <br>    static char file[256]; <br>    static char fileTitle[256]; <br>    static char filter[] = "Geometry files (*.x)\0*.x\0" <br>                           "All Files (*.*)\0*.*\0"; <br>    OPENFILENAME ofn; <br> <br>    strcpy( file, ""); <br>    strcpy( fileTitle, ""); <br> <br>// Set up the OPENFILENAME structure <br>    ofn.lStructSize       = sizeof(OPENFILENAME); <br>    ofn.hwndOwner         = hwnd; <br>#ifdef WIN32 <br>    ofn.hInstance         = (HINSTANCE) GetWindowLong(hwnd, GWL_HINSTANCE); <br>#else <br>    ofn.hInstance         = (HINSTANCE) GetWindowWord(hwnd, GWW_HINSTANCE); <br>#endif <br>    ofn.lpstrFilter       = filter; <br>    ofn.lpstrCustomFilter = (LPSTR) NULL; <br>    ofn.nMaxCustFilter    = 0L; <br>    ofn.nFilterIndex      = 1L; <br>    ofn.lpstrFile         = file; <br>    ofn.nMaxFile          = sizeof(file); <br>    ofn.lpstrFileTitle    = fileTitle; <br>    ofn.nMaxFileTitle     = sizeof(fileTitle); <br>    ofn.lpstrInitialDir   = NULL; <br>    ofn.lpstrTitle        = "Open a File"; <br>    ofn.nFileOffset       = 0; <br>    ofn.nFileExtension    = 0; <br>    ofn.lpstrDefExt       = "*.x"; <br>    ofn.lCustData         = 0; <br> <br>    ofn.Flags = OFN_SHOWHELP | OFN_PATHMUSTEXIST | OFN_FILEMUSTEXIST; <br> <br>// Call windows functionality to make it happen! <br>    if (GetOpenFileName(&amp;ofn)) <br>        return (char*)ofn.lpstrFile; <br>    else <br>        return NULL; <br>} <br> <br>/* <br>** Lets the user select a new .WAV file to load and returns it's full path and filename <br>*/ <br> <br>char* OpenNewSoundFile( HWND hwnd ) <br>{ <br>    static char file[256]; <br>    static char fileTitle[256]; <br>    static char filter[] = "Sound files (*.wav)\0*.wav\0" <br>                           "All Files (*.*)\0*.*\0"; <br>    OPENFILENAME ofn; <br> <br>    strcpy( file, ""); <br>    strcpy( fileTitle, ""); <br> <br>    ofn.lStructSize       = sizeof(OPENFILENAME); <br>    ofn.hwndOwner         = hwnd; <br>#ifdef WIN32 <br>    ofn.hInstance         = (HINSTANCE) GetWindowLong(hwnd, GWL_HINSTANCE); <br>#else <br>    ofn.hInstance         = (HINSTANCE) GetWindowWord(hwnd, GWW_HINSTANCE); <br>#endif <br>    ofn.lpstrFilter       = filter; <br>    ofn.lpstrCustomFilter = (LPSTR) NULL; <br>    ofn.nMaxCustFilter    = 0L; <br>    ofn.nFilterIndex      = 1L; <br>    ofn.lpstrFile         = file; <br>    ofn.nMaxFile          = sizeof(file); <br>    ofn.lpstrFileTitle    = fileTitle; <br>    ofn.nMaxFileTitle     = sizeof(fileTitle); <br>    ofn.lpstrInitialDir   = NULL; <br>    ofn.lpstrTitle        = "Open a File"; <br>    ofn.nFileOffset       = 0; <br>    ofn.nFileExtension    = 0; <br>    ofn.lpstrDefExt       = "*.wav"; <br>    ofn.lCustData         = 0; <br> <br>    ofn.Flags = OFN_SHOWHELP | OFN_PATHMUSTEXIST | OFN_FILEMUSTEXIST; <br> <br>    if (GetOpenFileName(&amp;ofn)) <br>        return (char*)ofn.lpstrFile; <br>    else <br>        return NULL; <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
