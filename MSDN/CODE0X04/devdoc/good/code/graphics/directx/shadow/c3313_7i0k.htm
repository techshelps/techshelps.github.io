<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SHADOW.C</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context3314"></a>SHADOW.C</h2>
<pre><code>/*========================================================================== <br> * <br> *  Copyright (C) 1995, 1996 Microsoft Corporation. All Rights Reserved. <br> * <br> *  File: shadow.c <br> * <br> ***************************************************************************/ <br> <br>#include "rmdemo.h" <br> <br>BOOL <br>BuildScene(LPDIRECT3DRMDEVICE dev, LPDIRECT3DRMVIEWPORT view, <br>   LPDIRECT3DRMFRAME scene, LPDIRECT3DRMFRAME camera) <br>{ <br>    D3DRMRENDERQUALITY quality = D3DRMRENDER_FLAT; <br>    LPDIRECT3DRMFRAME lights = NULL; <br>    LPDIRECT3DRMMESHBUILDER teapot_builder = NULL; <br>    LPDIRECT3DRMMESH teapot_mesh = NULL; <br>    LPDIRECT3DRMVISUAL teapot_shadow = NULL; <br>    LPDIRECT3DRMFRAME teapot = NULL; <br>    LPDIRECT3DRMLIGHT shadow_light = NULL; <br>    LPDIRECT3DRMLIGHT l2 = NULL; <br>    HRESULT rval; <br> <br>    view = view;/* not used */ <br> <br>    if (FAILED(dev-&gt;lpVtbl-&gt;SetQuality(dev, quality))) <br>goto generic_error; <br>    if (FAILED(scene-&gt;lpVtbl-&gt;SetSceneBackgroundRGB(scene, D3DVAL(1), D3DVAL(1), <br>                                         D3DVAL(1)))) <br> goto generic_error; <br> <br>    /* <br>     * initialize the lights in the scene <br>     */ <br>    if (FAILED(lpD3DRM-&gt;lpVtbl-&gt;CreateFrame(lpD3DRM, scene, &amp;lights))) <br>goto generic_error; <br>    if (FAILED(lights-&gt;lpVtbl-&gt;SetPosition(lights, scene, D3DVAL(2), D3DVAL(5), <br>                                -D3DVAL(10)))) <br>goto generic_error; <br>    if (FAILED(lpD3DRM-&gt;lpVtbl-&gt;CreateLightRGB(lpD3DRM, D3DRMLIGHT_POINT, D3DVAL(0.9), <br>                                  D3DVAL(0.8), D3DVAL(0.7), &amp;shadow_light))) <br>  goto generic_error; <br>    if (FAILED(lights-&gt;lpVtbl-&gt;AddLight(lights, shadow_light))) <br>goto generic_error; <br> <br>    if (FAILED(lpD3DRM-&gt;lpVtbl-&gt;CreateLightRGB(lpD3DRM, D3DRMLIGHT_AMBIENT, D3DVAL(0.1), <br>                                  D3DVAL(0.1), D3DVAL(0.1), &amp;l2))) <br>  goto generic_error; <br>    if (FAILED(scene-&gt;lpVtbl-&gt;AddLight(scene, l2))) <br>goto generic_error; <br> <br>    /* <br>     * load mesh file <br>     */ <br>    if (FAILED(lpD3DRM-&gt;lpVtbl-&gt;CreateMeshBuilder(lpD3DRM, &amp;teapot_builder))) <br>goto generic_error; <br>    rval = teapot_builder-&gt;lpVtbl-&gt;Load(teapot_builder, "teapot.x", NULL, <br>    D3DRMLOAD_FROMFILE, NULL, NULL); <br>    if (rval != D3DRM_OK) { <br>        Msg("Failed to load teapot.x.\n"); <br>goto ret_with_error; <br>    } <br>    if (FAILED(teapot_builder-&gt;lpVtbl-&gt;CreateMesh(teapot_builder, &amp;teapot_mesh))) <br>goto generic_error; <br>    RELEASE(teapot_builder); <br> <br>    /* <br>     * create a teapot frame within the scene <br>     */ <br>    if (FAILED(lpD3DRM-&gt;lpVtbl-&gt;CreateFrame(lpD3DRM, scene, &amp;teapot))) <br>goto generic_error; <br>    if (FAILED(lpD3DRM-&gt;lpVtbl-&gt;CreateShadow(lpD3DRM, (LPDIRECT3DRMVISUAL) teapot_mesh, <br>                                shadow_light, D3DVAL(0), D3DVAL(-3), D3DVAL(0), D3DVAL(0), D3DVAL(1), <br>                                D3DVAL(0), &amp;teapot_shadow))) <br>goto generic_error; <br> <br>    /* <br>     * add the loaded mesh into the frame <br>     */ <br>    if (FAILED(teapot-&gt;lpVtbl-&gt;AddVisual(teapot, (LPDIRECT3DRMVISUAL) teapot_mesh))) <br>goto generic_error; <br>    if (FAILED(teapot-&gt;lpVtbl-&gt;AddVisual(teapot, teapot_shadow))) <br>goto generic_error; <br> <br>    /* <br>     * set up the frames position, orientation and rotation <br>     */ <br> <br>    if (FAILED(camera-&gt;lpVtbl-&gt;SetPosition(camera, scene, D3DVAL(0), D3DVAL(0), -D3DVAL(10)))) <br>goto generic_error; <br>    if (FAILED(camera-&gt;lpVtbl-&gt;SetOrientation(camera, scene, D3DVAL(0), D3DVAL(0), D3DVAL(1), D3DVAL(0), <br>                                   D3DVAL(1), D3DVAL(0)))) <br>   goto generic_error; <br>    if (FAILED(teapot-&gt;lpVtbl-&gt;SetRotation(teapot, scene, D3DVAL(0), D3DVAL(1), D3DVAL(1), <br>                                D3DVAL(0.02)))) <br>goto generic_error; <br> <br>    RELEASE(lights); <br>    RELEASE(teapot_mesh); <br>    RELEASE(teapot_shadow); <br>    RELEASE(teapot); <br>    RELEASE(shadow_light); <br>    RELEASE(l2); <br>    return TRUE; <br>generic_error: <br>    Msg("A failure occurred while building the scene.\n"); <br>ret_with_error: <br>    RELEASE(lights); <br>    RELEASE(teapot_builder); <br>    RELEASE(teapot_mesh); <br>    RELEASE(teapot_shadow); <br>    RELEASE(teapot); <br>    RELEASE(shadow_light); <br>    RELEASE(l2); <br>    return FALSE; <br>} <br> <br>void <br>OverrideDefaults(Defaults* defaults) <br>{ <br>    defaults-&gt;bNoTextures = TRUE; <br>    defaults-&gt;bConstRenderQuality = TRUE; <br>    lstrcpy(defaults-&gt;Name, "Shadow Direct3DRM Example"); <br>} <br></code></pre>
<p>&nbsp;</p></body>
</HTML>
