<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SFX.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context3147"></a>SFX.H</h2>
<pre><code>#ifndef SFX_HEADER <br>#define SFX_HEADER <br>/*========================================================================== <br> * <br> *  Copyright (C) 1995 Microsoft Corporation. All Rights Reserved. <br> * <br> *  File:       sfx.h <br> *  Content:    Routines <br> * <br> * <br> ***************************************************************************/ <br> <br>#include &lt;dsound.h&gt; <br>#include "ds3dutil.h" <br>/******************* DEFINITIONS *************************** <br>These will be used to index the array of CSound3D objects. <br>*********************************************************/ <br>#define BFIRE       0 //Bullet Firing <br>#define SBOOM       1 //Ship Exploding <br>#define SENGINE     2 //Ship Engine <br>#define SSTART      3 //Starting Engine <br>#define SSTOP       4 //Stopping Engine (key 5) <br>#define SBOUNCE     5 //Bouncing off a block or window edge <br>#define LBOOM       6 //Block destruction <br> <br>#define MAX_SOUNDS  7  <br> <br>/******************* DEFINITIONS FOR SHARED INFO ************/ <br>#define ENGINE_STATE 0x00000001l      // Set if Engine is running <br> <br> <br>/**************** CONVERSION MACROS ************************** <br>These would be faster if hard-coded, but are left like this <br>for readability. <br>**************************************************************/ <br>#define SCREEN_METERS D3DVAL(6)         //(How many meters wide is the screen?) <br>#define PPM    D3DVAL(640/SCREEN_METERS)  //How many pixels per meter? <br>#define MPP    D3DVAL(SCREEN_METERS/640.f)  //How many meters per pixel? <br>#define P2M(x) D3DVAL(D3DVAL(x) * MPP)   //converts pixels to meters <br>#define M2P(x) D3DVAL(D3DVAL(x) * PPM)   //converts meters to pixels <br> <br>/****************** FUNCTION PROTOTYPES *********************/ <br>BOOL InitSfx(void); <br>void CleanupSfx(void); <br>/************************ VARIABLES *************************/ <br>extern LPWAVEDATA           gSoundEffect[MAX_SOUNDS]; <br>extern BOOL                 gbSoundInitialized; <br>extern CHAR *               gszResourceName[MAX_SOUNDS]; <br>extern LPDIRECTSOUND        glpDirectSound; <br>extern LPDIRECTSOUND3DLISTENER   glpDirectSound3DListener; <br>extern LPDIRECTSOUNDBUFFER  glpPrimaryBuffer; <br> <br>#endif </code></pre>
<p>&nbsp;</p></body>
</HTML>
