<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>LOBBY.C</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context3143"></a>LOBBY.C</h2>
<pre><code>/*========================================================================== <br> * <br> *  Copyright (C) 1995-1997 Microsoft Corporation. All Rights Reserved. <br> * <br> *  File:       lobby.c <br> *  Content:    DirectPlayLobby related code <br> * <br> * <br> ***************************************************************************/ <br>#include "lobby.h" <br> <br>/* <br> * Externals <br> */ <br>extern LPDIRECTPLAY2glpDP; // directplay object pointer <br> <br>/* <br> * Globals <br> */ <br>LPDPLCONNECTIONglpdplConnection;// connection settings <br> <br>/* <br> * Statics <br> */ <br>static LPDIRECTPLAYLOBBYglpDPL;// lobby object pointer <br> <br> <br> <br>/* <br> * DPLobbyCreate <br> * <br> * Wrapper for DirectPlayLobby DirectPlayLobbyCreate API. <br> */ <br>HRESULT DPLobbyCreate(void) <br>{ <br>HRESULT hr=E_FAIL; <br> <br>hr = DirectPlayLobbyCreate(NULL, &amp;glpDPL, NULL, NULL, 0); <br> <br>return hr; <br>} <br> <br>/* <br> * DPLobbyConnect <br> * <br> * Wrapper for DirectPlayLobby Connect API. <br> */ <br>HRESULT DPLobbyConnect(void) <br>{ <br>HRESULT hr=E_FAIL; <br> <br>hr = IDirectPlayLobby_Connect(glpDPL, 0, &amp;glpDP, NULL) ; <br> <br>return hr; <br>} <br> <br>/* <br> * DPLobbyGetConnectionSettings <br> * <br> * Wrapper for DirectPlayLobby GetConnectionSettings API <br> */ <br>HRESULT DPLobbyGetConnectionSettings(void) <br>{ <br>HRESULT hr=E_FAIL; <br>DWORD dwSize; <br> <br>if (glpDPL) <br>{ <br>// get size for the connection settings structure <br>hr = IDirectPlayLobby_GetConnectionSettings(glpDPL, 0, NULL, &amp;dwSize); <br>if (DPERR_BUFFERTOOSMALL == hr) <br>{  <br>// if we already have one, free it <br>if (glpdplConnection) <br>{ <br>free(glpdplConnection); <br>glpdplConnection = NULL; <br>} <br> <br>// allocate memory for the new one <br>glpdplConnection = (LPDPLCONNECTION) malloc(dwSize); <br> <br>// get the connection settings <br>if (glpdplConnection) <br>hr = IDirectPlayLobby_GetConnectionSettings(glpDPL, 0, glpdplConnection, &amp;dwSize); <br>} <br>} <br> <br>return hr; <br>} <br> <br>/* <br> * DPLobbyRelease <br> * <br> * Wrapper for DirectPlayLobby Release API <br> */ <br>HRESULT DPLobbyRelease(void) <br>{ <br>HRESULT hr=E_FAIL; <br> <br>// free our connection settings <br>if (glpdplConnection) <br>{ <br>free(glpdplConnection); <br>glpdplConnection = NULL; <br>} <br> <br>// release the lobby object <br>if (glpDPL) <br>{ <br>hr = IDirectPlayLobby_Release(glpDPL); <br>glpDPL = NULL; <br>} <br>return hr; <br>} <br> <br>/* <br> * DPLobbySetConnectionSettings <br> * <br> * Wrapper for DirectPlayLobby SetConnectionSettings API <br> */ <br>HRESULT DPLobbySetConnectionSettings(void) <br>{ <br>HRESULT hr=E_FAIL; <br> <br>    hr = IDirectPlayLobby_SetConnectionSettings(glpDPL, 0, 0, glpdplConnection); <br> <br>return hr; <br>} <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
