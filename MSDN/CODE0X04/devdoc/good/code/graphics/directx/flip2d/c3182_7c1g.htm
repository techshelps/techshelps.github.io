<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIXED.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context3184"></a>FIXED.H</h2>
<pre><code>/************************************************************************** <br> <br>    Fixed.h - 16.16 Fixed point class <br> <br> **************************************************************************/ <br> <br>inline long fixed_mul(long a, long b) {return MulDiv(a, b, 65536);} <br>inline long fixed_div(long a, long b) {return MulDiv(a, 65536, b);} <br> <br>class Fixed { <br>    private: <br>        long fx; <br>    public: <br>        Fixed()             {} <br>        ~Fixed()            {} <br> <br>        Fixed(long l)       {fx = l&lt;&lt;16;} <br>        Fixed(int i)        {fx = (long)i&lt;&lt;16;} <br>        Fixed(double d)     {fx = (long)(d * 65536.0);} <br> <br>        int Int()           {return (int)(fx &gt;&gt; 16);} <br>        int Frac()          {return (int)(fx &amp; 0xFFFF);} <br> <br>        operator int()      {return (int)(fx &gt;&gt; 16);} <br>        operator double()   {return (double)fx / 65536.0;} <br> <br>        Fixed operator +(Fixed a) {Fixed c; c.fx = fx + a.fx; return c;} <br>        Fixed operator -(Fixed a) {Fixed c; c.fx = fx - a.fx; return c;} <br>        Fixed operator *(Fixed a) {Fixed c; c.fx = fixed_mul(fx,a.fx); return c;} <br>        Fixed operator /(Fixed a) {Fixed c; c.fx = fixed_div(fx,a.fx); return c;} <br> <br>        int operator &lt;(Fixed a)  {return fx &lt; a.fx;} <br>        int operator &gt;(Fixed a)  {return fx &gt; a.fx;} <br>        int operator ==(Fixed a) {return fx == a.fx;} <br>        int operator !=(Fixed a) {return fx != a.fx;} <br> <br>//      Fixed&amp; operator  =(Fixed a) {fx  = a.fx; return *this;} <br>        Fixed&amp; operator +=(Fixed a) {fx += a.fx; return *this;} <br>        Fixed&amp; operator -=(Fixed a) {fx -= a.fx; return *this;} <br>        Fixed&amp; operator *=(Fixed a) {fx  = fixed_mul(fx,a.fx); return *this;} <br>        Fixed&amp; operator /=(Fixed a) {fx  = fixed_div(fx,a.fx); return *this;} <br>}; </code></pre>
<p>&nbsp;</p></body>
</HTML>
