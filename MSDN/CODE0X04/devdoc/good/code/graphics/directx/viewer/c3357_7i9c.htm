<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>COLOR.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context3360"></a>COLOR.CPP</h2>
<pre><code>/*========================================================================== <br> * <br> *  Copyright (C) 1995, 1996 Microsoft Corporation. All Rights Reserved. <br> * <br> *  File: color.cpp <br> * <br> ***************************************************************************/ <br> <br>#include &lt;d3drmwin.h&gt; <br>#include "viewer.h" <br>#include &lt;windows.h&gt; <br>#include &lt;string.h&gt; <br>#include &lt;commdlg.h&gt; <br>#include &lt;d3drm.h&gt; <br> <br>static DWORD dwNewAlpha; <br> <br>VOID <br>setAlphaDialog(HWND hdlg, DWORD dwVal) <br>{ <br>    TCHAR szVal[5]; <br> <br>    wsprintf(szVal, "%d", dwVal); <br>    SendDlgItemMessage(hdlg, COLOR_ALPHA, EM_SETSEL, <br>       (WPARAM)0, (LPARAM)-1); <br>    SendDlgItemMessage(hdlg, COLOR_ALPHA, EM_REPLACESEL, <br>       (WPARAM)FALSE, (LPARAM)szVal); <br>} <br> <br>#define COLOR_OK0 <br>#define COLOR_BADVAL1 <br>#define COLOR_NONEWVAL2 <br> <br>DWORD <br>getAlphaFromDialog(HWND hdlg, LPDWORD pdwAlpha) <br>{ <br>    WORD cchAlpha; <br>    TCHAR szAlpha[5]; <br>    TCHAR* pszStop; <br>    DWORD dwAlpha; <br> <br>    cchAlpha = (WORD)SendDlgItemMessage(hdlg, COLOR_ALPHA, <br>EM_LINELENGTH, <br>(WPARAM)0, (LPARAM)0); <br>    if (cchAlpha &gt; 3) <br>    { <br>return (COLOR_BADVAL); <br>    } <br> <br>    if (cchAlpha == 0) <br>    { <br>return (COLOR_NONEWVAL); <br>    } <br> <br>    *szAlpha = (char)cchAlpha; <br>    SendDlgItemMessage(hdlg, COLOR_ALPHA, EM_GETLINE, <br>       (WPARAM)0, (LPARAM)szAlpha); <br>    szAlpha[cchAlpha] = '\0'; <br>    pszStop = &amp;szAlpha[cchAlpha]; <br>    dwAlpha = strtoul(szAlpha, &amp;pszStop, 10); <br>    if (dwAlpha &gt; 255) <br>    { <br>return (COLOR_BADVAL); <br>    } <br> <br>    *pdwAlpha = dwAlpha; <br> <br>    return (COLOR_OK); <br>} <br> <br>UINT APIENTRY CCHookProc(HWND hdlg, UINT uiMsg, WPARAM wParam, LPARAM lParam) <br>{ <br>    DWORD dwAlpha; <br>    DWORD dwRet; <br> <br>    switch (uiMsg) <br>    { <br>case WM_INITDIALOG: <br>    setAlphaDialog(hdlg, dwNewAlpha); <br>    break; <br> <br>case WM_COMMAND: <br>    if (wParam == IDOK) <br>    { <br>/* <br> * Get the Alpha Value <br> */ <br>dwRet = getAlphaFromDialog(hdlg, &amp;dwAlpha); <br>switch (dwRet) <br>{ <br>    case COLOR_NONEWVAL: <br>    break; <br>    case COLOR_OK: <br>    dwNewAlpha = dwAlpha; <br>break; <br>    case COLOR_BADVAL: <br>setAlphaDialog(hdlg, dwNewAlpha); <br>break; <br>} <br>    } <br> <br>    break; <br>    } <br> <br>    return 0; /* Always give default behaviour */ <br>} <br> <br> <br>int ChooseNewColor(HWND win, D3DCOLOR* current) <br>{ <br>    CHOOSECOLOR cc; <br>    COLORREF clr; <br>    COLORREF aclrCust[16]; <br>    int i; <br> <br>    for (i = 0; i &lt; 16; i++) <br>aclrCust[i] = RGB(255, 255, 255); <br> <br>    clr = <br>RGB <br>(   (int) (255 * D3DRMColorGetRed(*current)), <br>    (int) (255 * D3DRMColorGetGreen(*current)), <br>    (int) (255 * D3DRMColorGetBlue(*current)) <br>); <br> <br>    memset(&amp;cc, 0, sizeof(CHOOSECOLOR)); <br>    cc.lStructSize = sizeof(CHOOSECOLOR); <br>    cc.hwndOwner = win; <br>    cc.hInstance = (HWND)GetWindowLong(win, GWL_HINSTANCE); <br>    cc.rgbResult = clr; <br>    cc.lpCustColors = aclrCust; <br>    cc.Flags = CC_RGBINIT|CC_FULLOPEN|CC_ENABLETEMPLATE|CC_ENABLEHOOK; <br>    cc.lpfnHook = CCHookProc; <br>    cc.lpTemplateName = "ViewerChooseColor"; <br>    dwNewAlpha = (DWORD) (255 * D3DRMColorGetAlpha(*current)); <br> <br>    if (ChooseColor(&amp;cc)) <br>    {*current = <br>    D3DRMCreateColorRGBA <br>    (D3DVAL(GetRValue(cc.rgbResult) / D3DVAL(255.0)), <br>D3DVAL(GetGValue(cc.rgbResult) / D3DVAL(255.0)), <br>D3DVAL(GetBValue(cc.rgbResult) / D3DVAL(255.0)), <br>D3DVAL(dwNewAlpha / D3DVAL(255.0)) <br>    ); <br>return TRUE; <br>    } <br>    else return FALSE; <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
