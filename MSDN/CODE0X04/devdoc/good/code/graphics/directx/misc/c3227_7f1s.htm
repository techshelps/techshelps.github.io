<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RMFULL.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context3250"></a>RMFULL.H</h2>
<pre><code>/* <br> *  Copyright (C) 1995, 1996 Microsoft Corporation. All Rights Reserved. <br> * <br> *  File: rmfull.h <br> * <br> */ <br>#ifndef __RMFULL_H__ <br>#define __RMFULL_H__ <br> <br>#include &lt;windows.h&gt; <br>#include &lt;windowsx.h&gt; <br>#include &lt;stdio.h&gt; <br>#include &lt;string.h&gt; <br>#include &lt;time.h&gt; <br>#include &lt;search.h&gt; <br>#include &lt;ddraw.h&gt; <br>#include &lt;d3d.h&gt; <br>#include &lt;direct.h&gt; <br>#include &lt;d3drmwin.h&gt; <br>#include "d3dapp.h"    /* prototypes for D3D helper functions */ <br>#include "rmdemo.h"    /* prototypes for functions to commumicate <br>       with each sample */ <br>#include "rmfullrc.h"    /* defines constants used in rmfull.rc */ <br>#define START_WIN_SIZE 320  /* initial size of the window */ <br> <br>#ifdef __cplusplus <br>extern "C" { <br>#endif <br> <br>typedef struct tagrmfullglobals { <br>    HWND hWndMain;    /* application window handle */ <br>    HINSTANCE hInstApp;    /* application instance for dialog boxes */ <br>    LPSTR lpCmdLine;    /* command line parameters */ <br> <br>    LPDIRECT3DRMDEVICE dev;/* Direct3DRM device */ <br>    LPDIRECT3DRMVIEWPORT view;/* Direct3DRM viewport through which we view <br>   the scene */ <br>    LPDIRECT3DRMFRAME scene;    /* Master frame in which others are placed */ <br>    LPDIRECT3DRMFRAME camera;/* Frame describing the users POV */ <br> <br>    BOOL bSingleStepMode; /* render one frame at a time */ <br>    BOOL bDrawAFrame; /* render on this pass of the main loop */ <br>    BOOL bShowFrameRate; /* show the frame rate at the top */ <br>    BOOL bShowInfo; /* show window information at the bottom */ <br> <br>    BOOL bResized; /* the window has resized or some other drastic change, the <br>                      entire client area should be cleared */ <br>    BOOL bQuit;   /* program is about to terminate */ <br> <br>    BOOL bNoTextures;/* this sample doesn't use any textures */ <br>    BOOL bConstRenderQuality;/* this sample is not constructed with <br>   MeshBuilders and so the RenderQuality <br>   cannot be changed */ <br>    D3DRMRENDERQUALITY RenderQuality;/* current shade mode, fill mode and <br>   lighting state */ <br>    D3DRMTEXTUREQUALITY TextureQuality; /* current texture interpolation */ <br>    BOOL bDithering;/* is dithering on? */ <br>    BOOL bAntialiasing;/* is antialiasing on? */ <br> <br>    int mouse_buttons;/* mouse button state */ <br>    int mouse_x;/* mouse cursor x position */ <br>    int mouse_y;/* mouse cursor y position */ <br> <br>    int    CurrDDDriver;   /* Current DirectDraw driver */ <br>    int    NumDDDrivers;   /* Number of DirectDraw drivers */ <br>    D3DAppDDDriver  DDDriver[D3DAPP_MAXDDDRIVERS]; /* DirectDraw drivers information */ <br> <br>    LPDIRECTDRAWSURFACE lpFrameRateBuffer; /* frame rate surface */ <br>    LPDIRECTDRAWSURFACE lpInfoBuffer;   /* window info surface */ <br>} rmfullglobals; <br> <br>void __cdecl Msg( LPSTR fmt, ... ); <br>/* <br> * STATS.CPP FUNCTION PROTOTYPES <br> */ <br>BOOL InitFontAndTextBuffers(void); <br>BOOL WriteInfoBuffer(void); <br>BOOL WriteFrameRateBuffer(float fps, long tps); <br>void ResetFrameRate(void); <br>BOOL CalculateFrameRate(); <br>BOOL DisplayFrameRate(int* count, LPD3DRECT lpExtents ); <br> <br>#ifdef __cplusplus <br>}; <br>#endif <br> <br>#endif // __RMFULL_H__ </code></pre>
<p>&nbsp;</p></body>
</HTML>
