<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DXVIEW.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context3155"></a>DXVIEW.H</h2>
<pre><code>/**************************************************************************** <br> <br>    Copyright (C) 1995-1997 Microsoft Corporation. All Rights Reserved. <br> <br>    DirectX Device Viewer - Common header file <br> <br>****************************************************************************/ <br> <br>#include &lt;windows.h&gt; <br>#ifndef RC_INVOKED <br>#include &lt;windowsx.h&gt; <br>#include &lt;mmsystem.h&gt; <br>#include &lt;commctrl.h&gt; <br>#include &lt;tchar.h&gt; <br> <br>#include &lt;ddraw.h&gt; <br>//#include &lt;mmreg.h&gt; <br>#include &lt;dsound.h&gt; <br>#include &lt;dplay.h&gt; <br>#include &lt;dplobby.h&gt; <br>#include &lt;d3d.h&gt; <br>#include &lt;dinput.h&gt; <br>#endif <br> <br>//================================================================ <br>// Defines <br>//================================================================ <br> <br>// Window Width and Height <br>#define DXView_WIDTH       700 <br>#define DXView_HEIGHT      400 <br> <br>#define DEF_TAB_SIZE        3 <br> <br>// Child controls <br>#define IDC_LV          0x2000 <br>#define IDC_TV          0x2003 <br> <br>// Imagelist first and last icons <br>#define IDI_FIRSTIMAGE  IDI_DIRECTX <br>#define IDI_LASTIMAGE   IDI_CAPSOPEN <br> <br>#define IDC_SPLIT                       100 <br> <br>#define IDD_ABORTPRINTDLG               1001 <br> <br>#define IDM_EXIT                        40001 <br>#define IDM_ABOUT                       40002 <br>#define IDM_VIEWAVAIL                   40003 <br>#define IDM_VIEWALL                     40004 <br>#define IDM_PRINT                       40005 <br>#define IDM_PRINTALL                    40006 <br>#define IDM_PRINTTOFILE                 40007 <br> <br>#define IDI_DIRECTX                     100 <br>#define IDI_CAPS                        101 <br>#define IDI_CAPSOPEN                    102 <br> <br>#define IDS_PRINT_WARNING               1 <br>#define IDS_PRINT_NEEDSELECT            2 <br>#define IDS_PRINT_NOROOT                3 <br> <br>#define TIMER_PERIOD500 <br>//================================================================ <br>// Typedefs <br>//================================================================ <br> <br>typedef struct  <br>{ <br>    HDC         hdcPrint;       // In:      Printer DC <br>    HWND        hTreeWnd;       // In:      tree window <br>    HTREEITEM   hCurrTree;      // In:      current tree item handle <br>    DWORD       dwCharWidth;    // In:      average char width <br>    DWORD       dwLineHeight;   // In:      max line height <br>    DWORD       dwCurrLine;     // In/Out:  curr line position on page <br>    DWORD       dwCharsPerLine; // In:      maximum chars per line (based on avg. char width) <br>    DWORD       dwLinesPerPage; // In:      maximum lines per page <br>    DWORD       dwCurrIndent;   // In:      Current tab setting <br>    BOOL        fStartPage;     // In/Out:  need to a start new page ?!? <br>} PRINTCBINFO; <br> <br>typedef void (*SELCALLBACK)(LPARAM lParam1, LPARAM lParam2); <br>typedef BOOL (*PRINTCALLBACK)(LPARAM lParam1, LPARAM lParam2, PRINTCBINFO * lpInfo); <br> <br>typedef struct <br>{ <br>    SELCALLBACK     Callback; <br>    LPARAM          lParam1; <br>    LPARAM          lParam2; <br>    PRINTCALLBACK   printCallback; <br>} NODEINFO; <br> <br>typedef struct <br>{ <br>    char *  szName;         // name of cap <br>    DWORD   dwOffset;       // offset to cap <br>    DWORD   dwFlag;         // bit flag for cal <br>} CAPDEF; <br> <br>typedef struct <br>{ <br>    char *szName;         // name of cap <br>    SELCALLBACK     Callback; <br>    LPARAM          lParam2; <br>    PRINTCALLBACK   printCallback; <br>} CAPDEFS; <br> <br>typedef struct <br>{ <br>    D3DDEVICEDESC d3dDeviceDesc; <br>    GUID* device;       // DirectDraw device (can be NULL) <br>    GUID  driver;       // Direct3D driver <br>} CAP3DDEVICEDESC; <br> <br>typedef struct <br>{ <br>GUIDguidInstance; <br>DWORDdwRefresh; <br>} LV_INSTANCEGUIDSTRUCT, * LPLV_INSTANCEGUIDSTRUCT; <br> <br>typedef struct LOCALAPP <br>{ <br>struct LOCALAPP *lpNext; <br>GUIDguidApplication; <br>    charszAppNameA[1]; <br>} LOCALAPP, *LPLOCALAPP; <br> <br>typedef struct <br>{ <br>HWNDhwndLV; <br>LPLOCALAPP *lp; <br>} ENUMLOCALAPPSTRUCT, *LPENUMLOCALAPPSTRUCT; <br> <br> <br>//================================================================ <br>// Function prototypes <br>//================================================================ <br> <br>LRESULT CALLBACK WndProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam); <br>LRESULT CALLBACK About(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam); <br> <br>BOOL InitInstance(HINSTANCE hInstance, LPSTR lpCmdLine, int nCmdShow, int iWidth, int iHeight); <br> <br>//================================================================ <br>// DXView treeview/listview helper functions <br>//================================================================ <br> <br>BOOL DXView_OnCreate(HWND hwnd); <br>void DXView_OnCommand(HWND hwnd, WPARAM wParam); <br>void DXView_OnSize(HWND hwnd); <br>void DXView_OnTreeSelect(HWND hwndTV, NM_TREEVIEW *ptv); <br>void DXView_OnListViewDblClick(HWND hwndLV, NM_LISTVIEW *plv); <br>void DXView_Cleanup(void); <br>void DXView_FillTree(HWND hwndTV); <br>BOOL DXView_InitImageList(void); <br>BOOL DXView_OnPrint (HWND hWindow, HWND hTreeView, BOOL fPrintAll); <br>BOOL DXView_OnFile (HWND hWindow, HWND hTreeWnd,BOOL fPrintAll); <br>void LVAddColumn(HWND hwndLV, int i, char *name, int width); <br>int  LVAddText(HWND hwndLV, int col, const char *sz, ...); <br>void LVDeleteAllItems(HWND hwndLV); <br>HTREEITEM TVAddNode(HTREEITEM hParent, char *szText,  <br>                    BOOL fKids, int iImage,  <br>                    SELCALLBACK Callback,  <br>                    LPARAM lParam1, LPARAM lParam2, <br>                    PRINTCALLBACK printCallback); <br>void AddCapsToTV(HTREEITEM hParent, CAPDEFS *pcds, LPARAM lParam1); <br>void AddColsToLV(void); <br>void AddCapsToLV(CAPDEF *pcd, LPVOID pv); <br>void AddMoreCapsToLV(CAPDEF *pcd, LPVOID pv); <br>BOOL PrintCapsToDC(CAPDEF *pcd, LPVOID pv, PRINTCBINFO * lpInfo); <br> <br>// Caps add to ListView callbacks <br>void DDAddCaps(LPARAM lParam1, LPARAM lParam2); <br>void DSAddCaps(LPARAM lParam1, LPARAM lParam2); <br>void DSCAddCaps(LPARAM lParam1, LPARAM lParam2); <br>void DPAddCaps(LPARAM lParam1, LPARAM lParam2); <br>void DPAddLocalApps(LPARAM lParam1, LPARAM lParam2); <br>void D3AddCaps(LPARAM lParam1, LPARAM lParam2); <br>void D3AddLineCaps(LPARAM lParam1, LPARAM lParam2); <br>void D3AddTexF(LPARAM lParam1, LPARAM lParam2); <br>void DDAddVideoModes(LPARAM lParam1, LPARAM lParam2); <br>void DPAddSessions(LPARAM lParam1, LPARAM lParam2); <br>void DDFourCCFormat(LPARAM lParam1, LPARAM lParam2); <br> <br>// Caps Print Callbacks <br>BOOL DDPrintCaps (LPARAM lParam1, LPARAM lParam2, PRINTCBINFO * lpInfo); <br>BOOL DSPrintCaps(LPARAM lParam1, LPARAM lParam2, PRINTCBINFO * lpInfo); <br>BOOL DSCPrintCaps(LPARAM lParam1, LPARAM lParam2, PRINTCBINFO * lpInfo); <br>BOOL DPPrintCaps(LPARAM lParam1, LPARAM lParam2, PRINTCBINFO * lpInfo); <br>BOOL DPPrintLocalApps(LPARAM lParam1, LPARAM lParam2, PRINTCBINFO * lpInfo); <br>BOOL D3PrintCaps(LPARAM lParam1, LPARAM lParam2, PRINTCBINFO * lpInfo); <br>BOOL DDPrintVideoModes(LPARAM lParam1, LPARAM lParam2, PRINTCBINFO * lpInfo); <br>BOOL DPPrintSessions(LPARAM lParam1, LPARAM lParam2, PRINTCBINFO * lpInfo); <br>BOOL DDPrintFourCCFormat(LPARAM lParam1, LPARAM lParam2, PRINTCBINFO * lpInfo); <br> <br>// Printer Helper functions <br>BOOL PrintStartPage (PRINTCBINFO * pci); <br>BOOL PrintEndPage (PRINTCBINFO * pci); <br>BOOL PrintLine (int x, int y, LPCTSTR lpszBuff, DWORD cchBuff, PRINTCBINFO * pci); <br>BOOL PrintNextLine (PRINTCBINFO * pci); <br> <br>//DirectPlay helper functions <br>HRESULT EnumSessions( LPDIRECTPLAY3A lpDP3A ); <br>void RemoveStaleSessions(); <br>void ResetListViewRefresh( HWND hwndLV ); <br> <br>// DirectInput helper functions <br>void DI_FillTree(void); <br> <br>void FreeLocalAppList(); <br>void GetAppName(LPSTR szNameBuffer, LPCGUID lpguidApplication, DWORD dwBufferSize); <br> <br>#ifdef DX_3D <br>HRESULT CALLBACK D3EnumCallback( <br>            LPGUID pid, <br>            LPSTR lpDriverDesc, <br>            LPSTR lpDriverName,  <br>            LPD3DDEVICEDESC lpD3DDeviceDesc1,  <br>            LPD3DDEVICEDESC lpD3DDeviceDesc2,  <br>            LPVOID lpContext); <br>#endif <br> <br>//================================================================ <br>// DXView external variables <br>//================================================================ <br> <br>extern HINSTANCE    g_hInstance; <br>extern HWND         g_hwndLV;        // List view <br>extern HWND         g_hwndTV;        // Tree view </code></pre>
<p>&nbsp;</p></body>
</HTML>
