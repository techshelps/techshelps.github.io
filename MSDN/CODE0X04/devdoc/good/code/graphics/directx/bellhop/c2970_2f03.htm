<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CGRPTREE.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2973"></a>CGRPTREE.H</h2>
<pre><code>#ifndef __CGRPTREE__ <br>#define __CGRPTREE__ <br> <br>#include &lt;windows.h&gt; <br>#include &lt;windowsx.h&gt; <br>#include &lt;commctrl.h&gt; <br>#include &lt;dplay.h&gt; <br>#include &lt;dplobby.h&gt; <br>#include "resource.h" <br> <br>//#DEFINES <br>#define ST_NO_SUBGROUPS0 <br>#define ST_SEARCH_SUBGROUPS1 <br> <br>class CGroupTree; <br> <br>typedef enum {  BT_INVALID = 0, <br>BT_GROUP, <br>BT_SHORTCUT_IN_GROUP, <br>BT_PLAYER_IN_GROUP, <br>BT_PLAYER, <br> } BRANCH_TYPE; <br> <br>typedef struct tagBRANCHSTRUCT <br>{ <br>    DPIDdpid; <br>    BRANCH_TYPEbtType; <br>DWORDdwFlags; <br>} BRANCHSTRUCT, *LPBRANCHSTRUCT; <br> <br>typedef struct tagENUMTREESTRUCT <br>{ <br>    DPIDdpidParent; <br>CGroupTree *lpTree; <br>BOOLbRecursive; <br>} ENUMTREESTRUCT, *LPENUMTREESTRUCT; <br> <br> <br>class CGroupTree{ <br>private: <br>HINSTANCEm_hInst; <br>HWNDm_hwndTreeView; <br>HWNDm_hwndParent; <br>HWNDm_hwndEditCtrl; <br>HIMAGELISTm_hImageList; <br>intm_nStagingAreaImg; <br>intm_nGroupImg; <br>intm_nInGroupImg; <br>intm_nPlayerImg; <br>intm_nShortcutInGroupImg; <br>intm_nSpectatorImg; <br>intm_nSessionInProgressImg; <br>BOOLm_fDragging; <br>BRANCHSTRUCTm_bsParentOfDragging; <br>BRANCHSTRUCTm_bsDragging; <br>BRANCHSTRUCTm_bsDropTarget; <br>HMENUm_hMenu, <br>m_hRootMenu, <br>m_hGroupMenu, <br>m_hPlayerMenu, <br>m_hShortcutMenu, <br>m_hPlayerInGroupMenu; <br>DPIDm_dpidMenuTarget; <br>DPIDm_dpidPlayer; <br>DPIDm_dpidLastGroup; <br> <br>private: <br>HTREEITEM FindItem( HTREEITEM htiSearchRoot,  <br>DPID dpidTarget,  <br>BRANCH_TYPE bt,  <br>DWORD dwSearch ); <br>HTREEITEM Insert(HTREEITEM htiParent,  <br>DPID dpID,  <br>LPSTR lpShortNameA,  <br>BRANCH_TYPE bt, DWORD dwFlags ); <br>HRESULTRecursiveRename(HTREEITEM htiSearchRoot,  <br>DPID dpidTarget,  <br>LPSTR lpszName ); <br>DPIDGetBranchStructOfParent( HTREEITEM htChildItem, LPBRANCHSTRUCT lpbt); <br> <br>public: <br>LPDIRECTPLAY3Am_lpDP3A; <br> <br>public: <br>CGroupTree(); <br>~CGroupTree(); <br> <br>BOOLInit( HWND hWnd, LPDIRECTPLAY3A lpDP3A, DPID dpidPlayer ); <br>HRESULT CreateGroup( DPID dpidGroup,  LPSTR lpszShortNameA, DWORD dwFlags ); <br>HRESULT CreatePlayer( DPID dpidPlayer,  LPSTR lpszShortNameA, DWORD dwFlags ); <br>HRESULT DestroyGroup( DPID dpidGroup ); <br>HRESULT DestroyPlayer( DPID dpidPlayer ); <br>HRESULT CreateGroupInGroup( DPID dpidParentGroup, DPID dpidChildGroup, LPSTR lpszShortNameA, DWORD dwFlags ); <br>HRESULT AddPlayerToGroup(DPID dpidGroup, DPID dpidPlayer, DWORD dwFlags); <br>HRESULT AddGroupToGroup( DPID dpidParentGroup, DPID dpidShortcut, DWORD dwFlags ); <br>HRESULT DeletePlayerFromGroup(DPID dpidGroup, DPID dpidPlayer ); <br>HRESULT DeleteGroupFromGroup( DPID dpidParentGroup, DPID dpidShortcut ); <br>HRESULT GetPlayerName( DPID dpidPlayerName, LPDPNAME * lplpName ); <br>HRESULT GetGroupName( DPID dpidGroupName, LPDPNAME * lplpName ); <br>DPIDGetDPIDOfCurrentSelection(LPBRANCHSTRUCT lpbt = NULL); <br>DPIDGetDPIDOfCurrentSelectionParent( LPBRANCHSTRUCT lpbt = NULL); <br>HRESULTSetPlayerName( DPID dpidPlayer, LPSTR lpszShortName ); <br>HRESULT SetGroupName( DPID dpidPlayer, LPSTR lpszShortName ); <br>HRESULT Refresh( BOOL bRecursive = TRUE ); <br>BOOLUpdate(LPVOID lpvMsg); <br>voidOnBeginDrag(NM_TREEVIEW *lpnmtv);  <br>voidOnMouseMove( LONG xCur, LONG yCur);  <br>voidOnLButtonUp(void);  <br>voidOnRButtonDown( LONG xCur, LONG yCur);  <br>voidOnDblClk( LONG xCur, LONG yCur); <br>voidRedraw(); <br>HRESULTBeginLabelEdit();  <br>voidEndLabelEdit(TV_DISPINFO FAR * lpTVDisp ); <br>BOOLOnWM_NOTIFY( WPARAM wParam, LPARAM lParam ); <br>HRESULTEditLabel(); <br>HRESULT CheckAccessRights(TV_DISPINFO FAR * lpTVDisp = NULL); <br> <br>}; <br> <br>#endif </code></pre>
<p>&nbsp;</p></body>
</HTML>
