<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FDFILTER.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context3171"></a>FDFILTER.H</h2>
<pre><code>#ifndef __FDFILTER_H__ <br>#define __FDFILTER_H__ <br> <br> <br>#include &lt;windows.h&gt; <br>#include &lt;windowsx.h&gt; <br>#include &lt;mmsystem.h&gt; <br>#include &lt;dsound.h&gt; <br>#include &lt;d3dtypes.h&gt; <br> <br>#include "debug.h" <br>#include "resource.h" <br> <br>class CFilter; <br>class CGargle; <br> <br>#define REG_SETTINGS_KEY    TEXT("\\Software\\Microsoft\\DFilter") <br>#define REG_SETTING_INPUTDEVICE    TEXT("InputDevice"); <br>#define REG_SETTING_OUTPUTDEVICE    TEXT("OutputDevice"); <br>#define REG_SETTING_INFORMAT    TEXT("InputFormat"); <br>#define REG_SETTING_OUTFORMAT    TEXT("OutputFormat"); <br> <br>typedef struct tag_dsdevdesc <br>{ <br>    GUID    guDevice;    // Device GUID <br>    PSTR    pszDeviceDesc;    // Description string <br>    struct tag_dsdevdesc *pNext; <br>} DSDEVICEDESC, *PDSDEVICEDESC; <br> <br> <br>typedef struct tag_fd <br>{ <br>    DWORD   dwCode; <br>    BOOL    fEnabled; <br>} FORMATDATA, *PFORMATDATA; <br> <br>#define NUM_FORMATCODES    (16) <br> <br>#define FC_GETFREQCODE(fc)((fc) / 1000) <br>#define FC_GETBITS(fc)((fc) % 100) <br>#define FC_GETCHANNELS(fc)(((fc) % 1000) / 100) <br> <br>#define NUM_BUFFERS(16) <br>#defineNUM_EVENTS_CONTROL(2) <br>#defineNUM_POSNOTIFS(NUM_BUFFERS + 1) <br>#define NUM_EVENTS(NUM_BUFFERS + NUM_EVENTS_CONTROL) <br>#defineiEventReset(NUM_BUFFERS) <br>#defineiEventTerminate(iEventReset + 1) <br> <br>#ifdef __DEFINE_GLOBAL_VARIABLES__ <br> <br>FORMATDATA   aInputFormats[NUM_FORMATCODES] = {{ 8108, TRUE }, { 8208, TRUE }, <br>    { 8116, TRUE }, { 8216, TRUE }, <br>    { 11108, TRUE }, { 11208, TRUE }, <br>    { 11116, TRUE }, { 11216, TRUE }, <br>    { 22108, TRUE }, { 22208, TRUE }, <br>    { 22116, TRUE }, { 22216, TRUE }, <br>    { 44108, TRUE }, { 44208, TRUE }, <br>    { 44116, TRUE }, { 44216, TRUE }}; <br> <br>FORMATDATA   aOutputFormats[NUM_FORMATCODES] = {{ 8108, TRUE }, { 8208, TRUE }, <br>    { 8116, TRUE }, { 8216, TRUE }, <br>    { 11108, TRUE }, { 11208, TRUE }, <br>    { 11116, TRUE }, { 11216, TRUE }, <br>    { 22108, TRUE }, { 22208, TRUE }, <br>    { 22116, TRUE }, { 22216, TRUE }, <br>    { 44108, TRUE }, { 44208, TRUE }, <br>    { 44116, TRUE }, { 44216, TRUE }}; <br> <br>LPDIRECTSOUND    gpds; <br>LPDIRECTSOUNDBUFFER gpdsbPrimary; <br>LPWAVEFORMATEX    gpwfxInput, gpwfxOutput; <br>LPDIRECTSOUNDCAPTUREgpdsc; <br> <br>char    gszAppName[] = "FDFilter"; <br>char    gszAppDescription[] = "Full-Duplex Filter Sample"; <br>HINSTANCE    ghInst; <br>HWND    ghMainWnd; <br> <br>DWORD    gdwOutputFormat, gdwInputFormat, gcbBufferSize; <br>PDSDEVICEDESC    gpdsddOutputDevices, gpdsddOut; <br>PDSDEVICEDESC    gpdsddInputDevices, gpdsddIn; <br> <br>CRITICAL_SECTION    gcsBufferData; <br>LONG    gfBuffersInitialized; <br>LPDIRECTSOUNDBUFFER gpdsbOutput; <br>DSBUFFERDESC    gdsbdOutput; <br>CFilter *    gpFilter; <br> <br>LPDIRECTSOUNDCAPTUREBUFFERgpdscbInput; <br>DSBPOSITIONNOTIFYgrgdsbpn[NUM_POSNOTIFS]; <br>HANDLEgrgEventNotify[NUM_EVENTS]; <br>HANDLEghThread; <br> <br>#else <br> <br>extern FORMATDATA    aInputFormats[], aOutputFormats[]; <br>extern LPDIRECTSOUND    gpds; <br>extern LPDIRECTSOUNDBUFFER  gpdsbPrimary; <br>extern LPWAVEFORMATEX    gpwfxInput, gpwfxOutput; <br>extern LPDIRECTSOUNDCAPTUREgpdsc; <br> <br> <br>extern char    gszAppName[]; <br>extern char    gszAppDescription[]; <br>extern HINSTANCE    ghInst; <br>extern HWND    ghMainWnd; <br> <br>extern DWORD    gdwOutputFormat, gdwInputFormat, gcbBufferSize; <br>extern PDSDEVICEDESC    gpdsddOutputDevices, gpdsddOut; <br>extern PDSDEVICEDESC    gpdsddInputDevices, gpdsddIn; <br> <br>extern CRITICAL_SECTION    gcsBufferData; <br>extern LONG    gfBuffersInitialized; <br>extern LPDIRECTSOUNDBUFFER  gpdsbOutput; <br>extern DSBUFFERDESC    gdsbdOutput; <br>extern CFilter *    gpFilter; <br> <br>extern LPDIRECTSOUNDCAPTUREBUFFERgpdscbInput; <br>extern DSBPOSITIONNOTIFYgrgdsbpn[NUM_POSNOTIFS]; <br>extern HANDLEgrgEventNotify[NUM_EVENTS]; <br>extern HANDLEghThread; <br>#endif <br> <br> <br> <br>int PASCAL WinMain( HINSTANCE, HINSTANCE, LPSTR, int ); <br>BOOL CALLBACK MainDlgProc( HWND, UINT, WPARAM, LPARAM ); <br>BOOL CALLBACK AboutDlgProc( HWND, UINT, WPARAM, LPARAM ); <br>BOOL CALLBACK CancelWarningDlgProc( HWND, UINT, WPARAM, LPARAM ); <br>BOOL CALLBACK SelectDevicesDlgProc( HWND, UINT, WPARAM, LPARAM ); <br>BOOL CALLBACK SelectFormatsDlgProc( HWND, UINT, WPARAM, LPARAM ); <br> <br> <br>void FillFormatListBox( PFORMATDATA, HWND ); <br> <br>#endif// __FDFILTER_H__ <br> <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
