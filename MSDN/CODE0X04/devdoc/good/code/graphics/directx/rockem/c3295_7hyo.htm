<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MIDI.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context3300"></a>MIDI.CPP</h2>
<pre><code>/*========================================================================== <br> * <br> *  Copyright (C) 1995-1997 Microsoft Corporation. All Rights Reserved. <br> * <br> *  File: midi.cpp <br> * <br> ***************************************************************************/ <br> <br>// Includes.... <br>#include "windows.h" <br>#include "midi.h" <br>#include "stdio.h" <br> <br>// Externals.... <br>extern HWNDg_hWnd; <br> <br>//------------------------------------------------------------------ <br>//  <br>// Function: PlayMidi() <br>// <br>// Purpose: Plays a midi file <br>// <br>//------------------------------------------------------------------ <br> <br>BOOL PlayMidi(char *sFileName) <br>{ <br>    char buf[256]; <br> <br>    sprintf(buf, "open %s type sequencer alias MUSIC", sFileName); <br>     <br>    if (mciSendString("close all", NULL, 0, NULL) != 0) <br>    { <br>return(FALSE); <br>    } <br> <br>    if (mciSendString(buf, NULL, 0, NULL) != 0) <br>    { <br>return(FALSE); <br>    } <br> <br>    if (mciSendString("play MUSIC from 0", NULL, 0, g_hWnd) != 0) <br>    { <br>return(FALSE); <br>    } <br>     <br>    // Yahoo! <br>    return TRUE; <br>} <br> <br>//------------------------------------------------------------------ <br>//  <br>// Function: PauseMidi() <br>// <br>// Purpose: Pauses midi file <br>// <br>//------------------------------------------------------------------ <br> <br>BOOL PauseMidi() <br>{ <br>    // Pause if we're not already paused... <br>    if (mciSendString("stop MUSIC", NULL, 0, NULL) != 0) <br>    { <br>return(FALSE); <br>    } <br> <br>     <br>    // Yahoo! <br>    return TRUE; <br>} <br> <br>//------------------------------------------------------------------ <br>//  <br>// Function: ResumeMidi() <br>// <br>// Purpose: Resumes playing of a midi file <br>// <br>//------------------------------------------------------------------ <br> <br>BOOL ResumeMidi() <br>{ <br>    // Resume midi <br>    if (mciSendString("play MUSIC notify", NULL, 0, g_hWnd) != 0) <br>    { <br>return(FALSE); <br>    } <br> <br>    // Yahoo! <br>    return TRUE; <br>} <br> <br>//------------------------------------------------------------------ <br>//  <br>// Function: StopMidi <br>// <br>// Purpose: Stops a midi file playing <br>// <br>//------------------------------------------------------------------ <br> <br>BOOL StopMidi() <br>{ <br>    if (mciSendString("close all", NULL, 0, NULL) != 0) <br>    { <br>return(FALSE); <br>    } <br> <br>    // Yahoo! <br>    return TRUE; <br>} <br> <br>//------------------------------------------------------------------ <br>//  <br>// Function: ReplayMidi() <br>// <br>// Purpose: Replays a midi file <br>// <br>//------------------------------------------------------------------ <br> <br>BOOL ReplayMidi() <br>{ <br>    // Replay midi <br>    if (mciSendString("play MUSIC from 0 notify", NULL, 0, g_hWnd) != 0) <br>    { <br>return(FALSE); <br>    } <br> <br>    // Yahoo! <br>    return TRUE; <br>} <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
