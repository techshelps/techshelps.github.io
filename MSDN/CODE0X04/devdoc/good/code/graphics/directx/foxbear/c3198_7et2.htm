<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GAMEPROC.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context3206"></a>GAMEPROC.H</h2>
<pre><code>/*========================================================================== <br> * <br> *  Copyright (C) 1995-1997 Microsoft Corporation. All Rights Reserved. <br> *  Copyright (C) 1994-1995 ATI Technologies Inc. All Rights Reserved. <br> * <br> *  File:gameproc.h <br> *  Content:include file for game processing info <br> * <br> ***************************************************************************/ <br>#ifndef __GAMEPROC_INCLUDED__ <br>#define __GAMEPROC_INCLUDED__ <br> <br>typedef enum enum_POSITION { <br>    P_ABSOLUTE, <br>    P_RELATIVE, <br>    P_AUTOMATIC <br>} POSITION; <br> <br>typedef enum enum_SWITCHING { <br>    HOR, <br>    VER, <br>    TIME <br>} SWITCHING; <br> <br>typedef enum enum_DIRECTION { <br>    SAME, <br>    RIGHT, <br>    LEFT <br>} DIRECTION; <br> <br>typedef enum enum_ACTION { <br>    NONE, <br>    STILL, <br>    WALK, <br>    RUN, <br>    JUMP, <br>    THROW, <br>    CROUCH, <br>    STOP, <br>    STUNNED, <br>    JUMPTHROW, <br>    CROUCHWALK, <br>    BLURR, <br>    STRIKE, <br>    MISS, <br>    CHEW, <br>} ACTION; <br> <br>typedef SHORT HPOSLIST; <br>typedef BOOL HSURFACELIST; <br> <br>typedef struct struct_HPLANE { <br>    GFX_HBM *hBM; <br>    BOOL    *surface; <br>    LONG     x; <br>    LONG     y; <br>    USHORT   width; <br>    USHORT   height; <br>    LONG     xv; <br>    LONG     xslide; <br>    LONG     xincrem; <br>    USHORT   denom; <br>} HPLANE, FAR *LPHPLANE; <br> <br>typedef struct struct_HSPRITE_BM { <br>    GFX_HBM   hBM; <br>    ACTION    action; <br>    DIRECTION direction; <br>    SHORT     x; <br>    SHORT     y; <br>    USHORT    width; <br>    USHORT    height; <br>} HSPRITE_BM; <br> <br>typedef struct struct_HSPRITE { <br>    HSPRITE_BM *hSBM; <br>    USHORT      bitmapCount; <br>    ACTION      currentAction; <br>    DIRECTION   currentDirection; <br>    USHORT      currentBitmap; <br>    BOOL        active; <br>    LONG        x; <br>    LONG        y; <br>    USHORT      width; <br>    USHORT      height; <br>    LONG        xv; <br>    LONG        yv; <br>    LONG        xa; <br>    LONG        ya; <br>    SHORT       xmax; <br>    SHORT       ymax; <br>    LONG        absSwitch; <br>    LONG        relSwitch; <br>    SWITCHING   switchType; <br>    BOOL        switchForward; <br>    BOOL        switchDone; <br>} HSPRITE, FAR *LPHSPRITE, FAR * FAR *LPLPHSPRITE; <br> <br>typedef struct struct_HBITMAPLIST  <br>{ <br>    GFX_HBM *hBM; <br>} HBITMAPLIST, FAR *LPHBITMAPLIST; <br> <br> <br>#include "tile.h" <br>#include "plane.h" <br>#include "sprite.h" <br> <br>#define C_UNIT        (LONG) 65536     <br> <br>#define C_TILE_W                32 <br>#define C_TILE_H                32 <br>#define C_SCREEN_W             640 <br>#define C_SCREEN_H             480 <br> <br>#define C_FORE_W                80 <br>#define C_FORE_H                15 <br>#define C_MID_W                 40 <br>#define C_MID_H                 15 <br>#define C_BACK_W                25 <br>#define C_BACK_H                15 <br>#define C_WORLD_W               20 <br>#define C_WORLD_H               15  <br> <br>#define C_BACK_DENOM            12 <br>#define C_MID_DENOM              3 <br>#define C_FORE_DENOM             1 <br> <br>#define C_TILETOTAL            123      // TILE BITMAP TOTAL <br>#define C_FBT                  112      // FOX BITMAP TOTAL <br>#define C_BBT                   26      // BEAR BITMAP TOTAL <br> <br>#define C_FOXSTILL               1      // NUMBER OF BITMAPS <br>#define C_FOXWALK               12 <br>#define C_FOXRUN                16 <br>#define C_FOXJUMP                4 <br>#define C_FOXTHROW               2 <br>#define C_FOXCROUCH              1 <br>#define C_FOXSTOP                1 <br>#define C_FOXSTUNNED             1 <br>#define C_FOXJUMPTHROW           2 <br>#define C_FOXCROUCHWALK         12 <br>#define C_FOXBLURR               4 <br> <br>#define C_BEARMISS               2 <br>#define C_BEARWALK              12 <br>#define C_BEARSTRIKE            12 <br> <br> <br>#define C_FOX_XMOVE          (LONG)   C_UNIT / 4 <br> <br>#define C_BOUNDINCREM        (LONG)     5 * C_UNIT <br>#define C_BOUNDDIF           (LONG)   240 * C_UNIT <br> <br>#define C_FOX_STARTX         (LONG)   150 * C_UNIT      <br>#define C_FOX_STARTY         (LONG)   318 * C_UNIT <br> <br>#define C_FOX_WALKMOVE       (LONG)     6 * C_UNIT <br>#define C_FOX_RUNMOVE        (LONG)    18 * C_UNIT <br>#define C_FOX_JUMPMOVE       (LONG)     9 * C_UNIT <br> <br>#define C_FOX_WALKSWITCH     (LONG)     6 * C_UNIT <br>#define C_FOX_JUMPSWITCH     (LONG)     9 * C_UNIT <br>#define C_FOX_THROWSWITCH    (LONG)    15 * C_UNIT <br>#define C_FOX_RUNSWITCH      (LONG)    18 * C_UNIT  <br>#define C_FOX_BLURRSWITCH    (LONG)    18 * C_UNIT  <br> <br>#define C_FOX_WALKTORUN      (LONG)     4 * C_UNIT <br>#define C_FOX_RUNTOBLURR     (LONG)    14 * C_UNIT <br> <br>#define C_BEAR_STARTX        (LONG)   600 * C_UNIT <br>#define C_BEAR_STARTY        (LONG)   329 * C_UNIT <br> <br>#define C_BEAR_WALKMOVE      (LONG)     1 * C_UNIT <br> <br>#define C_BEAR_WALKSWITCH    (LONG)     6 * C_UNIT <br>#define C_BEAR_STRIKESWITCH  (LONG)     8 * C_UNIT <br>#define C_BEAR_MISSSWITCH    (LONG)    10 * C_UNIT <br>  <br> <br>extern void ErrorMessage( LPSTR ); <br>extern BOOL InitBuffer( GFX_HBM* ); <br>extern void DestroyBuffer( GFX_HBM ); <br>extern HBITMAPLIST *LoadBitmaps( void ); <br>extern void InitTiles( HBITMAPLIST**, HBITMAPLIST*, USHORT ); <br>extern void InitPlane( HPLANE**, HPOSLIST**, CHAR*, USHORT, USHORT, USHORT ); <br>extern void InitSurface( HSURFACELIST**, CHAR*, USHORT, USHORT ); <br>extern void InitFox( HSPRITE**, HBITMAPLIST* ); <br>extern void InitBear( HSPRITE**, HBITMAPLIST* ); <br>extern void InitApple( HSPRITE**, HBITMAPLIST* ); <br>extern BOOL PreInitializeGame( void ); <br>extern BOOL InitializeGame( void ); <br>extern BOOL GetInput( void ); <br>extern BOOL ProcessInput ( SHORT input ); <br>extern int NewGameFrame( void ); <br>extern void DestroyGame( void ); <br>#endif </code></pre>
<p>&nbsp;</p></body>
</HTML>
