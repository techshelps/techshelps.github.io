<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SPRITE.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context3213"></a>SPRITE.H</h2>
<pre><code>/*========================================================================== <br> * <br> *  Copyright (C) 1995-1997 Microsoft Corporation. All Rights Reserved. <br> *  Copyright (C) 1994-1995 ATI Technologies Inc. All Rights Reserved. <br> * <br> *  File:sprite.h <br> *  Content:sprite include file <br> * <br> ***************************************************************************/ <br>#ifndef __SPRITE_INCLUDED__ <br>#define __SPRITE_INCLUDED__ <br> <br>HSPRITE  *CreateSprite( USHORT, LONG, LONG, USHORT, USHORT, USHORT, USHORT, SHORT, BOOL ); <br>BOOL      BitBltSprite( HSPRITE*, GFX_HBM, ACTION, DIRECTION, SHORT, SHORT, USHORT, USHORT ); <br>BOOL      SetSpriteAction( HSPRITE*, ACTION, DIRECTION ); <br>ACTION    GetSpriteAction( HSPRITE* ); <br>BOOL      ChangeSpriteDirection( HSPRITE* ); <br>DIRECTION GetSpriteDirection( HSPRITE* ); <br>BOOL      SetSpriteBitmap( HSPRITE*, USHORT ); <br>USHORT    GetSpriteBitmap( HSPRITE* ); <br>BOOL      SetSpriteActive( HSPRITE*, BOOL ); <br>BOOL      GetSpriteActive( HSPRITE* ); <br>BOOL      SetSpriteVelX( HSPRITE*, LONG, POSITION ); <br>LONG      GetSpriteVelX( HSPRITE* ); <br>BOOL      SetSpriteVelY( HSPRITE*, LONG, POSITION ); <br>LONG      GetSpriteVelY( HSPRITE* ); <br>BOOL      SetSpriteAccX( HSPRITE*, LONG, POSITION ); <br>LONG      GetSpriteAccX( HSPRITE* ); <br>BOOL      SetSpriteAccY( HSPRITE*, LONG, POSITION ); <br>LONG      GetSpriteAccY( HSPRITE* ); <br>BOOL      SetSpriteX( HSPRITE*, LONG, POSITION ); <br>LONG      GetSpriteX( HSPRITE* ); <br>BOOL      SetSpriteY( HSPRITE*, LONG, POSITION ); <br>LONG      GetSpriteY( HSPRITE* ); <br>BOOL      SetSpriteSwitch( HSPRITE*, LONG, POSITION ); <br>BOOL      IncrementSpriteSwitch( HSPRITE*, LONG ); <br>BOOL      SetSpriteSwitchType( HSPRITE*, SWITCHING ); <br>SWITCHING GetSpriteSwitchType( HSPRITE* ); <br>BOOL      SetSpriteSwitchForward( HSPRITE*, BOOL ); <br>BOOL      GetSpriteSwitchForward( HSPRITE* ); <br>BOOL      SetSpriteSwitchDone( HSPRITE*, BOOL ); <br>BOOL      GetSpriteSwitchDone( HSPRITE* ); <br>BOOL      DisplaySprite( GFX_HBM, HSPRITE*, LONG ); <br>BOOL      DestroySprite( HSPRITE* ); <br>#endif </code></pre>
<p>&nbsp;</p></body>
</HTML>
