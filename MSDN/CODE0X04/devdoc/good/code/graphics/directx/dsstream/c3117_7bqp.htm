<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DSTRENUM.C</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context3121"></a>DSTRENUM.C</h2>
<pre><code>/*========================================================================== <br> * <br> *  Copyright (C) 1995-1996 Microsoft Corporation. All Rights Reserved. <br> * <br> *  File:   dstrenum.c <br> *  Content:   Illustrates enumerating DirectSound drivers <br> * <br> ***************************************************************************/ <br>#define WIN32_LEAN_AND_MEAN <br>#include &lt;windows.h&gt; <br>#include &lt;windowsx.h&gt; <br>#include &lt;mmsystem.h&gt; <br>#include &lt;dsound.h&gt; <br>#include &lt;memory.h&gt; <br> <br>#include "dsstream.h" <br> <br>extern HINSTANCE hInst; <br>extern HWND      hWndMain; <br> <br> <br> <br>/****************************************************************************/ <br>/* DoDSoundEnumerate()                                                      */ <br>/*                                                                          */ <br>/*   This function takes care of handling the DirectSound enumeration, which*/ <br>/* simply means creating a dialog box, at this point...                     */ <br>/****************************************************************************/ <br>BOOL DoDSoundEnumerate( LPGUID lpGUID ) <br>    { <br>    if( DialogBoxParam( hInst, MAKEINTRESOURCE(IDD_DSENUMBOX), hWndMain, <br>                        DSEnumDlgProc, (LPARAM)lpGUID )) <br>        return( TRUE ); <br> <br>    return( FALSE ); <br>    } <br> <br>/****************************************************************************/ <br>/* DSEnumDlgProc()                                                          */ <br>/*                                                                          */ <br>/*   Dialog procedure for the DSound enumeration choice dialog. Allows the  */ <br>/* user to choose from installed drivers.  Returns TRUE on error.           */ <br>/****************************************************************************/ <br>BOOL CALLBACK DSEnumDlgProc( HWND hDlg, UINT msg, <br>                                WPARAM wParam, LPARAM lParam ) <br>    { <br>    static HWND   hCombo; <br>    static LPGUID lpGUID; <br>    LPGUID        lpTemp; <br>    int           i; <br> <br>    switch( msg ) <br>        { <br>        case WM_INITDIALOG: <br>            hCombo = GetDlgItem( hDlg, IDC_DSENUM_COMBO ); <br>            lpGUID = (LPGUID)lParam; <br> <br>            if( DirectSoundEnumerate( (LPDSENUMCALLBACK)DSEnumProc, &amp;hCombo ) != DS_OK ) <br>                { <br>                EndDialog( hDlg, TRUE ); <br>                return( TRUE ); <br>                } <br>            if( ComboBox_GetCount( hCombo )) <br>                ComboBox_SetCurSel( hCombo, 0 ); <br>            else <br>                { <br>                EndDialog( hDlg, TRUE ); <br>                return( TRUE ); <br>                } <br>            return( TRUE ); <br> <br> <br>        case WM_COMMAND: <br>            switch( LOWORD( wParam )) <br>                { <br>                case IDOK: <br>                    for( i = 0; i &lt; ComboBox_GetCount( hCombo ); i++ ) <br>                        { <br>                        lpTemp = (LPGUID)ComboBox_GetItemData( hCombo, i ); <br>                        if( i == ComboBox_GetCurSel( hCombo )) <br>                            { <br>                            if( lpTemp != NULL ) <br>                                memcpy( lpGUID, lpTemp, sizeof(GUID)); <br>    else <br>        lpGUID = NULL; <br>    } <br>                        if( lpTemp ) <br>                            LocalFree( lpTemp ); <br>                        } <br>                    // If we got the NULL GUID, then we want to open the default <br>                    // sound driver, so return with an error and the init code <br>    // will know not to pass in the guID and will send NULL <br>    // instead. <br>                    if( lpGUID == NULL ) <br>        EndDialog( hDlg, TRUE ); <br>                    else <br>                        EndDialog( hDlg, FALSE ); <br>                    return( TRUE ); <br> <br>                case IDCANCEL: <br>                    // Force a NULL GUID <br>                    EndDialog( hDlg, TRUE ); <br>                    return( TRUE ); <br>                } <br>            break; <br> <br> <br>        default: <br>            return( FALSE ); <br>        } <br> <br>    return( FALSE ); <br>    } <br> <br> <br>/****************************************************************************/ <br>/* DSEnumProc()                                                             */ <br>/*                                                                          */ <br>/*   This is the Enumeration procedure called by DirectSoundEnumerate with  */ <br>/* the parameters of each DirectSound Object available in the system.       */ <br>/****************************************************************************/ <br>BOOL CALLBACK DSEnumProc( LPGUID lpGUID, LPSTR lpszDesc, <br>                                LPSTR lpszDrvName, LPVOID lpContext ) <br>    { <br>    HWND   hCombo = *(HWND *)lpContext; <br>    LPGUID lpTemp = NULL; <br> <br>    if( lpGUID != NULL ) <br>        { <br>        if(( lpTemp = LocalAlloc( LPTR, sizeof(GUID))) == NULL ) <br>    return( TRUE ); <br> <br>        memcpy( lpTemp, lpGUID, sizeof(GUID)); <br>} <br> <br>    ComboBox_AddString( hCombo, lpszDesc ); <br>    ComboBox_SetItemData( hCombo, <br>    ComboBox_FindString( hCombo, 0, lpszDesc ), <br>    lpTemp ); <br>    return( TRUE ); <br>    } </code></pre>
<p>&nbsp;</p></body>
</HTML>
