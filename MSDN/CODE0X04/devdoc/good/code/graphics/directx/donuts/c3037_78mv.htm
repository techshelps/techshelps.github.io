<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>README.TXT</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context3037"></a>README.TXT</h2>
<pre><code>Space Donuts Sample Game <br>------------------ <br> <br>This game demonstrates many of the features of DirectDraw.  It will take <br>advantage of hardware acceleration if it is supported by the driver. <br> <br>Roids defaults to 640x480 at 256 colors.  You may specify a different  <br>resolution and pixel depth on the command line (roids 800x600x16). <br> <br>This program requires less than 1 Meg of video ram.  However, all of its <br>art may not fit in the vram on a 1 Meg rectangular memory card. <br> <br>The commands which this game recognizes are listed on the opening screen. <br> <br>    ESC, F12        - Quit <br>    NUMPAD 4        - Turn left <br>    NUMPAD 6        - Turn right <br>    NUMPAD 5        - Stop moving <br>    NUMPAD 8        - Accelerate forward <br>    NUMPAD 2        - Accelerate backward <br>    SPACEBAR        - Fire <br>    NUMPAD 7        - Shield <br>    ENTER           - Starts game <br>    F5              - toggle frame rate display <br>    F3              - toggle audio <br>    F1              - toggle cheesy trails effect <br> <br>Command line switches: <br> <br>    -e              - Use emulation, not hardware acceleration <br>    -t              - Test mode.  Runs game for you. <br>    -x              - Stress mode.  Never halt if you can help it. <br>    -S              - turn off sound <br>     <br>   These switches may be followed by three option numbers representing: <br>        X resolution <br>        Y resolution <br>        Bits per pixel <br> <br> <br> <br>Sound code <br>---------- <br> <br>The sound code in this application is deliberately designed <br>to be stressful.  For example, each bullet on the screen uses a different <br>sound buffer.  Over 70 sound buffers are created (including duplicates) <br>and 20-25 may be playing at any time.  This could be made much more <br>efficient, but we wanted code to stress our API and mixer. <br> <br>The sounds are implemented using the helper functions in dsutil.h and <br>dsutil.c (found in the sdk\samples\misc directory).  These helper <br>functions may help you to add sound to your application quickly and <br>easily. </code></pre>
<p>&nbsp;</p></body>
</HTML>
