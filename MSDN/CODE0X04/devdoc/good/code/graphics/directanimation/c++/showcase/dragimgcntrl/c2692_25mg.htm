<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DRAGIMG.CPP</title>
<link disabled rel=stylesheet href=../../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2698"></a>DRAGIMG.CPP</h2>
<pre><code>////////////////////////////////////////////////////////////////////////// <br>// <br>//  dragimg.cpp <br>// <br>//  This is the windows application that is used to host the  <br>//  DAViewerControl. <br>// <br>// <br>//  (C) Copyright 1997 by Microsoft Corporation. All rights reserved. <br>// <br>////////////////////////////////////////////////////////////////////////// <br>#define INITGUID <br>#include &lt;windows.h&gt; <br> <br>#include "dactl.h" <br>#include "ctlhost.h" <br>#include "resource.h" <br> <br>#define WINDOW_CLASS    "DRAGGABLE IMAGE" <br>#define WINDOW_TITLE    "DRAGGABLE IMAGE" <br> <br>VARIANT_BOOL fCaptioningOn = FALSE; <br>VARIANT_BOOL fStatusOn = TRUE; <br>VARIANT_BOOL fToolBarOn = TRUE; <br> <br>// Local Function Prototypes <br>HRESULT loadDXAControl(HWND hwnd); <br>LRESULT CALLBACK WndProc(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam); <br> <br>WORD wLastMenuItem; <br>CControlHost *ocHost = NULL;               // oc host <br> <br>////////////////////////////////////////////////////////////////////////// <br>// <br>//  WinMain <br>// <br>int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrev, LPSTR szCmdLine, int iCmdShow) <br>{ <br>    WNDCLASS    wndclass; <br>    MSG         msg; <br>    HWND        hwnd; <br>    OleInitialize(NULL); <br> <br>    wndclass.style              = CS_OWNDC; <br>    wndclass.lpfnWndProc        = WndProc; <br>    wndclass.cbClsExtra         = 0; <br>    wndclass.cbWndExtra         = sizeof(LONG)*4; <br>    wndclass.hInstance          = hInstance; <br>    wndclass.hIcon              = LoadIcon(hInstance, MAKEINTRESOURCE(IDI_ICON1)); <br>    wndclass.hCursor            = LoadCursor(NULL, IDC_ARROW); <br>    wndclass.hbrBackground      = (HBRUSH)GetStockObject(LTGRAY_BRUSH); <br>    wndclass.lpszMenuName       = NULL; <br>    wndclass.lpszClassName      = WINDOW_CLASS; <br> <br>    RegisterClass(&amp;wndclass); <br> <br>    hwnd = CreateWindow(WINDOW_CLASS, <br>                        WINDOW_TITLE, <br>                        WS_OVERLAPPED| <br>                        WS_SYSMENU, <br>                        CW_USEDEFAULT, <br>                        CW_USEDEFAULT, <br>                        300, <br>                        300, <br>                        NULL, <br>                        NULL, <br>                        hInstance, <br>                        NULL); <br> <br>    ocHost = new CControlHost(NULL); <br> <br>    if (!ocHost) <br>        return FALSE; <br> <br>    // Load the control. <br>    if(FAILED(loadDXAControl(hwnd)) ) <br>         return FALSE; <br> <br>    ShowWindow(hwnd, SW_SHOW); <br>    UpdateWindow(hwnd); <br> <br>    while (GetMessage(&amp;msg, NULL, 0, 0)) <br>    { <br>        TranslateMessage(&amp;msg); <br>        DispatchMessage(&amp;msg); <br>    } <br> <br>    OleUninitialize(); <br> <br>    return (msg.wParam); <br>} <br> <br>////////////////////////////////////////////////////////////////////////// <br>HRESULT loadDXAControl(HWND hwnd) <br>{    <br>    ocHost-&gt;SetHwnd(hwnd); <br>    return ocHost-&gt;CreateControl(); <br>} <br> <br>////////////////////////////////////////////////////////////////////////// <br>// <br>//  WndProc <br>// <br>LRESULT CALLBACK WndProc(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam) <br>{ <br>    if(msg == WM_CLOSE || msg == WM_DESTROY) <br>    { <br>        if(ocHost) <br>        { <br>            ocHost-&gt;DeleteControl(); <br>            ocHost = NULL; <br>        } <br>        PostQuitMessage(0); <br>        return (0); <br>    } <br>     <br>    return (DefWindowProc(hwnd, msg, wParam, lParam)); <br>} <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
