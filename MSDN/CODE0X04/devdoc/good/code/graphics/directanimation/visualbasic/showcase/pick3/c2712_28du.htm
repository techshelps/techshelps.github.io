<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PICK3.FRM</title>
<link disabled rel=stylesheet href=../../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2712"></a>PICK3.FRM</h2>
<pre><code>VERSION 5.00 <br>Object = "{34F681D0-3640-11CF-9294-00AA00B8A733}#1.0#0"; "danim.dll" <br>Begin VB.Form Picking  <br>   BorderStyle     =   1  'Fixed Single <br>   Caption         =   "Picking" <br>   ClientHeight    =   4665 <br>   ClientLeft      =   30 <br>   ClientTop       =   270 <br>   ClientWidth     =   5055 <br>   LinkTopic       =   "Form1" <br>   MaxButton       =   0   'False <br>   MinButton       =   0   'False <br>   ScaleHeight     =   4665 <br>   ScaleWidth      =   5055 <br>   StartUpPosition =   3  'Windows Default <br>   Begin DirectAnimationCtl.DAViewerControlWindowed DAViewerControlWindowed  <br>      Height          =   4455 <br>      Left            =   120 <br>      OleObjectBlob   =   "Pick3.frx":0000 <br>      TabIndex        =   0 <br>      Top             =   120 <br>      Width           =   4815 <br>   End <br>End <br>Attribute VB_Name = "Picking" <br>Attribute VB_GlobalNameSpace = False <br>Attribute VB_Creatable = False <br>Attribute VB_PredeclaredId = True <br>Attribute VB_Exposed = False <br>'Pick3 Visual Basic Sample <br>Private Sub Form_Load() <br>  pi = 3.1459 <br> <br>  Dim size As DATransform3 <br>  Set size = Scale3Uniform(0.25) <br> <br>  Dim speed As DANumber <br>  Set speed = DANumber(0.07) <br>   <br>  ' Set up relative paths for media imports.  Does not work in VB <br>  ' debug.  Create executable. <br>  Dim mediaBase, geoBase, imgBase As String <br>  mediaBase = CurDir + "\..\..\..\..\..\Media\" <br>  geoBase = mediaBase + "geometry\" <br>  imgBase = mediaBase + "image\" <br>   <br>  'Import the geometries. <br>  Dim rawCube As DAGeometry <br>  Set rawCube = ImportGeometry(geoBase + "cube.x").Transform(size) <br>   <br>  Dim rawCylinder As DAGeometry <br>  Set rawCylinder = ImportGeometry(geoBase + "cylinder.x").Transform(size) <br>   <br>  Dim rawCone As DAGeometry <br>  Set rawCone = ImportGeometry(geoBase + "cone.x").Transform(size) <br>   <br>  'Import background. <br>  Dim stillSky As DAImage <br>  Set stillSky = ImportImage(imgBase + "cldtile.jpg") <br>   <br>  'Make the geometries pickable. <br>  Set cone1 = activate(rawCone, Green) <br>  Set cube1 = activate(rawCube, Magenta) <br>  Set cube2 = activate(rawCube, ColorHslAnim(Div(LocalTime, DANumber(8)), DANumber(1), DANumber(0.5))) <br>  Set cylinder = activate(rawCylinder, ColorRgb(0.8, 0.4, 0.4)) <br>   <br>  'Construct the final geometry, scale and rotate it. <br>  Set multigeo = UnionGeometry(cone1.Transform(Translate3(0, 1, 0)), _ <br>    UnionGeometry(cube1.Transform(Translate3(0, 0, 1)), _ <br>    UnionGeometry(cube2.Transform(Translate3(0, 0, -1)), cylinder))) <br>     <br>  Set X = Add(DAStatics.Abs(DAStatics.Sin(Mul(LocalTime, _ <br>    DANumber(0.2)))), DANumber(0.5)) <br>  Set Y = Add(DAStatics.Abs(DAStatics.Sin(Mul(LocalTime, _ <br>    DANumber(0.26)))), DANumber(0.5)) <br>  Set Z = Add(DAStatics.Abs(DAStatics.Sin(Mul(LocalTime, _ <br>    DANumber(0.14)))), DANumber(0.5)) <br>      <br>  Set geo = multigeo.Transform(Scale3Anim(X, Y, Z)) <br> <br>  Set maxSky = stillSky.BoundingBox().Max() <br>   <br>  Set tiledSky = stillSky.Tile() <br>  Set movingSky = tiledSky.Transform(Translate2Anim(Mul(LocalTime, _ <br>    Div(maxSky.X, DANumber(8))), Mul(LocalTime, Div(maxSky.X, DANumber(16))))) <br> <br>  Set movingGeoImg = geometryImage(geo.Transform(Compose3(Rotate3Anim(ZVector3, _ <br>    Mul(speed, Mul(LocalTime(), DANumber(1.9)))), _ <br>      Rotate3Anim(YVector3, Mul(speed, Mul(LocalTime(), DANumber(pi)))))), speed) <br>   <br>  Set fs = DefaultFont.size(14).Color(Black) <br>  Set titleIm = StringImage("Left Click on an Object", fs).Transform(Translate2(0, 0.04)) <br>     <br>  DAViewerControlWindowed.UpdateInterval = 0.2 <br>   <br>  'Display the final image. <br>  DAViewerControlWindowed.Image = Overlay(titleIm, Overlay(movingGeoImg, movingSky)) <br>   <br>  'Start the animation. <br>  DAViewerControlWindowed.Start <br>End Sub <br> <br>Function activate(unpickedGeo As DAGeometry, col As DAColor) As DAGeometry <br>  Dim pickGeo As DAPickableResult <br>  Set pickGeo = unpickedGeo.Pickable() <br>   <br>  Dim pickEvent As DAEvent <br>  Set pickEvent = AndEvent(LeftButtonDown, pickGeo.pickEvent) <br>   <br>  Dim numcyc As DANumber <br>  Set numcyc = CreateObject("DirectAnimation.DANumber") <br>  numcyc.Init DAStatics.Until(DANumber(0), pickEvent, DAStatics.Until(DANumber(1), pickEvent, numcyc)) <br>   <br>  Dim colcyc As DAColor <br>  Set colcyc = CreateObject("DirectAnimation.DAColor") <br>  colcyc.Init DAStatics.Until(White, pickEvent, DAStatics.Until(col, pickEvent, colcyc)) <br> <br>  Dim xf As DATransform3 <br>  Set xf = Rotate3Anim(XVector3, Integral(numcyc)) <br>   <br>  Set activate = pickGeo.Geometry.DiffuseColor(colcyc).Transform(xf) <br>End Function <br>Function geometryImage(geo As DAGeometry, speed As DANumber) As DAImage <br>  Dim scaleFactor As DANumber <br>  Set scaleFactor = DANumber(0.02) <br>   <br>  Dim perspTransform As DATransform3 <br>  Set perspTransform = CreateObject("DirectAnimation.DATransform3") <br>    perspTransform.Init DAStatics.Until(Compose3(Rotate3Anim(XVector3, _ <br>      Mul(speed, LocalTime)), Translate3(0, 0, 0.2)), RightButtonDown, _ <br>        DAStatics.Until(Rotate3Anim(XVector3, Mul(speed, LocalTime)), _ <br>          RightButtonDown, perspTransform)) <br> <br>  Set light = UnionGeometry(DirectionalLight.Transform(perspTransform), _ <br>    DirectionalLight) <br>     <br>  Dim strcyl As DAString <br>  Set strcyl = CreateObject("DirectAnimation.DAString") <br>  strcyl.Init DAStatics.Until(DAString("Perspective - Right Click to Switch"), _ <br>    RightButtonDown, DAStatics.Until(DAString("Parallel - Right Click to Switch"), _ <br>      RightButtonDown, strcyl)) <br>       <br>  Dim perspectiveCam As DACamera <br>  Set perspectiveCam = PerspectiveCamera(1, 0).Transform(Compose3(Rotate3Anim(XVector3, _ <br>    Mul(speed, LocalTime)), Translate3(0, 0, 0.2))) <br> <br>  Dim parallelCam As DACamera <br>  Set parallelCam = ParallelCamera(1).Transform(Rotate3Anim(XVector3, _ <br>    Mul(speed, LocalTime))) <br>   <br>  Dim camera As DACamera <br>  Set camera = CreateObject("DirectAnimation.DACamera") <br>  camera.Init DAStatics.Until(perspectiveCam, RightButtonDown, _ <br>    DAStatics.Until(parallelCam, RightButtonDown, camera)) <br>   <br>  Dim fs As DAFontStyle <br>  Set fs = DefaultFont.size(14).Color(Red) <br>   <br>  Dim txtIm, xltTxt As DAImage <br>  Set txtIm = StringImageAnim(strcyl, fs) <br>  Set xltTxt = txtIm.Transform(Translate2(0, -0.045)) <br>     <br>  Set geometryImg = UnionGeometry(geo.Transform(Scale3UniformAnim(scaleFactor)), _ <br>    light).Render(camera) <br>   <br>  Set geometryImage = Overlay(xltTxt, geometryImg) <br>End Function <br></code></pre>
<p>&nbsp;</p></body>
</HTML>
