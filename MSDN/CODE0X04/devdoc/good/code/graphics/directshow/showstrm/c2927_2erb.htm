<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SHOWSTRM.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2927"></a>SHOWSTRM.CPP</h2>
<pre><code>#include &lt;windows.h&gt; <br>#include &lt;stdio.h&gt; <br>#include "ddraw.h" <br>#include "mmstream.h" <br>#include "amstream.h" <br>#include "ddstream.h" <br> <br> <br>#define RELEASE(x) if (x) (x)-&gt;Release(); <br>#define CHECK_ERROR(x)     \ <br>   if (FAILED(hr = (x))) { \ <br>       printf(#x "  failed with HRESULT(0x%8.8X)\n", hr); \ <br>       goto Exit;          \ <br>   } <br> <br> <br>HRESULT OpenMMStream(const char * pszFileName, IDirectDraw *pDD, IMultiMediaStream **ppMMStream) <br>{ <br>    *ppMMStream = NULL; <br>    IAMMultiMediaStream *pAMStream; <br>    HRESULT hr; <br> <br>    CHECK_ERROR(CoCreateInstance(CLSID_AMMultiMediaStream, NULL, CLSCTX_INPROC_SERVER, <br> IID_IAMMultiMediaStream, (void **)&amp;pAMStream)); <br>    CHECK_ERROR(pAMStream-&gt;Initialize(STREAMTYPE_READ, 0, NULL)); <br>    CHECK_ERROR(pAMStream-&gt;AddMediaStream(pDD, &amp;MSPID_PrimaryVideo, 0, NULL)); <br>    CHECK_ERROR(pAMStream-&gt;AddMediaStream(NULL, &amp;MSPID_PrimaryAudio, AMMSF_ADDDEFAULTRENDERER, NULL)); <br> <br>    WCHAR       wPath[MAX_PATH]; <br>    MultiByteToWideChar(CP_ACP, 0, pszFileName, -1, wPath, sizeof(wPath)/sizeof(wPath[0])); <br> <br>    CHECK_ERROR(pAMStream-&gt;OpenFile(wPath, 0)); <br> <br>    *ppMMStream = pAMStream; <br>    pAMStream-&gt;AddRef(); <br> <br>Exit: <br>    if (pAMStream == NULL) { <br>printf("Could not create a CLSID_MultiMediaStream object\n" <br>       "Check you have run regsvr32 amstream.dll\n"); <br>    } <br>    RELEASE(pAMStream); <br>    return hr; <br>} <br> <br> <br> <br> <br>HRESULT RenderStreamToSurface(IDirectDraw *pDD, IDirectDrawSurface *pPrimary, <br>      IMultiMediaStream *pMMStream) <br>{ <br> <br>    HRESULT hr; <br>    IMediaStream *pPrimaryVidStream = NULL; <br>    IDirectDrawMediaStream *pDDStream = NULL; <br>    IDirectDrawSurface *pSurface = NULL; <br>    IDirectDrawStreamSample *pSample = NULL; <br> <br>    RECT rect; <br> <br>    CHECK_ERROR(pMMStream-&gt;GetMediaStream(MSPID_PrimaryVideo, &amp;pPrimaryVidStream)); <br>    CHECK_ERROR(pPrimaryVidStream-&gt;QueryInterface(IID_IDirectDrawMediaStream, (void **)&amp;pDDStream)); <br> <br>    CHECK_ERROR(pDDStream-&gt;CreateSample(NULL, NULL, 0, &amp;pSample)); <br>    CHECK_ERROR(pSample-&gt;GetSurface(&amp;pSurface, &amp;rect)); <br>     <br>    CHECK_ERROR(pMMStream-&gt;SetState(STREAMSTATE_RUN)); <br> <br>    while (true) { <br>if (pSample-&gt;Update(0, NULL, NULL, 0) != S_OK) { <br>    break; <br>} <br>pPrimary-&gt;Blt(&amp;rect, pSurface, &amp;rect, DDBLT_WAIT, NULL); <br>    } <br> <br>Exit: <br>    RELEASE(pPrimaryVidStream); <br>    RELEASE(pDDStream); <br>    RELEASE(pSample); <br>    RELEASE(pSurface); <br> <br>    return hr; <br>} <br> <br> <br>int _cdecl <br>main( <br>    int argc, <br>    char *argv[] <br>    ) <br>{ <br>    if (argc &lt; 2) { <br>printf("Usage : showstrm movie.ext\n"); <br>exit(0); <br>    } <br>    CoInitialize(NULL); <br>    IDirectDraw *pDD; <br> <br>    HRESULT hr = DirectDrawCreate(NULL, &amp;pDD, NULL); <br>    if (SUCCEEDED(hr)) { <br>DDSURFACEDESC ddsd; <br>IDirectDrawSurface *pPrimarySurface; <br> <br>pDD-&gt;SetCooperativeLevel(GetDesktopWindow(), DDSCL_NORMAL); <br> <br>ddsd.dwSize = sizeof(ddsd); <br>ddsd.dwFlags = DDSD_CAPS; <br>ddsd.ddsCaps.dwCaps = DDSCAPS_PRIMARYSURFACE; <br>hr = pDD-&gt;CreateSurface(&amp;ddsd, &amp;pPrimarySurface, NULL); <br>if (SUCCEEDED(hr)) { <br>    IMultiMediaStream *pMMStream; <br>    hr = OpenMMStream(argv[1], pDD, &amp;pMMStream); <br>    if (SUCCEEDED(hr)) { <br>RenderStreamToSurface(pDD, pPrimarySurface, pMMStream); <br>pMMStream-&gt;Release(); <br>    } <br>    pPrimarySurface-&gt;Release(); <br>} <br>pDD-&gt;Release(); <br>    } else { <br>printf("Could not open DirectDraw - check it is installed\n"); <br>    } <br>    CoUninitialize(); <br>    return 0; <br>} <br></code></pre>
<p>&nbsp;</p></body>
</HTML>
