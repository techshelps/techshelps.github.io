<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MFCVW.CPP</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2907"></a>MFCVW.CPP</h2>
<pre><code>//==========================================================================; <br>// <br>//  THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY <br>//  KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE <br>//  IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR <br>//  PURPOSE. <br>// <br>//  Copyright (c) 1992 - 1997  Microsoft Corporation.  All Rights Reserved. <br>// <br>//--------------------------------------------------------------------------; <br>// <br>// playvw.cpp : implementation of the CPlayerView class <br>// <br> <br>#include "stdafx.h" <br>#include "mfcplay.h" <br> <br>#include "mfcdoc.h" <br>#include "mfcvw.h" <br> <br>#ifdef _DEBUG <br>#undef THIS_FILE <br>static char BASED_CODE THIS_FILE[] = __FILE__; <br>#endif <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CPlayerView <br> <br>IMPLEMENT_DYNCREATE(CPlayerView, CView) <br> <br>BEGIN_MESSAGE_MAP(CPlayerView, CView) <br>//{{AFX_MSG_MAP(CPlayerView) <br>// NOTE - the ClassWizard will add and remove mapping macros here. <br>//    DO NOT EDIT what you see in these blocks of generated code! <br>//}}AFX_MSG_MAP <br>END_MESSAGE_MAP() <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CPlayerView construction/destruction <br> <br>CPlayerView::CPlayerView() <br>{ <br>// TODO: add construction code here <br> <br>} <br> <br>CPlayerView::~CPlayerView() <br>{ <br>} <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CPlayerView drawing <br> <br>void CPlayerView::OnDraw(CDC* pDC) <br>{ <br>CPlayerDoc* pDoc = GetDocument(); <br>ASSERT_VALID(pDoc); <br> <br>// TODO: add draw code for native data here <br>} <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CPlayerView diagnostics <br> <br>#ifdef _DEBUG <br>void CPlayerView::AssertValid() const <br>{ <br>CView::AssertValid(); <br>} <br> <br>void CPlayerView::Dump(CDumpContext&amp; dc) const <br>{ <br>CView::Dump(dc); <br>} <br> <br>CPlayerDoc* CPlayerView::GetDocument() // non-debug version is inline <br>{ <br>ASSERT(m_pDocument-&gt;IsKindOf(RUNTIME_CLASS(CPlayerDoc))); <br>return (CPlayerDoc*)m_pDocument; <br>} <br>#endif //_DEBUG <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CPlayerView message handlers </code></pre>
<p>&nbsp;</p></body>
</HTML>
