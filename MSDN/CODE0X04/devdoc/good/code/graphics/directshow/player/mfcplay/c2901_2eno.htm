<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MFCDOC.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2904"></a>MFCDOC.H</h2>
<pre><code>//==========================================================================; <br>// <br>//  THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY <br>//  KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE <br>//  IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR <br>//  PURPOSE. <br>// <br>//  Copyright (c) 1992 - 1997  Microsoft Corporation.  All Rights Reserved. <br>// <br>//--------------------------------------------------------------------------; <br>// <br>// playdoc.h : interface of the CPlayerDoc class <br>// <br>///////////////////////////////////////////////////////////////////////////// <br> <br>class CPlayerDoc : public CDocument <br>{ <br>protected: // create from serialization only <br>CPlayerDoc(); <br>DECLARE_DYNCREATE(CPlayerDoc) <br> <br>    BOOL CreateFilterGraph( void ); <br>    void DeleteContents( void ); <br> <br>// Event handles <br>protected: <br>    HANDLE m_hGraphNotifyEvent; <br>public: <br>    HANDLE GetGraphEventHandle( ) { return m_hGraphNotifyEvent; }; <br>    void OnGraphNotify(); <br> <br>// Attributes <br>public: <br>    enum {Uninitialized, Stopped, Paused, Playing } m_State; <br> <br>    IGraphBuilder *m_pGraph; <br> <br>    BOOL CanPlay(){ return m_State==Stopped || m_State==Paused; }; <br>    BOOL CanStop(){ return m_State==Playing || m_State==Paused; }; <br>    BOOL CanPause(){return m_State==Playing || m_State==Stopped; }; <br>    BOOL IsInitialized(){ return m_State!=Uninitialized; } <br> <br>// Operations <br>public: <br> <br>// Overrides <br>// ClassWizard generated virtual function overrides <br>//{{AFX_VIRTUAL(CPlayerDoc) <br>public: <br>virtual BOOL OnOpenDocument(LPCTSTR lpszPathName); <br>//}}AFX_VIRTUAL <br> <br>// Implementation <br>public: <br>virtual ~CPlayerDoc(); <br>#ifdef _DEBUG <br>virtual void AssertValid() const; <br>virtual void Dump(CDumpContext&amp; dc) const; <br>#endif <br> <br>protected: <br> <br>// Generated message map functions <br>protected: <br> <br>        // just stop the graph (if aborting). Normal stop will <br>        // rewind <br>        void OnAbortStop(); <br> <br>//{{AFX_MSG(CPlayerDoc) <br>afx_msg void OnUpdateMediaPlay(CCmdUI* pCmdUI); <br>afx_msg void OnUpdateMediaPause(CCmdUI* pCmdUI); <br>afx_msg void OnUpdateMediaStop(CCmdUI* pCmdUI); <br>afx_msg void OnMediaPlay(); <br>afx_msg void OnMediaPause(); <br>afx_msg void OnMediaStop(); <br>//}}AFX_MSG <br>DECLARE_MESSAGE_MAP() <br> <br> <br>}; <br> <br> <br>///////////////////////////////////////////////////////////////////////////// </code></pre>
<p>&nbsp;</p></body>
</HTML>
