<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUILDER.FRM</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2936"></a>BUILDER.FRM</h2>
<pre><code>VERSION 5.00 <br>Object = "{F9043C88-F6F2-101A-A3C9-08002B2F49FB}#1.1#0"; "COMDLG32.OCX" <br>Begin VB.Form frmMain  <br>   Caption         =   "Filter and Pin Viewer" <br>   ClientHeight    =   6060 <br>   ClientLeft      =   1245 <br>   ClientTop       =   1935 <br>   ClientWidth     =   7230 <br>   LinkTopic       =   "frmMain" <br>   PaletteMode     =   1  'UseZOrder <br>   ScaleHeight     =   6060 <br>   ScaleWidth      =   7230 <br>   Begin VB.Frame frameFilter  <br>      Caption         =   "Filter Graph" <br>      Height          =   2652 <br>      Left            =   120 <br>      TabIndex        =   12 <br>      Top             =   120 <br>      Width           =   6972 <br>      Begin VB.CommandButton cmdSource  <br>         Caption         =   "Add &amp;Source Filter..." <br>         Height          =   372 <br>         Left            =   4560 <br>         TabIndex        =   14 <br>         Top             =   2160 <br>         Width           =   1572 <br>      End <br>      Begin VB.ListBox listFilters  <br>         Height          =   1425 <br>         Left            =   3960 <br>         TabIndex        =   4 <br>         Top             =   480 <br>         Width           =   2775 <br>      End <br>      Begin VB.CommandButton cmdAddRegFilter  <br>         Caption         =   "&amp;Add -&gt;" <br>         Height          =   372 <br>         Left            =   3120 <br>         TabIndex        =   13 <br>         Top             =   600 <br>         Width           =   732 <br>      End <br>      Begin VB.ListBox listRegFilters  <br>         Height          =   1425 <br>         Left            =   240 <br>         TabIndex        =   2 <br>         Top             =   480 <br>         Width           =   2775 <br>      End <br>      Begin VB.Label lblFilters  <br>         Caption         =   "Filters in current filter &amp;graph" <br>         Height          =   252 <br>         Left            =   3960 <br>         TabIndex        =   3 <br>         Top             =   240 <br>         Width           =   2052 <br>      End <br>      Begin VB.Label lblRegFilters  <br>         Caption         =   "&amp;Registered filters" <br>         Height          =   252 <br>         Left            =   240 <br>         TabIndex        =   1 <br>         Top             =   240 <br>         Width           =   2052 <br>      End <br>   End <br>   Begin VB.Frame framePinInfo  <br>      Caption         =   "Filter" <br>      Height          =   3132 <br>      Left            =   120 <br>      TabIndex        =   0 <br>      Top             =   2760 <br>      Width           =   6972 <br>      Begin VB.TextBox txtPinInfo  <br>         Height          =   1812 <br>         Left            =   3720 <br>         MultiLine       =   -1  'True <br>         ScrollBars      =   2  'Vertical <br>         TabIndex        =   17 <br>         Text            =   "builder.frx":0000 <br>         Top             =   1200 <br>         Width           =   3012 <br>      End <br>      Begin VB.CommandButton cmdConnect  <br>         Caption         =   "Co&amp;nnect One Pin..." <br>         Height          =   372 <br>         Left            =   1920 <br>         TabIndex        =   8 <br>         Top             =   2640 <br>         Width           =   1692 <br>      End <br>      Begin VB.CommandButton cmdRender  <br>         Caption         =   "&amp;Connect Downstream" <br>         Height          =   372 <br>         Left            =   120 <br>         TabIndex        =   7 <br>         Top             =   2640 <br>         Width           =   1692 <br>      End <br>      Begin VB.ListBox listPins  <br>         Height          =   1230 <br>         Left            =   240 <br>         TabIndex        =   6 <br>         Top             =   1200 <br>         Width           =   3255 <br>      End <br>      Begin VB.Label lblFilterName  <br>         Height          =   255 <br>         Left            =   1440 <br>         TabIndex        =   16 <br>         Top             =   240 <br>         Width           =   4815 <br>      End <br>      Begin VB.Label lblFilter  <br>         Caption         =   "Filter name:" <br>         Height          =   255 <br>         Left            =   240 <br>         TabIndex        =   15 <br>         Top             =   240 <br>         Width           =   975 <br>      End <br>      Begin VB.Label lblVendor  <br>         Caption         =   "Vendor: " <br>         Height          =   255 <br>         Left            =   240 <br>         TabIndex        =   11 <br>         Top             =   480 <br>         Width           =   735 <br>      End <br>      Begin VB.Label lblVendorInfo  <br>         Height          =   255 <br>         Left            =   1440 <br>         TabIndex        =   10 <br>         Top             =   480 <br>         Width           =   4935 <br>      End <br>      Begin VB.Label lblPinListbox  <br>         Caption         =   "&amp;Pins in selected filter" <br>         Height          =   255 <br>         Left            =   240 <br>         TabIndex        =   5 <br>         Top             =   840 <br>         Width           =   2055 <br>      End <br>      Begin VB.Label lblPinInfo  <br>         Caption         =   "Information for selected pin" <br>         Height          =   252 <br>         Left            =   3720 <br>         TabIndex        =   9 <br>         Top             =   840 <br>         Width           =   2172 <br>      End <br>   End <br>   Begin MSComDlg.CommonDialog CommonDialog1  <br>      Left            =   8760 <br>      Top             =   -120 <br>      _ExtentX        =   847 <br>      _ExtentY        =   847 <br>      _Version        =   327680 <br>      Flags           =   4096 <br>   End <br>   Begin VB.Menu mnuFilterGraph  <br>      Caption         =   "&amp;FilterGraph" <br>      Begin VB.Menu mnu_FilterGraphNew  <br>         Caption         =   "&amp;New (empty)" <br>      End <br>      Begin VB.Menu mnu_FilterGraphGenerate  <br>         Caption         =   "&amp;Generate from input file..." <br>      End <br>      Begin VB.Menu mnu_Separator1  <br>         Caption         =   "-" <br>      End <br>      Begin VB.Menu mnu_FilterGraphRun  <br>         Caption         =   "&amp;Run" <br>      End <br>      Begin VB.Menu mnu_FilterGraphPause  <br>         Caption         =   "&amp;Pause" <br>      End <br>      Begin VB.Menu mnu_FilterGraphStop  <br>         Caption         =   "&amp;Stop" <br>      End <br>      Begin VB.Menu mnu_Separator2  <br>         Caption         =   "-" <br>      End <br>      Begin VB.Menu mnu_FilterGraphExit  <br>         Caption         =   "E&amp;xit" <br>      End <br>   End <br>   Begin VB.Menu mnu_Options  <br>      Caption         =   "&amp;Options" <br>      Begin VB.Menu mnu_BuildCustomGraph  <br>         Caption         =   "&amp;Build custom graph" <br>      End <br>   End <br>End <br>Attribute VB_Name = "frmMain" <br>Attribute VB_GlobalNameSpace = False <br>Attribute VB_Creatable = False <br>Attribute VB_PredeclaredId = True <br>Attribute VB_Exposed = False <br>' global variables <br>' use the prefix "g_obj" to indicate a global object <br>Dim g_objMC As IMediaControl ' object  'IMediaControl <br>Dim g_objSelFilter As Object 'IFilterInfo <br>Dim g_objRegFilters As Object ' IFilterInfo collection <br>Dim g_objLocalRegFilter As Object ' IFilterInfo <br>Dim g_objSelPin As Object  ' IPinInfo; pin selected from listbox <br>Dim g_fRunning As Boolean  ' indicates whether the video is running or not <br> <br>Private Sub RefreshRegFilters() <br>' update the listbox of registered filters <br>' using the global variable g_objRegFilters <br>    Dim filter As IRegFilterInfo <br>    listRegFilters.Clear <br>    If Not g_objRegFilters Is Nothing Then <br>        For Each filter In g_objRegFilters <br>            listRegFilters.AddItem filter.Name <br>        Next filter <br>    End If <br>    If listRegFilters.ListCount &gt; 0 Then <br>        listRegFilters.ListIndex = 0  ' select first in list <br>    End If <br>End Sub <br> <br>Private Sub AddFilter(FName As String, f As IFilterInfo) <br>' call IRegFilterInfo::filter <br>    Dim LocalRegFilters As Object <br>     <br>    Set LocalRegFilters = g_objMC.RegFilterCollection <br>    Dim filter As IRegFilterInfo <br>    For i = 0 To (LocalRegFilters.Count - 1) Step 1 <br>        LocalRegFilters.Item i, filter <br>        If filter.Name = FName Then <br>            filter.filter f <br>            Exit For <br>        End If <br>    Next i <br>    RefreshFilters <br> <br>End Sub <br> <br>Private Sub cmdAddRegFilter_Click() <br>' IMediaControl property RegFilterCollection is an <br>' an IAMCollection interface <br>    Dim filter As IRegFilterInfo <br>    For Each filter In g_objRegFilters ' listRegFilters <br>        If filter.Name = listRegFilters.Text Then <br>            Dim f As IFilterInfo <br>            filter.filter f <br>            If f.IsFileSource Then <br>               CommonDialog1.ShowOpen <br>               ' handle user cancel <br>               f.filename = CommonDialog1.filename <br>            End If <br>            Exit For <br>        End If <br>    Next filter <br> <br>    ' Set frmRegFilters = g_objMC.RegFilterCollection <br>    RefreshFilters <br>End Sub <br> <br> <br> <br>Private Sub cmdConnect_Click() <br>' connects the current selected pin, indicated by <br>' g_objSelPin , g_objMC, and g_objSelFilter <br>    On Error Resume Next ' if already connected, connect fails <br>    frmSelectPin.OtherDir = g_objSelPin.Direction <br>    Set frmSelectPin.g_objMC = g_objMC <br>    Set frmSelectPin.g_objFI = g_objSelFilter <br>    frmSelectPin.RefreshFilters <br>    frmSelectPin.Show 1 <br>    If frmSelectPin.bOK Then <br>        Dim objPI As IPinInfo <br>        Set objPI = frmSelectPin.g_objPI <br>        g_objSelPin.Connect objPI <br>        RefreshFilters  ' sub in this VB app that updates display <br>    End If <br>End Sub <br> <br> <br> <br> <br> <br> <br> <br>Private Sub Form_Load() <br>' initialize the display <br>    listFilters.Clear <br>    listPins.Clear <br>    txtPinInfo.Text = "" <br>' create the global object used throughout the app <br>    Set g_objMC = New FilgraphManager <br>' update the display for registered filters <br>    Set g_objRegFilters = g_objMC.RegFilterCollection <br>    RefreshRegFilters <br>End Sub <br> <br> <br> <br> <br>Private Sub cmdRender_Click() <br>' call IPinInfo::Render <br>' complete the graph downstream from this pin <br>    On Error Resume Next  ' if already connected, this fails <br>    g_objSelPin.Render <br>    RefreshFilters <br>End Sub <br> <br> <br> <br> <br>Private Sub cmdSource_Click() <br>' calls IMediaControl::AddSourceFilter <br>' adds to the graph the source filter that can read the given filename <br>' Returns an IFilterInfo object. <br> <br>    Dim objFilter As Object  ' tmp object for valid syntax; not used here <br>     <br>    On Error GoTo cmdsourceclick_cancelerror <br>    CommonDialog1.CancelError = True <br>    CommonDialog1.filter = "ActiveMovie files (*.mpg;*.avi;*.mov)|*.mpg;*.avi;*.mov|" <br>    CommonDialog1.ShowOpen  ' open the source filter <br>    g_objMC.AddSourceFilter CommonDialog1.filename, objFilter <br>     <br>    ' we don't actually use the returned IFilterInfo object here... <br>     <br>    RefreshFilters  ' update all info displayed by this VB app <br>    ' the app displays filters, pins, and detailed pin info <br>    Exit Sub <br> <br>cmdsourceclick_cancelerror: <br>    ' user canceled out of the Open File dialog; just exit <br>    Exit Sub <br>End Sub <br> <br> <br> <br> <br>Public Sub RefreshFilters() <br>' update the contents of the "Filters" combo box <br>' using the current IMediaControl.FilterCollection <br>    Dim objFI As IFilterInfo <br>     <br>    listFilters.Clear <br>    For Each objFI In g_objMC.FilterCollection <br>        listFilters.AddItem objFI.Name <br>    Next objFI <br>     <br>    If listFilters.ListCount &gt; 0 Then <br>        listFilters.ListIndex = 0  ' select first in list <br>    End If <br>End Sub <br> <br> <br>Private Sub listFilters_Click() <br>' user clicked on a filter in the filters combo box <br>' or entry 0 was selected by default when filling the <br>' "listFilters" listbox <br>' update the pins listbox to show all of its pins <br>    Dim objFI As IFilterInfo <br>    For Each objFI In g_objMC.FilterCollection <br>        If objFI.Name = listFilters.Text Then <br>            Set g_objSelFilter = objFI <br>            lblFilterName.Caption = objFI.Name <br>            lblVendorInfo.Caption = objFI.VendorInfo <br>            ' add all of this filter's pins to the combo box <br>            listPins.Clear <br>            Dim objPI As IPinInfo <br>            For Each objPI In objFI.Pins <br>                listPins.AddItem objPI.Name <br>            Next objPI <br>        End If <br>    Next objFI   ' next filter info <br>    listPins.ListIndex = 0  ' select the first in the combobox <br> <br>End Sub <br> <br>Private Sub listPins_Click() <br>' Add detailed pin information to the listbox on the right <br>' when the user clicks on a pin in the listbox on the left <br>  Dim strTemp As String <br>  On Error Resume Next <br>  Dim objPin As IPinInfo <br>  For Each objPin In g_objSelFilter.Pins <br>    If objPin.Name = listPins.Text Then ' selected in listbox? <br>      Set g_objSelPin = objPin  'yes, get all info <br>      strTemp = "" <br>      Dim objPinOther As IPinInfo <br>      Set objPinOther = objPin.ConnectedTo <br>      If Err.Number = 0 Then <br>        strTemp = "Connected to pin: " + objPinOther.Name + " " <br>        Dim objPeer As IFilterInfo <br>        Set objPeer = objPinOther.FilterInfo <br>        strTemp = strTemp + " on filter: " + objPeer.Name + " " <br>        Dim objMTI As IMediaTypeInfo <br>        Set objMTI = objPin.ConnectionMediaType <br>        strTemp = strTemp + vbCrLf + "Media Type: " + objMTI.Type <br>      End If <br>      If objPin.Direction = 0 Then <br>        strTemp = strTemp + " " + vbCrLf + "Direction: Input" <br>      Else <br>        strTemp = strTemp + " " + vbCrLf + "Direction: Output" <br>      End If <br>    txtPinInfo.Text = strTemp <br>    End If <br>  Next objPin <br>  Exit Sub <br>  <br>End Sub <br> <br> <br>Private Sub listRegFilters_DblClick() <br>    cmdAddRegFilter_Click <br>End Sub <br> <br> <br>Private Sub mnu_BuildCustomGraph_Click() <br> <br>' This routine demonstrates a likely common use <br>' of these methods in Visual Basic applications: <br>' Directly creating the filter graph needed <br>' for a specific multimedia file. <br> <br>' The graph has the following filters: AVI Source, AVI Decompressor, <br>' Video Renderer, AVI Splitter, and Audio Renderer. <br>' Note that these filters can be connected by reusing just <br>' two pin object variables, but for clarity of the example, <br>' all are defined using names that reflect their position <br>' in the filter graph. <br> <br>' The filters are declared with their pins, as follows: <br> <br>Dim pSourceFilter As IFilterInfo  ' AVI source filter; has two pins <br>Dim SourceOutputPin As IPinInfo  'Source Filter output pin <br> <br>Dim pAVISplitter As IFilterInfo ' AVI splitter <br>Dim SplitterInPin As IPinInfo   ' AVI splitter pin "Input" <br>Dim SplitterOut00Pin As IPinInfo  ' AVI splitter pin "Stream 00" <br>Dim SplitterOut01Pin As IPinInfo  ' AVI splitter pin "Stream 01" <br> <br>Dim pDECFilter As IFilterInfo  ' AVI Decompressor; has two pins <br>Dim DECInPin As IPinInfo   'AVI Decompressor pin "XForm In" <br>Dim DECOutPin As IPinInfo   ' AVI Decompressor pin "XForm Out" <br>     <br>Dim pVidRenderer As IFilterInfo ' Video renderer, has one pin <br>Dim VidRendInPin As IPinInfo  ' Video Renderer pin "Input" <br> <br>Dim pAudioRenderer As IFilterInfo 'Audio renderer, has one pin <br>Dim AudioRendInPin As IPinInfo ' Audio Renderer pin "Input" <br> <br>Dim pPin As IPinInfo <br>    Set SVideoPin = Nothing <br>    Set SAudioPin = Nothing <br>    Set DECInPin = Nothing <br>    Set DECOutPin = Nothing <br>    Set VidRendInPin = Nothing <br>    Set AudioRendInPin = Nothing <br>' reinitialize all global variables <br>    Set g_objRegFilters = Nothing <br>    Set g_objSelFilter = Nothing <br>    Set g_objSelPin = Nothing <br>    Set g_objMC = Nothing <br>' create a new IMediaControl object <br>    Set g_objMC = New FilgraphManager <br>    ' reset the listRegFilters again <br>    Set g_objRegFilters = g_objMC.RegFilterCollection <br>    RefreshRegFilters <br>' reinitialize the display <br>    listFilters.Clear <br>    lblFilterName.Caption = "" <br>    lblVendorInfo.Caption = "" <br>    listPins.Clear <br>    txtPinInfo.Text = "" <br>    g_fRunning = False <br>         <br>'Add source filter for an AVI file <br>    On Error GoTo err_CustomGraph_Cancel <br>    CommonDialog1.CancelError = True <br>    CommonDialog1.filter = "AVI files (*.avi)|*.avi" <br>    CommonDialog1.ShowOpen  ' get the name of the source or filter graph file <br>    g_objMC.AddSourceFilter CommonDialog1.filename, pSourceFilter <br>     <br>    On Error GoTo err_CustomGraph  ' handle other errors <br>    ' Get the pins we need to connect <br>    For Each pPin In pSourceFilter.Pins <br>      Debug.Print pPin.Name <br>      If pPin.Name = "Output" Then <br>          Set SourceOutputPin = pPin <br>      End If <br>    Next pPin <br>     <br>    'Add DEC filter <br>    AddFilter "AVI Decompressor", pDECFilter <br>    'Print out list of pins on decompressor filter <br>    For Each pPin In pDECFilter.Pins <br>      Debug.Print pPin.Name <br>      ' save specific pins to connect them <br>      If pPin.Name = "XForm In" Then <br>          Set DECInPin = pPin <br>      End If <br>      If pPin.Name = "XForm Out" Then <br>          Set DECOutPin = pPin <br>      End If <br>    Next pPin <br>  <br>    'Add AVI Splitter <br>    AddFilter "AVI Splitter", pAVISplitter <br>    'Print out list of pins on decompressor filter <br>    For Each pPin In pAVISplitter.Pins <br>      Debug.Print pPin.Name <br>      ' save specific pins to connect them <br>      ' pin 0, pin 1 <br>      If pPin.Name = "input pin" Then <br>          Set SplitterInPin = pPin <br>      ElseIf pPin.Name = "Stream 00" Then <br>          Set SplitterOut00Pin = pPin <br>      ElseIf pPin.Name = "Stream 01" Then <br>          Set SplitterOut01Pin = pPin <br>      End If <br>    Next pPin <br>     <br>    'Connect Source video output pin to AVI splitter input pin <br>    If Not SourceOutputPin Is Nothing And Not SplitterInPin Is Nothing Then <br>        SourceOutputPin.Connect SplitterInPin <br>    End If <br>  <br>    ' Splitter now knows how many output pins it needs <br>    For Each pPin In pAVISplitter.Pins <br>      Debug.Print pPin.Name <br>      ' save specific pins to connect them <br>      ' pin 0, pin 1 <br>      If pPin.Name = "Stream 00" Then <br>          Set SplitterOut00Pin = pPin <br>      ElseIf pPin.Name = "Stream 01" Then <br>          Set SplitterOut01Pin = pPin <br>      End If <br>    Next pPin <br>  <br>    'Add Video Renderer filter and set its pin variables <br>    AddFilter "Video Renderer", pVidRenderer <br>    'Print out list of pins on video renderer filter <br>    For Each pPin In pVidRenderer.Pins <br>      Debug.Print pPin.Name <br>      If pPin.Name = "Input" Then <br>          Set VidRendInPin = pPin <br>      End If <br>    Next pPin <br>     <br>    'Add Audio Renderer filter and set its pin variables <br>    AddFilter "Audio Renderer", pAudioRenderer <br>    'Print out list of pins on audioo renderer filter <br>    For Each pPin In pAudioRenderer.Pins <br>      Debug.Print pPin.Name <br>      If InStr(pPin.Name, "Input") Then <br>          Set AudioRendInPin = pPin <br>      End If <br>    Next pPin <br>     <br>     <br>    ' Connect AVI splitter stream 01 to AVI decompressor <br>    If Not DECInPin Is Nothing And Not SplitterOut00Pin Is Nothing Then <br>        SplitterOut00Pin.Connect DECInPin <br>    End If <br>     <br>    'Connect DEC filter output pin to Video Renderer input pin <br>    If Not DECOutPin Is Nothing And Not VidRendInPin Is Nothing Then <br>        DECOutPin.Connect VidRendInPin <br>    End If <br>     <br>    ' Connect AVI splitter stream 01 to audio renderer <br>    ' continue if there is no audio connection for the source AVI file <br>    On Error Resume Next <br>    If Not AudioRendInPin Is Nothing And Not SplitterOut01Pin Is Nothing Then <br>        SplitterOut01Pin.Connect AudioRendInPin <br>    End If <br>     <br>    RefreshFilters <br>    Exit Sub <br>err_CustomGraph: <br>    MsgBox "Could not create the custom filter graph. Please select an .AVI file that uses the AVI splitter and AVI decompressor filters." <br>    Exit Sub <br>err_CustomGraph_Cancel: <br>    ' user cancelled out of File Open dialog; just exit <br>    Exit Sub <br>End Sub <br> <br>Private Sub mnu_FilterGraphExit_Click() <br>    Set g_objLocalRegFilter = Nothing <br>    Set g_objRegFilters = Nothing <br>    Set g_objSelFilter = Nothing <br>    Set g_objSelPin = Nothing <br>    Set g_objMC = Nothing <br>    End <br>End Sub <br> <br>Private Sub mnu_FilterGraphGenerate_Click() <br>' User is initializing the filter graph based on a source file <br>' Create a new filter graph and then get all filters, connections <br> <br>' reset the application's global objects <br>    Set g_objRegFilters = Nothing <br>    Set g_objSelFilter = Nothing <br>    Set g_objSelPin = Nothing <br>    Set g_objMC = Nothing <br>' initialize the display <br>    listFilters.Clear <br>    listPins.Clear <br>    txtPinInfo.Text = "" <br>' create a new IMediaControl object <br>    Set g_objMC = New FilgraphManager <br>' refresh the display for registered filters <br>    Set g_objRegFilters = g_objMC.RegFilterCollection <br>    RefreshRegFilters <br>     <br>    ' use the common dialog to let the user select the input file <br>    On Error GoTo filtergraphgenerate_cancelerror <br>    CommonDialog1.CancelError = True <br>    CommonDialog1.filter = "ActiveMovie files (*.mpg;*.avi;*.mov;*.wav)|*.mpg;*.avi;*.mov;*.wav|" <br>    CommonDialog1.ShowOpen <br>     <br>    ' call IMediaControl::RenderFile to add all filters and connect all pins <br>    g_objMC.RenderFile CommonDialog1.filename <br>    ' update and display the list of registered filters <br>    ' update and display all active filters for this filter graph <br>    RefreshFilters  ' local subroutine to update the listbox <br>    Exit Sub <br>filtergraphgenerate_cancelerror: <br>    ' user cancelled out of the File Open dialog <br>    Exit Sub <br>End Sub <br> <br>Private Sub mnu_FilterGraphNew_Click() <br>' user wants to start with a fresh filter graph <br>' reset the global objects <br>    Set g_objRegFilters = Nothing <br>    Set g_objSelFilter = Nothing <br>    Set g_objSelPin = Nothing <br>    Set g_objMC = Nothing <br>' create a new IMediaControl object <br>    Set g_objMC = New FilgraphManager <br>    ' reset the listRegFilters again <br>    Set g_objRegFilters = g_objMC.RegFilterCollection <br>    RefreshRegFilters <br>' clear the contents of the listboxes, textboxes, and labels <br>    listFilters.Clear <br>    lblFilterName.Caption = "" <br>    lblVendorInfo.Caption = "" <br>    listPins.Clear <br>    txtPinInfo.Text = "" <br>' set the current playback state to stopped <br>    g_fRunning = False <br>End Sub <br> <br> <br>Private Sub mnu_FilterGraphPause_Click() <br>' sets the playback state to pause <br>    g_objMC.Pause <br>End Sub <br> <br>Private Sub mnu_FilterGraphRun_Click() <br>' sets the playback state to run and starts the filter graph if it wasn't running <br>    If Not g_fRunning Then <br>      Dim pPosition As IMediaPosition <br>      Set pPosition = g_objMC <br>      If Err.Number = 0 Then <br>        On Error Resume Next <br>        pPosition.CurrentPosition = 0 <br>      End If <br>    End If <br>    g_objMC.Run <br>    g_fRunning = True <br>End Sub <br> <br> <br>Private Sub mnu_FilterGraphStop_Click() <br>' stops the filter graph playback <br>    g_objMC.Stop <br>    g_fRunning = False <br>End Sub </code></pre>
<p>&nbsp;</p></body>
</HTML>
