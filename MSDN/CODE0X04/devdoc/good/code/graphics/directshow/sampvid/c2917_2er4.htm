<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>VIDPROP.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2920"></a>VIDPROP.CPP</h2>
<pre><code>//==========================================================================; <br>// <br>//  THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY <br>//  KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE <br>//  IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR <br>//  PURPOSE. <br>// <br>//  Copyright (c) 1992 - 1997  Microsoft Corporation.  All Rights Reserved. <br>// <br>//--------------------------------------------------------------------------; <br> <br>#include &lt;streams.h&gt; <br>#include &lt;sampvid.h&gt; <br>#include &lt;vidprop.h&gt; <br> <br>// This class implements a property page dialog for the video renderer. We <br>// expose certain statistics from the quality management implementation. In <br>// particular we have two edit fields that show the number of frames we have <br>// actually drawn and the number of frames that we dropped. The number of <br>// frames we dropped does NOT represent the total number dropped in any play <br>// back sequence (as expressed through MCI status frames skipped) since the <br>// quality management protocol may have negotiated with the source filter for <br>// it to send fewer frames in the first place. Dropping frames in the source <br>// filter is nearly always a more efficient mechanism when we are flooded <br> <br> <br>// <br>// Constructor <br>// <br>CQualityProperties::CQualityProperties(LPUNKNOWN pUnk,HRESULT *phr) : <br>    CBasePropertyPage(NAME("Quality Page"),pUnk,IDD_QUALITY,IDS_NAME), <br>    m_pQualProp(NULL) <br>{ <br>    ASSERT(phr); <br> <br>} // (Constructor) <br> <br> <br>// <br>// CreateInstance <br>// <br>// Create a quality properties object <br>// <br>CUnknown * WINAPI CQualityProperties::CreateInstance(LPUNKNOWN lpUnk, HRESULT *phr) <br>{ <br>    return new CQualityProperties(lpUnk, phr); <br> <br>} // CreateInstance <br> <br> <br>// <br>// OnConnect <br>// <br>// Give us the filter to communicate with <br>// <br>HRESULT CQualityProperties::OnConnect(IUnknown *pUnknown) <br>{ <br>    ASSERT(m_pQualProp == NULL); <br> <br>    // Ask the renderer for it's IQualProp interface <br> <br>    HRESULT hr = pUnknown-&gt;QueryInterface(IID_IQualProp,(void **)&amp;m_pQualProp); <br>    if (FAILED(hr)) { <br>        return E_NOINTERFACE; <br>    } <br> <br>    ASSERT(m_pQualProp); <br> <br>    // Get quality data for our page <br> <br>    m_pQualProp-&gt;get_FramesDroppedInRenderer(&amp;m_iDropped); <br>    m_pQualProp-&gt;get_FramesDrawn(&amp;m_iDrawn); <br>    m_pQualProp-&gt;get_AvgFrameRate(&amp;m_iFrameRate); <br>    m_pQualProp-&gt;get_Jitter(&amp;m_iFrameJitter); <br>    m_pQualProp-&gt;get_AvgSyncOffset(&amp;m_iSyncAvg); <br>    m_pQualProp-&gt;get_DevSyncOffset(&amp;m_iSyncDev); <br>    return NOERROR; <br> <br>}  // OnConnect <br> <br> <br>// <br>// OnDisconnect <br>// <br>// Release any IQualProp interface we have <br>// <br>HRESULT CQualityProperties::OnDisconnect() <br>{ <br>    // Release the interface <br> <br>    if (m_pQualProp == NULL) { <br>        return E_UNEXPECTED; <br>    } <br> <br>    m_pQualProp-&gt;Release(); <br>    m_pQualProp = NULL; <br>    return NOERROR; <br> <br>}  // OnDisconnect <br> <br> <br>// <br>// OnActivate <br>// <br>// Set the text fields in the property page <br>// <br>HRESULT CQualityProperties::OnActivate() <br>{ <br>    SetEditFieldData(); <br>    return NOERROR; <br> <br>} // OnActivate <br> <br> <br>// <br>// SetEditFieldData <br>// <br>// Initialise the property page fields <br>// <br>void CQualityProperties::SetEditFieldData() <br>{ <br>    ASSERT(m_pQualProp); <br>    TCHAR buffer[50]; <br> <br>    wsprintf(buffer,"%d", m_iDropped); <br>    SendDlgItemMessage(m_Dlg, IDD_QDROPPED, WM_SETTEXT, 0, (DWORD) (LPSTR) buffer); <br>    wsprintf(buffer,"%d", m_iDrawn); <br>    SendDlgItemMessage(m_Dlg, IDD_QDRAWN, WM_SETTEXT, 0, (DWORD) (LPSTR) buffer); <br>    wsprintf(buffer,"%d.%02d", m_iFrameRate/100, m_iFrameRate%100); <br>    SendDlgItemMessage(m_Dlg, IDD_QAVGFRM, WM_SETTEXT, 0, (DWORD) (LPSTR) buffer); <br>    wsprintf(buffer,"%d", m_iFrameJitter); <br>    SendDlgItemMessage(m_Dlg, IDD_QJITTER, WM_SETTEXT, 0, (DWORD) (LPSTR) buffer); <br>    wsprintf(buffer,"%d", m_iSyncAvg); <br>    SendDlgItemMessage(m_Dlg, IDD_QSYNCAVG, WM_SETTEXT, 0, (DWORD) (LPSTR) buffer); <br>    wsprintf(buffer,"%d", m_iSyncDev); <br>    SendDlgItemMessage(m_Dlg, IDD_QSYNCDEV, WM_SETTEXT, 0, (DWORD) (LPSTR) buffer); <br> <br>} // SetEditFieldData <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
