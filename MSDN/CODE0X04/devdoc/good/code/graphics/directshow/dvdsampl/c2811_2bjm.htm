<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DVDSAMPL.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2812"></a>DVDSAMPL.H</h2>
<pre><code>/************************************************************************** <br> * <br> *  THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY <br> *  KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE <br> *  IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR <br> *  PURPOSE. <br> * <br> *  Copyright (c) 1993 - 1997  Microsoft Corporation.  All Rights Reserved. <br> * <br> **************************************************************************/ <br> <br>// <br>// DVDSampl.h: DVDGraphBuilder sample app header file <br>// <br> <br>// <br>// App menu ids <br>// <br>#define IDM_SELECT           101 <br>#define IDM_ABOUT            102 <br>#define IDM_EXIT             103 <br> <br>#define IDM_FLAGBASE         110 <br>#define IDM_HWMAX            111 <br>#define IDM_HWONLY           112 <br>#define IDM_SWMAX            113 <br>#define IDM_SWONLY           114 <br>#define IDM_NOVPE            115 <br>#define IDM_BUILDGRAPH       121 <br>#define IDM_PLAY             122 <br>#define IDM_PAUSE            123 <br>#define IDM_STOP             124 <br>#define IDM_SLOWPLAY         125 <br>#define IDM_FASTFWD          126 <br>#define IDM_VERYFASTFWD      127 <br>#define IDM_FASTRWND         128 <br>#define IDM_VERYFASTRWND     129 <br>#define IDM_MENU             131 <br>#define IDM_CC               132 <br>#define IDM_LANG             133 <br>#define IDM_VIEWLEVEL        134 <br>#define IDM_FULLSCRN         135 <br> <br>// A custom menu message by which the app will be informed of the current <br>// menu state. <br>#define IDM_USER_MENUSTATUS   200 <br> <br>// <br>// Special consts for the app <br>// <br>#define SPSTREAM_NOCHANGE    32 <br>#define SPSTREAM_NONE        32 <br>#define MAX_SPSTREAMID       32 <br> <br> <br>// <br>// Version info related constant ids <br>// <br>#define DLG_VERFIRST        400 <br>#define IDC_COMPANY         DLG_VERFIRST <br>#define IDC_FILEDESC        DLG_VERFIRST+1 <br>#define IDC_PRODVER         DLG_VERFIRST+2 <br>#define IDC_COPYRIGHT       DLG_VERFIRST+3 <br>#define IDC_OSVERSION       DLG_VERFIRST+4 <br>#define IDC_TRADEMARK       DLG_VERFIRST+5 <br>#define DLG_VERLAST         DLG_VERFIRST+5 <br> <br>#define IDC_LABEL           DLG_VERLAST+1 <br> <br> <br>// <br>// App string resource ids <br>// <br>#define IDS_APP_TITLE       500 <br>#define IDS_WINDOW_TITLE    501 <br>#define IDS_VER_INFO_LANG   502 <br>#define IDS_VERSION_ERROR   503 <br> <br>// <br>// Playback Settings dialog ids <br>// <br>#define IDD_LANGUAGE                600 <br>#define IDD_LANG_AUDIOLANG          601 <br>#define IDD_LANG_SHOWSUBPIC         602 <br>#define IDD_LANG_SPLANG             603 <br>#define IDD_LANG_SPLANGTEXT         604 <br>#define IDD_LANG_AUDIOLANGTEXT      605 <br> <br>#define IDD_VIEWLEVEL               700 <br>#define IDD_VIEW_LEVELTEXT          701 <br>#define IDD_VIEW_LEVELLIST          702 <br> <br> <br>// <br>// Special user message used by the app for event notification <br>// <br>#define WM_DVDPLAY_EVENT    (WM_USER+100) <br> <br> <br>// <br>// Some enumerated type definitions... <br>// <br> <br>// Cursor movement directions <br>typedef enum { <br>    Cursor_Up = 0, Cursor_Down, Cursor_Left, Cursor_Right <br>} CURSOR_DIR ; <br> <br>// Player state <br>typedef enum { <br>    Unknown = 0, Stopped, Paused, Playing, Scanning <br>} PLAYER_STATE ; <br> <br> <br>// <br>// A class to wrap the viewing level number and names <br>// <br>class CViewLevels { <br>public: <br>    CViewLevels() ; <br> <br>    int     GetCount(void)   { return m_iCount ; } ; <br>    LPCTSTR GetName(int i)   { return m_alpszNames[i] ; } ; <br>    int     GetValue(int i)  { return m_aiValues[i] ; } ; <br> <br>private: <br>    LPCTSTR   m_alpszNames[6] ; <br>    int       m_aiValues[6] ; <br>    int       m_iCount ; <br>} ; <br> <br> <br>// <br>// A class to wrap a few language names and the corresponding 2-char codes <br>// <br>// We have only 10 languages from ISO 639 as a sample. It can be extended to <br>// include any other language in ISO 639. <br>// <br>class CDVDLanguages { <br>public: <br>    CDVDLanguages() ; <br> <br>    BOOL GetLangString(LPTSTR lpszCode, LPTSTR lpszLang) ; <br> <br>private: <br>    LPCTSTR  m_alpszCodes[10] ; <br>    LPCTSTR  m_alpszLangNames[10] ; <br>} ; <br> <br>// <br>// An easy way of getting the lang code from the DVD_Subpicture/AudioATR data <br>// <br>typedef struct _LangInfo { <br>    WORD  wRes1 ;  // don't care, just skip 2 bytes <br>    WORD  wLang ;  // lang code as a WORD value <br>    WORD  wRes2 ;  // don't care, another 2 bytes <br>} LANGINFO, *PLANGINFO ; <br> <br> <br>// <br>// Sample DVD Playback class <br>// <br>class CSampleDVDPlay { <br>public:   // public methods for Windows structure to call <br>    CSampleDVDPlay(void) ; <br>    ~CSampleDVDPlay(void) ; <br> <br>    void    SetAppValues(HINSTANCE hInst, LPTSTR szAppName,  <br>                         int iAppTitleResId) ; <br>    BOOL    InitInstance(int nCmdShow) ; <br>    BOOL    InitApplication(void) ; <br>    LPTSTR  GetAppName() { return m_szAppName ; } ; <br>    HINSTANCE GetInstance() { return m_hInstance ; } ; <br>    HWND    GetWindow() { return m_hWnd ; } ; <br> <br>    void    BuildGraph(void) ; <br>    BOOL    Play(void) ; <br>    BOOL    Pause(void) ; <br>    BOOL    Stop(void) ; <br>    BOOL    FastForward(void) ; <br>    BOOL    VeryFastForward(void) ; <br>    BOOL    FastRewind(void) ; <br>    BOOL    VeryFastRewind(void) ; <br>    BOOL    SlowPlay(void) ; <br>    int     MakeSPStreamList(HWND hDlg, int iListID) ; <br>    ULONG   GetSPStream(void)   { return m_ulSPStream ; } ; <br>    BOOL    SetSPState(LONG lStream, BOOL bState) ; <br>    void    GetSPLangCode(DVD_SubpictureATR *pSPATR, LPTSTR lpszCode) ; <br>    BOOL    GetSPLanguage(ULONG ulStream, BOOL bSPOn, LPTSTR lpszLang, int iMaxLang) ; <br>    int     MakeAudioStreamList(HWND hDlg, int iListID) ; <br>    ULONG   GetAudioStream(void)   { return m_ulAudioStream ; } ; <br>    BOOL    SetAudioState(LONG lStream) ; <br>    BOOL    GetAudioLanguage(ULONG ulStream, LPTSTR lpszLang, int iMaxLang) ; <br>    void    GetAudioLangCode(DVD_AudioATR *pAudATR, LPTSTR lpszCode) ; <br>    int     MakeParentalLevelList(HWND hDlg, int iListID) ; <br>    ULONG   SetParentalLevel(LONG lLevel) ; <br>    BOOL    ShowMenu(void) ; <br>    BOOL    ClosedCaption(void) ; <br>    BOOL    ShowFullScreen(void) ; <br>    BOOL    StartFullScreen(void) ; <br>    BOOL    StopFullScreen(void) ; <br>    void    CursorMove(CURSOR_DIR Dir) ; <br>    void    CursorSelect(void) ; <br>    void    SetRenderFlag(DWORD dwFlag) ; <br>    DWORD   GetRenderFlag(void)  { return m_dwRenderFlag ; } ; <br>    BOOL    IsStillOn(void)  { return m_bStillOn ; } ; <br>    BOOL    IsLangKnown(void) ; <br>    BOOL    IsInitialized(void)  { return m_eState != Unknown ; } ; <br>    BOOL    CanChangeSpeed(void)  { return Playing == m_eState || Scanning == m_eState ; } ; <br>    PLAYER_STATE GetState(void)  { return m_eState ; } ; <br> <br>    BOOL    FileSelect(void) ; <br>    DWORD   GetStatusText(AM_DVD_RENDERSTATUS *pStatus,  <br>                          LPTSTR lpszStatusText, <br>                          DWORD dwMaxText) ; <br>    HRESULT OnDVDPlayEvent(WPARAM wParam, LPARAM lParam) ; <br>    void    DrawStatus(HDC hDC) ; <br> <br>private:  // private helper methods for the class' own use <br>    LPTSTR  GetStringRes (int id) ; <br>    void    ReleaseInterfaces(void) ; <br>     <br>private:  // internal state info <br>    HINSTANCE     m_hInstance ;       // current instance <br>    HWND          m_hWnd ;            // app window handle <br>    TCHAR         m_szAppName[50] ;   // name of the app <br>    TCHAR         m_szTitle[50] ;     // title bar text <br>    TCHAR         m_achBuffer[100] ;  // app's internal buffer for res strings etc. <br> <br>    CViewLevels   m_ViewLevels ;      // viewing level data (static) <br>    CDVDLanguages m_Langs ;           // language list data (static) <br>    BOOL          m_bSPOn ;           // Is Subpicture On? <br>    ULONG         m_ulSPStream ;      // SubPicture stream number <br>    ULONG         m_ulAudioStream ;   // Audio stream number <br>    BOOL          m_bMenuOn ;         // is DVD menu being shown now? <br>    BOOL          m_bCCOn ;           // is CC being shown? <br>    BOOL          m_bFullScrnOn ;     // is showing in full screen mode? <br>    PLAYER_STATE  m_eState ;          // player state (run/pause/stop/...) <br>    BOOL          m_bStillOn ;        // is a still image on now? <br>    BOOL          m_bLangKnown ;      // can ask for audio/subpic lang etc? <br>    ULONG         m_ulParentCtrlLevel ;// parental control level of viewing <br>    DWORD         m_dwRenderFlag ;    // flags to use for building graph <br>    TCHAR         m_achFileName[MAX_PATH] ; // current root file name <br>    TCHAR         m_achStillText[20] ;   // still status text for display <br>    TCHAR         m_achTitleText[20] ;   // current title info for display <br>    TCHAR         m_achChapterText[20] ; // current chapter for display <br>    TCHAR         m_achTimeText[50] ;    // current time for display <br> <br>    IDvdGraphBuilder *m_pDvdGB ;      // IDvdGraphBuilder interface <br>    IVideoWindow     *m_pVW ;         // IVideoWindow interface <br>    IGraphBuilder    *m_pGraph ;      // IGraphBuilder interface <br>    IDvdInfo         *m_pDvdI ;       // IDvdInfo interface <br>    IDvdControl      *m_pDvdC ;       // IDvdControl interface <br>    IMediaControl    *m_pMC ;         // IMediaControl interface <br>    IMediaEventEx    *m_pME ;         // IMediaEventEx interface <br>    IAMLine21Decoder *m_pL21Dec ;     // IAMLine21Decoder interface <br>} ; <br></code></pre>
<p>&nbsp;</p></body>
</HTML>
