<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SAMPIOS.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2830"></a>SAMPIOS.H</h2>
<pre><code>//==========================================================================; <br>// <br>//  THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY <br>//  KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE <br>//  IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR <br>//  PURPOSE. <br>// <br>//  Copyright (c) 1992 - 1997  Microsoft Corporation.  All Rights Reserved. <br>// <br>//--------------------------------------------------------------------------; <br> <br>/* <br>This header file provides function prototypes for the functions <br>exported from AM_ios.lib.  These functions are designed to enable <br>developers to get information in text format regarding objects in <br>the filter graph. <br> <br>The 'C' functions, DumpXXX, require "cout" to be valid in the environment <br>in which you are working. <br>*/ <br> <br>#ifndef _SampIOS_h <br>#define _SampIOS_h <br> <br>#ifdef __cplusplus <br> <br>    // Just so you can write:   cout &lt;&lt; piFilterGraph &lt;&lt; endl;  etc. <br> <br>    // Converts wide string to ANSI string and outputs it <br>    ostream &amp; operator &lt;&lt;( ostream &amp; out, LPCWSTR pwStr ); <br>    // Builds and outputs a textual version of a GUID <br>    ostream &amp; operator &lt;&lt;( ostream &amp; out, const GUID &amp; clsid ); <br>    // Output filter information <br>    ostream &amp; operator &lt;&lt;( ostream &amp; out, const IBaseFilter *const pIFilter ); <br>    // Output filter informations for all filters left in the enumerator <br>    ostream &amp; operator &lt;&lt;( ostream &amp; out, const IEnumFilters *const pIEnumFilters ); <br>    // Output filter and connection details <br>    ostream &amp; operator &lt;&lt;( ostream &amp; out, const IFilterGraph *const piFilterGraph ); <br>    // Output pin details (including connection info) <br>    ostream &amp; operator &lt;&lt;( ostream &amp; out, const IPin *const pIPin ); <br>    // As above, for all pins left in the enumerator <br>    ostream &amp; operator &lt;&lt;( ostream &amp; out, const IEnumPins *const pIEnumPins ); <br>    // Output the pin info for all pins on supplied filter <br>    ostream &amp; WriteAllPins( ostream &amp; out, const IBaseFilter *const pIFilter ); <br> <br>    extern "C" { <br>#endif <br> <br>void DumpFilterInfo( const IBaseFilter * pIFilter ); <br>void DumpPinInfo( const IPin * pIPin ); <br>void DumpAllPins( const IBaseFilter * piFilter ); <br>void DumpAllFilters( const IFilterGraph * piFilterGraph ); <br>void DumpFilterGraph( const IFilterGraph * piFilterGraph ); <br> <br>#ifdef __cplusplus <br>    } <br>#endif <br> <br>#endif /* _SampIOS_h */ <br></code></pre>
<p>&nbsp;</p></body>
</HTML>
