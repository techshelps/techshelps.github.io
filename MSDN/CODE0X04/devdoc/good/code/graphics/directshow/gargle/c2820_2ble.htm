<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GARGPROP.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2822"></a>GARGPROP.H</h2>
<pre><code>//==========================================================================; <br>// <br>//  THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY <br>//  KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE <br>//  IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR <br>//  PURPOSE. <br>// <br>//  Copyright (c) 1992 - 1997  Microsoft Corporation.  All Rights Reserved. <br>// <br>//--------------------------------------------------------------------------; <br>// <br>// GargProp.h <br>// <br>// This file is entirely concerned with the implementation of the <br>// properties page.  It uses the property page base class to minimise <br>// the implementation effort. <br> <br>#ifndef __GARGPROP__ <br>#define __GARGPROP__ <br> <br>#ifdef __cplusplus <br>extern "C" { <br>#endif <br> <br> <br>const int MaxGargleRate = 1000;    // 1000Hz max rate <br>const int MinGargleRate = 1;       // 1Hz min rate <br>const int DefaultGargleRate = 10;  // 10 Hz default <br> <br> <br>class CGargleProperties : public CBasePropertyPage <br>{ <br> <br>public: <br> <br>    static CUnknown * WINAPI CreateInstance(LPUNKNOWN lpunk, HRESULT *phr); <br> <br>    // Overrides from CBasePropertyPage <br>    HRESULT OnConnect(IUnknown * punk); <br>    HRESULT OnDisconnect(void); <br> <br>    HRESULT OnDeactivate(void); <br> <br>    CGargleProperties(LPUNKNOWN lpunk, HRESULT *phr); <br> <br>private: <br> <br>    BOOL OnReceiveMessage(HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam); <br> <br>    HWND        CreateSlider(HWND hwndParent); <br>    void        OnSliderNotification(WPARAM wParam); <br> <br>    HWND        m_hwndSlider;   // handle of slider <br> <br> <br>    IGargle   *m_pGargle;       // pointer to the IGargle interface of the <br>                                // gargle filter.  Set up in OnConnect. <br> <br>    int        m_iGargleRate;   // Remember gargle rate between <br>                                // Deactivate / Activate calls. <br>    int        m_iGargleShape;  // 0 = triangle (default), 1 = square wave. <br> <br>};  // class CGargleProperties <br> <br>#ifdef __cplusplus <br>} <br>#endif <br> <br>#endif // __GARGPROP__ </code></pre>
<p>&nbsp;</p></body>
</HTML>
