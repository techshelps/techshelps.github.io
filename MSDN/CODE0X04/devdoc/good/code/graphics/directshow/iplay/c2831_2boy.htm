<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>AX_SPEC.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2842"></a>AX_SPEC.H</h2>
<pre><code>/************************************************************************ <br>*                                                                       * <br>*               INTEL CORPORATION PROPRIETARY INFORMATION               * <br>*                                                                       * <br>*    This listing is supplied under the terms of a license agreement    * <br>*      with INTEL Corporation and may not be copied nor disclosed       * <br>*        except in accordance with the terms of that agreement.         * <br>*                                                                       * <br>************************************************************************* <br>*                                                                       * <br>*Copyright (c) 1994-1997 Intel Corporation.* <br>*                         All Rights Reserved.                          * <br>*                                                                       * <br>************************************************************************/ <br> <br>/* <br> *  Tabs set to 4 <br> * <br> *  ax_spec.h <br> * <br> *  DESCRIPTION: <br> *  The Indeo(R) Video Interactive codec provides access to new features <br> *  using the ICM_SETCODECSTATE and ICM_GETCODECSTATE messages for VfW. <br> *This header file defines the data structures used in these messages. <br> */ <br> <br>/* $Header:   I:\proj\src\common\vcs\ax_spec.h_v   1.2 16 Dec 1996 14:54:04tschwart  $ <br> */ <br> <br>/*  Custom interface for Indeo(r) codecs <br> */ <br> <br>#ifndef __AX_SPEC_H__ <br>#define __AX_SPEC_H__ <br> <br>#ifdef __cplusplus <br>extern "C" { <br>#endif <br> <br>#ifndef FOURCC_IV41 <br> <br>#ifndef mmioFOURCC <br>#define mmioFOURCC( ch0, ch1, ch2, ch3 )\ <br>( (DWORD)(BYTE)(ch0) | ( (DWORD)(BYTE)(ch1) &lt;&lt; 8 ) |\ <br>( (DWORD)(BYTE)(ch2) &lt;&lt; 16 ) | ( (DWORD)(BYTE)(ch3) &lt;&lt; 24 ) ) <br>#endif <br> <br>#define FOURCC_IV41 mmioFOURCC('I','V','4','1') <br>#endif <br> <br>#include "vfw_spec.h" <br> <br>/* Temporary Encode parameters used to set up the compression information <br> */  <br> <br>typedef struct {  <br>DWORD dwFrameRate; <br>DWORD dwKeyFrameInterval; <br>DWORD dwDataRate; <br>DWORD dwQuality; <br>R4_FLAG fPadding; <br>} R4_ENC_CMP_DATA, FAR * PTR_R4_ENC_CMP_DATA; <br> <br>/*AX_SPEC's GUID's <br> * <br> *{CCDA9131-CE8A-11CE-82DD-0800095A5B55}for Encode <br> *{CCDA9132-CE8A-11CE-82DD-0800095A5B55}  for Decode <br> * <br> */ <br> <br>#define EC_KEY_FRAME (EC_USER + 1) <br>#define EC_DECODE_RECT_CHANGED (EC_USER + 2) <br> <br>DEFINE_GUID(IID_IIndeoEncode, <br>0xCCDA9131, 0xCE8A, 0x11CE, 0x82, 0xDD, 0x08, 0x00, 0x09, 0x5A, 0x5B, 0x55); <br> <br>/*AX_SPECinterface definition <br>*/ <br> <br>#undefINTERFACE <br>#defineINTERFACE IIndeoEncode <br> <br>DECLARE_INTERFACE_(IIndeoEncode, IUnknown) <br>{ <br> <br>/* <br> *IUnknown methods <br> */ <br> <br>STDMETHOD(QueryInterface) <br>( <br>THIS_ <br>REFIID riid, <br>LPVOID FAR* ppvObj <br>) PURE; <br> <br>STDMETHOD_(ULONG,AddRef) <br>( <br>THIS <br>) PURE; <br> <br>STDMETHOD_(ULONG,Release) <br>( <br>THIS <br>) PURE; <br> <br>/* <br> *Query methods <br> */ <br> <br>    STDMETHOD(query_EncodeSequence) <br>( <br>THIS_ <br>DWORD *pdwFlags /* [out] */ // get data pointer <br>) PURE; <br> <br>STDMETHOD(query_ImageDimensions) <br>( <br>THIS_ <br>DWORD *pdwWidth,/* [out] */ // get data pointer <br>DWORD *pdwHeight/* [out] */ // get data pointer <br>) PURE; <br> <br>/* <br> *Get methods <br> */ <br> <br>    STDMETHOD(get_EncodeSequence) <br>( <br>THIS_ <br>PTR_R4_ENC_SEQ_DATA pData/* [out] */ // get data pointer <br>) PURE; <br> <br>    STDMETHOD(get_EncodePersistent) <br>( <br>THIS_ <br>PTR_R4_ENC_SEQ_DATA pData/* [out] */ // get data pointer <br>) PURE; <br> <br>    STDMETHOD(get_EncodeCompression) <br>( <br>THIS_ <br>PTR_R4_ENC_CMP_DATA pData/* [out] */ // get data pointer <br>) PURE; <br> <br>    STDMETHOD(get_EncodeCompressionDefault) <br>( <br>THIS_ <br>PTR_R4_ENC_CMP_DATA pData/* [out] */ // get data pointer <br>) PURE; <br> <br> <br>/* <br> *Set methods <br> */ <br> <br>    STDMETHOD(set_EncodeSequence) <br>( <br>THIS_ <br>PTR_R4_ENC_SEQ_DATA pData/* [in] */ // set data pointer <br>) PURE; <br> <br>    STDMETHOD(set_EncodePersistent) <br>( <br>THIS_ <br>PTR_R4_ENC_SEQ_DATA pData/* [in] */ // set data pointer <br>) PURE; <br> <br>    STDMETHOD(set_EncodeCompression) <br>( <br>THIS_ <br>PTR_R4_ENC_CMP_DATA pData/* [in] */ // set data pointer <br>) PURE; <br>}; <br> <br> <br>DEFINE_GUID(IID_IIndeoDecode, <br>0xCCDA9132, 0xCE8A, 0x11CE, 0x82, 0xDD, 0x08, 0x00, 0x09, 0x5A, 0x5B, 0x55); <br> <br>#undefINTERFACE <br>#defineINTERFACE IIndeoDecode <br> <br>DECLARE_INTERFACE_(IIndeoDecode, IUnknown) <br>{ <br> <br>/* <br> *IUnknown methods <br> */ <br> <br>STDMETHOD(QueryInterface) <br>( <br>THIS_ <br>REFIID riid, <br>LPVOID FAR* ppvObj <br>) PURE; <br> <br>STDMETHOD_(ULONG,AddRef) <br>( <br>THIS <br>) PURE; <br> <br>STDMETHOD_(ULONG,Release) <br>( <br>THIS <br>) PURE; <br> <br>/* <br> *Query methods <br> */ <br> <br>    STDMETHOD(query_DecodeSequence) <br>( <br>THIS_ <br>DWORD *pdwFlags/* [out] */ // query data pointer <br>) PURE; <br> <br>    STDMETHOD(query_DecodeFrame) <br>( <br>THIS_ <br>DWORD *pdwFlags/* [out] */ // query data pointer <br>) PURE; <br> <br>STDMETHOD(query_ImageDimensions) <br>( <br>THIS_ <br>DWORD *pdwWidth,/* [out] */ // get data pointer <br>DWORD *pdwHeight/* [out] */ // get data pointer <br>) PURE; <br> <br>/* <br> *Get methods <br> */ <br> <br>    STDMETHOD(get_DecodeSequence) <br>( <br>THIS_ <br>PTR_R4_DEC_SEQ_DATA pData /* [out] */ // get data pointer <br>) PURE; <br> <br>    STDMETHOD(get_DecodeFrame) <br>( <br>THIS_ <br>PTR_R4_DEC_FRAME_DATA pData/* [out] */ // get data pointer <br>) PURE; <br> <br> <br>/* <br> *Set methods <br> */ <br> <br>    STDMETHOD(set_DecodeSequence) <br>( <br>THIS_ <br>PTR_R4_DEC_SEQ_DATA pData/* [in] */ // set data pointer <br>) PURE; <br> <br>    STDMETHOD(set_DecodeFrame) <br>( <br>THIS_ <br>PTR_R4_DEC_FRAME_DATA pData/* [in] */ // set data pointer <br>) PURE; <br> <br>STDMETHOD(set_NotifyKeyFrame) <br>( <br>THIS_ <br>DWORD bState/* [in] */ // Set notify on/off <br>) PURE; <br>}; <br> <br>#ifdef __cplusplus <br>} <br>#endif <br> <br>#endif /* __AX_SPEC_H__ */ </code></pre>
<p>&nbsp;</p></body>
</HTML>
