<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IPLAYDOC.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2839"></a>IPLAYDOC.H</h2>
<pre><code>// This code and information is provided "as is" without warranty of <br>// any kind, either expressed or implied, including but not limited to <br>// the implied warranties of merchantability and/or fitness for a <br>// particular purpose. <br> <br>// Copyright (C) 1996 -1997 Intel corporation.All rights reserved. <br> <br>// IPlaydoc.h : interface of the CIPlayDoc class <br>// <br>///////////////////////////////////////////////////////////////////////////// <br>class CIPlayDoc : public CDocument <br>{ <br>protected:  <br>CIPlayDoc(); <br>DECLARE_DYNCREATE(CIPlayDoc) <br>void DeleteContents(); <br> <br>// Attributes <br>protected: <br>HANDLE       m_hGraphEvent; <br>long m_lWinWidth;   // original window size <br>long m_lWinHeight; <br>long         m_lWidth;      // encoded video size <br>long         m_lHeight; <br>BOOL         m_bLoop; <br>BOOL         m_bZoom; <br>void         *m_pIndeo;    // pointer to Indeo interface <br> <br>public: <br>IFilterGraph *m_pGraph; <br>CHAR     m_lpstrPath[MAX_PATH]; <br> <br>    HANDLE GetGraphEventHandle( ) { return m_hGraphEvent; }; <br>void OnGraphNotify(); <br> <br>    enum {Uninitialized, Stopped, Paused, Playing } m_State; <br>    BOOL CanPlay(){ return m_State==Stopped || m_State==Paused; }; <br>    BOOL CanStop(){ return m_State==Playing || m_State==Paused; }; <br>    BOOL CanPause(){return m_State==Playing; }; <br>    BOOL IsInitialized(){ return m_State!=Uninitialized; }; <br>ULONG VideoWidth(); <br>ULONG VideoHeight(); <br> <br>// Operations <br>public: <br>BOOL IsIndeo(); <br>void GetBCS(int&amp;, int&amp;, int&amp; ); <br>void GetTransFillRGB(int&amp;, int&amp;, int&amp;); <br>void GetDecodeTime(DWORD&amp; ); <br>void GetDecodeRect(DWORD&amp;, DWORD&amp;, DWORD&amp;, DWORD&amp; ); <br>void GetViewRect(DWORD&amp;, DWORD&amp;, DWORD&amp;, DWORD&amp; ); <br>void GetSequenceOptions(BOOL&amp;, BOOL&amp;, BOOL&amp;, BOOL&amp;, BOOL&amp;, DWORD&amp; ); <br>void SetBCS(int, int, int); <br>void SetTransFillRGB(DWORD); <br>void SetDecodeTime(DWORD); <br>void SetDecodeRect(DWORD, DWORD, DWORD, DWORD); <br>void SetViewRect(BOOL, DWORD, DWORD, DWORD, DWORD); <br>void SetSequenceOptions(BOOL, LONG, BOOL, BOOL, DWORD); <br>void GetFrameDefaults(int&amp;, int&amp;, int&amp;, DWORD&amp;, <br> DWORD&amp;, DWORD&amp;, DWORD&amp;, DWORD&amp;,  <br> DWORD&amp;, DWORD&amp;, DWORD&amp;, DWORD&amp; ); <br>void GetSeqDefaults(BOOL&amp;, BOOL&amp;, BOOL&amp;, BOOL&amp;, BOOL&amp;, DWORD&amp;); <br> <br>// Overrides <br>// ClassWizard generated virtual function overrides <br>//{{AFX_VIRTUAL(CIPlayDoc) <br>public: <br>virtual BOOL OnOpenDocument(LPCTSTR lpszPathName); <br>//}}AFX_VIRTUAL <br> <br>// Implementation <br>public: <br>virtual ~CIPlayDoc(); <br>#ifdef _DEBUG <br>virtual void AssertValid() const; <br>virtual void Dump(CDumpContext&amp; dc) const; <br>#endif <br> <br>// Generated message map functions <br>protected: <br>//{{AFX_MSG(CIPlayDoc) <br>afx_msg void OnMediaLoop(); <br>afx_msg void OnMediaPause(); <br>afx_msg void OnMediaZoomx2(); <br>afx_msg void OnUpdateMediaPause(CCmdUI* pCmdUI); <br>afx_msg void OnUpdateMediaPlay(CCmdUI* pCmdUI); <br>afx_msg void OnUpdateMediaStop(CCmdUI* pCmdUI); <br>afx_msg void OnUpdateMediaZoomx2(CCmdUI* pCmdUI); <br>afx_msg void OnUpdateMediaLoop(CCmdUI* pCmdUI); <br>afx_msg void OnMediaPlay(); <br>afx_msg void OnMediaStop(); <br>//}}AFX_MSG <br>DECLARE_MESSAGE_MAP() <br> <br>private: <br>void SetWindow(BSTR); <br>    BOOL CreateFilterGraph( void ); <br> <br>}; </code></pre>
<p>&nbsp;</p></body>
</HTML>
