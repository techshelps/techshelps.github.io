<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INDEO.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2835"></a>INDEO.H</h2>
<pre><code>// This code and information is provided "as is" without warranty of <br>// any kind, either expressed or implied, including but not limited to <br>// the implied warranties of merchantability and/or fitness for a <br>// particular purpose. <br> <br>// Copyright (C) 1996 - 1997 Intel corporation.  All rights reserved. <br> <br>// indeo.h : header file <br>// <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CIndeo form view <br> <br>#ifndef __AFXEXT_H__ <br>#include &lt;afxext.h&gt; <br>#endif <br> <br>#include &lt;afxcmn.h&gt;  // for CSliderCtrl <br> <br>class CIndeo : public CFormView <br>{ <br>protected: <br>CIndeo();           // protected constructor used by dynamic creation <br>DECLARE_DYNCREATE(CIndeo) <br> <br>DWORDm_dwInitTransRGBVal; <br>COLORREF m_clrefUserCustClrs[16]; <br> <br>// Form Data <br>public: <br>//{{AFX_DATA(CIndeo) <br>enum { IDD = IDD_INDEO }; <br>CButtonm_btnCustomColors; <br>CButtonm_checkDontDropQuality; <br>CButtonm_checkDontDropFrames; <br>CEditm_editSaturation; <br>CEditm_editContrast; <br>CEditm_editBrightness; <br>CEditm_editTransFillGreen; <br>CEditm_editTransFillBlue; <br>CEditm_editTransFillRed; <br>CButtonm_checkAltLine; <br>CEditm_editDecodeTime; <br>CEditm_editViewWidth; <br>CEditm_editViewY; <br>CEditm_editViewX; <br>CEditm_editViewHeight; <br>CEditm_editKeyValue; <br>CEditm_editDecodeY; <br>CEditm_editDecodeX; <br>CEditm_editDecodeWidth; <br>CButtonm_checkAccessKey; <br>CButtonm_btnDefaults; <br>CButtonm_btnApply; <br>CEditm_editDecodeHeight; <br>CSliderCtrlm_tbSaturation; <br>CSliderCtrlm_tbContrast; <br>CSliderCtrlm_tbBrightness; <br>BOOLm_bAccessKey; <br>DWORDm_dwDecodeHeight; <br>DWORDm_dwDecodeWidth; <br>DWORDm_dwDecodeX; <br>DWORDm_dwDecodeY; <br>DWORDm_dwKeyValue; <br>DWORDm_dwViewHeight; <br>DWORDm_dwViewWidth; <br>DWORDm_dwViewX; <br>DWORDm_dwViewY; <br>intm_intBrightness; <br>intm_intContrast; <br>intm_intSaturation; <br>DWORDm_dwDecodeTime; <br>CButton m_radTransFill; <br>CButton m_radTransNoFill; <br>BOOLm_bAltLine; <br>intm_intGreen; <br>intm_intRed; <br>intm_intBlue; <br>BOOLm_bDontDropFrames; <br>BOOLm_bDontDropQuality; <br>CButton m_radFrameOrigin; <br>CButton m_radViewOrigin; <br>intm_bViewOrigin; <br>intm_bTransFill; <br>//}}AFX_DATA <br> <br>// Attributes <br>public: <br> <br>// Operations <br>public: <br>   void EnableSeqOptions(); <br>void DisableSeqOptions(); <br> <br>// Overrides <br>// ClassWizard generated virtual function overrides <br>//{{AFX_VIRTUAL(CIndeo) <br>public: <br>virtual void OnInitialUpdate(); <br>protected: <br>virtual void DoDataExchange(CDataExchange* pDX);    // DDX/DDV support <br>virtual void OnUpdate(CView* pSender, LPARAM lHint, CObject* pHint); <br>//}}AFX_VIRTUAL <br> <br>// Implementation <br>protected: <br>virtual ~CIndeo(); <br>#ifdef _DEBUG <br>virtual void AssertValid() const; <br>virtual void Dump(CDumpContext&amp; dc) const; <br>#endif <br> <br>// Helper functions <br>void EnableAllOptions(); <br>void DisableAllOptions(); <br> <br>// Generated message map functions <br>//{{AFX_MSG(CIndeo) <br>afx_msg void OnIndeoApply(); <br>afx_msg void OnIndeoDefaults(); <br>afx_msg void OnChangeDecodeHeight(); <br>afx_msg void OnChangeDecodeWidth(); <br>afx_msg void OnChangeDecodeX(); <br>afx_msg void OnChangeDecodeY(); <br>afx_msg void OnChangeViewHeight(); <br>afx_msg void OnChangeViewWidth(); <br>afx_msg void OnChangeViewX(); <br>afx_msg void OnChangeViewY(); <br>afx_msg void OnAccesskey(); <br>afx_msg void OnChangeDecodeTime(); <br>afx_msg void OnChangeKeyValue(); <br>afx_msg void OnTransFill(); <br>afx_msg void OnTransNofill(); <br>afx_msg void OnAltline(); <br>afx_msg void OnHScroll(UINT nSBCode, UINT nPos, CScrollBar* pScrollBar); <br>afx_msg void OnChangeGreenEdit(); <br>afx_msg void OnChangeRedEdit(); <br>afx_msg void OnChangeBlueEdit(); <br>afx_msg void OnDontDropFrames(); <br>afx_msg void OnDontDropQuality(); <br>afx_msg void OnViewOrigin(); <br>afx_msg void OnFrameOrigin(); <br>afx_msg void OnCustomColors(); <br>afx_msg void OnUpdateBSCText(); <br>afx_msg void OnClickBSCColorcontrol(NMHDR* pNMHDR, LRESULT* pResult); <br>//}}AFX_MSG <br>DECLARE_MESSAGE_MAP() <br>}; <br> <br>///////////////////////////////////////////////////////////////////////////// </code></pre>
<p>&nbsp;</p></body>
</HTML>
