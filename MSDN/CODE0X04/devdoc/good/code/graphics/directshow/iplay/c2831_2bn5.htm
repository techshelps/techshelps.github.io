<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>README.TXT</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2831"></a>README.TXT</h2>
<pre><code>Iplay Sample Application <br> <br>Version: 1,0,0,3Date:  Dec 20, 1996 <br> <br>Table of Contents <br>----------------- <br>1.  Overview <br>2.  System Requirements <br>3.  Application Structure <br>4.  How To Run <br>5.  Known Limitations <br>6.  References <br> <br> <br>1. Overview <br>----------- <br>Iplay is a sample ActiveMovie video player.   The purpose of Iplay is to   <br>demonstrate the Indeo Video Interactive API in the ActiveMovie  <br>environment.   <br> <br> <br>2.  System Requirements <br>----------------------- <br>Windows 95 or Windows NT <br>DirectShow 5.1 beta <br>MSVC++ 4.2 (or later) <br>ir41_32.ax placed in the windows system directory and registered <br>  (   drive:\msdev\bin\regsvr32   drive:\windows\system\ir41_32.ax   ) <br> <br> <br>3.  Application Structure <br>------------------------- <br>Iplay is written in C++ using the Microsoft Foundation Class (MFC)  <br>library.  It follows the standard structure of an MFC application: <br> <br>FileClassDescription <br>------------------------------------------------------------------ <br>Iplay.cppCIPlayAppThe application. <br>Iplay.h <br> <br>Mainfrm.cppCMainFrameThe main frame window. <br>Mainfrm.h <br> <br>Indeo.cppCindeoThe form view containing <br>Indeo.hthe Indeo-specific controls. <br> <br>IPlayDoc.cppCIPlayDocThe "document", which in this <br>IPlayDoc.hcase is a filter graph. <br> <br>There are also include files and resource files that make up Iplay.  The  <br>resource files are located in the .\res subdirectory of the Iplay source <br>directory. <br> <br>FileDescription <br>------------------------------------------------------------------ <br>Ax_spec.hThe Indeo Video Interactive interface <br>definitions for ActiveMovie. <br> <br>Iplay.rcThe Iplay resource definitions. <br> <br>Bitmap1.bmpThe custom toolbar bitmap. <br> <br>Indeo.icoThe Indeo icon. <br> <br>Vfw_spec.hIndeo-specific data structures. <br> <br>All ActiveMovie applications must include the following ActiveMovie  <br>header files. <br> <br>FileDescription <br>------------------------------------------------------------------ <br>control.hInterface to type library: QuartzTypeLib. <br> <br>evcode.hStandard Quartz event codes. <br> <br>strmif.hCOM interface definitions. <br> <br>uuids.hThe GUIDs for the MediaType type and class <br>ids for well-known components. <br> <br> <br>5.  How To Run <br>-------------- <br> <br>The Iplay application is a standard Windows 95/NT application.  It can  <br>be started by double-clicking its icon, or by using the Run command.   <br>Iplay also supports drag-and-drop; you can drag a movie file (.avi) onto  <br>the Iplay application to open the file in Iplay. If you are working in  <br>Microsoft Developer Studio, from the Build menu select Execute  <br>Iplay.exe. <br> <br>Iplay can play any movie file, not just Indeo Video Interactive (IVI)  <br>format movies.  If a movie is not IVI format, the Indeo-specific  <br>controls will not be enabled. <br> <br>When the application starts, the initial view is just the menu and the  <br>toolbar.  Click the Indeo icon on the toolbar to show/hide the extended  <br>view which contains the Indeo-specific controls. <br> <br>Using The Indeo-Specific Controls <br> <br>Indeo Video Interactive provides some special settings that enhance  <br>standard playback.  The settings are of two types: sequence options and  <br>frame options.  The sequence options affect a playback sequence and must  <br>be set prior to playing the movie; once the movie is playing the  <br>sequence options cannot be changed.  The frame options affect each frame  <br>of the movie and can be changed at any time while the movie is stopped  <br>or playing. <br> <br>The sequence options consist of Scalability, Access Key, Alt-Line and  <br>Transparency Fill.  Turning Scalability on allows the Indeo codec to  <br>scale playback performance by dropping bands instead of dropping frames  <br>to maintain frame rate.  A movie must be encoded with Scalability in  <br>order for this option to have an effect on playback.  The Access Key is  <br>an encrypted integer that provides password protection to a movie.  The  <br>Access Key is set at encode time, and at playback the Access Key option  <br>must be turned on and the correct access key value provided in order to  <br>play the movie. If a movie was not encoded with an Access Key, this  <br>option has no effect.  Turning Alt-Line on affects playback when the  <br>movie is resized to exactly double its original size (zoom by two).   <br>When the movie is "zoomed" and Alt-Line is enabled, the codec stretches  <br>the image by filling alternate lines of the output buffer with black  <br>lines.  The black lines are written only once (if the window is not  <br>moved around on the screen), resulting in some performance savings  <br>because less information has to be written to the output buffer for each  <br>frame.  Turning Transparency Fill on or off only affects movies that  <br>were encoded with transparency.  When Transparency Fill is on, the codec  <br>writes the "transparent" pixels to the output buffer as a solid color.   <br>When Transparency Fill is off, the codec does not write the transparent  <br>pixels to the output buffer.   <br> <br>The frame options consist of Brightness, Saturation, Contrast, Decode  <br>Time, Decode Rect and View Rect.  Brightness, Saturation, and Contrast  <br>control the appearance of the movie s colors.  They can range in value  <br>from -128 to 128, with 0 being normal.  Decode Time is the time limit in  <br>milliseconds for the codec to decode each frame.  A setting of 0 means  <br>the codec should use the default time limit based on the encoded frame  <br>rate of the movie.  For example, a 15 frame-per-second (fps) movie has a  <br>default decode time limit of 1/15 x 100 = 66.7 ms.  The Decode Rect is  <br>the portion of the source image that is actually decoded.  The Decode  <br>Rect cannot exceed the boundaries of the source image.  A Decode Rect  <br>with with 0 width and 0 height located at 0,0 defaults to the entire  <br>source image.  The View Rect is the portion of the decoded image that is  <br>actually written to the output buffer.  The View Rect cannot exceed the  <br>boundaries of the Decode Rect.  A View Rect of 0 width and 0 height  <br>located at 0,0 defaults to the entire Decode Rect. <br> <br> <br>6.  References <br>-------------- <br> <br>Indeo Video Interactive Features and Capabilities <br>(http://www.intel.com/pc-supp/multimed/indeo) <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
