<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>VFW_SPEC.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2846"></a>VFW_SPEC.H</h2>
<pre><code>/************************************************************************ <br>*  vfw_spec.h                                                           * <br>*                                                                       * <br>* This code and information is provided "as is" without warranty of     * <br>* any kind, either expressed or implied, including but not limited to* <br>* the implied warranties of merchantability and/or fitness for a        * <br>* particular purpose.                                                   * <br>*                                                                       * <br>*Copyright (c) 1994-1997 Intel Corporation.* <br>*                         All Rights Reserved.                          * <br>*                                                                       * <br>************************************************************************/ <br>/* <br> * <br> *  DESCRIPTION: <br> *  The Indeo(R) Video Interactive codec provides access to new features <br> *  using the ICM_SETCODECSTATE and ICM_GETCODECSTATE messages. This header <br> *  file defines the data structures used in these messages. <br> */ <br> <br>/* $Revision:   1.29  $ <br> */ <br>/* Remove these three lines (23-25) before distributing publicly <br> * $Header:   I:\proj\src\common\vcs\vfw_spec.h_v   1.29   16 Dec 1996 14:53:46   tschwart  $ <br> */ <br> <br> <br>#ifndef __VFW_SPEC_H__ <br>#define __VFW_SPEC_H__ <br> <br> <br>/* The specific interface version is defined as follows: <br> */ <br>#define INTERFACE_MAJOR_NUMBER(v)((v) &gt;&gt; 16) <br>#define INTERFACE_MINOR_NUMBER(v)((v) &amp; 0xffff) <br>#define CREATE_INTERFACE_VERSION(maj,min)((((DWORD)maj)&lt;&lt;16) | (((DWORD)min) &amp; 0xffff)) <br>#define SPECIFIC_INTERFACE_VERSION CREATE_INTERFACE_VERSION(1,3) <br> <br>/* The codec specific information is handled by the general state <br> * handler. <br> */ <br>#define ICM_GETCODECSTATEICM_GETSTATE <br>#define ICM_SETCODECSTATEICM_SETSTATE <br>#defineEXTENDED_INTERFACE_SIZE1 <br> <br>/* OS Environments - Within the Microsoft Windows domain (Win 3.1, Win 95, <br> * and Win NT), both applications and codecs can be compiled in either 16 or <br> * 32-bit formats.  Any combination is allowed with the knowledge that data <br> * pointers will not be thunked. <br> */ <br>typedef enum { <br>OE_UNDEFINED, <br>OE_16, <br>OE_32, <br>} R4_OS_ENVIRONMENT; <br> <br> <br>/* The type field identifies the kind of operation that should be done as part <br> * of the ICM_GETCODECSTATE and ICM_SETCODECSTATE messages. <br> * <br> * The MT_UNDEFINED value is not a supported type - it should only be used <br> * to initialize variables to an "undefined" state. <br> */ <br>typedef enum { <br>MT_UNDEFINED, <br>MT_DECODE_FRAME_DEFAULT, <br>MT_DECODE_FRAME_VALUE, <br>MT_DECODE_SEQ_DEFAULT, <br>MT_DECODE_SEQ_VALUE, <br>MT_ENCODE_SEQ_DEFAULT, <br>MT_ENCODE_SEQ_VALUE, <br>MT_DECODE_INIT_DATA <br>} R4_MESSAGE_TYPE; <br> <br>/* <br> * MT_QUEUE is for 16-bit applications that call 32-bit codecs, only.  It <br> * is necessary to pre-set ICM_GETCODECSTATE messages by first issuing an <br> * ICM_SETCODECSTATE with the MT_QUEUE flag or'ed with the desired <br> * message type to get.  The ICM_GETCODECSTATE message which follows <br> * must set its dwFourCC field to 0. <br> */ <br>#defineMT_QUEUE  (1UL&lt;&lt;31) <br> <br>/* UCHAR is defined in Win32 but not Win16 MS* Windows headers. <br> */ <br>#if !defined UCHAR <br>typedef unsigned char UCHAR; <br>#endif <br> <br>/* A flag is false if it is zero, otherwise it is true. <br> */ <br>typedef DWORD R4_FLAG; <br> <br>/* Pointer to a Flag - A pointer to a flag is used by the codec to write  <br> * status information at a later time. <br> */ <br>typedef R4_FLAG FAR * PTR_R4_FLAG; <br>  <br> <br>/* Rectangle - The following structure is used to describe a rectangle. <br> */ <br>typedef struct { <br>DWORD dwX; <br>DWORD dwY; <br>DWORD dwWidth; <br>DWORD dwHeight; <br>} R4_RECT, FAR * PTR_R4_RECT; <br> <br> <br>/* Transparency Bitmask - A transparency bitmask contains one bit for each  <br> * pixel in the source image. If a bit is zero the data is transparent.   <br> * The first bit in each byte is identified by the mask 0x80.  The last  <br> * bit in each byte is identified by the mask 0x01.  <br> *  <br> * To allow faster access each row must begin on a DWORD boundary and the  <br> * total number of bytes must be rounded-up to a multipe of four. <br> */ <br>typedef BYTE FAR * PTR_R4_BITMASK; <br> <br> <br>/* Playback Platform - The codec supports several playback options.  This is <br> * not hardware specific.  Instead it rates the relative capabilities of the   <br> * hardware. <br> */ <br>typedef enum { <br>PP_LOW, <br>PP_MEDIUM, <br>PP_HIGH, <br>} R4_PLAYBACK_PLATFORM; <br> <br> <br>/* Transparency Method - The codec supports a number of tranparency encoding <br> * methods. The enumeration specifies the transparency method. <br> */ <br>typedef enum { <br>TM_UNDEFINED, <br>TM_NONE, <br>TM_RANGE, <br>TM_BITMASK, <br>TM_FRAME, <br>TM_ALPHA_CHANNEL/* XRGB color formats only */ <br>} R4_TRANS_METHOD; <br> <br> <br>/* Transparency Range - A transparency range is specified using minimum  <br> * and maximum values for R, G, and B. Any pixel with values within this range  <br> * (inclusive) is considered transparent. <br> */ <br>typedef struct { <br>WORDu16Reserved; <br>UCHARu8BlueLow; <br>UCHARu8BlueHigh; <br>UCHARu8GreenLow; <br>UCHARu8GreenHigh; <br>UCHARu8RedLow; <br>UCHARu8RedHigh; <br>} R4_RANGE, FAR * PTR_R4_RANGE; <br> <br> <br>/* The structure header is a set fields that are common, <br> * to each of the data structures that follows. <br> */ <br>typedef struct { <br>DWORDdwSize; <br>DWORDdwFourCC; <br>DWORDdwVersion; <br>LONGmtType; <br>LONGoeEnvironment; <br>DWORDdwFlags; <br>} R4_HEADER, FAR * PTR_R4_HEADER; <br>/* The structure header size is enough room for dwSize, dwFourCC, <br> * dwVersion, dwType, dwEnvironment, and dwFlags <br> */ <br>#define R4_STRUCTURE_HEADER_SIZE (sizeof(R4_HEADER)) <br> <br> <br>typedef enum { <br>OFF, <br>LOW, <br>MEDIUM, <br>HIGH <br>} R4_DITHER; <br> <br>/* Some decode parameters can be changed prior to either an ICM_DECOMPRESS or  <br> * ICM_DECOMPRESSEX mesage. These are found in the  R4_DEC_FRAME_DATA  <br> * structure.  See CUSTOM_INTERFACE_ENCODER_DATA for structure size constraints. <br> */ <br>#define DECFRAME_TIME_LIMIT(1UL&lt;&lt;0) <br>#define DECFRAME_DECODE_RECT(1UL&lt;&lt;1) <br>#define DECFRAME_VIEW_RECT(1UL&lt;&lt;2) <br>#define DECFRAME_BOUNDING_RECT(1UL&lt;&lt;3) <br>#define DECFRAME_TRANS_BITMASK(1UL&lt;&lt;4) <br>#define DECFRAME_BRIGHTNESS(1UL&lt;&lt;5) <br>#define DECFRAME_SATURATION(1UL&lt;&lt;6) <br>#define DECFRAME_CONTRAST(1UL&lt;&lt;7) <br>#define DECFRAME_FILL_COLOR(1UL&lt;&lt;9) <br>#define DECFRAME_8BIT_CONFIG_PALETTE(1UL&lt;&lt;10) <br>#define DECFRAME_8BIT_DITHER(1UL&lt;&lt;11) <br>#define DECFRAME_VIEW_RECT_ORIGIN(1UL&lt;&lt;12) <br>#define DECFRAME_INPUT_TRANS_MASK(1UL&lt;&lt;13) <br>#define DECFRAME_ACCESS_KEY_VIOLATION(1UL&lt;&lt;14) <br>#define DECFRAME_VALID(1UL&lt;&lt;31) <br> <br>/* Signals that the fill color provided is not a defined value */ <br>#define DECFRAME_FILL_UNDEFINED 0xFF000000 <br> <br>typedef struct { <br>DWORDdwSize; <br>DWORDdwFourCC; <br>DWORDdwVersion; <br>LONGmtType; <br>LONGoeEnvironment; <br>DWORDdwFlags; <br> <br>DWORDdwTimeLimit;/* version 1.0 */ <br>R4_RECTrDecodeRect;/* version 1.0 */ <br>R4_RECTrViewRect;/* version 1.0 */ <br>PTR_R4_RECT prBoundingRect;/* version 1.0 */ <br>PTR_R4_BITMASK pbmTransparencyBitmask;/* version 1.0 */ <br>PTR_R4_FLAG pfUpdatedTransparencyBitmask;/* version 1.0 */ <br>LONGlBrightness;/* version 1.0 */ <br>LONGlSaturation;/* version 1.0 */ <br>LONGlContrast;/* version 1.0 */ <br> <br>DWORDdwFillColor;/* version 1.2 */ <br>DWORDdwFirstPalIndex;/* version 1.2 */ <br>DWORDdwLastPalIndex;/* version 1.2 */ <br>LPRGBQUADprgbPalette;/* version 1.2 */ <br>R4_DITHEReDither;/* version 1.2 */ <br>R4_FLAGfViewRectOrigin;/* version 1.2 */ <br>PTR_R4_BITMASK pbmInputTransparencyBitmask;/* version 1.2 */ <br> <br>BOOLbAccessKeyViolation;/* version 1.3 */ <br>} R4_DEC_FRAME_DATA, FAR * PTR_R4_DEC_FRAME_DATA; <br> <br>/* Turning scalability off completely was accomplished in versions 1.0 and 1.1 <br> * of the interface by decoding in STEPPING mode.  Setting the scalability <br> * flag to false meant not to drop the quality of frames, but frames could <br> * still be dropped.  For this reason, if SC_OFF is used, it will map to  <br> * stepping mode, and SC_DONT_DROP_QUALITY occupies the position of "false." <br> */ <br>typedef enum { <br>SC_DONT_DROP_QUALITY, <br>SC_ON, <br>SC_DONT_DROP_FRAMES, <br>SC_OFF, <br>} R4_SCALABILITY; <br> <br>/* Other decode parameters can only be changed prior to either an  <br> * ICM_DECOMPRESS_BEGIN or an ICM_DECOMPRESSEX_BEGIN message.  These  <br> * are found in the R4_DEC_SEQ_DATA structure. <br> * See CUSTOM_INTERFACE_ENCODER_DATA for structure size constraints. <br> */  <br>#define DECSEQ_KEY(1UL&lt;&lt;0) <br>#define DECSEQ_SCALABILITY(1UL&lt;&lt;1) <br>#define DECSEQ_FILL_TRANSPARENT(1UL&lt;&lt;2) <br>#define DECSEQ_ALT_LINE(1UL&lt;&lt;3) <br>#define DECSEQ_VALID (1UL&lt;&lt;31) <br> <br>typedef struct { <br>DWORDdwSize; <br>DWORDdwFourCC; <br>DWORDdwVersion; <br>LONGmtType; <br>LONGoeEnvironment; <br>DWORDdwFlags; <br> <br>DWORDdwKey;/* version 1.0 */ <br>R4_FLAGfEnabledKey;/* version 1.0 */ <br>LONGeScalability;/* version 1.2; 1.0 fScalability */ <br>R4_FLAGfFillTransparentPixels;/* version 1.0 */ <br>R4_FLAGfAltLine;/* version 1.1 */ <br>} R4_DEC_SEQ_DATA, FAR * PTR_R4_DEC_SEQ_DATA; <br> <br> <br>/* Decode persistent data parameters can only be sent prior to the <br> * first ICM_DECOMPRESS_BEGIN message. These are found in the <br> * R4_DECODE_INIT_DATA structure. <br> */ <br>#define DECINIT_VALID(3UL&lt;&lt;30)/* valid bit + one other bit */ <br> <br>typedef struct { <br>DWORDdwSize; <br>DWORDdwFourCC; <br>DWORDdwVersion; <br>LONGmtType; <br>LONGoeEnvironment; <br>DWORDdwFlags; <br> <br>R4_FLAGfBidir;/* version 1.2 */ <br>R4_FLAGfDeltaFrames;/* version 1.2 */ <br>R4_FLAGfTransparency;/* version 1.2 */ <br>DWORDdwNLevels;/* version 1.2 */ <br>DWORDdwTileWidth;/* version 1.2 */ <br>DWORDdwTileHeight;/* version 1.2 */ <br> <br>BOOLbAccessKeyInBS;/* version 1.3 */ <br>} R4_DECODE_INIT_DATA, FAR * PTR_R4_DECODE_INIT_DATA; <br> <br> <br>/* Encode parameters can only be changed prior to an ICM_COMPRESS_BEGIN  <br> * messsage.  These are found in the R4_ENC_SEQ_DATA structure (these  <br> * include the parameters that can be set in the super dialog box). <br> * See CUSTOM_INTERFACE_ENCODER_DATA for structure size constraints. <br> */   <br>#define ENCSEQ_KEY(1UL&lt;&lt;0) <br>#define ENCSEQ_MINIMUM_VIEWPORT(1UL&lt;&lt;1) <br>#define ENCSEQ_TRANSPARENCY(1UL&lt;&lt;2) <br>#define ENCSEQ_SCALABILITY(1UL&lt;&lt;3) <br>#define ENCSEQ_BI_DIR_PREDICTION(1UL&lt;&lt;4) <br>#define ENCSEQ_PLAYBACK_PLATFORM(1UL&lt;&lt;5) <br>#define ENCSEQ_RANDOM_KEY_AND_BIDIR (1UL&lt;&lt;6) <br>#define ENCSEQ_FRAME_INFO(1UL&lt;&lt;7) <br>#define ENCSEQ_QUICK_COMPRESS(1UL&lt;&lt;8) <br>#define ENCSEQ_VALID(1UL&lt;&lt;31) <br> <br>typedef struct { <br>DWORDdwSize; <br>DWORDdwFourCC; <br>DWORDdwVersion; <br>LONGmtType; <br>LONGoeEnvironment; <br>DWORDdwFlags; <br> <br>DWORDdwKey;/* version 1.0 */ <br>DWORDdwMinViewportWidth;/* version 1.0 */ <br>DWORDdwMinViewportHeight;/* version 1.0 */ <br>R4_RANGErngTransparencyRange;/* version 1.0 */ <br>PTR_R4_BITMASK pbmTransparencyBitmask;/* version 1.0 */ <br>LONGtmTransparencyMethod;/* version 1.0 */ <br>R4_FLAGfEnabledKey;/* version 1.0 */ <br>R4_FLAGfScalability;/* version 1.0 */ <br>R4_FLAGfBiDirPrediction;/* version 1.0 */ <br>R4_FLAGfRandomKeyAndBiDir;/* version 1.0 */ <br>DWORDdwPlaybackPlatform;/* version 1.0 */ <br>WORDwFrameLatency;/* version 1.0 */ <br>WORDwDeadFrames;/* version 1.0 */ <br>R4_FLAGfQuickCompress;/* version 1.1 */ <br>} R4_ENC_SEQ_DATA, FAR * PTR_R4_ENC_SEQ_DATA; <br> <br> <br>#endif /* __VFW_SPEC_H__ */ <br></code></pre>
<p>&nbsp;</p></body>
</HTML>
