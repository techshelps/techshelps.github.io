<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>README.TXT</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2713"></a>README.TXT</h2>
<pre><code>#---------------------------------------------------------------------------- <br># <br>#  ActiveMovie readme.txt <br># <br>#  THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY <br>#  KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE <br>#  IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR <br>#  PURPOSE. <br># <br>#  Copyright (c) 1992 - 1997  Microsoft Corporation.  All Rights Reserved. <br># <br>#---------------------------------------------------------------------------- <br> <br>The async sample code comprises 3 directories: <br> <br> <br>INCLUDE <br>------- <br> <br>Defines some helper classes to create filters which conform to the <br>IAsyncReader interface. <br> <br> <br>Four classes are defined: <br> <br>    CAsyncReader <br>    ------------ <br>    To create a filter.  Defines the filter and pin. <br> <br>    CAsyncOutputPin <br>    --------------- <br>    The filter's output pin <br> <br>    CAsyncIo <br>    -------- <br>    Methods to manage a set of async requests <br> <br>    CAsyncStream <br>    ------------ <br>    An abstract class that represents the source of the data <br> <br> <br>BASE <br>---- <br> <br>    Impelments <br> <br>    -- CAsyncReader <br> <br>    -- CAsyncOutputPin <br> <br>    -- CAsyncIo <br> <br>    CAsyncReader is passed a CAsyncStream object which the filter uses <br>    as its data source <br> <br> <br>MEMFILE <br>------- <br> <br>    Consists of <br> <br>    1.  A definition of <br> <br>        --  CMemStream - a non-abstract class derived from CAsyncStream that <br>            wraps a memory segment as the IAsyncReader source data <br> <br>        --  CMemReader - a source filter derived from CAsyncReader.  It <br>            just overrides the constructor of CAsyncReader to set the <br>            output pin's media type dependent on the file type <br> <br>    1.  A main() routine that <br> <br>        Opens a file <br> <br>        Guesses the file's media type dependent on the file extension.  Note <br>        that RenderFile actually looks at the check bytes in the <br> <br>            HKEY_CLASSES_ROOT\Media Type <br> <br>        key of the registation data base to try to determine the media type <br>        and media subtype of the file. <br> <br>        Creates a filter graph <br> <br>        Creates a source filter of type CMemReader and adds it to the filter <br>        graph <br> <br>        Renders the output pin of this filter <br> <br>        Plays the graph through once <br></code></pre>
<p>&nbsp;</p></body>
</HTML>
