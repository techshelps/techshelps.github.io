<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>EZRGB24.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2816"></a>EZRGB24.H</h2>
<pre><code>//==========================================================================; <br>// <br>//  THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY <br>//  KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE <br>//  IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR <br>//  PURPOSE. <br>// <br>//  Copyright (c) 1992 - 1997  Microsoft Corporation.  All Rights Reserved. <br>// <br>//--------------------------------------------------------------------------; <br> <br>class CEZrgb24 : public CTransformFilter, <br> public IIPEffect, <br> public ISpecifyPropertyPages, <br> public CPersistStream <br>{ <br> <br>public: <br> <br>    DECLARE_IUNKNOWN; <br>    static CUnknown * WINAPI CreateInstance(LPUNKNOWN punk, HRESULT *phr); <br> <br>    // Reveals IEZrgb24 and ISpecifyPropertyPages <br>    STDMETHODIMP NonDelegatingQueryInterface(REFIID riid, void ** ppv); <br> <br>    // CPersistStream stuff <br>    HRESULT ScribbleToStream(IStream *pStream); <br>    HRESULT ReadFromStream(IStream *pStream); <br> <br>    // Overrriden from CTransformFilter base class <br> <br>    HRESULT Transform(IMediaSample *pIn, IMediaSample *pOut); <br>    HRESULT CheckInputType(const CMediaType *mtIn); <br>    HRESULT CheckTransform(const CMediaType *mtIn, const CMediaType *mtOut); <br>    HRESULT DecideBufferSize(IMemAllocator *pAlloc, <br>     ALLOCATOR_PROPERTIES *pProperties); <br>    HRESULT GetMediaType(int iPosition, CMediaType *pMediaType); <br> <br>    // These implement the custom IIPEffect interface <br> <br>    STDMETHODIMP get_IPEffect(int *IPEffect, REFTIME *StartTime, REFTIME *Length); <br>    STDMETHODIMP put_IPEffect(int IPEffect, REFTIME StartTime, REFTIME Length); <br> <br>    // ISpecifyPropertyPages interface <br>    STDMETHODIMP GetPages(CAUUID *pPages); <br> <br>    // CPersistStream override <br>    STDMETHODIMP GetClassID(CLSID *pClsid); <br> <br>private: <br> <br>    // Constructor <br>    CEZrgb24(TCHAR *tszName, LPUNKNOWN punk, HRESULT *phr); <br> <br>    // Look after doing the special effect <br>    BOOL CanPerformEZrgb24(const CMediaType *pMediaType) const; <br>    HRESULT Copy(IMediaSample *pSource, IMediaSample *pDest) const; <br>    HRESULT Transform(IMediaSample *pMediaSample); <br> <br>    CCritSecm_EZrgb24Lock;          // Private play critical section <br>    int         m_effect;               // Which effect are we processing <br>    CRefTimem_effectStartTime;      // When the effect will begin <br>    CRefTimem_effectTime;           // And how long it will last for <br>    const long m_lBufferRequest;// The number of buffers to use <br> <br>}; // EZrgb24 <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
