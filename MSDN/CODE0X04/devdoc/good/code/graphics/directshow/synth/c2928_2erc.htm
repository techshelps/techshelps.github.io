<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ISYNTH.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2928"></a>ISYNTH.H</h2>
<pre><code>//==========================================================================; <br>// <br>//  THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY <br>//  KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE <br>//  IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR <br>//  PURPOSE. <br>// <br>//  Copyright (c) 1992 - 1997  Microsoft Corporation.  All Rights Reserved. <br>// <br>//--------------------------------------------------------------------------; <br>// <br>// isynth.h <br>// <br>// A custom interface to allow the user to adjust the frequency <br> <br>#ifndef __ISYNTH__ <br>#define __ISYNTH__ <br> <br>#ifdef __cplusplus <br>extern "C" { <br>#endif <br> <br> <br>// <br>// ISynth's GUID <br>// <br>// {FFC08882-CDAC-11ce-8A03-00AA006ECB65} <br>DEFINE_GUID(IID_ISynth, <br>0xffc08882, 0xcdac, 0x11ce, 0x8a, 0x3, 0x0, 0xaa, 0x0, 0x6e, 0xcb, 0x65); <br> <br> <br>// <br>// ISynth <br>// <br>DECLARE_INTERFACE_(ISynth, IUnknown) { <br> <br>    STDMETHOD(get_Frequency) (THIS_ <br>                int *Frequency          /* [out] */    // the current frequency <br>             ) PURE; <br> <br>    STDMETHOD(put_Frequency) (THIS_ <br>                int    Frequency        /* [in] */    // Change to this frequency <br>             ) PURE; <br> <br>    STDMETHOD(get_Waveform) (THIS_ <br>                int *Waveform           /* [out] */    // the current Waveform <br>             ) PURE; <br> <br>    STDMETHOD(put_Waveform) (THIS_ <br>                int    Waveform         /* [in] */    // Change to this Waveform <br>             ) PURE; <br> <br>    STDMETHOD(get_Channels) (THIS_ <br>                int *Channels           /* [out] */    // the current Channels <br>             ) PURE; <br> <br>    STDMETHOD(put_Channels) (THIS_ <br>                int    Channels         /* [in] */    // Change to this Channels <br>             ) PURE; <br> <br>    STDMETHOD(get_BitsPerSample) (THIS_ <br>                int *BitsPerSample      /* [out] */    // the current BitsPerSample <br>             ) PURE; <br> <br>    STDMETHOD(put_BitsPerSample) (THIS_ <br>                int    BitsPerSample    /* [in] */    // Change to this BitsPerSample <br>             ) PURE; <br> <br>    STDMETHOD(get_SamplesPerSec) (THIS_ <br>                 int *SamplesPerSec     /* [out] */    // the current SamplesPerSec <br>             ) PURE; <br> <br>    STDMETHOD(put_SamplesPerSec) (THIS_ <br>                  int    SamplesPerSec  /* [in] */    // Change to this SamplesPerSec <br>             ) PURE; <br> <br>    STDMETHOD(get_Amplitude) (THIS_ <br>                  int *Amplitude        /* [out] */    // the current Amplitude <br>             ) PURE; <br> <br>    STDMETHOD(put_Amplitude) (THIS_ <br>                  int    Amplitude      /* [in] */    // Change to this Amplitude <br>              ) PURE; <br> <br>    STDMETHOD(get_SweepRange) (THIS_ <br>                  int *SweepStart,      /* [out] */ <br>                  int *SweepEnd         /* [out] */ <br>             ) PURE; <br> <br>    STDMETHOD(put_SweepRange) (THIS_ <br>                  int    SweepStart,    /* [in] */ <br>                  int    SweepEnd       /* [in] */ <br>             ) PURE; <br> <br>}; <br> <br> <br>#ifdef __cplusplus <br>} <br>#endif <br> <br>#endif // __ISYNTH__ <br> <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
