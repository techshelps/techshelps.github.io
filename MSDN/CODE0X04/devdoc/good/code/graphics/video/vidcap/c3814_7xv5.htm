<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PROFILE.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context3821"></a>PROFILE.H</h2>
<pre><code>/************************************************************************** <br> * <br> *  THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY <br> *  KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE <br> *  IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR <br> *  PURPOSE. <br> * <br> *  Copyright 1992 - 1998 Microsoft Corporation.  All Rights Reserved. <br> * <br> **************************************************************************/ <br>/**************************************************************************** <br> * <br> *   profile.h: Registry access  <br> * <br> *   Vidcap32 Source code <br> * <br> ***************************************************************************/ <br> <br>/* <br> * utility functions to read and write values to the profile, <br> * using mmtools.ini for Win16 or current user\software\microsoft\mm tools <br> * in the registry for Win32 <br> */ <br> <br>/* <br> * read a BOOL flag from the profile, or return default if <br> * not found. <br> */ <br>BOOL mmGetProfileFlag(LPSTR appname, LPSTR valuename, BOOL bDefault); <br> <br>/* <br> * write a boolean value to the registry, if it is not the <br> * same as the default or the value already there <br> */ <br>VOID mmWriteProfileFlag(LPSTR appname, LPSTR valuename, BOOL bValue, BOOL bDefault); <br> <br>/* <br> * read a UINT from the profile, or return default if <br> * not found. <br> */ <br>UINT mmGetProfileInt(LPSTR appname, LPSTR valuename, UINT uDefault); <br> <br>/* <br> * write a UINT to the profile, if it is not the <br> * same as the default or the value already there <br> */ <br>VOID mmWriteProfileInt(LPSTR appname, LPSTR valuename, UINT uValue, UINT uDefault); <br> <br>/* <br> * read a string from the profile into pResult. <br> * result is number of bytes written into pResult <br> */ <br>DWORD <br>mmGetProfileString( <br>    LPSTR appname, <br>    LPSTR valuename, <br>    LPSTR pDefault, <br>    LPSTR pResult, <br>    int cbResult <br>); <br> <br> <br>/* <br> * write a string to the profile <br> */ <br>VOID mmWriteProfileString(LPSTR appname, LPSTR valuename, LPSTR pData); <br> <br> <br>/* <br> * read binary values from the profile into pResult. <br> * result is number of bytes written into pResult <br> */ <br>DWORD <br>mmGetProfileBinary( <br>    LPSTR appname, <br>    LPSTR valuename, <br>    LPVOID pDefault,   <br>    LPVOID pResult,   // if NULL, return the required buffer size <br>    int cbSize); <br> <br>/* <br> * write binary data to the profile <br> */ <br>VOID <br>mmWriteProfileBinary(LPSTR appname, LPSTR valuename, LPVOID pData, int cbData); <br>    <br> <br> <br> <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
