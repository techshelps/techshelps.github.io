<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>VIDFRAME.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context3832"></a>VIDFRAME.H</h2>
<pre><code>/************************************************************************** <br> * <br> *  THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY <br> *  KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE <br> *  IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR <br> *  PURPOSE. <br> * <br> *  Copyright 1992 - 1998 Microsoft Corporation.  All Rights Reserved. <br> * <br> **************************************************************************/ <br>/**************************************************************************** <br> * <br> *   vidframe.h: Frame for capture window <br> * <br> *   Vidcap32 Source code <br> * <br> ***************************************************************************/ <br> <br>/* <br> * interface to vidframe window class - this window class creates a child <br> * AVICAP window, and is responsible for positioning it within the vidframe <br> * window, framing it, and scrolling it if it will not fit. Call <br> * vidframeCreate to create the window, and vidframeLayout if the <br> * video image size might have changed. <br> */ <br> <br> <br> <br>/* <br> * create a frame window and child capture window at the <br> * given location. Initialise the class if this is the <br> * first time through. <br> * <br> * returns the window handle of the frame window <br> * (or NULL if failure). returns the window handle of the AVICAP window <br> * via phwndCap. <br> */ <br>HWND vidframeCreate( <br>    HWND hwndParent, <br>    HINSTANCE hInstance, <br>    HINSTANCE hPrevInstance, <br>    int x, <br>    int y, <br>    int cx, <br>    int cy, <br>    HWND FAR * phwndCap <br>); <br> <br> <br>/* <br> * layout the window  - decide if we need scrollbars or <br> * not, and position the avicap window correctly <br> * <br> * called if the size of the vidframe window changes or can be <br> * called externally whenever the video size might have changed. <br> */ <br>void vidframeLayout(HWND hwndFrame, HWND hwndCap); <br> <br>/* <br> * change the background fill brush to be one of- <br> *  IDD_PrefsDefBackground  - windows default background colour <br> *  IDD_PrefsLtGrey - light grey <br> *  IDD_PrefsDkGrey - dark grey <br> *  IDD_PrefsBlack - black <br> */ <br>void vidframeSetBrush(HWND hwnd, int iPref); <br></code></pre>
<p>&nbsp;</p></body>
</HTML>
