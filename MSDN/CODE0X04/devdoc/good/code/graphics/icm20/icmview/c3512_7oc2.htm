<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>REGUTIL.C</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context3512"></a>REGUTIL.C</h2>
<pre><code>//THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF <br>//ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO <br>//THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A <br>// PARTICULAR PURPOSE. <br>// <br>// Copyright  1994-1997  Microsoft Corporation.  All Rights Reserved. <br>// <br>//  FILE: <br>//    REGUTIL.C <br>// <br>//  PURPOSE: <br>//    Registry access functions. <br>// <br>//  PLATFORMS: <br>//    Windows 95, Windows NT <br>// <br>//  SPECIAL INSTRUCTIONS: N/A <br>// <br> <br>// Windows Header Files: <br>#pragma warning(disable:4001)   // Single-line comment warnings <br>#pragma warning(disable:4115)   // Named type definition in parentheses <br>#pragma warning(disable:4201)   // Nameless struct/union warning <br>#pragma warning(disable:4214)   // Bit field types other than int warnings <br>#pragma warning(disable:4514)   // Unreferenced inline function has been removed <br> <br>// Windows Header Files: <br>#include &lt;Windows.h&gt; <br>#include &lt;WindowsX.h&gt; <br> <br>// Restore the warnings--leave the single-line comment warning OFF <br>#pragma warning(default:4115)   // Named type definition in parentheses <br>#pragma warning(default:4201)   // Nameless struct/union warning <br>#pragma warning(default:4214)   // Bit field types other than int warnings <br> <br>// C RunTime Header Files <br> <br>// Local Header Files <br> <br>// local definitions <br> <br>// default settings <br> <br>// external functions <br> <br>// external data <br> <br>// public data <br> <br>// private data <br> <br>// public functions <br> <br>////////////////////////////////////////////////////////////////////////// <br>//  Function:  GetRegistryString <br>// <br>//  Description: <br>//    Retrieves the string associated with the specified key in the registry. <br>// <br>//  Parameters: <br>//    @@@ <br>// <br>//  Returns: <br>//    LPTSTR   Pointer to registry string.  NULL upon failure. <br>// <br>//  Comments: <br>// <br>// <br>////////////////////////////////////////////////////////////////////////// <br>LPTSTR GetRegistryString(HKEY hKeyClass, LPTSTR lpszSubKey, LPTSTR lpszValueName) <br>{ <br>    // Local variables <br>    HKEY          hKey;                 // Registry key <br>    LPTSTR         lpszKeyValue;         // Buffer for key name <br>    DWORD         dwKeySize;            // Size of key value <br>    DWORD         dwKeyDataType;        // Type of data stored in key <br>    LONG          lRC;                  // Return code <br> <br>    //  Initialize variables <br>    dwKeyDataType = 0; <br>    dwKeySize = 0; <br>    hKey = NULL; <br> <br>    lRC = RegOpenKey(hKeyClass, lpszSubKey, &amp;hKey); <br>    if (lRC != ERROR_SUCCESS) <br>    { <br>        return(NULL); <br>    } <br> <br>    // Got key, get value.  First, get the size of the key. <br>    lRC = RegQueryValueEx(hKey, lpszValueName, NULL, NULL, NULL, &amp;dwKeySize); <br>    if (lRC != ERROR_SUCCESS) <br>    { <br>        return(NULL); <br>    } <br>    if (dwKeySize &lt;= 1)  // Registry will return "" if no printers installed <br>    { <br>        return(NULL); <br>    } <br> <br>    lpszKeyValue = GlobalAlloc(GPTR, (++dwKeySize)); <br>    if (lpszKeyValue == NULL) <br>    { <br>        return(NULL); <br>    } <br> <br>    lRC = RegQueryValueEx(hKey, lpszValueName, NULL, &amp;dwKeyDataType, (LPBYTE)lpszKeyValue, &amp;dwKeySize); <br>    return(lpszKeyValue); <br>}   // End of function GetRegistryString <br> <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
