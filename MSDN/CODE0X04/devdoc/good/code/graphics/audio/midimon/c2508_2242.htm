<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PREFER.C</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2522"></a>PREFER.C</h2>
<pre><code>/************************************************************************** <br> * <br> *  THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY <br> *  KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE <br> *  IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR <br> *  PURPOSE. <br> * <br> *  Copyright 1993 - 1998 Microsoft Corporation.  All Rights Reserved. <br> *  <br> **************************************************************************/ <br> <br>/* <br> * prefer.c - Routines to get and set user preferences. <br> */ <br> <br>#include &lt;windows.h&gt; <br>#include &lt;mmsystem.h&gt; <br>#include &lt;stdio.h&gt; <br>#include "midimon.h" <br>#include "prefer.h" <br> <br>/* getPreferences - Reads .INI file and gets the setup preferences. <br> *      Currently, the only user preferences are window location and size. <br> *      If the .INI file does not exist, returns default values. <br> * <br> * Params:  lpPreferences - Points to a PREFERENCES data structure that <br> *              is filled with the retrieved user preferences. <br> * <br> * Return:  void <br>*/ <br>void getPreferences(LPPREFERENCES lpPreferences) <br>{ <br>    lpPreferences-&gt;iInitialX =  <br>        GetPrivateProfileInt(INI_DISPLAYWINDOW, INI_X, DEF_X, INI_FILENAME); <br> <br>    lpPreferences-&gt;iInitialY =  <br>        GetPrivateProfileInt(INI_DISPLAYWINDOW, INI_Y, DEF_Y, INI_FILENAME); <br> <br>    lpPreferences-&gt;iInitialW =  <br>        GetPrivateProfileInt(INI_DISPLAYWINDOW, INI_W, DEF_W, INI_FILENAME); <br> <br>    lpPreferences-&gt;iInitialH =  <br>        GetPrivateProfileInt(INI_DISPLAYWINDOW, INI_H, DEF_H, INI_FILENAME); <br>} <br> <br>/* setPreferences - Writes the .INI file with the given setup preferences. <br> * <br> * Params:  lpPreferences - Points to a PREFERENCES data structure containing <br> *              the user preferences. <br> * <br> * Return:  void <br> */ <br>void setPreferences(LPPREFERENCES lpPreferences) <br>{ <br>    char szTempString[20]; <br> <br>    while (1) { // This now aborts after one error. <br>sprintf(szTempString, "%d", lpPreferences-&gt;iInitialX); <br>if(WritePrivateProfileString(INI_DISPLAYWINDOW, INI_X, <br>  (LPSTR) szTempString, INI_FILENAME) == 0) <br>break; <br>         <br>sprintf(szTempString, "%d", lpPreferences-&gt;iInitialY); <br>if(WritePrivateProfileString(INI_DISPLAYWINDOW, INI_Y, <br>  (LPSTR) szTempString, INI_FILENAME) == 0) <br>break; <br>         <br>sprintf(szTempString, "%d", lpPreferences-&gt;iInitialW); <br>if(WritePrivateProfileString(INI_DISPLAYWINDOW, INI_W, <br>  (LPSTR) szTempString, INI_FILENAME) == 0) <br>break; <br>         <br>sprintf(szTempString, "%d", lpPreferences-&gt;iInitialH); <br>if(WritePrivateProfileString(INI_DISPLAYWINDOW, INI_H, <br>  (LPSTR) szTempString, INI_FILENAME) == 0) <br>break; <br>return; <br>} <br>Error(GetStringRes(IDS_WRITEERR)); <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
