<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DEBUG.C</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2532"></a>DEBUG.C</h2>
<pre><code>/***************************************************************************** <br>* <br>*  THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF <br>*  ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED <br>*  TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR <br>*  A PARTICULAR PURPOSE. <br>* <br>*  Copyright 1993 - 1998 Microsoft Corporation. All Rights Reserved. <br>* <br>****************************************************************************** <br>* <br>* Debug.C <br>* <br>* Debug output routines <br>* <br>*****************************************************************************/ <br> <br>#ifdef   DEBUG <br>#include &lt;windows.h&gt; <br>#include &lt;mmsystem.h&gt;   <br>#include &lt;stdarg.h&gt; <br> <br>#include "global.h" <br>#include "debug.h" <br> <br>PRIVATE VOID FAR CDECL DbgVPrintF(LPSTR szFmt, LPSTR va); <br> <br>/* <br>**  Since we don't UNICODE our debugging messages, use the ASCII entry <br>**  points regardless of how we are compiled. <br>*/ <br>#define wvsprintfA          wvsprintf <br>#define GetProfileIntA      GetProfileInt <br>#define OutputDebugStringA  OutputDebugStr <br> <br>#define lstrcatA            lstrcat <br>#define lstrlenA            lstrlen <br> <br>BOOL                        __gfDbgEnabled  = TRUE; <br>UINT                        __guDbgLevel    = 0;    <br> <br>WORD                        wDebugLevel     = 0; <br> <br>/***************************************************************************** <br>* <br>* WinAssert <br>* <br>* Cause a debug out on an assert; breaking to the debugger if installed. <br>* <br>* lpstrExp                  - Assert expression string <br>* lpstrFile                 - File of assert <br>* dwLine                    - Line number of assert <br>* <br>* Handle WM_CREATE message to main application window. <br>* <br>* HWND hWnd                 - Window handle <br>* CREATESTRUCT FAR* lpCreateStruct <br>*                           - Pointer to creation parameters for the window. <br>* <br>*****************************************************************************/ <br>VOID WINAPI WinAssert( <br>    LPSTR                   lpstrExp, <br>    LPSTR                   lpstrFile, <br>    DWORD                   dwLine) <br>{ <br>    static char szWork[256]; <br>    static char BCODE szFormat[] = <br>        "!Assert: %s#%lu [%s]"; <br> <br>    dprintf(0, (LPSTR)szFormat, (LPSTR)lpstrFile, dwLine, (LPSTR)lpstrExp); <br>} <br> <br>/***************************************************************************** <br>* <br>* DbgVPrintF <br>* <br>* Format and print a debug output string <br>* <br>* szFmt                     - Format string <br>* va                        - printf style argument list <br>* <br>* The following characters have special meanings when they are <br>* the first in the string: <br>* <br>*   !   Causes a break into the debugger after the output has been printed <br>*   `   Causes no module prefix to be printed <br>*   ~   Causes no CR/LF pair to follow the string <br>* <br>*****************************************************************************/ <br>VOID FAR CDECL DbgVPrintF( <br>    LPSTR                   szFmt,  <br>    LPSTR                   va) <br>{ <br>    char                    ach[DEBUG_MAX_LINE_LEN]; <br>    BOOL                    fDebugBreak = FALSE; <br>    BOOL                    fPrefix     = TRUE; <br>    BOOL                    fCRLF       = TRUE; <br> <br>    ach[0] = '\0'; <br> <br>    for (;;) <br>    { <br>        switch(*szFmt) <br>        { <br>            case '!': <br>                fDebugBreak = TRUE; <br>                szFmt++; <br>                continue; <br> <br>            case '`': <br>                fPrefix = FALSE; <br>                szFmt++; <br>                continue; <br> <br>            case '~': <br>                fCRLF = FALSE; <br>                szFmt++; <br>                continue; <br>        } <br> <br>        break; <br>    } <br> <br>    if (fDebugBreak) <br>    { <br>        ach[0] = '\007'; <br>        ach[1] = '\0'; <br>    } <br> <br>    if (fPrefix) <br>        lstrcatA(ach, DEBUG_MODULE_NAME ": "); <br> <br>    wvsprintfA(ach + lstrlenA(ach), szFmt, (LPSTR)va); <br> <br>    if (fCRLF) <br>        lstrcatA(ach, "\r\n"); <br> <br>    OutputDebugStringA(ach); <br> <br>    if (fDebugBreak) <br>        DebugBreak(); <br>} <br> <br>/***************************************************************************** <br>* <br>* dprintf <br>* <br>* User-level function to print a debug string <br>* <br>* uDbgLevel                 - Debug level of this message <br>* szFmt                     - Format string for this message <br>* ...                       - printf style arguments <br>* <br>* The message will be printed only if debugging is enabled and the messages's <br>* debug level is less than or equal to the current debug level. <br>* <br>* This function is called by the DPF() macro in Debug.H. <br>* <br>*****************************************************************************/ <br>void FAR CDECL dprintf( <br>    UINT                    uDbgLevel,  <br>    LPSTR                   szFmt,  <br>    ...) <br>{ <br>    va_list                 va; <br> <br>    if (!__gfDbgEnabled || (__guDbgLevel &lt; uDbgLevel)) <br>        return; <br> <br>    va_start(va, szFmt); <br>    DbgVPrintF(szFmt, (LPSTR)va); <br>    va_end(va); <br>} <br> <br> <br>/***************************************************************************** <br>* <br>* DbgEnable <br>* <br>* Enable or disable debug output <br>* <br>* fEnable                   - Enable or disable output <br>* <br>* Returns the old state. <br>* <br>*****************************************************************************/ <br>BOOL WINAPI DbgEnable( <br>    BOOL                    fEnable) <br>{ <br>    BOOL                    fOldState; <br> <br>    fOldState      = __gfDbgEnabled; <br>    __gfDbgEnabled = fEnable; <br> <br>    return (fOldState); <br>} <br> <br>/***************************************************************************** <br>* <br>* DbgSetLevel <br>* <br>* Set the current level for debug output <br>* <br>* uLevel                    - New level for debug output <br>* <br>* Returns the old level. <br>* <br>*****************************************************************************/ <br>UINT WINAPI DbgSetLevel( <br>    UINT                    uLevel) <br>{ <br>    UINT                    uOldLevel; <br> <br>    uOldLevel    = __guDbgLevel; <br>    __guDbgLevel = wDebugLevel = uLevel; <br> <br>    return (uOldLevel); <br>} <br> <br> <br>/***************************************************************************** <br>* <br>* DbgInitialize <br>* <br>* Get debug output settings from WIN.INI for this module <br>* <br>* fEnable                   - Enable or disable debug output <br>* <br>* Returns the current debug level <br>* <br>* The debug level will be read from the [debug] section of WIN.INI, <br>* from an entry with this module's name as #define'd in Debug.H. <br>* <br>* WIN.INI: <br>*  [Debug] <br>*  Module=3 <br>* <br>*****************************************************************************/ <br>UINT WINAPI DbgInitialize(BOOL fEnable) <br>{ <br>    DbgSetLevel(GetProfileIntA(DEBUG_SECTION, DEBUG_MODULE_NAME, 0)); <br>    DbgEnable(fEnable); <br> <br>    return (__guDbgLevel); <br>}  <br> <br> <br>#endif </code></pre>
<p>&nbsp;</p></body>
</HTML>
