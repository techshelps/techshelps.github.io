<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SEQ.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2533"></a>SEQ.H</h2>
<pre><code>/***************************************************************************** <br>* <br>*  THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF <br>*  ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED <br>*  TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR <br>*  A PARTICULAR PURPOSE. <br>* <br>*  Copyright 1993 - 1998 Microsoft Corporation. All Rights Reserved. <br>* <br>****************************************************************************** <br>* <br>* Seq.H <br>* <br>* Public include file for sequencer interface. <br>* <br>*****************************************************************************/ <br> <br>#ifndef _SEQ_ <br>#define _SEQ_ <br> <br>#include "global.h" <br>#include "smf.h"    <br> <br>#define  VERSION_MINOR              0x00 <br>#define  VERSION_MAJOR              0x04 <br>#define  SEQ_VERSION                ((DWORD)(WORD)((BYTE)VERSION_MINOR | (((WORD)(BYTE)VERSION_MAJOR) &lt;&lt; 8))) <br> <br>#define SEQ_F_EOF           0x00000001L <br>#define SEQ_F_COLONIZED     0x00000002L <br>#define SEQ_F_WAITING       0x00000004L    <br>                                           <br>#define SEQ_S_NOFILE        0 <br>#define SEQ_S_OPENED        1 <br>#define SEQ_S_PREROLLING    2 <br>#define SEQ_S_PREROLLED     3 <br>#define SEQ_S_PLAYING       4 <br>#define SEQ_S_PAUSED        5 <br>#define SEQ_S_STOPPING      6 <br>#define SEQ_S_RESET         7 <br> <br>#define MMSG_DONE                   (WM_USER+20) <br> <br>typedef struct tag_preroll <br>{ <br>    TICKS       tkBase; <br>    TICKS       tkEnd; <br>}   PREROLL, <br>    FAR *LPPREROLL; <br> <br>typedef struct tag_seq NEAR* PSEQ; <br>typedef struct tag_seq <br>{ <br>    DWORD       cBuffer;            /* Number of streaming buffers to alloc         */ <br>    DWORD       cbBuffer;           /* Size of each streaming buffer                */ <br>    LPSTR       pstrFile;           /* Pointer to filename to open                  */ <br>    UINT        uDeviceID;          /* Requested MIDI device ID for MMSYSTEM        */ <br>    UINT        uMCIDeviceID;       /* Our MCI device ID given to us                */ <br>    UINT        uMCITimeFormat;     /* Current time format                          */ <br>    UINT        uMCITimeDiv;        /* MCI_SEQ_DIV_xxx for current file             */ <br>HWNDhWnd;/* Where to post MMSG_DONE when done playing*/ <br> <br>    UINT        uState;             /* Sequencer state (SEQ_S_xxx)                  */ <br>    TICKS       tkLength;           /* Length of longest track                      */ <br>    DWORD       cTrk;               /* Number of tracks                             */ <br>    MMRESULT    mmrcLastErr;        /* Error return from last sequencer operation   */ <br> <br>    PSEQ        pNext;              /* Link to next PSEQ                            */ <br>    HSMF        hSmf;               /* Handle to open file                          */ <br>    HMIDIOUT    hmidi;              /* Handle to open MIDI device                   */ <br>    DWORD       dwTimeDivision;     /* File time division                           */ <br> <br>    LPBYTE      lpbAlloc;           /* Streaming buffers -- initial allocation      */  <br>    LPMIDIHDR   lpmhFree;           /* Streaming buffers -- free list               */ <br>    LPMIDIHDR   lpmhPreroll;        /* Streaming buffers -- preroll buffer          */ <br>    DWORD       cbPreroll;          /* Streaming buffers -- size of lpmhPreroll     */ <br>    UINT        uBuffersInMMSYSTEM; /* Streaming buffers -- in use                  */ <br>     <br>    TICKS       tkBase;             /* Where playback started from in stream        */ <br>    TICKS       tkEnd;              /* Where playback should end                    */ <br>     <br>    DWORD       fdwSeq;             /* Various sequencer flags                      */ <br> <br>}   SEQ, <br>    NEAR *PSEQ; <br> <br>/* sequence.c <br>*/ <br> <br>MMRESULT FNLOCAL seqAllocBuffers(     <br>    PSEQ                pseq); <br> <br>VOID FNLOCAL seqFreeBuffers(          <br>    PSEQ                pseq); <br> <br>MMRESULT FNLOCAL seqOpenFile(         <br>    PSEQ                pseq); <br> <br>MMRESULT FNLOCAL seqCloseFile(        <br>    PSEQ                pseq); <br> <br>MMRESULT FNLOCAL seqPreroll(          <br>    PSEQ                pseq, <br>    LPPREROLL           lppreroll); <br> <br>MMRESULT FNLOCAL seqStart(            <br>    PSEQ                pseq); <br> <br>MMRESULT FNLOCAL seqPause(            <br>    PSEQ                pseq); <br> <br>MMRESULT FNLOCAL seqRestart(          <br>    PSEQ                pseq); <br> <br>MMRESULT FNLOCAL seqStop(             <br>    PSEQ                pseq); <br> <br>MMRESULT FNLOCAL seqTime(             <br>    PSEQ                pseq, <br>    PTICKS              pTicks); <br> <br>TICKS FNLOCAL seqMillisecsToTicks(    <br>    PSEQ                pseq, <br>    DWORD               msOffset); <br> <br>DWORD FNLOCAL seqTicksToMillisecs(    <br>    PSEQ                pseq, <br>    TICKS               tkOffset); <br> <br>#endif </code></pre>
<p>&nbsp;</p></body>
</HTML>
