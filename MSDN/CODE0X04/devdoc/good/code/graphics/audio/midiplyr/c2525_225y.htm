<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SMF.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2536"></a>SMF.H</h2>
<pre><code>/***************************************************************************** <br>* <br>*  THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF <br>*  ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED <br>*  TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR <br>*  A PARTICULAR PURPOSE. <br>* <br>*  Copyright 1993 - 1998 Microsoft Corporation. All Rights Reserved. <br>* <br>****************************************************************************** <br>* <br>* SMF.H <br>* <br>* Public include file for Standard MIDI File access routines. <br>* <br>*****************************************************************************/ <br> <br>#ifndef _SMF_ <br>#define _SMF_ <br> <br>#include "global.h"  <br> <br>typedef DWORD SMFRESULT; <br>typedef DWORD TICKS; <br>typedef TICKS FAR *PTICKS; <br>typedef BYTE HUGE *HPBYTE; <br> <br>#define MAX_TICKS           ((TICKS)0xFFFFFFFFL) <br> <br>#define SMF_SUCCESS         (0L) <br>#define SMF_INVALID_FILE    (1L) <br>#define SMF_NO_MEMORY       (2L) <br>#define SMF_OPEN_FAILED     (3L) <br>#define SMF_INVALID_TRACK   (4L) <br>#define SMF_META_PENDING    (5L) <br>#define SMF_ALREADY_OPEN    (6L) <br>#define SMF_END_OF_TRACK    (7L) <br>#define SMF_NO_META         (8L) <br>#define SMF_INVALID_PARM    (9L) <br>#define SMF_INVALID_BUFFER  (10L) <br>#define SMF_END_OF_FILE     (11L) <br>#define SMF_REACHED_TKMAX   (12L) <br> <br>DECLARE_HANDLE(HSMF); <br> <br>typedef struct tag_smfopenstruct <br>{ <br>    LPSTR               pstrName; <br>    DWORD               dwTimeDivision; <br>    HSMF                hSmf; <br>}   SMFOPENFILESTRUCT, <br>    FAR *PSMFOPENFILESTRUCT; <br> <br>extern SMFRESULT FNLOCAL smfOpenFile( <br>    PSMFOPENFILESTRUCT  psofs); <br> <br>extern SMFRESULT FNLOCAL smfCloseFile( <br>    HSMF                hsmf); <br> <br>typedef struct tag_smffileinfo <br>{ <br>    DWORD               dwTracks; <br>    DWORD               dwFormat; <br>    DWORD               dwTimeDivision; <br>    TICKS               tkLength; <br>}   SMFFILEINFO, <br>    FAR *PSMFFILEINFO; <br> <br>extern SMFRESULT FNLOCAL smfGetFileInfo( <br>    HSMF                hsmf, <br>    PSMFFILEINFO        psfi); <br> <br>extern DWORD FNLOCAL smfTicksToMillisecs( <br>    HSMF                hsmf, <br>    TICKS               tkOffset); <br> <br>extern DWORD FNLOCAL smfMillisecsToTicks( <br>    HSMF                hsmf, <br>    DWORD               msOffset); <br> <br>extern SMFRESULT FNLOCAL smfReadEvents( <br>    HSMF                hsmf, <br>    LPMIDIHDR           lpmh, <br>    TICKS               tkMax); <br> <br>extern SMFRESULT FNLOCAL smfSeek( <br>    HSMF                hsmf, <br>    TICKS               tkPosition, <br>    LPMIDIHDR           lpmh); <br> <br>extern DWORD FNLOCAL smfGetStateMaxSize( <br>    void); <br> <br>/* Buffer described by LPMIDIHDR is in polymsg format, except that it <br>** can contain meta-events (which will be ignored during playback by <br>** the current system). This means we can use the pack functions, etc. <br>*/ <br>#define PMSG_META       ((BYTE)0xC0) <br> <br>#endif </code></pre>
<p>&nbsp;</p></body>
</HTML>
