<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DEBUG.C</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2562"></a>DEBUG.C</h2>
<pre><code>//==========================================================================; <br>// <br>//  THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF <br>//  ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED <br>//  TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR <br>//  A PARTICULAR PURPOSE. <br>// <br>//  Copyright 1993 - 1998 Microsoft Corporation. All Rights Reserved. <br>// <br>//--------------------------------------------------------------------------; <br>// <br>//  debug.c <br>// <br>//  Description: <br>//      This file contains code yanked from several places to provide debug <br>//      support that works in win 16 and win 32. <br>// <br>//  History: <br>//      11/23/92 <br>// <br>//==========================================================================; <br> <br>#ifdef DEBUG <br> <br>#include &lt;windows.h&gt; <br>#include &lt;windowsx.h&gt; <br>#include &lt;stdarg.h&gt; <br>#include "debug.h" <br> <br> <br>// <br>//  since we don't UNICODE our debugging messages, use the ASCII entry <br>//  points regardless of how we are compiled. <br>// <br>#ifdef WIN32 <br>    #include &lt;wchar.h&gt; <br>#else <br>    #define lstrcatA            lstrcat <br>    #define lstrlenA            lstrlen <br>    #define wvsprintfA          wvsprintf <br>    #define GetProfileIntA      GetProfileInt <br>    #define OutputDebugStringA  OutputDebugString <br>#endif <br> <br>// <br>// <br>// <br>BOOL    __gfDbgEnabled  = TRUE;     // master enable <br>UINT    __guDbgLevel    = 0;        // current debug level <br> <br> <br>//--------------------------------------------------------------------------; <br>// <br>//  void DbgVPrintF(LPSTR szFmt, LPSTR va) <br>// <br>//  Description: <br>//       <br>// <br>//  Arguments: <br>// <br>//  Return (void): <br>// <br>// <br>//  History: <br>//      11/28/92 <br>// <br>//--------------------------------------------------------------------------; <br> <br>void FAR CDECL DbgVPrintF(LPSTR szFmt, LPSTR va) <br>{ <br>    char    ach[DEBUG_MAX_LINE_LEN]; <br>    BOOL    fDebugBreak = FALSE; <br>    BOOL    fPrefix     = TRUE; <br>    BOOL    fCRLF       = TRUE; <br> <br>    ach[0] = '\0'; <br> <br>    for (;;) <br>    { <br>switch(*szFmt) <br>{ <br>    case '!': <br>fDebugBreak = TRUE; <br>szFmt++; <br>continue; <br> <br>    case '`': <br>fPrefix = FALSE; <br>szFmt++; <br>continue; <br> <br>    case '~': <br>fCRLF = FALSE; <br>szFmt++; <br>continue; <br>} <br> <br>break; <br>    } <br> <br>    if (fDebugBreak) <br>    { <br>ach[0] = '\007'; <br>ach[1] = '\0'; <br>    } <br> <br>    if (fPrefix) <br>lstrcatA(ach, DEBUG_MODULE_NAME ": "); <br> <br>    wvsprintfA(ach + lstrlenA(ach), szFmt, va); <br> <br>    if (fCRLF) <br>lstrcatA(ach, "\r\n"); <br> <br>    OutputDebugStringA(ach); <br> <br>    if (fDebugBreak) <br>DebugBreak(); <br>} // DbgVPrintF() <br> <br> <br>//--------------------------------------------------------------------------; <br>// <br>//  void dprintf(UINT uDbgLevel, LPSTR szFmt, ...) <br>// <br>//  Description: <br>//      dprintf() is called by the DPF macro if DEBUG is defined at compile <br>//      time. <br>//       <br>//      The messages will be send to COM1: like any debug message. To <br>//      enable debug output, add the following to WIN.INI : <br>// <br>//      [debug] <br>//      ICSAMPLE=1 <br>// <br>//  Arguments: <br>// <br>//  Return (void): <br>// <br>// <br>//  History: <br>//      11/23/92 <br>// <br>//--------------------------------------------------------------------------; <br> <br>void FAR CDECL dprintf(UINT uDbgLevel, LPSTR szFmt, ...) <br>{ <br>    va_list va; <br> <br>    if (!__gfDbgEnabled || (__guDbgLevel &lt; uDbgLevel)) <br>return; <br> <br>    va_start(va, szFmt); <br>    DbgVPrintF(szFmt, va); <br>    va_end(va); <br>} // dprintf() <br> <br>//--------------------------------------------------------------------------; <br>// <br>//  BOOL DbgEnable(BOOL fEnable) <br>// <br>//  Description: <br>//       <br>// <br>//  Arguments: <br>// <br>//  Return (BOOL): <br>// <br>// <br>//  History: <br>//      11/28/92 <br>// <br>//--------------------------------------------------------------------------; <br> <br>BOOL WINAPI DbgEnable(BOOL fEnable) <br>{ <br>    BOOL    fOldState; <br> <br>    fOldState      = __gfDbgEnabled; <br>    __gfDbgEnabled = fEnable; <br> <br>    return (fOldState); <br>} // DbgEnable() <br> <br> <br>//--------------------------------------------------------------------------; <br>// <br>//  UINT DbgSetLevel(UINT uLevel) <br>// <br>//  Description: <br>//       <br>// <br>//  Arguments: <br>// <br>//  Return (UINT): <br>// <br>// <br>//  History: <br>//      11/24/92 <br>// <br>//--------------------------------------------------------------------------; <br> <br>UINT WINAPI DbgSetLevel(UINT uLevel) <br>{ <br>    UINT    uOldLevel; <br> <br>    uOldLevel    = __guDbgLevel; <br>    __guDbgLevel = uLevel; <br> <br>    return (uOldLevel); <br>} // DbgSetLevel() <br> <br> <br>//--------------------------------------------------------------------------; <br>// <br>//  UINT DbgInitialize(void) <br>// <br>//  Description: <br>//       <br>// <br>//  Arguments: <br>// <br>//  Return (UINT): <br>// <br>// <br>//  History: <br>//      11/24/92 <br>// <br>//--------------------------------------------------------------------------; <br> <br>UINT WINAPI DbgInitialize(BOOL fEnable) <br>{ <br>    DbgSetLevel(GetProfileIntA(DEBUG_SECTION, DEBUG_MODULE_NAME, 0)); <br>    DbgEnable(fEnable); <br> <br>    return (__guDbgLevel); <br>} // DbgInitialize() <br> <br>#endif // #ifdef DEBUG </code></pre>
<p>&nbsp;</p></body>
</HTML>
