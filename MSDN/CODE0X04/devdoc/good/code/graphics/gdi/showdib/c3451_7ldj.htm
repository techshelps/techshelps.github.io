<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SHOWDIB.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context3457"></a>SHOWDIB.H</h2>
<pre><code><br>/******************************************************************************\ <br>*       This is a part of the Microsoft Source Code Samples.  <br>*       Copyright 1993 - 1998 Microsoft Corporation. <br>*       All rights reserved.  <br>*       This source code is only intended as a supplement to  <br>*       Microsoft Development Tools and/or WinHelp documentation. <br>*       See these sources for detailed information regarding the  <br>*       Microsoft samples programs. <br>\******************************************************************************/ <br> <br>#include &lt;stdio.h&gt; <br>/**************************************************************************** <br> *                                                                          * <br> *  FILE        : SHOWDIB.H                                                 * <br> *                                                                          * <br> *  DESCRIPTION : Header/include file for ShowDIB example.                  * <br> *                                                                          * <br> ****************************************************************************/ <br> <br>typedef    POINTS       MPOINT         ; <br> <br>#ifdef _WIN32 <br>#define GET_WM_ACTIVATE_STATE(wp, lp)   LOWORD(wp) <br>#define GET_WM_VSCROLL_CODE(wp, lp)     LOWORD(wp) <br>#define GET_WM_VSCROLL_POS(wp, lp)      HIWORD(wp) <br>#define GET_WM_HSCROLL_CODE(wp, lp)     LOWORD(wp) <br>#define GET_WM_HSCROLL_POS(wp, lp)      HIWORD(wp) <br>#define GET_EM_SETSEL_MPS(iStart, iEnd) (UINT)(iStart), (LONG)(iEnd) <br>#define GET_WM_COMMAND_CMD(wp, lp)      HIWORD(wp) <br>#define MAKEMPOINT(l)                   (*((MPOINT *)&amp;(l))) <br>#define HUGE_T <br>#else <br>#define GET_WM_ACTIVATE_STATE(wp, lp)               (wp) <br>#define GET_WM_HSCROLL_CODE(wp, lp)                 (wp) <br>#define GET_WM_HSCROLL_POS(wp, lp)                  LOWORD(lp) <br>#define GET_WM_VSCROLL_CODE(wp, lp)                 (wp) <br>#define GET_WM_VSCROLL_POS(wp, lp)                  LOWORD(lp) <br>#define GET_EM_SETSEL_MPS(iStart, iEnd) 0, MAKELONG(iStart, iEnd) <br>#define GET_WM_COMMAND_CMD(wp, lp)      HIWORD(lp) <br>#define MAKEMPOINT(l)                   (*((MPOINT FAR *)&amp;(l))) <br>#define HUGE_T         huge <br>#endif <br> <br>/* Macro to restrict a given value to an upper or lower boundary value */ <br>#define BOUND(x,min,max) ((x) &lt; (min) ? (min) : ((x) &gt; (max) ? (max) : (x))) <br> <br>/* Macro to swap two values */ <br>#define SWAP(x,y)   ((x)^=(y)^=(x)^=(y)) <br> <br>/* Macro to find the minimum of two values */ <br>#define MIN(x,y) (((x) &lt;= (y)) : x ? y) <br> <br>/* Macros to display/remove hourglass cursor for lengthy operations */ <br>#define StartWait() hcurSave = SetCursor(LoadCursor(NULL,IDC_WAIT)) <br>#define EndWait()   SetCursor(hcurSave) <br> <br>/* WinFlags, __WinFlags is a ABS external, thus the need for the &amp; */ <br>#define WinFlags    ((WORD)(&amp;_WinFlags)) <br> <br>#define MINBAND         50     /* Minimum band size used by the program */ <br>#define BANDINCREMENT   20     /* Decrement for band size while trying  */ <br>                               /* to determine optimum band size.       */ <br> <br>/* Bit values for the DIB attributes flag (fFileOptions). Also used as control <br> * IDs for the radiobuttons for DIB bitcount in the File/Open dialog <br> */ <br>#define F_1BPP      DLGOPEN_1BPP <br>#define F_4BPP      DLGOPEN_4BPP <br>#define F_8BPP      DLGOPEN_8BPP <br>#define F_24BPP     DLGOPEN_24BPP <br> <br>/* Bit values for the DIB attributes flag (fFileOptions), also used as control <br> * IDs for the radiobuttons for DIB compression type in the File/Open dialog <br> */ <br>#define F_RLE4      DLGOPEN_RLE4 <br>#define F_RLE8      DLGOPEN_RLE8 <br>#define F_RGB       DLGOPEN_RGB <br> <br>#ifdef NOT_IN_STDIO <br>/* flags for _lseek */ <br>#define  SEEK_CUR 1 <br>#define  SEEK_END 2 <br>#define  SEEK_SET 0 <br>#endif <br> <br>/* struct to be passed in for the SETDIBSCALING printer escape */ <br>typedef struct { <br>        SHORT ScaleMode; <br>        SHORT dx, dy; <br>} DIBPARAMS; <br> <br>/* Menu IDs */ <br> <br>#define IDM_UPDATECOL   1000 <br>#define IDM_ANIMATE0    1001 <br>#define IDM_ANIMATE5    5 <br>#define IDM_ANIMATE20   20 <br>#define IDM_ANIMATE50   50 <br>#define IDM_ANIMATE100  100 <br>#define IDM_ANIMATE200  200 <br>#define IDM_ANIMATE201  32000 <br> <br>#define IDM_OPEN        1002 <br>#define IDM_EXIT        1003 <br>#define IDM_ABOUT       1004 <br>#define IDM_DIBSCREEN   1005 <br>#define IDM_NOUGLY      1006 <br>#define IDM_STEALCOL    1009 <br>#define IDM_PRINT       1010 <br>#define IDM_COPY        1012 <br>#define IDM_MEMORYDIB   1014 <br>#define IDM_SAVE        1015 <br>#define IDM_TRANSPARENT 1016 <br> <br>#define IDM_PASTEDIB    1020 <br>#define IDM_PASTEDDB    1021 <br>#define IDM_PASTEPAL    1022 <br> <br>/*String IDs*/ <br>#define IDS_MEMLOW          650 <br>#define IDS_NOMEM           651 <br>#define IDS_OPENDIBPROMPT   652 <br>#define IDS_SAVEDIBPROMPT   653 <br>#define IDS_CANTSAVEFILE    654 <br>#define IDS_CANTOPENFILE    655 <br>#define IDS_BADDIBFILE      656 <br>#define IDS_CREATEPALFAIL   657 <br>#define IDS_CANTLOADRLE     658 <br>#define IDS_CANTCREATEBMP   659 <br>#define IDS_CANTDRAWSCANS   660 <br>#define IDS_CANTDRAWMAP     661 <br>#define IDS_SAVESTR         662 <br>#define IDS_OPENSTR         663 <br> <br>#define IDI_APP         2000 <br> <br>#define ABOUTBOX        100 <br> <br>extern HWND hWndApp;                   /* The handle to the app. window     */ <br> <br>#define MAXREAD  32768                 /* Number of bytes to be read during */ <br>                                       /* each read operation.              */ <br> <br>/* Header signatutes for various resources */ <br>#define BFT_ICON   0x4349   /* 'IC' */ <br>#define BFT_BITMAP 0x4d42   /* 'BM' */ <br>#define BFT_CURSOR 0x5450   /* 'PT' */ <br> <br>/* macro to determine if resource is a DIB */ <br>#define ISDIB(bft) ((bft) == BFT_BITMAP) <br> <br>/* Macro to align given value to the closest DWORD (unsigned long ) */ <br>#define ALIGNULONG(i)   ((i+3)/4*4) <br> <br>/* Macro to determine to round off the given value to the closest byte */ <br>#define WIDTHBYTES(i)   ((i+31)/32*4) <br> <br>#define PALVERSION      0x300 <br>#define MAXPALETTE      256       /* max. # supported palette entries */ <br> <br>/********** THE FOLLOWING ARE USED IN DLGOPEN.C  ************************/ <br> <br>/* IDs for controls in the DlgOpen dialog */ <br>#define DLGOPEN_EDIT            101 <br>#define DLGOPEN_FILE_LISTBOX    102 <br>#define DLGOPEN_DIR_LISTBOX     103 <br>#define DLGOPEN_PATH            104 <br>#define DLGOPEN_TEXT            105 <br>#define DLGOPEN_FOLDOUT         106 <br>#define DLGOPEN_BIG             107 <br>#define DLGOPEN_SMALL           108 <br> <br>#define DLGOPEN_OPTION          0xF000 <br>#define DLGOPEN_1BPP            0x0001 <br>#define DLGOPEN_4BPP            0x0002 <br>#define DLGOPEN_8BPP            0x0004 <br>#define DLGOPEN_24BPP           0x0008 <br>#define DLGOPEN_RLE4            0x0010 <br>#define DLGOPEN_RLE8            0x0020 <br>#define DLGOPEN_RGB             0x0040 <br> <br>#define DLGOPEN_OPTION8         0x0080 <br> <br>/*  flags: <br> *     The LOWORD is the standard FileOpen() flags (OF_*) <br> *     the HIWORD can be any of the following: <br> */ <br>#define OF_MUSTEXIST    0x00010000  /* file must exist if the user hits Ok    */ <br>#define OF_NOSHOWSPEC   0x00020000  /* DO NOT Show search spec in the edit box*/ <br>#define OF_SHOWSPEC     0x00000000  /* Show the search spec in the edit box   */ <br>#define OF_SAVE         0x00040000  /* Ok button will say "Save"              */ <br>#define OF_OPEN         0x00080000  /* Ok button will say "Open"              */ <br>#define OF_NOOPTIONS    0x00100000  /* Disable the options fold out           */ <br> <br>/* Attributes for DlgDirLst() */ <br>#define ATTRFILELIST    0x0000        /* include files only          */ <br>#define ATTRDIRLIST     0xC010        /* directories and drives ONLY */ <br>#define CBEXTMAX        6             /* Number of bytes in "\*.txt" */ <br> <br> <br>#define IDF(id)     ((id) &amp; ~DLGOPEN_OPTION)  /* extracts flag from control ID */ <br>#define FID(f)      ((f)  |  DLGOPEN_OPTION)  /* extracts control ID from flag */ <br> <br>/***************** GLOBAL VARIABLES *************************/ <br> <br>extern CHAR           achFileName[128]; /* File pathname                       */ <br>extern DWORD          dwOffset;     /* Current position if DIB file pointer    */ <br>extern RECT           rcClip;       /* Current clip rectangle.                 */ <br>extern BOOL           fPalColors;   /* TRUE if the current DIB's color table   */ <br>                                    /* contains palette indexes not rgb values */ <br>extern BOOL           bDIBToDevice; /* Use SetDIBitsToDevice() to BLT data.    */ <br>extern BOOL           bLegitDraw;   /* We have a valid bitmap to draw          */ <br>extern WORD           wTransparent; /* Mode of DC                              */ <br>extern CHAR           szAppName[];  /* App. name                               */ <br>extern HPALETTE       hpalCurrent;  /* Handle to current palette               */ <br>extern HANDLE         hdibCurrent;  /* Handle to current memory DIB            */ <br>extern HBITMAP        hbmCurrent;   /* Handle to current memory BITMAP         */ <br>extern HANDLE         hbiCurrent;   /* Handle to current bitmap info struct    */ <br>extern DWORD          dwStyle;      /* Style bits of the App. window           */ <br>extern HINSTANCE      hInst;        /* Global instance handle                  */ <br> <br>/***************** FUNCTION DECLARATIONS *******************/ <br> <br>DWORD PASCAL lread(INT fh, VOID FAR *pv, DWORD ul); <br>DWORD PASCAL lwrite(INT fh, VOID FAR *pv, DWORD ul); <br> <br>/***********************************************************/ <br>/* Declarations of functions used in showdib.c module      */ <br>/***********************************************************/ <br> <br>LONG     APIENTRY WndProc  (HWND, UINT, UINT, LONG) ; <br>BOOL               MenuCommand (HWND hWnd, UINT wParam); <br>INT                InitDIB (HWND); <br>VOID               FreeDib (VOID); <br> <br>/***********************************************************/ <br>/* Declarations of functions used in dib.c module          */ <br>/***********************************************************/ <br> <br>HANDLE      OpenDIB (LPSTR szFile); <br>BOOL        WriteDIB (LPSTR szFile,HANDLE hdib); <br>WORD        PaletteSize (VOID FAR * pv); <br>WORD        DibNumColors (VOID FAR * pv); <br>HPALETTE    CreateDibPalette (HANDLE hdib); <br>HPALETTE    CreateBIPalette (LPBITMAPINFOHEADER lpbi); <br>HANDLE      DibFromBitmap (HBITMAP hbm, DWORD biStyle, WORD biBits, HPALETTE hpal); <br>HBITMAP     BitmapFromDib (HANDLE hdib, HPALETTE hpal); <br>BOOL        DibBlt (HDC hdc, INT x0, INT y0, INT dx, INT dy, HANDLE hdib, INT x1, INT y1, LONG rop); <br>BOOL        StretchDibBlt (HDC hdc, INT x0, INT y0, INT dx, INT dy, HANDLE hdib, INT x1, INT y1, INT dx1, INT dy1, LONG rop); <br>BOOL        DibInfo (HANDLE hdib,LPBITMAPINFOHEADER lpbi); <br>HANDLE      ReadDibBitmapInfo (INT fh); <br>BOOL        DrawBitmap (HDC hdc, INT x, INT y, HBITMAP hbm, DWORD rop); <br>VOID            ReadBitMapFileHeaderandConvertToDwordAlign(HFILE fh, LPBITMAPFILEHEADER pbf, LPDWORD lpdwoff); <br>VOID    WriteMapFileHeaderandConvertFromDwordAlignToPacked(HFILE fh, LPBITMAPFILEHEADER pbf); <br> <br>/***********************************************************/ <br>/* Declarations of functions used in drawdib. c module     */ <br>/***********************************************************/ <br> <br>VOID               PrintDIB (HWND hWnd, HDC hDC, INT x, INT y, INT dx, INT dy); <br>VOID               AppPaint (HWND hWnd, HDC hDC, INT x, INT y); <br>INT                ErrMsg (PSTR sz,...); <br>BOOL               fDialog (INT id, HWND hwnd, FARPROC fpfn); <br>VOID               BandDIB (HWND hWnd, HDC hDC, INT x, INT y); <br>BOOL     APIENTRY AppAbout (HWND, UINT, UINT, LONG) ; <br>HANDLE             CopyHandle (HANDLE h); <br>VOID               SizeWindow (HWND hWnd); <br>VOID               GetRealClientRect (HWND hwnd, PRECT lprc); <br>VOID               SetScrollRanges (HWND hwnd); <br>VOID               DrawSelect (HDC hdc, BOOL fDraw); <br>VOID        PASCAL NormalizeRect (RECT *prc); <br>VOID               TrackMouse (HWND hwnd, MPOINT pt); <br>HBITMAP            CopyBitmap (HBITMAP hbm); <br>HPALETTE           CopyPalette (HPALETTE hpal); <br>HBITMAP            CropBitmap (HBITMAP hbm, PRECT prc); <br>HANDLE             RenderFormat (INT cf); <br>HANDLE             RealizeDibFormat (DWORD biStyle, WORD biBits); <br> <br>/***********************************************************/ <br>/* Declarations of functions used in the print.c module    */ <br>/***********************************************************/ <br> <br>BOOL    PASCAL InitPrinting (HDC hDC, HWND hWnd, HANDLE hInst, LPSTR msg); <br>VOID    PASCAL TermPrinting (HDC hDC); <br>HDC     PASCAL GetPrinterDC (VOID); <br>HDC     PASCAL GetPrinterDC1 (VOID); <br> <br>/***********************************************************/ <br>/* Declarations of functions used in the dlgopen.c module  */ <br>/***********************************************************/ <br> <br>LONG APIENTRY DlgfnOpen(     <br>        HWND hwnd, <br>    UINT msg, <br>    UINT wParam, <br>    LONG lParam <br>); <br>HFILE APIENTRY DlgOpenFile ( <br>        HWND            hwndParent, <br>        CHAR            *szTitleIn, <br>        DWORD           flags, <br>        CHAR            *szExtIn, <br>    CHAR        *szFileNameIn, <br>    WORD                *pfOpt <br>); <br> <br>/*****************************************************/ <br>/* make new sizeof structs to cover dword alignment  */ <br>/*****************************************************/ <br> <br>#define SIZEOF_BITMAPFILEHEADER_PACKED  (   \ <br>    sizeof(WORD) +      /* bfType      */   \ <br>    sizeof(DWORD) +     /* bfSize      */   \ <br>    sizeof(WORD) +      /* bfReserved1 */   \ <br>    sizeof(WORD) +      /* bfReserved2 */   \ <br>    sizeof(DWORD))      /* bfOffBits   */ <br></code></pre>
<p>&nbsp;</p></body>
</HTML>
