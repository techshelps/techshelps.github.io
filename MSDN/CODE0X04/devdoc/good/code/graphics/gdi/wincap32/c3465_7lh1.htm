<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ERRORS.C</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context3475"></a>ERRORS.C</h2>
<pre><code>// <br>// Errors.c <br>// <br>// Contains error messages for DIBAPI.DLL <br>// <br>// These error messages all have constants associated with <br>// them, contained in dibapi.h. <br>// <br>// Copyright 1991-1998 Microsoft Corporation. All rights reserved. <br>// <br> <br>#define     STRICT      // enable strict type checking <br> <br>#include &lt;windows.h&gt; <br>#include "dibapi.h" <br> <br>extern WORD nLangID; <br>static char *szErrors[] = <br>{ <br>    "Not a Windows DIB file!", <br>    "Couldn't allocate memory!", <br>    "Error reading file!", <br>    "Error locking memory!", <br>    "Error opening file!", <br>    "Error creating palette!", <br>    "Error getting a DC!", <br>    "Error creating Device Dependent Bitmap", <br>    "StretchBlt() failed!", <br>    "StretchDIBits() failed!", <br>    "SetDIBitsToDevice() failed!", <br>    "Printer: StartDoc failed!", <br>    "Printing: GetModuleHandle() couldn't find GDI!", <br>    "Printer: SetAbortProc failed!", <br>    "Printer: StartPage failed!", <br>    "Printer: NEWFRAME failed!", <br>    "Printer: EndPage failed!", <br>    "Printer: EndDoc failed!", <br>    "SetDIBits() failed!", <br>    "File Not Found!", <br>    "Invalid Handle", <br>    "General Error on call to DIB function" <br>}; <br> <br>static char *szErrorsJ[] = <br>{ <br>    "Windows DIB  t @ C                 B", <br>    "         m                             B", <br>    " t @ C             G   [", <br>    "           b N  G   [", <br>    " t @ C     I [ v    G   [", <br>    " p   b g       G   [", <br>    " f o C X  R   e L X g       G   [", <br>    " f o C X     r b g } b v       G   [", <br>    "StretchBlt()      s         B", <br>    "StretchDIBits()      s         B", <br>    "SetDIBitsToDevice()      s         B", <br>    " v     ^: StartDoc      s         B", <br>    "    : GetModuleHandle() GDI                        B", <br>    " v     ^: SetAbortProc      s         B", <br>    " v     ^: StartPage      s         B", <br>    " v     ^: NEWFRAME      s         B", <br>    " v     ^: EndPage      s         B", <br>    " v     ^: EndDoc      s         B", <br>    "SetDIBits()      s         B", <br>    " t @ C                         B", <br>    "       n   h  ", <br>    "DIB  t @   N V         o           G   [" <br>}; <br> <br>void DIBError(int ErrNo) <br>{ <br>    if (nLangID == LANG_JAPANESE) { <br>        if ((ErrNo &lt; ERR_MIN) || (ErrNo &gt;= ERR_MAX)) <br>            MessageBox(NULL, "   m   G   [ B", NULL, MB_OK | MB_ICONHAND); <br>        else <br>            MessageBox(NULL, szErrorsJ[ErrNo], NULL, MB_OK | MB_ICONHAND); <br>    } <br>    else { <br>        if ((ErrNo &lt; ERR_MIN) || (ErrNo &gt;= ERR_MAX)) <br>            MessageBox(NULL, "Undefined Error!", NULL, MB_OK | MB_ICONHAND); <br>        else <br>            MessageBox(NULL, szErrors[ErrNo], NULL, MB_OK | MB_ICONHAND); <br>    } <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
