<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DIBAPI.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context3469"></a>DIBAPI.H</h2>
<pre><code>/*    PortTool v2.2     dibapi.h          */ <br> <br>/* <br> *  dibapi.h <br> * <br> *  ** Win32 Version ** <br> * <br> *  Copyright 1991-1998 Microsoft Corporation. All rights reserved <br> * <br> *  Header file for Device-Independent Bitmap (DIB) API.  Provides <br> *  function prototypes and constants for the following functions: <br> * <br> *  BitmapToDIB()        - Creates a DIB from a bitmap <br> *  ChangeBitmapFormat() - Changes a bitmap to a specified DIB format <br> *  ChangeDIBFormat()    - Changes a DIB's BPP and/or compression format <br> *  CopyScreenToBitmap() - Copies entire screen to a standard Bitmap <br> *  CopyScreenToDIB()    - Copies entire screen to a DIB <br> *  CopyWindowToBitmap() - Copies a window to a standard Bitmap <br> *  CopyWindowToDIB()    - Copies a window to a DIB <br> *  CreateDIBPalette()   - Creates a palette from a DIB <br> *  CreateDIB()          - Creates a new DIB <br> *  DestroyDIB()         - Deletes DIB when finished using it <br> *  DIBError()           - Displays message box with error message <br> *  DIBHeight()          - Gets the DIB height <br> *  DIBNumColors()       - Calculates number of colors in the DIB's color table <br> *  DIBToBitmap()        - Creates a bitmap from a DIB <br> *  DIBWidth()           - Gets the DIB width <br> *  FindDIBBits()        - Sets pointer to the DIB bits <br> *  GetSystemPalette()   - Gets the current palette <br> *  LoadDIB()            - Loads a DIB from a file <br> *  PaintBitmap()        - Displays standard bitmap in the specified DC <br> *  PaintDIB()           - Displays DIB in the specified DC <br> *  PalEntriesOnDevice() - Gets the number of palette entries <br> *  PaletteSize()        - Calculates the buffer size required by a palette <br> *  PrintDIB()           - Prints the specified DIB <br> *  PrintScreen()        - Prints the entire screen <br> *  PrintWindow()        - Prints all or part of a window <br> *  SaveDIB()            - Saves the specified dib in a file <br> * <br> * See the file DIBAPI.TXT for more information about these functions. <br> * <br> */ <br> <br> <br>/* Handle to a DIB */ <br>#define HDIB HANDLE <br> <br> <br>/* Print Area selection */ <br>#define PW_WINDOW        1 <br>#define PW_CLIENT        2 <br> <br> <br>/* Print Options selection */ <br>#define PW_BESTFIT       1 <br>#define PW_STRETCHTOPAGE 2 <br>#define PW_SCALE         3 <br> <br>/* DIB Macros*/ <br> <br>// WIDTHBYTES performs DWORD-aligning of DIB scanlines.  The "bits" <br>// parameter is the bit count for the scanline (biWidth * biBitCount), <br>// and this macro returns the number of DWORD-aligned bytes needed  <br>// to hold those bits. <br> <br>#define WIDTHBYTES(bits)    (((bits) + 31) / 32 * 4) <br> <br>/* Error constants */ <br>enum { <br>      ERR_MIN = 0,                     // All error #s &gt;= this value <br>      ERR_NOT_DIB = 0,                 // Tried to load a file, NOT a DIB! <br>      ERR_MEMORY,                      // Not enough memory! <br>      ERR_READ,                        // Error reading file! <br>      ERR_LOCK,                        // Error on a GlobalLock()! <br>      ERR_OPEN,                        // Error opening a file! <br>      ERR_CREATEPAL,                   // Error creating palette. <br>      ERR_GETDC,                       // Couldn't get a DC. <br>      ERR_CREATEDDB,                   // Error create a DDB. <br>      ERR_STRETCHBLT,                  // StretchBlt() returned failure. <br>      ERR_STRETCHDIBITS,               // StretchDIBits() returned failure. <br>      ERR_SETDIBITSTODEVICE,           // SetDIBitsToDevice() failed. <br>      ERR_STARTDOC,                    // Error calling StartDoc(). <br>      ERR_NOGDIMODULE,                 // Couldn't find GDI module in memory. <br>      ERR_SETABORTPROC,                // Error calling SetAbortProc(). <br>      ERR_STARTPAGE,                   // Error calling StartPage(). <br>      ERR_NEWFRAME,                    // Error calling NEWFRAME escape. <br>      ERR_ENDPAGE,                     // Error calling EndPage(). <br>      ERR_ENDDOC,                      // Error calling EndDoc(). <br>      ERR_SETDIBITS,                   // Error calling SetDIBits(). <br>      ERR_FILENOTFOUND,                // Error opening file in GetDib() <br>      ERR_INVALIDHANDLE,               // Invalid Handle <br>      ERR_DIBFUNCTION,                 // Error on call to DIB function <br>      ERR_MAX                          // All error #s &lt; this value <br>     }; <br> <br> <br> <br>/* Function prototypes */ <br> <br>HDIB BitmapToDIB (HBITMAP hBitmap, HPALETTE hPal); <br>HDIB ChangeBitmapFormat (HBITMAPhBitmap, <br>                                   WORD     wBitCount, <br>                                   DWORD    dwCompression, <br>                                   HPALETTE hPal); <br>HDIB ChangeDIBFormat (HDIB hDIB, WORD wBitCount, <br>                                DWORD dwCompression); <br>HBITMAP CopyScreenToBitmap (LPRECT); <br>HDIB CopyScreenToDIB (LPRECT); <br>HBITMAP CopyWindowToBitmap (HWND, WORD); <br>HDIB CopyWindowToDIB (HWND, WORD); <br>HPALETTE CreateDIBPalette (HDIB); <br>HDIB CreateDIB(DWORD, DWORD, WORD); <br>WORD DestroyDIB (HDIB); <br>void DIBError (int ErrNo); <br>DWORD DIBHeight (LPSTR lpDIB); <br>WORD DIBNumColors (LPSTR lpDIB); <br>HBITMAP DIBToBitmap (HDIB hDIB, HPALETTE hPal); <br>DWORD DIBWidth (LPSTR lpDIB); <br>LPSTR FindDIBBits (LPSTR lpDIB); <br>HPALETTE GetSystemPalette (void); <br>HDIB LoadDIB (LPSTR); <br>BOOL PaintBitmap (HDC, LPRECT, HBITMAP, LPRECT, HPALETTE); <br>BOOL PaintDIB (HDC, LPRECT, HDIB, LPRECT, HPALETTE); <br>int PalEntriesOnDevice (HDC hDC); <br>WORD PaletteSize (LPSTR lpDIB); <br>WORD PrintDIB (HDIB, WORD, WORD, WORD, LPSTR); <br>WORD PrintScreen (LPRECT, WORD, WORD, WORD, LPSTR); <br>WORD PrintWindow (HWND, WORD, WORD, WORD, WORD, LPSTR); <br>WORD SaveDIB (HDIB, LPSTR); </code></pre>
<p>&nbsp;</p></body>
</HTML>
