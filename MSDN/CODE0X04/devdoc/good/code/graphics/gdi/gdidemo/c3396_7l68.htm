<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XFORM.C</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context3410"></a>XFORM.C</h2>
<pre><code><br>/******************************************************************************\ <br>*       This is a part of the Microsoft Source Code Samples.  <br>*       Copyright 1993 - 1998 Microsoft Corporation. <br>*       All rights reserved.  <br>*       This source code is only intended as a supplement to  <br>*       Microsoft Development Tools and/or WinHelp documentation. <br>*       See these sources for detailed information regarding the  <br>*       Microsoft samples programs. <br>\******************************************************************************/ <br> <br>/*-------------------------------------------------------------------------*\ <br>| XFORM MODULE <br>\*---------------------------------------------------------------------------*/ <br> <br>#include &lt;windows.h&gt; <br>#include "gdidemo.h" <br>#include "xform.h" <br> <br>VOID ResetXForm(HWND); <br>VOID DrawXForm(HWND); <br> <br> <br>/*---------------------------------------------------------------------------*\ <br>| CREATE XFORM WINDOW PROCEDURE <br>\*---------------------------------------------------------------------------*/ <br>HWND FAR CreateXFormWindow(HWND hWndClient, int nItem) <br>{ <br>    HANDLE          hInstance; <br>    MDICREATESTRUCT mcs; <br>    static char buffer[256]; <br> <br> <br>    hInstance = GETINSTANCE(hWndClient); <br>    LoadString (hInstance, XFORMTITLE, buffer, 256); <br> <br>    /* <br>    ** Initialize the MDI create struct for creation of the <br>    ** test window. <br>    */ <br>    mcs.szClass = XFORMCLASS; <br>    mcs.szTitle = buffer; <br>    mcs.hOwner  = hInstance; <br>    mcs.x       = CW_USEDEFAULT; <br>    mcs.y       = CW_USEDEFAULT; <br>    mcs.cx      = CW_USEDEFAULT; <br>    mcs.cy      = CW_USEDEFAULT; <br>    mcs.style   = 0l; <br>    mcs.lParam  = (LONG)nItem; <br> <br>    return((HWND)SendMessage(hWndClient,WM_MDICREATE,0,(LONG)(LPMDICREATESTRUCT)&amp;mcs)); <br>} <br> <br> <br>/*---------------------------------------------------------------------------*\ <br>| XFORM WINDOW PROCEDURE <br>\*---------------------------------------------------------------------------*/ <br>LONG APIENTRY XFormProc(HWND hWnd, UINT wMsg, WPARAM wParam, LONG lParam) <br>{ <br>    switch(wMsg) <br>    { <br>        case WM_CREATE: <br>            XFormCreateProc(hWnd); <br>            break; <br> <br> <br>        case WM_MOVE: <br>            ResetXForm(hWnd); <br>            break; <br> <br> <br>        case WM_TIMER: <br>            DrawXForm(hWnd); <br>            break; <br> <br> <br>        case WM_COMMAND: <br>            XFormCommandProc(hWnd,wParam,lParam); <br>            break; <br> <br> <br>        case WM_PAINT: <br>            XFormPaintProc(hWnd); <br>            break; <br> <br> <br>        case WM_DESTROY: <br>            XFormDestroyProc(hWnd); <br>            break; <br> <br> <br>        default: <br>            return(DefMDIChildProc(hWnd,wMsg,wParam,lParam)); <br>    } <br>    return(0l); <br>} <br> <br> <br>/*---------------------------------------------------------------------------*\ <br>| XFORM CREATE PROCEDURE <br>\*---------------------------------------------------------------------------*/ <br>BOOL XFormCreateProc(HWND hWnd) <br>{ <br>    PXFORMDATA pxd; <br> <br>#ifndef NOT_IMPLEMENTED <br> <br>    RECT       rect; <br>    int        dx,dy; <br> <br>#endif <br> <br>    if(AllocWindowInfo(hWnd,sizeof(XFORMDATA))) <br>    { <br>        if(pxd = (PXFORMDATA)LockWindowInfo(hWnd)) <br>        { <br> <br>#ifndef NOT_IMPLEMENTED <br> <br>            GetClientRect(hWnd,&amp;rect); <br> <br>            dx = (rect.right + rect.left) &gt;&gt; 4; <br>            dy = (rect.bottom + rect.top) &gt;&gt; 4; <br> <br>            pxd-&gt;pObject[0].x = dx &lt;&lt; 1; <br>            pxd-&gt;pObject[0].y = 0; <br>            pxd-&gt;pObject[1].x = dx; <br>            pxd-&gt;pObject[1].y = dy; <br>            pxd-&gt;pObject[2].x = 0; <br>            pxd-&gt;pObject[2].y = dy; <br>            pxd-&gt;pObject[3].x = dx &lt;&lt; 1; <br>            pxd-&gt;pObject[3].y = 0; <br>            pxd-&gt;nObject      = 4; <br> <br>            pxd-&gt;xForm.eM11 = (float) 0.866; <br>            pxd-&gt;xForm.eM12 = (float) 0.5; <br>            pxd-&gt;xForm.eM21 = (float)-0.5; <br>            pxd-&gt;xForm.eM22 = (float) 0.866; <br>            pxd-&gt;xForm.eDx  = (float) 0; <br>            pxd-&gt;xForm.eDy  = (float) 0; <br> <br>#endif <br> <br>            UnlockWindowInfo(hWnd); <br> <br>            SetTimer(hWnd,1,500,NULL); <br> <br>            return(TRUE); <br>        } <br>        FreeWindowInfo(hWnd); <br>    } <br>    return(FALSE); <br>} <br> <br> <br>/*---------------------------------------------------------------------------*\ <br>| XFORM COMMAND PROCEDURE <br>\*---------------------------------------------------------------------------*/ <br>BOOL XFormCommandProc(HWND hWnd, WPARAM wParam, LONG lParam) <br>{ <br>    hWnd   = hWnd; <br>    wParam = wParam; <br>    lParam = lParam; <br> <br>    return(TRUE); <br>} <br> <br> <br>/*---------------------------------------------------------------------------*\ <br>| XFORM PAINT PROCEDURE <br>\*---------------------------------------------------------------------------*/ <br>VOID XFormPaintProc(HWND hWnd) <br>{ <br>    HDC         hDC; <br>    PAINTSTRUCT ps; <br> <br> <br>    if(hDC = BeginPaint(hWnd,&amp;ps)) <br>        EndPaint(hWnd,&amp;ps); <br> <br>    ResetXForm(hWnd); <br> <br>    return; <br>} <br> <br> <br>/*---------------------------------------------------------------------------*\ <br>| XFORM DESTROY PROCEDURE <br>\*---------------------------------------------------------------------------*/ <br>VOID XFormDestroyProc(HWND hWnd) <br>{ <br>    KillTimer(hWnd,1); <br>    FreeWindowInfo(hWnd); <br>    return; <br>} <br> <br> <br> <br>VOID ResetXForm(HWND hWnd) <br>{ <br>    PXFORMDATA pxd; <br>    HDC        hDC; <br> <br>#ifndef NOT_IMPLEMENTED <br> <br>    RECT       rect; <br> <br>#endif <br> <br> <br>    if(pxd = (PXFORMDATA)LockWindowInfo(hWnd)) <br>    { <br>        if(hDC = GetDC(hWnd)) <br>        { <br> <br>#ifndef NOT_IMPLEMENTED <br> <br>            GetClientRect(hWnd,&amp;rect); <br>            BitBlt(hDC,0,0,rect.right,rect.bottom,(HDC)0,0,0,0); <br> <br>            SetViewportOrgEx(hDC,rect.right &gt;&gt; 1,rect.bottom &gt;&gt; 1,NULL); <br>            SetWorldTransform(hDC,(LPXFORM)&amp;pxd-&gt;xForm); <br>            Polyline(hDC,pxd-&gt;pObject,pxd-&gt;nObject); <br>            ModifyWorldTransform(hDC,(LPXFORM)&amp;pxd-&gt;xForm,MWT_IDENTITY); <br> <br> <br>            // I have to put this in since GDI currently doesn't <br>            // reset the drawing attributes -- 5/24/91 <br>            // <br>            SetViewportOrgEx(hDC,0,0,NULL); <br> <br>#endif <br> <br>            ReleaseDC(hWnd,hDC); <br>        } <br>        UnlockWindowInfo(hWnd); <br>    } <br>    return; <br>} <br> <br> <br>VOID DrawXForm(HWND hWnd) <br>{ <br>    PXFORMDATA pxd; <br>    HDC        hDC; <br>#ifndef NOT_IMPLEMENTED <br>    XFORM      xForm; <br>    RECT       rect; <br>#endif <br> <br> <br>    if(pxd = (PXFORMDATA)LockWindowInfo(hWnd)) <br>    { <br>        if(hDC = GetDC(hWnd)) <br>        { <br> <br>#ifndef NOT_IMPLEMENTED <br> <br>            GetClientRect(hWnd,&amp;rect); <br>            SetViewportOrgEx(hDC,rect.right &gt;&gt; 1, rect.bottom &gt;&gt; 1,NULL); <br> <br> <br>            SetWorldTransform(hDC,(LPXFORM)&amp;pxd-&gt;xForm); <br>            Polyline(hDC,pxd-&gt;pObject,pxd-&gt;nObject); <br> <br>            ModifyWorldTransform(hDC,(LPXFORM)&amp;pxd-&gt;xForm,MWT_RIGHTMULTIPLY); <br>            Polyline(hDC,pxd-&gt;pObject,pxd-&gt;nObject); <br> <br>            GetWorldTransform(hDC,(LPXFORM)&amp;xForm); <br>            pxd-&gt;xForm.eM11 = xForm.eM11; <br>            pxd-&gt;xForm.eM12 = xForm.eM12; <br>            pxd-&gt;xForm.eM21 = xForm.eM21; <br>            pxd-&gt;xForm.eM22 = xForm.eM22; <br>            pxd-&gt;xForm.eDx  = xForm.eDx; <br>            pxd-&gt;xForm.eDy  = xForm.eDy; <br> <br>            ModifyWorldTransform(hDC,(LPXFORM)&amp;pxd-&gt;xForm,MWT_IDENTITY); <br> <br> <br>            // I have to put this in since GDI currently doesn't <br>            // reset the drawing attributes -- 5/24/91 <br>            // <br>            SetViewportOrgEx(hDC,0,0,NULL); <br> <br>#endif <br>            ReleaseDC(hWnd,hDC); <br>        } <br>        UnlockWindowInfo(hWnd); <br>    } <br>    return; <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
