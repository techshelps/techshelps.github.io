<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>README.TXT</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context3490"></a>README.TXT</h2>
<pre><code>World Coordinate Transformation <br> <br> <br>SUMMARY <br>======= <br> <br>The WXFORM sample provides a demonstration of the new world-coordinate  <br>transformation. This sample displays a rectangle in world coordinates and a  <br>matrix containing the transform values. Users can directly manipulate the  <br>rectangle and see the effect on the transformation, or they can set the  <br>transformation and see the effect on the rectangle. <br> <br>MORE INFORMATION <br>================ <br> <br>The program begins by setting the viewport origin to the center of the  <br>client area. It then draws a rectangle in world-coordinate space from the  <br>point (0, 0) to the point (100, 100). You can directly manipulate this  <br>rectangle by using the left and right mouse buttons. Specific actions are  <br>described more fully in the "Direct Manipulation Help" dialog box. <br> <br>There is a second dialog box titled "World Transform." This shows the values  <br>of the eM11, eM12, eM21, eM22, eDx, and eDy fields in the XFORM structure  <br>retrieved by calling the GetWorldTransform function. By choosing the buttons  <br>on this dialog box, the user can cause the program to call the  <br>SetWorldTransform function. <br> <br>There are three coordinate systems of interest in this sample. The first one  <br>is the world-coordinate system, which is new to Win32. These points are  <br>ultimately mapped to the second coordinate system, device coordinates,  <br>before being painted in the window. This program must also use a third  <br>coordinate system, screen coordinates, for certain interactions with the  <br>mouse pointer. <br> <br>There is a third dialog box titled "Mouse Position" that shows the location  <br>of the cursor in all three coordinate systems. The device coordinates are  <br>relative to the upper-left corner of the client area. They are not relative  <br>to the viewport origin. <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
