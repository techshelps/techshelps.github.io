<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TTFONTS.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context3395"></a>TTFONTS.H</h2>
<pre><code><br>/******************************************************************************\ <br>*       This is a part of the Microsoft Source Code Samples.  <br>*       Copyright 1992 - 1998 Microsoft Corporation. <br>*       All rights reserved.  <br>*       This source code is only intended as a supplement to  <br>*       Microsoft Development Tools and/or WinHelp documentation. <br>*       See these sources for detailed information regarding the  <br>*       Microsoft samples programs. <br>\******************************************************************************/ <br> <br>/* ttfonts.h - header file <br>*/ <br> <br>/* function prototypes, window procedures first. */ <br>LRESULT CALLBACK MainWndProc    (HWND, UINT, WPARAM, LPARAM); <br>LRESULT CALLBACK ToolBarWndProc (HWND, UINT, WPARAM, LPARAM); <br>LRESULT CALLBACK AllFontsWndProc(HWND, UINT, WPARAM, LPARAM); <br>LRESULT CALLBACK LogFontWndProc (HWND, UINT, WPARAM, LPARAM); <br>LRESULT CALLBACK FontDataWndProc(HWND, UINT, WPARAM, LPARAM); <br>LRESULT CALLBACK DisplayWndProc (HWND, UINT, WPARAM, LPARAM); <br>LRESULT CALLBACK About (HWND, UINT, WPARAM, LPARAM); <br> <br> <br> <br>/* the initialization routines for the different modules. */ <br>int initDlg(HWND); <br>int initDisplay(HWND); <br>int initTB(HWND); <br>int initAllFont(HWND); <br> <br>/* misc. routine to show data flow to the user. */ <br>VOID flyWinWin(HWND, HWND, HWND, int); <br> <br> <br>HDC      GetPrinterDC (VOID); <br> <br>/* the height of the toolbar in pels. */ <br>#define TOOLBARHEIGHT 30 <br> <br>/* for the initial positioning of the three child windows. */ <br>#define CHILDLEFT(x) (GetSystemMetrics (SM_CXFULLSCREEN) * x/3 + 5) <br>#define CHILDTOP     TOOLBARHEIGHT*6/5 <br> <br>/* the default size of some of the dialogs. */ <br>#define DLGWIDTH   110 <br>#define DLGHEIGHT  160 <br> <br> <br> <br>/* menu IDs */ <br>#define  IDM_CASCADE        1001 <br>#define  IDM_TILE           1002 <br>#define  IDM_ARRANGE        1003 <br>#define  IDM_HELP           2001 <br>#define  IDM_ABOUT          2002 <br> <br>#define  IDM_FLYWINWIN      2000 <br>#define  IDM_GRID           2001 <br> <br>#define  IDM_GETOBJECT               3000 <br>#define  IDM_CHOOSEFONT              3001 <br>#define  IDM_ANSI_FIXED_FONT         3002 <br>#define  IDM_ANSI_VAR_FONT           3003 <br>#define  IDM_DEVICE_DEFAULT_FONT     3004 <br>#define  IDM_OEM_FIXED_FONT          3005 <br>#define  IDM_SYSTEM_FIXED_FONT       3006 <br>#define  IDM_SYSTEM_FONT             3007 <br> <br> <br>/* dialog IDs from the LOGFONT dialog. */ <br>#define  DID_X              101 <br>#define  DIDHEIGHT          201 <br>#define  DIDWIDTH           202 <br>#define  DIDESCAPE          203 <br>#define  DIDORIENT          204 <br>#define  DIDWEIGHT          205 <br>#define  DIDITALIC          206 <br>#define  DIDUNDERL          207 <br>#define  DIDSTRIKE          208 <br>#define  DIDCHARSE          209 <br>#define  DIDOUTPRE          210 <br>#define  DIDCLIPPR          211 <br>#define  DIDQUALIT          212 <br>#define  DIDPITCHA          213 <br>#define  DIDFACENA          214 <br> <br>/* dialog ID from the TEXTMETRIC dialog. */ <br>#define DID_LISTBOX         500 <br> <br>/* dialog ID from the FontData dialog. */ <br>#define DID_DWTABLE         200 <br>#define DID_DWOFFSET        201 <br>#define DID_CBDATA          203 <br>#define DID_DOIT            300 <br> <br> <br> <br> <br>/* button window IDs from toolbar. */ <br>#define TBID_ENUM     57 <br>#define TBID_CREATE   58 <br>#define TBID_GETTM    59 <br>#define TBID_PRINT    60 <br>#define TBID_GETFONTDATA 61 <br>#define IDM_PRINT     70 <br> <br> <br> <br> <br>/* user defined wm_command to send to main window */ <br>#define IDU_NOPRINTER 71 <br> <br> <br>/* USER messages used between windows. */ <br>#define  WMU_HFONTTODEMO      WM_USER+0x1000 <br>#define  WMU_LFTODEMO         WM_USER+0x1001 <br>#define  WMU_DEMOTOLF         WM_USER+0x1002 <br>#define  WMU_DEMOTOTM         WM_USER+0x1003 <br>#define  WMU_DEMOTOOLTM       WM_USER+0x1004 <br>#define  WMU_DEMOGETDC        WM_USER+0x1005 <br>#define  WMU_DEMORELEASEDC    WM_USER+0x1006 <br>#define  WMU_GETFONTDATA      WM_USER+0x1007 <br>#define  WMU_PREPAREALLGLYPHS WM_USER+0x1008 <br> <br> <br>#define  WMU_NEWFONT          WM_USER+0x1100 <br>#define  WMU_NEWMODEHELLO     WM_USER+0x1101 <br>#define  WMU_NEWMODETMRANGE   WM_USER+0x1102 <br>#define  WMU_NEWMODEALL       WM_USER+0x1103 <br>#define  WMU_NEWMODE_NEWSEG   WM_USER+0x1104 <br>#define  WMU_PRINT            WM_USER+0x1110 <br> <br>/* user defined create messsage, sent to window once CreateWindow() returns */ <br>#define WMU_CREATE          WM_USER+0x1000 <br> <br> <br> <br> <br>/* define strings and flags for use in warning message boxes */ <br>#define MBERRORFLAGS     MB_OK | MB_ICONHAND <br> <br> <br>/* define string table IDs */ <br>#define IDS_MBERROR       32 <br>#define IDS_INITSTRING    33 <br>#define IDS_ALLOCFAILED   34 <br>#define IDS_RESETDISPLAY  35 <br>#define IDS_NOCMAPTABLE   36 <br>#define IDS_CBDATATOOBIG  37 <br>#define IDS_NOTABLE       38 <br>#define IDS_FORMATNOT4    39 <br>#define IDS_FONTDATAERR   40 <br>#define IDS_ENUMPRINTERR  41 <br> <br> <br>extern TCHAR szMBERROR      [MAX_PATH]; <br>extern TCHAR szInitString   [MAX_PATH]; <br>extern TCHAR szAllocFailed  [MAX_PATH]; <br>extern TCHAR szResetDisplay [MAX_PATH]; <br>extern TCHAR szNoCMAPTable  [MAX_PATH]; <br>extern TCHAR szCBDataTooBig [MAX_PATH]; <br>extern TCHAR szNoTable      [MAX_PATH]; <br>extern TCHAR szFormatNot4   [MAX_PATH]; <br>extern TCHAR szFontDataErr  [MAX_PATH]; <br>extern TCHAR szEnumPrinterR [MAX_PATH]; <br> <br> <br> <br> <br>/* Global variables. */ <br>HANDLE hInst; <br>HWND   hwndMain, hwndDisplay; <br>HWND   hwndTB, hwndDlgLF, hwndDlgTM, hwndDlgOLTM, hwndDlgFD; <br>HWND   hwndDisplayFonts, hwndPrinterFonts; <br>HWND   hwndClient; <br> <br>/* the display window works in one of 3 modes <br> *  this is shown to the user by a check mark in the 'Display' menu <br> *  it is stored internally in the following variable <br> *  (contains the checked menu ID) <br> */ <br>int gDisplaymode; <br>#define  IDM_MODEHELLO          101 <br>#define  IDM_MODETMRANGE        102 <br>#define  IDM_MODEALL            103 <br></code></pre>
<p>&nbsp;</p></body>
</HTML>
