<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CSET.CXX</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context3383"></a>CSET.CXX</h2>
<pre><code>#include &lt;windows.h&gt; <br>#include &lt;windowsx.h&gt; <br>#include &lt;string.h&gt; <br>#include "app.h" <br> <br>#include "cset.hxx" <br> <br>//+-------------------------------------------------------- <br>// Class:       CSet <br>// <br>// Purpose:     Set of characters <br>// <br>// History:     03-Aug-1994     asmusf  created <br>//---------------------------------------------------------- <br> <br>// pure inline <br> <br>//+-------------------------------------------------------- <br>// Class:       CCTypesSet <br>// <br>// Purpose:     Set of chars defined by common CType <br>// <br>// History:     03-Aug-1994     asmusf  created <br>//---------------------------------------------------------- <br> <br>CCTypeSet :: CCTypeSet(WORD fC1Mask, WORD fC2Test, WORD fC3Mask) <br>{ <br>_fC1Mask = fC1Mask; <br>_fC2Test = fC2Test; <br>_fC3Mask = fC3Mask; <br>GetPageData( 0 );  // Page 0 is ALWAYS the default <br>} <br> <br>CCTypeSet :: In(WORD iChar) <br>{ <br>WORD iPage = iChar &amp; 0xFF00; <br>if( iPage != _iPage ) <br>{ <br>GetPageData(iPage); <br>} <br>return _pCharInSet[iChar &amp;0xFF]; <br>} <br> <br> <br>void CCTypeSet :: GetPageData(WORD iPage) <br>{ <br>WORD i; <br>TCHAR vchTemp[256]; <br>WORD vCtype[256]; <br> <br>for ( i=0; i &lt; 256; i++ ) <br>{ <br>vchTemp[i] = iPage+i; <br>_pCharInSet[i] = FALSE; <br>} <br>if( _fC1Mask ) <br>{ <br>GetStringTypeEx(0,CT_CTYPE1,vchTemp,256, vCtype); <br>for( i=0; i&lt;256;i++ ){ <br>_pCharInSet[i] = _pCharInSet[i] || (vCtype[i] &amp; _fC1Mask); <br>} <br>} <br>if( _fC2Test ) <br>{ <br>GetStringTypeEx(0,CT_CTYPE2,vchTemp,256, vCtype); <br>for( i=0; i&lt;256;i++ ){ <br>_pCharInSet[i] = _pCharInSet[i] || (vCtype[i] == _fC2Test);  //enumerated value <br>} <br>} <br>if( _fC3Mask ) <br>{ <br>GetStringTypeEx(0,CT_CTYPE3,vchTemp,256, vCtype); <br>for( i=0; i&lt;256;i++ ){ <br>_pCharInSet[i] = _pCharInSet[i] || (vCtype[i] &amp; _fC3Mask); <br>} <br>} <br>_iPage = iPage; <br>} <br> <br> <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
