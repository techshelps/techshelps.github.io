<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>STONE.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context3630"></a>STONE.H</h2>
<pre><code>#ifndef STONE_H <br>#define STONE_H <br> <br>#include "Color.h" <br>#include "Point.h" <br> <br>class Stone { <br> public: <br>  Stone(); <br>  ~Stone(); <br>  Stone operator=(Stone a); <br> <br>  void set_dimensions(GLfloat x, GLfloat y, GLfloat z); <br>  void set_dimensions(Point p); <br>  Point get_dimensions() {return dimensions;}; <br> <br>  /* p = 0 --&gt; sharp corners, p == 1 --&gt; completely rounded corners */ <br>  void erode(float p); <br>  float get_erosion() {return erosion;}; <br> <br>  void translate(GLfloat x, GLfloat y, GLfloat z); <br>  void translate(Point p); <br> <br>  /* Angle in degrees */ <br>  void rotate_self_aboutz(GLfloat angle); <br> <br>  void draw(); <br> <br>  void draw_shadow(Point dlight); <br>  void draw_shadow(Point dlight, GLfloat blur, Color color, Color diffuse); <br> <br> private: <br>  Point translation; <br>  GLfloat rotation; <br>  /* dimensions contains the length, width, and height of the stone */ <br>  Point dimensions; <br> <br>  GLfloat erosion; <br> <br>  Point points[24]; <br>  int points_valid; <br>  void compute_points(); <br> <br>  int transforms_valid; <br>  inline Point trans_rot_point(Point p, float c, float s); <br>  inline Point transform_point(Point p, float c, float s); <br>  void transform_points(); <br>   <br>  void draw_faces(int flat = 0); <br>  void draw_faces(Point *p, int flat = 0); <br> <br>  void draw_edges(int flat = 0); <br>  void draw_edges(Point *p, int flat = 0); <br>  void draw_edge(Point n1, Point n2, Point *p, int a, int b, int c, int d, <br> int flat = 0); <br> <br>  void draw_corners(int flat = 0) {draw_corners(points, flat);}; <br>  void draw_corners(Point *p, int flat = 0); <br>}; <br> <br>#endif </code></pre>
<p>&nbsp;</p></body>
</HTML>
