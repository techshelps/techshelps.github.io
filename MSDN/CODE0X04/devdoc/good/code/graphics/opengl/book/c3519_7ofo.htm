<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CHECKER.C</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context3534"></a>CHECKER.C</h2>
<pre><code>/* <br> * (c) Copyright 1993, Silicon Graphics, Inc. <br> *               1993-1995 Microsoft Corporation <br> * <br> * ALL RIGHTS RESERVED <br> * <br> * Please refer to OpenGL/readme.txt for additional information <br> * <br> */ <br> <br>/*  checker.c <br> *  This program texture maps a checkerboard image onto <br> *  two rectangles.  This program clamps the texture, if <br> *  the texture coordinates fall outside 0.0 and 1.0. <br> */ <br>#include "glos.h" <br> <br>#include &lt;GL/gl.h&gt; <br>#include &lt;GL/glu.h&gt; <br>#include &lt;GL/glaux.h&gt; <br> <br>void myinit(void); <br>void makeCheckImage(void); <br>void CALLBACK myReshape(GLsizei w, GLsizei h); <br>void CALLBACK display(void); <br> <br>/*  Create checkerboard texture */ <br>#define checkImageWidth 64 <br>#define checkImageHeight 64 <br>GLubyte checkImage[checkImageWidth][checkImageHeight][3]; <br> <br>void makeCheckImage(void) <br>{ <br>    int i, j, c; <br>     <br>    for (i = 0; i &lt; checkImageWidth; i++) { <br>    for (j = 0; j &lt; checkImageHeight; j++) { <br>        c = ((((i&amp;0x8)==0)^((j&amp;0x8))==0))*255; <br>        checkImage[i][j][0] = (GLubyte) c; <br>        checkImage[i][j][1] = (GLubyte) c; <br>        checkImage[i][j][2] = (GLubyte) c; <br>    } <br>    } <br>} <br> <br>void myinit(void) <br>{     <br>    glClearColor (0.0, 0.0, 0.0, 0.0); <br>    glEnable(GL_DEPTH_TEST); <br>    glDepthFunc(GL_LESS); <br> <br>    makeCheckImage(); <br>    glPixelStorei(GL_UNPACK_ALIGNMENT, 1); <br>    glTexImage2D(GL_TEXTURE_2D, 0, 3, checkImageWidth,  <br>    checkImageHeight, 0, GL_RGB, GL_UNSIGNED_BYTE,  <br>    &amp;checkImage[0][0][0]); <br>    glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP); <br>    glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP); <br>    glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST); <br>    glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST); <br>    glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL); <br>    glEnable(GL_TEXTURE_2D); <br>    glShadeModel(GL_FLAT); <br>} <br> <br>void CALLBACK display(void) <br>{ <br>    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); <br>    glBegin(GL_QUADS); <br>    glTexCoord2f(0.0, 0.0); glVertex3f(-2.0, -1.0, 0.0); <br>    glTexCoord2f(0.0, 1.0); glVertex3f(-2.0, 1.0, 0.0); <br>    glTexCoord2f(1.0, 1.0); glVertex3f(0.0, 1.0, 0.0); <br>    glTexCoord2f(1.0, 0.0); glVertex3f(0.0, -1.0, 0.0); <br> <br>    glTexCoord2f(0.0, 0.0); glVertex3f(1.0, -1.0, 0.0); <br>    glTexCoord2f(0.0, 1.0); glVertex3f(1.0, 1.0, 0.0); <br>    glTexCoord2f(1.0, 1.0); glVertex3f(2.41421, 1.0, -1.41421); <br>    glTexCoord2f(1.0, 0.0); glVertex3f(2.41421, -1.0, -1.41421); <br>    glEnd(); <br>    glFlush(); <br>} <br> <br>void CALLBACK myReshape(GLsizei w, GLsizei h) <br>{ <br>    if (!h) return; <br>    glViewport(0, 0, w, h); <br>    glMatrixMode(GL_PROJECTION); <br>    glLoadIdentity(); <br>    gluPerspective(60.0, 1.0*(GLfloat)w/(GLfloat)h, 1.0, 30.0); <br>    glMatrixMode(GL_MODELVIEW); <br>    glLoadIdentity(); <br>    glTranslatef(0.0, 0.0, -3.6); <br>} <br> <br>int main(int argc, char** argv) <br>{ <br>    auxInitDisplayMode (AUX_SINGLE | AUX_RGB | AUX_DEPTH16); <br>    auxInitPosition (0, 0, 500, 500); <br>    auxInitWindow ("Texture Map"); <br>    myinit(); <br>    auxReshapeFunc (myReshape); <br>    auxMainLoop(display); <br>    return(0); <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
