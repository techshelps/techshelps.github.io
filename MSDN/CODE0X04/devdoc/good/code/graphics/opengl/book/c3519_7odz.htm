<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ANTINDX.C</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context3527"></a>ANTINDX.C</h2>
<pre><code>/* <br> * (c) Copyright 1993, Silicon Graphics, Inc. <br> *               1993-1995 Microsoft Corporation <br> * <br> * ALL RIGHTS RESERVED <br> * <br> * Please refer to OpenGL/readme.txt for additional information <br> * <br> */ <br> <br>/* <br> *  antiindex.c  <br> *  The program draws a wireframe icosahedron with  <br> *  antialiased lines, in color index mode. <br> */ <br>#include "glos.h" <br> <br>#include &lt;GL/gl.h&gt; <br>#include &lt;GL/glu.h&gt; <br>#include &lt;GL/glaux.h&gt; <br> <br>void myinit(void); <br>void CALLBACK myReshape(GLsizei w, GLsizei h); <br>void CALLBACK display(void); <br> <br>#define RAMPSIZE 16 <br>#define RAMPSTART 32 <br> <br>/*  Initialize antialiasing for color index mode,  <br> *  including loading a grey color ramp starting  <br> *  at RAMPSTART, which must be a multiple of 16. <br> */ <br>void myinit(void) <br>{ <br>    int i; <br> <br>    for (i = 0; i &lt; RAMPSIZE; i++) { <br>    GLfloat shade; <br>    shade = (GLfloat) i/(GLfloat) RAMPSIZE; <br>    auxSetOneColor(RAMPSTART+(GLint)i, shade, shade, shade); <br>    } <br> <br>    glEnable (GL_LINE_SMOOTH); <br>    glHint (GL_LINE_SMOOTH_HINT, GL_DONT_CARE); <br>    glLineWidth (1.5); <br> <br>    glClearIndex ((GLfloat) RAMPSTART); <br>    glShadeModel(GL_FLAT); <br>    glDepthFunc(GL_LESS); <br>    glEnable(GL_DEPTH_TEST); <br>} <br> <br>/*  display() draws an icosahedron. <br> */ <br>void CALLBACK display(void) <br>{ <br>    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); <br>    glIndexi(RAMPSTART); <br>    auxWireIcosahedron(1.0); <br>    glFlush(); <br>} <br> <br>void CALLBACK myReshape(GLsizei w, GLsizei h) <br>{ <br>    if (!h) return; <br>    glViewport(0, 0, w, h); <br>    glMatrixMode(GL_PROJECTION); <br>    glLoadIdentity(); <br>    gluPerspective (45.0, (GLfloat) w/(GLfloat) h, 3.0, 5.0); <br> <br>    glMatrixMode(GL_MODELVIEW); <br>    glLoadIdentity (); <br>    glTranslatef (0.0, 0.0, -4.0);  /*  move object into view   */ <br>} <br> <br>/*  Main Loop <br> *  Open window with initial window size, title bar,  <br> *  color index display mode, depth buffer,  <br> *  and handle input events. <br> */ <br>int main(int argc, char** argv) <br>{ <br>    auxInitDisplayMode (AUX_SINGLE | AUX_INDEX | AUX_DEPTH16); <br>    auxInitPosition (0, 0, 400, 400); <br>    auxInitWindow ("Antialiased Lines Using Color Index"); <br>    myinit(); <br>    auxReshapeFunc (myReshape); <br>    auxMainLoop(display); <br>    return(0); <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
