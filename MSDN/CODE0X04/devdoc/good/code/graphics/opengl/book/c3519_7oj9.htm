<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>LINELIST.C</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context3555"></a>LINELIST.C</h2>
<pre><code>/* <br> * (c) Copyright 1993, Silicon Graphics, Inc. <br> *               1993-1995 Microsoft Corporation <br> * <br> * ALL RIGHTS RESERVED <br> * <br> * Please refer to OpenGL/readme.txt for additional information <br> * <br> */ <br> <br>/* <br> *  linelist.c   <br> *  This program demonstrates using display lists to call  <br> *  different line stipples. <br> */ <br>#include "glos.h" <br> <br>#include &lt;GL/gl.h&gt; <br>#include &lt;GL/glu.h&gt; <br>#include &lt;GL/glaux.h&gt; <br> <br>void myinit(void); <br>void CALLBACK display(void); <br> <br>#define drawOneLine(x1,y1,x2,y2) glBegin(GL_LINES); \ <br>    glVertex2f ((x1),(y1)); glVertex2f ((x2),(y2)); glEnd(); <br> <br>GLuint offset; <br> <br>void myinit (void) <br>{ <br>/*  background to be cleared to black   */ <br>    glClearColor (0.0, 0.0, 0.0, 0.0); <br>    glShadeModel (GL_FLAT); <br> <br>    offset = glGenLists (3); <br>    glNewList (offset, GL_COMPILE); <br>    glDisable (GL_LINE_STIPPLE); <br>    glEndList (); <br>    glNewList (offset+1, GL_COMPILE); <br>    glEnable (GL_LINE_STIPPLE); <br>    glLineStipple (1, 0x0F0F); <br>    glEndList (); <br>    glNewList (offset+2, GL_COMPILE); <br>    glEnable (GL_LINE_STIPPLE); <br>    glLineStipple (1, 0x1111); <br>    glEndList (); <br>} <br> <br>void CALLBACK display(void) <br>{ <br>    glClear (GL_COLOR_BUFFER_BIT); <br> <br>/*  draw all lines in white */ <br>    glColor3f (1.0, 1.0, 1.0); <br> <br>    glCallList (offset); <br>    drawOneLine (50.0, 125.0, 350.0, 125.0); <br>    glCallList (offset+1); <br>    drawOneLine (50.0, 100.0, 350.0, 100.0); <br>    glCallList (offset+2); <br>    drawOneLine (50.0, 75.0, 350.0, 75.0); <br>    glCallList (offset+1); <br>    drawOneLine (50.0, 50.0, 350.0, 50.0); <br>    glCallList (offset); <br>    drawOneLine (50.0, 25.0, 350.0, 25.0); <br>    glFlush (); <br>} <br> <br>/*  Main Loop <br> *  Open window with initial window size, title bar,  <br> *  RGBA display mode, and handle input events. <br> */ <br>int main(int argc, char** argv) <br>{ <br>    auxInitDisplayMode (AUX_SINGLE | AUX_RGB); <br>    auxInitPosition (0, 0, 400, 150); <br>    auxInitWindow ("Display Lists"); <br>    myinit (); <br>    auxMainLoop(display); <br>    return(0); <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
