<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PICKLINE.C</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context3566"></a>PICKLINE.C</h2>
<pre><code>/* <br> * (c) Copyright 1993, Silicon Graphics, Inc. <br> *               1993-1995 Microsoft Corporation <br> * <br> * ALL RIGHTS RESERVED <br> * <br> * Please refer to OpenGL/readme.txt for additional information <br> * <br> */ <br> <br>/* <br> *  pickline.c <br> *  Picking is demonstrated here.  Press the left mouse button <br> *  is enter picking mode.  You get two hits if you press the <br> *  mouse, while the cursor is where the lines intersect. <br> */ <br>#include "glos.h" <br> <br>#include &lt;GL/gl.h&gt; <br>#include &lt;GL/glu.h&gt; <br>#include &lt;GL/glaux.h&gt; <br>#include &lt;stdio.h&gt; <br> <br>void myinit(void); <br>void drawLine(GLenum mode); <br>void CALLBACK pickLine(AUX_EVENTREC *event); <br>void CALLBACK display(void); <br>void CALLBACK myReshape(GLsizei w, GLsizei h); <br> <br>void drawLine(GLenum mode) <br>{ <br>    if (mode == GL_SELECT) <br>    glLoadName (1); <br>    glBegin (GL_LINES); <br>    glColor3f (1.0, 1.0, 1.0); <br>    glVertex3f (30.0, 30.0, 0.0); <br>    glVertex3f (50.0, 60.0, 0.0); <br>    glEnd ();  <br> <br>    if (mode == GL_SELECT) <br>    glLoadName (2); <br>    glBegin (GL_LINES); <br>    glColor3f (1.0, 1.0, 1.0); <br>    glVertex3f (50.0, 60.0, 0.0); <br>    glVertex3f (70.0, 40.0, 0.0); <br>    glEnd ();  <br>} <br> <br>/*  pickline() is called when the mouse is pressed. <br> *  The projection matrix is reloaded to include the <br> *  picking matrix.  The line is "redrawn" during <br> *  selection mode, and names are sent to the buffer. <br> */ <br>#define BUFSIZE 512 <br> <br>void CALLBACK pickLine(AUX_EVENTREC *event) <br>{ <br>    GLuint selectBuf[BUFSIZE]; <br>    GLint hits; <br>    GLint viewport[4]; <br>    int x, y; <br> <br>    x = event-&gt;data[AUX_MOUSEX]; <br>    y = event-&gt;data[AUX_MOUSEY]; <br>    glGetIntegerv (GL_VIEWPORT, viewport); <br> <br>    glSelectBuffer (BUFSIZE, selectBuf); <br>    (void) glRenderMode (GL_SELECT); <br> <br>    glInitNames(); <br>    glPushName((GLuint)-1); <br> <br>    glMatrixMode (GL_PROJECTION); <br>    glPushMatrix (); <br>    glLoadIdentity (); <br>    gluPickMatrix ((GLdouble) x, (GLdouble) (viewport[3] - y),  <br>    5.0, 5.0, viewport); <br>    gluOrtho2D (0.0, (GLdouble) viewport[2],  <br>    0.0, (GLdouble) viewport[3]); <br>    drawLine (GL_SELECT); <br>    glPopMatrix (); <br>    glFlush (); <br> <br>    hits = glRenderMode (GL_RENDER); <br>    //printf ("hits is %d\n", hits); <br>}  <br> <br>void myinit (void)  <br>{ <br>    glShadeModel (GL_FLAT); <br>    glClearColor (0.0, 0.0, 0.0, 0.0); <br>} <br> <br>void CALLBACK display(void) <br>{ <br>    glClear(GL_COLOR_BUFFER_BIT); <br>    drawLine (GL_RENDER); <br>    glFlush(); <br>} <br> <br>void CALLBACK myReshape(GLsizei w, GLsizei h) <br>{ <br>    glViewport(0, 0, w, h); <br>    glMatrixMode(GL_PROJECTION); <br>    glLoadIdentity(); <br>    gluOrtho2D (0.0, (GLdouble) w, 0.0, (GLdouble) h); <br>    glMatrixMode(GL_MODELVIEW); <br>    glLoadIdentity(); <br>} <br> <br>/*  Main Loop <br> *  Open window with initial window size, title bar,  <br> *  RGBA display mode, and handle input events. <br> */ <br>int main(int argc, char** argv) <br>{ <br>    auxInitDisplayMode (AUX_SINGLE | AUX_RGB); <br>    auxInitPosition (0, 0, 100, 100); <br>    auxInitWindow ("Picking Lines"); <br>    myinit (); <br>    auxMouseFunc (AUX_LEFTBUTTON, AUX_MOUSEDOWN, pickLine); <br>    auxReshapeFunc (myReshape); <br>    auxMainLoop(display); <br>    return(0); <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
