<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PLANETUP.C</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context3570"></a>PLANETUP.C</h2>
<pre><code>/* <br> * (c) Copyright 1993, Silicon Graphics, Inc. <br> *               1993-1995 Microsoft Corporation <br> * <br> * ALL RIGHTS RESERVED <br> * <br> * Please refer to OpenGL/readme.txt for additional information <br> * <br> */ <br> <br>/* <br> *  planetup.c <br> *  The planets (from planet.c) have been rotated so their  <br> *  polar regions are north/south.   <br> *  Interaction:  pressing the left, right, up, and down  <br> *  arrow keys alters the rotation of the planet around the sun. <br> */ <br>#include "glos.h" <br> <br>#include &lt;GL/gl.h&gt; <br>#include &lt;GL/glu.h&gt; <br>#include &lt;GL/glaux.h&gt; <br> <br>void myinit(void); <br>void drawPlane(void); <br>void CALLBACK dayAdd (void); <br>void CALLBACK daySubtract (void); <br>void CALLBACK yearAdd (void); <br>void CALLBACK yearSubtract (void); <br>void CALLBACK display(void); <br>void CALLBACK myReshape(GLsizei w, GLsizei h); <br> <br>static int year = 0, day = 0; <br> <br>void CALLBACK dayAdd (void) <br>{ <br>    day = (day + 10) % 360; <br>} <br> <br>void CALLBACK daySubtract (void) <br>{ <br>    day = (day - 10) % 360; <br>} <br> <br>void CALLBACK yearAdd (void) <br>{ <br>    year = (year + 5) % 360; <br>} <br> <br>void CALLBACK yearSubtract (void) <br>{ <br>    year = (year - 5) % 360; <br>} <br> <br>void CALLBACK display(void) <br>{ <br>    glClear(GL_COLOR_BUFFER_BIT); <br> <br>    glColor3f (1.0, 1.0, 1.0); <br>    glPushMatrix(); <br>/*  draw sun    */ <br>    glPushMatrix(); <br>    glRotatef (90.0, 1.0, 0.0, 0.0);  /*  rotate it upright  */ <br>    auxWireSphere(1.0); <br>    glPopMatrix(); <br>/*  draw smaller planet */ <br>    glRotatef ((GLfloat) year, 0.0, 1.0, 0.0); <br>    glTranslatef (2.0, 0.0, 0.0); <br>    glRotatef ((GLfloat) day, 0.0, 1.0, 0.0); <br>    glRotatef (90.0, 1.0, 0.0, 0.0);  /*  rotate it upright  */ <br>    auxWireSphere(0.2); <br>    glPopMatrix(); <br>    glFlush(); <br>} <br> <br>void myinit (void) { <br>    glShadeModel (GL_FLAT); <br>} <br> <br>void CALLBACK myReshape(GLsizei w, GLsizei h) <br>{ <br>    if (!h) return; <br>    glViewport(0, 0, w, h); <br>    glMatrixMode(GL_PROJECTION); <br>    glLoadIdentity(); <br>    gluPerspective(60.0, (GLfloat) w/(GLfloat) h, 1.0, 20.0); <br>    glMatrixMode(GL_MODELVIEW); <br>    glLoadIdentity(); <br>    glTranslatef (0.0, 0.0, -5.0); <br>} <br> <br>/*  Main Loop <br> *  Open window with initial window size, title bar,  <br> *  RGBA display mode, and handle input events. <br> */ <br>int main(int argc, char** argv) <br>{ <br>    auxInitDisplayMode (AUX_SINGLE | AUX_RGB); <br>    auxInitPosition (0, 0, 500, 500); <br>    auxInitWindow ("Composite Modeling Transformations"); <br>    myinit (); <br>    auxKeyFunc (AUX_LEFT, yearSubtract); <br>    auxKeyFunc (AUX_RIGHT, yearAdd); <br>    auxKeyFunc (AUX_UP, dayAdd); <br>    auxKeyFunc (AUX_DOWN, daySubtract); <br>    auxReshapeFunc (myReshape); <br>    auxMainLoop(display); <br>    return(0); <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
