<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GEOM.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context3716"></a>GEOM.H</h2>
<pre><code>/**********************************Module**********************************\ <br>* <br>* geom.h <br>* <br>* 3D FlowerBox screen saver <br>* Geometry header file <br>* <br>* Copyright 1995 - 1998 Microsoft Corporation <br>* <br>\**************************************************************************/ <br> <br>#ifndef __GEOM_H__ <br>#define __GEOM_H__ <br> <br>// Geometry of a shape <br> <br>// A side of a shape <br>typedef struct _SIDE <br>{ <br>    // Number of triangle strips in this side <br>    int nstrips; <br>    // Number of vertices per strip <br>    int *strip_size; <br>    // Indices for each point in the triangle strips <br>    unsigned int *strip_index; <br> <br>    // The number of elements for glDrawElements call <br>    int num_eles; <br>    // Index buffer for glDrawElements <br>    GLuint *dBuf; <br>} SIDE; <br> <br>typedef struct _GEOMETRY <br>{ <br>    void (*init)(struct _GEOMETRY *geom); <br>     <br>    // Number of sides <br>    int nsides; <br>    // Sides <br>    SIDE sides[MAXSIDES]; <br> <br>    // Data for each vertex in the shape <br>    PT3 *pts, *npts; <br>    PT3 *normals; <br> <br>    // Total number of vertices <br>    int total_pts; <br> <br>    // Scaling control <br>    FLT min_sf, max_sf, sf_inc; <br> <br>    // Initial scale factor setup control <br>    FLT init_sf; <br> <br>} GEOMETRY; <br> <br>#define GEOM_CUBE       0 <br>#define GEOM_TETRA      1 <br>#define GEOM_PYRAMIDS   2 <br> <br>extern GEOMETRY *geom_table[]; <br> <br>void InitVlen(GEOMETRY *geom, int npts, PT3 *pts); <br>void UpdatePts(GEOMETRY *geom, FLT sf); <br>void DrawGeom(GEOMETRY *geom); <br>extern void DrawWithVArrays (GEOMETRY *geom); <br> <br>#endif // __GEOM_H__ </code></pre>
<p>&nbsp;</p></body>
</HTML>
