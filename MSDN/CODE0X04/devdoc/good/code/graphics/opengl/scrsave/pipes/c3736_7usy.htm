<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FSTATE.CXX</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context3742"></a>FSTATE.CXX</h2>
<pre><code>/******************************Module*Header*******************************\ <br>* Module Name: fstate.cxx <br>* <br>* FLEX_STATE <br>* <br>* Copyright 1995 - 1998 Microsoft Corporation <br>* <br>\**************************************************************************/ <br> <br>#include &lt;stdio.h&gt; <br>#include &lt;string.h&gt; <br>#include &lt;stdlib.h&gt; <br>#include &lt;math.h&gt; <br>#include &lt;sys/types.h&gt; <br>#include &lt;sys/timeb.h&gt; <br>#include &lt;time.h&gt; <br>#include &lt;windows.h&gt; <br> <br>#include "sspipes.h" <br>#include "fstate.h" <br>#include "nstate.h" <br>#include "npipe.h" <br>#include "fpipe.h" <br> <br>/******************************Public*Routine******************************\ <br>* FLEX_STATE constructor <br>* <br>\**************************************************************************/ <br> <br>FLEX_STATE::FLEX_STATE( STATE *pState ) <br>{ <br>    bTexture = pState-&gt;bTexture; <br>    Reset(); <br>} <br> <br>/**************************************************************************\ <br>* Reset <br>* <br>* Reset a frame of normal pipes. <br>* <br>\**************************************************************************/ <br> <br>void  <br>FLEX_STATE::Reset( ) <br>{ <br>    // Choose a random scheme for each frame <br> <br>    if( ss_iRand(2) )  // 50/50 <br>        scheme = SC_EXTRUDED_XC; <br>    else <br>        scheme = SC_TURNOMANIA; <br>} <br> <br>/**************************************************************************\ <br>* OKToUseChase <br>* <br>* Determines if we can use chase mode for flex pipes <br>* <br>\**************************************************************************/ <br> <br>BOOL <br>FLEX_STATE::OKToUseChase( ) <br>{ <br>    return scheme != SC_TURNOMANIA; <br>} <br> <br>/**************************************************************************\ <br>* NewPipe <br>* <br>* Create a new pipe, based on current drawing scheme <br>* <br>\**************************************************************************/ <br> <br>PIPE* <br>FLEX_STATE::NewPipe( STATE *pState ) <br>{ <br>    if( scheme == SC_TURNOMANIA ) <br>        return new TURNING_FLEX_PIPE( pState ); <br>    else <br>        return new REGULAR_FLEX_PIPE( pState ); <br>} <br> <br>/**************************************************************************\ <br>* GetMaxPipesPerFrame <br>* <br>\**************************************************************************/ <br> <br>int <br>FLEX_STATE::GetMaxPipesPerFrame( ) <br>{ <br>    if( scheme == SC_TURNOMANIA ) { <br>        return TURNOMANIA_PIPE_COUNT; <br>        if( bTexture ) <br>            return TURNOMANIA_PIPE_COUNT / 2; <br>    } else { <br>        return bTexture ? NORMAL_TEX_PIPE_COUNT : NORMAL_PIPE_COUNT; <br>    } <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
