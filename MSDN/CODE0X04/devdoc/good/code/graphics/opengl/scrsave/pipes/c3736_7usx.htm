<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FPIPE.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context3741"></a>FPIPE.H</h2>
<pre><code>/******************************Module*Header*******************************\ <br>* Module Name: fpipe.h <br>* <br>* Flexy pipe stuff <br>* <br>* Copyright 1995 - 1998 Microsoft Corporation <br>* <br>\**************************************************************************/ <br> <br>#ifndef __fpipe_h__ <br>#define __fpipe_h__ <br> <br>#include "sscommon.h" <br>#include "sspipes.h" <br>#include "pipe.h" <br>#include "state.h" <br>#include "eval.h" <br>#include "xc.h" <br> <br>// continuity types <br>enum { <br>    CONT_1 = 0, <br>    CONT_2 <br>}; <br> <br>// cap types <br>enum { <br>    START_CAP = 0, <br>    END_CAP <br>}; <br> <br>#define CIRCUMFERENCE( r ) \ <br>    ( 2.0f * PI * ((GLfloat) r) ) <br> <br>// drawing schemes <br>enum { <br>    SC_EXTRUDED_XC, <br>    SC_TURNOMANIA, <br>    SC_VARIABLE_XC, <br>    SC_COUNT <br>}; <br> <br>#define TURNOMANIA_PIPE_COUNT 10 <br> <br>/**************************************************************************\ <br>* <br>* FLEX_PIPE class <br>* <br>* - Pipe has position and direction in node array <br>* <br>\**************************************************************************/ <br> <br>class FLEX_PIPE : public PIPE { <br>public: <br>    void        SetTexParams( TEXTURE *pTex, IPOINT2D *pTexRep ); <br> <br>protected: <br>    XC          *xcCur, *xcEnd;  // current xc, end xc <br>    EVAL        *pEval; <br>    GLfloat     zTrans;         // pos'n of pipe back along current dir, <br>                                // from current node <br>    FLEX_PIPE( STATE *state ); <br>    ~FLEX_PIPE(); <br>    void        ChooseXCProfile(); <br>    void        DrawExtrudedXCObject( float length ); <br>    void        DrawXCElbow( int newDir, float radius ); <br>    void        DrawCap( int type ); <br> <br>private: <br>    int         nSlices;        // intended # of slices around an xc (based <br>                                // on tessLevel) <br>    int         tangent;        // current tangent at curXC (usually PLUS_Z) <br>    GLfloat     s_start, s_end; <br>    GLfloat     t_start, t_end; <br>    GLfloat     s_length;       // length in WC's of texture width <br>    GLfloat     evalDivSize;    // ~size in WC's of an eval division <br>    void        CalcEvalLengthParams( float length ); <br>}; <br> <br>class REGULAR_FLEX_PIPE : public FLEX_PIPE { <br>public: <br>    float       turnFactorMin;  // describes degree of bend in an elbow <br>    float       turnFactorMax;  //  [0-1] <br> <br>    REGULAR_FLEX_PIPE( STATE *state ); <br>    void        Start(); <br>    void        Draw(); <br>}; <br> <br>class TURNING_FLEX_PIPE : public FLEX_PIPE { <br>public: <br>    TURNING_FLEX_PIPE( STATE *state ); <br>    void        Start(); <br>    void        Draw(); <br>}; <br> <br>#endif // __fpipe_h__ </code></pre>
<p>&nbsp;</p></body>
</HTML>
