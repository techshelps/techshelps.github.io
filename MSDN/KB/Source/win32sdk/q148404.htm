

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>High-Precision Timing Under Windows, Windows NT, &amp; Windows 95 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q148404">
<META NAME="KBModify" CONTENT="1996/05/03">
<META NAME="KBCreate" CONTENT="1996/03/12">
<META NAME="Keywords" CONTENT="kbmm kbprg kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  Windows 3.1 developers who require high precision timers can use the multimedia timers, which are accurate to 10 milliseconds (ms) in most cases. However, in the multithreaded environments of Windows NT and Windows 95, the resolution and accuracy o...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWN,QDL9,QBWO,QBWP,QBWQ,QATK,QAUQ,QADN,QAHC,QAH4,QACE,QDIR,QAYS,QAOY,QAHB V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>High-Precision Timing Under Windows, Windows NT, &amp; Windows 95</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  May 3, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q148404</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows version 3.1
<LI>Microsoft Win32 Software Development Kit (SDK) for:
<P>
<P><PRE>    - Windows NT versions 3.5 and 3.51
    - Windows 95
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Windows 3.1 developers who require high precision timers can use the
multimedia timers, which are accurate to 10 milliseconds (ms) in most
cases. However, in the multithreaded environments of Windows NT and
Windows 95, the resolution and accuracy of the multimedia timers may
often be reduced due to the preemptive nature of the operating systems.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
In Windows 3.1, multimedia timers are serviced by an interrupt service
routine (ISR) which is tied to the computer's clock. When a tick on the
clock occurs, Windows suspends the running program and services the tick.
Should your application use multimedia timers (by using TimeSetEvent() and
any of the CALLBACK flags), Windows executes your callback function before
returning control to the suspended program. Servicing your callback
function during the hardware timer tick provides high precision timing
because your callback is being executed within the timer interrupt, and
interrupt routines cannot, themselves, be interrupted.
<P>
The multithreaded environments of Windows NT and Windows 95 employ CPU
scheduling techniques to improve processor utilization and smooth
multitasking. The portions of code, called threads, within the system are
organized into queues and assigned priorities. Threads of code required by
the operating system are assigned high priorities. The thread scheduler
allows a thread a predetermined amount of execution time (quantum). Then it
evicts the thread from the processor until all threads at the specific
priority level have been serviced. The process continues at the next,
lower, priority level. The timer-servicing thread, like applications, is
subject to CPU scheduling and eviction regardless of the thread priority.
Given that the number of threads ready for execution changes frequently,
the period between timer thread executions can vary dramatically.
<P>
For example, say five time-critical threads are ready for execution, and
the quantum is q milliseconds. If the timer thread is fifth, four threads
execute before the timer thread is executed; q milliseconds x 4. This means
that if q is 25 milliseconds, 100 milliseconds will have elapsed before the
fifth thread is executed. Boosting the priority of the thread that created
the timer risks introducing instability in the system by starving the
time-sensitive, system-critical threads.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 3.50 multimedia resolution flat generic<BR>
KBCategory: kbmm kbprg kbhowto<BR>
KBSubcategory: MMTimer
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  May 3, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
