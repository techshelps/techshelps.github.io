

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Reasons for Failure of Clipboard Functions </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q92530 ">
<META NAME="KBModify" CONTENT="1995/11/02">
<META NAME="KBCreate" CONTENT="1992/11/09">
<META NAME="Keywords" CONTENT="kbui">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  The following clipboard functions:     OpenClipboard()    CloseClipboard()    EmptyClipboard()    GetClipboardData()    SetClipboardData()    EnumClipboardFormats()    SetClipboardViewer()    ChangeClipboardChain()    GetOpenClipboardWindow()    Ge...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QANH,QAY5,QBWS,QAJH,QAL3,QAGI,QBV8,QAB9,QDL9,QBWO,QBWN,QBVV,QAH6,QAWI,QBBI V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Reasons for Failure of Clipboard Functions</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 2, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q92530 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) versions 3.1

<LI>Microsoft Win32 Application Programming Interface (API) included with:
<P>
<P><PRE>    - Microsoft Windows NT versions 3.5 and 3.51
    - Microsoft Windows 95 version 4.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The following clipboard functions:
<P>
<PRE>   OpenClipboard()
   CloseClipboard()
   EmptyClipboard()
   GetClipboardData()
   SetClipboardData()
   EnumClipboardFormats()
   SetClipboardViewer()
   ChangeClipboardChain()
   GetOpenClipboardWindow()
   GetClipboardOwner()

</PRE>can fail for several reasons. Different functions return different
values to indicate failure. Read the documentation for information
about each function. This article combines the causes of failure for
all functions and provides a resolution or explanation. In the More
Information section, a list of affected functions follows each cause.
The causes are:

<OL><P><LI>The clipboard is not opened by any application.

<P><LI>The current application does not have the clipboard open.

<P><LI>The current application does not own the clipboard.

<P><LI>User's data segment is full.

<P><LI>Insufficient global memory.

<P><LI>The specified clipboard format is not supported.

<P><LI>The application that set the clipboard data placed a corrupt or invalid
   metafile in the clipboard.

<P><LI>An application is attempting to open an already open clipboard. The
   debug mode of Windows 3.1 will send the "Clipboard already open"
   message.

<P><LI>The application that opened the clipboard used NULL as the window
   handle.
<P>
</OL><h2>MORE INFORMATION</h2>
 
<P>
Cause 1: The clipboard is not opened by any application.
<P>
Resolution 1: Open the clipboard using OpenClipboard(). If a DLL needs
to open the clipboard, it may pass hwnd = NULL to OpenClipboard().
<P>
Explanation 1: An application cannot copy data (using
SetClipboardData()) when no application has the clipboard currently
open.
<P>
Affected Functions: SetClipboardData().
<P>
Cause 2: The current application does not have the clipboard open.
<P>
Resolution 2: Open the clipboard using OpenClipboard(). If a DLL needs
to open the clipboard, it may pass hwnd = NULL to OpenClipboard().
<P>
Explanation 2: An application cannot empty or close the clipboard without
first opening it.
<P>
Affected Functions: EmptyClipboard(), CloseClipboard().
<P>
Cause 3: The current application does not own the clipboard.
<P>
Resolution 3: Open the clipboard and get ownership by emptying it.
<P>
Explanation 3: An application cannot enumerate the clipboard formats
without owning it.
<P>
Affected Functions: EnumClipboardFormats().
<P>
Cause 4: User's data segment is full.
<P>
Explanation 4: There should be space available in User's data segment to
store internal data structures when SetClipboardData() is called.
<P>
Affected Function: SetClipboardData().
<P>
Cause 5: Insufficient global memory.
<P>
Explanation 5: If the clipboard has data in either the CF_TEXT or
CF_OEMTEXT format and if GetClipboardData() requests text in the
unavailable format, then Windows will perform the conversion. The
converted text must be stored in global memory.
<P>
Affected Function: GetClipboardData().
<P>
Cause 6: The specified clipboard format is not supported.
<P>
Resolution 6: Use IsClipboardFormatAvailable() to check whether the
specified format is available on the clipboard.
<P>
Affected Function: GetClipboardData().
<P>
Cause 7: The application that set the clipboard data placed a corrupt or
invalid metafile in the clipboard.
<P>
Resolution 7: There are no functions to tell whether a given metafile is
corrupt or invalid. Try playing the metafile and see if the metafile plays
as expected.
<P>
Affected Function: SetClipboardData().
<P>
Cause 8: Application is attempting to open an already open clipboard. The
debug mode of Windows 3.1 will send the "Clipboard already open" message.
<P>
Explanation 8: The clipboard must be closed by the application that opened
it, before other applications can open it.
<P>
Affected Functions: OpenClipboard().
<P>
Cause 9: The application that opened the clipboard used NULL as the window
handle.
<P>
Explanation 9: An application can call OpenClipboard(NULL) to
successfully open a clipboard. The side effects are that subsequent
calls to GetClipboardOwner() and GetOpenClipboardWindow() return NULL.
An application can also call SetClipboardViewer(NULL) successfully.
However, there is no reason why this should be allowed, and it is
currently reported as a bug. The side effects are that subsequent
calls to GetClipboardViewer() and ChangeClipboardChain() return NULL.
NULL from these functions does not necessarily imply that they failed.
<P>
Affected Functions: GetClipboardOwner(), GetOpenClipboardWindow(),
GetClipboardViewer(), ChangeClipboardChain().
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10 3.50 3.51 4.00 95<BR>
GetClipboardFormatName<BR>
RegisterClipboardFormat<BR>
KBCategory: kbui<BR>
KBSubcategory: UsrClp<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 2, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
