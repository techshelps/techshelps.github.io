

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Unexpected Result of SetFilePointer() with Devices </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q98892 ">
<META NAME="KBModify" CONTENT="1995/11/02">
<META NAME="KBCreate" CONTENT="1993/05/18">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  Open a floppy drive with CreateFile():     h = CreateFile(  \\\\.\\a: , ... );  Use SetFilePointer() to advance the file pointer associated with the file handle returned from CreateFile():     SetFilePointer( h,    // file handle                   ...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAO2,QAO3,QAY5,QAB5,QAKD,QAC9,QBWP,QBVV,QAUD,QACI,QDNO,QDIT,QBFN,QBC9,QBC8 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Unexpected Result of SetFilePointer() with Devices</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 2, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q98892 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Win32 Application Programming Interface (API) included with:
<P>
<P><PRE>    - Microsoft Windows NT version 3.1
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Open a floppy drive with CreateFile():
<P>
<PRE>   h = CreateFile( "\\\\.\\a:", ... );

</PRE>Use SetFilePointer() to advance the file pointer associated with the file
handle returned from CreateFile():
<P>
<PRE>   SetFilePointer( h,    // file handle
                   5,    // distance (in bytes) to move file pointer
                NULL,    // optional high 32-bits of distance
          FILE_BEGIN     // specifies the starting point
   );

</PRE>If the offset is not a multiple of the sector size of the floppy drive, the
function will return success; however, the pointer will not be exactly
where requested. The pointer value is rounded down to the beginning of the
sector that the pointer value is in.
<P>
<P><h2>CAUSE</h2>
 
<P>
The behavior of this application programming interface (API) is by design
for the following reasons:

<UL><LI>The I/O system is unaware of device particulars such as sector
   size; any offset is valid.

<LI>SetFilePointer() is very frequently used. Because speed is an
   important goal for Windows NT, time is not spent on querying
   device particulars and detecting such errors.

<LI>The logic to handle this situation is built into the file system,
   which actually performs the rounding, and therefore there was no
   need to put this into the code for SetFilePointer().
<P>
</UL><h2>RESOLUTION</h2>
 
<P>
When using SetFilePointer() with a handle that represents a floppy drive,
the offset must be a multiple of the sector size for the floppy drive in
order for the function to perform as expected.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Think of a file pointer as merely a stored value, which is where the next
read or write will take place. In fact, it is possible to override this
value on either the read or write itself, using certain APIs, by supplying
a different location. The new pointer location is remembered after the
operation. Therefore, the operation of "setting a file pointer" merely
means to go store a large integer in a cell in the system's data
structures, for possible use in the next file operation. In the case of a
handle to a device, the file pointer must be on a sector boundary.
<P>
In a similar way, ReadFile() only reads amounts that are multiples of the
sector size if it is passed a handle that represents a floppy drive.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.10 ntddkstorage<BR>
KBCategory: kbprg kbprb<BR>
KBSubcategory: BseFileio<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 2, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
