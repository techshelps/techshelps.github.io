

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Inadequate Buffer Length Causes Strange Problems in DDEML </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q107387">
<META NAME="KBModify" CONTENT="1995/11/02">
<META NAME="KBCreate" CONTENT="1993/11/18">
<META NAME="Keywords" CONTENT="kbui kbprb kbcode">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  Specifying an inadequate buffer length for an XTYP_POKE or an XTYP_EXECUTE command causes strange problems in DDEML.  Problems can range from a general protection (GP) fault or Exception 13, to DDEML timeout errors (such as DMLERR_EXECACKTIMEOUT or...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QATX,QAH6,QAH7,QAD7,QDL9,QBWO,QBWN,QAKP,QACJ,QAJH,QAYV,QBKN,QAI4,QAD4,QAYY V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Inadequate Buffer Length Causes Strange Problems in DDEML</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 2, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q107387</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) versions 3.1

<LI>Microsoft Win32 Application Programming Interface (API) included with:
<P>
<P><PRE>    - Microsoft Windows NT versions 3.5 and 3.51
    - Microsoft Windows 95 version 4.0
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Specifying an inadequate buffer length for an XTYP_POKE or an
XTYP_EXECUTE command causes strange problems in DDEML.
<P>
Problems can range from a general protection (GP) fault or Exception
13, to DDEML timeout errors (such as DMLERR_EXECACKTIMEOUT or
DMLERR_POKEACKTIMEOUT) or a DDEML transaction failure (or
DMLERR_NOTPROCESSED). Sometimes, the application may seem to work for
the most part, and then occasionally crash.
<P>
Data can be passed to the server application via XTYP_POKE or
XTYP_EXECUTE in two ways:

<UL><LI>Directly, as a pointer to the data or command string, as in the
   sample code below:
<P>
<PRE>   char lpszString [80];

   lstrcpy (lpszString, "[FileOpen(""C:\README.DOC"")]");
   DdeClientTransaction (lpszString,             // string buffer
                         lstrlen (lpszString)+1, // string buffer length
                         hConv,
                         hszItem,
                         CF_TEXT,
                         XTYP_POKE,
                         1000,
                         NULL);

  -or-

</PRE><LI>By creating a data handle, and passing that on to the
   DdeClientTransaction() call:
<P>
<PRE>   char lpszString [80];
   HDDEDATA hData;

   lstrcpy (lpszString, "[FileOpen(""C:\README.DOC"")]");
   hData = DdeCreateDataHandle (idInst,
                                lpszString,
                                lstrlen (lpszString)+1,
                                0,
                                NULL,
                                CF_TEXT,
                                0);
   if (!hData)
      DdeClientTransaction (hData,     // string buffer
                            -1,        // indicates hData is a data handle
                            hConv,
                            hszItem,
                            CF_TEXT,
                            XTYP_POKE,
                            1000,
                            NULL);

</PRE></UL><h2>CAUSE</h2>
 
<P>
Because data is most commonly passed between applications in CF_TEXT
format, a common problem with the string buffer length is setting it
to lstrlen (lpszString), where lpszString is the buffer containing the
string the client needs to pass to the server. Because the lstrlen()
function does not include the terminating null character, this can
cause the system to append garbage characters to the end of the
string, thus sending an invalid string to the server application.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
When passing strings between two applications, the string buffer
length should be set to lstrlen (lpszString) +1, to include the
terminating null character ('\0').
<P>
Using DDESPY, it is easy to track down this problem, because one can
follow the string being passed from the client to the server
application. Garbage characters incorrectly being appended to the
string usually indicate a problem with specifying an inadequate string
buffer length.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.10 3.50 3.51 4.00 95  gpf gp-fault<BR>
KBCategory: kbui kbprb kbcode<BR>
KBSubcategory: UsrDde<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 2, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
