

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: WinExec() Fails Due to Memory Not De-allocated </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q126710">
<META NAME="KBModify" CONTENT="1997/01/15">
<META NAME="KBCreate" CONTENT="1995/02/28">
<META NAME="Keywords" CONTENT="kbprg kbprb">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  Under Win32s version 1.15, when a Win32-based application spawns a 16-bit application several times using WinExec(), after a few successful spawns, WinExec() fails.  Each time WinExec() is called to start a 16-bit application, Win32s allocates a fi...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAX1,QAD7,QAH7,QAH6,QAGI,QBVV,QAJH,QAKP,QAGB,QDL9,QBWQ,QBWO,QBWN,QAIJ,QAIF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: WinExec() Fails Due to Memory Not De-allocated</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 15, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q126710</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Win32s, versions 1.15, 1.2, 1.25, 1.30a,  1.30c
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Under Win32s version 1.15, when a Win32-based application spawns a 16-bit
application several times using WinExec(), after a few successful spawns,
WinExec() fails.
<P>
Each time WinExec() is called to start a 16-bit application, Win32s
allocates a fixed and page-locked block. The owner of this block is the
Win32-based application. The memory is not de-allocated when the 16-bit
application is terminated, only when the 32-bit application is terminated.
<P>
<P><h2>CAUSE</h2>
 
<P>
This is actually a bug in Windows version 3.1. The 32-bit WinExec() calls
the 16-bit LoadModule(). Win32s passes the environment of the calling
process to LoadModule(). Then the Windows 3.1 LoadModule() allocates a
buffer for the environment, copies this environment to the buffer, and
passes this buffer to the child process. The problem is that the owner of
the new allocated buffer is the parent, so the memory is freed when the
parent exits. There is no code for otherwise freeing the memory. This bug
also affects 16-bit Windows-based applications if LoadModule() is called
with an environment selector that is not NULL.
<P>
In a related problem, when the parent terminates, the child's environment
becomes invalid. This may cause a general protection (GP) fault.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To work around the problem, you can call the Windows version 3.1 WinExec()
through the Universal Thunk. However, the parent will not be able to modify
the child's environment.
<P>
In Win32s version 1.2x and later, this problem exists only if you start 16-
bit application using CreateProcess() or LoadModule() and pass it explicit
environment strings. In this case, you will encounter the Windows version
3.1 bug. If you do not pass an explicit environment, the environment passed
to the 16-bit application is NULL. This resolves the problems mentioned in
the Symptoms and Cause sections of this article.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
With the changes in Win32s version 1.2x, if the calling application
modifies the environment, the child process will not get the modified
environment of the parent. It will get the global MS-DOS environment. This
is also true for WinExec().
<P>
If you need to pass a modified environment, call LoadModule() or
CreateProcess() with the environment set to what GetEnvironmentStrings()
returns. Be aware that this will cause a memory leak. In addition, if the
parent terminates before the child, the child's environment will become
invalid.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbprg kbprb<BR>
KBSubcategory: W32s<BR>
Additional reference words: 1.20 1.30a 1.30c GPF bugfix buglist<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 15, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
