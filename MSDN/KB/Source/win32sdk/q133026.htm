

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: Win32s 1.3 Bug List </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q133026">
<META NAME="KBModify" CONTENT="1995/08/07">
<META NAME="KBCreate" CONTENT="1995/07/23">
<META NAME="Keywords" CONTENT="kbprg kbbuglist">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT=" The following is a list of the known bugs in Win32s version 1.3 at the time of its release.   - Incorrect context at EXIT_PROCESS_DEBUG_EVENT.   - Progman gets restored when debugger application exits.   - Using StartDoc() does not produce document ...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAUD,QBWP,QBVV,QAB4,QAH4,QALW,QAAP,QDL9,QBWQ,QBWO,QBWN,QAKP,QDIX,QAY2,QAGB V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: Win32s 1.3 Bug List</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 7, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q133026</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Win32s version 1.3
</UL> 
<P>
The following is a list of the known bugs in Win32s version 1.3 at the
time of its release.

<UL><LI>Incorrect context at EXIT_PROCESS_DEBUG_EVENT.

<LI>Progman gets restored when debugger application exits.

<LI>Using StartDoc() does not produce document from printer.

<LI>EM_GETWORDBREAKPROC return code is incorrect.

<LI>Int 3 cannot be trapped via Structured Exception Handling (SEH) on
   Win32s.

<LI>Win32s does not open all files in RAW mode, as Windows NT does.

<LI>Cannot do ReadProcessMemory (RPM) on memory that has a hardware
   breakpoint set on it.

<LI>C run-time functions getdcwd()/getcwd() do not work.

<LI>GetFullPathName() returns the root directory for any drive that is not
   the current drive.

<LI>PlayMetaFileRecord()/EnumMetaFile() contains incorrect lpHTable.

<LI>Size of memory mapped files is rounded to a whole number of pages,
   meaning that the size is a multiple of 4096 bytes.

<LI>Functions chdrive() and SetCurrentDirectory() fail on PCNFS network
   drives.

<LI>GetExitCodeProcess() does not return exit codes for 16-bit Windows-based
   applications.

<LI>Memory passed to Netbios() must be allocated with GlobalAlloc().

<LI>biSizeImage field of BITMAPINFOHEADER is zero.

<LI>CreateFile() on certain invalid long filesnames closes Windows.

<LI>Only the first CBT hook gets messages.

<LI>Most registry functions return the Windows 3.1 return codes, not the
   Windows NT return codes.

<LI>GlobalReAlloc(x,y,GMEM_MOVEABLE) returns wrong handle type.

<LI>GetVolumeInformation() fails for Universal Naming Convention (UNC)
   root path.

<LI>ResumeThread while debugging writes to debuggee stack.

<LI>GetShortPathName() doesn't fail with a bad path, as it does on
   Windows NT.

<LI>CreateDirectory()/RemoveDirectory() handle errors differently than they
   do in Windows NT.

<LI>SetCurrentDirctory() returns different error codes than does Windows NT.

<LI>FindText() leaks memory.

<LI>Win32s doesn't support language files other than default (l_intl.nls).

<LI>spawnl does not pass parameters to an MS-DOS-based application.

<LI>Win32s does not support forwarded exports.

<LI>GetDlgItemInt() only translates numbers &lt;= 32767 (a 16-bit integer).

<LI>Changing system locale in Win32s has no effect until Win32s
   is loaded again, unlike in Windows NT.

<LI>Module Management APIs missing ANSI to OEM translation.

<LI>Stubbed API FindFirstFileW() does not return -1 to indicate failure.

<LI>FormatMessage() doesn't set last error.

<LI>FormatMessage() fails with LANG_NEUTRAL | SUBLANG_DEFAULT, but works
   with LANG_ENGLISH | SUBLANG_ENGLISH_US.

<LI>After calling CreateFile() on a write-protected floppy disk,
   GetLastError() returns 2, instead of 19, as it should.

<LI>MEASUREITEMSTRUCT and DRAWITEMSTRUCT do not have itemID or itemData
   fields initialized with owner draw menu items.

<LI>With winhlp32, deleting an annotation in a popup causes an unhandled
   exception. This occurs with Windows NT 3.51 and Windows 95 as well.

<LI>SetEnvironmentVariables() does not handle an empty string, an equal
   sign (=), or foreign lowercase characters in the variable name.

<LI>With the help authoring switched on with winhlp32, if you use
   PopupContext with an invalid context number, the error message displayed
   is "Cannot find the windows.hlp file. Do you want to find it?"

<LI>With the help authoring switched on with winhlp32, if you use
   PopupContext with a file that has an .HLP extension but isn't help file,
   the error message displayed is "Cannot find the windows.hlp file. Do you
   want to find it?"

<LI>With the help authoring switched on with winhlp32, if you use
   PopupContext with a context string that does not exist, no error message
   is produced.

<LI>You can still write to a file that was opened with GENERIC_READ.

<LI>When a file is opened a second time, the attributes are not updated
   even with CREATE_ALWAYS.

<LI>PrintDlg() with a NULL hPrintTemplate and PD_ENABLEPRINTTEMPLATE
   returns 7 (ERROR_ARENA_TRASHED), not 6 (ERROR_INVALID_HANDLE).

<LI>PrintDlg() does not fail with a NULL hSetupTemplate and the flags
   PD_ENABLESETUPTEMPLATE | PD_PRINTSETUP. The expected return code is 6
   (ERROR_INVALID_HANDLE). Instead, the regular Print Dialog is displayed.

<LI>PrintDlg() succeeds with a NULL hInstance.

<LI>PrintDlg() succeeds with a From value that is bigger than the To value.

<LI>PrintDlg() succeeds with an emptry From value or an emptry To value.

<LI>The winhlp32 Find tab does not paint correctly.

<LI>Winhlp32 does not have context-sensitive help for itself.

<LI>The return value of GetDlgCtrlID() is sign-extended. This causes a
   problem for IDs greater than 0x7fff.

<LI>Winhlp32 cannot play .AVI files.

<LI>The winhlp32 Find highlight feature doesn't work on the first try.
   After opening and closing the Find options, the problem goes away.

<LI>When a help file with a .CNT file is brought up from a write-protected
   floppy disk, there's a system error the first time that the help file is
   invoked. This does not happen if winhlp32 is invoked from the command
   line (winhlp32 a:file.hlp) or if the .GID is already created.

<LI>When you attempt to print a secondary window from Word version 6.0, an
   application error occurs.

<LI>When you open up a different help file, the window title changes to
   the title of the new help file. When you go back to the original help
   file, the window title does not change back to the original title.

<LI>When you bring up a help file in File Manager with a .CNT file but no
   keywords, the Find tab is brought up.

<LI>TAB keys and hot keys do not work properly in property sheet controls
   unless the application's message loop calls PropSheet_IsDialogMessage().
<P></UL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.30<BR>
KBCategory: kbprg kbbuglist<BR>
KBSubcategory: W32s<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 7, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
