

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using RLE Bitmaps for Animation Applications In Windows </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q75214 ">
<META NAME="KBModify" CONTENT="1995/11/02">
<META NAME="KBCreate" CONTENT="1991/08/14">
<META NAME="Keywords" CONTENT="kbgraphic">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  Animation that uses a  brute-force  animation scheme, displaying successive complete bitmaps, can be slow and choppy. The alternative approach, displaying an initial frame and then modifying the elements that change, can save a great deal of time, ...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAIA,QAIB,QAA7,QAB7,QDL9,QBWO,QBWN,QDM6,QAIC,QAH2,QAB6,QBWQ,QDNG,QAJQ,QBW5 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Using RLE Bitmaps for Animation Applications In Windows</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 2, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q75214 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   versions 3.1 and 3.0

<LI>Microsoft Win32 Application Programming Interface (API) included with:
<P>
<P><PRE>    - Microsoft Windows NT versions 3.5 and 3.51
    - Microsoft Windows 95 version 4.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Animation that uses a "brute-force" animation scheme, displaying
successive complete bitmaps, can be slow and choppy. The alternative
approach, displaying an initial frame and then modifying the elements
that change, can save a great deal of time, memory, and disk space.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Animation applications typically use a very simple algorithm to
display a sequence of bitmaps, or frames, one right over another, on
the same display surface. When the application stores an entire frame
in the device-independent bitmap (DIB) format, it suffers from three
particular bottlenecks:

<OL><P><LI>With large frames or long sequences, the storage file becomes quite
   large.

<P><LI>Loading an entire sequence requires a large amount of memory.

<P><LI>Available Windows functions, such as BitBlt or SetDIBitsToDevice,
   may be too slow to animate the sequence smoothly.
<P>
</OL>For an animation sequence of bitmaps with a consistent set of colors,
preprocessing the animation sequence and storing it in the run-length-
encoded (RLE) format enables an application to run faster with a
smaller storage file and memory requirement. Note that this RLE file
is different from an RLE compressed DIB. This RLE format consists of
several frames that are compressed according to the differences
between frames. This process is straightforward and consists of five
steps:

<OL><P><LI>Select the first frame in the sequence and store it in the DIB
   format.

<P><LI>Compare the DIB bitmaps of consecutive frames. Due to the nature of
   animation sequences, the number of differences is often quite small
   compared to the size of the entire frame.

<P><LI>Encode the set of changed pixels into RLE format. The encoded frame
   will contain information only on the pixels that change, the delta
   records will skip the unchanged pixels. The RLE bitmap is stored
   instead of the latter frame. For example, the RLE-encoded
   difference between the first and second frames is stored as the
   second frame.

<P><LI>When the entire sequence is preprocessed, bring each frame into the
   system as a BITMAPINFO structure and stream of bits. Since only the
   first frame is in the DIB format, the memory requirement is quite
   low. Moreover, frames that contain an identical set of colors can
   share the BITMAPINFO structure, only the biCompression and
   biSizeImage fields must be changed.

<P><LI>At display time, load the first frame as a DIB. Then use the
   SetDIBitsToDevice function to display subsequent frames in the
   sequence. Because this function requires much less information,
   the sequence can be animated much more quickly and smoothly.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10 3.50 4.00 95  rle<BR>
KBCategory: kbgraphic<BR>
KBSubcategory: GdiBmp<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 2, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
