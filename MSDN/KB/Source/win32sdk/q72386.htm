

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Background, Foreground, and System Palette Management </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q72386 ">
<META NAME="KBModify" CONTENT="1995/11/02">
<META NAME="KBCreate" CONTENT="1991/05/23">
<META NAME="Keywords" CONTENT="kbgraphic">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  On a device that supports the Microsoft Windows palette management APIs, an application can create a logical palette, select the palette into a device context (DC), and realize the palette. Realizing a logical palette maps its colors to the system ...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPG,QAMV,QAG9,QDL9,QBWO,QBWN,QA59,QAY4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Background, Foreground, and System Palette Management</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 2, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q72386 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   versions 3.1 and 3.0

<LI>Microsoft Win32 Application Programming Interface (API) included with:
<P>
<P><PRE>    - Microsoft Windows NT versions 3.5 and 3.51
    - Microsoft Windows 95 version 4.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
On a device that supports the Microsoft Windows palette management APIs, an
application can create a logical palette, select the palette into a device
context (DC), and realize the palette. Realizing a logical palette maps its
colors to the system (hardware) color palette. The GetDeviceCaps() API is
available to inform an application whether the device is capable of
supporting palette management functions and, if so, the size of its system
palette. This article discusses the different types of logical palettes and
the effect of each on the system palette when a logical palette is
realized.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
When a logical palette is selected into a DC, it can be selected as either
a foreground or a background palette. Setting the bForceBackground
parameter of the SelectPalette() API to TRUE selects the palette as a
background palette. If this parameter is FALSE, the palette can be selected
as a foreground palette. A palette will be selected as a foreground palette
only if the DC into which the palette is selected is one of the five cached
DCs managed by the GetDC() API and the DC is retrieved on behalf of the
active window. If the DC is returned by CreateDC() or CreateCompatibleDC()
or if the window is not the active window, the palette will be forced
into the background.
<P>
The status as a foreground or a background palette affects how the colors
in the logical palette are mapped into the system palette when the logical
palette is realized.
<P>
When a foreground palette is realized, every entry in the system palette
that can be modified by an application is accessible to the logical
palette. Logical palette entries are mapped into the system palette
starting at the first available entry. Because a logical palette entry that
exactly matches a reserved system palette entry is mapped to that system
entry, it does not consume a separate palette slot. If the logical palette
has more entries than available slots in the system palette, the available
slots are filled, in order, from the logical palette. The remaining logical
palette entries are mapped to the closest colors already present in the
system palette. There is one exception to this rule: if a logical palette
entry is marked with the PC_RESERVED flag, no colors will be mapped to that
entry. If all available system palette entries are reserved, additional
colors will not be mapped to any entry and will be displayed as black on
the screen.
<P>
A palette entry marked as PC_NOCOLLAPSE will always take a separate slot if
available, just as for PC_RESERVED. Unlike a PC_RESERVED color, if no slots
are available, it will map to the nearest color, and other colors may map
onto it.
<P>
The first available entry in the system palette is the first palette entry
not marked as used. For example, assume a device with 256 palette entries,
20 of which are reserved for the system. An application realizes a palette
of 36 colors on this device; therefore, the first 36 entries are marked
used. Another application realizes a 100-entry palette; therefore, the next
100 entries are marked used. If a third application receives the input
focus and realizes a foreground palette with 236 entries, Windows maps the
first 100 colors into the remainder of the system palette. Each of the
remaining 136 colors of the logical palette is mapped into the closest
color available in the system palette.
<P>
When a background palette is realized, any empty positions in the system
palette are filled. Any colors that remain are mapped to the closest color
in the system palette. A background palette entry cannot overlay a
foreground entry in the system palette; however, a foreground palette entry
can overlay a background entry in the system palette.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10 3.50 4.00 95<BR>
KBCategory: kbgraphic<BR>
KBSubcategory: GdiPal<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 2, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
