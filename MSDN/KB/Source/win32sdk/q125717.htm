

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Limitations of Overlapped I/O in Windows 95 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q125717">
<META NAME="KBModify" CONTENT="1995/09/25">
<META NAME="KBCreate" CONTENT="1995/02/02">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  Windows 95 does not support overlapped operations on files, disk, pipes, or mailslots, but does support overlapped operations on serial and parallel communication ports. Non-overlapped file write operations are similar to overlapped file writes, be...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWN,QDL9,QBWO,QAGI,QBWQ,QAB5,QBVV,QBF0,QAHT,QDNF,QAY5,QAJH,QAUD,QASS,QAL3 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Limitations of Overlapped I/O in Windows 95</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 25, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q125717</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Win32 Application Programming Interface (API) included with:
<P>
<P><PRE>    - Microsoft Windows 95 version 4.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Windows 95 does not support overlapped operations on files, disk, pipes, or
mailslots, but does support overlapped operations on serial and parallel
communication ports. Non-overlapped file write operations are similar to
overlapped file writes, because Windows 95 uses a lazy-write disk cache.
Overlapped I/O can be implemented in a Win32-based application by creating
multiple threads to handle I/O.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Asynchronous I/O on files, disk, pipes and mailslots is not implemented in
Windows 95. If a Win32-based application running on Windows 95 attempts to
perform asynchronous file I/O (such as ReadFile() with any value other than
NULL in the lpOverlapped field) on any of these objects, the ReadFile()  or
WriteFile fails and GetLastError() returns ERROR_INVALID_PARAMETER (87).
<P>
Overlapped I/O to serial and parallel communication ports is fully
supported in Windows 95. To implement overlapped I/O, call CreateFile()
with the FILE_FLAG_OVERLAPPED flag set in the flags attribute.
<P>
Overlapped I/O on disk and files was not implemented in Windows 95, because
the added performance benefits (which would only affect a certain class of
I/O-intensive applications) were not judged to be worth the extra cost.
<P>
The system uses a lazy-write disk cache algorithm which automatically
provides many of the benefits of overlapped writes. When a process writes
data to a file, the data is written to the cache and then the write
immediately returns to the calling process. Then, at some later time, the
cache manager writes the data to disk. This is similar to behavior that is
achieved with overlapped I/O. In the case of disk/file reads, many
applications that need to read data do so because it is needed for further
processing. Some applications benefit greatly by prefetching data from
files while doing other work.
<P>
Although Windows 95 does not implement overlapped I/O, it is possible for
Win32-based applications on Windows 95 to create additional threads for
implementing an effect similar to overlapped file I/O. One way to implement
this effect is to communicate with an I/O thread using a request packet
mechanism. The thread can queue request packets from other threads and
service them as it is able, signalling the other threads on the completion
of each request with an event. Even though the application may be "waiting"
on some I/O activity, it can still be responsive to the user since the
main, or user interface, thread is not blocking on I/O requests. However,
the use of multiple threads will increase the amount of time spent in the
kernel, which leads to inefficiencies, as compared with an operating system
that supports overlapped I/O.
<P>
NOTE: Windows NT has a lazy-write disk cache as well. It has been found
that a write-back cache is not as good as overlapped I/O, particularly when
the data is much larger than the file cache or noncached I/O. One of the
biggest benefits of overlapped I/O is that it allows you to quickly get
lots of outstanding I/O posted to the disk controller, thereby keeping the
disks busy with tagged command queueing in the controller. Using multiple
threads is a reasonable substitute, but I/O may be serialized in the
filesystem.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 95 asynchronous overlapped<BR>
KBCategory:  kbprg<BR>
KBSubcategory: BseFileio<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 25, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
