

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Freeing Memory for Transactions in a DDEML Client App </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q83912 ">
<META NAME="KBModify" CONTENT="1995/11/02">
<META NAME="KBCreate" CONTENT="1992/04/23">
<META NAME="Keywords" CONTENT="kbui">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  A Dynamic Data Exchange Management Library (DDEML) client application can request data from a server both synchronously and asynchronously by calling the DdeClientTransaction function.  To make a synchronous request, the client application specifie...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QARL,QAGI,QAJH,QAUD,QAYY,QAY5,QBBI,QAHE,QBV8,QAB9,QAY2,QAA7,QDL9,QBWO,QBWN V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Freeing Memory for Transactions in a DDEML Client App</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 2, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q83912 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) versions 3.1

<LI>Microsoft Win32 Application Programming Interface (API) included with:
<P>
<P><PRE>    - Microsoft Windows NT versions 3.5 and 3.51
    - Microsoft Windows 95 version 4.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
A Dynamic Data Exchange Management Library (DDEML) client application
can request data from a server both synchronously and asynchronously
by calling the DdeClientTransaction function.
<P>
To make a synchronous request, the client application specifies
XTYP_REQUEST as the value for the uType parameter to
DdeClientTransaction, and any reasonable value for the uTimeout
parameter.
<P>
To make an asynchronous request, the client application specifies
XTYP_REQUEST as the value for the uType parameter to
DdeClientTransaction, and TIMEOUT_ASYNC as the value for the uTimeout
parameter.
<P>
The client can also establish an advise loop with a server application
by specifying XTYP_ADVSTART as the value for the uType parameter. In
an advise loop, the client application's callback function receives an
XTYP_ADVDATA transaction each time the specified data item changes in
the server application. (NOTE: This article discusses only hot advise
loops in which changed data is communicated to the application. No
data is transferred for a warm advise loop, only a notification that
the data changed.)
<P>
The client application must free the data handle it receives from a
synchronous transaction; however, the client application should not
free the data handle it receives from an asynchronous transaction or
from an advise loop.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
If the client application initiates a synchronous transaction, the
DdeClientTransaction function returns a handle to the requested data.
If the client application initiates an asynchronous transaction, the
DdeClientTransaction function returns either TRUE or FALSE. When the
data becomes available, the DDEML sends the client application an
XTYP_XACT_COMPLETE notification accompanied by a handle to the
requested data. In an active advise loop, the DDEML sends the client
application an XTYP_ADVDATA notification accompanied by a handle to
the updated data.
<P>
In the synchronous case, the client application must call
DdeFreeDataHandle before it terminates to free a data handle (and the
associated memory) that it received as the return value from
DdeClientTransaction. If the DDEML server specified HDATA_APPOWNED
when it created the data handle, then the data is invalidated when the
client calls DdeFreeDataHandle; the server must call DdeFreeDataHandle
before terminating to free the associated memory.
<P>
In the asynchronous case, the DDEML sends the client application's
callback function an XTYP_XACT_COMPLETE notification when the server
has completed the transaction. A handle to the requested data
accompanies the notification as the hData parameter to the callback
function. This handle is valid until control returns from the client
application's callback function. Once the client application's
callback function returns control, the DDEML may free the data handle
and the client application must not assume that the data handle
received in the callback function remains valid. This fact has two
implications, as follows:

<UL><LI>The client application cannot call DdeFreeDataHandle on the data
   handle it receives with an XTYP_XACT_COMPLETE transaction. If the
   client invalidates the data handle by freeing it in the client's
   callback function, and the DDEML later attempts to free the handle,
   a Fatal Exit will result.

<LI>The client application must make a local copy of the data it
   receives with the XTYP_XACT_COMPLETE transaction to use that data
   after the callback function returns.
<P>
</UL>In an advise loop, the client application should not free the data
handle that it receives as the hData parameter to the callback
function. The DDEML frees the data handle when the client application
returns from its callback function. If the client calls
DdeFreeDataHandle on the data handle, the DDEML will cause a Fatal
Exit when it attempts to free the same data handle.
<P>
These rules apply to all data handles, whether or not the server
application specified the HDATA_APPOWNED flag when it created the
handle.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.10 3.50 3.51 4.00 95<BR>
KBCategory: kbui<BR>
KBSubcategory: UsrDde<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 2, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
