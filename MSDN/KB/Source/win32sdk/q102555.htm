

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How Windows NT and Windows 95 Handle Floating-Point Calculations </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q102555">
<META NAME="KBModify" CONTENT="1997/04/11">
<META NAME="KBCreate" CONTENT="1993/08/04">
<META NAME="Keywords" CONTENT="BseMisc kbprg">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  Windows NT and Windows 95 provide environments to run Win32, Win16, and MS-DOS applications. Windows NT also supports POSIX and OS/2 applications. This article explains how each of these environments provides floating- point support to applications...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWP,QDL9,QBWN,QBWO,QBWQ,QANO,QBC9,QBC8,QAJH,QAV1,QAV0,QAH6,QATS,QASR,QAH4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How Windows NT and Windows 95 Handle Floating-Point Calculations</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 11, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q102555</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Microsoft Win32 Application Programming Interface included with:
   - Microsoft Windows NT version 3.51, 4.0
   - Microsoft Windows 95
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Windows NT and Windows 95 provide environments to run Win32, Win16, and
MS-DOS applications. Windows NT also supports POSIX and OS/2 applications.
This article explains how each of these environments provides floating-
point support to applications.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Win32</h3>
 
<P>
Both Windows 95 and Windows NT provide full floating-point support for
Win32 applications, even on Intel x86 machines that don't have built-in
floating-point support or floating-point coprocessors. Emulation is
provided by the Win32 Kernel for machines that don't have floating-point
hardware. Therefore, compilers do not need to provide their own floating-
point emulation.
<P>
Each thread in a Win32 application has its own execution state that
includes the general purpose registers and the floating-point registers.
Thus, floating-point execution and exception handling are controlled on a
per-thread basis. This allows individual threads in a process to adjust the
behavior of the floating-point processor to use specialized rounding or
precision control and exception handling.
<P>
Floating point exceptions are handled by the Win32 structured exception
handling (SEH) mechanism built into the Win32 Kernel. When a thread causes
a floating-point exception, the SEH mechanism looks for an exception
handler registered by the thread to handle the exception. If the thread
does not handle the exception, then the process that owns it is terminated.
<P>
Languages may have runtime libraries or runtime systems that provide
default floating-point exception handlers. For example, Microsoft Visual
C++ runtime library provides default floating-point exception handling and
includes functions such as _controlfp() for determining and adjusting the
floating-point hardware's behavior in rounding, precision control, and
exception handling.
<P>
<P><h3>POSIX</h3>
 
<P>
Like Win32 applications, POSIX applications can assume that full floating-
point support always exists.
<P>
The POSIX standard does not define a way to enable floating-point
exceptions, so POSIX applications that use floating-point exceptions must
rely on system-specific features. Under Windows NT, a POSIX application
compiled with Microsoft Visual C++ can enable floating exceptions by using
_controlfp(). Floating-point exceptions can then be caught by SIGFPE, or,
if the application needs to do more than simply catch the exception, by
fpieee_flt().
<P>
<P><h3>Win16</h3>
 
<P>
Both Windows 95 and Windows NT on Intel x86 processors provide a floating-
point emulator named WIN87EM for Win16 applications. WIN87EM only runs when
it is explicitly called; it does not intercept floating-point instructions
being executed. Thus, Win16 applications technically need to be compiled to
support emulation.
<P>
Win16 applications are normally compiled to have fixup records in their
object code that contain actual floating-point instructions and calls to
the emulator. If the machine's processor has floating-point support or a
coprocessor is present, then the floating-point instructions will be
executed; otherwise, the calls to WIN87EM will be executed.
<P>
Windows NT on RISC-based machines use Windows NT's Intel x86 emulation
code. Windows NT 3.5 and 3.51 include 80286 and 80287 emulators; Windows NT
4.0 includes an i486 emulator. Win16 applications run as if the Intel
floating-point coprocessors are present.
<P>
<P><h3>MS-DOS</h3>
 
<P>
Windows 95 and Windows NT on Intel x86 both run MS-DOS applications in the
Intel x86 processor's Virtual-8086 mode. MS-DOS applications can access the
floating-point hardware just as if they would in MS-DOS. If no floating-
point hardware is present, no emulation is provided for the application.
Thus, the application must provide its own emulation.
<P>
Windows NT on RISC-based machines use Windows NT's Intel x86 emulation
code. Windows NT 3.5 and 3.51 include 80286 and 80287 emulators; Windows NT
4.0 includes an i486 emulator. MS-DOS applications run as if the Intel
floating-point coprocessors are present.
<P>
<P><h3>OS/2 Subsystem</h3>
 
<P>
Floating-point support in this subsystem matches that of OS/2: if floating-
point hardware is not installed, the OS/2 application must provide its own
emulation. The OS/2 subsystem is supported only on Intel x86 Versions of
Windows NT.
<P>
<P><h3>Device Drivers</h3>
 
<P>
Windows NT kernel-mode drivers cannot use floating-point instructions
because kernel-mode stack switches don't preserve the floating-point
registers. If a kernel-mode driver does use any floating-point instruction
it could cause either corruption of the user-mode application's numeric
state or a system crash.
<P>
Windows 95 virtual device drivers (VxDs) can use floating-point
instructions but must use the Virtual Math Coprocessor Device interface to
save and restore the state of the floating-point coprocessor. The VxD must
also register an exception handler for floating-point exceptions.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 95<BR>
Keywords            : BseMisc kbprg<BR>
Version             : 3.51 4.0<BR>
Platform            : NT Win95 WINDOWS<BR>
Issue type          : kbinfo<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 11, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
