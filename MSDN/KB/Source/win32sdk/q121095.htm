

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: GPF When Spawn Windows-Based App w/ WinExec() in Win32s </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q121095">
<META NAME="KBModify" CONTENT="1994/11/28">
<META NAME="KBCreate" CONTENT="1994/09/26">
<META NAME="Keywords" CONTENT="kbprg kbprb">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  Win32-based applications running under Win32s can spawn both Windows-based and Win32-based applications by using either WinExec() or CreateProcess(). However, there is a case where spawning a Windows-based application with WinExec() does not work a...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAJH,QBKN,QAX1,QBVV,QBFY,QAD7,QAH7,QAH6,QAGN,QAGI,QAC1,QDKW,QAKP,QBWS,QA8T V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: GPF When Spawn Windows-Based App w/ WinExec() in Win32s</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 28, 1994</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q121095</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Win32s, versions 1.1, 1.15, and 1.2
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Win32-based applications running under Win32s can spawn both Windows-based
and Win32-based applications by using either WinExec() or CreateProcess().
However, there is a case where spawning a Windows-based application with
WinExec() does not work as expected and may cause a general protection (GP)
fault.
<P>
<P><h2>CAUSE</h2>
 
<P>
There is a bug in the C start-up code that comes with Microsoft C version
6.0. If you spawn an application built with Microsoft C version 6.0 by
calling LoadModule() with an explicit environment, the application does not
run correctly. This is true whether the application was spawned from a
Win32-based application or a Windows-based application. Win32s calls
LoadModule() with an explicit environment when you spawn a Windows-based
application with WinExec(). As a result, under Win32s version 1.1 and 1.15,
WinExec() will report success, but the Windows-based application built with
Microsoft C version 6.0 may cause a GP fault.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
The best solution is to rebuild the application with another compiler
package. However, because a number of Windows accessories (such as Notepad
and Write) were built with Microsoft C version 6.0 and you cannot modify
these applications, changes were introduced into Win32s version 1.2 to help
you work around this problem. These changes are detailed in the More
Information section below.
<P>
NOTE: Win32s uses a different mechanism to spawn Win32-based applications,
so the problems discussed in this article do not occur when spawning Win32-
based applications with WinExec().
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
In Win32s version 1.2, WinExec() does not pass the environment to the
spawned application (child). The child receives the standard global
environment strings. This allows the application to run, but the child does
not receive the modified environment from the parent. This seemed to be a
reasonable compromise, because most applications do not change the
environment for the child. If an application must modify the child's
environment, it can spawn the application using CreateProcess() and specify
an explicit environment. However, if the child was built using Microsoft C
version 6.0, it may cause a GP fault. In addition, if the parent exits, the
child's environment becomes invalid. These three problems are not specific
to Win32s and will happen with Windows-based applications as well.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 1.15 1.20 GPF<BR>
KBCategory: kbprg kbprb<BR>
KBSubCategory: W32s<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 28, 1994</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
