

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Reasons for Failure of Menu Functions </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q89739 ">
<META NAME="KBModify" CONTENT="1995/11/02">
<META NAME="KBCreate" CONTENT="1992/09/29">
<META NAME="Keywords" CONTENT="kbui">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  The Menu functions (AppendMenu(), CheckMenuItem(), CreateMenu(), CreatePopupMenu(), DeleteMenu(), DestroyMenu(), GetMenu(), GetMenuItemID(), GetMenuString(), GetSubMenu(), GetSystemMenu(), HiliteMenuItem(), InsertMenu(), LoadMenuIndirect(), ModifyM...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAVI,QAY5,QDL9,QBWO,QBWN,QAF0,QBV8,QAB9,QABI,QAL3,QBWQ,QBVV,QAWI,QAHE,QAEF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Reasons for Failure of Menu Functions</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 2, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q89739 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) versions 3.1

<LI>Microsoft Win32 Application Programming Interface (API) included with:
<P>
<P><PRE>    - Microsoft Windows NT versions 3.5 and 3.51
    - Microsoft Windows 95 version 4.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The Menu functions (AppendMenu(), CheckMenuItem(), CreateMenu(),
CreatePopupMenu(), DeleteMenu(), DestroyMenu(), GetMenu(),
GetMenuItemID(), GetMenuString(), GetSubMenu(), GetSystemMenu(),
HiliteMenuItem(), InsertMenu(), LoadMenuIndirect(), ModifyMenu(),
RemoveMenu(), SetMenu(), SetMenuItemBitmaps(), and TrackPopupMenu())
can fail for several reasons. Different functions return different
values to indicate failure. Read the documentation for information
about each function. This article combines the causes of failure for
all functions and provides a resolution or explanation. A list of
affected functions follows each cause. The causes are:

<OL><P><LI>Invalid hWnd parameter.

<P><LI>Invalid hMenu parameter.

<P><LI>The menu item is not found.

<P><LI>No space left in User's heap to hold a string or to hold an
</OL>internal data structure for owner draw menu items or to create a menu
or to create a window for TrackPopupMenu().

<OL><P><LI>There are no items in the menu.

<P><LI>The menu resource could not be found (FindResource()) or loaded
</OL>(LoadResource()) or locked (LockResource()) in memory.

<OL><P><LI>TrackPopupMenu() is called while another popup menu is being tracked
</OL>in the system.

<OL><P><LI>The hMenu that has been passed to TrackPopupMenu() has been deleted.

<P><LI>MENUITEMTEMPLATEHEADER's versionNumber field is non-zero.
<P>
</OL><h2>MORE INFORMATION</h2>
 
<P>
Cause 1: Invalid hWnd parameter.
<P>
Resolution 1: Validate the hWnd parameter using IsWindow(). Make sure
that hWnd is not a child window.
<P>
NOTE: Resolution 1 does not apply to TrackPoupuMenu().
<P>
Explanation 1: In Windows, menus are always associated with a window.
Child windows cannot have menu bars.
<P>
Affected Functions: All functions that take hWnd as a parameter except for
TrackPoupuMenu().
<P>
Cause 2: Invalid hMenu parameter.
<P>
Resolution 2: Validate hMenu with IsMenu().
<P>
Affected Functions: All functions that take hMenu as a parameter.
<P>
Cause 3: The menu item is not found.
<P>
Resolution 3: If the menu item is referred to BY_POSITION, make sure
that the index is lesser than the number of items. If the menu item is
referred to BY_COMMAND, an application has to devise its own method of
validating it.
<P>
Explanation 3: Menu items are numbered consecutively starting from 0.
Remember that separator items are also counted.
<P>
Affected Functions: All functions that refer to a menu item.
<P>
Cause 4: No space left in User's heap to hold a string or to hold an
internal data structure for owner draw menu items or to create a menu.
<P>
Resolution 4: Remember to delete all menus and other objects that have
been created by the application when they are not needed any more.
If you suspect that objects left undeleted by other applications are
wasting valuable system resources, restart Windows.
<P>
Explanation 4: In Windows 3.0, menus and menu items were allocated
space from User's heap. In Windows 3.1, they are allocated space from
a separate heap. This heap is for the exclusive use of menus and menu
items.
<P>
Affected Functions: AppendMenu(), Insertmenu(), ModifyMenu(),
CreateMenu(), CreatePopupMenu(), LoadMenu(), LoadMenuIndirect(),
TrackPopupMenu(), GetSystemMenu() (when fRevert = FALSE).
<P>
Cause 5: There are no items in the menu.
<P>
Resolution 5: Use GetMenuItemCount() to make sure the menu is not empty.
<P>
Explanation 5: Nothing to be deleted or removed.
<P>
Affected Functions : RemoveMenu(), DeleteMenu().
<P>
Cause 6: The menu resource could not be found (FindResource()) or loaded
(LoadResource()) or locked (LockResource()) in memory.
<P>
Resolution 6: Ensure that the menu resource exists and that the hInst
parameter refers to the correct hInstance. Try increasing the number
of file handles using SetHandleCount() and increasing available global
memory by closing some applications. For more information about the
causes of failure of resource functions, query this Knowledge Base on
the following keywords:
<P>
<PRE>   failure and LoadResource and FindResource and LockResource.

</PRE></OL>Explanation 6: Finding, loading, and locking a resource involves use
of file handles, global memory, and the hInstance that has the menu
resource.
<P>
Affected Functions: LoadMenu(), LoadMenuIndirect()
<P>
Cause 7. TrackPopupMenu() is called while another popup menu is being
tracked in the system.
<P>
Explanation 7: Only one popup menu can be tracked in the system at
any given time.
<P>
Affected Function: TrackPopupMenu()
<P>
Cause 8. The hMenu that has been passed to TrackPopupMenu() has been
deleted. The debug mode of Windows 3.1 sends the following message :
<P>
"Menu destroyed unexpectedly by WM_INITMENUPOPUP"
<P>
Explanation 8: Windows sends a WM_INITMENUPOPUP to the application
and expects the menu to not be destroyed.
<P>
Affected Function: TrackPopupMenu()
<P>
Cause 9. MENUITEMTEMPLATEHEADER 's versionNumber field is non-zero.
<P>
Explanation 9: In Windows 3.0 and 3.1, this field should always be 0.
<P>
Affected Function: LoadMenuIndirect()
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10 3.50 3.51 4.00 95<BR>
KBCategory: kbui<BR>
KBSubcategory: UsrMen<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 2, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
