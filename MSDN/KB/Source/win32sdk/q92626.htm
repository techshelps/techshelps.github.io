

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Implementing a Line-Based Interface for Edit Controls </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q92626 ">
<META NAME="KBModify" CONTENT="1995/11/02">
<META NAME="KBCreate" CONTENT="1992/11/11">
<META NAME="Keywords" CONTENT="kbui">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  In specific situations, it may be desirable to make multiline edit controls behave similar to list boxes, such that entries can be selected and manipulated on a per-line basis. This article describes how to implement the line-based interface.  MORE...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAHP,QAB5,QAUD,QAIB,QBXT,QA5V,QAY5,QAEV,QDL9,QBWO,QBWN,QBBS,QAYC,QAQ7,QAH7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Implementing a Line-Based Interface for Edit Controls</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 2, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q92626 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) versions 3.1

<LI>Microsoft Win32 Application Programming Interface (API) included with:
<P>
<P><PRE>    - Microsoft Windows NT versions 3.5 and 3.51
    - Microsoft Windows 95 version 4.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In specific situations, it may be desirable to make multiline edit controls
behave similar to list boxes, such that entries can be selected and
manipulated on a per-line basis. This article describes how to implement
the line-based interface.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
A multiline edit control must be subclassed to achieve the desired
behavior. The subclass function is outlined below.
<P>
Most of the work necessary to implement a line-based interface is done by
the predefined window function of the edit control class. With the return
value from the EM_LINEINDEX message, the offset of the line under the caret
can be determined; with the length of that line retrieved via the
EM_LINELENGTH message, the EM_SETSEL message can be used to highlight the
current line.
<P>
There are two problems with this approach:

<UL><LI>The first problem is that the EM_LINEINDEX message, when sent to the
   control with wParam=-1, returns the line index of the caret, which is
   not necessarily the same as the current mouse position. Thus, upon
   receiving the WM_LBUTTONDOWN message, the subclass function should first
   call the old window function, which will set the caret to the character
   under the current mouse position, then compute the beginning and ending
   offsets of the corresponding line, and eventually set the selection to
   that line.

<LI>The other problem is that the WM_MOUSEMOVE message should be ignored by
   the subclassing function because otherwise the built-in selection
   mechanism will change the selection when the mouse is being dragged with
   the left mouse button pressed, thus defeating the purpose.
<P>
</UL>Following is the subclassing function that follows from this discussion:
<P>
WNDPROC EditSubClassProc(HWND hWnd,
<PRE>               UINT wMsg,
               WPARAM wParam,
               LPARAM lParam)
</PRE>{ int iLineBeg, iLineEnd;
<PRE>  long lSelection;
  switch (wMsg)
  { case WM_MOUSEMOVE:
     break;                       /* Swallow mouse move messages.  */
    case WM_LBUTTONDOWN:          /* First pass on, then process.  */
     CallWindowProc((FARPROC)lpfnOldEditFn,hWnd,wMsg,wParam,lParam);
     iLineBeg = SendMessage(hWnd,EM_LINEINDEX,-1,0);
     iLineEnd=iLineBeg+SendMessage(hWnd,EM_LINELENGTH,iLineBeg,0);
</PRE>#ifndef WIN32
<PRE>     SendMessage(hWnd,EM_SETSEL,0,MAKELPARAM(iLeneBeg,iLineEnd));
</PRE>#else
<PRE>     SendMessage(hWnd,EM_SETSEL,iLineBeg,iLine)  /* Win 32 rearranges
                      parameters.  */
</PRE>#endif
<PRE>     break;
    case WM_LBUTTONDBLCLK:
     lSelection = SendMessage(hWnd,EM_GETSEL,0,0);
     /* Now we have the indices to the beginning and end of the line in
        the LOWORD and HIWORD of lSelection, respectively.
        Do something with it... */
     break;
    default:

</PRE>return(CallWindowProc((FARPROC)lpfnOldEditFn,hWnd,wMsg,wParam,lParam));
};
return(0);
}
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.10 3.50 3.51 4.00 95<BR>
KBCategory: kbui<BR>
KBSubcategory: UsrCtl<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 2, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
