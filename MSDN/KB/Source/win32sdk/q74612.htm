

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Open File Dialog Box -- Pros and Cons </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q74612 ">
<META NAME="KBModify" CONTENT="1995/11/02">
<META NAME="KBCreate" CONTENT="1991/07/24">
<META NAME="Keywords" CONTENT="kbui">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  Applications can call the common dialog library (COMMDLG.DLL) function GetOpenFileName() to retrieve the name of a file that the user wants to manipulate. Using this DLL provides a common interface for opening files across applications and also eli...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA01,QAJH,QBWS,QBVR,QAH6,QDL9,QBWO,QBWN,QAD7,QAFI,QBBS,QA2S,QAY5,QAH7,QAH4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Open File Dialog Box -- Pros and Cons</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 2, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q74612 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) versions 3.1

<LI>Microsoft Win32 Application Programming Interface (API) included with:
<P>
<P><PRE>    - Microsoft Windows NT versions 3.5 and 3.51
    - Microsoft Windows 95 version 4.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Applications can call the common dialog library (COMMDLG.DLL) function
GetOpenFileName() to retrieve the name of a file that the user wants to
manipulate. Using this DLL provides a common interface for opening files
across applications and also eliminates dialog-box message processing
within the application's code. However, the application must initialize a
structure specific to the dialog box. This article discusses the benefits
and costs of using the Open File common dialog, via GetOpenFileName().
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
When an application uses the Open File dialog box provided by the common
dialog DLL, the primary benefit to that application's users will be a
familiar interface. Once they learn how to open a file in one application
that uses the DLL, they will know how to open a file in all applications
that use it.
<P>
Features of the Open File dialog include:

<UL><LI>A list box of files, filtered by extension, in the current directory
<LI>A list box of directories from root of current drive to current
   directory, plus subdirectories
<LI>A combo box of file types to list in filename list box
<LI>A combo box of drives available, distinguished by drive type
<LI>An optional "Read Only" check box
<LI>An optional "Help" button
<LI>An optional application hook function to modify standard behavior
<LI>An optional dialog template to add private application features
<P>
</UL>For the application's programming staff, the benefits of using the Open
File common dialog will include:

<UL><LI>No dialog-box message processing necessary to implement the Open
   File dialog box
<LI>Drive and directory listings are constructed by the DLL, not by
   the application
<LI>A full pathname for the file to be opened is passed back to the
   application, and this name can be passed directly to the OpenFile
   function
<LI>Offsets into the full pathname are also returned, giving the
   application access to the filename (sans pathname) and the file
   extension without the need for parsing
<LI>The application can pass in its own dialog box template, in which
   case the DLL will use that template instead of the standard template
<LI>The application can provide a dialog hook function to extend the
   interface of the DLL or to change how events are handled
<LI>The application can choose to have a single filename or multiple
   filenames returned from the dialog box
<P>
</UL>The cost for the programming staff could be in adapting previously written
application code to handle the common dialog interface. While making this
change is straightforward, it does require coding time. If the application
only needs a filename with no path, the Open File common dialog is probably
not appropriate.
<P>
For more information on using the Open File common dialog, query on
GetOpenFileName().
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.10 3.50 3.51 4.00 95<BR>
KBCategory: kbui<BR>
KBSubcategory: UsrCmnDlg<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 2, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
