

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Win32s 1.25a Fix List </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q130139">
<META NAME="KBModify" CONTENT="1997/10/29">
<META NAME="KBCreate" CONTENT="1995/05/11">
<META NAME="Keywords" CONTENT="W32s kbbuglist kbfixlist kbprg">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT=" The following is a list of the known bugs in Win32s version 1.2 that were fixed in Win32s version 1.25.   - GlobalAlloc(GMEM_FIXED) from 32-bit .EXE locks memory pages. It is    more efficient to use GlobalAlloc(GMEM_MOVEABLE) and call GlobalFix()  ...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAUD,QAGI,QBVV,QAML,QAAP,QAR4,QALW,QAJ6,QAWP,QAIF,QBXB,QBWP,QATJ,QAKP,QAFI V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Win32s 1.25a Fix List</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q130139</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.25a
WINDOWS
kbprg kbfixlist kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Win32s, version 1.25a
</UL> 
<P>
The following is a list of the known bugs in Win32s version 1.2 that
were fixed in Win32s version 1.25.

<UL><LI>GlobalAlloc(GMEM_FIXED) from 32-bit .EXE locks memory pages. It is
   more efficient to use GlobalAlloc(GMEM_MOVEABLE) and call GlobalFix()
   if necessary.

<LI>WINMM16.DLL has no version information.

<LI>CreateFileMapping() with SEC_NOCOMMIT returns ERROR_INVALID_PARAMETER.

<LI>PolyPolygon() does not close the polygons.

<LI>OpenFile() only searches the current directory when only a filename is
   given, not the application directory, the system directory, the windows
   directory, or the directories listed on the path.

<LI>GetFileInformationByHandle() doesn't return the correct file attribute.

<LI>GlobalUnlock() sets an error of ERROR_INVALID_PARAMETER.

<LI>lstrcmp()/lstrcmpi() do not use the collate table correctly.

<LI>FreeLibrary() in DLL_PROCESS_DETACH crashes the system.

<LI>FindResource(), LoadResource(), GetProcAddress(), GetModuleFileName(),
   EnumResourceNames(), and other APIs, fail with a NULL hInstance.

<LI>sndPlaySound() with SND_ASYNC | SND_MEMORY may cause a crash or may work
   poorly.

<LI>Thread Local Storage (TLS) data is not initialized to 0 in TlsAlloc().

<LI>The pointer received in the lParam of WM_INITDIALOG in the common dialog
   hook function becomes invalid in the following messages if the pointer
   is "remembered" in a static variable.

<LI>Stubbed API GetFileAttributesW() does not return -1 on error.

<LI>Code page CP_MACCP not supported.

<LI>Invalid LCIDs are not recognized.

<LI>CreateFile() fails to open an existing file in share mode.

<LI>GetLocaleInfo() for locale returns system defaults from WIN.INI.

<LI>GetVolumeInformation() fails with ERROR_INVALID_NAME for volumes
   without a label.

<LI>VirtualProtect() may miss the last page in an address range.

<LI>GetLocaleInfo() returns incorrect information for most non-US locales.

<LI>ANSI/OEM conversions always use code page 437.

<LI>GetProcAddress() for printer driver APIs is case sensitive.

<LI>The LanMan APIs are unsupported, but they return 0, which indicates
   that the API was successful. They should return NERR_InvalidAPI (2142).

<LI>CreateFileW() returns 0 instead of -1 (HFILE_ERROR).

<LI>lstrcpyn() copies n bytes from source to destination, then appends a
   NULL terminator, instead of copying n-1 bytes and appending the NULL
   terminator.

<LI>GetDriveType() doesn't report detecting a CD-ROM or a RAM DISK.

<LI>CRTDLL calls TlsFree() upon each process detach, not just the last.

<LI>If a DllEntryPoint calls FreeLibrary() when using universal thunks,
   the system can crash.

<LI>Not all 32-bit DLLs have correct version numbers.

<LI>GetCurrentDirectory() returns the wrong directory after calling
   GetOpenFileName(). The workaround is to call SetCurrentDirectory(".")
   right after returning from the call to GetOpenFileName().

<LI>RegEnumValue() and other Registry functions return ERROR_SUCCESS even
   though they are not implemented. Win32s implements only the registry
   functions supported by Windows.

<LI>AreFileApisANSI()/SetFileApisToANSI()/SetFileApisToOEM() are not
   exported. AreFileApisANSI() should always return TRUE, SetFileApiToOEM()
   should always fail, and SetFileApiToANSI() should always succeed.

<LI>SetLocaleInfoW()/SetLocateInfoA() are not implemented.

<LI>GetScrollPos() sets the last error if the scroll position is 0.

<LI>SetScrollPos() sets the last error if the last scroll position is 0.

<LI>LoadString() leaks memory if the string is a null string.

<LI>GetFileVersionInfoSize() fails if the resource section is small and
   close to the end of the file.

<LI>MoveFile() doesn't call SetLastError() on failure or sets a different
   error than on Windows NT.

<LI>SetCurrentDirectory() does not work on a CD-ROM drive.

<LI>GetFileVersionInfoSize() fails if the 2nd parameter is NULL.

<LI>WSOCK32.DLL is missing exported stubs for unimplemented APIs.

<LI>Win32s fails to load 64x64 monochrome (black and white) icons.

<LI>CreateFile() fails when called with a filename with an international
   character.

<LI>GetCurrentDirectory() returns an OEM string.

<LI>PrintDlg() causes GP fault if hDevMode!=NULL and another printer is
   selected that uses a larger DevMode buffer.

<LI>Unicode resources are not properly converted to 8-bit characters.

<LI>CreateDC() returns an incorrect DEVMODE. This can cause a variety of
   symptoms, like the inability to do a Landscape Print Preview from an
   MFC application or the displayed paper width and height not changing,
   even when you change the paper size.

<LI>OpenFile() fails on filenames with OEM characters in the name.

<LI>WNetCancelConnection() should be supported similar to
   NetAddConnection().

<LI>GetDriveType() fails on a Stacker 3.1 drive.

<LI>SetCurrentDirectory() fails on Novell client machines.

<LI>GetProp() returns 0 in the second instance of an app in certain cases.

<LI>fopen(fn, "w") fails on second call.

<LI>TLS indices allocated by a module are released when that module is
   freed.

<LI>CreateWindow() handles STARTUPINFO incorrectly if the application starts
   minimized.

<LI>CreateFile() creates files with incorrect attributes.

<LI>Resource sections are now read/write to emulate the behavior of Windows
   NT and Windows 95.

<LI>Removed the 128K stack limitation.

<LI>CompareStringW() sometimes uses incorrect locale, primarily Swedish and
   other Scandinavian locales.

<LI>Added dummy _iob to CRTDLL for applications that reference standard
   handles.

<LI>Added support for OPENCHANNEL, CLOSECHANNEL, SEXGDIXFORM, and
   DOWNLOADHEADER escapes.
<P></UL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.25 1.25a<BR>
KBCategory: kbprg kbfixlist kbbuglist<BR>
KBSubcategory: W32s<BR>
Keywords          : W32s kbbuglist kbfixlist kbprg<BR>
Version           : 1.25a<BR>
Platform          : WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
