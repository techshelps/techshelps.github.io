

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating and Using a Custom Caret </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q74514 ">
<META NAME="KBModify" CONTENT="1995/11/02">
<META NAME="KBCreate" CONTENT="1991/07/22">
<META NAME="Keywords" CONTENT="kbui">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  In the Microsoft Windows graphical environment, creating a custom caret is simple. Windows has a series of caret control, creation, and deletion functions specifically designed to make manipulating the caret easy.  MORE INFORMATION  The caret is a ...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBB2,QAGI,QDL9,QBWO,QBWN,QAY5,QBBI,QBV8,QAB9,QACI,QAEF,QAJQ,QAR8,QAIF,QBVV V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Creating and Using a Custom Caret</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 2, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q74514 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) versions 3.0 and 3.1

<LI>Microsoft Win32 Application Programming Interface (API) included with:
<P>
<P><PRE>    - Microsoft Windows NT versions 3.5 and 3.51
    - Microsoft Windows 95 version 4.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In the Microsoft Windows graphical environment, creating a custom
caret is simple. Windows has a series of caret control, creation, and
deletion functions specifically designed to make manipulating the
caret easy.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The caret is a shared system resource. Unlike brushes, pens, device
contexts and such, but like the cursor, only one caret is available
under Windows. Also, like the cursor, an application can define a
custom shape for the caret.
<P>
The CreateCaret() function creates a custom caret. Its syntax is as
follows:
<P>
<PRE>   void CreateCaret(HWND hWnd, HBITMAP hBitmap,
                    int nWidth, int nHeight);

</PRE>The caret shape can be a line, a block, or a bitmap specified as the
hBitmap parameter. If the hBitmap parameter contains a valid handle [a
bitmap handle returned from the CreateBitmap(), CreateDIBitmap(), or
LoadBitmap() function], CreateCaret() ignores the values of its nWidth
and nHeight parameters and uses the dimensions of the bitmap. If
hBitmap is NULL, the caret is a solid block; if hBitmap is one, the
caret is a gray block. The nWidth and nHeight parameters specify the
caret size in logical units. If either nWidth or nHeight is zero, the
caret width or height is set to the window-border width or height.
<P>
If an application uses a bitmap for the caret shape, the caret can be
in color; unlike the cursor, the caret is not restricted to
monochrome.
<P>
CreateCaret() automatically destroys the previous caret shape, if any,
regardless of which window owns the caret. The new caret is initially
hidden; call the ShowCaret() function to display the caret.
<P>
Because the caret is a shared resource, a window should create a caret
only when it has the input focus or is active. It should destroy the
caret before it loses the input focus or becomes inactive. Only the
window that owns the caret should move it, show it, hide it, or modify
it in any way.
<P>
Other functions related to the caret are the following:

<UL><LI>SetCaretPos()
   This function moves the caret to the specified position (in logical
   coordinates).

<LI>GetCaretPos()
   This function retrieves the caret's current position (in screen
   coordinates).

<LI>ShowCaret()
   This function shows the caret on the display at the caret's current
   position. When shown, the caret flashes automatically. If the caret
   is not owned by the window specified in the call, the caret is not
   shown.

<LI>HideCaret()
   This function hides the caret by removing it from the display
   screen. HideCaret() hides the caret only if the window handle
   specified in the call is the window that owns the caret. Hiding the
   caret does not destroy it.
<P>
   NOTE: Hiding the caret is cumulative; ShowCaret() must be called once
   for every call to HideCaret(). For example, if HideCaret() is called
   five times, ShowCaret() must be called five times for the caret
   to be shown.

<LI>DestroyCaret()
   This function removes the caret from the screen, frees the caret
   from the current owner-window, and destroys the current shape of
   the caret. It destroys the caret only if the current task owns the
   caret. This call should be used in conjunction with CreateCaret().
   DestroyCaret() does not free or destroy a bitmap used to define the
   caret shape.

<LI>SetCaretBlinkTime()
   This function sets the caret blink rate. After the blink rate is
   set, it remains the same until the same window changes it again,
   another window changes it, another application changes it, or
   Windows is rebooted.

<LI>GetCaretBlinkTime()
   This function returns the current caret blink rate.
<P></UL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10 3.50 3.51 4.00 95<BR>
KBCategory: kbui<BR>
KBSubcategory: UsrCrt<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 2, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
