

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SAMPLE: Drawing Three-Dimensional Text in OpenGL Applications </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q131024">
<META NAME="KBModify" CONTENT="1996/08/05">
<META NAME="KBCreate" CONTENT="1995/06/02">
<META NAME="Keywords" CONTENT="kbgraphic kbcode kbfile kbwebcontent">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  GDI operations, such as TextOut, can be performed on an OpenGL window only if the window is single-buffered. The Windows NT implementation of OpenGL does not support GDI graphics in a double-buffered window. Therefore, you cannot use GDI functions ...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QADF,QBWP,QAY5,QAXQ,QDJU,QAFR,QAE1,QA3M,QATX,QAPF,QBXR,QBBI,QAIW,QBV8,QAB9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>SAMPLE: Drawing Three-Dimensional Text in OpenGL Applications</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 5, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q131024</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Win32 Application Programming Interface (API) included with:
<P>
<P><PRE>    - Microsoft Windows NT version 3.51
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
GDI operations, such as TextOut, can be performed on an OpenGL window only
if the window is single-buffered. The Windows NT implementation of OpenGL
does not support GDI graphics in a double-buffered window. Therefore, you
cannot use GDI functions to draw text in a double-buffered window, for
example. To draw text in a double-buffered window, an application can use
the wglUseFontBitmaps and wglUseFontOutlines functions to create display
lists for characters in a font, and then draw the characters in the font
with the glCallLists function.
<P>
The wglUseFontOutlines function is new to Windows NT 3.51 and can be used
to draw 3-D characters of TrueType fonts. These characters can be rotated,
scaled, transformed, and viewed like any other OpenGL 3-D image. This
function is designed to work with TrueType fonts.
<P>
The GLFONT sample shows how to use the wglUseFontOutlines function to
create display lists for characters in a TrueType font and how to draw,
scale, and rotate the glyphs in the font by using glCallLists to draw
the characters and other OpenGL functions to rotate and scale them. You
need the Win32 SDK for Windows NT 3.51 to compile this sample, and you need
to incorporate wglUseFontOutlines in your own application. You alos need
Windows NT 3.51 to execute the application.
<P>
Download GLFONT.EXE, a self-extracting file, from the Microsoft Software
Library (MSL) on the following services:

<UL><LI>Microsoft Download Service (MSDL)
<P><PRE>      Dial (206) 936-6735 to connect to MSDL
      Download <A HREF="http://support.microsoft.com/download/support/mslfiles/GLFONT.EXE">GLFONT.EXE</A> <I>(size: 29858 bytes)</I> 
</PRE>
<LI>Internet (anonymous FTP)
<P><PRE>      ftp ftp.microsoft.com
      Change to the SOFTLIB\MSLFILES directory
</PRE><P>
<P><PRE>      Get <A HREF="http://support.microsoft.com/download/support/mslfiles/GLFONT.EXE">GLFONT.EXE</A> <I>(size: 29858 bytes)</I> 
</PRE><P>
</UL><h2>MORE INFORMATION</h2>
 
<P>
To specify the TrueType font for which you want wglUseFontOutlines to
create display lists, you must first create the desired logical font by
using CreateFont or CreateFontIndirect. Then, you must select the HFONT
created into a screen device context (HDC) with SelectObject, and send the
HDC to the wglUseFontOutlines function. Each character is mapped in the x
and y directions in the display lists. You need to specify the depth in the
negative z direction in the extrusion parameter of wglUseFontOutlines.
<P>
You can also specify whether you want the 3-D glyphs to be created with
line segments or polygons. To instruct wglUseFontOutlines to create the
3-D glyphs with lines segments, specify WGL_FONT_LINES in the format
parameter. To create them with polygons, specify WGL_FONT_POLYGONS.
<P>
Here is an example showing how to create a set of display lists to draw
the characters of the Arial TrueType font as a set of polygons:
<P>
<PRE>     LOGFONT     lf;
     HFONT       hFont, hOldFont;
     GLYPHMETRICSFLOAT agmf[256];

     // An hDC and an hRC have already been created.
     wglMakeCurrent( hDC, hRC );

     // Let's create a TrueType font to display.
     memset(&amp;lf,0,sizeof(LOGFONT));
     lf.lfHeight               =   -20 ;
     lf.lfWeight               =   FW_NORMAL ;
     lf.lfCharSet              =   ANSI_CHARSET ;
     lf.lfOutPrecision         =   OUT_DEFAULT_PRECIS ;
     lf.lfClipPrecision        =   CLIP_DEFAULT_PRECIS ;
     lf.lfQuality              =   DEFAULT_QUALITY ;
     lf.lfPitchAndFamily       =   FF_DONTCARE|DEFAULT_PITCH;
     lstrcpy (lf.lfFaceName, "Arial") ;

     hFont = CreateFontIndirect(&amp;lf);
     hOldFont = SelectObject(hDC,hFont);

     // Create a set of display lists based on the TT font we selected
     if (!(wglUseFontOutlines(hDC, 0, 255, GLF_START_LIST, 0.0f, 0.15f,
        WGL_FONT_POLYGONS, agmf)))
          MessageBox(hWnd,"wglUseFontOutlines failed!","GLFont",MB_OK);

     DeleteObject(SelectObject(hDC,hOldFont));
     .  .  .  .
     .  .  .  .
     .  .  .  .
     .  .  .  .

</PRE>To display these 3-D characters in a string, use the following code:
<P>
<PRE>   // Display string with display lists created by wglUseFontOutlines()
   glListBase(GLF_START_LIST); // indicate start of display lists

   // Draw the characters
   glCallLists(6, GL_UNSIGNED_BYTE, "OpenGL");
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: graphics<BR>
KBCategory: kbgraphic kbcode kbfile kbwebcontent<BR>
KBSubcategory: GdiOpenGL<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 5, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
