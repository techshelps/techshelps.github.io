

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INFO: Large Fonts Versus Small Fonts Use in Windows </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q177795">
<META NAME="KBModify" CONTENT="1997/12/10">
<META NAME="KBCreate" CONTENT="1997/12/08">
<META NAME="Keywords" CONTENT="GdiDisplay GdiFnt GdiMisc UsrCtl UsrDlgs UsrMisc">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  If your application has User Interface designs based on screen coordinates, you might frequently find that switching to large or small font drivers causes the design to look bad. If you try to remedy the problem by customizing the design to the sys...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QADF,QDIR,QABA,QA2O,QAU9,QAKD,QDK0,QDIZ,QBVV,QAYS,QA6A,QAGU,QAYY,QDL9,QBWQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INFO: Large Fonts Versus Small Fonts Use in Windows</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q177795</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Win32 Software Development Kit (SDK)
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
If your application has User Interface designs based on screen coordinates,
you might frequently find that switching to large or small font drivers
causes the design to look bad. If you try to remedy the problem by
customizing the design to the system font size in use, you fail because the
system does not know, and cannot report to an application, what font size
the user has selected when configuring the video driver.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Video drivers for the Windows operating systems have historically offered
the capability to operate in large fonts or small fonts. These "modes"
differ in that the fonts used in the system and in applications appear
larger on the display.
<P>
Video drivers accomplish this by reporting different values for the
LOGPIXELSY and LOGPIXELSX flags of the GetDeviceCaps() function. They also
install a new set of system raster fonts that directly support the new
display units. The operating system is not aware of this difference and is
not specifically aware of whether the user has selected large fonts or
small fonts. Thus, it cannot report which mode the system is currently in.
<P>
Traditionally, video drivers report a value of 96 pixels per inch for small
fonts LOGPIXELSX and LOGPIXELSY values and 120 pixels per inch for large
fonts LOGPIXELSX and LOGPIXELSY values. However, this is not reliable
because there is no standard dictating these values. Furthermore, Windows
95 allows the user to customize these return values to any arbitrary value.
Other methods, such as the name of the video driver, have historically been
used to infer large fonts versus small fonts use as well, but none of these
methods are reliable.
<P>
NOTE: The numbers and strings that appear in the Display Settings dialog
box of the operating system are either managed by the display driver or
merely data stored in the system registry. The presence of this data does
not imply that the operating system can report it in a meaningful fashion.
<P>
Applications should not attempt to determine the system font size since
there is no reliable way to obtain the information. Typically, developers
request this information because they have used screen coordinates to
design the look of their application to a specific video display setting.
<P>
The solution is to avoid using a device dependent means of specifying the
application's user interface layout. Instead, you should use Dialog Base
units as described by the Knowledge Base articles listed in the REFERENCES
section of this article. These methods are portable from instance to
instance of the operating system irrespective of large fonts, small fonts,
or screen size.
<P>
For more information on the best methods for dynamically creating dialog
boxes and positioning controls please see the Knowledge Base articles
listed in the REFERENCES section of this article.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For additional information, please see the following articles in the
Microsoft Knowledge Base:
<P>
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../WIN32SDK/Q125681.htm">Q125681</A></B>
   TITLE     : How to Calculate Dialog Base Units with Non-System-Based
               Font

   ARTICLE-ID: <B><A HREF="../WIN32SDK/Q74280.htm">Q74280</A></B>
   TITLE     : Translating Dialog-Box Size Units to Screen Units
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: UI position float button control<BR>
Keywords          : GdiDisplay GdiFnt GdiMisc UsrCtl UsrDlgs UsrMisc<BR>
Version           : WINNT:<BR>
Platform          : winnt<BR>
Issue type        : kbinfo<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
