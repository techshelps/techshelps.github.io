

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Setting Dynamic Breakpoints in WinDbg </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q100642">
<META NAME="KBModify" CONTENT="1995/11/02">
<META NAME="KBCreate" CONTENT="1993/06/24">
<META NAME="Keywords" CONTENT="kbtool">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  The WinDbg breakpoint command contains a metacircular interpreter; that is, you can execute commands dynamically once a breakpoint is hit. This allows you to perform complex operations, including breaking when an automatic variable has changed, as ...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAYL,QAB9,QAY5,QBV8,QBXS,QAML,QAFF,QAKC,QBFY,QBDM,QBC9,QBC8,QBC6,QANO,QAIJ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Setting Dynamic Breakpoints in WinDbg</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 2, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q100642</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Win32 Software Development Kit (SDK), versions 3.1, 3.5,
   3.51, and 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The WinDbg breakpoint command contains a metacircular interpreter; that is,
you can execute commands dynamically once a breakpoint is hit. This allows
you to perform complex operations, including breaking when an automatic
variable has changed, as described below.
<P>
The command interpreter of WinDbg allows any valid C expression to serve as
a break condition. For example, to break whenever a static variable has
changed, use the following expression in the Expression field of the
breakpoint dialog box:
<P>
<PRE>   &amp;&lt;variablename&gt;

</PRE>In addition, the length should be specified as 4 (the size of a DWORD) in
the length field.
<P>
This technique does not work for automatic variables because the address of
an automatic variable may change depending on the value that the stack
pointer has upon entering the function that defines the automatic variable.
This is one case where the breakpoint needs to be redefined dynamically.
<P>
For this purpose, a breakpoint can be enabled at function start and
disabled at function exit, so that the address of the variable is
recomputed.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Suppose that the name of the function is "subroutine" and the local
variable name is "i". The following steps will be used:

<OL><P><LI>Start the program and step into the function that defines the
   automatic variable with the commands:
<P>
<P><PRE>      g subroutine
      p
      bp500 ={subroutine}&amp;i /r4 /C"?i"
</PRE><P>
   The breakpoint number is chosen to be large so that the breakpoint
   will be well out of range of other breakpoints. Note that /r4
   indicates a length of 4 because i is an integer. Make this number
   larger for other data types. The command "?i" prints out the value
   of i.

<P><LI>Next, disable this first breakpoint with the command
<P>
<P><PRE>      bd500
</PRE><P>
   because the address of i may change. The breakpoint will be enabled
   when in the scope of function subroutine.

<P><LI>The second breakpoint definition is set at the entry point of the
   function:
<P>
<P><PRE>      bp .&lt;FirstLine&gt; /C"be 500;g"
</PRE><P>
   This is where the breakpoint is enabled. Note that &lt;FirstLine&gt; is
   the line number of the first statement in the function subroutine.

<P><LI>The last breakpoint is set at the end of the function
<P>
<P><PRE>      bp .&lt;LastLine&gt; /C"bd 500;g"
</PRE><P>
   and will disable the breakpoint again. Note that &lt;LastLine&gt; is the
   line number of the last statement in the function subroutine.
<P>
   Note that if the function has more than one exit point, multiple
   breakpoints may have to be defined.
<P>
</OL>Program execution stops when breakpoint #500 is hit (for example, the value
of i changes), but execution will continue after the other two breakpoints
because they contain go ("g") commands.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.10 3.50 4.00 95<BR>
KBCategory: kbtool<BR>
KBSubcategory: TlsWindbg<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 2, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
