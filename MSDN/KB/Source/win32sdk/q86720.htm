

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Adding a Custom Template to a Common Dialog Box </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q86720 ">
<META NAME="KBModify" CONTENT="1995/11/02">
<META NAME="KBCreate" CONTENT="1992/07/15">
<META NAME="Keywords" CONTENT="kbui">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  Many applications developed for the Microsoft Windows environment using dialog boxes from the common dialogs library (COMMDLG.DLL) require custom dialog templates. An application generally uses a custom dialog box template to add controls to a stan...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA01,QA36,QDL9,QBWO,QBWN,QAB5,QAY5,QANX,QA7O,QAOE,QAMN,QAEV,QBV8,QAB9,QAJH V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Adding a Custom Template to a Common Dialog Box</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 2, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q86720 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) versions 3.1

<LI>Microsoft Win32 Application Programming Interface (API) included with:
<P>
<P><PRE>    - Microsoft Windows NT version 3.5
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Many applications developed for the Microsoft Windows environment using
dialog boxes from the common dialogs library (COMMDLG.DLL) require custom
dialog templates. An application generally uses a custom dialog box
template to add controls to a standard common dialog box. The text below
discusses the steps required to implement a custom dialog box template with
a common dialog box.
<P>
A custom dialog box template is most often used in conjunction with a hook
function. For details on using a hook function with one of the common
dialog boxes, query on the following words in the Microsoft Knowledge Base:
<P>
<PRE>   steps adding hook function

</PRE><h2>MORE INFORMATION</h2>
 
<P>
CDDEMO, one of the advanced sample applications provided with version 3.1
of the Microsoft Windows Software Development Kit (SDK), demonstrates
adding a hook function to the File Open dialog box. The five steps required
to modify the CDDEMO application to use a custom dialog box template in its
File Open dialog box are as follows:

<OL><P><LI>Edit the FILEOPEN.DLG template in the Windows SDK advanced sample
    applications directory (by default, C:\WINDEV\SAMPLES\COMMDLG). All
    existing controls must remain in the dialog template; add
    additional controls, if desired. To demonstrate the process, make a
    copy of the FILEOPEN.DLG template and include it in the CDDEMO.RC
    file. Modify the title of the "Cancel" button to "CANCEL." Renaming
    the button minimizes the potential for error while demonstrating
    that the application loaded the custom dialog box template.

<P><LI>In the application, modify the Flags member of the OPENFILENAME
    data structure to include the OFN_ENABLETEMPLATE initialization
    flag.

<P><LI>Specify MAKEINTRESOURCE(FILEOPENORD) as the value of the
    lpTemplateName member of the OPENFILENAME data structure.

<P><LI>Specify ghInst as the value of the hInstance member of the
    OPENFILENAME data structure.

<P><LI>Use the #include directive to include DLGS.H in the CDDEMO.RC file.
<P>
</OL>If an application adds a hook function to a common dialog box, the hook
receives all messages addressed to the dialog box. With the exception of
the WM_INITDIALOG message, the hook function receives messages before its
associated common dialog box does. If the hook function processes a message
completely, it returns TRUE. If the common dialog box must provide default
processing for a message, the hook function returns FALSE.
<P>
In the hook function, the application should process messages for any new
controls added through the custom dialog box template. If the standard
common dialog box template contains a control that is unnecessary in a
particular application, hide the control when the hook function processes
the WM_INITDIALOG message. Use the ShowWindow() API to hide a control; do
not delete any controls from the common dialog box template. To indicate
that the common dialog boxes DLL does not function properly if any controls
are missing, the debug version of Windows displays FatalExit 0x0007.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.10 3.50<BR>
KBCategory: kbui<BR>
KBSubcategory: UsrCmnDlg<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 2, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
