

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Use 32-bit StampResource() Function in Windows NT 3.51 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q133699">
<META NAME="KBModify" CONTENT="1995/08/03">
<META NAME="KBCreate" CONTENT="1995/08/01">
<META NAME="Keywords" CONTENT="kbtool">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  The 32-bit setup toolkit function, StampResource(), is used to write string table resource data into binary (executable) files. This function is useful for customizing installed files with installation-specific resource data, such as a user's name,...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWP,QAY5,QATX,QBV8,QAA1,QAB9,QDI2,QAGI,QDL9,QBWQ,QBWO,QBWN,QDIZ,QA4Q,QAYY V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Use 32-bit StampResource() Function in Windows NT 3.51</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 3, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q133699</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Win32 Software Development Kit (SDK) version 3.51
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The 32-bit setup toolkit function, StampResource(), is used to write string
table resource data into binary (executable) files. This function is useful
for customizing installed files with installation-specific resource data,
such as a user's name, company, and so on. This article discusses issues
specific to using this function in the 32-bit Setup Toolkit for Windows NT
version 3.51.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
StampResource() is prototyped in the 32-bit Setup Toolkit as follows:
<P>
<PRE>   VOID StampResource(LPSTR szSect, LPSTR szKey, LPSTR szDst,
      int wResType, int wResId, LPSTR szData, int cbData);

</PRE>Notice that the szData argument is prototyped as LPSTR. All string resource
data in Windows NT must be stored in UNICODE(tm) form. Therefore, because
StampResource() is writing directly into a binary file, you must convert
the string data for StampResource() into wide-character format. That means
you must make your szData string parameter type LPWSTR. The following
example shows how this can be done:
<P>
<PRE>   INT size;
   TCHAR buf[80], szName[40],szCompany[20],szProductID[20];
   LPWSTR wUnicodeString;

   lstrcpy(szName,"Bob Smith");
   lstrcpy(szCompany,"Microsoft");
   lstrcpy(szProductID,"123-45-6789");
   wsprintf(buf,"%c%s%c%s%c%s",lstrlen(szName),szName,lstrlen(szCompany),
      szCompany,lstrlen(szProductID),szProductID);
   size=MultiByteToWideChar(CP_ACP,MB_PRECOMPOSED,buf,-1,NULL,0);
   wUnicodeString=(LPWSTR)GlobalAlloc(GMEM_FIXED,sizeof(WCHAR)*size);
   MultiByteToWideChar(CP_ACP,MB_PRECOMPOSED,buf,-1,wUnicodeString,size);
   StampResource("Extra Files","Config","d:\\setup32\\stamp\\disks\\disk1",
      6,0x451,(LPSTR)wUnicodeString,sizeof(WCHAR)*size);
   GlobalFree((HGLOBAL)wUnicodeString);

</PRE>In this example, the code performs these steps:

<OL><P><LI>Convert the ASCII string "buf" to wide-character format by using the
   Win32 MultiByteToWideChar() function. This first call to this function
   retrieves the size, in wide characters, needed to store the resultant
   wide-character string.

<P><LI>Allocate memory for the resultant wide-character string and perform the
   actual conversion by calling MultiByteToWideChar() again.

<P><LI>Cast the wide-character string "wUnicodeString" to type LPSTR during the
   call to StampResource() to avoid a type mismatch warning message.
<P>
</OL>NOTE: this information does not apply to Windows 95. The 32-bit
StampResource() function does not currently work in Windows 95
because it makes use of a Win32 API function that is not supported by
Windows 95.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information on the other parameters of StampResource(), or how
StampResource() works in general, please see the following article in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../WIN16SDK/Q92525.htm">Q92525</A></B>
   TITLE     : Using the Setup Toolkit Function StampResource
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.51<BR>
KBCategory: kbtool<BR>
KBSubcategory: tlsmss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 3, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
