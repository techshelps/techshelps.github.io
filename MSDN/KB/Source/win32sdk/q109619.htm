

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How To Share All Data in a DLL </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q109619">
<META NAME="KBModify" CONTENT="1996/12/17">
<META NAME="KBCreate" CONTENT="1994/01/05">
<META NAME="Keywords" CONTENT="kbprg kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  Win32 dynamic-link libraries (DLLs) use instance data by default. This means that each application that uses a DLL gets its own copy of the DLL s data. However, it is possible to share the DLL data among all applications that use the DLL.  If you o...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA3A,QAYY,QA0K,QDNN,QBWP,QBFY,QAJQ,QDL9,QBWO,QBWN,QBBI,QAYV,QBSO,QBW6,QBDM V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How To Share All Data in a DLL</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 17, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q109619</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Win32 Application Programming Interface (API) included with:
<P>
<P><PRE>    - Microsoft Windows NT, versions 3.5, 3.51, 4.00
    - Microsoft Windows 95, version 4.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Win32 dynamic-link libraries (DLLs) use instance data by default. This
means that each application that uses a DLL gets its own copy of the DLL s
data. However, it is possible to share the DLL data among all applications
that use the DLL.
<P>
If you only need to share some of the DLL data, we recommend creating a
new section and sharing it instead. For additional information, please see
the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../URJump.htm">Q89817</A></B>
   TITLE     : How to Specify Shared and Nonshared Data in a DLL

</PRE>If you want to share *all* of the DLL static data, it is important to
do two things:

<UL><LI>First, the DLL must use the DLL version of the C Run-time (for example
   CRTDLL.LIB or MSVCRT.LIB). Please see your product documentation for
   more information about using the C Run-time in a DLL.
<P>
   NOTE: CRTDLL.LIB is no longer part of the SDK, starting with Windows NT
   3.51. It was last released on the April 1995 MSDN 3.5 SDK. Win32 now
   requires users to specify their own version of C run-time LIBs supplied
   by their own compiler vender.

<LI>Second, you will need to specify that both .data and .bss are shared.
   Often, this is done in the  SECTIONS  portion of the .DEF file. For
   example:
<P>
   SECTIONS
<P><PRE>      .bss  READ WRITE SHARED
      .data READ WRITE SHARED
</PRE><P>
   If you are using Visual C++ 32-bit Edition, you have to specify this
   using the -section switch on the linker. For example:
<P>
   link -section:.data,rws -section:.bss,rws
<P>
</UL>Only static data is shared. Memory allocated dynamically with calls to
APIs/functions such as GlobalAlloc() or malloc() are still specific to
the calling process.
<P>
The system tries to load the shared memory block at the same address in
each process. However, if the block cannot be loaded into the same memory
address, the system maps the shared section into a different memory
address. The memory is still shared. Note that the pointers inside the
shared section are invalid under this circumstance and cannot be placed in
shared sections.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The C Run-time uses global variables. If the CRT is statically linked to
the DLL, these variables will be shared among all clients of the DLL and
will most likely cause an exception c0000005.
<P>
The reason you need to specify both .data and .bss as shared is because
they each hold different types of data. The .data section holds initialized
data and the .bss section holds the uninitialized data.
<P>
One reason for sharing all data in a DLL is to have consistent behavior in
the DLL between Win32 (running on Windows NT) and Win32s (running on
Windows 3.1). When running on Win32s, a 32-bit DLL shares its data among
all of the processes that use the DLL.
<P>
Note that it is not necessary to share all data to behave identically
between Win32 and Win32s. The DLL can use thread local storage (TLS) on
Win32s to store variables as instance data. For additional information,
please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../WIN32SDK/Q109620.htm">Q109620</A></B>
   TITLE     : Creating Instance Data in a Win32s DLL
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.10 3.50 4.00 95<BR>
KBCategory: kbprg kbhowto<BR>
KBSubcategory: BseDll<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 17, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
