

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Retrieving the Text Color from the Font Common Dialog Box </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q86331 ">
<META NAME="KBModify" CONTENT="1995/11/02">
<META NAME="KBCreate" CONTENT="1992/07/02">
<META NAME="Keywords" CONTENT="kbui">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  The common dialog box library (COMMDLG.DLL) provides the ChooseFont() routine that provides a common interface (Font dialog box) to specify the attributes for a font in an application. When the user chooses the Apply button in the Font dialog box, ...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QADF,QBBI,QAG9,QAPG,QA01,QDL9,QBWO,QBWN,QAJH,QAYY,QAY2,QALM,QAG2,QANX,QA2Q V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Retrieving the Text Color from the Font Common Dialog Box</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 2, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q86331 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) versions 3.1

<LI>Microsoft Win32 Application Programming Interface (API) included with:
<P>
<P><PRE>    - Microsoft Windows NT versions 3.5 and 3.51
    - Microsoft Windows 95 version 4.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The common dialog box library (COMMDLG.DLL) provides the ChooseFont()
routine that provides a common interface (Font dialog box) to specify the
attributes for a font in an application. When the user chooses the Apply
button in the Font dialog box, the application can format selected text
using the specified font. This button is also useful in an application that
allows the user to select more than one font simultaneously.
<P>
The Font dialog box provides a common method to specify a number of font
attributes, including color. An application can send the CB_GETITEMDATA
message to the Color combo box to retrieve the currently selected color.
<P>
This article discusses the procedure required to obtain all the information
about the currently specified font.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The Font dialog box includes an Apply button if the application includes
the CF_APPLY value in the specification for the Flags member of the
CHOOSEFONT data structure. The dialog box includes the Color combo box if
the CF_EFFECTS value is also specified. The remainder of this article
assumes that the application has specified both of these values.
<P>
To properly process input from the Apply button, an application must
install a hook function. For more information on installing a hook
function from an application, query on the following words in the
Microsoft Knowledge Base:
<P>
<PRE>   steps adding hook function

</PRE>The following code illustrates one method to process input from the Apply
button:
<P>
<PRE>   case WM_COMMAND:
      switch (wParam)
      {
         case psh3:  // The Apply button

         // Retrieve the font information...
            SendMessage(hDlg, WM_CHOOSEFONT_GETLOGFONT, 0,
                       (LONG)(LPLOGFONT)&amp;lfLogFont);

         // Perform any required processing
         // (create the specified font, for example)

         // Retrieve color information...
            iIndex = (int)SendDlgItemMessage(hDlg, cmb4,
                                          CB_GETCURSEL, 0, 0L);
            if (iIndex != CB_ERR)
            {
               dwRGB = SendDlgItemMessage(hDlg, cmb4, CB_GETITEMDATA,
                                       (WORD)iIndex, 0L);
               wRed = GetRValue(dwRGB);
               wGreen = GetGValue(dwRGB);
               wBlue = GetBValue(dwRGB);

               wsprintf(szBuffer, "RGB Value is %u %u %u\r\n", wRed,
                        wGreen, wBlue);

               OutputDebugString(szBuffer);
            }
            break;

         default:
            break;
      }
      break;

</PRE>The color information is not required to create the font; however, this
information is required to accurately display the font according to the
user's specification.
<P>
In an application that does not use the Apply button, the rgbColors member
of the CHOOSEFONT data structure contains the selected color. In this case,
no special processing to retrieve the color is required.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.10 3.50 3.51 4.00 95<BR>
KBCategory: kbui<BR>
KBSubcategory: UsrCmnDlg<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 2, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
