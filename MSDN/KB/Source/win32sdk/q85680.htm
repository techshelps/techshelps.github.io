

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Application Can Allocate Memory with DdeCreateDataHandle </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q85680 ">
<META NAME="KBModify" CONTENT="1995/11/02">
<META NAME="KBCreate" CONTENT="1992/06/17">
<META NAME="Keywords" CONTENT="kbui">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  An application can use the DdeCreateDataHandle function to create a handle to a block of data. The application can use the handle to pass the data to another application in a dynamic data exchange (DDE) conversation using the Dynamic Data Exchange ...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGI,QAY5,QBUG,QBUF,QAHC,QBW6,QAJH,QAYY,QDL9,QBWO,QBWN,QBV8,QBCF,QAPN,QAB9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Application Can Allocate Memory with DdeCreateDataHandle</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 2, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q85680 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) versions 3.1

<LI>Microsoft Win32 Application Programming Interface (API) included with:
<P>
<P><PRE>    - Microsoft Windows NT versions 3.5 and 3.51
    - Microsoft Windows 95 version 4.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
An application can use the DdeCreateDataHandle function to create a
handle to a block of data. The application can use the handle to pass
the data to another application in a dynamic data exchange (DDE)
conversation using the Dynamic Data Exchange Management Libraries
(DDEML). All DDEML functions refer to blocks of memory using data
handles.
<P>
An application can allocate memory and manually create a data handle
associated with the memory (using method 1 below), or automatically by
using the DdeCreateDataHandle function (method 2 below).
<P>
<P><h3>Method 1</h3>
 

<OL><P><LI>Obtain a block of memory using the GlobalAlloc or LocalAlloc
   function or by declaring a variable in your application.

<P><LI>Fill the block of memory with the desired data.

<P><LI>Call the DdeCreateDataHandle function to create a data handle
   associated with the block of memory.
<P>
</OL><h3>Method 2</h3>
 

<OL><P><LI>Call the DdeCreateDataHandle function with the lpvSrcBuf parameter
   set to NULL, the cbInitData parameter set to zero, and the
   offSrcBuf parameter set to the number of bytes of memory required.

<P><LI>To retrieve a handle to the memory block, specify the data handle
   returned by DdeCreateDataHandle as the hData parameter of the
   DdeAccessData function. This operation is similar to calling the
   GlobalLock function on a handle returned from GlobalAlloc.

<P><LI>Use the pointer to fill the memory block with data.

<P><LI>Call DdeUnaccessData to unaccess the object. This operation is
   similar to calling the GlobalUnlock function on a handle returned
   from GlobalAlloc.
<P>
</OL>The following code fragment demonstrates method 2:
<P>
<PRE>   // Retrieve the length of the data to be stored
   cbLen = lstrlen("This is a test") + 1;

   // Create the data handle and allocate the memory
   hData = DdeCreateDataHandle(idInst, NULL, 0, cbLen,
                               hszItem, wFmt, 0);

   // Access the data handle
   lpstrData = (LPSTR)DdeAccessData(hData, NULL);

   // Fill the block of memory
   lstrcpy(lpstrData, "This is a test");

   // Unaccess the data handle
   DdeUnaccessData(hData);

</PRE></OL>When an application obtains a data handle from DdeCreateDataHandle,
the application should next call DdeAccessData with the handle. If a
data handle is first specified as a parameter to a DDEML function
other than DdeAccessData, when the application later calls
DdeAccessData, the application receives only read access to the
associated memory block.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.10 3.50 3.51 4.00 95<BR>
KBCategory: kbui<BR>
KBSubcategory: UsrDde<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 2, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
