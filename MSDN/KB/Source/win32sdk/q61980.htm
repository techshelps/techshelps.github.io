

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MAKEINTATOM() Does Not Return a Valid LPSTR </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q61980 ">
<META NAME="KBModify" CONTENT="1995/11/02">
<META NAME="KBCreate" CONTENT="1990/05/17">
<META NAME="Keywords" CONTENT="kbui">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  The LPSTR returned from MAKEINTATOM() cannot be treated as a general-purpose string pointer. Instead, either use it with the Atom family or convert it into a valid string before passing it off as one.  MORE INFORMATION  The MAKEINTATOM() macro is d...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAUD,QDL9,QBWO,QBWN,QAH4,QA4Q,QATX,QAKD,QALW,QBVV,QBFM,QAY4,QAR4,QAAP,QA01 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>MAKEINTATOM() Does Not Return a Valid LPSTR</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 2, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q61980 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) versions 3.0 and 3.1

<LI>Microsoft Win32 Application Programming Interface (API) included with:
<P>
<P><PRE>    - Microsoft Windows NT versions 3.5 and 3.51
    - Microsoft Windows 95 version 4.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The LPSTR returned from MAKEINTATOM() cannot be treated as a
general-purpose string pointer. Instead, either use it with the Atom
family or convert it into a valid string before passing it off as one.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The MAKEINTATOM() macro is documented on Page 370 of the "Microsoft
Windows Software Development Kit Programmer's Reference" versions 2.x
as returning a value of type LPSTR. This is correct, but misleading.
The LPSTR value returned is a "fabricated" LPSTR and cannot be
considered a general-purpose string pointer. Consider the definition
of the MAKEINTATOM macro:
<P>
<PRE>   #define MAKEINTATOM(i)  (LPSTR) ((DWORD)((WORD)(i)))

</PRE>This tells the compiler to "take the integer value 'i', think of it as
a WORD, zero-extend this into a DWORD, then think of this as a LPSTR."
Thus, MAKEINTATOM(1Ah) returns 001Ah. This obviously is not the same
as "1A", which would be ASCII(1)+ASCII(A)+0.
<P>
The reason this psuedo-LPSTR works with AddAtom(), for example, is
that AddAtom() looks to see if the HIWORD of the LPSTR parameter is
0 (zero). If so, AddAtom() knows that the LOWORD contains an actual
integer value and it simply grabs that.
<P>
The following code samples show how problems can occur with these
psuedo-LPSTRs returned from MAKEINTATOM.
<P>
<P><h3>Incorrect</h3>
 
<P>
ATOM AddIntAtom(int iAtom)
{
<PRE>    LPSTR   szAtom;

    MessageBox(hWnd,
               (szAtom=MAKEINTATOM(iAtom)),
               "Adding Atom",
               MB_OK);
    return (AddAtom(szAtom));
</PRE>}
<P>
The above code fragment will create and return a valid atom, but the
message box will display an erroneous value.
<P>
<P><h3>Correct</h3>
 
<P>
ATOM AddIntAtom(int iAtom)
{
<PRE>    LPSTR   szAtom;
    char    szBuf[10];

    szAtom=MAKEINTATOM(iAtom);
    sprintf(szBuf, "%d", LOWORD(szAtom));   /* Here's the trick */
    MessageBox(hWnd,
               szBuf,
               "Adding Atom",
               MB_OK);
    return (AddAtom(szAtom));
</PRE>}
<P>
In the above example, we converted the integer value contained in the
LOWORD of szAtom into a character string, then used this new character
string in the MessageBox() call.
<P>
Although these code fragments illustrate the limitations of a
MAKEINTATOM LPSTR, they are not very realistic because you really
should use GetAtomName() to get the character string of an atom. If
you have not yet created an atom out of an integer value, you could
just format the integer into character string directly, as follows:
<P>
<PRE>   sprintf (szBuf, "%d", iAtom);
   MessageBox (hWnd, szBuf,....);
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10 3.50 3.51 4.00 95<BR>
KBCategory: kbui<BR>
KBSubcategory: UsrDde<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 2, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
