

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: GetCharacterPlacement Returns Incorrect Kerning Values </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q177796">
<META NAME="KBModify" CONTENT="1997/12/08">
<META NAME="KBCreate" CONTENT="1997/12/08">
<META NAME="Keywords" CONTENT="GdiFnt">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  The GetCharacterPlacement function retrieves information about a character string, such as character widths and caret positioning. You can calculate the widths with kerning pairs if you use the GCP_USEKERNING flag when calling GetCharacterPlacement...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGI,QBDL,QATX,QAKD,QAHH,QA4F,QBCF,QAH4,QBWQ,QAY5,QAYV,QAUD,QAIF,QAJQ,QAE5 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: GetCharacterPlacement Returns Incorrect Kerning Values</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 8, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q177796</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Win32 Application Programming Interface (API)
<LI>Microsoft Win32 Software Development Kit (SDK) on the following
   platform:
   - Windows 95
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The GetCharacterPlacement function retrieves information about a character
string, such as character widths and caret positioning. You can calculate
the widths with kerning pairs if you use the GCP_USEKERNING flag when
calling GetCharacterPlacement. On Windows 95, when calling
GetCharacterPlacement with GCP_USEKERNING to kern a "repetitive" string
(for example, "AVAVAVAVAVA"), the string correctly kerns the first two gaps
(that is, "AVA") but nothing else. This happens with a range of repetitive
strings.
<P>
<P><h2>CAUSE</h2>
 
<P>
On Windows 95, the GetCharacterPlacement function is not properly
calculating the "lpDx" array in the GCP_RESULTS structure when filling in
the distances between adjacent character cells for some strings.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To reliably calculate the correct character placement (with kerning) for
all strings, call GetKerningPairs and calculate the character spacing
yourself.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. We are researching this bug and will post
new information here in the Microsoft Knowledge Base as it becomes
available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Most TrueType fonts have a kerning table, but you do not have to use it. To
find out whether the current font supports kerning pairs, call
GetFontLanguageInfo. When you call GetCharacterPlacement with
GCP_USEKERNING to kern the string "AVAVAVAVAVAV", the function correctly
kerns the first two character widths only. If you examine the lpDx array
filled by the GetCharacterPlacement API, it confirms this. The first two
values are different from and slightly smaller than the rest of the values
(which are all identical). Only the first two gaps between characters are
kerned. The values should all be the same.
<P>
It is recommended that you calculate character placement with kerning pairs
manually by calling GetKerningPairs.
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 
<P>
The following code demonstrates the problem. After executing the code,
observe the dx[] array. The first two values are different from the rest:
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   case WM_PAINT:
      {
      HDC hdc;
      PAINTSTRUCT ps;
      GCP_RESULTS gcp;
      static char szOut[40];
      int dx[13];
      int pos;
      int order[13];
      UINT glyphs;
      HFONT hPrevFont;

      ZeroMemory(&amp;gcp,sizeof(GCP_RESULTS));
      gcp.lStructSize = sizeof(GCP_RESULTS);
      gcp.lpOutString = szOut;
      gcp.lpDx = &amp;dx[0];
      gcp.lpCaretPos = &amp;pos;
      gcp.lpOrder = &amp;order[0];
      gcp.lpGlyphs = (unsigned short *)&amp;glyphs;
      gcp.nGlyphs = 12;

      hdc = BeginPaint(hWnd, &amp;ps);
      hPrevFont = SelectObject(hdc, hFont);
      GetCharacterPlacement(hdc, "AVAVAVAVAVAV", 12, 0,
                            &amp;gcp, GCP_USEKERNING);

      DeleteObject(SelectObject(hdc, hPrevFont));
      EndPaint(hWnd, &amp;ps);
      break;
      }

</PRE> 
<PRE>Keywords          : GdiFnt
Platform          : Win95
Issue type        : kbbug</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 8, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
