

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Transparent Blts in Windows NT </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q89375 ">
<META NAME="KBModify" CONTENT="1995/11/02">
<META NAME="KBCreate" CONTENT="1992/09/21">
<META NAME="Keywords" CONTENT="kbgraphic">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  In order to perform a transparent blt in Microsoft Windows versions 3.0 and 3.1, the BitBlt() function must be called two or more times. This process involves nine steps. (For more information on this process, see article Q79212 in the Microsoft Kn...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWP,QAK6,QAK4,QAGI,QA5Z,QAH4,QAY5,QAI4,QDL9,QBWO,QBWN,QANX,QADR,QBV8,QBE7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Transparent Blts in Windows NT</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 2, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q89375 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Win32 Application Programming Interface (API) included with:
<P>
<P><PRE>    - Microsoft Windows NT versions 3.1, 3.5, and 3.51
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In order to perform a transparent blt in Microsoft Windows versions 3.0 and
3.1, the BitBlt() function must be called two or more times. This process
involves nine steps. (For more information on this process, see article
<B><A HREF="../WIN16SDK/Q79212.htm">Q79212</A></B> in the Microsoft Knowledge Base.)
<P>
Windows NT introduces a new method of achieving transparent blts. This
method involves the use of the MaskBlt() function. The MaskBlt() function
lets you use any two arbitrary ROP3 codes (say, SRCCOPY and BLACKNESS) and
apply them on a pel-by-pel basis using a mask.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
For this example, the source and target bitmaps contain 4 BPP. The call to
the MaskBlt() function is as follows:
<P>
<PRE>   MaskBlt(hdcTrg,  // handle of target DC
                0,  // x coord, upper-left corner of target rectangle
                0,  // y coord, upper-left corner of target rectangle
               15,  // width of source and target rectangles
               15,  // height of source and target rectangles
           hdcSrc,  // handle of source DC
                0,  // x coord, upper-left corner of source rectangle
                0,  // y coord, upper-left corner of source rectangle
          hbmMask,  // handle of monochrome bit-mask
                0,  // x coord, upper-left corner of mask rectangle
                0,  // y coord, upper-left corner of mask rectangle
       0xAACC0020   // raster-operation (ROP) code
                );

</PRE>The legend is as follows
<P>
<PRE>   '.' = 0,
   '@' = 1,
   '+' = 2,
   '*' = 3,
   '#' = 15

Source Bitmap      Mask Bitmap        Target Bitmap      Result
</PRE> 
<P>
<PRE>***+++***+++***    .......@.......    ###############    #######*#######
***+++***+++***    ......@@@......    ###############    ######***######
***+++***+++***    .....@@@@@.....    ##...........##    ##...+***+...##
+++***+++***+++    ....@@@@@@@....    ##...........##    ##..**+++**..##
+++***+++***+++    ...@@@@@@@@@...    ##...........##    ##.***+++***.##
+++***+++***+++    ..@@@@@@@@@@@..    ##...........##    ##+***+++***+##
***+++***+++***    .@@@@@@@@@@@@@.    ##...........##    #**+++***+++**#
***+++***+++***    @@@@@@@@@@@@@@@    ##...........##    ***+++***+++***
***+++***+++***    .@@@@@@@@@@@@@.    ##...........##    #**+++***+++**#
+++***+++***+++    ..@@@@@@@@@@@..    ##...........##    ##+***+++***+##
+++***+++***+++    ...@@@@@@@@@...    ##...........##    ##.***+++***.##
+++***+++***+++    ....@@@@@@@....    ##...........##    ##..**+++**..##
***+++***+++***    .....@@@@@.....    ##...........##    ##...+***+...##
***+++***+++***    ......@@@......    ###############    ######***######
***+++***+++***    .......@.......    ###############    #######*#######

</PRE>Note that the ROP "AA" is applied where 0 bits are in the mask and the ROP
"CC" is applied where 1 bit is in the mask. This a transparency.
<P>
When creating a ROP4, you can use the following macro:
<P>
<PRE>   #define ROP4(fore,back) ((((back) &lt;&lt; 8) &amp; 0xFF000000) | (fore))

</PRE>This macro can be used to call the MaskBlt() function as follows:
<P>
<PRE>   MaskBlt(hdcDest, xTrgt, yTrgt,
                          cx, cy,
              hdcSrc, xSrc, ySrc,
           hbmMask, xMask, yMask,
        ROP4(PATCOPY, NOTSRCCOPY)
                               );

</PRE>This call would draw the selected brush where 1 bit appears in the mask and
bitwise negation of the source bitmap where 0 bits appear in the mask.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.10 3.50 pixel<BR>
KBCategory: kbgraphic<BR>
KBSubcategory: GdiBmp<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 2, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
