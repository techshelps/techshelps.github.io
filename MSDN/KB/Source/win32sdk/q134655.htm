

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>AppInit_DLLs Registry Value and Windows 95 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q134655">
<META NAME="KBModify" CONTENT="1997/01/15">
<META NAME="KBCreate" CONTENT="1995/08/08">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  Windows 95 does not support the loading of a DLL into a process's address space through the use of the AppInit_DLLs registry value. In Windows NT, for every process executed, Windows NT loads the DLLs listed in the AppInit_DLLs registry value into ...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAY5,QDL9,QBWO,QBWN,QBV8,QAB9,QBWP,QAH4,QAB5,QBWQ,QAC2,QAA1,QAKD,QBSO,QDI2 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>AppInit_DLLs Registry Value and Windows 95</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 15, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q134655</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Win32 Application Programming Interface (API) included with:
<P><PRE>    - Microsoft Windows 95 version 4.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Windows 95 does not support the loading of a DLL into a process's address
space through the use of the AppInit_DLLs registry value. In Windows NT,
for every process executed, Windows NT loads the DLLs listed in the
AppInit_DLLs registry value into the process' address space. For similar
functionality in Windows 95, you can implement a system-wide hook. This
article shows by example how to do it.
<P>
MORE INFORMATION
 
<P>
To implement a system-wide hook, you must ensure that the hooked function
(callback function) exists in a DLL. Then, when the this function is
called, the operating system maps the hooked DLL into the target
application's address space. The actual hooked function then operates as
part of the target application's process.
<P>
There are essentially two steps involved in creating a system-wide hook:

<OL><P><LI>Create a DLL with an exported function that is used as the hooking
   function. In the sample function that follows, the callback function is
   modeled after a callback function required to implement a WH_KEYBOARD
   system-wide hook:
<P>
<P><PRE>      // Trap keyboard messages
      __declspec(dllexport) LRESULT CALLBACK HookFunction(
<PRE></PRE>                       int code,
                       WPARAM wParam,
                       LPARAM lParam)
      {
         char szVCode[50];

         //display the virtual key code trapped
         sprintf(szVCode, "Virtual Key code: %lx", wParam);
         MessageBox(NULL, szVCode,"Key stroke", MB_OK);
                :
                :
      }

   The associated .def file for this DLL might resemble this:

      LIBRARY      HOOK

      EXPORTS
         HookFunction

</PRE><P><LI>Install the system-wide hook. To install the hook, the DLL must be
   loaded, the hook function's address retrieved, and SetWindowsHookEx
   called with the function's address. Here's an example:
<P>
<P><PRE>      // add system-wide hook
      hHookDll = LoadLibrary("hook");
      hHookProc = (HOOKPROC) GetProcAddress(hHookDll, "HookFunction");
</PRE><P>
<P><PRE>      // Install keyboard hook to trap all keyboard messages
      hSystemHook =  SetWindowsHookEx(WH_KEYBOARD,hHookProc,hHookDll,0);
</PRE><P>
   Once the application has finished with the system-wide hook, be sure to
   undo the hooking process as follows:
<P>
<P><PRE>      // Remove the hook and unload the DLL used for the hooking process
      UnhookWindowsHookEx(hSystemHook);
      FreeLibrary(hHookDll);
<P></BLOCKQUOTE>
</OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbprg kbcode<BR>
KBSubcategory: BseRegistry<BR>
Additional reference words: 4.00 95<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 15, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
