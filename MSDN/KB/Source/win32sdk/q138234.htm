

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Win32s 1.30a Bug List at the Time of Its Release </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q138234">
<META NAME="KBModify" CONTENT="1995/10/17">
<META NAME="KBCreate" CONTENT="1995/10/15">
<META NAME="Keywords" CONTENT="kbprg kbbuglist">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  This article lists the known bugs in Win32s version 1.30a at the time of its release.  MORE INFORMATION  -  Incorrect context at EXIT_PROCESS_DEBUG_EVENT.  -  DEBUG_EVENT.RIP_INFO not supported.  -  Progman gets restored when debugger app exits.  -...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAUD,QBWP,QBVV,QAAP,QAH4,QAB4,QALW,QAGB,QBWS,QAR4,QAKP,QDL9,QBWQ,QBWO,QBWN V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Win32s 1.30a Bug List at the Time of Its Release</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 17, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q138234</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Win32s version 1.30a
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article lists the known bugs in Win32s version 1.30a at the time of
its release.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
-  Incorrect context at EXIT_PROCESS_DEBUG_EVENT.
<P>
-  DEBUG_EVENT.RIP_INFO not supported.
<P>
-  Progman gets restored when debugger app exits.
<P>
-  Problem with journaling hooks on Win32s when using MSTest.
<P>
-  OLE: need try/except at 32-bit entrypoints.
<P>
-  EXCEPTION_RECORD: The # of params and Info array always zero.
<P>
-  Frame: Access Violation in PackFindData@8 (FindFirstFile looking
<PRE>   for arrow.pcx).

</PRE>-  Using StartDoc, the return value is correct but the printer does
<PRE>   not output the document.

</PRE>-  CVW32s: int 3 disables receipt of bp for DbgBreakpoint.
<P>
-  CVW32s: Machine deadlock w/debugger, div0.exe &amp; FatalAppExit.
<P>
-  CVW32s: Ubrowse.exe runs on NT, but not Win32s example.
<P>
-  cvw/win32s: restart of mfc app blows.
<P>
-  cvw/w32s: exception; procterm; l; g; async stop doesn't stop.
<P>
-  EM_GETWORDBREAKPROC return code incorrect. If an application sends
<PRE>   the EM_GETWORDBREAKPROC message to an edit control, it will receive
   the address of a 32-&gt;16 callback thunk with no code on the other
   end of the stub.

</PRE>-  Dialog procs should return BOOL not DWORD.
<P>
-  The DDE message thunks force the fAckReq bit to 1 if WM_DDE_DATA
<PRE>   is sent with it set to 0. This forces the client to post the
   WM_DDE_ACK message so that the thunk layer can know when to free
   up data allocated for thunking the WM_DDE_DATA message. The server
   isn't expecting the ACK in this case. The thunk layer will
   recognize the forced ACK, however the code to consume it has not
   been implemented yet. Problems so far unseen but still possible.

</PRE>-  Int 3 cannot be trapped via SEH on Win32s.
<P>
-  Win32's CreateFile() opens files in cooked mode as opposed to raw mode.
<P>
-  Some time functions, such as ctime(), return values that are off by
<PRE>   nine hours. This happens when the TZ environment variable is not
   defined. When TZ is defined and set to 0, these time functions return
   the correct value. The time offset is determined by the TZ environment
   variable, and when it is not defined a default of -9 is used.

</PRE>-  MSTest script Mantapp.mst detects stack overflow when test runs out
<PRE>   of memory the second time.

</PRE>-  _lopen - Wrong error code when file does not exist.  _lopen failes
<PRE>   with error code 87 instead of error code 2 (ERROR_FILE_NOT_FOUND).
   Win32s is unable to determine from the return value provided by
   Windows if the call failed due to the file not being there.

</PRE>-  Cannot do ReadProcessMemory() on memory that has hardware bp set on it.
<P>
-  MFC Speakn sample won't run on Win32s.
<P>
-  UT Diagram in Programmers Reference is incorrect.
<P>
-  CRT: getdcwd/getcwd does not work on Win32s.
<P>
-  Exception in DLL termination routine causes the system to quit.
<P>
-  PlayMetaFileRecord/EnumMetaFile contains incorrect lpHTable.
<P>
-  Windbg assertion on HOST machine.
<P>
-  The .pif files are not supported.
<P>
-  PlaySound() with SND_RESOURCE.
<P>
-  File mapping rounded to a whole number of pages, a multiple of 256
<PRE>   instead of 4096. The workaround is to use SetFilePointer() and
   SetEndOfFile() after closing the mapping handles, but before closing
   the file.

</PRE>-  chdrive() and SetCurrentDirectory() fail on PCNFS drive.
<P>
-  Microsoft Excel bapco MSTest script does not run to completion.
<P>
-  Dynamic dialog boxes under Win32s. An ANSI Win32 application loads a
<PRE>   dialog box resource directly from its executable via LoadResource().
   Traverses the dialog box template and renders its controls into another
   dialog box. The application then displays the dialog box which
   re-positions some of its controls during WM_INITDIALOG. In Windows NT,
   the controls rearrange as intended whereas in Win32s, they appear
   misaligned by 50 pixels or so.

</PRE>-  GetExitCodeProcess() does not return exit codes for 16-bit
<PRE>   Windows-based applications.

</PRE>-  Limitation in how NCB memory needs to be allocated on Win32s. The Win31
<PRE>   netbios VxD expects the memory to be allocated from the Win31 memory
   space to lock that specific memory page. If the memory is allocated from
   somewhere else such as from the Win32s sparse area, it will fail. In
   this specific case, allocate a buffer using GlobalAlloc(), memcpy in it
   the data retrieved, and call Netbios.

</PRE>-  biSizeImage field of BITMAPINFOHEADER is zero. GetDIBits() is
<PRE>   not placing the correct value for this field into the buffer.

</PRE>-  Only the first CBT hook gets messages.
<P>
-  Registry functions return incorrect result code. Registry functions
<PRE>   such as RegCreateKey() return incorrect results upon failure. The
   Windows 3.1 return code is returned, not the Windows NT return code.
   The functions that return correct results are: RegQueryValueA() and
   RegQueryValueExA()

</PRE>-  General protection (GP) fault in WinExec() 16-bit application context.
<P>
-  Bad handles from CreateProcess16() if the child doesn't yield.
<P>
-  GlobalReAlloc(x,y,GMEM_MOVEABLE) returns wrong handle type.
<P>
-  GMEM_SHARE memory must be freed explicitly.
<P>
-  RestartThread() writes to debuggee stack.
<P>
-  The memory for CallBack frames is allocated once. The allocation
<PRE>   size is 64K. In most cases this is too large, and in some
   extreme cases this 64K may be exhausted.

</PRE>-  CreateDirectory() handles errors differently between Windows NT and
<PRE>   Win32s. Under Windows NT, all failures are handled correctly. For
   example, directory already exists, no space left on device, and so on.
   Under Win32s, all errors are handled identically (error #5, "Access is
   denied").

</PRE>-  SetCurrentDirctory(): different error codes on Windows NT and Win32s.
<PRE>   SetCurrentDirectory() works differently under Windows NT 3.5 and
   Win32s. For example, if there is no floppy disk in drive B, and
   SetCurrentDirectory() is called with "b:\", under Windows NT error
   #21 is returned, "The device is not ready," while under Win32s, error
   #161, "The specified path is invalid" is returned.

</PRE>-  signal(SIGINT, SIGABRT, SIGTERM): need instance data.
<P>
-  FindText() leaks memory and may cause a general protection (GP) fault.
<P>
-  spawnl doesn't pass parameters to an MS-DOS-based application.
<P>
-  Win32s does not support forwarded exports.
<P>
-  module management APIs missing ANSI to OEM translation.
<P>
-  PlaySound() w/ SND_NOWAIT.
<P>
-  FormatMessage() doesn't set last error.
<P>
-  Createfile(), when used on a write-protected floppy disk, fails.
<PRE>   GetLastError() returns 2 instead of 19.

</PRE>-  Win32app cannot be browsed if the same application is running.
<P>
-  Setup doesn't create backup files for some of the OLE files.
<P>
-  winhlp32:Compare macro does not display windows side by side.
<P>
-  MEASUREITEMSTRUCT and DRAWITEMSTRUCT are missing fields in menus.
<P>
-  HeapValidate() fails on a new heap. HeapValidate() is not supported
<PRE>   in the retail version of Win32s. GetLastError() returns
   ERROR_CALL_NOT_IMPLEMENTED. HeapValidate() is supported only in the
   debug version of Win32s and in both the retail and debug versions of
   Windows NT.

   Other new heap APIs that are not supported in Win32s are:

   HeapCompact()
   HeapCreateTags()
   HeapExtend()
   HeapLock()
   HeapQueryTag()
   HeapSummary()
   HeapUnlock()
   HeapUsage()
   HeapWalk()

   All these APIs, including HeapValidate, are documented as not
   supported on Win32s and Windows 95.

</PRE>-  winhlp32:delete of annotation in popup causes unh exception.
<P>
-  winhlp32:PopupContext macro produces incorrect error message.
<P>
-  winhlp32: PC macro with non-help file.
<P>
-  winhlp32:PopupID with non-existing context string.
<P>
-  A file opened as GENERIC_READ only can still be written to.
<P>
-  winhlp32 doesn't play .avi files.
<P>
-  winhlp32:new highlight feature is not consistent.
<P>
-  winhlp32:System error on write protected medium.
<P>
-  winhlp32:bitmap in Shed.hlp does not print correctly.
<P>
-  winhlp32:winword produces error when attempting to print from a
<PRE>   secondary window.

</PRE>-  winhlp32:Clicks go through File Manager.
<P>
-  MPLAY32.EXE of Windows NT 3.1 does not run on Win32s.
<P>
-  winhlp32:Window title does not change back.
<P>
-  winhlp32:kicked out of help after opening non-helpfile.
<P>
-  SearchPath() doesn't find file if Path is empty. NULL for lpszPath
<PRE>   is fine, but an lpszPath = "" will not work the same as on Windows NT.

</PRE>-  Wrong exception reported for overflow exception.
<P>
-  VerLanguageNameA() not exported by version.dll.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.30a<BR>
KBCategory: kbprg kbbuglist<BR>
KBSubcategory: W32s<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 17, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
