

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SAMPLE: CheckLCL.exe Finds Corresponding Local Path for UNC Name </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q148391">
<META NAME="KBModify" CONTENT="1998/03/13">
<META NAME="KBCreate" CONTENT="1996/03/12">
<META NAME="Keywords" CONTENT="NtwkLmapi kbfile kbsample">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  UNC names specify network-wide distinct locations that are useful to provide configuration information for applications. However, when the UNC name refers to the local computer, it introduces some overhead because the requests are passed down the R...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAY5,QAH6,QAUJ,QAH7,QAD7,QAUD,QBV8,QAB9,QDL9,QBWO,QBWN,QAGI,QBWP,QAO3,QAO2 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>SAMPLE: CheckLCL.exe Finds Corresponding Local Path for UNC Name</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 13, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q148391</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Win32 Software Development Kit (SDK), version 4.0
<LI>Microsoft Windows NT Workstation, versions 3.50, 3.51
<LI>Microsoft Windows NT Server, versions 3.5, 3.51
<LI>Microsoft Windows 95
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
UNC names specify network-wide distinct locations that are useful to
provide configuration information for applications. However, when the UNC
name refers to the local computer, it introduces some overhead because the
requests are passed down the Redirector, looped back by the transport, and
sent to the server service instead of going directly to the local disk.
<P>
The function provided in the library file in the CheckLCL.exe sample checks
the name passed it against the local computer name and replaces the
\\&lt;computer&gt;\&lt;share&gt; part with the local path to the share.
<P>
The following file is available for download from the Microsoft
Software Library:
<P>
<PRE> ~ <A HREF="http://support.microsoft.com/download/support/mslfiles/CheckLCL.exe">CheckLCL.exe</A> <I>(size: 51061 bytes)</I> 

</PRE>For more information about downloading files from the Microsoft Software
Library, please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../zMiscellaneous/Q119591.htm">Q119591</A></B>
   TITLE     : How to Obtain Microsoft Support Files from Online Services

</PRE><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Limitations or Caveats</h3>
 

<UL><LI>The function only resolves names in the Microsoft Windows Network. It
   doesn't work with FPNW.

<LI>Because the changed names do not hit server service anymore, share
   security does not apply. But this is alright because the function, which
   is called to resolve the name, can only be called by Admin type accounts
   on Windows NT. On Windows 95, there is no local security anyway.
<P>
</UL>The CheckLCL library has three callable functions: GlpGetLocalPathName,
GlpFreeBuffer, and GlpGetBuffer.
<P>
<P><h3>The GlpGetLocalPathName Function</h3>
 
<P>
<PRE>   GlpGetLocalPathName( IN LPCTSTR pszInputName,
               IN OUT LPTSTR *ppszOutputName,
               IN OUT LPDWORD pdwOutputNameLength,
               OPTIONAL OUT LPDWORD pdwLanManError,
               OPTIONAL IN NETSHAREGETINFO_FPTR __stdcall
                               GlpNetShareGetInfoPtr
          );

</PRE>To successfully execute the GlpGetLocalPathName function, you need to have
administrative or server operator privileges on Windows NT. Also, the
network should be running. The GlpGetLocalPathName function supports file,
pipe, and mailslot share names. It also supports the use of path names
longer than 260 characters (syntax \\?\ in CreateFile). For more
information, please see the header file.
<P>
PszInputName
<P>
The GlpGetLocalPathName function scans the name passed in pszInputName and
tries to convert it to a local file path, if it's a UNC name referencing
the local computer name.
<P>
PpszOutputName
<P>
ppszOutputName contains the local path name if the return code is
ERROR_GLP_SUCCESS. In any other case, the contents should be ignored. The
GlpGetLocalPathName function will allocate memory if you pass a pointer to
NULL. You should free the pointer using GlpFreeBuffer.
<P>
PdwOutputNameLength
<P>
When you pass a pointer to memory in ppszOutputName, this parameter
specifies the number of characters that can be stored there including the
terminating NULL character.
<P>
When the GlpGetLocalPathName function returns ERROR_GLP_SUCCESS, this
pdwOutputNameLength variable contains the number of characters copied into
the buffer.
<P>
If the function returns ERROR_GLP_INSUFFICIENT_BUFFER or
ERROR_GLP_INSUFFICIENT_MEMORY, the pdwOutputNameLength variable contains
the number of characters needed to store the converted name.
<P>
PdwLanManError
<P>
This optional parameter points to a DWORD that receives the error code
returned by NetShareEnum if the return code is ERROR_GLP_LANMAN_ERROR. The
value is not changed when NetShareEnum returns successfully. If you're not
interested in this value, pass NULL to the function.
<P>
GlpNetShareGetInfoPtr
<P>
If not NULL, this function pointer will be called instead of NetShareEnum.
This gives the caller the possibility to provide the local name or to call
some other API. The parameters passed are for a call to NetShareEnum with
information level 2. Remember that this function is UNICODE only.
<P>
<P><h3>The GlpFreeBuffer Function</h3>
 
<P>
GlpFreeBuffer (PVOID *ppszBuffer);
<P>
This function frees a pointer returned from GlpGetLocalPathName in the
parameter ppszOutputName. The function sets the pointer to NULL after the
memory is freed.
<P>
<P><h3>The GlpGetBuffer Function</h3>
 
<P>
GlpGetBuffer (PVOID *ppszBuffer, DWORD dwSizeNeeded);
<P>
Use this function if you pass a pointer to your custom NetShareGetInfo
function to GlpGetLocalPathNameW to allocate memory for the bufptr output
parameter of NetShareGetInfo. GlpGetLocalPathNameW uses its GlpFreeBuffer
function to free the memory.
<P>
This function returns ERROR_GLP_SUCCESS on success and
ERROR_GLP_INSUFFICIENT_MEMORY if there is not enough memory.
 
<PRE>Keywords          : NtwkLmapi kbfile kbsample
Platform          : NT WINDOWS</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 13, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
