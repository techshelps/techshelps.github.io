

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Program Keyboard Interface for Owner-Draw Menus </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q121623">
<META NAME="KBModify" CONTENT="1995/09/29">
<META NAME="KBCreate" CONTENT="1994/10/12">
<META NAME="Keywords" CONTENT="kbui">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  You can implement the keyboard interface for owner-draw menus, which allow a user to access a menu by typing a menu mnemonic, by processing the WM_MENUCHAR message.  MORE INFORMATION  Menus other than owner-draw menus can specify a menu mnemonic by...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAF0,QDL9,QBWO,QBWN,QAUD,QBWR,QBWQ,QBBI,QAKD,QAVI,QA2Q,QAGU,QAG2,QBBS,QA28 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Program Keyboard Interface for Owner-Draw Menus</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 29, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q121623</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) versions 3.1

<LI>Microsoft Win32 Application Programming Interface (API) included with:
<P>
<P><PRE>    - Microsoft Windows NT versions 3.5 and 3.51
    - Microsoft Windows 95 version 4.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
You can implement the keyboard interface for owner-draw menus, which allow
a user to access a menu by typing a menu mnemonic, by processing the
WM_MENUCHAR message.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Menus other than owner-draw menus can specify a menu mnemonic by inserting
an underscore next to a character in the menu string so that the user can
select the menu by typing ALT+&lt;menu mnemonic character&gt;. But in owner-draw
menus, you cannot specify a menu mnemonic in this manner. Instead, you must
process the WM_MENUCHAR message to provide owner-draw menus with menu
mnemnoics.
<P>
WM_MENUCHAR is sent when the user types a menu mnemonic that does not
match any of the predefined mnemonics of the current menu. wParam
specifies the ASCII character that corresponds to the key the user
pressed together with the ALT key. The low-order word of lParam
specifies the type of the selected menu and contains:

<UL><LI>MF_POPUP if the cuurent menu is a popup menu.
<LI>MF_SYSMENU if the menu is the system menu.
<P>
</UL>The high-order word of lParam contains the menu handle of the current menu.
The window with the owner-draw menus can process WM_MENUCHAR as follows:
<P>
<PRE>   case WM_MENUCHAR:
      nIndex = Determine index of menu item to be selected from
               character that was typed and handle of the current
               menu.
      return MAKELRESULT(nIndex, 2);

</PRE>The 2 in the high-order word of the return value informs Windows that
the low-order word of the return value contains the zero-based index
of the menu item to be selected by Windows.
<P>
Windows 95 defines four new constants that correspond to the possible
return values from the WM_MENUCHAR message:
<P>
<PRE>Constant    Value   Meaning
</PRE> 
<P>
<PRE>MNC_IGNORE  0       Informs Windows that it should discard the character
                    the user pressed and create a short beep on the system
                    speaker.
MNC_CLOSE   1       Informs Windows that it should close the active menu.
MNC_EXECUTE 2       Informs Windows that it should choose the item
                    specified in the low-order word of the return value.
                    The owner window receives a WM_COMMAND message.
MNC_SELECT  3       Informs Windows that it should select the item
                    specified in the low-order word of the return value.
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.10 3.50 4.00<BR>
KBCategory: kbui<BR>
KBSubcategory: UsrMen<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 29, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
