

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Understanding Volume-Level Security on Windows NT </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q150101">
<META NAME="KBModify" CONTENT="1996/04/29">
<META NAME="KBCreate" CONTENT="1996/04/22">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  This article describes how volume-level security behaves, and how it differs from the file- and directory-level security provided by the New Technology File System (NTFS).  Microsoft Windows NT provides auditing and access control facilities for ph...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAI5,QBW7,QA7T,QBWG,QAAD,QAMV,QA7O,QAOE,QAMN,QAB5,QAC9,QAK7,QBWP,QA1S,QBVV V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Understanding Volume-Level Security on Windows NT</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 29, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q150101</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Microsoft Win32 Application Programming Interface (API) included with
<PRE>  Microsoft Windows NT, versions 3.5, 3.51, 4.0
</PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article describes how volume-level security behaves, and how it
differs from the file- and directory-level security provided by the New
Technology File System (NTFS).
<P>
Microsoft Windows NT provides auditing and access control facilities for
physical and logical volumes. Conceptually, volume-level security is
designed to control volume-level access, such as formatting operations,
rather than file- and directory-level operations. Volume-level security
also minimally protects logical volumes that are not formatted with NTFS,
such as floppy disks and compact discs.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Windows NT was designed to have security descriptors applied to volumes
control and audit volume-level access such as formatting a disk or reading
raw disk sectors. The file system with which the logical volume is
formatted is responsible for control and auditing of access to files and
directories. Currently, the only file system to support file- and directory-
based security is NTFS.
<P>
There are two types of volume-level operations that need to be understood:
physical drive access and logical volume access. Physical drive access
allows Win32-based applications to manage hard disk partition tables and
logical volumes. Logical volume access allows Win32-based applications to
manage the contents of a partition below the file system level. Logical
volume access is most often used to format a partition with a particular
file system, such as FAT or NTFS. The following sections explain how volume-
level security applies to each type of volume-level access.
<P>
<P><h3>Physical Drive Security</h3>
 
<P>
Win32-based applications can open handles to physical hard disk drives for
low-level access by calling CreateFile() with \\.\PHYSICALDRIVEx, where x
is the zero-based physical drive number. Once the applications have a
handle, they can use DeviceIoControl() to call IOCTL functions, or
ReadFile() and WriteFile() to perform sector reads and writes.
<P>
Access to physical drives is a built-in right of the Administrators group
and does not need to be enabled. Users who are not members of the
Administrators group cannot open physical drives under any circumstances.
<P>
Although any member of the Administrators group can enable access control
and auditing on physical drives, doing so provides little value for two
reasons, the first leading to the second:

<OL><P><LI>Adding access control lists (ACLs) to a physical drive does not control
   or audit access to the logical volumes on the drive, or to files and
   directories within those logical volumes. Instead, the ACLs are used to
   control and audit access to the physical drive itself, such as opening
   the physical drive with CreateFile() using \\.\PHYSICALDRIVEx.

<P><LI>Because only members of the Administrators group can access physical
   drives, the only use for an ACL on a physical drive is to control or
   audit the access that they have. Because members can change the ACLs on
   physical drives, their access is not truly limited.
<P>
</OL>Finally, the ACLs applied to physical drives are in effect only until the
system is shut down or restarted.
<P>
<P><h3>Logical Volume Security</h3>
 
<P>
Win32-based applications can open logical volumes with CreateFile() by
specifying the file name as \\.\X:, where X is the actual drive letter.
Once this is done, the applications can use the handle to issue IOCTL
functions or read and write raw sectors.
<P>
Specifying access control on a logical volume controls access to the
logical volume itself and to all of the files and directories contained by
the volume allows Windows NT to provide a basic level of security to media
that is not formatted with NTFS, such as floppy disks, compact discs, and
hard disk partitions formatted with the FAT file system.
<P>
Access controls applied to removable media affect access to the drive, not
just to the media that was in the drive when the drive was secured. For
example, if users are prevented from accessing A:\, they are not able to
use drive A:, no matter which floppy disk is inserted.
<P>
Although access control protects a logical volume and all of its contents,
auditing only records accesses to the volume itself. Accesses to files and
directories within the volume are not recorded. This is analogous to the
way NTFS audits directories; only access to the directory itself is
audited. Thus, opening a logical volume by specifying \\.\X: as a file name
to CreateFile(), causes an entry to be placed in the security event log
while opening a file on the same volume does not.
<P>
Auditing and access control apply to logical volumes only as long as the
system is running. If you want to control access to or audit logical
volumes after the machine has been restarted, you must reapply the
security.
<P>
<P><h3>How to Enable Volume-Level Security</h3>
 
<P>
Access control and auditing are enabled by placing access control lists
(ACLs) on the volume. The discretionary ACL (DACL) provides access control
information, while the system ACL (SACL) provides auditing. To apply ACLs
to a volume, create a security descriptor with the desired ACLs, and then
use SetFileSecurity() to apply it. SetFileSecurity() can be used on both
physical and logical volumes and in addition to files and directories, as
follows:

<UL><LI>Physical volumes must be specified as a string in the form
   \\.\PHYSICALDRIVEx, where x is the zero-based drive number.

<LI>Logical volumes must be specified as a string in the form \\.\x:,
   where x is the actual drive letter of the volume.
<P></UL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.50 3.51 4.00 NTFS CD-ROM<BR>
KBCategory: kbprg<BR>
KBSubcategory: BseSecurity
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 29, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
