

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Determining System Version from a Win32-based Application </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q92395 ">
<META NAME="KBModify" CONTENT="1996/05/02">
<META NAME="KBCreate" CONTENT="1992/11/04">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  In order to create a Win32-based application that takes advantage of the features of each platform, it is necessary to determine the operating system on which the application is currently running.  You can use GetVersion() or GetVersionEx() to dete...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWP,QDL9,QBWN,QBWO,QBWQ,QAKC,QAUD,QAGQ,QDIR,QADK,QBWS,QAI4,QAJH,QBC6,QAVX V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Determining System Version from a Win32-based Application</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  May 2, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q92395 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Win32 Application Programming Interface (API) included with:
<P>
<P><PRE>    - Microsoft Windows NT versions 3.1, 3.5, and 3.51
    - Microsoft Windows 95 version 4.0
    - Microsoft Win32s versions 1.2, 1.25a, and 1.3
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In order to create a Win32-based application that takes advantage of the
features of each platform, it is necessary to determine the operating
system on which the application is currently running.
<P>
You can use GetVersion() or GetVersionEx() to determine what operating
system and version your application is running under. NOTE: GetVersion() is
supported on Windows 3.1, but GetVersionEx() is new to the Win32 API. A
Win32-based application might be running under MS-DOS/Windows using the
Win32s extension, Windows NT Workstation, Windows NT Server, or Windows 95.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
According to the documentation, the return value of GetVersion() is a DWORD
that specifies the major and minor version numbers. GetVersionEx() uses
members of the OSVERSIONINFO structure (dwMajorVersion and dwMinorVersion).
<P>
The following table shows the return values from GetVersion() under various
environments:
<P>
+------------------------------------------------------------------+
<PRE>|  Environment    |  LOWORD                | HIWORD                |
</PRE>+==================================================================+
<PRE>|  Win32s on      |  Windows version 3.1   | RESERVED *            |
|  Windows 3.1    |                        |                       |
</PRE>+------------------------------------------------------------------+
<PRE>|  Windows NT     |  Windows version       | RESERVED **           |
|                 |                        |                       |
</PRE>+------------------------------------------------------------------+
<PRE>|  Windows 95     |  Windows version 4.0   | RESERVED ***          |
|                 |                        |                       |
</PRE>+------------------------------------------------------------------+
<P>
<PRE>  * The highest bit is 1. The remaining bits specify build number.
    Note that the version of MS-DOS cannot be determined as it can under
    Windows 3.x.
 ** The highest bit is 0. The remaining bits specify build number.
</PRE>*** The highest bit is 1. The remaining bits are reserved.
<P>
The following sample code can be used to test the values returned by
GetVersion().
<P>
<P><h3>Sample Code 1</h3>
 
<P>
<PRE>#include &lt;windows.h&gt;

void main()
</PRE>{
<P>
<PRE>   DWORD dwVersion;
   char szVersion[80];

   dwVersion = GetVersion();

   if (dwVersion &lt; 0x80000000) {
   // Windows NT
       wsprintf (szVersion, "Microsoft Windows NT %u.%u (Build: %u)",
                (DWORD)(LOBYTE(LOWORD(dwVersion))),
                (DWORD)(HIBYTE(LOWORD(dwVersion))),
                (DWORD)(HIWORD(dwVersion)));
   }
   else if (LOBYTE(LOWORD(dwVersion))&lt;4) {
   // Win32s
       wsprintf (szVersion, "Microsoft Win32s %u.%u (Build: %u)",
                (DWORD)(LOBYTE(LOWORD(dwVersion))),
                (DWORD)(HIBYTE(LOWORD(dwVersion))),
                (DWORD)(HIWORD(dwVersion) &amp; ~0x8000));
   } else {
   // Windows 95
       wsprintf (szVersion, "Microsoft Windows 95 %u.%u (Build: %u)",
                (DWORD)(LOBYTE(LOWORD(dwVersion))),
                (DWORD)(HIBYTE(LOWORD(dwVersion))),
                (DWORD)(HIWORD(dwVersion) &amp; ~0x8000));
   }

   MessageBox( NULL, szVersion, "Version Check", MB_OK );
</PRE>}
<P>
The following sample code can be used to test the values returned by
GetVersionEx(). NOTE: The actual build number is derived by masking
dwBuildNumber with 0xFFFF.
<P>
<P><h3>Sample Code 2</h3>
 
<P>
{
<PRE>   OSVERSIONINFO osvi;
   char  szVersion [80];

   memset(&amp;osvi, 0, sizeof(OSVERSIONINFO));
   osvi.dwOSVersionInfoSize = sizeof (OSVERSIONINFO);
   GetVersionEx (&amp;osvi);

   if (osvi.dwPlatformId == VER_PLATFORM_WIN32s)
      wsprintf (szVersion, "Microsoft Win32s %d.%d (Build %d)",
                osvi.dwMajorVersion,
                osvi.dwMinorVersion,
                osvi.dwBuildNumber &amp; 0xFFFF);

   else if (osvi.dwPlatformId == VER_PLATFORM_WIN32_WINDOWS)
      wsprintf (szVersion, "Microsoft Windows 95 %d.%d (Build %d)",
                osvi.dwMajorVersion,
                osvi.dwMinorVersion,
                osvi.dwBuildNumber &amp; 0xFFFF);

   else if (osvi.dwPlatformId == VER_PLATFORM_WIN32_NT)
      wsprintf (szVersion, "Microsoft Windows NT %d.%d (Build %d)",
                osvi.dwMajorVersion,
                osvi.dwMinorVersion,
                osvi.dwBuildNumber &amp; 0xFFFF);

   MessageBox( NULL, szVersion, "Version Check", MB_OK );
</PRE>}
<P>
In order to distinguish between Windows NT Workstation and Windows NT
Server, use the registry API to query the following:
<P>
<PRE>   \HKEY_LOCAL_MACHINE\SYSTEM
   \CurrentControlSet
   \Control
   \ProductOptions

</PRE>The result will be one of the following:
<P>
<PRE>   WINNT      Windows NT Workstation is running.
   SERVERNT   Windows NT Server (3.5 or later) is running.
   LANMANNT   Windows NT Advanced Server (3.1) is running.
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.20 1.30 3.10 3.50 4.00 detect<BR>
KBCategory: kbprg<BR>
KBSubcategory: BseMisc<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  May 2, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
