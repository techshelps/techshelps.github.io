

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CTRL+C Exception Handling Under WinDbg </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q97858 ">
<META NAME="KBModify" CONTENT="1996/12/16">
<META NAME="KBCreate" CONTENT="1993/04/22">
<META NAME="Keywords" CONTENT="kbtool">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  An exception is raised for CTRL+C only if the process is being debugged. The purpose is to make it convenient for the debugger to catch CTRL+C in console applications. For the purposes of this article, the debugger is assumed to be WinDbg.  MORE IN...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBFY,QAUQ,QA2B,QAGB,QAJH,QBVV,QBV8,QAS1,QAPN,QAO4,QAB9,QDMW,QBXS,QBC9,QBC8 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>CTRL+C Exception Handling Under WinDbg</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 16, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q97858 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Win32 Software Development Kit (SDK) versions 3.1, 3.5,
   3.51, and 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
An exception is raised for CTRL+C only if the process is being debugged.
The purpose is to make it convenient for the debugger to catch CTRL+C in
console applications. For the purposes of this article, the debugger is
assumed to be WinDbg.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
When the console server detects a CTRL+C, it uses CreateRemoteThread() to
create a thread in the client process to handle the event. This new thread
then raises an exception IF AND ONLY IF the process is being debugged. At
this point, the debugger either handles the exception or it continues the
exception unhandled.
<P>
The "gh" command marks the exception as having been handled and continues
the execution. The application does not notice the CTRL+C, with one
exception: CTRL+C causes alertable waits to terminate. This is most
noticeable when executing:
<P>
<PRE>   while( (c = getchar()) != EOF )  - or -  while( gets(s) )

</PRE>It is not possible to get the debugger to stop the wait from terminating.
<P>
The "gn" command marks an exception as unhandled and continues the
execution. The handler list for the application is searched, as documented
for SetConsoleCtrlHandler(). The handler is executed in the thread created
by the console server.
<P>
After the exception is handled, the thread created to handle the event
terminates. The debugger will not continue to execute the application if Go
On Thread Termination is not enabled (from the Options menu, choose Debug,
and select the Go On Thread Termination check box). The thread and process
status indicate that the application is stopped at a debug event. As soon
as the debugger is given a go command, the dead thread disappears and the
application continues execution.
<P>
There are three cases where CTRL+C doesn't cause the program to stop
executing (instead it causes a "page down"):

<OL><P><LI>When CTRL+C is already being handled.

<P><LI>When the debugger is in the foreground and a source window has the
   focus (both must be true).

<P><LI>When the CTRL+C exception is disabled (through the Debugger
   Exceptions dialog box).
<P>
</OL>This follows the convention of the WordStar/Turbo C/Turbo Pascal editor
commands.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbtool<BR>
KBSubcategory: TlsWindbg BseDebug<BR>
Additional reference words: 3.10 3.50 3.51 4.00 95<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 16, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
