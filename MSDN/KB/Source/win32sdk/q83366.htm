

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Value Returned by GetWindowLong(hWnd, GWL_STYLE) </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q83366 ">
<META NAME="KBModify" CONTENT="1995/11/02">
<META NAME="KBCreate" CONTENT="1992/04/09">
<META NAME="Keywords" CONTENT="kbui">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  GetWindowLong(hWnd, GWL_STYLE) returns the window style information stored at the GWL_STYLE offset of the window data structure identified by hWnd. This offset contains the current state of the window, rather than the style specified when the windo...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBFY,QADR,QAJX,QAEF,QBXS,QBXQ,QDL9,QBWO,QBWN,QAGQ,QBWQ,QAQ3,QAG4,QBVV,QAUD V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Value Returned by GetWindowLong(hWnd, GWL_STYLE)</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 2, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q83366 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) versions 3.1

<LI>Microsoft Win32 Application Programming Interface (API) included with:
<P>
<P><PRE>    - Microsoft Windows NT versions 3.5 and 3.51
    - Microsoft Windows 95 version 4.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
GetWindowLong(hWnd, GWL_STYLE) returns the window style information
stored at the GWL_STYLE offset of the window data structure identified
by hWnd. This offset contains the current state of the window, rather
than the style specified when the window was created.
<P>
Windows can set and clear the following styles over the lifetime of a
window: WS_CLIPSIBLINGS, WS_DISABLED, WS_HSCROLL, WS_MAXIMIZE,
WS_MINIMIZE, WS_SYSMENU (for MDI child windows), WS_THICKFRAME,
WS_VISIBLE, and WS_VSCROLL. Windows will not dynamically set or clear
any of the other styles. An application can modify the style state at
the GWL_STYLE offset at any time by calling SetWindowLong(hWnd,
GWL_STYLE, dwNewLong), but Windows will not be aware that the style
has changed. Windows maintains some internal flags on the window style
and may use these rather than checking the GWL_STYLE offset of the
window data structure.
<P>
GetWindowLong(hWnd, GWL_STYLE) returns a LONG value, which contains
the currently active styles combined by the Boolean OR operator. An
application can change the information stored at the GWL_STYLE offset
by calling SetWindowLong(hWnd, GWL_STYLE, dwNewLong).
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following table lists the windows styles that Windows updates
throughout the life span of a window. In the Change column below, an
"S" indicates that the style is set and a "C" indicates that the style
is cleared. The Where column lists the source module involved. Windows
will change a window's styles as follows:
<P>
<PRE>Style       Change  Window      Where       Why
-----       ------  ------      -----       ---

</PRE>WS_CLIPSIBLINGS
<P>
<PRE>            S       Overlapped  WMCREATE.C  Set on creation.

</PRE>WS_CLIPSIBLINGS
<P>
<PRE>            S       Popup       WMCREATE.C  Set on creation.

WS_DISABLED S &amp; C   Any         WMACT.C     Set or cleared when
                                            EnableWindow function
                                            disables or enables
                                            window.

WS_HSCROLL  S &amp; C   SB_HORZ     WINSBCTL.C  Set or cleared as scroll
                                            bar range changed (for
                                            window scroll bar, not the
                                            SCROLL BAR class).

WS_HSCROLL  S &amp; C   SB_HORZ     SBRARE.C    Set or cleared in
                                            ShowScrollBar (for window
                                            scroll bar, not the SCROLL
                                            BAR class).

WS_HSCROLL  S &amp; C   List boxes  LBOXCTL1.C  Set if scroll bar required
                                            to see contents.

WS_HSCROLL  S &amp; C   MDI frame   MDIWIN.C    Set if required to see
                                            children.

WS_MAXIMIZE C       Any         WMCREATE.C  On creation (reset
                                            immediately in
                                            WMMINMAX.C).

WS_MAXIMIZE C       Any         WMMOVE.C    Cleared if window resized.

WS_MAXIMIZE S &amp; C   Any         WMMINMAX.C  Set if window maximized,
                                            cleared if no longer
                                            maximized.

WS_MINIMIZE C       Any         WMCREATE.C  On creation (reset
                                            immediately in
                                            WMMINMAX.C).

WS_MINIMIZE C       Any         WMMOVE.C    Cleared if window resized.

WS_MINIMIZE S &amp; C   any         WMMINMAX.C  Set if window minimized,
                                            cleared if no longer
                                            minimized.

WS_SYSMENU  S &amp; C   MDI child   MDIMENU.C   Cleared if child is
                                            maximized and uses frame
                                            menu. Set when child no
                                            longer maximized.

</PRE>WS_THICKFRAME
<P>
<PRE>            S &amp; C   Any         WINSBCTL.C  State changed for only a
                                            few instructions during
                                            painting.

WS_VISIBLE  C       Any         WMCREATE.C  Cleared and then reset by
                                            call to ShowWindow.

WS_VISIBLE  S &amp; C   Any         WMSHOW.C    Cleared if window hidden
                                            in ShowWindow, set if
                                            shown.

WS_VISIBLE  S &amp; C   Any         WMSWP.C     Cleared if window hidden
                                            in ShowWindow, set if
                                            shown.

WS_VISIBLE  C       MDI client  MDIWIN.C    Cleared when current MDI
                                            child is maximized, and
                                            new child is activated.
                                            Immediately reset with
                                            call to ShowWindow.

WS_VISIBLE  S       Desktop     INLOADW.C   Ensure desktop visible.

WS_VISIBLE  S &amp; C   Any         MSDWP.C     Set or cleared when
                                            DefWindowProc receives
                                            WM_SETREDRAW message to
                                            turn drawing on or off,
                                            respectively.

WS_VISIBLE  S &amp; C   MDI client  MDIWIN.C    Cleared and then
                                            immediately reset to
                                            optimize painting.

WS_VSCROLL  S &amp; C   SB_VERT     WINSBCTL.C  Set or cleared as scroll
                                            bar range changed (for
                                            window scroll bar, not the
                                            SCROLL BAR class).

WS_VSCROLL  S &amp; C   List boxes  LBOXCTL1.C  Set if scroll bar required
                                            to see entire contents.

WS_VSCROLL  S &amp; C   MDI frame   MDIWIN.C    Set if required to see
                                            children.

WS_VSCROLL  S &amp; C   SB_VERT     SBRARE.C    Set/cleared in
                                            ShowScrollBar (for window
                                            scroll bar, not the SCROLL
                                            BAR class).

</PRE>In addition to the information above, the GetWindowLong function
always reports some style bits to be clear, as follows:

<UL><LI>Combo boxes always report the following styles as clear:
<P>
<P><PRE>      CBS_HASSTRINGS, CBS_SORT, WS_BORDER, WS_HSCROLL, and WS_VSCROLL
</PRE>
<LI>All edit controls report the WS_BORDER style clear.

<LI>Multiline edit controls report the WS_HSCROLL style clear if the
   control contains centered or right-justified text.
<P></UL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10 3.50 3.51 4.00 95<BR>
KBCategory: kbui<BR>
KBSubcategory: UsrWndw<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 2, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
