

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SAMPLE: How to Simulate Multiple-Selection TreeView Control </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q125587">
<META NAME="KBModify" CONTENT="1996/02/15">
<META NAME="KBCreate" CONTENT="1995/01/31">
<META NAME="Keywords" CONTENT="kbui kbcode kbfile">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  The TVWSTATE sample demonstrates how to simulate a multiple-selection TreeView control. The Windows 95 TreeView control does not support multiple selection. If you want a multiple-selection TreeView, you can use state images to simulate it in your ...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QATJ,QA28,QALS,QAMN,QAB5,QA7O,QAOE,QAE1,QAV1,QAV0,QABH,QABI,QAPF,QAH4,QDL9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>SAMPLE: How to Simulate Multiple-Selection TreeView Control</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 15, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q125587</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Win32 Application Programming Interface (API) included with:
<P>
<P><PRE>    - Microsoft Windows NT version 3.51
    - Microsoft Windows 95 version 4.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The TVWSTATE sample demonstrates how to simulate a multiple-selection
TreeView control. The Windows 95 TreeView control does not support multiple
selection. If you want a multiple-selection TreeView, you can use state
images to simulate it in your application.
<P>
The TVWSTATE sample accomplishes this by using a checkbox type of state
image to indicate that the item is selected or cleared (de-selected). These
checkboxes will retain their state even if the TreeView loses focus.
<P>
Download TVWSTATE.EXE, a self-extracting file, from the Microsoft
Software Library (MSL) on the following services:

<UL><LI>Microsoft Download Service (MSDL)
<P><PRE>      Dial (206) 936-6735 to connect to MSDL
      Download <A HREF="http://support.microsoft.com/download/support/mslfiles/TVWSTATE.EXE">TVWSTATE.EXE</A> <I>(size: 49318 bytes)</I> 
</PRE>
<LI>Internet (anonymous FTP)
<P><PRE>      ftp ftp.microsoft.com
      Change to the SOFTLIB\MSLFILES directory
      Get <A HREF="http://support.microsoft.com/download/support/mslfiles/TVWSTATE.EXE">TVWSTATE.EXE</A> <I>(size: 49318 bytes)</I> 
</PRE><P>
</UL><h2>MORE INFORMATION</h2>
 
<P>
The multiple-selection TreeView control simulation is implemented by
setting the state image list of the TreeView control to an image list that
contains the checked and unchecked checkbox bitmaps. This image list is set
by using the TVM_SETIMAGELIST message with lParam == TVSIL_STATE (see
InitImageList in TVWSTATE.C). A TreeView control can have two image lists,
a normal image list and a state image list. In the TreeView, the display
order from left to right is: the expansion button, the state image (if
present), the normal image (if present), and then the item text.
<P>
When processing the WM_NOTIFY message where (LPNMHDR)lParam-&gt;code ==
NM_CLICK (see MsgNotifyTreeView in TVWSTATE.C), the code checks to see if
the user clicked the left mouse button in the checkbox. If this is the
case, the state image index of the item is retrieved, the index is toggled
between the checked and unchecked image list items, and then the new index
is saved.
<P>
The state image index identifies which member of the state image list
should be displayed. The state image index is stored in bits 12-16 of the
item state value. Either TVIS_STATEIMAGEMASK or TVIS_USERMASK can be used
to mask off the lower bits. To access just the state image index, use a
statement similar to this:
<P>
<PRE>   StateIndex = tvi.state &amp; TVIS_STATEIMAGEMASK;

</PRE>The INDEXTOSTATEIMAGEMASK macro offsets a value to the correct bits for the
state image index. This is accomplished by shifting the given value left 12
places. If the desired state image index is 1, the state can be set using a
statement similar to this:
<P>
<PRE>   tvi.state = INDEXTOSTATEIMAGEMASK(1);

</PRE>This sample can also be modified to implement selection methods similar to
those of an extended-selection listbox where the user uses the SHIFT key to
select a range of items and/or the CTRL key to select or clear individual
items.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.51 4.00<BR>
KBCategory: kbui kbcode kbfile<BR>
KBSubcategory: UsrCtl<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 15, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
