

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: Win32 SDK Version 3.51 Bug List - WinDbg </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q136434">
<META NAME="KBModify" CONTENT="1995/09/12">
<META NAME="KBCreate" CONTENT="1995/09/07">
<META NAME="Keywords" CONTENT="kbtool kbbuglist">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  This article lists the bugs in the WinDbg debugger released with the Win32 SDK for Windows NT version 3.51 that were known at the time the product was released.  MORE INFORMATION   - If you set a breakpoint in a function that is evaluated by EE, ex...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVV,QAB9,QA01,QATL,QATK,QBV8,QAY5,QBXS,QAIB,QAKD,QAH4,QBXT,QA5V,QBWS,QACI V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: Win32 SDK Version 3.51 Bug List - WinDbg</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 12, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q136434</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Win32 Software Development Kit (SDK) version 3.51
</UL> 
<P>
SUMMARY
 
<P>
This article lists the bugs in the WinDbg debugger released with the Win32
SDK for Windows NT version 3.51 that were known at the time the product was
released.
<P>
<P><h2>MORE INFORMATION</h2>
 

<UL><LI>If you set a breakpoint in a function that is evaluated by EE, execution
   stops at the breakpoint and incomplete results are returned. Generally,
   the result is wrong and you are not notified of the problem.

<LI>The z-order of windows is not correctly restored when a workspace is
   reloaded. For example, the Registers window that was on top when you
   exited is not when you restart.

<LI>In cases where the application has source files that have identical
   names but are located in different directories, Windbg may confuse one
   with the other during source-level debugging. Therefore, putting
   breakpoints in a line in one of the files may not work.

<LI>If you use F10 to step over a function that contains a conditional
   breakpoint and the condition is not met, the program runs to completion.

<LI>When the system is under a heavy load, a hardcoded breakpoint hit may
   be erroneously reported.

<LI>WinDbg may hang if it is opened using the AeDebug registry entry and
   closed while the debuggee is still active.

<LI>When you use the toolbar to place a breakpoint on a source line that is
   not an executable line, the breakpoint is correctly placed on the next
   line that contains executable code. However, if this is done before the
   module is loaded, you get an unresolved breakpoint when the module
   is loaded.

<LI>If you ise the Breakpoints dialog box to set a breakpoint on a source
   line that is not an exectuable line and the system DLLs were loaded with
   deferred symbols, the debugger will load them now and you will get a
   message about an uninstantiated breakpoint. The breakpoint should have
   been placed on the next line that contains executable code.

<LI>WinDbg does not show a wait pointer while setting a breakpoint.

<LI>When you use the scroll thumb in the Memory Window, there is a limit to
   how far down the view can be changed. Once the thumb is dragged to the
   bottom, nothing more can be viewed. However, you can move as far
   beyond that point as you want by using the PAGE DOWN key.

<LI>The PAGE UP and PAGE DOWN keys do not move the scroll thumb in the
   Memory Window.

<LI>Narrow window size prevents Memory Window reformatting.

<LI>WinDbg won't set a breakpoint in generated code that is executed.

<LI>If the Command window is scrolled away from the current input line, it
   cannot be scrolled back. Scrolling always stops about one line too soon.

<LI>WinDbg may display a popup window if there is no disk in the drive.

<LI>The sxeld and sxdld commands are not supported.

<LI>Pressing CTRL+SHIFT+HOME does not select text in the Command window.

<LI>For functions that take a class member as an argument, WinDbg displays
   CXX0019: Error: bad type cast evaluating member functions.

<LI>WinDbg cannot evaluate functions using string constants.

<LI>WinDbg shows the value of thread-local static local variables as 0.

<LI>Pressing p when using remote WinDbg behaves as if you pressed g.

<LI>A maximized source window doesn't show the path or dirty flag.

<LI>WinDbg source window title text is sometimes clipped when the window
   size is changed.

<LI>A popup box is presented when WinDbg is run using an input script and
   the debugee cannot be found.

<LI>The WinDbg expression evaluator truncates long strings.

<LI>The floating-point register displays do not line up in fixed columns.

<LI>The Address field defaults to the next token from the last active menu
   when you click Address on the View menu.

<LI>Type information defined in a DLL is not available when the current
   context is another DLL or the .exe file.

<LI>Breakpoint message classes are not all-inclusive.

<LI>You cannot set a breakpoint on a message for which no WM_xxx message
   exists.

<LI>You cannot set a single breakpoint on multiple messages.

<LI>Message enumeration does not highlight messages belonging to the
   selected class.

<LI>Several break types listed when adding breakpoints are extraneous.

<LI>Exception number processing should not allow bit 28 to be set.

<LI>Length field in breakpoint dialog box does not accept expressions.

<LI>All common file dialog boxes should use a single saved directory.

<LI>Status bar should display toolbar button description.

<LI>Toolbar is clipped if main window is too narrow.

<LI>C++ EE doesn't handle default function arguments.

<LI>Floating point registers cannot be displayed in HEX format.

<LI>Changing radix in the Debug dialog box from the Options menu highlights
   all the values as changed.

<LI>Pressing CTRL+S does not pause dump command output.

<LI>Locals window collapses expanded structure when scope changes.

<LI>Hex values are displayed using different case for first level and lower
   level values.

<LI>The value of array members cannot be changed.

<LI>The File Open dialog box does not save the previous file type.

<LI>There is no help for Source/Asm mode.

<LI>WinDbg does not always automatically scroll when selecting text with the
   mouse on the Disassembly window while the mouse is below the Disassembly
   window.

<LI>The expression evaluator does not correctly deal with the possiblity of
   a cast from a class to a primitive data type.

<LI>The User DLLs dialog box shows single status item for multiple
   possibilities.

<LI>A full path is needed when selecting a DLL from the Debugger DLLs dialog
   box, and there is no Browse button to choose the path.

<LI>Continue to Cursor on the Run menu should be Continue to Caret, because
   the execution stop point is indicated by the caret in the active window,
   not the position of the mouse pointer.

<LI>The symbol information output from the X command is not sorted in
   alphabetical order.

<LI>EE does not allow "context not allowed" to be an l-value.

<LI>The LN command displays only public symbols, not line numbers.

<LI>Focus changes momentarily when disassembly view overlaps source view and
   View.Address is updated.

<LI>Constants in Source Windows that have suffixes are improperly syntax
   colored. The numeric part is colored, but the suffix is not.

<LI>The return value type is not reported for ?&lt;FuncName&gt;.

<LI>Function evaluation reports "Error: function requires implicit
   conversion" for a function taking a structure, not a pointer to
   a structure.

<LI>?&lt;10-byte real&gt; displays a leading blank.

<LI>?&lt;10-byte real&gt;,&lt;format modifier&gt; fails with modifiers Lf, Lg, LG, Le,
   and LE.

<LI>Options tool buttons are enabled when no watch item is selected.

<LI>The Disassembly window does not scroll properly. The current line
   sometimes does not appear in the window.

<LI>Watch window shift-key selection is not consistent. Sometimes all
   characters from the beginning of the expression to the caret position
   are selected, but sometimes only two characters are selected.

<LI>The User DLLs dialog box silently discards edits after picking a DLL and
   changing the radio button from suppress to load.

<LI>The DS register display is nine bits long for MIPS. It is currently
   displayed with the minimum number of digits necessary for its value. It
   should be displayed as a three-digit field padded with zeros.

<LI>When you click Stop Debugging on the Run menu, all values in the watch
   window (left and right panes) are cleared.

<LI>While you step through a program, the information windows display
   changes data in red. When a structure is expanded, the changed data
   selection (red) is lost.

<LI>The Command window does not scroll correctly. Unless the Command window
   is positioned at the bottom, new messages are not always visible.

<LI>"DW BP" currently uses DS as the default selector. It should use SS.

<LI>Expanding character pointers in the Watch window shows only the first
   character in the string.

<LI>The Replace dialog box is missing a Find Previous Button.

<LI>The Watch window does not preserve watchpoints between runs in a single
   debugging session or between separate debugging sessions.

<LI>The File Open dialog box does not default to the program directory of an
   open workspace.

<LI>?&lt;function name&gt; does not display the function prototype.

<LI>fr st fails with MIPS host and x86 target with windbgrm.

<LI>In a stack trace, the function name displayed for a function without a
   symbol is the return address of the next frame.

<LI>The base expression of expanded structure is added using quick watch,
   not the selected item.

<LI>Breakpoints may not work correctly in multithreaded applications in
   areas not protected by critical sections.

<LI>Choosing Stop Debugging and Restart causes a memory leak (100K per
   iteration).

<LI>The Watch dialog does not set default watch expression to the selection
   made in the source window.

<LI>A Long expression (?arg00+arg01+...+arg31) causes the debuggee to run to
   termination.

<LI>?&lt;function returning near pointer&gt; displays segment.

<LI>When setting up for kernel debugging, the user must enter the target
   processor architecture in the Kernel Debugging dialog box. If the wrong
   value is selected, the  target machine will crash the first time the
   user tries to set a breakpoint, or change its context.

<LI>Module load messages lock up WinDbg. While a module is loading, no
   other input is allowed.

<LI>WinDbg cannot debug ntvdm on the RISC platform.

<LI>The Find dialog box can be reselected while the dialog box "The string
   xxxx was not found" is still open.

<LI>The Cancel button from the "Ask to save workspace if Modified" dialog
   box causes WinDbg to exit, instead of return.

<LI>You cannot move the caret in the Dissassembly Window by pressing the UP
   ARROW and DOWN ARROW keys.

<LI>You cannot set a breakpoint on the first line in the Dissassembly
   window.

<LI>WinDbg can close prematurely if a breakpoint is ambiguous.

<LI>Data type "const WCHAR *const" displays only the first letter of the
   string.

<LI>A previously added exception is selected when you attempt to add a new
   exception in the Exceptions dialog box.

<LI>WinDbg is unable to evaluate an enum expression on PPC.

<LI>WinDbg cannot find symbols for class names on PPC. Therefore WinDbg is
   unable to set breakpoints on constructors or other member functions.

<LI>When server debugging, WinDbg does not look in the symbol search path
   set in the User DLLs dialog box. Instead, it looks in the current path.

<LI>The Single Message list does not contain WM_ENTERMENULOOP or
   WM_EXITMENULOOP.

<LI>An Access Violation occurs if the LM command is used when debugging a
   16-bit Windows-based application.
<P></UL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words:<BR>
KBCategory: kbtool kbbuglist<BR>
KBSubcategory: TlsWindbg<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 12, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
