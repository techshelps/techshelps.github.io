

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Differences Between hInstance on Win 3.1 and Windows NT </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q103644">
<META NAME="KBModify" CONTENT="1995/11/02">
<META NAME="KBCreate" CONTENT="1993/08/26">
<META NAME="Keywords" CONTENT="kbui">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  In Microsoft Windows version 3.1, an instance handle can be used to uniquely identify the instance of an application because instance handles are unique within the scope of an address space. Because each instance of an application runs in its own a...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWP,QAJQ,QDL9,QBWO,QBWN,QAC2,QBWQ,QAUD,QAF3,QAR5,QAJH,QAGI,QBW5,QBWD,QBW4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Differences Between hInstance on Win 3.1 and Windows NT</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 2, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q103644</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Win32 Application Programming Interface (API) included with:
<P>
<P><PRE>    - Microsoft Windows NT versions 3.5 and 3.51
    - Microsoft Windows 95 version 4.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Windows version 3.1, an instance handle can be used to
uniquely identify the instance of an application because instance handles
are unique within the scope of an address space. Because each instance of
an application runs in its own address space on Windows NT, instance
handles cannot be used to uniquely identify an instance of an application
running on the system. This article explains why, and some alternative
calls that might assist in uniquely identifying an application instance on
Windows NT.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Although the concepts for an instance handle are similar on Windows NT and
Windows 3.1, the results you see regarding them might be very different
from what you expect.
<P>
With Windows 3.1, when you start several instances of the same application,
they all share the same address space. You have multiple instances of the
same code segment; however, each of these instances has a unique data
segment associated with it. Using an instance handle (hInstance) is a way
to uniquely identify these different instances and data segments in the
address space.
<P>
Instance handles are unique to the address space. On Windows NT, when
looking at the value of the instance handle, or the value returned from
GetWindowLong(hWnd, GWL_HINSTANCE), a developer coming from a Windows 3.1
background might be surprised to see that most of the windows on the
desktop return the same value. This is because the return value is the
hInstance for the instance of the application, which is running it its own
address space. (An interesting side note: The hInstance value is the base
address where the application's module was able to load; either the default
address or the fixed up address.)
<P>
On Windows NT, running several instances of the same application causes the
instances to start and run in their own separate address space. To
emphasize the difference: multiple instances of the same application on
Windows 3.1 run in the same address space; in Windows NT, each instance has
its own, separate address space. Using an instance handle to uniquely
identify an application instance, as is possible on Windows 3.1, does not
apply in Windows NT. (Another interesting side note: Remember that even if
there are multiple instances of an application, if they are able to load at
their default virtual address spaces, the virtual address pages of the
different applications' executable code will map to the same physical
memory pages.)
<P>
In Windows NT, instance handles are not unique in the global scope of the
system; however, window handles, thread IDs, and process IDs are. Here are
some calls that may assist in alternative methods to uniquely identify
instance of applications on Windows NT:

<UL><LI>GetWindowThreadProcessID() retrieves the identifier of the thread
   that created the given window and, optionally, the identifier of
   the process that created the window.

<LI>OpenProcess() returns a handle to a process specified by a process
   ID.

<LI>GetCurrentProcessID() returns the calling process's ID.

<LI>EnumThreadWindows() returns all of the windows associated with a
   thread.

<LI>The FindWindow() function retrieves the handle of the top-level
   window specified by class name and window name.

<LI>To enumerate all of the processes on the system, you can query the
   Registry using RegQueryValueEx() with key HKEY_PERFORMANCE_DATA,
   and the Registry database index associated with the database string
   "Process".
<P>
</UL>For further details on using these calls, please see the Win32 SDK help
file.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.10 3.50 3.51 4.00 95<BR>
KBCategory: kbui<BR>
KBSubcategory: UsrMisc<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 2, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
