

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INFO: Layer Planes in OpenGL </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q169954">
<META NAME="KBModify" CONTENT="1997/06/12">
<META NAME="KBCreate" CONTENT="1997/06/11">
<META NAME="Keywords" CONTENT="GdiOpenGL kbgraphic">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  Layer Planes are a new feature in the Microsoft implementation of OpenGL 1.1. Before using OpenGL layer planes, there are several new functions and some driver dependency issues that you should be aware of.  MORE INFORMATION  The generic implementa...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QATR,QDJU,QAGI,QBBI,QAA1,QBXS V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INFO: Layer Planes in OpenGL</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 12, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q169954</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Win32 Software Development Kit (SDK)
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Layer Planes are a new feature in the Microsoft implementation of OpenGL
1.1. Before using OpenGL layer planes, there are several new functions and
some driver dependency issues that you should be aware of.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The generic implementation of OpenGL does not support layer planes. You
must have a 3D accelerated video card and driver that implement layer plane
functionality. To programmatically determine whether your implementation
supports layer planes, you should enumerate the available pixel formats and
look for one that has the bReserved member set to a non-zero value (see the
GLEnum sample for more information on pixel format enumeration). The
bReserved member of the PIXELFORMATDESCRIPTOR structure now contains the
number of overlay and underlay planes. Bits 0 through 3 specify up to 15
overlay planes and bits 4 through 7 specify up to 15 underlay planes.
<P>
Before creating a rendering context based on a particular layer plane, you
can obtain detailed information about the layer plane by calling
wglDescribeLayerPlane. This function will give you a LAYERPLANEDESCRIPTOR
structure that fully describes the layer plane. This structure is analogous
to the PIXELFORMATDESCRIPTOR structure with 2 important exceptions. First,
there is an additional flag in the dwFlags member, LPD_TRANSPARENT, which
means that the plane is transparent if it is set (that is, lower-numbered
planes will show through this plane). Second, the transparent portion of
the plane is determined by the crTransparent member which specifies either
a color index (when in color-index mode) or a color (when in RGBA mode).
<P>
If you have a valid PIXELFORMATDESCRIPTOR that supports layer planes, you
can then set it using SetPixelFormat. Once you have a valid "multiple layer
plane" HDC set up, you can create an OpenGL rendering context for one of
the layer planes by calling wglCreateLayerContext with your HDC as the
first parameter. The second parameter of wglCreateLayerContext specifies
the layer plane to which the new rendering context is bound (positive
values correspond to overlays while negative values correspond to
underlays). Layer Plane 0 is the "main" plane (that is, the plane that
would be used if you simply called wglCreateContext instead).
<P>
Once you have an OpenGL rendering context for a particular layer plane, you
can use that rendering context in the typical way (that is, by calling
wglMakeCurrent, followed by your OpenGL code, followed by
wglMakeCurrent(NULL, NULL)). Don't forget to delete the rendering context
when finished with it by calling wglDeleteContext.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: opengl layerplane under over lpd<BR>
Keywords            : GdiOpenGL kbgraphic<BR>
Platform            : NT Win95 WINDOWS<BR>
Issue type          : kbinfo<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 12, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
