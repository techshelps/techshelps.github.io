

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Allowing Only One Application Instance on Win32s </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q124134">
<META NAME="KBModify" CONTENT="1997/01/03">
<META NAME="KBCreate" CONTENT="1994/12/19">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  The entry point for both Windows-based and Win32-based applications is:     int WinMain( hInstance, hPrevInstance, lpszCmdLine, nCmdShow )     HINSTANCE hInstance;        /* Handle of current instance  */    HINSTANCE hPrevInstance;    /* Handle of...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QAJH,QADX,QAF3,QBWS,QAVX,QAVW,QAPN,QALQ,QBWP,QA7H,QANG,QALZ,QAIJ,QAHD V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Allowing Only One Application Instance on Win32s</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 3, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q124134</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Win32s, versions 1.30, 1.30a, 1.30c
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The entry point for both Windows-based and Win32-based applications is:
<P>
<PRE>   int WinMain( hInstance, hPrevInstance, lpszCmdLine, nCmdShow )

   HINSTANCE hInstance;        /* Handle of current instance  */
   HINSTANCE hPrevInstance;    /* Handle of previous instance */
   LPSTR lpszCmdLine;          /* Address of command line     */
   int nCmdShow;               /* Show state of window        */

</PRE>You can allow only one instance of your Windows-based application to run
at a time by using hPrevInstance to determine if there is already an
existing application instance; then exit the process if there is one. If
there is no previous instance, hPrevInstance is NULL.
<P>
However, in a Win32-based application, hPrevInstance is always NULL.
Therefore, you cannot determine if another instance of your application
has been started simply by examining hPrevInstance. This article gives you
a method you can use.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Use one of the following four methods to determine if there is an existing
application instance on Win32s:

<UL><LI>Synchronize with a named object, such as a file mapping.
<P>
   -or-

<LI>Synchronize with a global atom.
<P>
   -or-

<LI>Synchronize with a private message.
<P>
   -or-

<LI>Use FindWindow() to check for the application.
<P>
</UL><h3>Using a File Mapping</h3>
 
<P>
Using a file mapping works well on any Win32 platform. The global atom is a
cheaper resource, whereas a file mapping will cost a page of memory. A
private message is good if you want to inform the first instance that the
user attempted to start a second instance, and then let it handle the
request -- post a message, become the active application, and so on.
<P>
NOTE: You need to clean up before terminating the second instance.
FindWindow() doesn't require cleanup, but this method will not work as
reliably in a preemptive multitasking environment, such as Windows NT,
because you can get in a race condition.
<P>
The following code fragment demonstrates how a file mapping can be used
to allow only one instance of a Win32-based application. This code should
avoid any race conditions. Place this code at the beginning of WinMain().
<P>
The code creates a file mapping named MyTestMap using CreateFileMapping().
If MyTestMap already exists, then you know that there is already a running
instance of this application. A similar technique would be used with a
global atom.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   HANDLE hMapping;

   hMapping = CreateFileMapping( (HANDLE) 0xffffffff,
                                 NULL,
                                 PAGE_READONLY,
                                 0,
                                 32,
                                 "MyTestMap" );
   if( hMapping )
   {
      if( GetLastError() == ERROR_ALREADY_EXISTS )
      {
      //
      // Display something that tells the user
      // the app is already running.
      //
         MessageBox( NULL, "Application is running.", "Test", MB_OK );
         ExitProcess(1);
      }
   }
   else
   {
   //
   // Some other error; handle error.
   //
      MessageBox( NULL, "Error creating mapping", "Test", MB_OK );
      ExitProcess(1);
   }
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbprg kbcode<BR>
KBSubcategory: W32s<BR>
Additional reference words: 1.30 1.30a 1.30c<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 3, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
