

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Error on Win32s: R6016 - not enough space for thread data </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q126709">
<META NAME="KBModify" CONTENT="1995/03/03">
<META NAME="KBCreate" CONTENT="1995/02/28">
<META NAME="Keywords" CONTENT="kbprg kbcode kbprb">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  Spawning and closing an application repeatedly succeeds around 60 times, then the spawn fails with this error:     R6016 - not enough space for thread data  CAUSE =====  The thread local storage (TLS) is not freed by the system.  The failure occurs...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QATJ,QA28,QAKJ,QBVV,QBSO,QAUQ,QALQ,QAJH,QAU3,QAMR,QAFH,QBJQ,QACE,QBWP,QA6Z V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Error on Win32s: R6016 - not enough space for thread data</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 3, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q126709</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Win32s, versions 1.2 and 1.25
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Spawning and closing an application repeatedly succeeds around 60 times,
then the spawn fails with this error:
<P>
<PRE>   R6016 - not enough space for thread data

</PRE><h2>CAUSE</h2>
 
<P>
The thread local storage (TLS) is not freed by the system.
<P>
The failure occurs only if there is another Win32-based application active
while you are doing the spawns. The message itself is not generated by
Win32s. It is generated by the Microsoft C Run-time (CRT) libraries
LIBC.LIB and LIBCMT.LIB.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
In Win32s version 1.25, TLS indices are freed during module cleanup. The
TLS index is owned by the application's main module, so that it is freed
when the application terminates. This solves the problem for LIBC and
LIBCMT.
<P>
There is a similar problem with MSVCRT20.DLL. This DLL version of the CRT
allocates a new TLS index each time a process attaches to it. MSVCRT20
doesn't free the TLS indices when unloading. The system should free them.
If only one application uses MSVCRT20 at a time, then the application can
be spawned successfully up to about 60 times on Win32s version 1.20. On
Win32s version 1.25, there is no limitation.
<P>
If there is already an active application that uses MSVCRT20, it is not
possible to spawn and close a second application that uses MSVCRT20 more
than about 60 times under Win32s version 1.25. This is because MSVCRT20
allocates a TLS index each time a process attaches to it. Win32s will free
all of the TLS indices only when MSVCRT20 is unloaded.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
On Win32s, TLS allocation should be done once and not per process. Each
process can use the index to store per-process data, just as a thread
uses a TLS index on Windows NT. This is easy to do, because DLL data is
shared between all processes under Win32s.
<P>
The following example demonstrates how to do the TLS allocation once on
Win32s:
<P>
<PRE>   BOOL APIENTRY DllMain(HINSTANCE hinstDll, DWORD fdwReason,
           LPVOID lpvReserved)
   {
       static BOOL fFirstProcess = TRUE;
       BOOL fWin32s = FALSE;
       DWORD dwVersion = GetVersion();
       static DWORD dwIndex;

       if ( !(dwVersion &amp; 0x80000000) &amp;&amp; LOBYTE(LOWORD(dwVersion))&lt;4 )
           fWin32s = TRUE;

       if (dwReason == DLL_PROCESS_ATTACH) {
           if (fFirstProcess || !fWin32s) {
               dwIndex = TlsAlloc();
            }
            fFirstProcess = FALSE;
       }
       .
       .
       .
   }
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.20<BR>
KBCategory: kbprg kbcode kbprb<BR>
KBSubcategory: W32s<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 3, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
