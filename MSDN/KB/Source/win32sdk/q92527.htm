

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Accessing Parent Window's Menu from Child Window w/ focus </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q92527 ">
<META NAME="KBModify" CONTENT="1995/11/02">
<META NAME="KBCreate" CONTENT="1992/11/09">
<META NAME="Keywords" CONTENT="kbui">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  In an MDI-like application, the user must be allowed to pull down menus in the parent window by using menu mnemonics even though the child window or one of its children may have the focus. This can be done by creating child windows without a system...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QADO,QAF0,QDL9,QBWO,QBWN,QBTB,QBWR,QBVV,QAGQ,QBWQ,QBJZ,QAH4,QBXU,QAON,QAGU V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Accessing Parent Window's Menu from Child Window w/ focus</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 2, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q92527 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) versions 3.1

<LI>Microsoft Win32 Application Programming Interface (API) included with:
<P>
<P><PRE>    - Microsoft Windows NT versions 3.5 and 3.51
    - Microsoft Windows 95 version 4.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In an MDI-like application, the user must be allowed to pull down menus in
the parent window by using menu mnemonics even though the child window or
one of its children may have the focus. This can be done by creating child
windows without a system menu or by processing the WM_MENUCHAR and
WM_SYSCOMMAND/SC_KEYMENU messages to programatically pull down the parent's
menu.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
If a child window with a system menu has the focus and the user attempts to
access the parent's menu with the keyboard using the menu mnemonic
(ALT+mnemonic character), Windows will beep and the parent's menu will not
be pulled down. This problem occurs because the parent window does not have
the focus and because the window with the focus does not have a menu
corresponding to the mnemonic. (Child windows cannot have menus other than
the system menu.)
<P>
If the child window with the focus does not have a system menu, Windows
assumes that the menu mnemonic is for the nearest ancestor with a system
menu and passes the message to that parent. Consequently, it is possible to
use menu mnemonics to pull down a parent's menu if the descendant windows
do not have system menus.
<P>
If the child window with the focus has a system menu, Windows will beep if
a menu mnemonic corresponding to a parent menu is typed. This can be
prevented and the parent menu can be dropped down using the following code
in the window procedure of the child window:
<P>
<PRE> case WM_MENUCHAR:
    PostMessage(hwndWindowWithMenu, WM_SYSCOMMAND, SC_KEYMENU, wParam);
    return(MAKELRESULT(0, 1));

</PRE>WM_MENUCHAR is sent to the child window when the user presses a key
sequence that does not match any of the predefined mnemonics in the current
menu. wParam contains the mnemonic character. The child window posts a
WM_SYSCOMMAND/SC_KEYMENU message to the parent whose menu is to be dropped
down, with lParam set to the character that corresponds to the menu
mnemonic.
<P>
The above code can also be used if the child window with the focus does not
have a system menu but an intermediate child window with a system menu
exists between the child with the focus and the ancestor whose menu is to
be dropped. In this case, the code would be placed in the intermediate
window's window procedure.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.10 3.00 3.50 3.51 4.00 95<BR>
KBCategory: kbui<BR>
KBSubcategory: UsrMen<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 2, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
