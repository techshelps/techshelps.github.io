

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Mutex Wait Is FIFO But Can Be Interrupted </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q125657">
<META NAME="KBModify" CONTENT="1997/01/17">
<META NAME="KBCreate" CONTENT="1995/02/01">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  A mutex is a synchronization object that is signaled when it is not owned by any thread. Only one thread at a time can own a mutex. Other threads requesting the mutex will have to wait until the mutex is signaled. This article discusses the order i...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QADN,QAUQ,QAHC,QAKJ,QDJ9,QAH4,QAHB,QAJH,QBWP,QBVV,QAHO,QAGI,QAU3,QAMR,QDMW V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Mutex Wait Is FIFO But Can Be Interrupted</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 17, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q125657</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Win32 Application Programming Interface (API) included with:
<P>
<P><PRE>    - Microsoft Windows NT versions 3.5, 3.51, 4.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
A mutex is a synchronization object that is signaled when it is not owned
by any thread. Only one thread at a time can own a mutex. Other threads
requesting the mutex will have to wait until the mutex is signaled. This
article discusses the order in which threads acquire the mutex.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Threads that are blocked on a mutex are handled in a first in, first out
(FIFO) order. Therefore, the first to wait on the mutex will be the first
to receive the mutex, regardless of thread priority.
<P>
It is important to remember that Windows NT can interrupt the wait and that
this will change the order in which threads are queued. A kernel-mode
asynchronous procedure call (APC) can interrupt a user-mode thread's
execution at any time. Once the normal execution of the thread resumes, the
thread will again wait on the mutex; however, the thread is placed at the
end of the wait queue. For example, each time you enter the debugger (hit a
breakpoint, execute OutputDebugString(), and so on), all application
threads are suspended. Suspending a thread causes the thread to run a piece
of code in kernel mode. When you continue from the debugger, the threads
are resumed, causing them to resume their wait for the mutex, but possibly
in a different order than before. In this case, it does not look like the
mutex is acquired in FIFO order. Some threads may be unable to acquire the
mutex when the application in run under the debugger.
<P>
NOTE: This implementation detail is subject to change. Windows 95 and other
platforms that support the Win32 API may adopt different strategies.
<P>
Most programs do not usually need to make any assumption about this
behavior. The only class of applications that should be sensitive to mutex
claim and release throughput are real-time-class applications. If
throughput is of importance to a program, critical sections should be used
wherever possible.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbprg<BR>
KBSubcategory: BseSync<BR>
Additional reference words: 3.50 3.51 4.00 windbg ntsd<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 17, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
