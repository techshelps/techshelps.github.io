

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using RPC Callback Functions </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q96781 ">
<META NAME="KBModify" CONTENT="1995/11/02">
<META NAME="KBCreate" CONTENT="1993/03/25">
<META NAME="Keywords" CONTENT="kbnetwork">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  The standard remote procedure call (RPC) model has a server containing one or more exported function calls, and a client, which calls the server's exported functions. However, Microsoft's implementation of RPC defines callbacks as a special interfa...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGI,QARL,QAIF,QAY5,QAUD,QAB9,QAY2,QAPF,QBV8,QABB V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Using RPC Callback Functions</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 2, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q96781 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Win32 Software Development Kit (SDK), versions 3.1, 3.5,
   3.51, and 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The standard remote procedure call (RPC) model has a server containing one
or more exported function calls, and a client, which calls the server's
exported functions. However, Microsoft's implementation of RPC defines
callbacks as a special interface definition language (IDL) attribute
allowing a server to call a client function.
<P>
Callbacks can be used only in the context of a server call. Thus, a server
may call a client's callback function only when the server is performing a
client's remote procedure call (before it returns from processing). For
example:
<P>
<PRE>                CLIENT                SERVER
                ------                ------

       Client makes RPC call. ---&gt;
                                &lt;--- Server calls callback procedure.
</PRE>Client returns from callback. ---&gt;
<PRE>                                &lt;--- Server calls callback procedure.
</PRE>Client returns from callback. ---&gt;
<PRE>                                &lt;--- Server returns from original RPC call.

</PRE><h2>MORE INFORMATION</h2>
 
<P>
Callbacks are declared in the RPC .IDL file and defined in the source of
the client. The following demonstrates how callbacks are declared and
defined:
<P>
[ SAMPLE.IDL ]
[
<PRE>   uuid(9FEE4F51-0396-101A-AE4F-08002B2D0065),
   version(1.0),
   pointer_default( unique )
</PRE>]
<P>
{
<PRE> void RPCProc( [in, string] unsigned char *pszStr );
 [callback] void CallbackProc([in,string] unsigned char *pszStr);
</PRE>}
<P>
<P>
[ SAMPLEC.C (Client)]
<PRE>/*
   Callback RPC call (initiated from server, executed on client).
*/
void CallbackProc( unsigned char *pszString )
</PRE>{
<PRE>  printf("Call from server, printed on client: %s", pszStr );
</PRE>}
<P>
<P>
[ SAMPLES.C (Server)]
<PRE>/*
   "Standard" RPC call (initiated from client, executed on server).
   Makes a call to client callback procedure, CallbackProc().
*/
void RPCProc( unsigned char *pszStr )
</PRE>{
<PRE>  printf("About to call Callback() client function.."
  CallbackProc( pszStr );
  printf("Called callback function.");
</PRE>}
<P>
In the makefile for the sample, the "-ms_ext" switch must be used for the
MIDL compile. For example:
<P>
<PRE>   midl -ms_ext -cpp_cmd $(cc) -cpp_opt "-E" sample.idl
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.10 3.50 4.00 95<BR>
KBCategory: kbnetwork<BR>
KBSubcategory: NtwkRpc<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 2, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
