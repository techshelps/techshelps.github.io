

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Calculate Dialog Base Units with Non-System-Based Font </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q125681">
<META NAME="KBModify" CONTENT="1998/02/02">
<META NAME="KBCreate" CONTENT="1995/02/01">
<META NAME="Keywords" CONTENT="UsrDlgs">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  This article demonstrates how to calculate the dialog base unit for the dialog box using a font other than System Font in Windows 95. You can use this calculation to build dialog box templates in memory or calculate dialog box dimensions.  MORE INF...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QADF,QA01,QA2O,QABA,QAU4,QAJQ,QAE5,QANX,QAXD,QAY5,QAK3,QDL9,QBWO,QBWN,QAUD V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Calculate Dialog Base Units with Non-System-Based Font</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 2, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q125681</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Win32 Application Programming Interface (API) included with:
<P><PRE>    - Microsoft Windows 95
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article demonstrates how to calculate the dialog base unit for the
dialog box using a font other than System Font in Windows 95. You can use
this calculation to build dialog box templates in memory or calculate
dialog box dimensions.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Each dialog box template contains measurements that specify the position,
width, and height of the dialog box and the controls it contains. These
measurements are device independent, so an application can use a single
template to create the same dialog box for all types of display devices.
This ensures that a dialog box will have the same proportions and
appearance on all screens despite differing resolutions and aspect ratios
between screens.
<P>
Further, dialog box measurements are given in dialog base units. One
horizontal base unit is equal to one-fourth of the average character width
for the system font. One vertical base unit is equal to one-eighth of the
average character height for the system font. An application can retrieve
the number of pixels per base unit for the current display by using the
GetDialogBaseUnits function. The low-order word of the return value, from
the GetDialogBaseUnits function, contains the horizontal base units and the
high-order word of the return value, from the GetDialogBaseUnits function,
contains the vertical base units.
<P>
Using this information, you can compute the dialog base units for a dialog
box using font other than system font:
<P>
horz pixels == 2 * horz dialog units * (average char width  of dialog font
<PRE>                        / average char width of system font)
</PRE>vert pixels == 2 * vert dialog units * (average char height of dialog font
<PRE>                        / average char height of system font)

</PRE>As the font of a dialog box changes, the actual size and position of a
control also changes.
<P>
One dialog box base unit is equivalent to the number of pixels per dialog
box unit as follows:
<P>
1 horz dialog base unit == (2 * average char width  dialog font /
<PRE>                                average char width  system font) pixels
</PRE>1 vert dialog base unit == (2 * average char height dialog font /
<PRE>                                average char height system font) pixels

</PRE>Average character width and height of a font can be computed as follows:
<P>
hFontOld = SelectObject(hdc,hFont);
GetTextMetrics(hdc,&amp;tm);
GetTextExtentPoint32(hdc,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrst"
<PRE>            "uvwxyz",52,&amp;size);
</PRE>avgWidth = (size.cx/26+1)/2;
avgHeight = (WORD)tm.tmHeight;
<P>
The tmAveCharWidth field of the TEXTMETRIC structure only approximates the
actual average character width (usually it gives the width of the letter
"x") and so the true average character width must be calculated to match
the value used by the system.
<P>
You can use the MapDialogRect function to convert dialog box units into
pixels, but there is no function that will convert pixels into dialog box
<P><h2>units. You can use the formulas shown here to perform this conversion.</h2>
 
<PRE>Keywords          : UsrDlgs
Version           : WIN95
Platform          : Win95
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 2, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
