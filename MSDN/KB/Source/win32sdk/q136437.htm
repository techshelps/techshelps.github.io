

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: Win32 SDK Version 3.51 Bug List - Networking </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q136437">
<META NAME="KBModify" CONTENT="1995/09/29">
<META NAME="KBCreate" CONTENT="1995/09/07">
<META NAME="Keywords" CONTENT="kbnetwork kbbuglist">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  The following is the list of bugs in the Win32 API implemented on Windows NT 3.51 that were known at the time the product was released. This list is divided into 4 sections: LanMan API, RAS, RPC, and TCP/IP.  MORE INFORMATION  LanMan API   - NetWks...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAUD,QBVV,QAB4,QAAP,QALW,QAA3,QBWP,QANY,QAKP,QAHE,QAGI,QAH6,QAJQ,QAUJ,QARL V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: Win32 SDK Version 3.51 Bug List - Networking</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 29, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q136437</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Win32 Software Development Kit (SDK) version 3.51
</UL> 
<P>
SUMMARY
 
<P>
The following is the list of bugs in the Win32 API implemented on Windows
NT 3.51 that were known at the time the product was released. This list is
divided into 4 sections: LanMan API, RAS, RPC, and TCP/IP.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>LanMan API</h3>
 

<UL><LI>NetWkstaGetInfo returns wrong platform ID (PLATFORM_ID_OS2) for Windows
   for Workgroups.

<LI>NetGetDCName with a domain name of "." or "?" returns
   NERR_NetNotStarted. The expected error is NERR_DCNotFound.

<LI>NetUseEnum with a preferred buffer size less than 40 bytes returns
   ERROR_MORE_DATA (234) rather than NERR_BufTooSmall (2134).

<LI>NetServerEnum with a preferred buffer size less than 40 bytes returns
   ERROR_MORE_DATA (234) rather than NERR_BufTooSmall (2134).

<LI>NetScheduleJobEnum with a preferred buffer size less than 40 bytes
   return ERROR_MORE_DATA (234) rather than NERR_BufTooSmall (2134).

<LI>NetStatisticsGet remoted to downLevel OS/2 server does not work for the
   service "LanmanWorkstation." It returns error 50.

<LI>NetAccessEnum with a NULL base path generates an access violation. Use a
   null string to indicate that no base path is to be used.

<LI> The following are documentation errors:
<P>
<P><PRE>     - NetUserModals supports a level 3 structure.
</PRE><P>
<P><PRE>     - NetGroupSetUsers also supports level 1.
</PRE><P>
<P><PRE>     - NetAccessCheck is not in the header files.
</PRE><P>
<P><PRE>     - NetAuditClear parameter LPWSTR service should be marked as a
       reserved field; it must be NULL.
</PRE><P>
<P><PRE>     - NetAuditClear parameter LPWSTR Service should be marked as a
       reserved field; it must be NULL.
</PRE><P>
<P><PRE>     - NetWkstaUserSetInfo level 0 returns error 124 (invalid level), but
       the docs say that level 0 is supported.
</PRE>
<LI>NetMessageBufferSend returns error 123 (invalid computer name) if the
   FromName is not NULL or the client computer.

<LI>NetReplImportDirDel generates the following assert on a checked build:
   assert:\net\svcdlls\repl\common\impconf.c line 121. This occurs when
   an invalid directory name is used.

<LI>NetReplExportDirDel generates the following assert on a check build:
   assert:\net\svcdlls\repl\common\expconf.c line 120. This occurs when
   an invalid directory name is used.

<LI>NetMessageNameEnum returns error NERR_Sucess (0) with a zero-length
   buffer rather than NERR_BufTooSmall.

<LI>NETBIOS send datagram and broadcast datagram return NRC_SYSTEM when
   given a buffer size of 32000, not NRC_BUFLEN (invalid buffer length).

<LI>The NETBIOS send datagram is issued with a buffer size of 512 and the
   receive datagram is issued with a buffer size of 40. The receive
   datagram returns NRC_GOODRET, not NRC_INCOMP (incomplete message).

<LI>WNetEnumResource returns the wrong buffer size if the buffer is not big
   enough. WHen the buffer is NULL (size 0), the error returned is
   ERROR_NO_NETWORK.

<LI>Calling the MNet APIs results in the error "call to undefined dynalink"
   because WFWNET.DRV does not stub these APIs.

<LI>NetAccessGetInfo returns code 53  (ERROR_BAD_NETPATH) with the local
   server name.

<LI>NTVDM NetServerEnum2 with a bad domain name should return 2320.

<LI>NTVDM  NetShareGetInfo level 2 fails with error 87.

<LI>NTVDM NetShareGetInfo level 3 returns NERR_Success.

<LI>NTVDM NetUserAdd remoted to server with long name fails with error 59
   (unexpected network error).

<LI>NetServiceEnum resume handle and prefMaxLen ignored. The API allocates
   the required size and returns all information.

<LI>NetConfigGet, NetConfigGetAll, and NetConfigSet remoted to Windows NT
   should fail.

<LI>NetReplExportDirEnum ignores the suggested buffer size.

<LI>NetUseEnum with level 2 returns error 50 (not supported), not 124
   (invalid level).

<LI>NetWkstaUserSetInfo with an incorrect level returns error 87 (invalid
   parameter), not 124 (invalid level).

<LI>MS-DOS NetWkstaSetUID2 does not return 2242 NERR_PASSWORD_EXPIRED when
   Windows NT forces the user to change passwords.

<LI>NetAccessEnum level 0 returns error 234 (ERROR_MORE_DATA) when remoted
   to OS/2.

<LI>NetServerEnum resume handle resumes call at start of list. This will
   cause an infinite loop.

<LI>NetMessageNameEnum returns error 1733 (RPC_S_INVALID_TAG) with an
   incorrect info level.

<LI>NetMessageNameEnum with a resume handle and a small buffer goes into
   an infinite loop.

<LI>NetMessageNameEnum total entries is off by one on the first iteration
   if resume key is used.

<LI>NetMessageNameGetInfo returns error 1733 (RPC_S_INVALID_TAG) with an
   incorrect info level.

<LI>NetAccessGetUserPerms remoted to OS/2 works corrected, but then NET.EXE
   commands no longer work.

<LI>NetUserModalsSet with level 1007 fails with error 87 when remoted to
   OS/2.

<LI>NetMessageBufferSend fails with error 50 when remoted to OS/2.

<LI>NetShareCheck fails with error 2311 (NERR_DeviceNotShared) when remoted
   to OS/2.

<LI>NetGroupSetInfo with a bad level remote to OS/2 succeeds. It should
   return 124 (invalid level).

<LI>NetSessionEnum with a bad level remoted to OS/2 succeeds. It should
   return 124 (invalid level).

<LI>NetUserGetGroups with a bad level remoted to OS/2 succeeds. It should
   return 124 (invalid level).

<LI>NetSessionGetInfo causes assert \rpcxlate\rxapi\sessget.c line 207 if
   remoted to OS/2 with a bad info level. If you ignore the assertion,
   the error return is 2221 (user not found), not 124 (invalid level).
<P>
</UL><h3>RAS</h3>
 

<UL><LI>RasDial exhibits unexpected behaviour when used simultaneously from two
   threads of the same process.

<LI>Shutting down RAS server from command line does not warn about connected
   RAS clients and disconnects them.

<LI>RASETHER.DLL version information says it's RASTAPI.DLL, the TAPI
   compliance layer.

<LI>If a long entry is connected and RASPHONE is brought up with the phone
   book containing the long entry, then RASPHONE cannot hang up the
   connection. The error is 6 (handle is invalid).

<LI>RAS fails to establish more than 100 sessions.
<P>
</UL><h3>RPC</h3>
 

<UL><LI>When a procedure with the [notify] attribute is called, the server stub
   must also call the server manager routine proc_notify(). No code is
   generated for this.

<LI>The MIDL compiler does not generate an error when an implicit handle
   uses a type that has been defined but is not a generic handle type.

<LI>Specifying [first_is(0, ...), last_is(0, ...), size_is(1, ...)] for the
   "short (*as)" pointer gives runtime error "invalid array bounds" on the
   client side.

<LI>The MIDL compiler allows [ptr] on interface pointers.

<LI>RPC: Varying multidimensional arrays are not put on wire correctly.

<LI>[out] ref ptr doesn't work properly in MIDL -Oi mode.

<LI>Sizing comes up short on a struct with a union in MIDL.

<LI>MIDL compiler allows typedef [comm_status, fault_status] .ACF.

<LI>The handle_t * binding parameter is broken in -Os stub.

<LI>Unmarshalling 2D fixed arrays on a Mac client causes an access violation
   on a Windows NT server.

<LI>[in, out] encapsulates a union with interface pointers.

<LI>MIDL produces "warning MIDL2207: value out of range" for the following
   statement: const char HexNotationChar = '\xFF';.

<LI>MIDL does not give warning M2180 (CASE_VALUE_OUT_OF_RANGE) for the
   following code:
<P>
<P><PRE>      typedef union _small_union switch(small sm) un
      {
<PRE></PRE>         case 0:    short *ps;
         case 1:    long  *pl;
         case 256:  short   s; &lt;&lt;-- out of range for a small
         default:   char   ch;
      } small_union;

</PRE><LI>MIDL should not accept type byte in a switch.

<LI>In -Oi mode, if the first parameter is a transmit_as parameter, and the
   presented type is smaller than 32 bits, then the top of stack pointer
   passed to the interpreter is incorrect.

<LI> MIDL allows multiple types mapped to the same user_marshal type.

<LI>If the following output switches are given on a non-object interface
   (where these files aren't generated), a warning should be produced.
<P>
<P><PRE>      /dlldata filename
      /iid filename
      /proxy filename
      /sstub filename
</PRE>
<LI>MIDL allows a generic handle with [handle] specified twice.

<LI>The following code causes error MIDL2235: [implicit_handle] references
   a type which is not a handle : [Interface 'implicit']
<P>
<P><PRE>      // In IDL
</PRE><P>
<P><PRE>      typedef  handle_t  PRIMITIVE;
</PRE><P>
<P><PRE>      // In ACF
</PRE><P>
<P><PRE>      [  implicit_handle( PRIMITIVE  long_binding_handle )
      ]  interface implicit
</PRE>
<LI>MIDL accepts byte_count on an [in, out] pointer.

<LI>MIDL should generate STDMETHODIMP instead of __stdcall so that the .h
   files can be used on the Mac.

<LI>MS-DOS RPC install does not list Windows TCP/IP as an option.

<LI>RpcNsBindingImportNext has a small memory leak.

<LI>RpcEpRegister and RpcEpRegisterNoReplace behave differently from the OSF
   DCE spec in two ways:
<P>
<P><PRE>    - When replacing an entry in the endpoint map, the annotation
      string should replace the existing annotation string.
</PRE><P>
<P><PRE>    - When an annotation string greater than 64 characters wide is
      supplied, the DCE spec specifies that it is truncated. The functions
      currently return EPT_S_INVALID_ENTRY.
</PRE>
<LI>RpcBindingServerFromClient with ncalrpc fails with an object uuid.

<LI>In connection oriented RPC, the cancel packet does not have the call_id
   field set.

<LI>RpcServerRegisterAuthInfo with RPC_C_AUTHN_DEFAULT should load the
   default provider specified in the registry.

<LI>With an HPUX server, a Windows NT client and protocol ncadg_ip_udp,
   all calls raise exception RPC_S_SERVER_UNAVAILABLE.

<LI>RpcBindingInqObject() does not take 0 as binding handle.

<LI>RPC cancel support does not work on all platforms and transports.
   Cancels are supported only with Windows NT clients and transports
   ncacn_ip_tcp and ncacn_spx.

<LI>Client obtains binding from CDS using RpcNsBindingImport routines and
   calls RpcNsBindingInqEntryName with parameter RPC_C_NS_SYNTAX_DEFAULT.
   The routine returns error 1736 (invalid syntax). This occurs only if
   the DCE CDS locator is used.

<LI>RPC_C_BINDING_MAX_COUNT_DEFAULT is documented, but not supported yet.

<LI>When a fully bound handle that does not represent something registered
   in with EPT, a NULL object uuid, and a NULL host binding handle are
   supplied to rpc_ep_unregister, the routine returns rpc_s_ok instead of
   ept_s_cant_perform.

<LI>Possible Deadlock due to TCP/IP thread waiting forever when server has
   crashed.

<LI>Auto handles in Win16 DLL cause stranded runtime DLLs.

<LI>When rpc_object_inq_type is passed a null uuid as the object uuid, RPC
   returns status 1710 (object uuid not found), instead of returning the
   null type uuid (which is the default mapping for the null object uuid).

<LI>RPC_C_PROFILE_DEFAULT_ELT is defined as 0 in rpcnsi.h, but it is
   defined as 1 by DCE. As a result, rpc_ns_profile_elt_inq_begin, next,
   and done do not work with nsid on DCE machines.

<LI>Win16 NetBIOS method of obtaining NIC addresses for UUID generation
   does not check LANAs greater than 4.

<LI>Win16 NotifyRegister callback is owned by the currently running
   task, therefore, it is cleaned up at task exit. This causes trouble if
   multiple RPC apps start up and the first to start is not the last to
   exit.

<LI>RPC name resolution on slow IPX MS-DOS clients may fail if the Novell
   server is not available.

<LI>RpcServerInqBindings only returns information for a net card.
<P>
</UL><h3>TCP/IP</h3>
 

<UL><LI>When resolving a name that is not in the hosts file, if DNS is not
   configured, gethostbyname fails to go to netbt if the first interface
   in the machine can not resolve the name.

<LI>Cannot establish trust when DNS for Windows Name Resolution is on.

<LI>NBTSTAT only reports info for first adapter.

<LI>Some IRPs passed from NetBT to TCP have a stack frame of 1.

<LI>If the Domain name is changed on the DHCP server, it is not picked up
   by NetBT until the clients are rebooted.

<LI>FIND NAME fails on multihome machines.

<LI>Multicast address not removed on IP_DROP_MEMBERSHIP.

<LI>Multiple proxys on same subnet cause client connect problems.

<LI>When the SNMP service is started with debug level 2 or greater, it
   prints the error message "error on GetProc(InitEx) 127".

<LI>SetService causes access violation when SrvInfo is unitialized.

<LI>SetService should return -1 for SERVICE_FLAG_HARD with dwOperation
   SERVICE_ADD_TYPE.

<LI>SetService() should not allow SERVICE_FLAG_HARD|SERVICE_FLAG_DEFER
   with SERVICE_REGISTER or SERVICE_DEREGISTER.

<LI>SetService should fail when you register the same service again.

<LI>Debugger does not free socket descriptors after application faults and
   causes the debugger to attach to the running process.

<LI>A race condition occurs when two threads share a socket. One thread
   closes a socket and the other thread tries to do a recvfrom on the
   socket. This causes problems the next time a socket is bound to the same
   UDP port.
<P></UL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words:<BR>
KBCategory: kbnetwork kbbuglist<BR>
KBSubcategory: NtwkMisc<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 29, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
