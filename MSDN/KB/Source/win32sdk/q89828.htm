

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INFO: Do Not Forward DDEML Messages from a Hook Procedure </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q89828 ">
<META NAME="KBModify" CONTENT="1998/01/12">
<META NAME="KBCreate" CONTENT="1992/09/30">
<META NAME="Keywords" CONTENT="UsrDde">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  If an application for Windows uses the Dynamic Data Exchange Management Library (DDEML) in addition to a message hook [for example, by calling SetWindowsHook() or SetWindowsHookEx()], it is possible that your hook procedure will receive messages th...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAEV,QAUD,QDL9,QBWO,QBWN,QAYC,QAY5,QAB9,QALQ,QAH4,QABI,QBUG,QBUF,QAX0,QAKJ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INFO: Do Not Forward DDEML Messages from a Hook Procedure</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 12, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q89828 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) version 3.1
<LI>Microsoft Win32 Application Programming Interface (API) included with:
   - Microsoft Windows NT versions 3.5, 3.51
   - Microsoft Windows 95
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
If an application for Windows uses the Dynamic Data Exchange Management
Library (DDEML) in addition to a message hook [for example, by calling
SetWindowsHook() or SetWindowsHookEx()], it is possible that your hook
procedure will receive messages that are intended for the DDEML libraries.
<P>
For the DDEML libraries to work properly, you must make sure that your hook
function does not forward on any messages that are intended for the DDEML
libraries.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
If your hook procedure receives a code of type MSGF_DDEMGR, you should
return FALSE instead of calling the CallNextHookEx() function.
<P>
Use the following code to handle this situation:
<P>
<PRE>   // This needs to be defined if you haven't already.
   #ifndef MSGF_DDEMGR
   #define MSGF_DDEMGR             0x8001
   #endif

   if (MSGF_DDEMGR == code)
      return FALSE;
   else
   {
   ...
   }

</PRE>In cases where the callback function processes the message, it should
return TRUE.
<P>
Note, however, how the message filter function is called from within DDEML:
<P>
<PRE>   while (TimeOutHasntExpired) {
       GetMesage (&amp;msg, (HWND)NULL, 0, 0);
       if ( !CallMsgFilter (&amp;msg, MSGF_DDEMGR))
            DispatchMessage (&amp;msg);
    }

</PRE>Given this, a callback function that just returns would cause the
CallMsgFilter() call above to return TRUE, and never dispatch the message.
This inevitably causes an infinite loop in the application, because
GetMessage() ends up retrieving the same message over and over, without
dispatching it to the appropriate window for processing.
<P>
Therefore, a callback function that processes the message may not just
return TRUE, but should also translate and dispatch messages appropriately.
<P>
The Windows 3.1 SDK's DDEMLCL sample demonstrates how to do this correctly
in its MessageFilterProc() found in DDEMLCL.C:
<P>
<PRE>   if (nCode == MSGF_DDEMGR) {

   /*
   * If a keyboard message is for MDI, let MDI client take care of it.
   * Otherwise, check to see if it is a normal accelerator key.
   * Otherwise, just handle the message as usual.
   */

       if ( !TranslateMDISysAccel (hWndMDIClient, lpmsg) &amp;&amp;
             !TranslateAccelerator (hWndFrame, hAccel, lpmsg))  {
             TranslateMessage (lpmsg);
             DispatchMessage (lpmsg);
         }
        return 1;
    }

</PRE>For more information about message hooks and DDEML, please see the
above mentioned functions in the Windows SDK manual or the online help
facility.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 3.00<BR>
Keywords          : UsrDde<BR>
Platform          : Win95 WINDOWS winnt<BR>
Issue type        : kbinfo<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 12, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
