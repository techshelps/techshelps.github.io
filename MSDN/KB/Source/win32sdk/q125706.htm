

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Customizing the FileOpen Common Dialog in Windows 95 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q125706">
<META NAME="KBModify" CONTENT="1997/01/21">
<META NAME="KBCreate" CONTENT="1995/02/01">
<META NAME="Keywords" CONTENT="kbui kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  In Windows version 3.x, customizing the FileOpen common dialog meant providing a special hook function, and in most cases, a custom dialog box template. This custom dialog box template is created by modifying the standard FileOpen dialog box templa...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA01,QA7O,QABB,QAOE,QAMN,QAB5,QBBI,QA36,QDL9,QBWO,QBWN,QABA,QBWQ,QANX,QAG4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Customizing the FileOpen Common Dialog in Windows 95</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 21, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q125706</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Win32 Application Programming Interface (API) included with:
<P>
<P><PRE>    - Microsoft Windows 95 version 4.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Windows version 3.x, customizing the FileOpen common dialog meant
providing a special hook function, and in most cases, a custom dialog box
template. This custom dialog box template is created by modifying the
standard FileOpen dialog box template used by COMMDLG that was
made available as part of the Windows version 3.1 SDK.
<P>
In Windows 95, the new dialog box templates will no longer be made
available for modification. Instead, an application should provide a dialog
template that includes only the items to be added to the standard dialog
box. COMMDLG will then create this dialog as a child of the standard dialog
box. Because it is a child, it must have the WS_CHILD style set.
<P>
Note that the Windows version 3.1 method of customizing common dialogs by
modifying the dialog templates will still work for 16-bit applications.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Follow these steps to customize the FileOpen common dialog in Windows 95:

<OL><P><LI>Create a dialog box template that will have all the controls you
   want to add to the FileOpen common dialog. Be sure to specify the
   styles:
<P>
<P><PRE>      WS_CHILD | WS_VISIBLE | DS_3DLOOK | DS_CONTROL | WS_CLIPSIBLINGS
</PRE><P>
   WS_CHILD is specified because without it, the call to GetOpenFileName()
   fails. COMMDLG creates the dialog specified as a child of the standard
   FileOpen common dialog box. As a result, the hDlg passed to the
   application's hook function will be the child of the standard
   FileOpen dialog box. To get a handle to the standard dialog box from
   the hook function, call GetParent (hDlg).
<P>
   WS_CLIPSIBLINGS is specified so that overlapping controls paint
   properly.
<P>
   DS_3DLOOK is a new style for Windows 95 that gives the dialog box
   a non-bold font, and gives all the controls the 3D look.
<P>
   DS_CONTROL is another new style that among other things allows the
   user to tab between the controls of a dialog box to the controls
   of a child dialog box. As mentioned above, the dialog template will
   be created as a child of the standard FileOpen common dialog box,
   so specifying this style will allow tabbing from the application-defined
   controls to the standard controls.

<P><LI>Include a static control in your dialog template, specifying a control
   ID of stc32. This control will serve as a place holder for the standard
   controls. Be sure to use the #include directive to include DLGS.H in
   your .RC file through the Read-Only Symbol Directives, as stc32 is
   defined in &lt;dlgs&gt;.
<P>
   NOTE: Do not type in the ID name. Rather, select it from the list of IDs
   in the dropdown combo box. Doing so otherwise may result in warning
   messages on stc32 redefinition (It will still work). If the stc32 symbol
   does not appear in the combo box, the resource editor needs to be
   reloaded. This can be done by opening the .rc file as a text, and then
   closing the text file and opening the resource view again.
<P>
   If there is no stc32 control specified, COMMDLG places all the new
   controls defined in your dialog template below the standard controls and
   looks at the size of the static control to attempt to fit all the
   standard controls in it. If it is not big enough, COMMDLG resizes this
   stc32 control to make room for the standard controls, and then
   repositions the new controls with respect to the resized stc32 control.

<P><LI>Initialize the Flags member of the OPENFILENAME structure to include
<P><PRE>    the following flags:
</PRE><P>
<P><PRE>      OFN_EXPLORER | OFN_ENABLETEMPLATE | OFN_ENABLEHOOK
</PRE><P>
   OFN_ENABLETEMPLATEHANDLE may be used instead of OFN_ENABLETEMPLATE if
   you want to specify a handle to a memory block containing a preloaded
   dialog box template.

<P><LI>If the OFN_ENABLETEMPLATE flag is set, specify the name of your
   application-defined template in the lpTemplateName field of the
   OPENFILENAME structure, and specify your application's instance handle
   in the hInstance field.
<P>
   If the OFN_ENABLETEMPLATEHANDLE flag is set, specify the handle to the
   memory block containing your dialog box template in the hInstance field
   of the OPENFILENAME structure.

<P><LI>Specify the address of a dialog box procedure associated with your
   dialog box in the lpfnHook field of the OPENFILENAME structure.

<P><LI>Process appropriate notifications and messages as a result of adding
   new controls.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
Much of the information contained in this article is derived from the
MSDN Technical Article entitled "Using the Common Dialogs Under Windows
95." Please refer to that article for more information.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbui kbhowto<BR>
KBSubcategory: UsrCmnDlg<BR>
Additional reference words: 4.00
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 21, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
