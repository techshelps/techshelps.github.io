

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SAMPLE: How to Use File Associations </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q122787">
<META NAME="KBModify" CONTENT="1996/08/05">
<META NAME="KBCreate" CONTENT="1994/11/13">
<META NAME="Keywords" CONTENT="kbui kbfile kbwebcontent">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  Windows provides file associations so that an application can register the type of documents it supports. The benefit of doing this is that it allows the user to double-click or select a document in File Manager to edit or print it. File associatio...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAOX,QAJH,QBWS,QBIC,QAZ2,QAGU,QAPN,QA6A,QBV8,QAB9,QAPF,QBXS,QBWD,QAUJ,QAH5 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>SAMPLE: How to Use File Associations</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 5, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q122787</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) versions 3.1

<LI>Microsoft Win32 Application Programming Interface (API) included with:
<P>
<P><PRE>    - Microsoft Windows NT versions 3.1 and 3.5
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Windows provides file associations so that an application can register the
type of documents it supports. The benefit of doing this is that it allows
the user to double-click or select a document in File Manager to edit or
print it. File association is also supported by the ShellExecute() API.
File associations also allow the user to open multiple documents with a
single instance of the application via the File Manager.
<P>
ShellExecute() has even more benefit in Windows 95.
<P>
The sample FILEASSO.EXE demonstrates how to use file associations. Download
FILEASSO.EXE, a self-extracting file, from the Microsoft Software Library
(MSL) on the following services:

<UL><LI>Microsoft Download Service (MSDL)
<P><PRE>      Dial (206) 936-6735 to connect to MSDL
      Download <A HREF="http://support.microsoft.com/download/support/mslfiles/FILEASSO.EXE">FILEASSO.EXE</A> <I>(size: 40993 bytes)</I> 
</PRE>
<LI>Internet (anonymous FTP)
<P><PRE>      ftp ftp.microsoft.com
      Change to the SOFTLIB\MSLFILES directory
      Get <A HREF="http://support.microsoft.com/download/support/mslfiles/FILEASSO.EXE">FILEASSO.EXE</A> <I>(size: 40993 bytes)</I> 
</PRE><P>
</UL><h2>MORE INFORMATION</h2>
 
<P>
The following information applies to both File Open and File Print. For
ease of reading, this article will discuss File Open to explain how File
Associations work.
<P>
When the user double-clicks a document, the File Manager calls
ShellExecute() with filename. ShellExecute() checks the Registration
Database for an entry that associates that file extension with a particular
application. If an entry exists and does not specify DDE commands, then
ShellExecute() launches the application as specified in the registry. If
the registry specifies to use DDE commands, ShellExecute() attempts to
establish a DDE conversation with that application using the application
topic. If an application responds to the DDE connections, ShellExecute()
sends a DDE Execute command, as specified in the registry. It is up to the
application to define the specifics on this conversation, particularly the
service and topic name to connect to, and also the correct DDE execute
command syntax to use. However, if attempts to establish the conversation
fail, ShellExecute() launches the application specified in the regiistry
and tries to establish the DDE connection again.
<P>
There is one more option available when the application is not running,
which seems to be appropriate for File Print. In this option,
ShellExecute() sends a different Execute statement, the application needs
to Open and Print the document. When the Printing is done, it exits.
<P>
There are two steps for an application to open multiple documents through
single application instance via File association. As an example, assume
MyApp is the application and AssocSupport is the topic. Most applications
use MyApp as their application name and System as the topic.

<OL><P><LI>When the application starts, register a DDE Server with the
   application name and topic (for example MyApp, and AssocSupport).
   The application also has to support DDE Execute Statements. The
   execute statement could be any format; at minimum, it should be:
<P>
<P><PRE>      &lt;Action&gt; &lt;fileName&gt; &lt;options&gt;
</PRE><P>
   Here &lt;Action&gt; is anything specifying unique identification of the
   action, such as Open or Print. The &lt;fileName&gt; is the file that should be
   operated on. Finally, &lt;options&gt; can be any options that need to be
   passed on.
<P>
   A typical Execute Statement follows this format:
<P>
<P><PRE>      [&lt;Action&gt;(&lt;FileName&gt;)]
</PRE><P>
   For example, Microsoft Word uses:
<P>
<P><PRE>      [Open("%1")]
</PRE><P>
   The Application has to support the required functionality for executed
   statements.

<P><LI>File association can be done in Windows NT via File Manager or regedit.
<P>
</OL><h3>Using the File Manager to Set File Associations</h3>
 
<P>
When associating a file type using the File Manager, choose Associate from
the File menu. The Associate dialog presents the list of existing file
associations. This dialog allows you to add a new file type (or file
association), modify an existing file type, or delete an existing file
type. The New File Type button allows the user to add an association for a
new file extension. Here are the steps:

<OL><P><LI>Add a File type name. For example, name it "Microsoft Word 6.0
   Document."

<P><LI>Choose an action (Open or Print). For example, select the Uses DDE
   check box.

<P><LI>Add the directory path and application name. For example, enter
   WINWORD as the application.

<P><LI>Select the option Uses DDE.

<P><LI>Set the Application as the DDE Server Name.

<P><LI>Set the Topic as the DDE Server. For example enter System as the
   Topic.

<P><LI>Set the DDE Message &lt;Action&gt; &lt;fileName&gt; &lt;options&gt; to be the same as
   your application's Execute Statement. However the &lt;fileName&gt; and
   &lt;options&gt; should be replaced by whatever the command line arguments
   are. For example use:
<P>
<P><PRE>      DDE Message : [FileOpen("%1")]
</PRE><P>
</OL><h3>Using Regedit in Windows NT to Set File Associations</h3>
 
<P>
NOTE: Regedit is available only in Windows NT, not in Windows version 3.1.
<P>
The user can also associate files with an application by using regedit.
From the Edit menu, choose Add File Type or Modify File Type (to modify an
existing file type). A dialog similar to File Manager Associate dialog
appears. Follow the same steps as described for File Manager. In Windows
version 3.1, once you have defined a File Type via this method, go to the
File Manager associate dialog and attach the file type to the extension.
<P>
<P><h3>Using a Program to Set File Assoications</h3>
 
<P>
You can also set the associations programmatically. This is useful when
setting up your application on other machines. You would provide this
functionality through your installation program. The first way to do this
(the simplier method) is to use regedit to merge the changes from a file.
The syntax for this is:
<P>
<PRE>   regedit &lt;filename&gt;.reg

</PRE></OL>An example of a &lt;filename&gt;.reg is:
<P>
<PRE>   REGEDIT
   HKEY_CLASSES_ROOT\.riy = FMA000_File_assoc
   HKEY_CLASSES_ROOT\FMA000_File_assoc = File_assoc
   HKEY_CLASSES_ROOT\FMA000_File_assoc\shell\open\command = fileasso.EXE
   HKEY_CLASSES_ROOT\FMA000_File_assoc\shell\open\ddeexec = [Open(%1)]
   HKEY_CLASSES_ROOT\FMA000_File_assoc\shell\open\ddeexec\application
</PRE>= Myserver
<PRE>   HKEY_CLASSES_ROOT\FMA000_File_assoc\shell\open\ddeexec\topic = system
   HKEY_CLASSES_ROOT\FMA000_File_assoc\shell\print\command = fileasso.EXE
   HKEY_CLASSES_ROOT\FMA000_File_assoc\shell\print\ddeexec = [Open(%1)]

</PRE>HKEY_CLASSES_ROOT\FMA000_File_assoc\shell\print\ddeexec\application =
MYServer
<PRE>   HKEY_CLASSES_ROOT\FMA000_File_assoc\shell\print\ddeexec\topic = System
   HKEY_CLASSES_ROOT\FMA000_File_assoc\shell\print\ddeexec\ifexec =
</PRE>[Test(%1)
]
<P>
In the program, you can also add keys to the registry by using the registry
APIs. The developer needs to add the following keys to the registration
database:
<P>
<PRE>   // Your extensions.
   HKEY_CLASSES_ROOT\.riy = FMA000_File_assoc

   //File type name.
   HKEY_CLASSES_ROOT\FMA000_File_assoc = File_assoc

   // Command to execute when application is not running or dde is not
   // present and Open command is issued.
   HKEY_CLASSES_ROOT\FMA000_File_assoc\shell\open\command = fileasso.EXE

   // DDE execute statement for Open.
   HKEY_CLASSES_ROOT\FMA000_File_assoc\shell\open\ddeexec = [Open(%1)]

   // The server name your application responds to.
   HKEY_CLASSES_ROOT\FMA000_File_assoc\shell\open\ddeexec\application =
   Myserver

   // Topic name your application responds to.
   HKEY_CLASSES_ROOT\FMA000_File_assoc\shell\open\ddeexec\topic = system

   // Command to execute when application is not running or dde is not
   // present and print command is issued.
   HKEY_CLASSES_ROOT\FMA000_File_assoc\shell\print\command = fileasso.EXE

   // DDE execute statement for Print.
   HKEY_CLASSES_ROOT\FMA000_File_assoc\shell\print\ddeexec = [Open(%1)]

   // The server name your application responds to.
   HKEY_CLASSES_ROOT\FMA000_File_assoc\shell\print\ddeexec\application =
   MYServer

   // Topic name your application responds to.
   HKEY_CLASSES_ROOT\FMA000_File assoc\shell\print\ddeexec\topic = System

   // DDE execute statement for print if the application is not already
   // running. This gives the options for a an application to Run, Print
   // and Exit.
   HKEY_CLASSES_ROOT\FMA000_File assoc\shell\print\ddeexec\ifexec =
   [Test(%1)]

</PRE><h2>REFERENCES</h2>
 
<P>
Windows SDK Programmers Reference, Volume 1, chapter 7, Shell Library or
Books Online.
<P>
Window 3.1 SDK Help file, Registration Database, Shell Library Functions.
<P>
Win32 Programmers Reference, Volume 2, chapter 52, Registry and
Initialization Files or Books Online.
<P>
Win32 SDK Help file Registry and Initialization
<P>
File Manager Help File.
<P>
REGEDIT.HLP
<P>
REGEDT32.HLP
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.10 3.50<BR>
KBCategory: kbui kbfile kbwebcontent<BR>
KBSubcategory: UsrMisc<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 5, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
