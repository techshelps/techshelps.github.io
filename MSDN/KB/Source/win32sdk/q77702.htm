

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Processing WM_PALETTECHANGED and WM_QUERYNEWPALETTE </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q77702 ">
<META NAME="KBModify" CONTENT="1997/08/13">
<META NAME="KBCreate" CONTENT="1991/10/23">
<META NAME="Keywords" CONTENT="GdiPal kbgraphic kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  An application that manipulates the system palette should process the WM_PALETTECHANGED and WM_QUERYNEWPALETTE messages to maintain its appearance during system palette and input focus changes.  MORE INFORMATION  The WM_PALETTECHANGED message infor...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPG,QAEV,QDL9,QBWO,QBWN,QADO,QAUD,QAYC,QBWQ,QAGQ,QAXB,QARL,QAMV,QAG9,QAC1 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Processing WM_PALETTECHANGED and WM_QUERYNEWPALETTE</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 13, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q77702 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   versions 3.1 and 3.0

<LI>Microsoft Win32 Application Programming Interface (API) included with:
<P>
<P><PRE>    - Microsoft Windows NT versions 3.5 and 3.51
    - Microsoft Windows 95 version 4.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
An application that manipulates the system palette should process the
WM_PALETTECHANGED and WM_QUERYNEWPALETTE messages to maintain its
appearance during system palette and input focus changes.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The WM_PALETTECHANGED message informs all windows that the window with
input focus has realized its logical palette, thereby changing the
system palette. This message allows a window without input focus that
uses a color palette to realize its logical palettes and update its
client area.
<P>
This message is sent to all windows, including the one that changed
the system palette and caused this message to be sent. The wParam of
this message contains the handle of the window that caused the system
palette to change. To avoid an infinite loop, care must be taken to
check that the wParam of this message does not match the window's
handle. The following sample code demonstrates how to process
WM_PALETTECHANGED:
<P>
<PRE>    case WM_PALETTECHANGED:
        {
        HDC hDC;           // Handle to device context
        HPALETTE hOldPal;  // Handle to previous logical palette

        // If this application did not change the palette, select
        // and realize this application's palette
        if (wParam != hWnd)
           {
           // Need the window's DC for SelectPalette/RealizePalette
           hDC = GetDC(hWnd);

           // Select and realize hPalette
           hOldPal = SelectPalette(hDC, hPalette, FALSE);
           RealizePalette(hDC);

           // When updating the colors for an inactive window,
           // UpdateColors can be called because it is faster than
           // redrawing the client area (even though the results are
           // not as good)
           UpdateColors(hDC);

           // Clean up
           if (hOldPal)
              SelectPalette(hDC, hOldPal, FALSE);
           ReleaseDC(hWnd, hDC);
           }
        }
        break;

</PRE>NOTE: The WM_PALETTECHANGED message is sent to all top-level and
overlapped windows; therefore, if any child window uses a color
palette, this message must be passed on to it.
<P>
The WM_QUERYNEWPALETTE message informs a window that it is about to
receive input focus. In response, the window receiving focus should
realize its palette as a foreground palette and update its client
area. If the window realizes its palette, it should return TRUE;
otherwise, it should return FALSE. The following sample code
demonstrates processing WM_QUERYNEWPALETTE:
<P>
<PRE>    case WM_QUERYNEWPALETTE:
        {
        HDC hDC;           // Handle to device context
        HPALETTE hOldPal;  // Handle to previous logical palette

        // Need the window's DC for SelectPalette/RealizePalette
        hDC = GetDC(hWnd);

        // Select and realize hPalette
        hOldPal = SelectPalette(hDC, hPalette, FALSE);
        RealizePalette(hDC);

        // Redraw the entire client area
        InvalidateRect(hWnd, NULL, TRUE);
        UpdateWindow(hWnd);

        // Clean up
        if (hOldPal)
           SelectPalette(hDC, hOldPal, FALSE);
        ReleaseDC(hWnd, hDC);

        // Message processed, return TRUE
        return TRUE;
        }

</PRE>NOTE: The WM_QUERYNEWPALETTE message is sent to all top-level and
overlapped windows; therefore, if any child window uses a color
palette, this message must be passed on to it.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 95<BR>
Keywords          : GdiPal kbgraphic kbhowto<BR>
Version           : WIN: 3.0, 3.1, 4.0; NT 3.50, 3.51<BR>
Platform          : NT WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 13, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
