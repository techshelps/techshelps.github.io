

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: Socket Inheritance in Windows 95 and Windows NT 3.51 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q150523">
<META NAME="KBModify" CONTENT="1996/05/02">
<META NAME="KBCreate" CONTENT="1996/05/01">
<META NAME="Keywords" CONTENT="kbnetwork kbbuglist kbcode">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  Windows 95 does not treat inheritance of Winsock socket handles in the same manner as Windows NT. This article summarises the difference between the two operating systems.  STATUS ======  Microsoft has confirmed this to be a bug in the Microsoft pr...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWP,QDL9,QBWQ,QBWN,QBWO,QABB,QAH4,QAD7,QAUD,QAH7,QAH6,QABA,QALW,QARL,QAHE V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: Socket Inheritance in Windows 95 and Windows NT 3.51</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  May 2, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q150523</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Win32 Software Development Kit (SDK) for
   Windows NT version 3.51 and Windows 95
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Windows 95 does not treat inheritance of Winsock socket handles in the same
manner as Windows NT. This article summarises the difference between the
two operating systems.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. We are reasearching this problem and will
post new information here in the Microsoft Knowledge Base as it becomes
available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
On Windows NT, socket handles are inheritable by default. This feature is
often used by a process that wants to spawn a child process and have the
child process interact with the remote application on the other end of the
connection.
<P>
It is also common practice on Windows NT to set the standard handles
(standard input, output, or error) of the child process to the socket
handle. In such cases, the child process usually does not know that its
standard handles are actually sockets.
<P>
Windows 95 differs from Windows NT in the following manner:

<UL><LI>Socket handles are not inheritable when created. To ensure that a child
   process can obtain and use a socket handle created in the parent, the
   handle must be explicitly duplicated using the Win32 API
   DuplicateHandle. Set the bInheritHandle parameter of the API to TRUE.

<LI>Socket handles cannot be set to the standard handles of the child
   process. A programmer may use other mechanisms to pass the socket handle
   to the client, such as passing the handle values as command line
   arguments so that the child process can simply look at its argument
   vector.
<P>
</UL>The following segment of code illustrates how to write applications that
will inherit sockets in child processes on both Windows 95 and Windows NT.
Please note that this is 32-bit code only. 16-bit applications cannot
inherit socket handles.
<P>
<P><h3>Code Sample</h3>
 
<P>
<PRE>   // This is a Winsock server that is listening on a port

   // When a client connects, the server spawns a child process and
   // passes the socket handle to the child.
   // The child can use this socket handle to interact with the
   // client and the parent is free to go back to waiting for
   // other clients to connect.

   OrigSock=accept(listen_socket,(struct sockaddr *)&amp;from,&amp;fromlen);

   if (OrigSock == INVALID_SOCKET)  {
      fprintf(stderr,"accept failed %d\n",GetLastError());
      return -1;
   }
   {
      STARTUPINFO si;
      PROCESS_INFORMATION pi;
      char argbuf[256];

      memset(&amp;si,0,sizeof(si));

      //
      // Duplicate the socket OrigSock to create an inheritable copy.
      //
      if (!DuplicateHandle(GetCurrentProcess(),
            (HANDLE)OrigSock,
            GetCurrentProcess(),
            (HANDLE*)&amp;DuplicateSock,
            0,
            TRUE, // Inheritable
            DUPLICATE_SAME_ACCESS)) {

         fprintf(stderr,"dup error %d\n",GetLastError());
         return -1;
      }
      //
      // Spawn the child process.
      // The first command line argument (argv[1])  is the socket handle
      //

      wsprintf(argbuf,"child.exe %d",DuplicateSock);
      if (!CreateProcess(NULL,argbuf,NULL,NULL,
               TRUE, // inherit handles
               0,NULL,NULL,&amp;si,&amp;pi) ){
         fprintf(stderr,"createprocess failed %d\n",GetLastError());
         return -1;
      }

   }
   //
   // The parent must close both copies of the socket handles.
   //
   closesocket(OrigSock);
   closesocket(DuplicateSock);

</PRE>The following segment of code illustrate how the newly created process
would then extract the socket handle from its command line.
<P>
<PRE>   main(int argc, char *argv[]){
      SOCKET Sock;

      /* WSAStartup etc. */
      if (2 == argc){
         Sock = atoi(argv[1]);   // use Sock
      }
   }
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00<BR>
KBCategory: kbnetwork kbbuglist kbcode<BR>
KBSubcategory: NtwkMisc
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  May 2, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
