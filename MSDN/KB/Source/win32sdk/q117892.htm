

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Memory Requirements for a Win32 App vs. the Win16 Version </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q117892">
<META NAME="KBModify" CONTENT="1996/12/20">
<META NAME="KBCreate" CONTENT="1994/07/13">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  A Win32 port of a Windows-based application generally requires more virtual memory than the original Windows-based application. However, it is possible for the Win32 version of the application to have a smaller working set. The working set is the c...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBW6,QAJH,QBXS,QBW5,QABA,QBWS,QALM,QAC2,QDL9,QBWO,QBWN,QAYV,QAX6,QAMN,QAKC V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Memory Requirements for a Win32 App vs. the Win16 Version</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 20, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q117892</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Win32 Application Programming Interface (API) included with:
<P>
<P><PRE>    - Microsoft Windows NT versions 3.1, 3.5, 3.51, 4.0
    - Microsoft Windows 95 version 4.0
    - Microsoft Win32s versions 1.1, 1.15, and 1.2
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
A Win32 port of a Windows-based application generally requires more virtual
memory than the original Windows-based application. However, it is possible
for the Win32 version of the application to have a smaller working set. The
working set is the certain number of pages that the virtual memory manager
must keep in memory for a process to execute efficiently. If you lower the
working set of an application, it will use less RAM.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
It can appear that the Win32-based version of an application running on
Win32s requires more RAM than the Windows-based version of the application
running on the same machine. This is because segments of a Windows-based
application are loaded only as they are referenced, while the address space
is reserved for the Win32-based application and its DLLs (dynamic-link
libraries) at program load. Therefore, the memory count that is displayed
by many "About" boxes is misleading: for the Windows-based application, the
free memory reported is reduced by the number of segments actually loaded;
for the Win32-based application, the free memory reported is reduced by the
total address space required. However, this free memory represents only the
virtual address space that all applications share, not the amount of RAM
actually used.
<P>
You can use WMem to determine the address space used, the number of
physical pages of RAM used, and to get an estimate of the working set. On a
machine that has enough RAM to load the whole application without swapping,
run only Program Manager and WMem. Use SHIFT+double-click in WMem and write
down the available physical memory. Activate the application and use
SHIFT+double-click again. The difference between the available physical
memory before and after activating the application is a rough estimate of
the working set. Test your application further and see how the working set
changes during execution.
<P>
The working set of a Win32-based application can be decreased 30 percent or
more with the use of the Working Set Tuner, included in the Win32 SDK.
However, a Win32-based application may fail to load on Win32s even if its
working set is significantly smaller than the free RAM (for example, 100K
working set versus 1 megabyte free RAM). The entire application, DLLs
included, must be mapped into the virtual address space.
<P>
The virtual memory size is set by the system at boot time, based on several
factors. RAM is one factor, free disk space is another. The system must be
able to allocate enough space for the swap file on disk. Windows, by
default, allows the size of the swap file to be a maximum of 4 times larger
than available RAM. This constant (4) can be modified by setting
PageOverCommit in the 386enh section of the SYSTEM.INI file. Valid settings
are between 1 and 20. Setting PageOverCommit to a value larger than 4 will
result in less efficient usage of resources and slower execution, but it
will allow you to run applications that otherwise are not able to run.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbprg<BR>
KBSubcategory: BseMm<BR>
Additional reference words: 1.10 1.20 3.10 3.50 4.00 95 ProgMan<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 20, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
