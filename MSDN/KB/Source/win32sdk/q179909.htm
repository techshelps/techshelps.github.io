

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Change the Background Color of a Tab Control </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q179909">
<META NAME="KBModify" CONTENT="1998/01/29">
<META NAME="KBCreate" CONTENT="1998/01/26">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  This article demonstrates how to change the background color of each tab in a Tab control. It assumes that you have a dialog box and have selected and sized a Tab control into the dialog using the Resource Editor.  MORE INFORMATION  To change the b...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAG9,QAGX,QAOE,QA7O,QAMN,QAB5,QARP,QAFV,QDL9,QBWO,QBWN,QA01,QAPN,QAHE,QAGI V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Change the Background Color of a Tab Control</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 29, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q179909</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK)
   on the following platforms:
<P><PRE>    - Microsoft Windows 95
    - Microsoft Windows NT 4.0
</PRE><LI>Microsoft Visual Studio versions 97, 97sp1, 97sp2
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article demonstrates how to change the background color of each tab in
a Tab control. It assumes that you have a dialog box and have selected and
sized a Tab control into the dialog using the Resource Editor.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To change the background color of each tab you must make the Tab control
owner draw and use the FillRect() method to fill the rectangle area of the
tab itself with a brush that you create and call the SetBkColor() method
before you make a call to the TextOut() method with the text you want to
appear on the tab.
<P>
First bring up the properties for the tab control in the Resource Editor
and select the Styles tab. Select the "Owner draw fixed" check box and save
your work. If you are dynamically creating the Tab control during the
dialog box's initialization with CreateWindow() or CreateWindowEx() be sure
to include the TCS_OWNERDRAWFIXED bit in the dwStyle parameter.
<P>
The following #defines are used in the sample:
<P>
<PRE>        #define RED     RGB(255,0,0)
        #define YELLOW  RGB(255,255,0)
        #define MAGENTA RGB(255,0,255)
        #define WHITE   RGB(255,255,255)
        #define BLUE    RGB(0,0,255)

</PRE>If you are using the SDK:
<P>
The brushes in this sample excerpt were created in WM_INITDIALOG and are
static handles.
<P>
Add the WM_DRAWITEM message to the dialog box's procedure.
<P>
<PRE>   case WM_DRAWITEM:
      lpdis = (LPDRAWITEMSTRUCT) lParam; // item drawing information
      hTabCtrl = GetDlgItem(hDlg, IDC_TAB1);

      if (hTabCtrl == lpdis-&gt;hwndItem)   // is this the tab control?
      {
         // which tab? first, second...fifth
         switch (lpdis-&gt;itemID)
         {
         case 0:
            hbr = hbrRed;
            bkColor = RED;
            break;
         case 1:
            hbr = hbrYellow;
            bkColor = YELLOW;
            break;
         case 2:
            hbr = hbrMagenta;
            bkColor = MAGENTA;
            break;
         case 3:
            hbr = hbrWhite;
            bkColor = WHITE;
            break;
         case 4:
            hbr = hbrBlue;
            bkColor = BLUE;
            break;
         }

         memset(szTabText, '\0', sizeof(szTabText));

         tci.mask = TCIF_TEXT;
         tci.pszText = szTabText;
         tci.cchTextMax = sizeof(szTabText)-1;

         TabCtrl_GetItem(hTabCtrl, lpdis-&gt;itemID, &amp;tci);

         FillRect(lpdis-&gt;hDC, &amp;lpdis-&gt;rcItem, hbr);
         SetBkColor(lpdis-&gt;hDC, bkColor);

         TextOut(lpdis-&gt;hDC,
               lpdis-&gt;rcItem.left,
               lpdis-&gt;rcItem.top,
               tci.pszText,
               lstrlen(tci.pszText));
      }
      break;

</PRE>If your are using MFC:
<P>
The brushes referred to are part of the dialog class and were created when
the dialog constructor was called.
<P>
Override the OnDrawItem() method for your CDialog derived class using Class
Wizard and add the following code, changing variable names as neccessary.
It is important to note that a pointer to a CDC object from the handle of
the DC passed in via the LPDRAWITEMSTRUCT is required, otherwise only the
background of the text will be the desired color.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>       void CMFCTabCtrlDlg::OnDrawItem(int nIDCtl, LPDRAWITEMSTRUCT lpdis)
       {
          CDialog::OnDrawItem(nIDCtl, lpdis);

          char        szTabText[100];
          RECT        rect;
          UINT        bkColor;
          CBrush      *cbr;
          TC_ITEM     tci;

          CTabCtrl    *pTabCtrl = (CTabCtrl *)GetDlgItem(IDC_TAB1);

          if (pTabCtrl-&gt;m_hWnd == lpdis-&gt;hwndItem)
          {
              // which tab?
              switch (lpdis-&gt;itemID)
              {
              case 0:
                  cbr = &amp;m_brRed;
                  bkColor = RED;
                  break;

              case 1:
                  cbr = &amp;m_brYellow;
                  bkColor = YELLOW;
                  break;

              case 2:
                  cbr = &amp;m_brMagenta;
                  bkColor = MAGENTA;
                  break;

              case 3:
                  cbr = &amp;m_brWhite;
                  bkColor = WHITE;
                  break;

              case 4:
                  cbr = &amp;m_brBlue;
                  bkColor = BLUE;
                  break;
              }

              memset(szTabText, '\0', sizeof(szTabText));

              tci.mask        = TCIF_TEXT;
              tci.pszText     = szTabText;
              tci.cchTextMax  = sizeof(szTabText)-1;

              pTabCtrl-&gt;GetItem(lpdis-&gt;itemID, &amp;tci);

              CDC *dc = CDC::FromHandle(lpdis-&gt;hDC);

              dc-&gt;FillRect(&amp;lpdis-&gt;rcItem, cbr);
              dc-&gt;SetBkColor(bkColor);

              TextOut(lpdis-&gt;hDC,
                      lpdis-&gt;rcItem.left,
                      lpdis-&gt;rcItem.top,
                      tci.pszText,
                      lstrlen(tci.pszText));
          }
       }
</PRE> 
Version           : WIN95:97; WINNT:4.0;WINNT:97;</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 29, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
