

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Determine If a File Is Already Open </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q172240">
<META NAME="KBModify" CONTENT="1997/08/01">
<META NAME="KBCreate" CONTENT="1997/07/31">
<META NAME="Keywords" CONTENT="BseFileio kbcode">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  You can open a file multiple times in different applications as long as one application does not have exclusive access to the file. There may be times when your application needs to have exclusive access to a file, and the application may need to d...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWS,QAY5,QA5E,QBW7,QAI5,QAUD,QABI,QBV8,QAB9,QADK,QBS0,QAJH,QBVV,QA2S,QAML V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Determine If a File Is Already Open</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 1, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q172240</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Win32 Application Programming Interface (API) included with:
   - Microsoft Visual Basic Learning, Professional, and Enterprise Editions
<P><PRE>     for Windows, version 5.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
You can open a file multiple times in different applications as long as one
application does not have exclusive access to the file. There may be times
when your application needs to have exclusive access to a file, and the
application may need to determine whether it is already open. This article
explains how to determine whether a file is already open. It also contains
two versions of a function you can use to detect whether a file is already
open.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The only sure way your application can determine whether it can open a file
exclusively is by trying to open the file. If you are able to open the
file, your application has exclusive access. Otherwise, it doesn't.
<P>
If your application needs to determine whether a file is already open, it
should attempt to open the file for exclusive-sharing access. If a sharing
violation occurs during the attempt, the file is already open. If the
attempt causes a different error, such as access denied or file not found,
then your application will not be able to tell whether the file is already
open.
<P>
The function described here is called IsFileAlreadyOpen, declared as:
<P>
<PRE>   BOOL IsFileAlreadyOpen(char *filename); // In C/C++...
   Function IsFileAlreadyOpen(Filename As String) As BOOLEAN // In VB...

</PRE>If this function returns TRUE, then the file is already open. It determines
that the file is already open only if it gets ERROR_SHARING_VIOLATION when
it attempts to open the file.
<P>
It will return FALSE in the following conditions:

<UL><LI>The file is not already open.
<LI>The calling application does not have access to the file due to NTFS
   security.
<LI>The file does not exist.
<P>
</UL>You should check if the file exists before calling the function to
eliminate the possibility of the latter condition.
<P>
<P><h3>Sample Code: C/C++ version of IsFileAlreadyOpen</h3>
 
<P>
<PRE>   BOOL IsFileAlreadyOpen(char *filename)
   {
      HFILE theFile = HFILE_ERROR;
      DWORD lastErr  = NO_ERROR;

      // Attempt to open the file exclusively.
      theFile = _lopen(filename, OF_READ | OF_SHARE_EXCLUSIVE);

      if (theFile == HFILE_ERROR)
         // Save last error...
         lastErr = GetLastError();
      else
         // If the open was successful, close the file.
         _lclose(theFile);

      // Return TRUE if there is a sharing-violation.
      return ((theFile == HFILE_ERROR) &amp;&amp;
              (lastErr == ERROR_SHARING_VIOLATION));
   }

</PRE><h3>Sample Code: Microsoft Visual Basic version of IsFileAlreadyOpen</h3>
 
<P>
<PRE>   ' Declaration for APIs used by our function...
   Private Declare Function lopen Lib "kernel32" Alias "_lopen" (ByVal
   lpPathName As String, ByVal iReadWrite As Long) As Long
   Private Declare Function GetLastError Lib "kernel32" () As Long
   Private Declare Function lclose Lib "kernel32" Alias "_lclose" (ByVal
   hFile As Long) As Long

   ' Our Function...
   Function IsFileAlreadyOpen(Filename As String) As Boolean
      Dim hFile As Long
      Dim lastErr As Long

      ' Initialize file handle and error variable.
      hFile = -1
      lastErr = 0

      ' Open for for read and exclusive sharing.
      hFile = lopen(Filename, &amp;H10)

      ' If we couldn't open the file, get the last error.
      If hFile = -1 Then
         lastErr = Err.LastDllError
      ' Make sure we close the file on success.
      Else
         lclose (hFile)
      End If

      ' Check for sharing violation error.
      If (hFile = -1) And (lastErr = 32) Then
         IsFileAlreadyOpen = True
      Else
         IsFileAlreadyOpen = False
      End If

   End Function

</PRE><h2>REFERENCES</h2>
 
<P>
For more information about shared modes, see:
<P>
Product name Help, version n.n; search on: "word or phrase"; topic: topic.
<P>
read the Win32 SDK Help on the _lopen() API. It lists and describes the
various modes available and in particular, OF_SHARE_EXCLUSIVE.
 
<PRE>Keywords          : BseFileio kbcode
Version           : WINDOWS:5.0; WINDOWS NT:
Platform          : NT WINDOWS
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 1, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
