

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the Call-Attributed Profiler (CAP) </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q118890">
<META NAME="KBModify" CONTENT="1995/01/05">
<META NAME="KBCreate" CONTENT="1994/08/01">
<META NAME="Keywords" CONTENT="kbtool">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  The call-attributed profiler (CAP) allows you to profile function calls within an application.  MORE INFORMATION  To profile an application using CAP, perform the following steps:  1. Replace the Windows NT system DLLs that your application uses wi...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWP,QAJH,QAGX,QBXB,QATJ,QAFI,QAYY,QAR4,QACI,QBVV,QAUJ,QAPF,QAGI,QBV8,QBSO V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Using the Call-Attributed Profiler (CAP)</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 5, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q118890</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Win32 Software Development Kit (SDK) for Windows NT,
   versions 3.1 and 3.5
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The call-attributed profiler (CAP) allows you to profile function calls
within an application.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To profile an application using CAP, perform the following steps:

<OL><P><LI>Replace the Windows NT system DLLs that your application uses with
   DLLs that contain debugging information. To find out which DLLs
   your application uses, run the APF32CVT.EXE utility provided with
   the Win32 SDK. The syntax to use is as follows:
<P>
<P><PRE>      apf32cvt &lt;application&gt;
</PRE><P>
   This will list the DLLs to which your program is linked. The system
   DLLs that contain debugging information can be found in the
   \SUPPORT\DEBUGDLL\i386 of the Win32 SDK CD. Rename the DLLs in your
   WINNT\SYSTEM32 directory and copy the debugging DLLs to the
   WINNT\SYSTEM32 directory. You will need to reboot the machine to use
   the DLLs.

<P><LI>Recompile your application. If you are using the NTWIN32.MAK file
   in your makefile, all you need to do is to set the environment
   variable PROFILE=on. Otherwise, add /Gh and /Zd to the compiler
   options yourself and be sure that you are linking with the options
   "-debugtype:coff" and "-debug:partial,mapped".

<P><LI>Place a CAP.INI file in either the root directory of the drive, the
   application directory, the WINDOWS directory, or the root of the C
   drive. The CAP.INI file specifies the applications for which the
   profiler will gather information. At minimum, CAP.ini must contain
   the following:
<P>
<P><PRE>      [EXES]
      &lt;app&gt;.exe
      [PATCH IMPORTS]
      &lt;app&gt;.exe
      [PATCH CALLERS]
</PRE><P>
   where &lt;app&gt; is the application to be profiled. The file CAP.TXT
   included in the \BIN directory of the SDK provides an excellent
   example.

<P><LI>Run the application. The profiling information is gathered
   and stored in a file with the same base name as the application
   and a .END extension. This information is in an ASCII format and
   can be viewed by any text editor. You can also use the CAPVIEW
   sample to view a graphical representation of the information.
<P>
</OL>Walter Oney points out in "Removing Bottlenecks from Your Program with
Windows NT Performance-tuning Tools," from the April 1994 edition of
"Microsoft Systems Journal," that the Visual C++ linker does not correctly
generate debugging information that CAP can use. This is not correct. The
problem is that the SDK 3.1 linker uses "-debug:mapped" by default, but the
Visual C++ linker does not. Adding the switch to the link line (as in
step 2, above) corrects this problem.
<P>
A common problem is for the profiling output to have "??? : ???" in place
of the function names from your application. For example:
<P>
<PRE>   1   ??? : ??? (Address=0x77889a1b)    1        4717        4717
             4717        4717        4717         n/a         n/a


</PRE></OL>This occurs if you use the wrong linker options. You should use
"-debugtype:coff" and "-debug:partial,mapped".
<P>
Another common problem is to have function pointers instead of the Win32
API names. For example:
<P>
<PRE>   1    0x77e9b10f                       1      1577         1577
             1577        1577        1577         n/a         n/a

</PRE>This happens when you do not replace the system DLLs that your application
calls with the DLLs that contain debugging information.
<P>
<P><h2>REFERENCES</h2>
 
<P>
The release notes for CAP.TXT can be found in the MSTOOLS\BIN directory.
<P>
The best source of information is "Optimizing Windows NT" by Russ Blake
in the "Windows NT Resource Kit, Vol. 3".
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.10 3.50<BR>
KBCategory: kbtool<BR>
KBSubcategory: TlsMisc<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 5, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
