

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Default/Private Dialog Classes, Procedures, DefDlgProc </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q68566 ">
<META NAME="KBModify" CONTENT="1996/12/02">
<META NAME="KBCreate" CONTENT="1991/01/22">
<META NAME="Keywords" CONTENT="kbui">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  The information below explains the differences between default and private dialog classes, their associated dialog procedures, and using the DefDlgProc() function.  This information is organized as a comparison between private and default dialog cl...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA01,QAB9,QAGI,QABO,QDL9,QBWO,QBWN,QAY5,QAEV,QABA,QAH6,QAUD,QBWQ,QBV8,QAYC V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Default/Private Dialog Classes, Procedures, DefDlgProc</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 2, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q68566 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) versions 3.0 and 3.1

<LI>Microsoft Win32 Application Programming Interface (API) included with:
<P>
<P><PRE>    - Microsoft Windows NT versions 3.5 and 3.51
    - Microsoft Windows 95 version 4.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The information below explains the differences between default and
private dialog classes, their associated dialog procedures, and using
the DefDlgProc() function.
<P>
This information is organized as a comparison between private and
default dialog classes, covering class registration, dialog templates,
dialog creation, and message processing.
<P>
Note that the source to the DefDlgProc() function is provided with the
Windows Software Development Kit (SDK) version 3.0. The code is
supplied on the Sample Source 2 disk in the DEFDLG.C file. By default,
DEFDLG.C is placed into the \SAMPLES\DEFPROCS directory if the SDK
installation program copies the sample source code.
<P>
There are many functions and macros used in DefDlgProc() that are
internal to Windows and cannot be used by applications. No additional
information is available on these functions and macros.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
All dialog classes are window classes, just as all dialog boxes are
windows. All dialog classes must declare at least DLGWINDOWEXTRA in
the cbWndExtra field of the WNDCLASS structure before the dialog class
is registered. The Windows Dialog Manager uses this area to store
special information for dialog boxes.
<P>
The default dialog class is registered by Windows at startup. The
window procedure for this class is known as DefDlgProc(), which is
located in Windows's USER module. DefDlgProc() calls the application-
provided dialog function, which returns TRUE if it processes a message
completely or FALSE if DefDlgProc should process the message further.
<P>
If an application registers a private dialog class, it provides a
window procedure for the dialog box. The window procedure is the same
as that for any other application window and returns a LONG value.
Messages that are not processed by this window function are passed to
DefDlgProc().
<P>
<P>
<P><h3>Dialog Class Registration</h3>
 
<P>
Windows registers the default dialog class, which is represented by
the value 0x8002. Windows uses this class when an application creates
a dialog box using the DialogBox() or CreateDialog() functions, but
specifies no class in the dialog resource template.
<P>
To use a private dialog class, the application must specify the fields
of a WNDCLASS structure and call RegisterClass(). This is the same
procedure that Windows uses to register the default dialog class.
<P>
In either case, the value in the cbWndExtra field of the WNDCLASS
structure must contain a value of at least DLGWINDOWEXTRA. These bytes
are used as storage space for dialog-box specific information, such as
which control has the focus and which button is the default.
<P>
When a dialog class is registered, the lpfnWndProc field of the
WNDCLASS structure must contain a function pointer. For the default
dialog class, this field points to DefDlgProc(). For a private class,
the field points to application-supplied procedure that returns a LONG
(as does a normal window procedure) and passes all unprocessed
messages to DefDlgProc().
<P>
<P><h3>Dialog Templates</h3>
 
<P>
Resource scripts are almost identical whether used with a default or a
private dialog class. Dialog boxes using a private class must use the
CLASS statement in the dialog template. The name given in the CLASS
statement must match the name of class that exists (is registered)
when the dialog box is created.
<P>
<P><h3>Dialog Creation and the lpfnDlgFunc Parameter</h3>
 
<P>
Applications create dialog boxes using the function DialogBox(),
CreateDialog(), or one of the variant functions such as
DialogBoxIndirect(). The complete list of functions is found on page 1-
43 of the "Microsoft Windows Software Development Kit Reference Volume
1."
<P>
All dialog box creation calls take a parameter called lpfnDlgFunc,
which can either be NULL or the procedure instance address of the
dialog box function returned from MakeProcInstance(). When the
application specifies a private dialog class and sets lpfnDlgFunc to a
procedure instance address, the application processes each message for
the dialog box twice. The message processing proceeds as follows:

<OL><P><LI>Windows calls the dialog class procedure to process the message. To
   process a message in the default manner, this procedure calls
   DefDlgProc().

<P><LI>DefDlgProc() calls the procedure specified in the dialog box creation
   call.
<P>
</OL>The procedure specified in lpfnDlgFunc must be designed very
carefully. When it processes a message, it returns TRUE or FALSE and
does not call DefDlgProc(). These requirements are the same as for any
other dialog procedure.
<P>
Using a dialog procedure in conjunction with a private dialog class
can be very useful. Processing for the private dialog class can be
generic and apply to a number of dialog boxes. Code in the dialog
procedure is specific to the particular instance of the private dialog
class.
<P>
<P><h3>Dialog Message Processing</h3>
 
<P>
In dialog boxes with the default class, the application provides a
callback dialog function that returns TRUE or FALSE, depending on
whether or not the message was processed. As mentioned above,
DefDlgProc(), which is the window procedure for the default dialog
class, calls the application's dialog function and uses the return
value to determine whether it should continue processing the message.
<P>
In dialog boxes of a private class, Windows sends all messages to the
application-provided window procedure. The procedure either processes
the message like any other window procedure or passes it to
DefDlgProc(). DefDlgProc() processes dialog-specific functions and passes
any other messages to DefWindowProc() for processing.
<P>
Some messages are sent only to the application-supplied procedure
specified in the call to CreateDialog() or DialogBox(). Two examples of
functions that Windows does not send to the private dialog class
function are WM_INITDIALOG and WM_SETFONT.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10 3.50 3.51 4.00 95<BR>
KBCategory: kbui<BR>
KBSubcategory: UsrDlgs<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 2, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
