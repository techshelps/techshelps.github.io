

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Animate Textures in Direct3D Immediate Mode </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q153158">
<META NAME="KBModify" CONTENT="1997/09/05">
<META NAME="KBCreate" CONTENT="1996/07/01">
<META NAME="Keywords" CONTENT="Direct3D">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  A texture in Direct3D immediate mode is stored in a DirectDraw surface with the DDSCAPS_TEXTURE flag set in the dwCaps field of the ddsCaps structure. Since the textures are stored in DirectDraw surfaces, you can alter the bits in these surfaces to...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAVR,QAGI,QAH1,QAK6,QAPN V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Animate Textures in Direct3D Immediate Mode</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 5, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q153158</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Microsoft DirectX 2 Software Development Kit (SDK), for Windows 95
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
A texture in Direct3D immediate mode is stored in a DirectDraw surface with
the DDSCAPS_TEXTURE flag set in the dwCaps field of the ddsCaps structure.
Since the textures are stored in DirectDraw surfaces, you can alter the
bits in these surfaces to perform texture animation in your Direct3D
applications. To make changes to the pixels in a texture, you would lock
down the DirectDraw surface associated with that texture with Lock() and
then you would make the changes necessary. You would then load the revised
texture on the video card when 3D hardware is used with
IDirect3DTexture::Load(). The next time the execute buffer is executed
with IDirect3DDevice::Execute(), the revised texture will be used when
rendering.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
It is important to create a source texture DirectDraw surface in system
memory and a destination DirectDraw surface (in video memory, if 3D
hardware is present). The source surface should be created with the
DDSCAPS_TEXTURE flag set and it should be created in system memory. The
destination texture surface should be created with both the DDSCAPS_TEXTURE
and DDSCAPS_ALLOCONLOAD flags set. The destination surface will created
initially empty. You should call QueryInterface() on both the source and
destination textures to get the IDirect3DTexture interface for the texture
surfaces. After you have loaded the source texture surface with the bitmap
data desired, you should call the destination texture's
IDirect3DTexture::Load() method, specifying the source texture, to load the
texture onto the destination surface. You can now call the destination
texture's IDirect3DTexture::GetHandle() method to obtain a Direct3D texture
handle to be used in the execute buffer. When you are done with your
texture animation and these textures and surface are no longer required,
you should call Release() on the source and destination textures as well as
the source and destination surfaces.
<P>
The following five steps describe how to implement texture animation in a
rendering loop for a Direct3D immediate mode application:

<OL><P><LI>Call the destination texture's Unload() method to unload the current
   texture.

<P><LI>Lock down the source texture surface with its Lock() method. Place the
   new texture data in the surface. Unlock the source texture surface
   with its Unlock() method.

<P><LI>Call the destination texture's Load() method to load the new texture.
   Make sure to specify the source texture as the texture to be loaded.

<P><LI>Call the destination texture's GetHandle() method to obtain the
   texture handle for the destination Direct3DTexture object. This handle
   is used in all Direct3D API calls where a texture is to be referenced.

<P><LI>Execute your current execute buffer. The revised texture will be used
   for rendering.
<P>
</OL><h3>Sample Code</h3>
 
<P>
Here is a code example to implement the steps above:
<P>
<PRE>   lpTexture-&gt;lpVtbl-&gt;Unload(lpTexture);

   ddsd.dwSize = sizeof(ddsd);
   if (lpSrcTextureSurf-&gt;lpVtbl-&gt;Lock(lpSrcTextureSurf, NULL,
                              &amp;ddsd, DDLOCK_WAIT, NULL) == DD_OK)
    {
    lpDst = (BYTE *)ddsd.lpSurface;

       // Modify the surface with the new texture bitmap.

    lpSrcTextureSurf-&gt;lpVtbl-&gt;Unlock(lpSrcTextureSurf,NULL);
    }

   lpTexture-&gt;lpVtbl-&gt;Load(lpTexture, lpSrcTexture);
   lpTexture-&gt;lpVtbl-&gt;GetHandle(lpTexture,
                              lpDev, &amp;TextureHandle);

   if (lpDev-&gt;lpVtbl-&gt;BeginScene(lpDev) != D3D_OK)
       return FALSE;
   if (lpDev-&gt;lpVtbl-&gt;Execute(lpDev, lpD3DExBuf,
                              lpView, D3DEXECUTE_UNCLIPPED) != D3D_OK)
       return FALSE;
   if (lpDev-&gt;lpVtbl-&gt;EndScene(lpDev) != D3D_OK)
       return FALSE;
</PRE></OL> 
<PRE>Keywords          : Direct3D
Technology        : kbDirectXSDK
Version           : WINDOWS:4.0
Platform          : WINDOWS
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 5, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
