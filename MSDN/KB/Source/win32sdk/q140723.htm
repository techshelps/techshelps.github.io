

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Force a ScreenSaver to Close Once Started in Windows NT </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q140723">
<META NAME="KBModify" CONTENT="1996/04/11">
<META NAME="KBCreate" CONTENT="1995/12/06">
<META NAME="Keywords" CONTENT="kbgraphic kbhowto kbcode">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  Sometimes applications need to terminate a screensaver that is already running. In Windows 3.1 or Windows 95, a screensaver could be terminated easily by posting a WM_CLOSE message to the currently active screensaver window as in this example:     ...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWP,QDJ7,QDL9,QBWQ,QAGB,QBWO,QBWN,QBWS,QBSO,QAIJ,QAA8,QA0J,QDIV,QA63,QAUD V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Force a ScreenSaver to Close Once Started in Windows NT</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 11, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q140723</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Win32 Application Programming Interface (API) included
   with Microsoft Windows NT versions 3.1, 3.5, 3.51
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Sometimes applications need to terminate a screensaver that is already
running. In Windows 3.1 or Windows 95, a screensaver could be terminated
easily by posting a WM_CLOSE message to the currently active screensaver
window as in this example:
<P>
<PRE>    PostMessage (GetActiveWindow(), WM_CLOSE, 0, 0L);

</PRE>Windows NT, however, introduces the concept of separate desktops, so that
applications can run on one, and screen savers can run on another. This
makes screensaver termination under Windows NT a bit more difficult.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Under Windows NT, obtaining a handle to the currently active screensaver
window is not as straightforward as it is in Windows 3.1 and Windows 95.
Calling GetForegroundWindow() returns NULL because the screensaver is
running on a different desktop than the calling application. Similarly,
calling FindWindow ("WindowsScreenSaverClass", NULL) to determine if the
screen saver is currently active won't work either.
<P>
The way to do it is to get a handle to the screen saver's desktop,
enumerate that desktop's windows, and then post a WM_CLOSE to the screen
saver window.
<P>
The following code demonstrates how to do this. Note that if a screen saver
password is set, the following code brings up the password dialog box,
prompts the user for a password, and then actually terminating the screen
saver application.
<P>
<PRE>   BOOL CALLBACK KillScreenSaverFunc(HWND hwnd, LPARAM lParam)
   {
      PostMessage(hwnd, WM_CLOSE, 0, 0);
      return TRUE;
   }

   HDESK hdesk;

   hdesk = OpenDesktop(TEXT("Screen-saver"),
                       0,
                       FALSE,
                       DESKTOP_READOBJECTS | DESKTOP_WRITEOBJECTS);
   if (hdesk)
   {
      EnumDesktopWindows(hdesk, KillScreenSaverFunc, 0);
      CloseDesktop(hdesk);
   }

</PRE>Note that terminating a screensaver that is already running as demonstrated
above is totally separate from disabling the screen saver altogether,
so that no screen saver starts after the designated time period expires.
This can be done easily using:
<P>
<PRE>   SystemParametersInfo( SPI_SETSCREENSAVEACTIVE,
                         FALSE,
                         0,
                         SPIF_SENDWININICHANGE
                       );

</PRE>This method works well for terminating the currently running screen saver.
However, one problem that you might encounter is that the system will not
restart the screen saver unless the user moves the mouse or presses a key.
If you need the screen saver to start up again, you'll need to reinitialize
the time-out period. Do this by:

<UL><LI>Calling SystemParametersInfo( SPI_SETSCREENSAVEACTIVE, TRUE, 0,
   SPIF_SENDWININICHANGE).
<P>
   -or-

<LI>Using SetCursorPos() to simulate user input.
<P>
</UL>Both of these methods will cause the system to restart the time-out counter
for the screen saver.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.10 3.50 deactivate disable stop running<BR>
turn off<BR>
KBCategory: kbgraphic kbhowto kbcode<BR>
KBSubcategory: GdiScrSav<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 11, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
