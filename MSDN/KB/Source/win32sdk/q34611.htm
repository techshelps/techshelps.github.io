

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Allocating and Using Class and Window Extra Bytes </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q34611 ">
<META NAME="KBModify" CONTENT="1995/11/02">
<META NAME="KBCreate" CONTENT="1988/08/22">
<META NAME="Keywords" CONTENT="kbui">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  The WNDCLASS structure contains two fields, cbClsExtra and cbWndExtra, which can be used to specify a number of additional bytes of memory to be allocated to the class structure itself or to each window created using that class.  MORE INFORMATION  ...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAHT,QALG,QABO,QDL9,QBWO,QBWN,QBBI,QAKC,QAGQ,QBXS,QAY5,QAKJ,QBW6,QBC6,QAGI V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Allocating and Using Class and Window Extra Bytes</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 2, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q34611 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) versions 3.0 and 3.1

<LI>Microsoft Win32 Application Programming Interface (API) included with:
<P>
<P><PRE>    - Microsoft Windows NT versions 3.5 and 3.51
    - Microsoft Windows 95 version 4.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The WNDCLASS structure contains two fields, cbClsExtra and cbWndExtra,
which can be used to specify a number of additional bytes of memory to
be allocated to the class structure itself or to each window created
using that class.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Every application that uses class extra bytes and window extra bytes
must specify the appropriate number of bytes before the window class
is registered. If no bytes are specified, an attempt to store
information in extra bytes will cause the application to write into
some random portion of Windows memory, causing data corruption.
<P>
Windows version 3.1 will FatalExit if extra bytes are used improperly.
<P>
If an application does not use class extra bytes or window extra
bytes, it is important that the cbClsExtra and cbWndExtra fields be
set to zero.
<P>
Class and window extra bytes are a scarce resource. If more than 4
extra bytes are required, use the GlobalAlloc fucntion to allocate a
block of memory and store the handle in class or window extra bytes.
<P>
<P><h3>Class Extra Bytes</h3>
 
<P>
For example, setting the value of the cbClsExtra field to 4 will cause
4 extra bytes to be added to the end of the class structure when the
class is registered. This memory is accessible by all windows of that
class. The number of additional bytes allocated to a window's class
can be retrieved through the following call to the GetClassWord
function:
<P>
<PRE>   nClassExtraBytes = GetClassWord(hWnd, GCW_CBCLSEXTRA);

</PRE>The additional memory can be accessed one word at a time by specifying
an offset, in BYTES (starting at 0), as the nIndex parameter in calls
to the GetClassWord function. These values can be set using the
SetClassWord function.
<P>
The GetClassLong and SetClassLong functions perform in a similar
manner and get or set four bytes of memory respectively:
<P>
<PRE>   nClassExtraBytes = GetClassLong(hWnd, GCL_CBCLSEXTRA);

</PRE>NOTE: A Win32-based application should use GetClassLong and SetClassLong,
because the GCW_ indices are obsolete under Win32.
<P>
<P><h3>Window Extra Bytes</h3>
 
<P>
Assigning a value to cbWndExtra will cause additional memory to be
allocated for each window of the class. If, for example, cbWndExtra is
set to 4, every window created using that class will have 4 extra
bytes allocated for it. This memory is accessible only by using the
GetWindowWord and GetWindowLong functions, and specifying a handle
to the window. These values can be set by calling the SetClassWord
or SetClassLong functions. As with the class structures, the offset
is always specified in bytes.
<P>
An example of using window extra bytes would be a text editor that has
a variable number of files open at once. The file handle and other
file-specific variables can be stored in the window extra bytes of the
corresponding text window. This eliminates the requirement to always
consume memory for the maximum number of handles or to search a data
structure each time a window is opened or closed.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10 3.50 4.00 95<BR>
KBCategory: kbui<BR>
KBSubcategory: UsrWndw<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 2, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
