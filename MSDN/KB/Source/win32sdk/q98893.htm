

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Limit on the Number of Bytes Written Asynchronously </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q98893 ">
<META NAME="KBModify" CONTENT="1995/11/02">
<META NAME="KBCreate" CONTENT="1993/05/18">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  There is a limit to the number of bytes that can be written with WriteFile() using asynchronous I/O (FILE_FLAG_OVERLAPPED specified). This limit depends on the size of your system.  Asynchronous (overlapped) I/O consumes system resources for a long...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QABN,QBXS,QBFY,QAKC,QAW9,QBC6,QALG,QAH4,QAJB,QAI4,QAG8,QANY,QAVW,QAL3,QAIM V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Limit on the Number of Bytes Written Asynchronously</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 2, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q98893 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Win32 Application Programming Interface (API) included with:
<P>
<P><PRE>    - Microsoft Windows NT version 3.1
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
There is a limit to the number of bytes that can be written with
WriteFile() using asynchronous I/O (FILE_FLAG_OVERLAPPED specified). This
limit depends on the size of your system.
<P>
Asynchronous (overlapped) I/O consumes system resources for a long time.
For example, the memory used is locked in the process working set until the
I/O completes. To limit the amount of system resources used asynchronously
by an application, the system charges asynchronous I/O to the working set
of the process requesting the I/O.
<P>
While the working set size is dynamically raised and lowered based on the
load, there are minimum and maximum values. These values are based on
system size: consider up to 12 megabytes (MB) a small system, between 12 MB
and 19 MB a medium system, and greater than 19 MB a large system. Each
process is guaranteed a minimum working set for performance reasons; about
120K for small systems, 160K for large systems, and 245K for large systems.
<P>
When system resources are heavily taxed, a process is confined to its
maximum working set. Asynchronous I/Os may never cause you to exceed your
maximum working set, because once you are allowed to initiate an
asynchronous I/O, the page cannot be taken away if memory becomes tight.
The maximum working set sizes are about 300K for a small system, 716K for a
medium system, and 1.5 MB for a large system.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following code can be used to experiment with the maximum number of
bytes that can be written using asynchronous I/O. Simply change the line to
vary the number of bytes that the code attempts to write:
<P>
<PRE>   #define NBR_BYTE 700000

</PRE><h3>Sample Code</h3>
 
<P>
<PRE>#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;malloc.h&gt;
#include &lt;assert.h&gt;

#include &lt;windows.h&gt;

#define NBR_BYTE 700000

int main(void)
</PRE>{
<PRE>   char        *c;
   HANDLE      hFile;
   DWORD       byteWrite;
   OVERLAPPED  overLap;
   DWORD       err;
   BOOL        result;

   c = malloc( NBR_BYTE );
   assert( c != NULL );

   overLap.hEvent = CreateEvent( NULL, FALSE, FALSE, "event1" );
   assert( overLap.hEvent );

   hFile = CreateFile( "test", GENERIC_WRITE, 0,  NULL, OPEN_ALWAYS,
                       FILE_ATTRIBUTE_NORMAL | FILE_FLAG_OVERLAPPED |
                       FILE_FLAG_WRITE_THROUGH,
                       NULL);

   if( hFile == INVALID_HANDLE_VALUE )
   {
      free( c );
      printf( "error opening file\n" );
      exit( 0 );
   }

   overLap.Offset     = 0;
   overLap.OffsetHigh = 0;
   result = WriteFile( hFile, c, NBR_BYTE, &amp;byteWrite, &amp;overLap );
   if( result == FALSE )
   {
      err = GetLastError( );
      if( err != ERROR_IO_PENDING )
      {
         free( c );
         printf( "Error: %d\n", GetLastError() );
         exit( 0 );
      }
   }

   free( c );

   return 0;
</PRE>}
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.10 asynch<BR>
KBCategory: kbprg<BR>
KBSubcategory: BseFileio<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 2, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
