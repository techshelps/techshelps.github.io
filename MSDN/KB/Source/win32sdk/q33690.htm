

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Cannot Alter Messages with WH_KEYBOARD Hook </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q33690 ">
<META NAME="KBModify" CONTENT="1995/11/02">
<META NAME="KBCreate" CONTENT="1988/07/29">
<META NAME="Keywords" CONTENT="kbui kbprb">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  After creating a program that uses the WH_KEYBOARD hook function to intercept a user's keystrokes and changing the wParam value before passing the hook code on to DefHookProc(), whichever application currently has the focus still receives the origi...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAEV,QAH7,QAH6,QDL9,QBWO,QBWN,QAD7,QAYC,QBWQ,QAH4,QAUD,QAB9,QADO,QAY5,QAJH V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Cannot Alter Messages with WH_KEYBOARD Hook</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 2, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q33690 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) versions 3.0 and 3.1

<LI>Microsoft Win32 Application Programming Interface (API) included with:
<P>
<P><PRE>    - Microsoft Windows NT versions 3.5 and 3.51
    - Microsoft Windows 95 version 4.0
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
After creating a program that uses the WH_KEYBOARD hook function to
intercept a user's keystrokes and changing the wParam value before passing
the hook code on to DefHookProc(), whichever application currently has the
focus still receives the original character typed in rather than the
translated character.
<P>
<P><h2>CAUSE</h2>
 
<P>
Keyboard messages cannot be altered with the WH_KEYBOARD hook. All that can
be done is to "swallow" the message (return TRUE) or have the message
passed on (FALSE). In a keyboard hook function, when you return
DefHookProc(), you are passing the event to the next hook procedure in the
potential hook chain, and giving it a chance to look at the event to decide
whether or not to discard it. You are not passing the message to the system
as if you had called DefWindowProc() from a Window procedure.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
NOTE: In the discussion below, ignore the references to the WH_CALLWNDPROC
hook for Win32-based applications. Win32 does not allow an application to
change the message in a CallWndProc, as 16-bit Windows does.
<P>
To change the value of wParam (and hence the character message that is
received by the window with the focus), you must install the WM_GETMESSAGE
and WH_CALLWNDPROC hooks. The WH_GETMESSAGE hook traps all messages
retrieved via GetMessage() or PeekMessage(). This is the way actual
keyboard events are received: the message is placed in the queue by Windows
and the application retrieves it via GetMessage() or PeekMessage().
However, because applications can send keyboard messages with
SendMessage(), it is best to also install the WH_CALLWNDPROC hook. This
hook traps messages sent to a window via SendMessage().
<P>
These hooks pass you the address of the message structure so you can change
it. In Windows 3.0, when you return DefHookProc() within a WH_GETMESSAGE or
WH_CALLWNDPROC hook procedure, you are passing the address of the
(potentially altered) contents of the message structure on to the next hook
function in the chain. In Windows 3.1, you should use the CallNextHookEx()
function to pass the hook information to the next hook function. If you
alter the wParam before passing on the message, this will change the
character message eventually received by the application with the focus.
<P>
NOTE: For Windows 3.0, keep in mind that the hook callback procedure must
be placed in a DLL with fixed code so that it will be below the EMS line
and thus will always be present. If the hook callback procedure is not in a
fixed code segment, it could be banked out when it is called, and this
would crash the system. System-wide hooks in Windows 3.1, however, must
still reside in a DLL.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10 3.50 4.00 95<BR>
KBCategory: kbui kbprb<BR>
KBSubcategory: UsrHks<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 2, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
