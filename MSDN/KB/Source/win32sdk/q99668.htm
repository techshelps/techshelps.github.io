

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Adding Point Sizes to the ChooseFont() Common Dialog Box </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q99668 ">
<META NAME="KBModify" CONTENT="1995/11/02">
<META NAME="KBCreate" CONTENT="1993/06/03">
<META NAME="Keywords" CONTENT="kbui">
<META NAME="KBArea" CONTENT="Support; KB; win32sdk">
<META NAME="Description" CONTENT="  When a TrueType font (or any other scalable font) is selected in the ChooseFont() common dialog box, a list of reasonable point sizes is displayed for selection. In some cases it is necessary to change this list to allow fewer or more selections.  ...">
<META NAME="Product" CONTENT="Win32 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QANO,QBC9,QBC8,QADF,QAII,QA01,QDL9,QBWO,QBWN,QAGX,QAUD,QALZ,QAEV,QANX,QAG2 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Adding Point Sizes to the ChooseFont() Common Dialog Box</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 2, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q99668 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) versions 3.1

<LI>Microsoft Win32 Application Programming Interface (API) included with:
<P>
<P><PRE>    - Microsoft Windows NT versions 3.5 and 3.51
    - Microsoft Windows 95 version 4.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
When a TrueType font (or any other scalable font) is selected in the
ChooseFont() common dialog box, a list of reasonable point sizes is
displayed for selection. In some cases it is necessary to change this
list to allow fewer or more selections.
<P>
The initial list of point sizes is hard-coded into COMMDLG.DLL but can
be changed programmatically using a common dialog box hook function.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Most scalable fonts can be created at nearly any point size. Some
TrueType fonts can be sized from 4 points to 999 points. A complete
list of available point sizes for a font of this type would contain
about 1000 elements, which can be prohibitively long and
time-consuming to construct.
<P>
The ChooseFont() common dialog box attempts to limit the selection by
listing only a few of the available point sizes in the size selection
combo box.
<P>
In certain cases, it may be desirable to offer more point-size
selections in this dialog box. In this case, a common dialog box hook
procedure can be used to insert point sizes when a specific font is
selected.
<P>
The following steps describe a technique that will allow new point
sizes to be added to the size selection combo box. Pay special
attention to step number 4:

<OL><P><LI>In your common dialog box hook procedure, look for WM_COMMAND
   messages with wParam equal to the font name combo box (which is
   "cmb1" for Windows version 3.1).

<P><LI>When you get this message(s), check for the font name you are
   looking for (for example, you can compare the current selection to
   "Courier New"). If it's not the font you want, return.

<P><LI>If this is the font you want, post yourself a user-defined
   message. In response to this message, add the new point size to the
   Point Size combo box (which is "cmb3" for Windows 3.1). It's a good
   idea to double-check here that the point size you are adding isn't
   already in the combo box (so you don't get duplicates).

<P><LI>Once you add the new point size, set the item data for the new
   item equal to the point size you are adding. For example, if you
   are adding the string "15" to the combo box, you need to set the
   item data of this new item to 15.
<P>
</OL>The following code fragment demonstrates the above steps:
<P>
<PRE>// Common Dialog ChooseFont() hook procedure.

</PRE></OL>UINT CALLBACK __export FontHook(HWND hwnd, UINT wm, WPARAM wParam,
LPARAM lParam)
{
<PRE>   char szBuf[150];
   DWORD dwIndex;

   switch(wm)
   {
      case WM_COMMAND:
      // See if the notification is for the "Font name" combo box.
         if (wParam == cmb1)
         {
            switch (HIWORD(lParam))
            {
               case CBN_SETFOCUS:
               case CBN_KILLFOCUS:
                  break;
               default:
               // Check to see if it's the font we're looking for.
                  dwIndex = SendDlgItemMessage(hwnd, cmb1, CB_GETCURSEL,
                                               0, 0);
                  if (dwIndex != CB_ERR)
                     SendDlgItemMessage(hwnd, cmb1, CB_GETLBTEXT, (WPARAM)
                                        dwIndex, (LPARAM) ((LPSTR) szBuf));

               // Compare list box contents to the font we are looking for.
               // In this case, it's "Courier New".
                  if (strcmp(szBuf, "Courier New") == 0)
                  // It's the font we want. Post ourselves a message.
                     PostMessage(hwnd, WM_ADDNEWPOINTSIZES, 0, 0L);
            }
         }
      break;

      case WM_ADDNEWPOINTSIZES:
      // First look to see if we've already added point sizes to this
      // combo box.
         if (SendDlgItemMessage(hwnd, cmb3, CB_FINDSTRING, -1,
                               (LPARAM)(LPCSTR)"6") == CB_ERR)
         {
         // Not found, add new point size.
            dwIndex = SendDlgItemMessage(hwnd, cmb3, CB_INSERTSTRING,
                                         0, (LPARAM)(LPSTR)"6");

         // Also set the item data equal to the point size.
            SendDlgItemMessage(hwnd, cmb3, CB_SETITEMDATA,
                               (WPARAM)dwIndex, 6);
         }
         return TRUE; // Don't pass this message on.
   }
   return FALSE;
</PRE>}
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.10 3.50 3.51 4.00 95<BR>
KBCategory: kbui<BR>
KBSubcategory: UsrCmnDlg<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 2, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
