

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INFO: Extracting Error Information from ADO in VB </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q167957">
<META NAME="KBModify" CONTENT="1997/08/29">
<META NAME="KBCreate" CONTENT="1997/05/02">
<META NAME="Keywords" CONTENT="kbcode kberrmsg adoengdb adovb">
<META NAME="KBArea" CONTENT="Support; KB; adobj">
<META NAME="Description" CONTENT="  When ActiveX Data Objects (ADO) encounter an error, often the Errors Collection is filled with detail on the cause of the error. This article provides sample code for extracting the maximum possible information on any errors raised by ADO using Vis...">
<META NAME="Product" CONTENT="adobj">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAAP,QAB4,QAPN,QAKP,QAW6,QBS0,QAYY,QANF,QAH4,QBXS,QBG2,QAI5,QABH,QBWB,QBVV V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INFO: Extracting Error Information from ADO in VB</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q167957</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>ActiveX Data Objects (ADO)  included with:
   - Microsoft Visual Basic Professional and Enterprise Editions for
<P><PRE>     Windows, versions 4.0, 5.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
When ActiveX Data Objects (ADO) encounter an error, often the Errors
Collection is filled with detail on the cause of the error. This article
provides sample code for extracting the maximum possible information on any
errors raised by ADO using Visual Basic.
<P>
If ADO itself encounters an error, it does not populate the Errors
Collection, but instead you have to use a native error mechanism to catch
and display the error--in this case the VB Err object. If the provider or
underlying components generate error, then these will be populated in the
ADO Errors Collection. So you need to check both the VB Error object and
the ADO Errors Collection. However, you may want to preserve the values of
the Err collection, because if you Error handling is too complex, in the
process of examining and displaying the Errors collection, you could end up
resetting the Err object.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The documentation for the ADO Error object indicates that the Errors
Collection will be populated if any error occurs within ADO or it's
underlying provider. This is somewhat incorrect. Depending on the source of
the error, or even bug, in the underlying provider to ADO (OLE-DB) or
within ADO itself, the errors collection may not be populated. You need to
check both the VB Error object as well as the ADO Errors collection.
<P>
The Errors Collection is only available from the Connection object, so you
need to initialize ADO off of a Connection object. Below is sample code
that demonstrates how to open a connection and report any errors
encountered.
<P>
Often the Errors Collection returns an HRESULT in either hexadecimal format
(for example, 0x80004005) or as a long value (for example, 2147467259).
These HRESULTS can be raised by underlying components such as OLE-DB or
even OLE itself. When this is the case, it may be confusing since these
codes are not documented in the ADO online documentation. However,
frequently encountered HRESULTS can be found in the KB article listed in
the references section.
<P>
<P>
<PRE>   Private Sub cmdTemplate_Click()
      Dim Conn1 As Connection
      Dim Errs1 As Errors
      Dim i As Integer
      Dim StrTmp

      On Error GoTo AdoError

      Set Conn1 = CreateObject("ADODB.Connection")

      ' Open connection to Bogus ODBC Data Source for BIBLIO.MDB
      Conn1.ConnectionString = "DBQ=BIBLIO.MDB;" &amp; _
                  "DRIVER={Microsoft Access Driver (*.mdb)};" &amp; _
                  "DefaultDir=C:\Bogus\Directory\Path;" &amp; _
                  "UID=admin;PWD=;"
      Conn1.Open

      ' Remaining code goes here

   Done:
      ' Close all open objects
      Conn1.Close

      ' Destroy anything not destroyed yet
      Set Conn1 = Nothing

      ' We're outta here
      Exit Sub

   AdoError:

      Dim errLoop As Error
      Dim strError As String

      ' In case Conn1 isn't set or other initialization problems
      On Error Resume Next

      i = 1

      ' Process
      StrTmp = StrTmp &amp; vbCrLf &amp; "VB Error # " &amp; Str(Err.Number)
      StrTmp = StrTmp &amp; vbCrLf &amp; "   Generated by " &amp; Err.Source
      StrTmp = StrTmp &amp; vbCrLf &amp; "   Description  " &amp; Err.Description

      ' Enumerate Errors collection and display properties of
      ' each Error object.
      Set Errs1 = Conn1.Errors
      For Each errLoop In Errs1
         With errLoop
            StrTmp = StrTmp &amp; vbCrLf &amp; "Error #" &amp; i &amp; ":"
            StrTmp = StrTmp &amp; vbCrLf &amp; "   ADO Error   #" &amp; .Number
            StrTmp = StrTmp &amp; vbCrLf &amp; "   Description  " &amp; .Description
            StrTmp = StrTmp &amp; vbCrLf &amp; "   Source       " &amp; .Source
            i = i + 1
         End With
      Next

      MsgBox StrTmp

      ' Clean up Gracefully
      On Error Resume Next
      GoTo Done

   End Sub

</PRE><h2>REFERENCES</h2>
 
<P>
For additional information, please see the following articles in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../ADOBJ/Q168354.htm">Q168354</A></B>
   TITLE     : INFO: Underlying OLE and OLEDB Provider Errors
               Exposed via ADO

  ARTICLE-ID: <B><A HREF="../ADOBJ/Q168335.htm">Q168335</A></B>
  TITLE     : HOWTO: Using ActiveX Data Objects Via Visual Basic

</PRE>(c) Microsoft Corporation 1997, All Rights Reserved. Contributions by
Don Willits, Microsoft Corporation
 
<PRE>Keywords          : kbcode kberrmsg adoengdb adovb
Version           : 4.0 5.0
Platform          : WINDOWS
Issue type        : kbinfo</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
