

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: ADO Parameter Refresh Err with MS Access 97 Querydef &amp; VB </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q181716">
<META NAME="KBModify" CONTENT="1998/02/27">
<META NAME="KBCreate" CONTENT="1998/02/24">
<META NAME="Keywords" CONTENT="kbcode adovb adoaccess">
<META NAME="KBArea" CONTENT="Support; KB; adobj">
<META NAME="Description" CONTENT="  When using the ADO Parameters.Refresh method with a text datatype parameter on a parameterized Microsoft Access 97 QueryDef, error 3708 listed below may occur:     The application has improperly defined a Parameter Object.  This occurs because a si...">
<META NAME="Product" CONTENT="adobj">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA1S,QAHE,QAPN,QDN9,QAMB,QAUD,QBS0,QAPF,QATX,QBXS,QAH4,QAAP,QANY,QA6A,QAKD V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: ADO Parameter Refresh Err with MS Access 97 Querydef &amp; VB</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 27, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q181716</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>ActiveX Data Objects (ADO), version 1.5
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When using the ADO Parameters.Refresh method with a text datatype parameter
on a parameterized Microsoft Access 97 QueryDef, error 3708 listed below
may occur:
<P>
<PRE>   The application has improperly defined a Parameter Object.

</PRE>This occurs because a size of zero (0) is returned on the text datatype
parameter by the ADO Refresh method.
<P>
This article gives an example of how to use the ADO Refresh method on a
parameterized Microsoft Access 97 QueryDef. Using the Refresh method does
result in a round trip to the server so if performance is important it
would be better to create a Parameter collection and define the parameter
properties in code.
<P>
<P><h2>CAUSE</h2>
 
<P>
The ADO Parameters.Refresh method does not return the actual parameter Size
property, the method returns a value of 0. Microsoft Access's parameter
syntax does not allow for the size of the parameter to be set in the
QueryDef. Setting the Size property of a text datatype parameter to 0 or a
value less than the actual size of the text field results in an error when
executing the ADO command that passes this parameter.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To work around this error it is necessary, in your code, to set the text
datatype parameter .Size property to a value equal to or greater than the
actual field size. The following example shows how to define the Size
property when working with a text datatype parameter.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft is researching this problem and will post new information here in
the Microsoft Knowledge Base as it becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 
<P>
The following example shows ways to return an ADO recordset from a
Microsoft Access QueryDef that expects a parameter to return a recordset of
one or more rows. The sample application has two procedures that use
Microsoft Access 97 parameterized QueryDefs.
<P>
The first procedure shows an example of passing a numeric parameter while
the second procedure shows an example of passing a text parameter. These
two procedures show how using the ADO Parameters.Refresh method retrieves
Parameter properties and returns an ADO recordset.
<P>
NOTE: You will need to acquire and install the Microsoft Data Access
Components (MDAC) version 1.5 stack for the sample in this article.
<P>
The first requirement is to create the Microsoft Access 97 QueryDefs. This
article assumes that you are familiar with creating new QueryDefs in
Microsoft Access 97. The following Visual Basic 5.0 code expects two new
QueryDefs in the sample Nwind.mdb included with Visual Basic version 5.0.
Create the new QueryDefs with the following properties:
<P>
<PRE>   Query Name       Table       Criteria       On Field      Datatype
   -------------------------------------------------------------------

   ProductsByID     Products    [ProductID]    ProductID     Integer
   CustomerByID     Customers   [CustomerID]   CustomerID    Text

</PRE>Make sure you also you set the parameter name and datatype in Microsoft
Access 97 under Query Parameters. Create each query with three fields.
<P>
After the Microsoft Access 97 QueryDef's are created, open a new Visual
Basic 5.0 Project. Form1 is created by default.

<OL><P><LI>Under Project, References, select the Microsoft ActiveX Data Objects 1.5
   Library.

<P><LI>Add two Command buttons to Form1 with these settings:
<P>
<PRE>      Button      Name         Caption
      -------------------------------------

      Command1    Command1     ProductsByID
      Command2    Command2     CustomerByID


</PRE><P><LI>Paste the following code into the Form1 General Declarations section:
<P>
<P><PRE>      Dim Conn As New ADODB.Connection
      Dim Cmd1 As New ADODB.Command
      Dim Cmd2 As New ADODB.Command
      Dim Rs As New ADODB.Recordset
</PRE><P>
<P><PRE>      Private Sub Form_Load()
<PRE></PRE>          Dim strConn As String

          strConn = "DSN=Access97;"
          With Conn
             .CursorLocation = adUseClient
             .ConnectionString = strConn
             .Open
          End With

      End Sub

      Private Sub Command1_Click()
          With Cmd1
             Set .ActiveConnection = Conn
             .CommandText = "ProductsByID"
             .CommandType = adCmdStoredProc

          End With

          Cmd1.Parameters.Refresh
          Cmd1.Parameters(0) = 3 'Set the numeric parameter value.

          Rs.Open Cmd1, , adOpenStatic, adLockReadOnly
          Debug.Print Rs(0), Rs(1), Rs(2)
          Rs.Close

      End Sub

      Private Sub Command2_Click()

          With Cmd2
              Set .ActiveConnection = Conn
             .CommandText = "CustomerByID"
             .CommandType = adCmdStoredProc

          End With

          Cmd2.Parameters.Refresh
          Cmd2.Parameters(0) = "COMMI"    'Set the text parameter value.

          ' If the next line is omitted you will get an error 3708 -
          ' "The application has improperly defined a Parameter Object".
          Cmd2.Parameters(0).Size = 5


          Rs.Open Cmd2, , adOpenStatic, adLockReadOnly
          Debug.Print Rs(0), Rs(1), Rs(2)
          Rs.Close

      End Sub

</PRE></OL>Run the example and click the CustomerByID button. The Debug window
displays the returned values. Comment the Cmd2.Parameters(0).Size = 5 line
and rerun the example. The error occurs.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For information on creating a Parameter collection for an Access 97
Querydef please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../ADOBJ/Q181782.htm">Q181782</A></B>
   TITLE     : HOWTO: Work with Access Querydef Parameter Using VB 5.0

</PRE>Microsoft Data Access Components (MDAC) 1.5 contains ADO version 1.5 that
is needed for this article. For more information on MDAC, please see the
following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../VBWIN/Q175018.htm">Q175018</A></B>
   TITLE     : HOWTO: Acquire and Install the Microsoft Oracle ODBC Driver
               v2.0
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: ado Access vbwin<BR>
Keywords          : kbcode adovb adoaccess<BR>
Version           : WINDOWS:1.5<BR>
Platform          : WINDOWS<BR>
Issue type        : kbprb<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 27, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
