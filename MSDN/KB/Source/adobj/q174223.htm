

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Refresh ADO Parameters for a Stored Procedure </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q174223">
<META NAME="KBModify" CONTENT="1997/09/24">
<META NAME="KBCreate" CONTENT="1997/09/23">
<META NAME="Keywords" CONTENT="adoall">
<META NAME="KBArea" CONTENT="Support; KB; adobj">
<META NAME="Description" CONTENT="  This article demonstrates two techniques for filling the ADO Parameters collection for a command object using a Stored Procedure.  MORE INFORMATION  Consider this stored procedure, which uses input, output, and return parameters:     create proc sp...">
<META NAME="Product" CONTENT="adobj">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAHE,QAPN,QAGI,QBXS,QBCF,QAH4,QAB9,QAJQ,QBCE,QAXB,QAW6,QAUD,QAM3,QADX,QAIF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Refresh ADO Parameters for a Stored Procedure</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 24, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q174223</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>ActiveX Data Objects (ADO), versions 1.0, 1.5
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article demonstrates two techniques for filling the ADO Parameters
collection for a command object using a Stored Procedure.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Consider this stored procedure, which uses input, output, and return
parameters:
<P>
<PRE>   create proc sp_AdoTest( @InParam int, @OutParam int OUTPUT )
   as
   SELECT @OutParam = @InParam + 10
   SELECT * FROM Authors
   WHERE State &lt;&gt; 'CA'
   RETURN @OutParam +10"

</PRE>The ADO Parameters collection will need one object for each parameter, and
more importantly, the direction property of each parameter must match the
order of the parameters in the calling syntax. Typically, the syntax for
invoking this procedure through ODBC would be as follows:
<P>
<PRE>   {call ?=sp_AdoTest(?, ?)}

</PRE>Using this syntax in the Command object's CommandText property forces you
to create each parameter individually, as shown in the code fragment below.
<P>
<PRE>   ...
   Set Cmd1 = New ADODB.Command
   Cmd1.ActiveConnection = Conn1
   Cmd1.CommandText      = "{call ?=sp_AdoTest(?, ?)}"

   Set Param1 = Cmd1.CreateParameter(, adInteger, adParamReturnValue)
   Cmd1.Parameters.Append Param1

   Set Param2 = Cmd1.CreateParameter(, adInteger, adParamInput)
   Cmd1.Parameters(1).Value = 10
   Param2.Value = 10
   Cmd1.Parameters.Append Param2

   Set Param3 = Cmd1.CreateParameter(, adInteger, adParamOutput)
   Cmd1.Parameters.Append Param3

   Set Rs1 = Cmd1.Execute()

</PRE>This technique is hazardous in that if the stored procedure changes the
order or direction of parameters, this code has to be changed. There is a
much smaller alternative, which will get the same results. By just listing
the name of the stored procedure for CommandText and refreshing the
Parameters Collection, ADO automatically fills the Parameters Collection,
one for each parameter required by the stored procedure. This is
demonstrated below:
<P>
<PRE>   Cmd1.ActiveConnection = Conn1
   Cmd1.CommandText = "sp_AdoTest"
   Cmd1.CommandType = adCmdStoredProc
   Cmd1.Parameters.Refresh
   Cmd1.Parameters(1).Value = 10

   Set Rs1 = Cmd1.Execute()

</PRE>Note that the Parameters Refresh queries the server and actually replaces
the value for Cmd1.CommandText to the correct value -- that is, "{call
?=sp_AdoTest(?, ?)}" -- in addition to correctly filling the parameters
collection.
<P>
This generates exactly the same rowset, but lets ADO fill the parameters
collection automatically and correctly (although this code does assume the
second parameter is an input parameter). However, one potential drawback to
this method is the overhead involved. It does require a round trip to the
server to get the parameter information, and thus there will be a greater
performance hit than if you build the parameters yourself.
<P>
 
<PRE>Keywords          : adoall
Version           : WINDOWS:1.0,1.5
Platform          : WINDOWS
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 24, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
