

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: Custom Property from Provider of Type adIDispatch Fails </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q173659">
<META NAME="KBModify" CONTENT="1998/01/26">
<META NAME="KBCreate" CONTENT="1997/09/10">
<META NAME="Keywords" CONTENT="adoall ado10bug">
<META NAME="KBArea" CONTENT="Support; KB; adobj">
<META NAME="Description" CONTENT="  ActiveX Data Objects (ADO) does not correctly recognize properties of type adIDispatch. If your ADO provider raises a custom property of type adIDispatch, ADO does not correctly return the interface, for example:     dim val as variant    dim adopr...">
<META NAME="Product" CONTENT="adobj">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QAUD,QBWB,QBBS,QAP2,QAY2,QABA,QBXS,QAW6,QAH4,QAAP,QAKP,QDKW,QALW,QA0N V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: Custom Property from Provider of Type adIDispatch Fails</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 26, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q173659</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>ActiveX Data Objects (ADO)
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
ActiveX Data Objects (ADO) does not correctly recognize properties of type
adIDispatch. If your ADO provider raises a custom property of type
adIDispatch, ADO does not correctly return the interface, for example:
<P>
<PRE>   dim val as variant
   dim adoprop as adodb.property
   ...
   set val = adoprop.Value

</PRE>When the current property represented by adoprop is of type adIdispatch,
ADO invokes the Interface's default method rather than the IDispatch
interface, and attempts to return the result from that. If the interface's
default method requires arguments, then the call fails and an error is
returned. This error is dependent on the implementation of the interface,
but typically it appears to be "Type Mismatch" from OLE objects implemented
using MFC OLE.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
There is no way to work around this bug within ADO. However, if you have
created your own OLE-DB provider, you can get around this by raising the
property, for example, as a column of a given recordset. In this case, you
would bind the IDispatch to a column using the OLE-DB
IAccessor::CreateAccessor interface, and then return that property via the
IRowset:GetData method.
<P>
This workaround will work only if you have a custom OLE-DB provider and you
have the source code for your OLE-DB provider.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. We are researching this bug and will post
new information here in the Microsoft Knowledge Base as it becomes
available.
<P>
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 
<P>
Given a custom OLE-DB provider that raises a property to the ADO Recordset
object of type adIdispatch, this code may generate unexpected results for
that property:
<P>
<PRE>   Set adoprops = rs.Properties
   ' When Count is invoked, all properties are read from the provider.
   ' The IDIspatch interface incorrectly has it's default method invoked.
   for i = 0 To adoprops.Count - 1
      set adoprop = adoprops.Item(i)
      'For the custom property, the type is correctly returned as
      ' 9 (DBTYPE_IDISPATCH)
      adotyp = adoprop.Type
      ' May generate an error as default method the interface is returned,
      ' rather than the actual interface
      set val = adoprop.Value
   Next i

</PRE> 
<PRE>Keywords          : adoall ado10bug
Version           : WINDOWS:
Platform          : WINDOWS
Issue type        : kbbug</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 26, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
