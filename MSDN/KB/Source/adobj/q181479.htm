

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Getting SELECT DISTINCT To Work Under ADO with SQL Server </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q181479">
<META NAME="KBModify" CONTENT="1998/02/23">
<META NAME="KBCreate" CONTENT="1998/02/20">
<META NAME="Keywords" CONTENT="kbcode adoall adogenis">
<META NAME="KBArea" CONTENT="Support; KB; adobj">
<META NAME="Description" CONTENT="  Under certain conditions with ActiveX Data Objects (ADO), SELECT DISTINCT in your SQL statement will not provide distinct records. However, you have to meet all of the following conditions to cause the problem to occur:   - You opened a standalone ...">
<META NAME="Product" CONTENT="adobj">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QAM9,QALX,QBWS,QAPN,QAKH,QAMB,QA5V,QA2Q,QAW6,QABM,QBV8,QAUD,QAB9,QAG2 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Getting SELECT DISTINCT To Work Under ADO with SQL Server</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 23, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q181479</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>ActiveX Data Objects (ADO), versions 1.0, 1.5
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Under certain conditions with ActiveX Data Objects (ADO), SELECT DISTINCT
in your SQL statement will not provide distinct records. However, you have
to meet all of the following conditions to cause the problem to occur:

<UL><LI>You opened a standalone ADO recordset without opening it off a
   Command or Connection object.

<LI>The data source you are opening is SQL Server.

<LI>The recordset CursorLocation is set to adUseClient.
<P>
</UL>This happens when either the Recordset.Open method is used or when the
recordset is obtained from a command object by setting the recordset equal
to the return value of Command.Execute.
<P>
<P><h2>CAUSE</h2>
 
<P>
The reason this does not work with adUseClient is that ADO uses SQL
Server's FOR BROWSE option on the SQL statement to get extended metadata in
order to process updates. The use of this option causes SQL version 6.5 to
ignore the DISTINCT keyword.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Here are the two possible workarounds to get SELECT DISTINCT to work as
expected:

<UL><LI>Set the CursorLocation to adUseServer instead of adUseClient.

<LI>When using the Open method with adUseClient you can workaround this
   problem by using a command object and setting its ActiveConnection to
   the connection used in the Open statement.
<P>
</UL>The Steps to Reproduce Behavior below demonstrates the workarounds for both
the Open and the Command methods.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft is researching this problem and will post new information here in
the Microsoft Knowledge Base as it becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 

<OL><P><LI>Create a standard .exe project, and under Project, References select
   Microsoft ActiveX Data Objects 1.5 Library.

<P><LI>Paste the following code in the Declaration section of the form:
<P>
<P><PRE>      Option Explicit
</PRE><P>
<P><PRE>      Dim conn As New Connection
      'Dim com As New Command  'Uncomment to make DISTINCT work.
      Dim rs As New Recordset
</PRE><P>
<P><PRE>      Private Sub Command1_Click()
</PRE><P>
<PRE>        conn.open "mymachine", "sa", ""
        conn.cursorlocation = adUseClient  'Change to aduseServer.
        'com.ActiveConnection = conn  'Uncomment to make DISTINCT work.

        rs.open "select distinct state from authors", conn, _
            adOpenKeyset, adLockOptimistic
        MsgBox rs.RecordCount
      End Sub

      Private Sub Command2_Click()
        Dim counter As Integer
        counter = 0
        conn.Open "dsn=mymachine;id=sa;pwd=;"
        com.ActiveConnection = conn
        conn.CursorLocation = adUseClient   'Comment this
        'conn.CursorLocation = adUseServer  'and uncomment this.
        com.CommandText = "select distinct state from authors"
        com.CommandType = adCmdText
        rs.CursorType = adOpenKeyset
        'cursortype will be adopenforwardonly with adUseServer.
        Set rs = com.Execute
        While Not rs.EOF
          Debug.Print rs!State
          counter = counter + 1
          rs.MoveNext
        Wend
        Debug.Print "--------------------"
        MsgBox counter  'recordcount return -1 with adUseServer
      End Sub

</PRE><P><LI>Run the code and click Command1. Note the number of records returned.
   Change adUseClient to adUseServer in the CursorLocation. Run the code
   again and fewer records are returned if there are duplicate states.

<P><LI>Change aduseServer back to adUseClient. Uncomment the Dim of the command
   object and the code in Command1. Run the code again. You receive the
   correct number of records using this technique also.

<P><LI>Run the code again and click Command2. Note the counter. Comment the
   CursorLocation for adUseClient and uncomment the adUseServer
   CursorLocation. Run the code and note the counter again.
<P>
</OL> 
<PRE>Keywords          : kbcode adoall adogenis
Version           : WINDOWS:1.0,1.5
Platform          : WINDOWS
Issue type        : kbprb
Solution Type     : kbnofix</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 23, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
