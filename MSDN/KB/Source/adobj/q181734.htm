

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Invoke a Parameterized ADO Query using VBA/C++/Java </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q181734">
<META NAME="KBModify" CONTENT="1998/03/06">
<META NAME="KBCreate" CONTENT="1998/02/25">
<META NAME="Keywords" CONTENT="kbcode adoall adoengdb adogenis adovb adovc adovj">
<META NAME="KBArea" CONTENT="Support; KB; adobj">
<META NAME="Description" CONTENT="  In order to open a parameterized query within ActiveX Data Objects (ADO), you have to first open a Connection Object, then a Command Object, fill the Parameters Collection with one parameter in the collection for each parameter in the query, and th...">
<META NAME="Product" CONTENT="adobj">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QAW6,QBS0,QBWS,QAN0,QDNQ,QBXS,QBG2,QBFY,QA5F,QAHE,QANF,QAI5,QAB9,QA1O V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Invoke a Parameterized ADO Query using VBA/C++/Java</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 6, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q181734</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>ActiveX Data Objects (ADO), versions 1.0, 1.5
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In order to open a parameterized query within ActiveX Data Objects (ADO),
you have to first open a Connection Object, then a Command Object, fill the
Parameters Collection with one parameter in the collection for each
parameter in the query, and then use the Command.Execute() method to open
the ADO Recordset.
<P>
This article demonstrates how to perform this operation using VBA/VBScript,
C++, and Java.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
All of the code samples below assume an ODBC Data Source named "BIBLIO"
that points to the Biblio.mdb file that ships with Visual Basic 5.0. A
parameterized query against the Authors table is performed, returning a
recordset with all records where the field Au_ID &lt; 5, and using a
parameterized SQL statement. These code snippets are abbreviated from the
ADO samples listed in the REFERENCES section below.
<P>
<P><h3>VBA within Visual Basic or Microsoft Access and VBScript from ASP</h3>
 
<P>
<PRE>   Dim Conn1 As ADODB.Connection
   Dim Cmd1 As ADODB.Command
   Dim Param1 As ADODB.Parameter
   Dim Rs1 As ADODB.Recordset

   Dim i As Integer

   ' Trap any error/exception.
   On Error Resume Next

   ' Create and Open Connection Object.
   Set Conn1 = New ADODB.Connection
   Conn1.ConnectionString = "DSN=Biblio;UID=adimin;PWD=;"
   Conn1.Open

   ' Create Command Object.
   Set Cmd1 = New ADODB.Command
   Cmd1.ActiveConnection = Conn1
   Cmd1.CommandText = "SELECT * FROM Authors WHERE AU_ID &lt; ?"

   ' Create Parameter Object.
   Set Param1 = Cmd1.CreateParameter(, adInteger, adParamInput, 5)
   Param1.Value = 5
   Cmd1.Parameters.Append Param1
   Set Param1 = Nothing

   ' Open Recordset Object.
   Set Rs1 = Cmd1.Execute()

</PRE>For VBScript users, you would replace the Dim statements with equivalent
CreateObject calls, such as:
<P>
<PRE>   Set conn1 = CreateObject( "ADODB.Connection.1.5" )

</PRE>As ADO 1.x is not binary compatible, it is helpful to specify which version
of ADO your script is referencing.
<P>
<P><h3>C++ Using #import</h3>
 
<P>
<PRE>   #import "C:\Program Files\Common Files\System\ado\msado15.dll" \
           rename( "EOF", "adoEOF" )
   ...
   _variant_t  vtEmpty (DISP_E_PARAMNOTFOUND, VT_ERROR);
   _variant_t  vtEmpty2(DISP_E_PARAMNOTFOUND, VT_ERROR);
   ...
   ADODB::_ConnectionPtr  Conn1;
   ADODB::_CommandPtr     Cmd1;
   ADODB::_ParameterPtr   Param1;
   ADODB::_RecordsetPtr   Rs1;

   // Trap any error/exception.
   try
   {
       // Create and Open Connection Object.
       Conn1.CreateInstance( __uuidof( ADODB::Connection ) );
       Conn1-&gt;ConnectionString =
                           _bstr_t(L"DSN=Biblio;UID=adimin;PWD=;");
       Conn1-&gt;Open( _bstr_t(L""), _bstr_t(L""), _bstr_t(L""), -1 );

       // Create Command Object.
       Cmd1.CreateInstance( __uuidof( ADODB::Command ) );
       Cmd1-&gt;ActiveConnection = Conn1;
       Cmd1-&gt;CommandText = _bstr_t(L"SELECT * FROM Authors "
                                   L"WHERE Au_ID &lt; ?");

       // Create Parameter Object.
       Param1 = Cmd1-&gt;CreateParameter( _bstr_t(L""),
                                       ADODB::adInteger,
                                       ADODB::adParamInput,
                                       -1,
                                       _variant_t( (long) 5) );
       Param1-&gt;Value = _variant_t( (long) 5 );
       Cmd1-&gt;Parameters-&gt;Append( Param1 );

       // Open Recordset Object.
       Rs1 = Cmd1-&gt;Execute( &amp;vtEmpty, &amp;vtEmpty2, ADODB::adCmdText );

   }

   catch( CException *e ) { e-&gt;Delete(); }
   catch(...)             {  }


</PRE>For a demonstration of how to use a Parameterized Query either with classes
generated by the Microsoft Foundation Class (MFC) ClassWizard, or using
straight COM programming, please see the ADOVC sample referenced in the
REFERENCES section below.
<P>
<P><h3>Java</h3>
 
<P>
<PRE>   msado15._Connection  Conn1   = new msado15.Connection();
   msado15._Command     Cmd1    = null;
   msado15._Recordset   Rs1     = new msado15.Recordset();
   boolean              bEOF;

   Variant              v1      = new Variant();
   Variant              v2      = new Variant();

   // Trap any error/exception.
   try
   {
       // Create and Open Connection Object.
       Conn1.putConnectionString( bstrAccessConnect );
       Conn1.Open( bstrEmpty, bstrEmpty, bstrEmpty, -1 );

       // Create Command Object.
       Cmd1= new msado15.Command();
       Cmd1.putActiveConnection( Conn1 );
       Cmd1.putCommandText( "SELECT * FROM Authors WHERE Au_ID &lt; ?" );

       // Create Parameter Object.
       v1.putString( "P1" );
       v2.putInt( 5 );
       Cmd1.getParameters().Append(
            Cmd1.CreateParameter( v1.getString(),
                         msado15.DataTypeEnum.adInteger,
                         msado15.ParameterDirectionEnum.adParamInput,
                         0,
                         v2 ) );

       // Open Recordset Object.
       Rs1 = Cmd1.Execute( vtEmpty, vtEmpty2,
                           msado15.CommandTypeEnum.adCmdText );
       Rs1.Requery( -1 );

   }
   // Catch Blocks
   catch (com.ms.com.ComFailException e) { }
   catch(Exception e)                    { }

</PRE>In this case, the requery may be necessary after opening the recordset.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For additional information, please see the following article in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../ADOBJ/Q172403.htm">Q172403</A></B>
   TITLE     : SAMPLE: Adovb.exe Demonstrates How to Use ADO with Visual
               Basic

   ARTICLE-ID: <B><A HREF="../ADOBJ/Q174565.htm">Q174565</A></B>
   TITLE     : FILE: Adovc.exe Demonstrates How to Use ADO with Visual C++


</PRE> 
<PRE>Keywords          : kbcode adoall adoengdb adogenis adovb adovc adovj
Version           : WINDOWS:1.0,1.5
Platform          : WINDOWS
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 6, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
