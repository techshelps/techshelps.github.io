

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Monitor or Intercept COMM Data Traffic in Windows 95 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q141230">
<META NAME="KBModify" CONTENT="1996/08/05">
<META NAME="KBCreate" CONTENT="1995/12/13">
<META NAME="Keywords" CONTENT="kbgraphic kbhowto kbwebcontent">
<META NAME="KBArea" CONTENT="Support; KB; win32ddk">
<META NAME="Description" CONTENT="  In Windows 95, you may sometimes want to set up a way to intercept all COMM data passing from any application to and from the hardware in use. Generally, not all traffic is successfully caught.  MORE INFORMATION  There are five basic ways data and ...">
<META NAME="Product" CONTENT="Win32 DDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAA1,QDL9,QBWQ,QBWO,QBWN,QAYY,QAGI,QDI2,QAJH,QBLO,QAM7,QALF,QDNF,QDMW,QDJ9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Monitor or Intercept COMM Data Traffic in Windows 95</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 5, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q141230</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Win32 Device Development Kit (DDK) for Windows 95
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Windows 95, you may sometimes want to set up a way to intercept all COMM
data passing from any application to and from the hardware in use.
Generally, not all traffic is successfully caught.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
There are five basic ways data and control is passed to VCOMM/COMBUFF:

<UL><LI>Exported protected mode API.

<LI>VCOMM_WRITE_COMM VxD calls used with helper VxD's - 16-bit or 32-bit
   applications.

<LI>DeviceIOControl for 32-bit applications.

<LI>int 2F calls used with USER/COMM.DRV - 16-bit applications.

<LI>COMMBUFF for MS-DOS VMs bypasses VCOMM altogether - MS-DOS-based
   applications
<P>
</UL>If you are only hooking one of these, you will eventually miss data in some
application. The INT 2F and COMBUFF are not completely publically
documented, so it isn't a simple job to monitor all data. The best way to
intercept COMM data is to create a miniport driver (see Vcomm.doc and
serial sample and Msports.inf) that would require its own enumerator
(static VxD) to register the miniport with VCOMM. The miniport would
receive the traffic and, on its own, open the actual port to relay through
traffic.
<P>
A second solution is to register your custom port driver alone and have it
talk directly to the hardware.
<P>
A third solution is to write your own version of Serial.vxd, name it
something different (required) and write an .inf to install it.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00<BR>
KBCategory: kbgraphic kbhowto kbwebcontent<BR>
KBSubcategory:<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 5, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
