

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Long Dir/File Names Not Supported by CreateFile to Open VxDs </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q141146">
<META NAME="KBModify" CONTENT="1995/12/13">
<META NAME="KBCreate" CONTENT="1995/12/12">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; win32ddk">
<META NAME="Description" CONTENT="  To dynamically load your VxD in Windows 95, you can use CreateFile as documented in the Win32 SDK; follow this structure:     Guides       Programmer's Guide to Windows 95          Using Windows 95 Features             Device I/O Control           ...">
<META NAME="Product" CONTENT="Win32 DDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAFI,QAUJ,QBVV,QAGI,QARM,QAB5,QDL9,QBXB,QBWQ,QBWO,QBWN,QBBI,QATJ,QAOG,QAKD V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Long Dir/File Names Not Supported by CreateFile to Open VxDs</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 13, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q141146</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Win32 Device Development Kit (DDK) for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
To dynamically load your VxD in Windows 95, you can use CreateFile as
documented in the Win32 SDK; follow this structure:
<P>
<PRE>   Guides
      Programmer's Guide to Windows 95
         Using Windows 95 Features
            Device I/O Control
               Input and Output Control in Applications
                  Opening the VxD.

</PRE>This section of the Win32 SDK states:
<P>
<PRE>   CreateFile checks for a file name extension to determine whether VxDName
   specifies a file. If a file name extension (such as .vxd) is present,
   the function looks for the file in the standard search path.

</PRE>You can specify the path to the dynamically loadable VxD explicitly. For
example, a 32-bit application can load a VxD named Driver.vxd in the
C:\Mydir directory by using the following call. Note that The CREATE_NEW
flag is not necessary.
<P>
<PRE>    hCVxD = CreateFile("\\\\.\\C:\\MYDIR\\DRIVER.VXD", 0,0,0,
                        CREATE_NEW, FILE_FLAG_DELETE_ON_CLOSE, 0);

</PRE>In your CreateFile call, you can only use directory names and file names
that have eight or fewer characters with extensions of three or fewer
characters. Long names prevent the VxD from loading.
<P>
You can make use of long directory names by using the search path instead
of explicitly specifying the path in the CreateFile call. You may include
long directory names in your Autoexec.bat "PATH=" statement, restarting the
computer to make the new path effective.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The Win32 SDK also states:
<P>
<PRE>   If VxDName has no file name extension, CreateFile checks the registry to
   see if the name is also a value name under the KnownVxDs key in
   HKLM\System\CurrentControlSet\Control\SessionManager. If it is a value
   name, CreateFile uses the current value associated with the name as the
   full path of the VxD file. This method is useful for specifying VxDs
   that are not in the standard search path. In the following example,
   CreateFile searches the registry for the MYVXDPATH value.

   hDevice = CreateFile("\\\\.\\MYVXDPATH", 0, 0, NULL, 0,
       FILE_FLAG_DELETE_ON_CLOSE, NULL);

</PRE>Again, the restriction on long names applies. MYVXDPATH cannot contain long
names; if it does, the VxD will not load.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 Windows 95 kbinf<BR>
KBCategory: kbprg<BR>
KBSubcategory: DdkMisc<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 13, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
