

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Build Your Own VxDCall Wrappers for Windows 95 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q131030">
<META NAME="KBModify" CONTENT="1996/08/05">
<META NAME="KBCreate" CONTENT="1995/06/02">
<META NAME="Keywords" CONTENT="kbprg kbwebcontent">
<META NAME="KBArea" CONTENT="Support; KB; win32ddk">
<META NAME="Description" CONTENT="  The sample found on the Microsoft Development Platform DDK CD in \DDK\BASE\SAMPLES\CVXD32 implements two methods of  wrapping  VxDCalls in the C programming language.  MORE INFORMATION  A wrapper is a friendly function call or method that hides imp...">
<META NAME="Product" CONTENT="Win32 DDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB5,QBFY,QBA8,QAY5,QAUD,QACK,QABA,QA2O,QAPN,QAPF,QAGI,QBV8,QAB9,QBJQ,QALF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Build Your Own VxDCall Wrappers for Windows 95</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 5, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q131030</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Win32 Device Development Kit (DDK) version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The sample found on the Microsoft Development Platform DDK CD in
\DDK\BASE\SAMPLES\CVXD32 implements two methods of "wrapping" VxDCalls in
the C programming language.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
A wrapper is a friendly function call or method that hides implementation
details of a difficult programming interface.  The VxD in
\DDK\BASE\SAMPLES\CVXD32 implements two different wrappers for submitting
VxDCalls in C.
<P>
The first method uses inline functions pre-defined in \DDK\INC32\VMM.H.
Here is the Get_Sys_VM_Handle example:
<P>
HVM VXDINLINE
Get_Sys_VM_Handle(VOID)
{
<PRE>    HVM hvm;
    Touch_Register(ebx)
    VxDCall(Get_Sys_VM_Handle);
    _asm mov [hvm], ebx
    return(hvm);
</PRE>}
<P>
Because standard C appends an underscore to the beginning of a symbol there
is no conflict with the VMM_Service Get_Sys_VM_Handle.
<P>
You can also find the definitions of HVM, VXDINLINE, and Touch_Register in
VMM.H file. In this way, you can use inline assembly and hide the details
in an inline function in a header file. There are, however, limitations to
using inline functions for your wrappers:

<UL><LI>They must return no more than a dword to avoid a problem with C++.

<LI>They must have a restricted arguement list so that no parameters are
   used as temporary stack and all registers are preserved.
<P>
</UL>The second method makes calls to the Virtual Keyboard Device services. In
VKDWRAPS.H macros in \DDK\INC32\VXDWRAPS.H are used to define wrapper
functions that are implemented in assembly found in VKDGKO.ASM.
<P>
MAKE_HEADER and PREPEND are wrappers themselves to hide the implemtation of
the segment structure of a VxD. In this way, arguements can be passed to
and from VxD services. Notice that the Get_Sys_VM_Handle inline assembly is
used to return the handle, but if more significant pre- or post-processing
is required, you should implement the wrapper in Assembler.
<P>
Unlike VMM.H, the include files defining most VxD services have no
predefined C wrappers for their services. Therefore, it is the
responsibility of the programmer to build inline and assembly wrappers for
the services needed. In this way, any VxD service is callable from C.
<P>
In VxDWraps.Inc, you can find wrapper declarations for the following
groups of functions:
<P>
<PRE>   VMMReg
   VMMReg
   ConfigMg
   Shell
   VxDLdr
   VComm
   IRS
   VPowerD

</PRE>Be sure to include the appropriate header (.h) file before VxDWraps.h in
your source code.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 VMMCall MAKE_HEADER win95<BR>
KBCategory: kbprg kbwebcontent<BR>
KBSubcategory: DdkMisc<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 5, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
