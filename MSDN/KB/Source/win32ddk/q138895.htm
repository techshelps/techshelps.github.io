

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB:Status Error Bit Ignored by Windows 95 Serial Port Driver </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q138895">
<META NAME="KBModify" CONTENT="1997/04/07">
<META NAME="KBCreate" CONTENT="1995/10/30">
<META NAME="Keywords" CONTENT="kbprg NTDDKComm">
<META NAME="KBArea" CONTENT="Support; KB; win32ddk">
<META NAME="Description" CONTENT="  Under certain rare conditions, the overrun (OR) error, framing error (FE), and parity error (PE) status error bits are momentarily ignored in the Microsoft Windows 95 serial port driver, Serial.vxd. This behavior only affects users expecting  burst...">
<META NAME="Product" CONTENT="Win32 DDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QDJ9,QAAP,QAB4,QAR4,QDL9,QBWO,QBWN,QALQ,QAEF,QAA7,QAKP,QAU3,QALG,QAJX,QADR V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB:Status Error Bit Ignored by Windows 95 Serial Port Driver</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 7, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q138895</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
4.00
WINDOWS
kbprg
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Win32 Device Development Kit (DDK) for Windows 95,
   version 4.00
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Under certain rare conditions, the overrun (OR) error, framing error (FE),
and parity error (PE) status error bits are momentarily ignored in the
Microsoft Windows 95 serial port driver, Serial.vxd. This behavior only
affects users expecting "bursts" or packets of information coming into the
serial COM ports.
<P>
If you are using the standard error reporting simply to notify the user
in standard applications, this behavior will probably not affect you.
<P>
<P><h2>CAUSE</h2>
 
<P>
The bits affected are in the LSR (line status register) in the serial chip.
When the Serial.vxd driver determines that data is available and there are
currently no errors, it enters a loop clearing the FIFO (first in, first
out) buffer. This is a very fast loop which only needs to read a minimum of
two bytes or a maximum of seventeen bytes to clear the hardware buffer
depending on the type of chip in use. Remember, worst case, one last byte
may be clocking in while you are reading another byte. It is assumed that
the loop time is easily fast enough to complete before subsequent incoming
bytes are ready to be read.
<P>
To check for remaining byte(s), the loop reads the LSR, which contains the
DR (data ready) bit. The remaining bits are ignored. However, reading the
LSR, clears the OR, FE, and PE error bits.
<P>
If an error occurs in the brief time on the way to this loop, it is ignored
and cleared. There are two cases where this might be a problem if the FIFO
triggering is set to the maximum, or if an 8250-style chip is being used.
One case occurs during a high speed continuous data transfer just bordering
on overrun, where the very first error must be flagged immediately. The
other case involves a high speed burst or packet of data, again bordering
on overrun where the error occurs just at the end of the transfer so that
the one and only error might be missed occasionally.
<P>
As you would expect, applications handling any sort of continuing data, not
in a burst, quickly get subsequent error codes being reported. Any
condition, such as overrun still continues to cause ongoing errors, and at
the user level, it is noted by an application.
<P>
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Either of the following steps can be used to correct this behavior:
<P>
- If you are using the maximum FIFO setting, reduce it to give headroom to
<PRE>  avoid overrun error possibilities. This relates specifically to overrun,
  not parity or framing errors.

  -or-

</PRE>- There is currently no fix or patch available to correct this behavior.
<PRE>  However, you can write your own version of the device driver that
  corrects this problem, after inspecting the Serial example supplied on
  the Win32 DDK compact disc. In the supplied public Win32 DDK sample, look
  in Serial.asm, and search for the data_availxx: labels to find the data
  reading loop. To correct this behavior, add a save location to place the
  LSR in before masking to get to the DR bit in a similar loop.

</PRE><h2>REFERENCES</h2>
 
<P>
Intel product specification #231658-005 ISBN 1-55512-090-3,
pages 2-26 - 2-79.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbprg<BR>
KBSubcategory: NTDdkComm<BR>
Additional reference words: 95 Windows Bug Serial COMM win95<BR>
Keywords            : kbprg NTDDKComm<BR>
Version             : 4.00<BR>
Platform            : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 7, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
