

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IOCtl Calls in Protected-Mode Microsoft Windows </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q63974 ">
<META NAME="KBModify" CONTENT="1995/04/12">
<META NAME="KBCreate" CONTENT="1990/07/18">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; win16ddk">
<META NAME="Description" CONTENT=" Generally, Microsoft Windows translates standard MS-DOS IOCtl calls in the two protected modes (standard mode and enhanced mode). Therefore, in most cases an application can make IOCtl calls regardless of the mode in which Windows is running. Howeve...">
<META NAME="Product" CONTENT="Win16 DDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGI,QDL9,QBWO,QBWN,QA5W,QAIF,QACJ,QAO3,QAO2,QAC2,QBWQ,QBW6,QAYY,QAY5,QAH7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>IOCtl Calls in Protected-Mode Microsoft Windows</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 12, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q63974 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Device Driver Kit (DDK) for Windows versions 3.0
   3.1
</UL> 
<P>
Generally, Microsoft Windows translates standard MS-DOS IOCtl calls in the
two protected modes (standard mode and enhanced mode). Therefore, in most
cases an application can make IOCtl calls regardless of the mode in which
Windows is running. However, if the buffer passed to the IOCtl call
contains pointers to additional data, the calling application must
translate those pointers and the data referenced by those pointers into a
form that can be used in real mode, before making the IOCtl call.
<P>
MS-DOS functions are executed only in real mode, and thus can only access
data that is located in the first 1 MB of memory. To work within this
limitation, the memory referenced by the pointers contained in the buffer
must be allocated below 1 MB. In addition, the buffer must contain the
segment address of the data, rather than the protected-mode selector.
<P>
For example, consider IOCtl call Write Control Data to Character Device
Driver, Interrupt 21h Function 44h Subfunction 03h. The parameters to this
call are as follows:
<P>
<PRE>   AH = 44H
   AL = 03H
   BX = handle
   CX = number of bytes to write
   DS:DX = segment:offset address of data buffer

</PRE>Because this interface is known to protected-mode Windows, Windows is able
to translate (map) the protected-mode address passed in DS:DX to a memory
location that is accessible in real mode. Because of this translation, in
most cases the application is not required to perform any additional work
to make the call. The caller should set the DS:DX register pair to the
selector:offset address of the data buffer.
<P>
If an MS-DOS device driver defines a special interface that requires
pointers to additional data be passed in the main data buffer, the caller
must ensure the pointers passed in the data buffer can be used in real
mode. The caller should allocate the memory referenced by these pointers
using the GlobalDOSAlloc() function.
<P>
GlobalDOSAlloc() returns a double-word. If the allocation is successful,
the high-order word contains the segment:paragraph address of the
allocated buffer, while the lower-order word contains the selector to
the buffer. The selector is used to access the buffer in protected
mode; the segment:paragraph address can be used in real mode. Use the
GlobalDOSFree() function to free memory allocated by GlobalDOSAlloc().
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10 DDKDPMI DDKTSR<BR>
KBCategory: kbprg<BR>
KBSubcategory: IsrTsrIncompa<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 12, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
