

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Implementing Display Driver Device Bitmaps </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q92533 ">
<META NAME="KBModify" CONTENT="1995/03/30">
<META NAME="KBCreate" CONTENT="1992/11/09">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; win16ddk">
<META NAME="Description" CONTENT="  The  Microsoft Windows 3.1 Device Driver Kit: Device Driver Adaptation Guide  (DDAG) documentation on implementing display driver Device Bitmaps is inconsistent between chapters 2 and 10.  Chapter 10 information for RealizeObject states that you ca...">
<META NAME="Product" CONTENT="Win16 DDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB5,QDL9,QBWO,QBWN,QAU9,QAGI,QBCH,QA9N,QA4G,QA2Q,QASB,QAB2,QAKP,QAYY,QAIF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Implementing Display Driver Device Bitmaps</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 30, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q92533 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Device Driver Kit (DDK) for Windows version 3.1
   and 3.11
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The "Microsoft Windows 3.1 Device Driver Kit: Device Driver Adaptation
Guide" (DDAG) documentation on implementing display driver Device Bitmaps
is inconsistent between chapters 2 and 10.
<P>
Chapter 10 information for RealizeObject states that you can fail the call
to realize a device bitmap (i.e. when the wStyle parameter is OBJ_PBITMAP).
This information appears to conflict with that found in chapter 2, section
2.1.14. The information in chapter 2 is correct, and is more specific to
display drivers.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
If you implement Device Bitmaps, you can not fail any calls to
SelectBitmap(), BitmapBits(), or RealizeObject(). If you can't find room in
off-screen video memory, you must allocate main system memory with
GlobalAlloc().
<P>
You can use SelectBitmap as the place to lock-down your huge bitmaps that
won't fit off-screen. However, these bitmaps won't always be selected prior
to MemoryDIBBits() or BitmapBits() (these are the places where the bitmap
is passed through GDI directly rather than indirectly via DCs).
Furthermore, bitmaps may be selected multiple times without being
deselected. Additionally, a bitmap may be freed while it is still selected.
<P>
According to the DDK documentation, GDI will leave you to manage your
PBITMAP and its header if the first word is non-zero. (The PBITMAP must
still be implemented as documented on page 504 of the 3.1 DDK DDAG.) There
are at least two cases where this is not true: GDI will periodically
overwrite the dword at the bmBits offset (with seg:0020) and it may also
overwrite the bmlpPDevice field. Some driver developers have used the
"reserved" structure members of the PBITMAP to store the information that
should be in the overwritten fields, thus avoiding the overwrite problem
(this does however create version dependence.)
<P>
There is also a small memory leak which may be specific to device bitmaps:
GDI will create a bitmap to hold a copy of the bits passed into
CreatePatternBrush(), but it will never free the copy. Excel makes a lot of
these calls when it draws charts, resulting in a pile of orphaned 8x8 brush
copies (which will eventually exhaust GDI's heap!)
<P>
Because of these problems, we recommend that Device Bitmaps be implemented
as a SYSTEM.INI option, allowing users to turn them off if they determine
Device Bitmaps are causing problems.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.10 3.11<BR>
KBCategory: kbprg<BR>
KBSubcategory: D2DispBitmaps<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 30, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
