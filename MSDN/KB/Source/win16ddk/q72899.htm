

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SAMPLE: Calling PostMessage from a Virtual Device (VxD) </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q72899 ">
<META NAME="KBModify" CONTENT="1996/02/15">
<META NAME="KBCreate" CONTENT="1991/06/13">
<META NAME="Keywords" CONTENT="kbprg kbfile">
<META NAME="KBArea" CONTENT="Support; KB; win16ddk">
<META NAME="Description" CONTENT="  In the Microsoft Windows graphical environment, a virtual device (VxD) can indirectly call the PostMessage function. This enables any virtual machine (VM) to communicate with the system VM. The text below briefly describes the steps necessary for t...">
<META NAME="Product" CONTENT="Win16 DDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGI,QDL9,QBWO,QBWN,QAB5,QAY5,QAIF,QBWQ,QAM1,QAH4,QACK,QADN,QBV8,QAB9,QDH9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>SAMPLE: Calling PostMessage from a Virtual Device (VxD)</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 15, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q72899 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Device Driver Kit (DDK) for Windows versions 3.0
   and 3.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In the Microsoft Windows graphical environment, a virtual device (VxD)
can indirectly call the PostMessage function. This enables any virtual
machine (VM) to communicate with the system VM. The text below briefly
describes the steps necessary for this communication. For more
information, refer to the VPOSTD file, which implements the techniques
discussed below.
<P>
Download VPOSTD.EXE, a self-extracting file, from the Microsoft Software
Library (MSL) on the following services:

<UL><LI>Microsoft Download Service (MSDL)
<P><PRE>      Dial (206) 936-6735 to connect to MSDL
      Download <A HREF="http://support.microsoft.com/download/support/mslfiles/VPOSTD.EXE">VPOSTD.EXE</A> <I>(size: 36023 bytes)</I> 
</PRE>
<LI>Internet (anonymous FTP)
<P><PRE>      ftp ftp.microsoft.com
      Change to the \softlib\mslfiles directory
      Get <A HREF="http://support.microsoft.com/download/support/mslfiles/VPOSTD.EXE">VPOSTD.EXE</A> <I>(size: 36023 bytes)</I> 
</PRE><P>
</UL><h2>MORE INFORMATION</h2>
 
<P>
Although a VxD cannot directly call the PostMessage function, a VxD
can call a callback function in a Windows dynamic-link library (DLL),
which can in turn call PostMessage.
<P>
To accomplish this communication, the callback function called by the
VxD must reside in a FIXED code segment of a DLL. Any data accessed by
the callback routine must be placed in a FIXED data segment. This is
necessary because the callback routine is very similar to an interrupt
service routine (ISR). Required code and data must be available in
memory at all times. FIXED code and data segments of a Windows DLL are
page locked by the Windows memory manager, which keeps the segments
present in memory. The callback routine can call only the PostMessage
and PostAppMessage functions, because these are the only reentrant
Windows functions. The DLL can't call any other Windows functions.
<P>
To communicate with the system VM, the VxD must provide a protected
mode API through which the DLL can register the address of its
callback function. When the VxD receives an event that generates a
message, the VxD schedules the system VM for execution. It may also be
necessary to wait for the critical section to be free and for
interrupts to be enabled. The virtual machine manager (VMM) provides a
service called Call_Priority_VM_Event, which is designed for
situations such as this.
<P>
When the System VM is scheduled and is in an appropriate state, the
VxD can use the VMM service Simulate_Far_Call to call the DLL, which
can then call PostMessage.
<P>
Refer to the "Microsoft Windows Device Driver Kit: Virtual Device
Adaptation Guide" (VDAG) for documentation on the VMM services. VPOSTD
provides the full source listing for a VxD and DLL, which demonstrates
everything required to implement the architecture discussed above.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10 DDKVXD softlib VPOSTD.EXE<BR>
KBCategory: kbprg kbfile<BR>
KBSubcategory: DthreeMiscWinapps<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 15, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
