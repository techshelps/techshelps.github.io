

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Binding a TSR to a VxD </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q74516 ">
<META NAME="KBModify" CONTENT="1995/04/12">
<META NAME="KBCreate" CONTENT="1991/07/22">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; win16ddk">
<META NAME="Description" CONTENT="  Note: This article assumes familiarity with the Interrupt 2FH Call-Out Interface defined by the Microsoft Windows enhanced mode. For information on the Interrupt 2FH interface, refer to Appendix C of the  Microsoft Windows Device Driver Kit: Device...">
<META NAME="Product" CONTENT="Win16 DDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWN,QDL9,QBWO,QAB5,QAHC,QA2S,QAH4,QBWQ,QAYA,QDH9,QAX1,QAOG,QADN,QAGU,QAUJ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Binding a TSR to a VxD</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 12, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q74516 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Device Driver Kit (DDK) for Windows versions 3.0
   3.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Note: This article assumes familiarity with the Interrupt 2FH Call-Out
Interface defined by the Microsoft Windows enhanced mode. For information
on the Interrupt 2FH interface, refer to Appendix C of the "Microsoft
Windows Device Driver Kit: Device Driver Adaptation Guide" for Windows 3.1
and Appendix D of the "Microsoft Windows Device Development Kit Virtual
Device Adaptation Guide" for Windows 3.0.
<P>
A terminate-and-stay-resident program (TSR) that loads a virtual device
(VxD) when Windows enhanced mode starts must specify the fully-qualified
filename to the virtual device file. This may not be convenient for end
users because the virtual device file must be placed at a fixed place on
the disk.
<P>
It is better to combine the TSR and the VxD together when the VxD is built
because the TSR can obtain the fully-qualified filename from MS-DOS and
provide the name to Windows at startup. The final product is one EXE file
that holds both the TSR and the VxD. The TSR is the stub program with the
VxD appended as an extended part of the EXE file. This article describes
the steps necessary to perform this binding.
<P>
Please note, the binding method does not work if the TSR is in binary (COM)
format rather than EXE format. The TSR filename extension (EXE or COM) is
irrelevant. Therefore, while the TSR must be built in EXE format, the
filename may have either the EXE or the COM extension, as desired.
<P>
The technique described here is used by the "Loadhi" program that deals
with EMM drivers. However, that program is too involved to be used as an
example here to demonstrate the binding process.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following three steps must be performed to bind the TSR and VxD:

<OL><P><LI>In the TSR, fill the SIS_Virt_Dev_File_Ptr field of the
   Win386_Startup_Info_Struc data structure with a pointer to a string
   containing the fully-qualified filename of the load file. Obtain
   this fully-qualified filename from the location starting at three
   bytes beyond the end of the environment block. A code segment
   resembling the following could be used:
<P>
<PRE>        mov     ah, 62h
        int     21h             ; bx -&gt; psp
        mov     es, bx
        mov     bx, 2ch         ; offset of environment block pointer
        mov     es, es:[bx]
        xor     di, di          ; es:di -&gt; environment block
        mov     cx, -1
        xor     al, al          ; search for null's
        cld
</PRE></OL>env_search_loop:
<PRE>        repne   scasb           ; get past one null and stop
        cmp     byte ptr es:[di], 0     ; Q: end of env block?
        jnz     env_search_loop         ;   N: continue
        add     di, 3                   ;   Y: skip the last null &amp;
                                        ;      the word before
                                        ;      the name.
        lea     si, InfoData            ; a Win386_Startup_Info_Struc
        mov     word ptr [si].SIS_Virt_Dev_File_Ptr, di
        mov     word ptr [si][2].SIS_Virt_Dev_File_Ptr, es

   More information about PSP and the environment block is available
   in Ray Duncan's book "Advanced MS-DOS Programming" (Microsoft
   Press).

</PRE><P><LI>In the module definition (DEF) file for the virtual device, specify
   the filename for the TSR file in the STUB statement, as follows:
<P>
<P><PRE>      STUB &lt;TSR file name&gt;
</PRE><P>
   For example, if the TSR is named TSRPRG.EXE, use the following
   line:
<P>
<P><PRE>      STUB TSRPRG.EXE
</PRE>
<P><LI>In the MAKE file for the virtual device, build virtual device file
   with an EXE extension instead of a 386 extension. For example:
<P>
   link386 $(OBJS), VTSRPRGD.EXE $(LINKOPTIONS),,,VTSRPRGD.DEF
   addhdr VTSRPRGD.EXE
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10 DDKVXD<BR>
KBCategory: kbprg<BR>
KBSubcategory: IsrTsrVxd<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 12, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
