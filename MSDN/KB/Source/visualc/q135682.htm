

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Drag and Drop with TYMED_FILE Runs Out of File Handles </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q135682">
<META NAME="KBModify" CONTENT="1998/02/18">
<META NAME="KBCreate" CONTENT="1995/08/24">
<META NAME="Keywords" CONTENT="MfcOLE">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Calling Open() on the CFile pointer returned from COleDataObject::GetFileData() may return EMFILE. Usually, this will happen after repeated drag and drop operations and subsequent calls to GetFileData(). It is also possible to see memory leaks upon...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAUD,QAGB,QA9N,QAEF,QBCT,QAGC,QAO3,QAO2,QAGI,QALW,QDKD,QABI,QBFY,QA56,QA55 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Drag and Drop with TYMED_FILE Runs Out of File Handles</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 18, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q135682</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual C++ for Windows, versions 1.5, 1.51, 1.52, 1.52b
<LI>Microsoft Visual C++, 32-bit Edition, versions 2.0, 2.1, 2.2, 4.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Calling Open() on the CFile pointer returned from
COleDataObject::GetFileData() may return EMFILE. Usually, this will happen
after repeated drag and drop operations and subsequent calls to
GetFileData(). It is also possible to see memory leaks upon termination of
the application, specifically, of memory blocks the size of a CFile object.
<P>
<P><h2>CAUSE</h2>
 
<P>
The documentation for COleDataObject::GetFileData() does not mention that
the returned CFile pointer is owned by the caller. Therefore, it is the
responsibility of the caller to call Close() on or simply delete that
pointer. The reason for the EMFILE return code is that the files opened in
the drag and drop operation are never closed and therefore the system
handles are exhausted. Memory leaks are caused by not deleting the CFile
objects that were dynamically allocated by GetFileData().
<P>
The documentation for COleDataObject::GetFileData provided with
Visual C++ 4.0 has been improved. It mentions the fact that it is
the responsibility of the caller to delete the returned CFile
object, thereby closing the file.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Remember to delete the CFile pointer returned from GetFileData() after
using it.
<P>
<P><h3>Sample Code</h3>
 
<P>
The following OnDrop() function definition illustrates the correct cleanup
after using the CFile pointer returned from GetFileData().
<P>
<PRE>   BOOL CMyView::OnDrop(COleDataObject* pDataObject, DROPEFFECT de,
                        CPoint point)
   {
       CFile * pFile = pDataObject-&gt;GetFileData(CF_HGLOBAL);
       char lpBuf[100];

       if (NULL != pFile)
           pFile-&gt;Read(lpBuf, 100);
       .
       .
       .
       // Make sure to delete the CFile *
       delete pFile;
       return TRUE;
   }
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: cfile delete stgm_hfile tymed_file<BR>
Keywords          : MfcOLE<BR>
Technology        : kbMfc kbole<BR>
Version           : WINDOWS:1.5,1.51,1.52,1.52b;Winnet:2.0,2.1,2.2,4.0<BR>
Platform          : NT WINDOWS<BR>
Issue type        : kbprb<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 18, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
