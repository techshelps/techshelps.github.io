

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: C2678 on Overloaded Functions When Using a Namespace </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q155164">
<META NAME="KBModify" CONTENT="1997/09/19">
<META NAME="KBCreate" CONTENT="1996/08/22">
<META NAME="Keywords" CONTENT="CLIss kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The wrong version of an overloaded function is called causing the following compiler two errors:     error C2678: binary '!=' : no operator defined which takes a left-hand    operand of type 'const struct Test' (or there is no acceptable    convers...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAVW,QAVX,QAY5,QAAP,QAUD,QDKW,QBV8,QAB9,QBXT,QA7H,QA5V,QA4Q,QAR4,QANG,QAIB V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: C2678 on Overloaded Functions When Using a Namespace</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 19, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q155164</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft C/C++ Compiler (CL.EXE) included with:
   - Microsoft Visual C++, 32-bit Edition, versions 4.0, 4.1, 4.2
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The wrong version of an overloaded function is called causing the following
compiler two errors:
<P>
<PRE>   error C2678: binary '!=' : no operator defined which takes a left-hand
   operand of type 'const struct Test' (or there is no acceptable
   conversion) (new behavior; please see help)

   error C2664: 'Tester' : cannot convert parameter 1 from 'const struct
   Test' to 'const float &amp;' (new behavior; please see help)

</PRE>The sample in the “Sample Code” demonstrates this problem. These errors
occur when:

<OL><P><LI>The function has a global definition.

<P><LI>The function (with the same name and different argument types
   compared to the global function) is defined in a named namespace.

<P><LI>The named Namespace function is included in the global namespace by
   the “using” declarative.
<P>
</OL><h2>RESOLUTION</h2>
 

<OL><P><LI>Put the function in a named namespace (within the global namespace) and
   then use the “using” declaration. See workaround #1 below.

<P><LI>Specify the “using” declaration at the global level. See workaround #2
   below.
<P>
</OL>Also see the "More Information" section for the sample code and the
workarounds.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. This bug was corrected in Visual C++
version 5.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following sample code demonstrates the problem of incorrect
overloaded function call causing the C2678 and the C2664 compiler errors.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>/* Compile options needed: none
*/
      struct Test
      {
      } ;
// Uncomment the following 2 lines for workaround #1
//      namespace Space2
//      {
          int Tester(const Test&amp; rx, const Test&amp; ry)
          {
             return 0 ;
          }

          int operator!=(const Test&amp; rx, const Test&amp; ry)
          {
             return 0 ;
          }
// Uncomment the following line for workaround #1
//      }

      namespace Space1
      {
         int operator!=(const float&amp; rx, const Test&amp; rt)
         {
             return 1 ;
         }

         int Tester(const float&amp; rx, const int&amp; ri)
         {
             return 1 ;
         }
      }

// Uncomment the following line for workaround #2
//      using namespace Space1 ;
      void main()
      {
         const Test a ;
         const Test b ;
         using namespace Space1 ;
         if (a != b) ;  // This line causes the C2678
         Tester(a, b);  // This line causes the C2664
      }
</PRE></OL> 
<PRE>Keywords          : CLIss kbprg
Version           : 4.0 4.1 4.2
Platform          : NT WINDOWS
Issue type        : kbbug
Solution Type     : kbfix</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 19, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
