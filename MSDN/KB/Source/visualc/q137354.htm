

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SAMPLE: How to Use Enumerated Properties in an OLE Control </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q137354">
<META NAME="KBModify" CONTENT="1997/07/10">
<META NAME="KBCreate" CONTENT="1995/09/25">
<META NAME="Keywords" CONTENT="CDKIss VCx86 kbcode kbfile kbole">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT=" This is the Visual C++ 1.5x and 2.x version of this sample. There is an equivalent Visual C++ 4.x 32-bit sample available under the name ENPROP32.   The Enumprop sample illustrates using enumerated properties in an OLE control.  Download Enprop.exe,...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QAB5,QAOE,QA7O,QAMN,QA9Q,QAPF,QAB4,QBWC,QAG8,QAP2,QAH6,QAHV,QAKD,QAB6 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>SAMPLE: How to Use Enumerated Properties in an OLE Control</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q137354</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.50 1.51 1.52 | 2.00 2.10 2.20
<PRE>WINDOWS        | WINDOWS NT
</PRE>kbole kbcode kbfile
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
   Microsoft OLE Control Developer's Kit (CDK) versions 1.0, 1.1, 1.2
</UL> 
<P>
This is the Visual C++ 1.5x and 2.x version of this sample. There is an
equivalent Visual C++ 4.x 32-bit sample available under the name ENPROP32.
<P>
<P><h2>SUMMARY</h2>
 
<P>
The Enumprop sample illustrates using enumerated properties in an OLE
control.
<P>
Download Enprop.exe, a self-extracting file, from the Microsoft
Software Library (MSL) on the following services:

<UL><LI>Microsoft Download Service (MSDL)
<P><PRE>      Dial (206) 936-6735 to connect to MSDL
      Download <A HREF="http://support.microsoft.com/download/support/mslfiles/Enprop.exe">Enprop.exe</A> <I>(size: 45810 bytes)</I> 
</PRE>
<LI>Internet (anonymous FTP)
<P><PRE>      ftp ftp.microsoft.com
      Change to the SOFTLIB\MSLFILES directory
      Get <A HREF="http://support.microsoft.com/download/support/mslfiles/Enprop.exe">Enprop.exe</A> <I>(size: 45810 bytes)</I> 
</PRE><P>
</UL>After downloading Enprop.exe, run it in an empty directory using the -d
switch (as follows) to automatically create subdirectories to hold the many
files it contains:
<P>
<PRE>   ENPROP.EXE -d

</PRE><h2>MORE INFORMATION</h2>
 
<P>
The ENUMPROP sample illustrates how to use enumerated properties in an OLE
control. An enumerated property is one that has a specific set of possible
values. For example, an OLE control might support a property named
FillPattern, which it uses to determine the type of brush to use when
drawing the control and limit the values the FillPattern property could be
set to. Accepted values for a FillPattern property might be cross-hatched,
vertical lines, horizontal lines, and so on.
<P>
An OLE control can limit a user's possible choices for a property by
presenting a drop list comobo box that lists the possibilities on its
property page. However, another mechanism is needed to enable a property
browser provided by another application to be able to provide the same type
of interface when editing the property.
<P>
There are two ways to implement an enumerated property so that a
property browser can gather enough information about the property to
provide the right editing interface. One method involves declaring an
enum type in the OLE control's .odl file and manually editing the
property's declaration to make it be of that type. For example:
<P>
<PRE>  ...

  typedef enum
  {
    [helpstring("Solid")]        Solid      = 0,
    [helpstring("Dash")]         Dash       = 1,
    [helpstring("Dot")]          Dot        = 2,
    [helpstring("Dash-Dot")]     DashDot    = 3,
    [helpstring("Dash-Dot-Dot")] DashDotDot = 4,
  } enumLineStyle;

  ...

  properties:
  // NOTE - ClassWizard will maintain property information here.
  //    Use extreme caution when editing this section.
  //{{AFX_ODL_PROP(CEnumCtrl)
    [id(1)] enumLineStyle LineStyle;
  //}}AFX_ODL_PROP

  ...

</PRE>Another method involves overriding the COleControl methods
OnGetPredefinedStrings, OnGetPredefinedValue, and OnGetDisplayString.
<P>
The ENUMPROP sample illustrates using both methods. The OLE control
implemented in the sample supports two custom properties, LineStyle and
FillPattern. The LineStyle property is declared as an enum in the control's
.odl file. Support for using the FillPattern property as an enumerated
property is handled by using overrides of the OnGetPredefinedStrings,
OnGetPredefinedValue, and OnGetDisplayString methods.
<P>
ENUMPROP is based on a ControlWizard-generated OLE control. Files included
with the sample, which are directly related to using enumerated properties,
are:
<P>
<PRE>   Enum.odl - Shows declaring the enum type for the LineStyle property.

   Enumctl.cpp - Illustrates overriding the COleControl members
   OnGetPredefinedStrings, OnGetPredefinedValue, and
   OnGetDisplayString.

</PRE>NOTE: When building the sample, the MKTYPLIB utility will generate the
following warning when compiling the .odl file:
<P>
<PRE>  warning M0002: Warning near line 35 column 35: specified type is not
  supported by IDispatch::Invoke

</PRE>MKTYPLIB is issuing the warning because the enumLineStyle type is not one
of the predefined types supported by IDispatch::Invoke. You can ignore the
warning because the actual value of the LineStyle property is a short,
which is a type supported by IDispatch::Invoke.
<P>
NOTE: The test container tool provided with the CDK does not implement a
drop list comobo box on its property browser page when editing an
enumerated property. To see the full benefits of using an enumerated
property, use an OLE control container application that provides a
property browser with this capability.
<P>
<P><h2>RFERENCES</h2>
 
<P>
For more information, please see the Per-Property Browsing section in
Appendix D, OLE Controls Architecture, in the CDK Books Online.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.50 1.51 1.52 2.00 2.10 2.20 enprop32<BR>
KBCategory: kbole kbcode kbfile<BR>
KBSubcategory: CDKIss VCx86<BR>
Keywords            : CDKIss VCx86 kbcode kbfile kbole<BR>
Technology          : kbMfc<BR>
Version             : 1.50 1.51 1.52 | 2.00 2.10 2.20<BR>
Platform            : NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
