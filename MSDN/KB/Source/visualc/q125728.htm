

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Problems Occur After Destroying Dockable CControlBar </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q125728">
<META NAME="KBModify" CONTENT="1997/09/18">
<META NAME="KBCreate" CONTENT="1995/02/02">
<META NAME="Keywords" CONTENT="MfcUI kbprg kbui kbbuglist kbfixlist">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Destroying a dockable CControlBar object may cause unexpected behavior. For example, an exception may be thrown that if not caught will generate a message box containing something similar to this:    Unhandled Exception in myapp.exe (MFC30D.DLL):  ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QAW6,QA1S,QAB5,QAEF,QAR4,QABI,QDN9,QA7O,QAY5,QAO4,QAOE,QAMN,QAGI,QAKP V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Problems Occur After Destroying Dockable CControlBar</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q125728</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes, included with:
<P><PRE>    - Microsoft Visual C++, 32-bit Edition, version 2.0
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Destroying a dockable CControlBar object may cause unexpected behavior. For
example, an exception may be thrown that if not caught will generate a
message box containing something similar to this:
<P>
<PRE>  Unhandled Exception in myapp.exe (MFC30D.DLL):
  0xC0000005: Access Violation.

</PRE>By using the debugger, you will likely see that this Access Violation has
occurred in the function CObject::IsKindOf.
<P>
<P><h2>CAUSE</h2>
 
<P>
This problem occurs because of the way toolbars are handled by the
framework. MFC implements a CDockBar object for use as the parent of
dockable control bars. To arrange the control bars docked at the location
it manages, this CDockBar object maintains a list of the CControlBar
objects that it has as children.
<P>
The CControlBar destructor does not remove the control bar from the
CDockBar's list of control bars. Subsequent attempts by the CDockBar object
to manipulate the pointer maintained in its list will cause unpredictable
behavior such as an Access Violation.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To work around the problem, make sure that dockable toolbars are removed
from their parent CDockBar objects before destroying them.
<P>
To do this, call CDockBar::RemoveControlBar before destroying the
ControlBar object. You will need to include the header file &lt;afxpriv.h&gt; to
be able to call this function. For example:
<P>
Change this:
<P>
<PRE>   #include "stdafx.h"
   ...
   ...
   void SomeFunction()
   {
     delete pToolBar;
   }

</PRE>To this:
<P>
<PRE>   #include "stdafx.h"
   #include &lt;afxpriv.h&gt;
   ...
   ...
   void SomeFunction()
   {
     if(pToolBar-&gt;m_pBar!=NULL)
       pToolBar-&gt;m_pBar-&gt;RemoveControlBar(pToolBar);
     delete pToolBar;
   }

</PRE><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. This bug was corrected in Visual C++
version 2.1 (MFC 3.1).
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 3.00 toolbar CToolBar
<P>

Keywords          : MfcUI kbprg kbui kbbuglist kbfixlist<BR>
Technology        : kbMfc<BR>
Version           : 2.0<BR>
Platform          : NT WINDOWS<BR>
Issue type        : kbbug<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
