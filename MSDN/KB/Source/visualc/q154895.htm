

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: CInternet::File ReadString() Loses Data </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q154895">
<META NAME="KBModify" CONTENT="1997/09/19">
<META NAME="KBCreate" CONTENT="1996/08/16">
<META NAME="Keywords" CONTENT="MfcInetSDK vcbuglist420 vcfixlist500 kbprg kbbuglist kbfixlist">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Calling CInternetFile::ReadString() without calling SetReadBufferSize() first can result in lost data. If the file being read is less than 4096 bytes (the default read buffer size), a null string will be returned into the buffer specified by the fi...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGI,QAIF,QAUD,QAR4,QANY,QAM1,QBFN,QDIX,QBFY,QA56,QA55,QAYY,QAPF,QALW,QALG V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: CInternet::File ReadString() Loses Data</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 19, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q154895</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
   Microsoft Visual C++, 32-bit Edition, version 4.2
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Calling CInternetFile::ReadString() without calling SetReadBufferSize()
first can result in lost data. If the file being read is less than 4096
bytes (the default read buffer size), a null string will be returned into
the buffer specified by the first argument of ReadString(). The
ReadString() function will also return NULL. If the file being read is
greater than 4096 bytes, the first 4096 bytes will be lost and then
subsequent ReadString() calls will return the rest of the data.
<P>
You can see this problem by running the TEAR MFC sample that is included on
the Visual C++ 4.2 CD.
<P>
<P><h2>CAUSE</h2>
 
<P>
There is a bug in CInternetFile::ReadString(). It calls InternetReadFile()
twice. The second call to InternetReadFile() removes the data retrieved by
the first call to InternetReadFile().
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To prevent ReadString from calling InternetReadFile() twice, call
SetReadBufferSize() before making the first call to ReadString. This sets a
read buffer, which means that the following code in ReadString is not
executed:
<P>
<PRE>   if (m_pbReadBuffer == NULL)
   {
       if (!SetReadBufferSize(4096))   // arbitrary but reasonable
           return NULL;
       if (!InternetReadFile(m_hFile, m_pbReadBuffer, m_nReadBufferSize,
               &amp;dwRead))
           AfxThrowInternetException(m_dwContext);
        m_nReadBufferBytes = dwRead;
   }

</PRE><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. This bug was fixed in Visual C++ version
5.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To fix the problem in the TEAR sample, before the ReadString() call, add a
call to SetReadBufferSize(). For example:
<P>
<PRE>   TCHAR sz[1024];
   pFile-&gt;SetReadBufferSize(4096);  // Add this line
   while (pFile-&gt;ReadString(sz, 1023))
   {
       if (bStripMode)
       StripTags(sz);
       cout &lt;&lt; sz;
   }
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: WinInet Tear
<P>

Keywords          : MfcInetSDK vcbuglist420 vcfixlist500 kbprg kbbuglist kbfixlist<BR>
Technology        : kbMfc<BR>
Version           : 4.20<BR>
Platform          : NT WINDOWS<BR>
Issue type        : kbbug<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 19, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
