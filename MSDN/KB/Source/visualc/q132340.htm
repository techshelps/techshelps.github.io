

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Common File Extensions Used by Visual C++ </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q132340">
<META NAME="KBModify" CONTENT="1997/07/31">
<META NAME="KBCreate" CONTENT="1995/07/06">
<META NAME="Keywords" CONTENT="VCGenIss VwbIss kbref kbtool">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Visual C++ writes and uses a number of files during the build process. This article describes the file extensions commonly used in a Visual C++ project.  MORE INFORMATION  Files Used by Visual C++  .C -- C language source file:  This file is compil...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBFY,QAH4,QA56,QA55,QAIM,QA3P,QAYY,QAJN,QAKR,QAHE,QBXR,QAK6,QAJH,QAE2,QBHQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Common File Extensions Used by Visual C++</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 31, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q132340</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00 1.50 1.51 1.52 | 1.00 2.00 2.10 2.20 4.00
<PRE>WINDOWS             | WINDOWS NT
</PRE>kbref kbtool
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51, 1.52
<LI>Microsoft Visual C++, 32-bit Edition, versions 1.0, 2.0, 2.1, 2.2, and
</UL>4.0
 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Visual C++ writes and uses a number of files during the build process. This
article describes the file extensions commonly used in a Visual C++
project.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Files Used by Visual C++</h3>
 
<P>
.C -- C language source file:
<P>
This file is compiled as a C file. If it contains C++ code, you must either
rename the file to a .CPP or .CXX file or use the /Tp switch when compiling
the file. Microsoft recommends that you rename the file to have the .CPP or
.CXX extension if the source file contains C++ code.
<P>
.CPP or .CXX -- C++ language source file:
<P>
This file is compiled as a C++ file. To compile it as a C file instead
(assuming there is no C++ code in the source file), you must either rename
the file to a .C file (recommended) or use the /Tc switch when compiling
the file.
<P>
.H, .HPP, or .HXX  -- Header file:
<P>
A header file is often used for function prototypes, class definitions, or
constant definitions. The .H, .HPP, or .HXX files can be included in
multiple source files.
<P>
.INL -- Inline function file:
<P>
This file contains inline function definitions.
<P>
.RC or .RC2 -- Resource file:
<P>
This file holds the project's resource information such as the descriptions
of a dialog box, a menu bar, or a string table. This file is compiled by
the resource compiler (RC.EXE). When you use Visual C++'s AppWizard to
generate an MFC (Microsoft Foundation Classes) application, you get an .RC
file for the application. The .RC file can be modified or created by a
resource editor, or the App Studio. Under some versions of Visual C++, you
will see an .RC2 file that also contains resource information.
<P>
.DEF -- Module definition file:
<P>
Depending on your project type, this file may have two purposes. In
programs based on Windows and Windows NT, this file may be used to specify
a list of exported functions, to control the programs heap size, to specify
the attributes of a particular segment, and for many other uses. For an
MS-DOS-based MOVE overlay program (16-bit products only), this file is used
to specify which segments or which functions are in which overlay.
<P>
<P><h3>Files Created by Visual C++</h3>
 
<P>
.APS -- Binary version of the resource file:
<P>
This is the binary version of the current resource file. App Studio or
the resource editor uses it for quick loading.
<P>
.BSC -- Browser database file:
<P>
A single .BSC file is created for each project. To use the Browser, you
need to open this file in the Visual C++ Workbench. It is created from
the .SBR files when the BSCMAKE tool is run.
<P>
.CLW -- Class Wizard status file:
<P>
This file keeps information about where message-handling functions are kept
in your code. The format of this text file is undocumented, but it can be
regenerated. For more information on how to regenerate this file, please
click Contents on the Help menu in App Studio; then click "Using Class
Wizard" and "Update Class Wizard when Code Changes."
<P>
.EXE or .DLL -- Executable or dynamic link library file:
<P>
This file is the final linked output file for the project. It contains
executable code.
<P>
.ILK (versions 2.0 and later only) -- Incremental link information file:
<P>
The linker creates this file to allow incremental linking when possible. If
you delete it, you will force the linker to perform a full link.
<P>
.OBJ -- Object module file:
<P>
This is the final output file from the compiler. The linker combines these
files to create the final .EXE, .DLL, or .LIB file. The .OBJ files may have
different formats in different versions of Visual C++ or in different
vendor's compilers.
<P>
.PCH -- Precompiled header file:
<P>
These files can significantly speed up compile time. They are created when
using the /Yc, /Yu, or /YX compiler options.
<P>
.PDB -- Program database file:
<P>
This binary file contains type and symbolic debugging information gathered
over the course of compiling and linking the project. The file is for use
with the Visual C++ debugger. Object files contain references into the .PDB
file for debugging information. This design makes object files smaller. See
the online reference under the /Zi switch for more information. When you
use the /Z7 switch, this file is not created.
<P>
.SBR -- Source browser file:
<P>
This file is created for each source file compiled with either the /FR or
/Fr switch. This file contains symbolic information used by the Microsoft
Browser Database Maintenance Utility (BSCMAKE) to produce a browser
database file (.BSC file).
<P>
.WSP -- Workspace information file (16-bit versions only):
<P>
This is a binary file containing information about the state of the
WorkBench when it was closed. Such items as source files opened and their
window positions are saved in this file.
<P>
.VCP -- Workspace information file (Visual C++ 2.x and later only):
<P>
This file is the Visual C++ version 2.x equivalent of the 16-bit versions'
.WSP file.
<P>
.VCW -- Visual WorkBench Status file (16-bit versions only):
<P>
This file is created on a per-project basis. It works with the .MAK file to
fully describe the project to the WorkBench.
<P>
.EXP -- Export file:
<P>
Export files contain information about exported functions and data items.
When LIB creates an import library, it also creates an export file. You use
the .EXP file when you link a program that both exports to and imports from
another program, either directly or indirectly. If you link with an .EXP
file, LINK does not produce an import library because it assumes that LIB
already created one.
<P>
.LIB -- Library file:
<P>
These files could be standard library or import library files. Standard
libraries contain objects and are created by the LIB tool. Import libraries
contain information about exports in other programs and are created either
by LINK when it builds a program that contains exports or by the LIB tool.
<P>
.MAP -- Map file:
<P>
A map file is a text file that contains information about the program being
linked. The information includes the module name, the timestamp from the
program file header (not from the file system), and a list of groups in the
program with each group's starting address, length, group name, and class.
It also contains a list of public symbols with each address, symbol name,
flat address, and object file where the symbol is defined. A map file also
includes the entry point of the program and a list of fixups.
<P>
.RES -- Compiled resource file:
<P>
The .RES file is created by the Resource Compiler (RC).
<P>
.HPJ -- Context-sensitive help project file:
<P>
This file appears when you use the Visual C++ AppWizard to create an MFC
application that supports context-sensitive help. You need this file to
create help files from the .RTF files and .BMP files generated by the
AppWizard.
<P>
NCB -- Parser information file:
<P>
This file contains information generated by the parser used by the class
view and component gallery. If the file is accidentally or deliberately
deleted, it is automatically regenerated.
<P>
MDP -- Microsoft Developer studio Project file:
<P>
This file replaces Visual C++ version 2.x's .VCP file. The .MDP file
contains more information about the project than does the .VCP file.
<P>
RCT -- Resource template file:
<P>
These files contain information on custom resources that can be used
when you insert a resource.  It can include menus, toolbars, bitmaps and
any of the other resource types listed in the Insert Resource menu.
<P>
<P><h3>Miscellaneous Files Created and Then Deleted During the Build Process</h3>
 
<P>
There are two other files created by the Visual C++ IDE during the build
process. They should be deleted under normal circumstances. The files are:
<P>
.CRF -- linker response file:
<P>
This file is created on the fly by the build process.
<P>
MSVC.BND -- copy of project .CRF file:
<P>
This file is created if the resources need to be bound to the executable.
It is simply a copy of the project's .CRF file.
<P>
There are some other files created depending on the features the project
supports. For example, your project may also have one or more icon files
with .ICO extensions, cursor files with .CUR extensions, or bitmap files
with .BMP extensions. A project may also have a .REG file that has registry
information for the project. Projects that support OLE may also have an
.ODL file and .TLB files.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about the file types not listed in this article,
please see refer to the following section in the product documentation:
Visual C++ 2.x Books On-line, User's Guides, Visual C++ User's Guide,
Appendices, Link Input Files and Link Output Files.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 1.00 1.50 2.00 2.10 2.20 4.00<BR>
KBCategory: kbref kbtool<BR>
KBSubcategory: vcGenIss VWBIss<BR>
Keywords          : VCGenIss VwbIss kbref kbtool<BR>
Version           : 1.00 1.50 1.51 1.52 | 1.00 2.00<BR>
Platform          : NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 31, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
