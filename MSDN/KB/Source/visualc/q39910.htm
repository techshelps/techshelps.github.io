

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Initializing Non-Primary Union Element Produces Errors </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q39910 ">
<META NAME="KBModify" CONTENT="1997/08/26">
<META NAME="KBCreate" CONTENT="1988/12/30">
<META NAME="Keywords" CONTENT="CLIss">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Attempting to initialize any element of a union except the first may generate any combination of the following compiler messages:     error C2078: too many initializers     warning C4047: 'initialization' - different levels of indirection       -or...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB4,QBFY,QAVX,QAVW,QAOT,QAAP,QA4Q,QBWP,QADX,QDL9,QBWQ,QBWO,QBWN,QA5E,QAO3 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Initializing Non-Primary Union Element Produces Errors</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 26, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q39910 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft C/C++ Compiler (CL.EXE) included with:
   - Microsoft C for MS-DOS, versions 6.0, 6.0a, 6.0ax
   - Microsoft C/C++ for MS-DOS, version 7.0
   - Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51, 1.52
   - Microsoft Visual C++, 32-bit Edition, versions 1.0, 2.0, 2.1, 4.0, 5.0
</UL> 
<P>
SYMPTOMS
 
<P>
Attempting to initialize any element of a union except the first may
generate any combination of the following compiler messages:
<P>
<PRE>   error C2078: too many initializers

   warning C4047: 'initialization' - different levels of indirection
      -or-
   warning C4047: 'initializing' : 'type1' differs in levels of indirection
   from 'type2'

   warning C4133: 'initializing' : incompatible types - from 'type1' to
   'type2'


</PRE>CAUSE
 
<P>
The compiler issues these messages by design. According to the ANSI
standard, initialization of a union must be directed to the first element.
An attempt to initialize some other union member may be interpreted by the
compiler as a syntactically incorrect initialization of the first element.
<P>
<P>
<P><h2>RESOLUTION</h2>
 
<P>
If it is necessary to initialize a non-primary element of a union, change
the order of your union members, so that the element that requires
initialization appears as the first element of the union.
<P>
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
EXAMPLE1.C, in the Sample Code below, fails compilation with one C2078
error and three C4047 warnings. The error is generated because only one
union element may be initialized (the first) and by the time the compiler
processes the "{ch1,ch2,ch3,ch4}" initialization, it has already filled
element one. The warnings are generated because the compiler expects to be
initializing "union TEST tsty" with integer values, but it is finding char*
(character pointers) instead.
<P>
EXAMPLE2.C compiles but produces a C4133 warning. The compiler expects to
initialize "union ONION anONION" with an integer pointer but finds a float
pointer instead. Although, this situation is not serious enough to prohibit
compilation, it does indicate that there may be a problem.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   /* EXAMPLE1.C
    *
    * Compile options needed: none
    */

   union TEST
   {
       struct
       {
         int a;
         int b;
         int c;
       } one;             /* union element #1 */
       struct
       {
         char *ptr1;
         char *ptr2;
         char *ptr3;
         char *ptr4;
       } two;             /* union element #2 */
   } u;

   char ch1[10], ch2[10], ch3[10], ch4[10];

   union TEST test ={ {1,2,3},                /* initialize element #1 */
                      {ch1,ch2,ch3,ch4} };    /* generates error C2078 */

   void main(void)
   {
      union TEST tsty ={ {ch1,ch2,ch3,ch4} }; /* generates 3 C4047
                                                 warnings */
   }

</PRE> 
<PRE>   /* EXAMPLE2.C
    *
    * Compile options needed: /c
    */

   union  ONION  { int *iptr; float *fptr; };
   float sam = 3.141592;
   union ONION anONION = { &amp;sam };  /* generates warning C4133 */

</PRE>For additional information, please see the following article(s) in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../VISUALC/Q47693.htm">Q47693</A></B>
   TITLE     : Initializing Unions Initializes First Member of the Union
</PRE> 
<PRE>Keywords          : CLIss
Version           : MS-DOS:6.0,6.0a,6.0ax,7.0; WINDOWS:1.0,1.5,1.52; WINDOWS  NT:1.0,2.0,2.1,4.0,5.0
Platform          : MS-DOS NT WINDOWS
Issue type        : kbprb</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 26, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
