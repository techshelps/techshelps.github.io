

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Access a Subclassed Windows Control in an OLE Control </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q135048">
<META NAME="KBModify" CONTENT="1997/07/10">
<META NAME="KBCreate" CONTENT="1995/08/15">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The ControlWizard provided with the CDK allows a new OLE control to be created by subclassing a common Windows control such as a button, toolbar, or edit box. The XLIST sample provided with the CDK illustrates how to do this by subclassing a Window...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVR,QAOE,QA7O,QAB5,QAMN,QDL9,QBWQ,QBWO,QBWN,QABO,QA9Q,QAPF,QAHV,QA1S,QAUD V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Access a Subclassed Windows Control in an OLE Control</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q135048</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.50 1.51 1.52 | 2.00 2.10 2.20
<PRE>WINDOWS        | WINDOWS NT
</PRE>kbprg kbcode
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
   Microsoft OLE Control Developer's Kit (CDK) versions 1.0, 1.1, 1.2
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The ControlWizard provided with the CDK allows a new OLE control to be
created by subclassing a common Windows control such as a button, toolbar,
or edit box. The XLIST sample provided with the CDK illustrates how to do
this by subclassing a Windows list box. The XLIST sample communicates with
and manipulates the subclassed Windows control by using the Windows
SendMessage() API. For example, to insert a string into the subclassed list
box, use this code:
<P>
<PRE>   SendMessage(LB_INSERTSTRING, nIndex, (long)lpstrText);

</PRE>Because MFC provides wrapper classes for the common Windows controls, it
would be useful to be able to use these classes to communicate with the
subclassed control. This article illustrates one technique for doing this
by showing how to connect the appropriate MFC control class to the
COleControl-derived class that subclasses a Windows control.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following sample code illustrates how to use the MFC CListBox class to
communicate with a Windows list box control subclassed by an OLE control.
The process for doing this is as follows:

<OL><P><LI>Add a member variable of type CListBox to the declaration of the
   COleControl derived class:
<P>
   class CSubclassCtrl : public COleControl
   {
   ...
<PRE>   // Implementation
   protected:

     CListBox  m_ListBox;
   ...
   }

</PRE><P><LI>Override the OnCreate member of the COleControl derived class and
   initialize the m_hWnd member of the CListBox member:
<P>
<PRE>   int CSubclassCtrl::OnCreate(LPCREATESTRUCT lpCreateStruct)
   {
   if (COleControl::OnCreate(lpCreateStruct) == -1)
   return -1;

   m_ListBox.m_hWnd = m_hWnd;

     // Additional list box initialization can go here.

   return 0;
   }

</PRE><P><LI>Set the m_hWnd member of the CListBox member to NULL in the
   destructor of the COleControl derived class:
<P>
   CSubclassCtrl::~CSubclassCtrl()
   {
<P><PRE>     m_ListBox.m_hWnd = NULL;
</PRE>   }
<P>
</OL>After completing these steps, the m_ListBox member can be used to
manipulate the subclassed Windows list box. For example, instead of using
the Windows SendMessage() API to insert a string into the list box, the
following CListBox method can be called:
<P>
<PRE>   m_ListBox.InsertString(nIndex, _T("A String"));
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 1.50 1.51 1.52 2.00 2.10 2.20 2.51<BR>
2.52 3.00 3.10 3.20<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: CDKIss<BR>
Technology          : kbMfc<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
