

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: L2025 With Static Object in Inline Function </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q120243">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1994/09/07">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  When an inline function with a local static object is called from two different object modules, two different objects are created, generating the following error message:       L2025: symbol: symbol defined more than once  where symbol is the mangl...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QAW6,QAGI,QAY5,QAKJ,QBV8,QBA8,QAVX,QAVW,QAB9,QAKP,QAIF,QAI5,QABI,QBW7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: L2025 With Static Object in Inline Function</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q120243</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00 1.50
WINDOWS
kbprg kbbuglist
<P>
 
The information in this article applies to:
<P>
<PRE> The Microsoft C Run-time (CRT), included with
  -  Microsoft Visual C++ for Windows, versions 1.0 and 1.5
</PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When an inline function with a local static object is called from two
different object modules, two different objects are created, generating the
following error message:
<P>
<PRE>     L2025: symbol: symbol defined more than once

</PRE>where symbol is the mangled function name.
<P>
This problem only occurs when the following two conditions are met:

<UL><LI>The function with the static object is inline.

<LI>The two calls are from separate files (object modules).
<P>
</UL><h2>CAUSE</h2>
 
<P>
For a local static object of an inline function, the compiler does not take
into account that the function may be called from other files.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To work around this problem, use one of the following methods:

<UL><LI>Make sure that the function with the static object is not inlined.
<P>
   -or-

<LI>Move all calls of the static member function into one file.
<P>
</UL><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the products listed above. We
are researching this problem and will post new information here in the
Microsoft Knowledge Base as it becomes available.
<P>
This is not a problem in Visual C++ 32-bit Edition.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following sample code demonstrates this problem:
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>/* Compile options needed : none
*/

// test.h

   #include &lt;iostream.h&gt;

   void TestFunctionA();
   void TestFunctionB();

   class Object
   {
      public:
      int data;   // Will track the number of accesses to an
                  // object of class Object.
      Object();   // Provides screen output each time
                  // constructor is called.
      ~Object();  // Provides screen output each time
                  // destructor is called.
   };

   inline int staticFunc()
   {
       static Object objectA;    // This object should be
                                 // created only once.
       return objectA.data++;    // Increment objectA's
                                 // access counter.
   }

// test1.cpp

   #include "test.h"

   void main()
   {
      TestFunctionA();    // Should construct objectA.
      TestFunctionB();    // Should increment objectA.data.
   }

   void TestFunctionA()
   {
      cout &lt;&lt; "objectA.data = " &lt;&lt; staticFunc() &lt;&lt; endl;
   }

// test2.cpp

   #include "test.h"

   Object::Object()
   {
      data=1;             // Initialize access count to 1.
      cout &lt;&lt; "Constructor call" &lt;&lt; endl;
   }

   Object::~Object()
   {
      cout &lt;&lt; "Destructor call" &lt;&lt; endl;
   }

   void TestFunctionB()
   {
      cout &lt;&lt; "objectA.data = " &lt;&lt; staticFunc() &lt;&lt; endl;
   }
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 1.50 inline static object<BR>
KBCategory: kbprg kbbuglist<BR>
KBSubcategory: CPPLngIss<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
