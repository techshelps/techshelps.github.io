

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Use _remappalette() in EGA Modes </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q43330 ">
<META NAME="KBModify" CONTENT="1997/07/17">
<META NAME="KBCreate" CONTENT="1989/04/13">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  When attempting to remap the palette in the EGA modes, follow the required format to form the argument passed to the remapping functions. This article uses _remappalette as an example. What is said about lColor (see function prototype below) also a...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAG9,QALG,QAHH,QAPG,QAI4,QA5W,QBFY,QA4Q,QAY2,QAUS,QAPF,QAKC,QAMA,QAKD,QA6E V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Use _remappalette() in EGA Modes</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 17, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q43330 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
5.10 6.00 6.00a 6.00ax 7.00 | 1.00 1.50
<PRE>MS-DOS                      | WINDOWS
</PRE>kbprg kbcode
<P>
<P>
 
The information in this article applies to:

<UL><LI>The C Run-time (CRT), included with:
<P>
<P><PRE>    - Microsoft C for MS-DOS, versions 5.1, 6.0, 6.0a, and 6.0ax
    - Microsoft C/C++ for MS-DOS, versions 7.0
    - Microsoft Visual C++ for Windows, versions 1.0 and 1.5
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
When attempting to remap the palette in the EGA modes, follow the
required format to form the argument passed to the remapping
functions. This article uses _remappalette as an example. What is said
about lColor (see function prototype below) also applies to the
element of the array slColors for _remapallpalette.
<P>
The function prototypes are as follows:
<P>
<PRE>   short far _remappalette (nPixel, lColor) ;
   short nPixel ;         /* Pixel value to reassign          */
   long  lColor ;         /* Color number to assign to nPixel */

   short far _remapallpalette (slColors) ;
   long far * slColors ;           Color array

</PRE>lColor is a long int formed by the following four bytes:
<P>
<PRE>    00, blue byte, green byte, red byte

</PRE>The four bytes are arranged from the most significant byte to the
least significant byte (left to right). The most significant byte is
always 0 (zero). Each of the remaining three bytes can have the value
of either 00, 2a, 15, or 3f. (In VGA mode, each byte can take any
value between 00 and 3f.) Combinations of different values in the
three bytes form the complete palette of 64 colors for the EGA
graphics modes.
<P>
The manifest constants for the EGA modes are _MRES16COLOR,
_HRES16COLOR, and _ERESCOLOR, which are used with the function
_setvideomode.
<P>
Please refer to the include file GRAPH.H for the default values of the
16 colors in an EGA mode.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
An algorithm is provided in this section to convert a color
represented by an arbitrary number from 0 to 63 to the required
format. A sample program is included that implements the algorithm.
<P>
Suppose the color is represented by a byte, as follows:
<P>
<PRE>   bit7 , bit6 , bit5 , bit4 , bit3 , bit2 , bit1 , bit0

</PRE><P><LI>bit7 and bit6 can be ignored, because the byte is always less than
   64.

<P><LI>The remaining bits are grouped in the following three pairs, where
   the order of the two bits in the pair is significant:
<P>
<P><PRE>      bit3 , bit0 ;
      bit4 , bit1 ;
      bit5 , bit2 ;
</PRE>
<P><LI>Each pair is mapped to 00, 2a, 15, or 3f, according to the
   following table:
<P>
<PRE>      bitX   bitY   MappedXY
        0      0      00
        0      1      2a
        1      0      15
        1      1      3f

</PRE><P><LI>Mapped30 (from pair bit3, bit0) goes to the blue byte.
   Mapped41 (from pair bit4, bit1) goes to the green byte.
   Mapped52 (from pair bit5, bit2) goes to the red byte.
<P>
   The order (from high to low) of the three bytes is as follows:
<P>
<P><PRE>      blue byte  ,  green byte  ,  red byte
</PRE>
<P><LI>Example:
<P>
   Color 43 has bit pattern 0 0 1 0 1 0 1 1. This pattern is
   transformed to three pairs: 11, 01, 10. The three pairs are mapped
   to 3f, 2a, 15. The mapped color represented in long integer format
   is 0x3f2a15.
<P>
</OL>The following program uses _remappalette() to remap the color "0"
(which defaults to black) to the 64 different colors.
<P>
For more information on this subject, refer to the "Programmer's Guide
to PC and PS/2 Video Systems" by Richard Wilton, published by
Microsoft Press.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>/*
 * Pallette.c
 */
#include &lt;stdio.h&gt;
#include &lt;graph.h&gt;
#include &lt;conio.h&gt;

#define NUMCOLOR        64
#define MASK            0x0001

</PRE></OL>unsigned long ConvertColNum (unsigned int) ;
<P>
unsigned char ConvertArr [4] = { 0x00, 0x2a, 0x15, 0x3f } ;
<P>
<PRE>void main (void)
</PRE>{
unsigned short nColor = 0 ;
<PRE>unsigned int i ;
</PRE>unsigned long lMappedColor ;
<P>
if (!_setvideomode (_ERESCOLOR))
<PRE>    return ;

</PRE>puts ("Press any key to continue ...") ;
getch () ;
<P>
for (i = 0 ; i &lt; NUMCOLOR ; i++)
<PRE>    {
    lMappedColor = ConvertColNum (i) ;
    if (_remappalette (nColor, lMappedColor) == -1L)
        puts ("\x007Mapping color failed : ") ;  // beep if fails

    printf ("Color number = %u, lMappedColor = %08lx\n", i,
            lMappedColor);
    if (getch () == 'q')
        break ;
    }

</PRE>_setvideomode (_DEFAULTMODE) ;
}
<P>
unsigned long ConvertColNum (unsigned int nOrgColor)
{
<PRE>    unsigned long lColor, lTemp ;
    int j, temp ;

    lColor = 0L ;
    for (j = 0 ; j &lt; 3 ; j++)
        {
        // get the pair
        temp = ((nOrgColor &gt;&gt; (j + 3) &amp; MASK) &lt;&lt; 1 ) |
                (nOrgColor &gt;&gt; j &amp; MASK) ;
        lTemp = (unsigned long) ConvertArr [ temp ] ;
        lColor |= lTemp &lt;&lt; ((2-j) &lt;&lt; 3) ;      // (2-j) * 8
        }

    return (lColor) ;
</PRE>}
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 1.00 1.50 5.10 6.00 6.00a 6.00ax 7.00<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: CRTIss GraphicsIss<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 17, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
