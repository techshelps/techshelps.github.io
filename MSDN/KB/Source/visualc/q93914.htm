

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: /MAP Option on Compiler Command Line Ignored </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q93914 ">
<META NAME="KBModify" CONTENT="1995/11/02">
<META NAME="KBCreate" CONTENT="1992/12/21">
<META NAME="Keywords" CONTENT="kbtool kbfasttip kbprb">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  In the Microsoft C and Microsoft QuickC compilers for MS-DOS, when the command line specifies both the /LINK and /MAP option switches, the compiler ignores the /MAP option.  The Microsoft C/C++ compiler for Windows NT does not have this problem bec...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAVW,QAVX,QBFY,QBV8,QAOT,QAJ1,QBXT,QBBI,QA5V,QANE,QAIB,QAB9,QAH7,QAH4,QAQG V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: /MAP Option on Compiler Command Line Ignored</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 2, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q93914 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
<PRE>   The Microsoft C/C++ Compiler (CL.EXE) included with:
    - Microsoft C for MS-DOS, versions 6.0, 6.0a, and 6.0ax
    - Microsoft C for OS/2, versions 6.0 and 6.0a
    - Microsoft C/C++ for MS-DOS, version 7.0
    - Microsoft Visual C++ for Windows, versions 1.0 and 1.5
</PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
In the Microsoft C and Microsoft QuickC compilers for MS-DOS, when the
command line specifies both the /LINK and /MAP option switches, the
compiler ignores the /MAP option.
<P>
The Microsoft C/C++ compiler for Windows NT does not have this problem
because the supplied linker does not require comma delimited fields
for the input.
<P>
<P><h2>CAUSE</h2>
 
<P>
The compiler places the /MAP switch on the linker command line after
the map file specification.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Use the /Fm compiler option switch to create a map file.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To demonstrate this behavior with the MS-DOS version of the compiler,
perform the following three steps:

<OL><P><LI>Compile the code example below from either an MS-DOS prompt or an
   OS/2 prompt using CL.EXE. Specify the /LINK and /MAP options after
   specifying the name of the C source file in the compiler command
   line, as follows:
<P>
<P><PRE>      cl test.c /link /MAP
</PRE><P>
   Note the linker command line that the compiler generates. The Map
   File option lists NULL for the filename instead of the default map
   filename (in this example, TEST.MAP). The linker displays the
   following responses:
<P>
<P><PRE>      Object Modules [.obj]: test.obj
      Run File [test.exe]: "test.exe" /noi
      List File [nul.map]: NUL
      Libraries [.lib]: /MAP
      Definitions File [nul.def]: ;
</PRE><P>
   Even though the /MAP option is specified for the linker process,
</OL></UL><LI>The Linker does not generate a map file because the option is
   placed after the List File specification.

</UL><OL><P><LI>Compile the code example using the following command line:
<P>
<P><PRE>      cl /Fm test.c
</PRE><P>
   In this pass, the linker generates a map file. Because this command
   does not specify a filename, the command creates the TEST.MAP file
   (the base name TEST with the extension .MAP).

<P><LI>In Microsoft C/C++ version 7.0, the /MAP option can specify how
   much information the linker places in the map file. The two
   information options are /MAP:ADDRESS and /MAP:FULL. The ADDRESS
   option omits the list of public symbols in an application while the
   FULL option generates a full map listing. To generate a map file
   using one of these options, specify /MAP:ADDRESS or /MAP:FULL on
   the compiler command line in addition to the /Fm option, as
   follows:
<P>
<P><PRE>      cl /Fm test.c /link /MAP:FULL
</PRE><P>
   In this case, the linker generates a MAP file with full symbolic
   information.
<P>
</OL><h3>Sample Code</h3>
 
<P>
<PRE>/*
 * Compiler options needed: /Fm or /link /MAP (see above)
 */

#include &lt;stdio.h&gt;

void main(void)
</PRE></OL>{
<PRE>   int x;

   printf("Hello world\n");
</PRE></UL>}
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 1.50 6.00 6.00a 6.00ax 7.00 8.00<BR>
8.00c 9.00<BR>
KBCategory: kbtool kbfasttip kbprb<BR>
KBSubcategory: CLIss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 2, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
