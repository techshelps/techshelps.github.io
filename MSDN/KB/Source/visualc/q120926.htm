

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Visual C++ Vers 2.0 README.WRI, Part 10 Miscellaneous Notes </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q120926">
<META NAME="KBModify" CONTENT="1998/03/19">
<META NAME="KBCreate" CONTENT="1994/09/21">
<META NAME="Keywords" CONTENT="TlsMisc kbreadme">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The following is based on the Visual C++ version 2.0 README.WRI file:  Link Libraries for MFC Projects  With the Microsoft Foundation Class Library (MFC) version 3.0 in Visual C++ version 2.0, it is no longer necessary to specify standard libaries ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QANE,QBFY,QBHQ,QA56,QA55,QA5D,QBVV,QABA,QA9E,QBTL,QAC1,QACF,QAPF,QBWP,QA4Q V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Visual C++ Vers 2.0 README.WRI, Part 10 Miscellaneous Notes</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 19, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q120926</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual C++, 32-bit Edition, version 2.0 on the
   following platform: x86
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The following is based on the Visual C++ version 2.0 README.WRI file:
<P>
<P><h3>Link Libraries for MFC Projects</h3>
 
<P>
With the Microsoft Foundation Class Library (MFC) version 3.0 in Visual C++
version 2.0, it is no longer necessary to specify standard libaries for MFC
applications. The MFC header files now generate /defaultlib directives to
link the correct variant of the MFC library, and to link WINDOWS.H and
other system header files as necessary.
<P>
Having standard Link Input files specified in the MFC .MAK files does not
usually cause a problem. However, if you change from "Use MFC in a Static
Library" (the default setting) to "Use MFC in a Shared Dll (mfc30(d).dll)"
(in the Microsoft Foundation Classes box on the General tab of the Project
Settings dialog box), you will get link errors such as the following:
<P>
<PRE>   mfc30d.lib (MFC30D.DLL) :
       error LNK2005: ?messageMap@CWinApp@@1UAFX_MSGMAP@@B (protected:
          static
       struct AFX_MSGMAP const CWinApp::messageMap) already defined in
       nafxcwd.lib(appcore.obj)

</PRE>The multiple definition of MFC objects occurs because the MFC header files
issue a /defaultlib directive to link MFC30(d).LIB; but NAFXCW(d).LIB is
still in the Link Input list.
<P>
To avoid this problem, remove all libraries from the Object/Library
Modules box of the Input category on the Link tab of the Project Settings
dialog box.
<P>
<P><h3>Converting Visual C++  Version 1.5 Non-MFC Sample Programs</h3>
 
<P>
Converting applications developed with Visual C++ versions 1.0 or 1.5 may
not automatically add the appropriate library files to the linker command
line. For example, the SORTDEMO sample is not an MFC project and is not
marked as an MFC project in the corresponding Visual C++ version 1.5
makefile. However, after Visual C++ version 2.0 converts the project, it is
marked as an MFC project and no Windows libraries are included on the
linker command line. This causes unresolved externals when the project is
built. To work around this problem, choose "Not Using MFC" in the General
tab of the Project Settings dialog.
<P>
<P><h3>MFCANS32 and MFCUIX32 Sample Directories</h3>
 
<P>
There are two DLLs that are internal to the Microsoft Foundation Class
Library’s OLE implementation: MFCUIx32.DLL and MFCANS32.DLL. Most OLE
applications must ship these two DLLs. See the REDISTRB.WRI file in the
\MSVC20\REDIST subdirectory for more information on these binary files.
<P>
Source code for both of these DLLs is provided in the
\MSVC20\SAMPLES\MFC\MFCUIX32 and \MSVC20\SAMPLES\MFC\MFCANS32
subdirectories. The source is provided to help debug your application.
See the MAKEFILE for each of these DLLs for information on building the
debug version.
<P>
<P><h3>Adding ToolTips to Your Application</h3>
 
<P>
ToolTips are not documented in the Books Online manuals. Each toolbar
button with a ToolTip maps to a menu resource ID name. To prepare your
application for using ToolTips, use the menu editor to select the command
to which the desired toolbar button is mapped, and expose the Property Page
with ALT+ENTER. In the Prompt: field, enter the text string that should
appear on the status bar when the menu command is selected. To create the
ToolTip text, enter "\n" at the end of the Status Bar prompt, followed by
the desired ToolTip text. An example for the File-New toolbar button could
be:
<P>
Prompt: Creates a new document\nNew source file
<P>
Any application generated by AppWizard follows this convention and can be
used to demonstrate and understand the feature.
<P>
The string editor can also be used to create the Prompt: string, but it is
more direct and easier to use the menu editor.
<P>
<P><h3>Multithread Programming</h3>
 
<P>
If the value of a variable can be modified by another thread or by the
operating system and your program depends on this behavior, you should
declare the variable as volatile. Without the volatile keyword, the
optimizing compiler may enregister a copy of this variable, leading to
unexpected behavior.
<P>
<P><h3>Double Quotation Marks in Makefiles</h3>
 
<P>
Use of double quotation marks (") as part of a target name is not supported
(as in: MyTarget "TARGET").
<P>
Makefiles containing double quotation marks within a target name may be
unrecognizable to the development environment.
<P>
<P><h3>64-bit Integers</h3>
 
<P>
In addition to the __int8, __int16, and __int32 "sized integer" support
documented in the C Language Reference and C++ Language Reference, this
Visual C++ version 2.0 release provides support for 64-bit integers. To
declare a 64-bit integer, use the __int64 keyword.
<P>
<P><h3>Using printf and scanf with 64-bit Integers</h3>
 
<P>
You can use the __int64 data type with the printf and scanf function
families.
<P>
A printf format specification, which consists of optional and required
fields, has the following form:
<P>
%[flags] [width] [.precision] [{h | l | I64 | L}]type
<P>
A scanf format specification, which also consists of optional and required
fields, has the form:
<P>
%[*] [width] [{h | l | I64 | L}]type
<P>
The I64 optional prefix to the type specifier indicates that the
corresponding argument is a 64-bit integer. To specify _int64, you can
use the size prefix I64 with the type specifier d, i, o, u, x, or X. The
type prefix I64 is a Microsoft extension and is not ANSI-compatible. For
more information, see printf and scanf in the Run-Time Library Reference.
<P>
<P><h3>Writing 32-bit ODBC Applications</h3>
 
<P>
An update to ODBC version 2.0 is required to build ODBC applications for
DBCS-enabled versions of Windows NT (including Windows NT/Japanese) and
Windows 95. At the time Visual C++ version 2.0 was released, an
update to ODBC version 2.0 was not available. The retail version will be
distributed on the Microsoft Developer Network Development Library Level 2
CD-ROM when it is available.
<P>
<P><h3>ODBC Classes and Threads</h3>
 
<P>
Because the Microsoft Foundation Class libraries that utilize ODBC cannot
ensure that all ODBC components and drivers are completely thread aware,
these classes are not thread-safe.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 2.00 quote quotes<BR>
Keywords          : TlsMisc kbreadme<BR>
Technology        : kbMfc<BR>
Version           : WINNT:2.0<BR>
Platform          : winnt<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 19, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
