

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SAMPLE: DAOTable Uses DAO Classes to Create Database Objects </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q141717">
<META NAME="KBModify" CONTENT="1997/06/26">
<META NAME="KBCreate" CONTENT="1995/12/21">
<META NAME="Keywords" CONTENT="kbfile kbprg kbsample kbusage MfcDAO">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The DAOTable sample (DAOTBL.EXE) demonstrates how to use the MFC DAO classes to create the following common database objects: databases, tables, queries, fields, and indexes. This dialog-based application maps the properties of these objects to con...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QATJ,QA28,QAH4,QAZV,QBFY,QAPN,QA56,QA55,QAY5,QA7O,QA7N,QAW6,QAPF,QAGU,QBXR V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>SAMPLE: DAOTable Uses DAO Classes to Create Database Objects</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 26, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q141717</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
   - Microsoft Visual C++, 32-bit Edition, versions 4.0, 4.1, 4.2 4.2b, 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The DAOTable sample (DAOTBL.EXE) demonstrates how to use the MFC DAO
classes to create the following common database objects: databases,
tables, queries, fields, and indexes. This dialog-based application maps
the properties of these objects to controls the user can set or view. The
program source code is organized so that most database interaction is
isolated from the user interface code to ease finding examples of how to
use MFC DAO.
<P>
In addition to demonstrating the use of the MFC DAO classes, this sample
can be a useful tool for creating simple Microsoft Access databases. You
can create .mdb files from scratch, create and delete tables and queries,
add and delete fields and indexes in the tables, and modify existing
queries.
<P>
The following files contain the code that performs the database
operations. Additional files in the project provide the user interface and
high level database manipulation.
<P>
<PRE>   QUERYDEF.CPP, .H -- functions to create and use queries
   TABLEDEF.CPP, .H -- functions to create and use tables
   FIELD.CPP, .H    -- functions to create and use fields
   INDEX.CPP, .H    -- functions to create and use indexes
   DATABASE.CPP, .H -- functions to create and use databases

</PRE>To use this code and the MFC DAO classes, you must have Visual C++ 4.0 or
later.
<P>
NOTE: Beginning with Visual C++ 4.1, the DAOTable sample is included with
the Visual C++ CD.
<P>
<P><h3>Special Note for Visual C++ 4.1 Users</h3>
 
<P>
The DAOTABLE sample that shipped with Visual C++ 4.1 contains a bug that
will prevent you from creating fields that are of any type other than
text. To correct this problem, you can download the fixed sample as
directed below or make the following correction to the ADDTBDLG.CPP file:
<P>
Replace this line:
<P>
<PRE>   m_FI.m_bAllowZeroLength = TRUE;

</PRE>with this line:
<P>
<PRE>   m_FI.m_bAllowZeroLength = FALSE;

</PRE>This change will disable a workaround that was necessary to avoid a bug in
Visual C++ 4.0. In the download files (DAOTBL.EXE), the workaround code is
conditionally compiled depending on which version you are using to build
the sample. If you do not make the correction given in this section and
you run the application using the Visual C++ 4.1 DLLs, the following
exception will be thrown when you try to create nontext fields:
<P>
<PRE>   Couldn't create field--Exception: Invalid Operation.

</PRE><h3>How to Obtain Daotbl.exe</h3>
 
<P>
The following file is available for download from the Microsoft Software
Library:
<P>
<PRE> ~ <A HREF="http://support.microsoft.com/download/support/mslfiles/Daotbl.exe">Daotbl.exe</A> <I>(size: 79807 bytes)</I> 

</PRE>For more information about downloading files from the Microsoft Software
Library, please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../zMiscellaneous/Q119591.htm">Q119591</A></B>
   TITLE     : How to Obtain Microsoft Support Files from Online Services

</PRE>NOTE: The file must be decompressed by typing "DAOTBL.EXE -d" to recreate
the directory structure.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The MFC DAO classes provide a way to directly use the Microsoft Jet
Database Engine. Although Visual C++ wizards automatically generate code
that will create and open recordsets for you based on implicitly created
database and workspace objects, the code they provide does not demonstrate
creating and manipulating MFC DAO objects directly. With MFC DAO classes,
you can create the majority of DAO objects and set their properties.
<P>
This sample demonstrates using the MFC DAO classes to create and use the
following DAO objects: databases, tables, queries, fields, and indexes.
Exception handling with both MFC exception macros and the C++ exception
mechanism is also shown. Further, DAO exceptions are put to use in
detecting the existence of objects in the DAO collections.
<P>
Listed below are all the files in the project (except those that are
common to all Visual C++ projects). Each file is shown with the type of
components it contains and a brief description.
<P>
<PRE>ADDQYDLG.CPP         - USER INTERFACE - query definition dialog
</PRE>ADDQYDLG.H
<PRE>DAOTABLE.CPP         - APPLICATION - main application objects
</PRE>DAOTABLE.H
<PRE>DAOTDLG.CPP          - USER INTERFACE - main dialog
</PRE>DAOTDLG.H
<PRE>DATABASE.CPP         - MFC DAO - database specific functions
</PRE>DATABASE.H
<PRE>ADDIXDLG.CPP         - USER INTERFACE - add indexes dialog
</PRE>ADDIXDLG.H
<PRE>ADDTBDLG.CPP         - USER INTERFACE - table definition dialog
</PRE>ADDTBDLG.H
<PRE>FIELD.CPP            - MFC DAO - field specific functions
</PRE>FIELD.H
<PRE>LISTCTRL.CPP         - USER INTERFACE - derived CListCtrl class
</PRE>LISTCTRL.H
<PRE>INDEX.CPP            - MFC DAO - index specific functions
</PRE>INDEX.H
<PRE>QUERYDEF.CPP         - MFC DAO - querydef specific functions
</PRE>QUERYDEF.H
<PRE>TABLEDEF.CPP         - MFC DAO - tabledef specific functions
</PRE>TABLEDEF.H
<PRE>ADDDBDLG.CPP         - USER INTERFACE - database definition dialog
</PRE>ADDDBDLG.H
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about the MFC DAO classes, please see the Visual C++
Help file. For additional documentation on DAO, please see the help files
in the DAO SDK that is provided on the Visual C++ 4.0 CD-ROM.
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : kbfile kbprg kbsample kbusage MfcDAO<BR>
Technology          : kbMfc<BR>
Version             : 4.0 4.1<BR>
Platform            : NT WINDOWS<BR>
Resolution Type     : kbcode<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 26, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
