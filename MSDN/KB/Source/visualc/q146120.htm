

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Use an OLE Control as an Automation Server </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q146120">
<META NAME="KBModify" CONTENT="1997/09/25">
<META NAME="KBCreate" CONTENT="1996/02/13">
<META NAME="Keywords" CONTENT="CDKIss MfcOLE kbcode kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  In situations where an OLE container doesn't support control containment, you may want to use an OLE control as an automation server to gain access to its properties and methods. This article explains the necessary modifications you need to make in...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA2K,QA7O,QAB5,QAOE,QAMN,QA9Q,QAGI,QAUD,QAY5,QAPN,QABA,QAIF,QAHV,QBW7,QAI5 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Use an OLE Control as an Automation Server</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 25, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q146120</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC), included with:
   Microsoft Visual C++, 32-bit Edition, versions 4.0, 4.1, 4.2, 4.2b, 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In situations where an OLE container doesn't support control containment,
you may want to use an OLE control as an automation server to gain access
to its properties and methods. This article explains the necessary
modifications you need to make in order for an OLE control to function as a
normal automation server.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Prior to Visual C++ 4.0, an OLE Control could be used as an automation
server without any modification. However, in MFC 4.0, the framework's
implementation of IDispatch::Invoke calls the virtual function
IsInvokeAllowed to determine if an automation server is in the appropriate
state to handle automation calls. The default implementation in
CCmdTarget::IsInvokeAllowed returns TRUE, implying that a server can handle
automation calls.
<P>
In the case of an OLE control, COleControl::IsInvokeAllowed checks to see
if the control has been either initialized or loaded properly through the
persistent storage interfaces. If the control has the appropriate state
information, then this function returns TRUE. When an OLE control is
created as a normal automation server, it is not created as an embedding in
the client. Hence, none of the persistent state initialization will take
place, which thereby causes IsInvokeAllowed to return FALSE. The effect of
this is that a call to an automation object method generates a run-time
error of (8000ffff) : "Catastrophic failure".
<P>
In order to use an OLE control only as an automation server, you need to
override COleControl::IsInvokeAllowed() and return TRUE. If any of the
control's properties and methods should not be accessed when invoked as a
normal automation server, then that automation function could be bypassed
and/or an error code can be returned when COleControl::m_bInitialized is
FALSE.
<P>
For example, the default OLE control behavior may pose a problem when an
automation client calls CreateDispatch to create the OLE control as an
automation server. Prior to making the above modification, CreateDispatch
may succeed; however, any automation calls on the OLE control would fail.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   BOOL CMyOleControl::IsInvokeAllowed (DISPID)
   {
      // You can check to see if COleControl::m_bInitialized is FALSE
     // in your automation functions to limit access.
     return TRUE;
   }
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: ocx OLE Automation error<BR>
Keywords          : CDKIss MfcOLE kbcode kbprg<BR>
Technology        : kbole kbMfc<BR>
Version           : 4.0 4.1 4.2 4.2b 5.0<BR>
Platform          : NT WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 25, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
