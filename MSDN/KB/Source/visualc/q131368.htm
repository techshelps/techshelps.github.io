

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Create MFC Applications that Do Not Have a Menu Bar </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q131368">
<META NAME="KBModify" CONTENT="1997/07/31">
<META NAME="KBCreate" CONTENT="1995/06/08">
<META NAME="Keywords" CONTENT="MfcUI kbprg kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  For most Windows-based applications, a menu bar is a part of the user interface. The menu bar provides a functionality summary for the person using the program. However, it is not required that every Windows-based application must contain a menu ba...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAF0,QANS,QBVV,QAIM,QAJH,QBCT,QAH4,QAGC,QAGB,QAEF,QAUD,QBWR,QDKD,QABA,QDMW V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Create MFC Applications that Do Not Have a Menu Bar</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 31, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q131368</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
<P>
<P><PRE>    - Microsoft Visual C++ for Windows, versions 1.5, 1.51, 1.52
    - Microsoft Visual C++ 32-bit Edition, versions 1.0, 2.0, 2.1, 4.0,
      4.1, 4.2, 5.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
For most Windows-based applications, a menu bar is a part of the user
interface. The menu bar provides a functionality summary for the person
using the program. However, it is not required that every Windows-based
application must contain a menu bar. This article describes how to create
an MFC application that does not have a menu bar.
<P>
For Windows-based applications generated by AppWizard, the IDR_MAINFRAME
menu resource is the standard menu resource for both SDI and MDI
applications. It is the only menu resource for an SDI application. MDI
applications contain additional menus for each type of MDI child window
they support. Those menu resources are usually named IDR_xxxTYPE, where xxx
is related to the name of the corresponding document type. Thus, creating
an application with no menus is not as easy for an MDI application as for
an SDI application. You basically have to modify all functions related to
loading and switching menus.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Create SDI Application that Has No Menu Bar</h3>
 

<OL><P><LI>Generate an SDI application with AppWizard. Do not delete the
   IDR_MAINFRAME menu resource. If you have an application that was not
   generated with AppWizard, do not delete the corresponding main menu
   resource. Leaving the menu resource is required to avoid assertion
   failures in the MFC code.

<P><LI>To prevent the main application window from having a menu bar, delete
   the already loaded menu, and set the hMenu field of the CREATESTRUCT
   structure to NULL in the CFrameWnd::PreCreateWindow() function:
<P>
<P><PRE>      BOOL CMainFrame::PreCreateWindow(CREATESTRUCT&amp; cs)
      {
<PRE></PRE>         if(cs.hMenu!=NULL)
         {
             ::DestroyMenu(cs.hMenu);      // delete menu if loaded
             cs.hMenu = NULL;              // no menu for this window
         }

         return CFrameWnd::PreCreateWindow(cs);
      }

</PRE></OL><h3>Steps to Create MDI Application that Has No Menu Bar</h3>
 

<OL><P><LI>Generate an MDI application with AppWizard. Do not delete the
   IDR_MAINFRAME menu resource. If you have an application that was not
   generated with AppWizard, do not delete the corresponding main menu
   resource. Leaving the menu resource is required to avoid assertion
   failures in the MFC code.

<P><LI>Delete menu resources associated with MDI child windows (IDR_xxxTYPE).
   They are not used. By deleting them, you avoid a resource (memory) leak.

<P><LI>Override the PreCreateWindow() function for the CMainFrame class:
<P>
<P><PRE>      BOOL CMainFrame::PreCreateWindow(CREATESTRUCT&amp; cs)
      {
<PRE></PRE>         if(cs.hMenu!=NULL)
         {
             ::DestroyMenu(cs.hMenu);      // delete menu if loaded
             cs.hMenu = NULL;              // no menu for this window
         }

         return CMDIFrameWnd::PreCreateWindow(cs);
      }

</PRE><P><LI>Modify the code responsible for switching menus by overriding
   the LoadFrame() and OnCreateClient() methods of CMainFrame. This
   is necessary because MFC has already loaded and switched menus
   automatically. The following shows what must be done:
<P>
<P><PRE>      // Overridden method declarations for CMainFrame
</PRE><P>
<P><PRE>      BOOL LoadFrame( UINT nIDResource,
<PRE></PRE>             DWORD dwDefaultStyle = WS_OVERLAPPEDWINDOW | FWS_ADDTOTITLE,
             CWnd* pParentWnd = NULL, CCreateContext* pContext = NULL );
      BOOL CMainFrame::OnCreateClient(LPCREATESTRUCT lpcs,
             CCreateContext* /*pContext*/);

      // Overridden method declarations for CMainFrame

      BOOL CMainFrame::LoadFrame(UINT nIDResource, DWORD dwDefaultStyle,
             CWnd* pParentWnd, CCreateContext* pContext)
      {
          return CFrameWnd::LoadFrame(nIDResource,dwDefaultStyle,
              pParentWnd,pContext);
      }

      BOOL CMainFrame::OnCreateClient(LPCREATESTRUCT lpcs,
              CCreateContext* /*pContext*/)
      {
          return CreateClient(lpcs,NULL);
      }

</PRE></OL>NOTE: Instead of calling the base class (CMDIFrameWnd) in the override of
LoadFrame, you call its base class, CFrameWnd, instead. That way you can
avoid the code that deals with MDI menus.
 
<PRE>Keywords          : MfcUI kbprg kbprg
Technology        : kbMfc
Version           : 1.51 1.52 2.0 2.1 4.1 4.2 5.0
Platform          : NT WINDOWS</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 31, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
