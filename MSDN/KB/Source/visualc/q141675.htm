

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Save and Restore State of Dockable Toolbars </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q141675">
<META NAME="KBModify" CONTENT="1997/10/10">
<META NAME="KBCreate" CONTENT="1995/12/21">
<META NAME="Keywords" CONTENT="MfcUI kbcode kbhowto kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  MFC's CToolBar class makes it easy to create floating toolbars that can dock to your window. Each time you run your application, these toolbars will be re-created in the default locations. This article shows how to override this behavior to save th...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAUR,QAF0,QANS,QAU7,QALS,QAH4,QAY5,QAKJ,QBXS,QBWP,QBV8,QAOE,QAGI,QABA,QALW V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Save and Restore State of Dockable Toolbars</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q141675</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
2.00 2.10 2.20 4.00
WINDOWS NT
kbprg kbhowto kbcode
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
   Microsoft Visual C++, 32-bit Edition, versions 2.0, 2.1, 2.2, 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
MFC's CToolBar class makes it easy to create floating toolbars that can
dock to your window. Each time you run your application, these toolbars
will be re-created in the default locations. This article shows how to
override this behavior to save the toolbar positions and docking state
and restore them the next time the application is executed.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
When you create a SDI or MDI MFC application with the AppWizard, you can
choose the Docking Toolbar option (default is selected). This option
creates a default toolbar that can float and has tooltips. It adds a
CToolBar member m_wndToolBar to the CMainFrame Class. It also adds code to
CMainFrame::OnCreate to create the toolbar and set its attributes.
<P>
CFrameWnd has member functions that can save and restore the state of all
control bars. The functions are SaveBarState and LoadBarState. There are
two other helper functions, GetDockState and SetDockState.
<P>
To save the state of your control bars, you need to add a handler for
CMainFrame::OnClose():
<P>
<PRE>   void CMainFrame::OnClose()
   {
                SaveBarState( "MyDockState" );

                CFrameWnd::OnClose();
   }

</PRE>This saves the docking state in the registry or .ini file under the
MyDockState profile entry.
<P>
LoadBarState must be called to reload the information and set the position
of the controlbars next time the program is executed. This call has to be
added to CMainFrame::OnCreate(). The following code illustrates this in the
context of OnCreate:
<P>
<PRE>   int CMainFrame::OnCreate(LPCREATESTRUCT lpCreateStruct)
   {

           ...

           //Add this line...
           LoadBarState( "MyDockState" );
   }

</PRE><h2>REFERENCES</h2>
 
<P>
DOCKTOOL sample.
<P>
Online help for:
<P>
<PRE>   CFrameWnd::LoadBarState,
   CFrameWnd::SaveBarState,
   CFrameWnd::GetDockState,
   CFrameWnd::SetDockState.
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 2.00 2.10 2.20 3.00 3.10 3.20 4.00 kbinf<BR>
KBCategory: kbprg kbhowto kbcode<BR>
KBSubcategory: MfcUI<BR>
Keywords          : MfcUI kbcode kbhowto kbprg<BR>
Technology        : kbMfc<BR>
Version           : 2.00 2.10 2.20 4.00<BR>
Platform          : NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
