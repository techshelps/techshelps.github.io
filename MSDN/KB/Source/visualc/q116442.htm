

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: C1001 Generated Using typedef for Member Functions </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q116442">
<META NAME="KBModify" CONTENT="1995/12/15">
<META NAME="KBCreate" CONTENT="1994/06/20">
<META NAME="Keywords" CONTENT="kbtool kbbuglist">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  When you compile C++ code that uses a typedef for member functions:   - If the code is compiled with C/C++ Compiler for MS-DOS, version 8.0c,    and you use the /Fr or /FR compiler option, the following error message    is generated:        fatal e...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBFY,QAB4,QAOT,QAH4,QBV8,QAAP,QAY5,QBWP,QAKP,QBVV,QAB9,QDKW,QBJZ,QA56,QA55 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: C1001 Generated Using typedef for Member Functions</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 15, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q116442</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>The Microsoft C/C++ Compiler (CL.EXE), included with:
<P>
<P><PRE>    - Microsoft C/C++ for MS-DOS, version 7.0
    - Microsoft Visual C++ for Windows, versions 1.0 and 1.5
    - Microsoft Visual C++ 32-bit Edition, versions 1.0 and 2.0
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When you compile C++ code that uses a typedef for member functions:

<UL><LI>If the code is compiled with C/C++ Compiler for MS-DOS, version 8.0c,
   and you use the /Fr or /FR compiler option, the following error message
   is generated:
<P>
<P><PRE>      fatal error C1001: internal compiler error
<PRE></PRE>            (compiler file 'msc1.cpp', line 585)

</PRE><LI>If the code is compiled with the C/C++ Compiler for Windows NT, version
   8.0, and you use the /Fr or /FR compiler option, the following error
   message is generated:
<P>
<P><PRE>      fatal error C1001: INTERNAL COMPILER ERROR
<PRE></PRE>         (compiler file 'msc1.cpp', line 602)
         Please choose the Technical Support command on the Visual
         Workbench Help menu, or open the Technical Support help file
         for more information

</PRE><LI>If neither the /Fr or /FR option is used, the C/C++ Compiler for MS-DOS,
   version 8.0c, and the C/C++ Compiler for Windows NT, version 8.0, do not
   generate the C1001 error message; however, the member functions are not
   prototyped correctly.

<LI>Regardless of the compiler option used, the C/C++ Compiler for MS-DOS,
   versions 7.0 and 8.0, do not generate the C1001 error; however, the
   member functions are not prototyped correctly.
<P>
</UL><h2>RESOLUTION</h2>
 
<P>
To work around this problem, do one of the following:

<UL><LI>Compile the code without the /Fr or /FR option.
<P>
   -or-

<LI>Prototype the functions without the typedef.
<P>
</UL><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the products listed at the
beginning of this article. We are researching this bug and will post new
information here in the Microsoft Knowledge Base as it becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
You can use the following sample code to demonstrate this problem. If one
of the workarounds is used, then the error message generated is:
<P>
<PRE>      error C2511: 'memberFunc' : overloaded member function not found in
            'CClassName'

</PRE><h3>Sample Code</h3>
 
<P>
<PRE>/* Compile options needed: /Fr or /FR
*/

   typedef void VOIDFUNC(void);

   class CClassName
   {
      VOIDFUNC memberFunc;
   };

   void CClassName::memberFunc(void)
   {
   }
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 7.00 8.00 8.00c 9.00 1.00 1.50 2.00 noupdate<BR>
KBCategory: kbtool kbbuglist<BR>
KBSubcategory: CPPIss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 15, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
