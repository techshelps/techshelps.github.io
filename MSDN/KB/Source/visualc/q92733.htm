

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using an IFSTREAM Object with the "&gt;&gt;" Operator </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q92733 ">
<META NAME="KBModify" CONTENT="1997/07/17">
<META NAME="KBCreate" CONTENT="1992/11/15">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT=" An IFSTREAM object may be used as input for the  &gt;&gt;  insertion operator. Doing so provides a method to retrieve data from an IFSTREAM other than CIN. The sample code below demonstrates this task.  Sample Code  /*  * Compile options needed: cl /D_DOS...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QATX,QAW6,QAKM,QANY,QAKC,QBC6,QA4Q,QAG8,QBFY,QACI,QDL9,QBWQ,QBWO,QBWN V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Using an IFSTREAM Object with the "&gt;&gt;" Operator</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 17, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q92733 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00 1.50
WINDOWS
kbprg
<P>
 
The information in this article applies to:

<UL><LI>Microsoft C/C++ for MS-DOS, version 7.0
<LI>Microsoft Visual C++ for Windows, versions 1.0 and 1.5
</UL> 
<P>
An IFSTREAM object may be used as input for the "&gt;&gt;" insertion
operator. Doing so provides a method to retrieve data from an IFSTREAM
other than CIN. The sample code below demonstrates this task.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>/*
 * Compile options needed: cl /D_DOS test.cpp safxcrd.lib
 */

//****************************************************
//
//      Demo using an IFSTREAM Object For &gt;&gt; operator
//
//****************************************************

#include &lt;fstream.h&gt;
#include &lt;iostream.h&gt;
#include &lt;malloc.h&gt;
#include &lt;string.h&gt;

ifstream myfileinput;               // IFSTREAM Object For &gt;&gt; Operator

void main()
</PRE>{
<PRE>   int     number;
   char    *instring;

   myfileinput.open("my.dat", ios::in, filebuf::sh_read);

   myfileinput &gt;&gt; number;      //** Insert into number

   if (number == 180)
      cout &lt;&lt; "worked for integers" &lt;&lt; endl;
   else
      cout &lt;&lt; "failed for integers" &lt;&lt; endl;
   instring = (char*)calloc(25, sizeof(char));

   myfileinput &gt;&gt; instring;   //** Insert into char*

   if (0 == strcmp(instring,"string"))
      cout &lt;&lt; "worked for strings" &lt;&lt; endl;
   else
      cout &lt;&lt; "failed for strings" &lt;&lt; endl;
</PRE>}
<P>
<P>
<P><h3>MY.DAT File</h3>
 
<P>
180
string
<P>
<P>
<P><h3>Output</h3>
 
<P>
worked for integers
worked for strings
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 7.00 1.00 1.50<BR>
KBCategory: kbprg<BR>
KBSubcategory: CPPLngIss<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 17, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
