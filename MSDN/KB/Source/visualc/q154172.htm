

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How To Pass Binary Data Between an ActiveX Control and VB </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q154172">
<META NAME="KBModify" CONTENT="1997/10/10">
<META NAME="KBCreate" CONTENT="1996/07/31">
<META NAME="Keywords" CONTENT="CDKIss kbhowto kbole kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  This article will demonstrate how to pass an array of bytes between Visual Basic and an ActiveX (OLE) Control. This is accomplished by creating a method that takes a VARIANT parameter that will contain a SafeArray of bytes.  MORE INFORMATION  Excha...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH6,QAH7,QAD7,QBS0,QAYY,QA2K,QAYV,QAYL,QA7O,QAOE,QAMN,QAMB,QALG,QAB5,QACJ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How To Pass Binary Data Between an ActiveX Control and VB</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q154172</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
2.00 2.10 2.20 4.00 4.10 4.20
WINDOWS NT
kbole kbprg kbhowto
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Visual C++, 32-bit Edition, versions 2.0, 2.1, 2.2, 4.0,
   4.1, 4.2
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article will demonstrate how to pass an array of bytes between Visual
Basic and an ActiveX (OLE) Control. This is accomplished by creating a
method that takes a VARIANT parameter that will contain a SafeArray of
bytes.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Exchanging data in this manner is useful for both raw data and as a
technique for passing data structures.
<P>
WARNING: Passing data structures in this manner can pose problems if it
contains pointers.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   /* Compile options needed : None
   */

   // Automation method in the control BinData.
   void CBinDataCtrl::VBtoVCtoVB(const VARIANT FAR&amp; Buffer)
   {
      // Verify the Variant contains SafeArray of Bytes
      if (Buffer.vt == (VT_ARRAY | VT_UI1)) {
         long Dims = SafeArrayGetDim(Buffer.parray);
         long UpperBounds;
         long LowerBounds;

         if (Dims == 1) {
            SafeArrayGetLBound(Buffer.parray, 1, &amp;LowerBounds);
            SafeArrayGetUBound(Buffer.parray, 1, &amp;UpperBounds);

            // Use LowerBounds and UpperBounds to force a specific
            // Array size as shown here or they can be used to
            // dynamically create the buffer.
            if ((LowerBounds == 0) &amp;&amp; (UpperBounds == 512)) {
               // Reference pointer for accessing the SafeArray
               unsigned char* buff;
               // Variable to store the data from the SafeArray
               // could be a global variable or member of CBinDataCtrl
               // Shown as a local variable for demonstration purpose only
               unsigned char m_abBinaryData[512];
               SafeArrayAccessData (Buffer.parray, (void**)&amp;buff);
               for (int i = 0; i &lt; 512; i++) {
                  // Handle the binary data in the buffers
                  // Copying the data passed from VB to VC.
                  m_abBinaryData[i] = buff[i];

                  // Modifying the data to be passed back to VB
                  buff[i] = 0;
               }
               SafeArrayUnaccessData (Buffer.parray);
               return;
            }
         }
      }
      AfxMessageBox ("Invalid parameter passed in VBtoVC method.\n"  +
                     "The array may only have a single dimension.\n" +
                     "The array must contain 512 bytes.");
   }

</PRE>NOTE: Code for Visual Basic 4.0 where BinData is the name of the control:
<P>
<PRE>      Private Sub Form_Load()
          Dim buf(512) As Byte

          For i = 0 To 511
              buf(i) = 50
          Next i

          BinData1.VBtoVCtoVB buf
      End Sub

</PRE><h2>REFERENCES</h2>
 
<P>
For more information, please see the following articles in the Microsoft
Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../OLEPROG/Q122287.htm">Q122287</A></B>
   TITLE     : Limits of VB 3.0 &amp; Disptest as Automation Controllers

   ARTICLE-ID: <B><A HREF="../OLEPROG/Q131046.htm">Q131046</A></B>
   TITLE     : SAMPLE: BINARY: Transfer Binary Data Using OLE Automation

   ARTICLE-ID: <B><A HREF="../OLEPROG/Q131086.htm">Q131086</A></B>
   TITLE     : SAMPLE: SAFEARAY: Use of Safe Arrays in Automation

   ARTICLE-ID: <B><A HREF="../OLEPROG/Q140202.htm">Q140202</A></B>
   TITLE     : SAMPLE: MFCARRAY: Using Safe Arrays in MFC Automation

   ARTICLE-ID: <B><A HREF="../OLEPROG/Q122289.htm">Q122289</A></B>
   TITLE     : Passing Structures in OLE Automation

</PRE>Microsoft Systems Journal, June 1996, "Q&amp;A OLE" by Don Box.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 2.00 2.10 2.20 4.00 4.10 4.20 kbinf array<BR>
                            Visual Basic 4.00 binary data byte<BR>
KBCategory: kbole kbprg kbhowto<BR>
KBSubcategory: CDKIss<BR>
Keywords          : CDKIss kbhowto kbole kbprg<BR>
Technology        : kbMfc<BR>
Version           : 2.00 2.10 2.20 4.00 4.10 4.20<BR>
Platform          : NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
