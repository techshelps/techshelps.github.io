

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Spawned Process Runs Out of Environment Space </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q51742 ">
<META NAME="KBModify" CONTENT="1997/07/17">
<META NAME="KBCreate" CONTENT="1989/12/08">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  With a Microsoft C created MS-DOS application, using spawn() to create a child process which then attempts to increase the environment space of the child (by adding a new environment variable or expanding an existing environment variable) results i...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAYL,QAX1,QBFY,QBXS,QAGI,QA5E,QAEF,QAMA,QALQ,QBW5,QAA1,QAIF,QBXU,QAY5,QAB4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Spawned Process Runs Out of Environment Space</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 17, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q51742 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
5.10 6.00 6.00ax 7.00 | 1.00 1.50
<PRE>MS-DOS                | WINDOWS
</PRE>kbprg kbprb
<P>
 
The information in this article applies to:

<UL><LI>The C Run-time (CRT) included with:
<P>
<P><PRE>    - Microsoft C for MS-DOS, versions 5.1, 6.0, 6.0a, and 6.0ax
    - Microsoft C/C++ for MS-DOS, version 7.0
    - Microsoft Visual C++ for Windows, versions 1.0 and 1.5
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
With a Microsoft C created MS-DOS application, using spawn() to
create a child process which then attempts to increase the environment
space of the child (by adding a new environment variable or expanding
an existing environment variable) results in the following error:
<P>
<PRE>   Out of Environment Space

</PRE>This problem does NOT happen if the parent and child are built as
native OS/2 or Win32-based applications.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To work around this problem, set up a dummy environment variable
that is large enough to hold the new environment variable you plan
to use in the spawned process. When the child process is called,
you can then set the dummy variable to null (with a "set dummy="),
then you can set your processes environment variable. Please note
that this will change the dummy environment variable for the child
only, not the parent process.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following program(s) illustrates this behavior:
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>/*
</PRE>parent.c
<P>
Compile options needed: none
<P>
This will call the child process (child) with the spawnlp
function.
<PRE>*/

#include &lt;stdio.h&gt;
#include &lt;process.h&gt;

void main (void);

void main (void)
</PRE>{
<PRE>    printf ("In the parent process\n");

    spawnlp (P_WAIT, "child.exe", "child", NULL);

    printf ("\nAnd back to the parent process.\n");
</PRE>}
<P>
<P>
<P>
<PRE>/*
</PRE>child.c
<P>
Compile options needed: none
<P>
Called by parent.c, uses the system function to call a batch
file (BATCH.BAT) to attempt to set a new environment variable.
<PRE>*/

#include &lt;stdio.h&gt;
#include &lt;process.h&gt;
#include &lt;conio.h&gt;
#include &lt;errno.h&gt;

void main (void);

void main (void)
</PRE>{
<PRE>    printf ("At child process...\n");
    system ("batch.bat");
    getch ();
</PRE>}
<P>
<P>
<PRE>/*-----------------------------------------------------------------*/
</PRE>BATCH.BAT  The batch file, which is called by the child process
<PRE>            (CHILD.EXE). It just shows the environment variables,
            attempts to set another environment variable, then shows
            the environment variables one more time.
/*-----------------------------------------------------------------*/

</PRE>set
set blah=thisisatestonlyatestsoitdoesnotreallymatter
set
<P>
<PRE>/*-----------------------------------------------------------------*/

</PRE>Parent will spawn child, which in turn spawns (through system)
BATCH.BAT. The idea is to show that when BATCH.BAT is called, an "Out
of Environment Space" error will be given. Yet, if BATCH.BAT is run
from MS-DOS, no such error is issued.
<P>
Under MS-DOS, the child receives only enough space to hold the current
environment variables.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 5.10 6.00 6.00a 6.00ax 7.00 1.00 1.50<BR>
KBCategory: kbprg kbprb<BR>
KBSubcategory: CRTIss<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 17, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
