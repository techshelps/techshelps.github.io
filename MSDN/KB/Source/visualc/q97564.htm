

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Compressed Drives and Visual C++ Setup </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q97564 ">
<META NAME="KBModify" CONTENT="1997/07/17">
<META NAME="KBCreate" CONTENT="1993/04/14">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The Microsoft Visual C++ Setup program generally provides accurate information about the available free disk space and the space required to install selected files. However, if Setup installs files on a compressed drive, the information about avail...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBW5,QAA1,QDI2,QDIZ,QDIR,QAYY,QAC9,QBFY,QA9N,QA59,QA56,QA55,QASB,QDL7,QDL9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Compressed Drives and Visual C++ Setup</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 17, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q97564 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00 1.50 1.51 1.52
WINDOWS
kbsetup
<P>
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Visual C++ for Windows, version 1.0, 1.5, 1.51, and 1.52
<LI>Compressed drives created by one of the following:
<P><PRE>    - Digital Research DR-DOS version 6.0 SUPERSTORE
    - Microsoft MS-DOS version 6.0 DBLSPACE
    - Stac Electronics STACKER
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The Microsoft Visual C++ Setup program generally provides accurate
information about the available free disk space and the space required to
install selected files. However, if Setup installs files on a compressed
drive, the information about available free disk space may be inaccurate
and Setup may fail because insufficient space is available to install the
selected files.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To the operating system, a compressed drive is effectively a data
file. To access data in the compressed drive, the boot process
installs a device driver that emulates a disk drive device. The driver
processes all interrupt calls that pertain to the emulated device. The
driver uses a data compression algorithm to store and retrieve data as
files in the large file that the underlying operating system manages.
<P>
The data compression algorithm processes each data set (file)
individually; the actual amount of compression varies from file to
file. The data compression software tracks the average compression
ratio on the compressed drive and uses this ratio to estimate the
amount of free space on the drive.
<P>
For example, consider the case in which the operating system creates a
100 MB file for the compressed drive. If you store 100 MB of data into
this drive at a 50% compression ratio, the data requires only 50 MB.
At this point, the compression software reports that the compressed
drive can hold 200 MB and that it has space available for 100 MB.
However, the true amount of space free is the 50 MB of unused space in
the file as reported by the operating system. If the compression
software cannot store subsequent data sets at the reported 50%
compression ratio, the compressed drive does not have 100 MB free.
<P>
This factor becomes critical in a setup program such as Visual C++
Setup. In particular, Microsoft Windows Help files may already be
compressed to a great extent because part of the process to build a
Help file can include data compression. If the data compression
software reports 3 MB free disk space (its estimate) and Setup has a 3
MB Help file to install, Setup attempts the installation. However,
this process fails because the Help file cannot be compressed to the
same extent as previous data sets and it does not fit onto the
compressed disk.
<P>
To illustrate this phenomenon with a concrete example, consider the
amount of free space available on a compressed drive before and after
copying a Windows Help file. Before copying the file to a DBLSPACE
drive, the following calculation appears reasonable:
<P>
<PRE>   Space available on Compressed Drive D:   8,790,016
                   Copy WIN31WH.HLP to D:  -3,390,373
               Amount that should result:   5,399,643

</PRE>However, after copying the file, DBLSPACE reports the following amount
of space free:
<P>
<PRE>   Actual free space reported after copy:   2,949,120

</PRE>At this point, an attempt to copy MFC.HLP (size 2,222,523) to this
drive fails due to insufficient free space.
<P>
NOTE: Under Visual C++ 1.5 the size of WIN31WH.HLP is 3,386,753 bytes. The
size of and MFC.HLP is 2,725,211 bytes.
<P>
This behavior may cause the Visual C++ Setup program to fail
unexpectedly when it copies data to a compressed drive. This behavior
has no general solution; it is caused by a limitation of the methods
used to create and maintain compressed drives. Neither the compression
software nor the setup program can determine in advance how a given
file will respond to the compression algorithm. The only option
available involves attempting to compress the file and failing
gracefully if it does not fit.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 1.00 1.50<BR>
KBCategory: kbsetup kb3rdparty<BR>
KBSubcategory: vc10setup vc15setup<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 17, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
