

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FILE: Directory Picker Sample Using Modified CFileDialog </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q105497">
<META NAME="KBModify" CONTENT="1998/01/15">
<META NAME="KBCreate" CONTENT="1993/10/20">
<META NAME="Keywords" CONTENT="MfcFileIO">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The default implementation of CFileDialog allows the user to select a specific file from any drive/directory on the computer. It is possible to derive a class from CFileDialog, creating a new class that allows the user to select only a directory. I...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA01,QA36,QAFI,QAPF,QBXB,QAY2,QATJ,QABA,QAB5,QAG4,QAEF,QDL9,QBWQ,QBWO,QBWN V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FILE: Directory Picker Sample Using Modified CFileDialog</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 15, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q105497</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC), included with:
   - Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51, 1.52
   - Microsoft Visual C++ 32-bit Edition, versions 1.0, 2.0, 2.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The default implementation of CFileDialog allows the user to select a
specific file from any drive/directory on the computer. It is possible
to derive a class from CFileDialog, creating a new class that allows
the user to select only a directory. In addition to deriving a new
class, this approach also requires that a custom template be used in
conjunction with the new dialog box. The Directory Picker (DIRPK)
sample implements this functionality.
<P>
The following file is available for download from the Microsoft Software
Library:
<P>
<PRE> ~ <A HREF="http://support.microsoft.com/download/support/mslfiles/Dirpk.exe">Dirpk.exe</A> <I>(size: 79675 bytes)</I> 

</PRE>For more information about downloading files from the Microsoft Software
Library, please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../zMiscellaneous/Q119591.htm">Q119591</A></B>
   TITLE     : How to Obtain Microsoft Support Files from
               Online Services

</PRE>DIRPK.EXE was archived as a self-extracting file using the PKware file-
compression utility. The archived file contains subdirectories, and
therefore, the -d switch needs to be used when decompressing the file to
disk.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
NOTE: The DIRPK sample was designed using the old style of common file
dialogs and will work as intended only on Windows NT 3.51. On Windows 95
and future versions of NT (4.0), if you want to use the old style of common
file dialogs, insure that:
<P>
<PRE>   m_ofn.Flags &amp;= ~OFN_EXPLORER;

</PRE>before calling DoModal() on the CFileDialog object. It is likely, however,
that this behavior will change under future versions of Windows and the old
style of common file dialogs will go away. The best way to search for a
folder instead of a specific file is to use the new ::SHBrowseForFolder()
SDK function.
<P>
The following steps use the DIRPK sample to derive a class from CFileDialog
which allows the user to select only a directory:

<OL><P><LI>Derive a class from CFileDialog. See the DIRPK sample for the
   specific implementation.

<P><LI>Modify the default CFileDialog dialog box template to suit the
   needs of your dialog box. When modifying a default template, be
   sure to leave all existing controls there--you can move them
   around, but they must exist. (COMMDLG.DLL expects certain controls
   to exist in the template.) Of course, you can add new controls if
   desired. The default dialog box templates can be found in the
   \MSVC\SAMPLES\COMMDLG directory in Visual C++ for Windows. In Visual C++
   32-bit edition, the templates are found in \MSVC\INCLUDE. Each template
   has a .DLG file extension.

<P><LI>Include the modified template in your application's .RC file. Note
   that the default dialog box templates contain constant identifiers
   such as cmb1, lst1, stc1, and so forth. These constants are defined
   in the DLGS.H file, located in the \\MSVC\INCLUDE directory. You
   must include this file in your application's .RC file as well.
   Using App Studio, choose Set Includes from the File menu and enter
<PRE>   #include "dlgs.h" in the Read-Only Symbol Directives edit control.

</PRE><P><LI>Add any necessary member functions. See the DIRPK sample for
   implementation details.

<P><LI>Create an object of your new class and call the DoModal function to
   bring up the dialog box. Code similar to the following should be
   used:
<P>
</OL><h3>Sample Code</h3>
 
<P>
<PRE>   CMyFileDlg  cfdlg(FALSE, NULL, NULL, OFN_SHOWHELP | OFN_HIDEREADONLY |
                     OFN_OVERWRITEPROMPT | OFN_ENABLETEMPLATE, NULL,
                     m_pMainWnd);
   cfdlg.m_ofn.hInstance = AfxGetInstanceHandle();
   cfdlg.m_ofn.lpTemplateName = MAKEINTRESOURCE(FILEOPENORD);
   if (IDOK==cfdlg.DoModal())
       ...OK processing...
   else
       ...Error processing...
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: getopenfilename commdlg dirpkr dirpick dirpicker<BR>
dirpik<BR>
Keywords          : MfcFileIO<BR>
Technology        : kbMfc<BR>
Version           : 1.0 1.5 1.51 1.52 2.0<BR>
Platform          : NT WINDOWS<BR>
Issue type        : kbfile<BR>
Solution Type     : kbfile kbsample<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 15, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
