

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Timer Callbacks Not Called in MFC 4.2 Applications </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q154652">
<META NAME="KBModify" CONTENT="1997/09/19">
<META NAME="KBCreate" CONTENT="1996/08/12">
<META NAME="Keywords" CONTENT="MfcMisc vcbuglist400 vcfixlist420 kbprg kbbuglist kbfixlist">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  An MFC 4.2 application that uses ::SetTimer to set up a timer that uses a timer callback function (for example, the hWnd argument in the call to SetTimer is NULL) never gets the callback function invoked.  If a menu, message box, or modal dialog bo...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAEV,QAGI,QAH6,QATK,QAH7,QAD7,QBVV,QAYC,QAY5,QA01,QAIF,QAR4,QBV8,QAB9,QAUD V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Timer Callbacks Not Called in MFC 4.2 Applications</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 19, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q154652</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:
<P>
<PRE>  - The Microsoft Foundation Classes (MFC) included with:
    - Microsoft Visual C++, 32-bit Edition, versions 4.0, 4.1, 4.2
</PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
An MFC 4.2 application that uses ::SetTimer to set up a timer that uses a
timer callback function (for example, the hWnd argument in the call to
SetTimer is NULL) never gets the callback function invoked.
<P>
If a menu, message box, or modal dialog box is active, then the timer
callback function is called.
<P>
<P><h2>CAUSE</h2>
 
<P>
MFC 4.2 added the capability to add message map entries for messages that
are posted to the queue but are not destined for any particular window (for
example, messages posted with PostThreadMessage).
<P>
This can be done using the ON_THREAD_MESSAGE macro. To enable this
capability, a change was made in CWinThread::PreTranslateMessage that
prevents any message that does not have an HWND from being routed through
the message pump. Consequently, messages that do not have an HWND are not
passed to the Win32 DispatchMessage API call.
<P>
Timer callback functions are invoked through a posted WM_TIMER message. The
WM_TIMER message has NULL as the hwnd member and the lParam points to the
callback function. The callback function is invoked by Windows when a
WM_TIMER message with a NULL hwnd is passed to DispatchMessage.
<P>
Because MFC 4.2 does not pass these messages to DispatchMessage, the timer
callback function will not be called.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Override CWinThread::PreTranslateMessage in the thread that owns the timer.
<P>
Remember that CWinApp is derived from CWinThread, and if your timer is
established in the primary thread then your application will need to
override PreTranslateMessage in its CWinApp-derived class.
<P>
Implement this function as follows:
<P>
<PRE>   BOOL CMyApp::PreTranslateMessage( MSG *pMsg )
   {
       // If this is a timer callback message let it pass on through to the
       // DispatchMessage call.
       if( (pMsg-&gt;message==WM_TIMER) &amp;&amp; (pMsg-&gt;hwnd==NULL) )
           return FALSE;
       ...
       // The rest of your PreTranslateMessage goes here.
       ...

       return CWinApp::PreTranslateMessage(pMsg);
   }

</PRE><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. This bug has been corrected in the Visual
C++ 4.2b technology update.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Your callback might be called when executing a menu, dialog box, or a modal
dialog box because these operations all use a different message loop. This
message loop is provided by Windows, and it does not call
PreTranslateMessage. Instead, it will just pass the messages on to
DispatchMessage, and your timer callback will be invoked as expected.
<P>
 
<PRE>Keywords          : MfcMisc vcbuglist400 vcfixlist420 kbprg kbbuglist kbfixlist
Technology        : kbMfc
Version           : 4.0 4.1 4.2
Platform          : NT WINDOWS
Issue type        : kbbug
Solution Type     : kbfix</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 19, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
