

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Center a Dialog Using the Microsoft Foundation Classes </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q102328">
<META NAME="KBModify" CONTENT="1997/07/31">
<META NAME="KBCreate" CONTENT="1993/08/03">
<META NAME="Keywords" CONTENT="MfcUI kbfasttip kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  In an application developed with the Microsoft Foundation Classes library, you may want to automatically center a dialog box with respect to its parent window when it is created.  To do this, it is necessary to ensure that the dialog box can be cen...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QANO,QBC9,QBC8,QAEB,QAIV,QA01,QAII,QBFY,QAY5,QABO,QBHQ,QAMA,QABA,QAGQ,QBV8 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Center a Dialog Using the Microsoft Foundation Classes</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 31, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q102328</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
<P><PRE>    - Microsoft C/C++ version 7.0
    - Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51, 1.52
    - Microsoft Visual C++ 32-bit Edition, version 1.0, 2.0, 2.1, 4.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In an application developed with the Microsoft Foundation Classes library,
you may want to automatically center a dialog box with respect to its
parent window when it is created.
<P>
To do this, it is necessary to ensure that the dialog box can be centered
without regard to its parent window (to support the case in which the
caller specified NULL as the parent window handle). You must add additional
code to center the dialog box with respect to the desktop window when no
parent is specified and with respect to the parent window otherwise.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The sample code below can be used as an example to override the
OnInitDialog() member function of the CDialog class. The CenterDialog()
function, defined below, is compatible with version 1.0 of the Microsoft
Foundation Classes library.
<P>
If you develop your application with version 2.0 or later of the Microsoft
Foundation Classes library, use the CenterWindow() function instead of the
CenterDialog() function. CenterWindow() provides identical functionality,
but it is not available in version 1.0 of the MFC library.
<P>
The MFC version 2.0 implementation of the CenterWindow() function can be
found in the DLGCORE.CPP file (installed by default in the C:\MFC\SRC
directory). In MFC version 3.0 and above, CenterWindow() is a member
function of CWnd which is the base class of CDialog. In these MFC versions,
the implementation of CWnd::CenterWindow() can be found in WINCORE.CPP
(installed by default in the MFC\SRC subdirectory of the corresponding
Visual C++ product directory).
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   /*
    * Compiler options needed: (Standard Windows Requirements)
    */

   void CMyDialog::CenterDialog(CWnd *MyDialogPtr)
   {
      CPoint   Point;
      CRect    DialogRect;
      CRect    ParentRect;
      int      nWidth;
      int      nHeight;
      CWnd     *DesktopWindow = NULL;
      CWnd     *MainWindow;

      // Get the size of the dialog box.
      MyDialogPtr-&gt;GetWindowRect(DialogRect);

      // Get the main window.
      MainWindow = AfxGetApp()-&gt;m_pMainWnd;

      // Determine if the main window exists. This can be useful when
      // the application creates the dialog box before it creates the
      // main window. If it does exist, retrieve its size to center
      // the dialog box with respect to the main window.
      if (MainWindow != NULL)
         MainWindow-&gt;GetClientRect(ParentRect);
      // If the main window does not exist, center with respect to
      // the desktop window.
      else
      {
         DesktopWindow = MyDialogPtr-&gt;GetDesktopWindow();
         DesktopWindow-&gt;GetWindowRect(ParentRect);
      }

      // Calculate the height and width for MoveWindow().
      nWidth = DialogRect.Width();
      nHeight = DialogRect.Height();

      // Find the center point and convert to screen coordinates.
      Point.x = ParentRect.Width() / 2;
      Point.y = ParentRect.Height() / 2;
      if (MainWindow)
         MainWindow-&gt;ClientToScreen(&amp;Point);
      else
         DesktopWindow-&gt;ClientToScreen(&amp;Point);

      // Calculate the new X, Y starting point.
      Point.x -= nWidth / 2;
      Point.y -= nHeight / 2;

      // Move the window.
      MyDialogPtr-&gt;MoveWindow(Point.x, Point.y, nWidth, nHeight, FALSE);
   }

   BOOL CMyDialog::OnInitDialog()
   {
      CDialog::OnInitDialog();

      // Remove the comment from 1 or 2 below to correspond with
      // the version of the Microsoft Foundation Classes library
      // you are using.

      // 1. Call CenterDialog() for version 1.0
      // CenterDialog(this);

      // 2. Call CenterWindow() for versions 2.0 and above
      // CenterWindow();

      return TRUE;
   }
</PRE> 
<PRE>Keywords          : MfcUI kbfasttip kbhowto
Technology        : kbmfc
Version           : 1.0 1.5 1.51 1.52 2.0 2.1 4.0 7.
Platform          : MS-DOS NT WINDOWS</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 31, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
