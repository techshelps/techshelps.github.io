

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Incorrect Code Generated in Function That Uses _asm </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q114070">
<META NAME="KBModify" CONTENT="1997/09/18">
<META NAME="KBCreate" CONTENT="1994/04/24">
<META NAME="Keywords" CONTENT="CodeGen kb16bitonly kbbuglist kbfixlist kbtool">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Executing a program built from the sample code shown below after compiling with the optimizing compiler causes the program to hang, crash, or generate a General Protection Fault.  CAUSE =====  The code generated for the return statements in the Tes...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QAHH,QAVX,QAVW,QBFY,QAUD,QAFO,QAOT,QAAP,QAR4,QBV8,QAB9,QBE7,QBE6,QAY5 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Incorrect Code Generated in Function That Uses _asm</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q114070</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00
WINDOWS
kbtool kbfixlist kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft C/C++ Compiler (CL.EXE), included with:
   Microsoft Visual C++ for Windows, version 1.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Executing a program built from the sample code shown below after
compiling with the optimizing compiler causes the program to hang,
crash, or generate a General Protection Fault.
<P>
<P><h2>CAUSE</h2>
 
<P>
The code generated for the return statements in the Test() function
contains incorrect JMP instructions.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To work around the problem, use the fast compiler instead of the
optimizing compiler. Use of the fast compiler can be forced by
compiling with the /f switch.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem with C/C++ for MS-DOS
version 8.0. This problem was corrected with C/C++ for MS-DOS version
8.0c, include with Visual C++ for Windows, version 1.5.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The incorrect code can be seen by either generating a code listing
file with the /Fc compiler option or by running the executable built
from the sample code in the CodeView debugger. The code generated for
the two return statements in the Test() function specify the wrong
displacement for the JMP instructions.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>/* Compile options needed: /f-
</PRE>*
*  This sample code must also be compiled as a .CPP file.
<PRE>*/

</PRE>double Test(const double x, double&amp; dt);
<P>
double dub;
<P>
<PRE>void main(void)
</PRE>{
<PRE>    Test(0.0, dub);
</PRE>}
<P>
double Test(const double x, double&amp; dt)
{
<PRE>    if(x == 0.0)
        return dt = 1.0;

    double y;

    _asm
    {
        fld x
        fld st(0)
        frndint
        fxch
        fsub st(0),st(1)
        f2xm1
        fld1
        faddp st(1),st(0)
        fscale
        fst st(1)
        fld1
        fdiv st(0),st(1)
        fadd st(2),st(0)
        fsubp st(1),st(0)
        fdivrp st(1),st(0)
        fst y
        fmul st(0),st(0)
        fld1
        fsubrp st(1),st(0)
        les bx,DWORD PTR dt
        fstp QWORD PTR es:[bx]
        fwait
    }

    return y;
</PRE>}
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 8.00 inline assembly<BR>
KBCategory: kbtool kbfixlist kbbuglist<BR>
KBSubcategory: CodeGen<BR>
Keywords          : CodeGen kb16bitonly kbbuglist kbfixlist kbtool<BR>
Version           : 1.00<BR>
Platform          : WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
