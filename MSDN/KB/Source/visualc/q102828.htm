

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Listbox Sample Using Microsoft Foundation Classes </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q102828">
<META NAME="KBModify" CONTENT="1997/07/17">
<META NAME="KBCreate" CONTENT="1993/08/10">
<META NAME="Keywords" CONTENT="kb16bitonly MfcUI kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT=" This is the 16-bit version of this sample. There is an equivalent 32-bit sample available under the name LSTDDX32.EXE.   The LSTDDX sample illustrates a technique for filling both an ordinary listbox control and the listbox portion of a combo contro...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAHP,QBVR,QAPF,QA7O,QAOE,QAMN,QAB5,QABO,QAVI,QA01,QBW9,QBJZ,QBWP,QBFY,QA56 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Listbox Sample Using Microsoft Foundation Classes</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 17, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q102828</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00 1.50 1.51 1.52 | 1.00 2.00 2.10
<PRE>WINDOWS             | WINDOWS NT
</PRE>kbprg
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
<P><PRE>    - Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51, and
      1.52
    - Microsoft Visual C++ 32-bit Edition, version 1.0, 2.0, and 2.1
</UL></PRE> 
<P>
This is the 16-bit version of this sample. There is an equivalent 32-bit
sample available under the name LSTDDX32.EXE.
<P>
<P><h2>SUMMARY</h2>
 
<P>
The LSTDDX sample illustrates a technique for filling both an
ordinary listbox control and the listbox portion of a combo control
with data, and using the Microsoft Foundation Class (MFC) Dialog Data
Exchange (DDX) facility to return the selection.
<P>
LSTDDX can be found in the Microsoft Software Library.
<P>
Download LSTDDX.EXE, a self-extracting file, from the Microsoft Software
Library (MSL) on the following services:

<UL><LI>Microsoft Download Service (MSDL)
<P><PRE>      Dial (206) 936-6735 to connect to MSDL
      Download <A HREF="http://support.microsoft.com/download/support/mslfiles/LSTDDX.EXE">LSTDDX.EXE</A> <I>(size: 44838 bytes)</I> 
</PRE>
<LI>Internet (anonymous FTP)
<P><PRE>      ftp ftp.microsoft.com
      Change to the \softlib\mslfiles directory
      Get <A HREF="http://support.microsoft.com/download/support/mslfiles/LSTDDX.EXE">LSTDDX.EXE</A> <I>(size: 44838 bytes)</I> 
</PRE><P>
<P>
</UL>NOTE: Use the -d option when running LSTDDX.EXE to decompress the file
and re-create the proper directory structure.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
A common misconception with regard to DDX is that assigning a value
to a DDX variable will cause that data to be loaded into a control.
This does in fact happen for edit controls, but not for listbox
controls. In order to add items to a listbox the dialog class must
use the CListBox::AddString() or CComboBox::AddString() functions.
Doing this involves several steps which are illustrated by this
sample.
<P>
The sample itself was initially created as an MDI application using
AppWizard from Visual C++ version 1.0. AppStudio was then used to
create a dialog which contains OK and Cancel button plus an edit
control (IDC_EDIT1), a combo control (IDC_COMBO1), and a listbox
control (IDC_LIST1). The Class Wizard was used to create a class
CDialog1 based on CDialog. The files dialog1.h and dialog1.cpp
contain the code for this class. Class Wizard was also used to add
DDX member variables m_edit1, m_combo1, and m_list1 to dialog1.h. A
menu item was added to the view menu (IDR_LIST_DTYPE) using
AppStudio, and a message handler added which will call the dialog
when the menu item was selected.
<P>
The README.TXT file included with the sample explains in more detail
how the listboxes are initialized and how data is passed between the
calling routine and the dialog procedure.
<P>
<P><h2>REFERENCES</h2>
 
<P>
<B><A HREF="../VISUALC/Q141498.htm">Q141498</A></B> "SAMPLE: Filling List Box Using MFC's DDX Facility"
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 1.00 1.50 1.51 1.52 2.00 2.10 2.50 2.51<BR>
2.52 3.00 3.10 lstddx32<BR>
KBCategory: kbprg<BR>
KBSubcategory: MfcUI<BR>
Keywords            : kb16bitonly MfcUI kbprg<BR>
Technology          : kbMfc<BR>
Version             : 1.00 1.50 1.51 1.52 | 1.00 2.00<BR>
Platform            : NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 17, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
