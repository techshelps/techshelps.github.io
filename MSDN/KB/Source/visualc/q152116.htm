

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SAMPLE: DAO_OCX.EXE ActiveX Control Uses DAO to Query Database </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q152116">
<META NAME="KBModify" CONTENT="1997/07/31">
<META NAME="KBCreate" CONTENT="1996/06/04">
<META NAME="Keywords" CONTENT="CodeSam kbsample kbfile kbole kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  This sample demonstrates querying and displaying the result of the query using MFC's CDao classes from an ActiveX control (OLE Control.)  The DaoOcx control utilizes a saved query in the CUSTOMER.MDB database provided with the sample. This database...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGI,QA7O,QAZV,QAOE,QAMN,QAB5,QAPN,QBS0,QAIF,QBBS,QAPF,QDL4,QA2Q,QAY2,QAHV V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>SAMPLE: DAO_OCX.EXE ActiveX Control Uses DAO to Query Database</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 31, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q152116</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
4.10
Windows NT
kbole kbprg kbfile
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Visual C++, 32-bit Edition, version 4.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This sample demonstrates querying and displaying the result of the query
using MFC's CDao classes from an ActiveX control (OLE Control.)
<P>
The DaoOcx control utilizes a saved query in the CUSTOMER.MDB database
provided with the sample. This database consists of phone numbers and their
associated addresses. Additionally, there may be several people at each
address and each individual may be associated with a note.
<P>
When the FindNumber() method is called from the client, it queries the
database for the currently-entered phone number using the saved query
ByPhone, retrieves the data, and then populates the fields with the
address. It also populates a List Box with the names of the people at that
address. Once the user selects one of the names, it places the note
associated with that individual, if there is one, in the note edit control,
and then fires an event.
<P>
The client application should call the ConnectDataBase method initially and
must call the CleanUp method prior to shutdown. In the Visual Basic portion
of this sample, the ConnectDataBase call is made in the Form's Load
procedure and the CleanUp call is made in the Form's Terminate procedure.
<P>
The database name and the name of the saved query are properties of the
control and can be set. If the property sheet is used to set the
properties, then validation is done. No validation is performed if the
properties are not entered using the property sheet provided.
<P>
The following file is available for download from the Microsoft
Software Library:
<P>
<PRE> ~ <A HREF="http://support.microsoft.com/download/support/mslfiles/Dao_ocx.exe">Dao_ocx.exe</A> <I>(size: 131886 bytes)</I> 

</PRE>For more information about downloading files from the Microsoft Software
Library, please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../zMiscellaneous/Q119591.htm">Q119591</A></B>
   TITLE     : How to Obtain Microsoft Support Files from Online Services

</PRE><h2>MORE INFORMATION</h2>
 
<P>
Once you have unzipped the file, you should have the actual database,
CUSTOMER.MDB, that includes the saved query ByPhone. This database was
created using Access 2.0 and may also be accessed using Access 95. Also
included are the files for the control and a Visual Basic 4.0 (32- bit)
project and form that demonstrates how to use the control. You must build
and register the control, and then set the location of the CUSTOMER.MDB
file in the DaoOcx control on the Visual Basic form before running the
Visual Basic client.
<P>
Once the client is running, enter one of the following phone numbers
(555) 555-5555, (526) 874-4632 or (816) 547-1234. Click the Find button to
see some sample data. Once the names are visible, select one and see the
note associated with that individual. You will also see a message box
caused by an event fired from the control indicating that the data is
complete.
<P>
The control uses a CDaoRecordSet derived class that is used to query
the database. This class can be generated by hand, or you can use the
AppWizard to create it as follows:

<OL><P><LI>From the File menu, select New. Select Project Workspace, and then
   select MFC AppWizard.

<P><LI>Select an MDI application and Database support.

<P><LI>Press the Data Source button.

<P><LI>Select the DAO button.

<P><LI>Select the CUSTOMER.MDB file in the project directory as the database.
<P>
</OL>AppWizard will create a CDaoRecordSet derived class that can be used
almost directly. The only changes needed to be made to the CDaoRecordSet
derived class are as follows:

<OL><P><LI>Modify the constructor to take a pointer to the control.

<P><LI>Modify the GetDefaultDBName() function to call the control and
   retrieve the database name.

<P><LI>Modify the GetDefaultSQL() function to call the control and retrieve
   the query name.
<P>
</OL>When Dao is used in a DLL, you must explicitly call AfxDaoTerm() prior to
the call to ExitInstance() or you will receive an assertion. In the sample,
this behavior is accomplished by calling the automation method, CleanUp,
that closes any of the database access items and calls AfxDaoTerm(). MFC
will call AfxDaoInit() to initialize the Jet Engine, but because you are
calling from a DLL, the "CleanUp" method must call AfxDaoTerm() directly.
<P>
The CDao classes are very similar in usage to the ODBC database classes
except that the Dao classes only access the Jet Engine, while the ODBC
classes use the ODBC layer to allow access to a wide range of database
types.
<P>
The CDao classes are wrappers around the Dao COM interfaces. For
example, the CDaoQueryDef is a wrapper for the DAOQueryDef interface and
the class has a member variable, m_pDAOQueryDef, that is a pointer to
the interface.
<P>
Each object in the hierarchy contains an enumeration interface for listing
the next lower interface in the hierarchy. For example, m_pDAOQueryDef
(DAOQueryDef*) can be used to call QueryInterface for the DAOFields
interface used to enumerate the fields in that query. The DAODatabase
interface can be used to get the DAOQueryDefs interface used to list the
available queries in the database.
<P>
Calling Open on a variable of type CDaoRecordSet causes the SQL query to
be generated and the field variables to be filled.
<P>
You must call Close on any CDao object (interface) when you are done
using it.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbole kbprg kbfile<BR>
KBSubcategory: CodeSam kbsample<BR>
Additional reference words: 4.10
<P>

Keywords          : CodeSam kbsample kbfile kbole kbprg<BR>
Version           : 4.10<BR>
Platform          : NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 31, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
