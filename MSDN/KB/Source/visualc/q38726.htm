

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Determining What Video Adapters Are Installed and Active </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q38726 ">
<META NAME="KBModify" CONTENT="1997/07/17">
<META NAME="KBCreate" CONTENT="1988/12/01">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  In Microsoft C versions 5.1, 6.0, 6.0a, 6.0ax, C/C++ version 7.0, and Visual C++ version 1.0 there is no way using the functions supplied in the C run-time library to find out what type of video adapters are installed in your system. However, in th...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBFY,QAA1,QDI2,QAUD,QADL,QDK0,QAY5,QAYS,QAH4,QAEF,QA62,QAC1,QBHQ,QA5W,QAPF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Determining What Video Adapters Are Installed and Active</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 17, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q38726 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
5.10 6.00 6.00a 6.00ax 7.00 | 5.10 6.00 6.00a | 1.00
<PRE>MS-DOS                      | OS/2            | WINDOWS
</PRE>kbprg
<P>
 
The information in this article applies to:

<UL><LI>The C Run-time (CRT), included with:
<P>
<P><PRE>    - Microsoft C for MS-DOS, versions 5.1, 6.0, 6.0a, and 6.0ax
    - Microsoft C for OS/2, versions 5.1, 6.0, and 6.0a
    - Microsoft C/C++ for MS-DOS, version 7.0
    - Microsoft Visual C++ for Windows, version 1.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft C versions 5.1, 6.0, 6.0a, 6.0ax, C/C++ version 7.0, and
Visual C++ version 1.0 there is no way using the functions supplied in
the C run-time library to find out what type of video adapters are
installed in your system. However, in the appendix of the
"Programmer's Guide to PC &amp; PS/2 Video Systems," published by
Microsoft Press, is a MASM example demonstrating how to determine what
adapters are installed. (This example could be translated into C.)
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Even if you write code to find out what adapters are installed, there
is no simple way to tell the graphics library to use an adapter other
than the one it wants to use. The library will pick an adapter
according to the following rules:

<OL><P><LI>If there is a VGA in the system, it uses it regardless of what
   other adapters are installed and regardless of what adapter is
   currently the default adapter. The only way to change this is to
   hook the BIOS INT 10h interrupt as described below.

<P><LI>If there is no VGA, it uses the current adapter. This can be set
   with the MODE command in MS-DOS before you start your program.
<P>
</OL>If you hook INT 10h, you can change the behavior with the VGA to pick
the current adapter. The _setvideomode() function makes a call to INT
10h function 1Bh to determine whether a VGA is installed or not. You
can write code to change the return value if the VGA is not the
current adapter, leaving it alone if the VGA is the current adapter.
<P>
The _getvideoconfig() function only gives information on the current
video mode, as set by _setvideomode(). It is not helpful for finding
out what adapters are installed in your system.
<P>
You can find out what adapter the library will use by making calls to
_setvideomode(). If the mode cannot be selected, _setvideomode() will
return zero. For example, if you try to select a VGA mode and
_setvideomode returns zero, you know that no VGA is present in the
system. You then could attempt to select an EGA, and so on.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 1.00 5.10 6.00 6.00a 6.00ax 7.00 display<BR>
monitor color monochrome mono black white b/w<BR>
KBCategory: kbprg<BR>
KBSubcategory: CRTIss GraphicsIss<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 17, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
