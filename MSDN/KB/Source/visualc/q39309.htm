

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Example of C Calling a MASM Procedure </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q39309 ">
<META NAME="KBModify" CONTENT="1997/07/17">
<META NAME="KBCreate" CONTENT="1988/12/14">
<META NAME="Keywords" CONTENT="CLngIss kb16bitonly MASMLngIss kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The sample code below demonstrates a C program calling a MASM procedure. The C code declares an integer and passes the integer to the MASM procedure called mixed(). The mixed() function has an integer return value.  MORE INFORMATION  Sample Code 1 ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBFY,QAH4,QA7R,QAKD,QAEF,QA4Q,QAGI,QAYA,QAB9,QAUD,QAPF,QAH7,QAH6,QAD7,QBV8 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Example of C Calling a MASM Procedure</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 17, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q39309 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
5.10 6.00 6.00a 6.00ax 7.00 | 5.10 6.00 6.00a | 1.00 1.50
<PRE>MS-DOS                      | OS/2            | WINDOWS
</PRE>kbprg
<P>
<P>
 
The information in this article applies to:

<UL><LI>Microsoft C for MS-DOS, versions 5.1, 6.0, 6.0a, and 6.0ax
<LI>Microsoft C for OS/2, versions 5.1, 6.0, and 6.0a
<LI>Microsoft C/C++ for MS-DOS, version 7.0
<LI>Microsoft Visual C++ for Windows, versions 1.0 and 1.5
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The sample code below demonstrates a C program calling a MASM
procedure. The C code declares an integer and passes the integer to
the MASM procedure called mixed(). The mixed() function has an integer
return value.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Sample Code 1</h3>
 
<P>
<PRE>/* Code for the calling C function.
 *
 * Compile options needed: /c /AL
 */

#include &lt;stdio.h&gt;

int retval, value, myvar;
</PRE>extern int mixed( int );
<P>
main()
{
<PRE>    value = 35;
    myvar = 25;
    retval = 0;

    retval = mixed( myvar );
    printf( "%d\n%d\n", retval, value );
</PRE>}
<P>
<P>
<P><h3>Sample Code 2</h3>
 
<P>
; Code for the called assembly procedure
;
; Assemble options needed: /c /Cx (MASM 6.0 and later)
<PRE>;                          /Mx  (MASM 5.10 and eariler)

</PRE>DOSSEG
<P>
.MODEL LARGE, C
<P>
.STACK  100h
<P>
.DATA
<PRE>    Dw 0

</PRE>.FARDATA
<PRE>    EXTRN value:WORD

</PRE>.CODE
<PRE>    PUBLIC mixed
    mixed PROC

      push  bp
      mov   bp,sp

      ; access and change value

      mov   ax, SEG _DATA
      push  ds
      mov   ds, ax
      mov   ax, SEG value
      mov   es, ax
      mov   es:value, 10h

      ; return the passed variable

      mov   ax, [bp+6]
      pop   ds
      pop   bp
      ret

    mixed ENDP
</PRE>END
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 1.00 1.50 5.10 6.00 6.00a 6.00ax 7.00<BR>
KBCategory: kbprg<BR>
KBSubcategory: CLngIss MASMLngIss<BR>
Keywords            : CLngIss kb16bitonly MASMLngIss kbprg<BR>
Version             : 5.10 6.00 6.00a 6.00ax 7.00 | 5.<BR>
Platform            : MS-DOS OS/2 WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 17, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
