

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Cannot Receive WM_HELP for a Subclassed Control </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q145865">
<META NAME="KBModify" CONTENT="1997/09/19">
<META NAME="KBCreate" CONTENT="1996/02/08">
<META NAME="Keywords" CONTENT="MfcUI vcbuglist400 vcfixlist410 kbbuglist kbfixlist kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  WM_HELP is not received by the parent window of a control that has been subclassed by MFC.  CAUSE =====  CWnd, the base class of all MFC windows, has a handler for WM_HELP.  This handler intercepts the WM_HELP message in the control itself and thus...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB5,QA7O,QAOE,QAMN,QAGI,QAH4,QAR4,QAEV,QABI,QAUD,QABH,QDL9,QBWQ,QBWO,QBWN V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Cannot Receive WM_HELP for a Subclassed Control</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 19, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q145865</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
4.00
WINDOWS NT
kbprg kbbuglist kbfixlist
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
   Microsoft Visual C++, 32-bit Edition, version 4.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
WM_HELP is not received by the parent window of a control that has been
subclassed by MFC.
<P>
<P><h2>CAUSE</h2>
 
<P>
CWnd, the base class of all MFC windows, has a handler for WM_HELP.  This
handler intercepts the WM_HELP message in the control itself and thus the
message will not be sent to the parent window as expected.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Subclass all the controls in the CDialog, CFormView, CPropertyPage, or
other CWnd derived class that contains the controls which have been
subclassed by MFC.  The "Sample Code" below iterates through the child
windows of a given parent window and checks their WindowProc.  If their
WindowProc is AfxWndProc (MFC's WindowProc), it subclasses the controls
again so that another window procedure is called first.  In this
WindowProc, we check for WM_HELP and call DefWindowProc instead of passing
the message to MFC's AfxWndProc.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products
listed at the beginning of this article. This bug was corrected in
Visual C++ 4.1.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
CWnd::OnHelpInfo (handler for WM_HELP) sends a WM_COMMAND with ID_HELP
to the application's main frame window.  This message can be intercepted
in the main frame, but at this point, the HELPINFO structure has been
lost.  The main frame will not have any way of determining which help
context should be used.
<P>
<P><h2>REFERENCES</h2>
 

<UL><LI>Win32 SDK documentation for WM_HELP
<LI>MFC source code for CWnd::OnHelpInfo().
<P>
</UL>The following code demonstrates how to work around this problem.  In your
class' OnInitDialog() or OnInitialUpdate(), call the FixHelp() function
with the this pointer:
<P>
<PRE>    FixHelp(this);

</PRE><h3>Sample Code</h3>
 
<P>
<PRE>/* Compile options needed:  Default
*/

////////////////////////////////////////////////////////////////////////
// FixHelp.h - Include this file in your dialog's or form view's .CPP

void FixHelp(CWnd* pWnd); // Call this from your OnInitDialog() for a
                          // dialog or OnInitialUpdate() for a CFormView

////////////////////////////////////////////////////////////////////////
// FixHelp.cpp - Insert this file into your project

#include "stdafx.h"

</PRE>LRESULT CALLBACK ControlFixProc( HWND  hwnd, UINT  uMsg, WPARAM wParam,
<PRE>                                                        LPARAM  lParam);

void FixHelp(CWnd* pWnd)
</PRE>{
<PRE>    // search all child windows.  If their window proc
    // is AfxWndProc, then subclass with our window proc
    CWnd* pWndChild = pWnd-&gt;GetWindow(GW_CHILD);
    while(pWndChild != NULL)
    {
        if (GetWindowLong(pWndChild-&gt;GetSafeHwnd(),
                                    GWL_WNDPROC) == (LONG)AfxWndProc)
        {
            SetWindowLong(pWndChild-&gt;GetSafeHwnd(), GWL_WNDPROC,
                                                (LONG)ControlFixProc);
        }
        pWndChild = pWndChild-&gt;GetWindow(GW_HWNDNEXT);
    }
</PRE>}
<P>
LRESULT CALLBACK ControlFixProc(HWND  hwnd, UINT  uMsg, WPARAM wParam,
<PRE>                                                        LPARAM  lParam)
{
    if (uMsg == WM_HELP)
    {
        // bypass MFC's handler, message will be sent to parent
        return DefWindowProc(hwnd, uMsg, wParam, lParam);
    }
    return AfxWndProc(hwnd,uMsg,wParam,lParam);
</PRE>}
<P>
<PRE>////////////////////////////////////////////////////////////////////////
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 4.10 SubclassWindow SubclassDlgItem<BR>
KBCategory:  kbprg kbbuglist kbfixlist<BR>
KBSubcategory: MfcUI vcbuglist400 vcfixlist410<BR>
Keywords          : MfcUI vcbuglist400 vcfixlist410 kbbuglist kbfixlist kbprg<BR>
Technology        : kbMfc<BR>
Version           : 4.00<BR>
Platform          : NT WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 19, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
