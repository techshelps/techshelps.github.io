

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Sending WM_xSCROLL Message Causes Invalid ASSERT </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q147684">
<META NAME="KBModify" CONTENT="1997/09/19">
<META NAME="KBCreate" CONTENT="1996/02/28">
<META NAME="Keywords" CONTENT="MfcUI kbbuglist kbfixlist kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Forcing a window to scroll to an absolute location by sending it a WM_HSCROLL or WM_VSCROLL message with the SB_THUMBPOSITION or SB_THUMBTRACK scrolling codes might cause an assertion. The assertion is in Wincore.cpp file on line 1938.  CAUSE =====...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QAEV,QAYC,QAJQ,QBBI,QAGI,QACI,QAR4,QAKD,QAH7,QAKP,QBXQ,QAJP,QAH6,QA01 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Sending WM_xSCROLL Message Causes Invalid ASSERT</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 19, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q147684</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
4.00
WINDOWS NT
kbprg kbbuglist kbfixlist
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
   Microsoft Visual C++, 32-bit Edition, version 4.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Forcing a window to scroll to an absolute location by sending it a
WM_HSCROLL or WM_VSCROLL message with the SB_THUMBPOSITION or SB_THUMBTRACK
scrolling codes might cause an assertion. The assertion is in Wincore.cpp
file on line 1938.
<P>
<P><h2>CAUSE</h2>
 
<P>
The assertion tries to ensure that for the current message, the nTrackPos
member of the SCROLLINFO structure retrieved from a call to ::GetScrollInfo
is the same as the thumb position specified in the message. The value of
this variable is retrieved by calling ::GetScrollInfo, and it reflects the
current scroll thumb position only when the user is dragging the thumb. In
the case of a programmatically sent scroll message with the
SB_THUMBPOSITION code, this value is not valid. Because this value is
indeterminate, it will not likely match the thumb position specified in the
message, and the assertion will fail.
<P>
Also, even if the assertion is ignored, the WM_xSCROLL message handler will
be called with an invalid scroll position when the WM_xSCROLL message is
sent programmatically.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
If the assertion is ignored, you cannot rely on the position value passed
to the WM_xSCROLL handler and must make a call to GetCurrentMessage() to
get the values specified in the message instead. If this is done properly,
then the assertion can be safely ignored.
<P>
For more information on this, please refer to the sample code included in
this article.
<P>
If the assertion occurs too often to manually select 'Ignore' in the
assertion failure message box, you can programmatically turn off assertion
failures with the following code:
<P>
#ifdef _DEBUG
<PRE>    int nPrevMode = _CrtSetReportMode(_CRT_ASSERT,0);
</PRE>#endif
<PRE>   // Code that causes the assertion, for example:
   // SendMessage(WM_VSCROLL,...)
</PRE>#ifdef _DEBUG
<PRE>    _CrtSetReportMode(_CRT_ASSERT,nPrevMode);
</PRE>#endif
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. This problem was corrected in Visual C++,
32-bit Edition, version 4.1.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
This assertion is part of some new code added in MFC 4.0 to accomplish 32
bit scrolling and exists in the function CWnd::OnWndMsg.
<P>
<P><h3>Sample Code to Reproduce and Resolve the problem</h3>
 
<P>
The following code demonstrates the problem:
<P>
<PRE>// Assume that nScrollPos is not 0

</PRE>WPARAM wParam = MAKELONG ( SB_THUMBPOSITION, nScrollPos);
pView-&gt;SendMessage( WM_VSCROLL, wParam );
<P>
<PRE>// As mentioned above, ignore the assert.
// Change the OnVScroll handler to the following :

void CMyView::OnVScroll(UINT nSBCode, UINT nPos,
                        CScrollBar* pScrollBar)
{
    if(nSBCode = SB_THUMBPOSITION )
    {
        const MSG* pMsg = GetCurrentMessage();
        nPos = (short)HIWORD(pMsg-&gt;wParam);
    }

// Do your processing here

    CEditView::OnVScroll(nSBCode, nPos, pScrollBar);
</PRE>}
<P>
NOTE: CMyView is derived from CEditView. However the same technique works
for any CWnd derived class. Remember, the same problem also occurs for
scroll messages programmatically sent with the SB_THUMBTRACK code.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 Windows 95 vcrel 1948 vcbuglist400<BR>
vcfixlist410<BR>
KBCategory: kbprg kbbuglist kbfixlist<BR>
KBSubcategory: MfcUI<BR>
Keywords          : MfcUI kbbuglist kbfixlist kbprg<BR>
Technology        : kbMfc<BR>
Version           : 4.00<BR>
Platform          : NT WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 19, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
