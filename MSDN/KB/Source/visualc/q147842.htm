

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Detect a Mouse Click on Any Column of List View Control </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q147842">
<META NAME="KBModify" CONTENT="1997/06/26">
<META NAME="KBCreate" CONTENT="1996/03/01">
<META NAME="Keywords" CONTENT="kbcode kbprg MfcUI">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  By design, a left-mouse click on a column other than the first column of a List View control when the control is in report view will not select the first column of that row. This article presents a way to detect the mouse click, and highlight the f...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QATJ,QA28,QA7O,QAB5,QAOE,QAMN,QAE1,QBWS,QAH4,QADK,QA5V,QAG2,QBVR,QDMN,QAQ7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Detect a Mouse Click on Any Column of List View Control</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 26, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q147842</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
   - Microsoft Visual C++, 32-bit Edition, versions 4.0, 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
By design, a left-mouse click on a column other than the first column of
a List View control when the control is in report view will not select the
first column of that row. This article presents a way to detect the mouse
click, and highlight the first column of the row where the mouse was
clicked.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Step-by-Step Procedure</h3>
 
<P>
The List View control will send a NM_CLICK notification code to its parent
window whenever the user has clicked the left mouse button within its
client area. Below are the necessary steps to intercept this notification
code in the control itself (instead of the parent window) and to highlight
the first column of the row that is being clicked:

<OL><P><LI>Use ClassWizard to create a class that is derived from CListCtrl, and
   name it CMyListCtrl.

<P><LI>When CMyListCtrl is the selected class name in both the Class Name combo
   box and the Object IDs: list box, select =NM_CLICK message from the
   Messages: list box. The following code will be generated to the
   CMyListCtrl class:
<P>
<PRE>   // In the .h file of CMyListCtrl:
   class CMyListCtrl : public CListCtrl
   {
       ...
       protected:
       //{{AFX_MSG(CMyListCtrl)
       ...
       afx_msg void OnClick(NMHDR* pNMHDR, LRESULT* pResult);
       //}}AFX_MSG

       DECLARE_MESSAGE_MAP()
   };

   // In the .cpp file of CMyListCtrl:

   BEGIN_MESSAGE_MAP(CMyListCtrl, CListCtrl)
       //{{AFX_MSG_MAP(CMyListCtrl)
       ...
       ON_NOTIFY_REFLECT(NM_CLICK, OnClick)
       //}}AFX_MSG_MAP
   END_MESSAGE_MAP()

   void CMyListCtrl::OnClick(NMHDR* pNMHDR, LRESULT* pResult)
   {
       // TODO: Add your control notification handler code here

       *pResult = 0;
   }

</PRE><P><LI>Modify the CMyListCtrl::OnClick() function to perform the tasks in the
   sample code below.
<P>
</OL><h3>Sample Code</h3>
 
<P>
<PRE>   void CMyListCtrl::OnClick(NMHDR* pNMHDR, LRESULT* pResult)
   {
       // Get the current mouse location and convert it to client
       // coordinates.
       DWORD pos = GetMessagePos();
       CPoint pt(LOWORD(pos), HIWORD(pos));
       ScreenToClient(&amp;pt);

       // Get indexes of the first and last visible items in listview
       // control.
       int index = GetTopIndex();
       int last_visible_index = index + GetCountPerPage();
       if (last_visible_index &gt; GetItemCount())
           last_visible_index = GetItemCount();

       // Loop until number visible items has been reached.
       while (index &lt;= last_visible_index)
       {
           // Get the bounding rectangle of an item. If the mouse
           // location is within the bounding rectangle of the item,
           // you know you have found the item that was being clicked.
           CRect r;
           GetItemRect(index, &amp;r, LVIR_BOUNDS);
           if (r.PtInRect(pt))
           {
               UINT flag = LVIS_SELECTED | LVIS_FOCUSED;
               SetItemState(index, flag, flag);
               break;
           }

           // Get the next item in listview control.
           index++;
       }

       *pResult = 0;
   }

</PRE></OL><h2>REFERENCES</h2>
 
<P>
By design, a List View control in a report view will only highlight the
first column of a row. To select an entire row, please see the following
article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../WIN32SDK/Q131788.htm">Q131788</A></B>
   TITLE     : SAMPLE: Highlighting an Entire Row in a ListView Control
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: CListView<BR>
Keywords            : kbcode kbprg MfcUI<BR>
Technology          : kbMfc<BR>
Version             : 4.0 5.0<BR>
Platform            : NT WINDOWS<BR>
Issue type          : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 26, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
