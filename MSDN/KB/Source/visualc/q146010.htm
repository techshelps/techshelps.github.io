

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Setting the Picture Property of an ActiveX Control </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q146010">
<META NAME="KBModify" CONTENT="1997/07/07">
<META NAME="KBCreate" CONTENT="1996/02/12">
<META NAME="Keywords" CONTENT="CDKIss kbcode MfcOLE">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  To set the Picture property of an ActiveX control, you can use the Component Gallery to insert an ActiveX control into an AppWizard-generated application with control container support. If the control has a picture property, the wrapper classes gen...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB5,QAOE,QA7O,QAMN,QAHV,QAPN,QAYS,QAW6,QBFY,QA56,QA55,QBXS,QAGI,QA9Q,QAH6 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Setting the Picture Property of an ActiveX Control</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 7, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q146010</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual C++ 32-bit Edition, versions 4.0, 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
To set the Picture property of an ActiveX control, you can use the
Component Gallery to insert an ActiveX control into an AppWizard-generated
application with control container support. If the control has a picture
property, the wrapper classes generated by the Component Gallery will
contain the SetPicture() and GetPicture() methods. The More Information
section below contains details that explain how to use the picture property
of an ActiveX control.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Using the Microsoft Grid Control as an example, you can implement the
SetPicture() and GetPicture() methods in the control classes provided by
the Component Gallery by using this code:
<P>
<PRE>   void CGridCtrl::SetPicture(LPDISPATCH propVal)
   {
        SetProperty(0x15, VT_DISPATCH, propVal);
   }

   CPicture CGridCtrl::GetPicture()
   {
        LPDISPATCH pDispatch;
        GetProperty(0x15, VT_DISPATCH, (void*)&amp;pDispatch);
        return CPicture(pDispatch);
   }

</PRE>It is not intuitively clear how to use these methods to get or set the
picture property. The following steps show how to set the picture property
of an ActiveX control successfully in an AppWizard-generated application.
The particular control used in this example is the Microsoft Grid Control,
and its picture property is being set to the toolbar bitmap provided by
AppWizard.

<OL><P><LI>Generate a new non-dialog based AppWizard application. Be sure to select
   both Container and Control support in AppWizard Step 3.

<P><LI>Add the Grid Control from the OLE Controls tab (or Registered ActiveX
   Controls in VC++ 5.0) in the Component Gallery.

<P><LI>Add Afxctl.h to the list of pre-compiled header files in Stdafx.h.

<P><LI>Add a Grid Control object to the About Dialog box in the dialog editor.

<P><LI>Using Class Wizard, add a control member variable called m_grid to the
   Grid Control in the About Dialog box.

<P><LI>Override the container's initialization routine to create and initialize
   a CPictureHolder object. Call the SetPicture() method for the control,
   passing in the CPictureHolder's dispatch pointer. SetPicture calls
   SetProperty() for the control. Here's an example:
<P>
<P><PRE>      BOOL CAboutDlg::OnInitDialog()
      {
<PRE></PRE>          CDialog::OnInitDialog();

          // Create and Initialize the CPictureHolder variable with the
          // toolbar resource
          CPictureHolder pictholder;
          pictholder.CreateFromBitmap(IDR_MAINFRAME);

          //Pass dispatch pointer to CPictureHolder
          m_grid.SetPicture(pictholder.GetPictureDispatch());

          // NOTE: GetPictureDispatch() QI()'s for the IPictureDisp
          // interface, so the picture object will remain alive until
          // the property is reset or the control is destroyed. When
          // pictholder goes out of scope, it calls Release() on the
          // picture object, but the previously mentioned QI() will have
          // bumped the ref count, allowing it to remain alive until the
          // control itself releases the picture object.

        return TRUE;
      }

</PRE></OL><h2>REFERENCES</h2>
 
<P>
For Visual C++ 4.xx:
OLE Control Containers: Programming OLE Controls in an OLE Control
Container - Visual C++ Books Online, MFC Encyclopedia.
<P>
OLE Controls: Using Pictures in an OLE Control - Visual C++ Books
Online, MFC Encyclopedia.
<P>
For Visual C++ 5.0:
ActiveX Control Containers: Programming ActiveX Controls in an ActiveX
Control Container - Visual C++ Books Online, Visual C++ Programmer's Guide.
<P>
ActiveX Controls: Using Pictures in an ActiveX Control - Visual C++ Books
Online, Visual C++ Programmer's Guide.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: ocx<BR>
Keywords            : CDKIss kbcode MfcOLE<BR>
Technology          : kbMfc kbole<BR>
Version             : 4.0 5.0<BR>
Platform            : NT WINDOWS<BR>
Issue type          : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 7, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
