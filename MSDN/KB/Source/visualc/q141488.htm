

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SAMPLE: Using Enumerated Properties in an OLE Control </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q141488">
<META NAME="KBModify" CONTENT="1997/07/02">
<META NAME="KBCreate" CONTENT="1995/12/19">
<META NAME="Keywords" CONTENT="kbprg kbsample MfcOLE kbfile">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT=" This is the 32-bit version of this sample.   The ENPROP32 sample illustrates using enumerated properties in an OLE control.  The following file is available for download from the Microsoft Software Library:   ~ Enprop32.exe  For more information abo...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QAB5,QAOE,QA7O,QAMN,QA9Q,QAPF,QBWC,QAG8,QAH6,QAHV,QAP2,QAY2,QAKD,QAB6 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>SAMPLE: Using Enumerated Properties in an OLE Control</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 2, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q141488</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this sample applies to:

<UL><LI>The Microsoft Foundation Classes (MFC), included with:
   - Microsoft Visual C++, 32-bit Edition, versions 4.0, 4.1
</UL> 
<P>
This is the 32-bit version of this sample.
<P>
<P><h2>SUMMARY</h2>
 
<P>
The ENPROP32 sample illustrates using enumerated properties in an OLE
control.
<P>
The following file is available for download from the Microsoft Software
Library:
<P>
<PRE> ~ Enprop32.exe

</PRE>For more information about downloading files from the Microsoft Software
Library, please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../zMiscellaneous/Q119591.htm">Q119591</A></B>
   TITLE     : How to Obtain Microsoft Support Files from Online Services

</PRE><h2>MORE INFORMATION</h2>
 
<P>
The ENPROP32 sample illustrates using enumerated properties in an OLE
control. An enumerated property is one which has a specific set
of possible values. For example, an OLE control might support a
property named FillPattern which it uses to determine the type of brush
to use when drawing the control. The control would want to limit the
values the FillPattern property could be set to. Accepted values for a
FillPattern property might be cross-hatched, vertical lines, horizontal
lines, etc.
<P>
An OLE control can limit the values a user has to choose from for a
property by using a Drop List combo box on its property page. However,
another mechanism is needed to enable a property browser provided by
another application to be able to provide the same type of interface
when editing the property.
<P>
There are two ways to implement an enumerated property so that a
property browser can gather enough information about the property to
provide the right editing interface. One method involves declaring an
enum type in the OLE control's .odl file and manually editing the
property's declaration to make it be of that type. For example:
<P>
<PRE>  ...

  typedef enum
  {
    [helpstring("Solid")]        Solid      = 0,
    [helpstring("Dash")]         Dash       = 1,
    [helpstring("Dot")]          Dot        = 2,
    [helpstring("Dash-Dot")]     DashDot    = 3,
    [helpstring("Dash-Dot-Dot")] DashDotDot = 4,
  } enumLineStyle;

  ...

  properties:
  // NOTE - ClassWizard will maintain property information here.
  //    Use extreme caution when editing this section.
  //{{AFX_ODL_PROP(CEnumCtrl)
    [id(1)] enumLineStyle LineStyle;
  //}}AFX_ODL_PROP

</PRE>Another method involves overriding the COleControl methods
OnGetPredefinedStrings, OnGetPredefinedValue, and OnGetDisplayString.
The ENUMPROP sample illustrates using both methods. The OLE control
implemented in the sample supports two custom properties, LineStyle
and FillPattern. The LineStyle property is declared as an enum in the
control's .odl file. Support for using the FillPattern property as an
enumerated property is handled via overrides of the
OnGetPredefinedStrings, OnGetPredefinedValue, and OnGetDisplayString
methods.
<P>
ENPROP32 is based on a ControlWizard generated OLE control. Files
included with the sample, which are directly related to using
enumerated properties, are:
<P>
<PRE>   ENUM.ODL -
   Shows declaring the enum type for the LineStyle property.

   ENUMCTL.CPP -
   Illustrates overriding the COleControl members
   OnGetPredefinedStrings, OnGetPredefinedValue, and
   OnGetDisplayString.

</PRE><h2>RFERENCES</h2>
 
<P>
The Per-Property Browsing section in Appendix D, OLE Controls
Architecture, in the CDK Books Online.
<P>
NOTE: The OLE Control Test Container provided with Visual C++ does not
implement a Drop List combobox on its property browser page when editing
an enumerated property. To see the full benefits of using an enumerated
property, use an OLE control container application which provides a
property browser with this capability, such as Visual Basic 4.0.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: Enumprop<BR>
Keywords            : kbprg kbsample MfcOLE kbfile<BR>
Technology          : kbMfc kbole<BR>
Version             : 4.00 4.10<BR>
Platform            : NT Windows<BR>
Resolution Type     : kbcode<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 2, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
