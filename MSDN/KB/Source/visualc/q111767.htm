

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: Incorrect Code Generated for Long Constant </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q111767">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1994/02/17">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Incorrect code is generated when using a long constant in a conditional expression in a for or a while statement.  If attempting to compile using Microsoft Visual C++ versions 1.0 or 1.5, the following warning may be generated under warning level 2...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB4,QAKJ,QBFY,QAH4,QANY,QAOT,QAAP,QAKP,QA56,QA55,QAKD,QDL9,QBWQ,QBWO,QBWN V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: Incorrect Code Generated for Long Constant</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q111767</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
7.00   | 1.00 1.50
MS-DOS | WINDOWS
kbtool kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft C/C++ Compiler (CL.EXE), included with:
<P>
<P><PRE>    - Microsoft C/C++ for MS-DOS, version 7.0
    - Microsoft Visual C++ for Windows, versions 1.0 and 1.5
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Incorrect code is generated when using a long constant in a conditional
expression in a for or a while statement.
<P>
If attempting to compile using Microsoft Visual C++ versions 1.0 or 1.5,
the following warning may be generated under warning level 2 or higher
<P>
<PRE>   warning C4309: '*' : truncation of constant value

</PRE>where '*' is the relational operator used in the condition.
<P>
There is no warning or error message with version 7.0 of the C/C++
compiler; however, the problem still occurs.
<P>
<P><h2>CAUSE</h2>
 
<P>
The compiler generates incorrect code only if the following conditions are
met:

<UL><LI>The fast compiler is used. Under debug mode, this is the default.
<LI>The code is compiled as a C++ module.
<LI>A long constant is used in a relational expression in a for or a
   while statement.
<LI>The long constant has a value greater than the range of integer values
   (greater than +32767 or less than -32768).
<P>
</UL><h2>RESOLUTION</h2>
 
<P>
To avoid the problem, you can do any of the following:

<UL><LI>Compile without using the fast compiler (/f-).

<LI>Because the error occurs only with a signed long constant, either use a
   variable or an unsigned long constant.
<P>
</UL><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in C/C++ version 7.0 and
Visual C++ for Windows, versions 1.0 and 1.5. We are researching this
problem and will post new information here in the Microsoft Knowledge Base
as it becomes available.
<P>
This is not a problem in the 32-bit compilers.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following sample code will produce a warning at the line indicated when
compiled with Visual C++ version 1.0 or 1.5 under warning level 2 or above.
No warning will be generated with version 7.0. In either case, the body of
the for loop will not be executed.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>/* Compile options needed: /f and &lt;/W3 or /W4&gt;
</PRE>*
*  Compile this sample code as a .CPP file
<PRE>*/

#include &lt;stdio.h&gt;

</PRE>const long bignum = 131072L;
<P>
<PRE>void main()
</PRE>{
<PRE>     for (long l = 0L; l &lt; bignum; l++)
     {
          printf("%ld\n",l);     // This line never executes.
     }     // warning C4309: '&lt;' : truncation of constant value
}
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 1.50 7.00 8.00 8.00c<BR>
KBCategory: kbtool kbbuglist<BR>
KBSubcategory: CodeGen<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
