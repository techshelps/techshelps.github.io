

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: MFC Message Handler Not Called with PostThreadMessage() </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q142415">
<META NAME="KBModify" CONTENT="1997/07/31">
<META NAME="KBCreate" CONTENT="1996/01/11">
<META NAME="Keywords" CONTENT="MfcMisc kbprb kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  When code uses the PostThreadMessage() Win32 function, the MFC message handlers are not called.  CAUSE =====  When you call PostThreadMessage(), the message is placed in the thread's message queue. However, because messages posted this way are not ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAEV,QAGI,QAYC,QAH4,QBVV,QAUD,QAIF,QBWP,QBV8,QBFY,QA56,QA55,QAY5,QAX6,QAUQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: MFC Message Handler Not Called with PostThreadMessage()</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 31, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q142415</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00 2.00 2.10 2.20 4.00 4.10
WINDOWS NT
kbprg kbprb
<P>
 
The information in this article applies to:
<P>
<PRE>  - Microsoft Visual C++ 32-bit, versions 1.0, 2.0, 2.1, 2.2, 4.0, 4.1
</PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When code uses the PostThreadMessage() Win32 function, the MFC message
handlers are not called.
<P>
<P><h2>CAUSE</h2>
 
<P>
When you call PostThreadMessage(), the message is placed in the thread's
message queue. However, because messages posted this way are not associated
with a window, MFC will not dispatch them to message or command handlers.
In order to handle these messages, override the PreTranslateMessage()
function of your CWinApp-derived class, and handle the messages manually.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
The following code demonstrates how to call PostThreadMessage() in the
InitInstance() of the CWinApp-derived class using a single-threaded
application. The principle is the same for secondary threads except that
the code shown here would be put in your alternate CWinThread-derived
class.
<P>
Visual C++ 4.2 does support handling messages posted to threads. For more
information, see ON_THREAD_MESSAGE in the Visual C++ 4.2 documentation.
<P>
NOTE: MFC  worker threads do not have a message loop/pump associated with
them so you must use a user-interface thread.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>/* Compile options needed:

   standard MFC project generated by AppWizard */

</PRE>BOOL CThreadMsgApp::PreTranslateMessage(MSG* pMsg)
{
<PRE>    // Is it the Message you want?
    // You can use a switch statement but because this is
    // only looking for one message, you can use the if/else
    if (pMsg-&gt;message == WM_USER+2268)
    {
        // Call the function to handle this message
   OnReceivedCommand(pMsg-&gt;wParam,pMsg-&gt;lParam);
        // Tell MFC no more processing is needed
        return TRUE;
    }
    else
        // Call MFC to have it continue processing the message
        return CWinThread::PreTranslateMessage(pMsg);
}

</PRE>BOOL CThreadMsgApp::InitInstance()
{
<PRE>    WPARAM wParam;
    LPARAM lParam;
    wParam = MAKEWPARAM(0,0); // We can put whatever we
    lParam = MAKELPARAM(0,0); // want in wParam &amp; lParam

    // Send the user-defined Thread Message
    // m_nThreadID is a member of CWinThread that holds the thread ID
    PostThreadMessage(m_nThreadID, WM_USER+2268, wParam, lParam);

    return TRUE;
</PRE>}
<P>
<PRE>void CThreadMsgApp::OnReceivedCommand(WPARAM wParam, LPARAM lParam)
</PRE>{
<PRE>    // You can do whatever you want in here, this is simply
    // sending output to the debug window
    TRACE0("Received WM_USER+2268!!\n");
</PRE>}
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information on the CWinThread object, please see the following:
MFC Encyclopedia, Multithreading: Creating User-Interface Threads.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 2.00 2.10 2.20 4.00 4.10<BR>
KBCategory: kbprg kbprb<BR>
KBSubcategory: MfcMisc<BR>
Keywords          : MfcMisc kbprb kbprg<BR>
Technology        : kbMfc<BR>
Version           : 1.00 2.00 2.10 2.20 4.00 4.10<BR>
Platform          : NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 31, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
