

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: BSTR Copied into CString Only up to First NULL </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q117381">
<META NAME="KBModify" CONTENT="1997/09/18">
<META NAME="KBCreate" CONTENT="1994/06/27">
<META NAME="Keywords" CONTENT="kb16bitonly MfcOLE kbbuglist kbfixlist kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  When your code calls an MFC object linking and embedding (OLE) Automation method that returns a BASIC string (BSTR), a CString is created that contains only the bytes up to the first NULL in the BSTR.  CAUSE =====  You can create MFC OLE Automation...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAUD,QAGI,QAH4,QA9Q,QAL3,QBMR,QALW,QALQ,QA9N,QAR4,QAIF,QBB3,QAY5,QAY2,QASB V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: BSTR Copied into CString Only up to First NULL</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q117381</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.50
WINDOWS
kbprg kbfixlist kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes, included with:
<P><PRE>    - Microsoft Visual C++ for Windows, version 1.5
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When your code calls an MFC object linking and embedding (OLE) Automation
method that returns a BASIC string (BSTR), a CString is created that
contains only the bytes up to the first NULL in the BSTR.
<P>
<P><h2>CAUSE</h2>
 
<P>
You can create MFC OLE Automation clients by deriving your class from the
class COleDispatchDriver and adding member functions that wrap calls to
COleDispatchDriver::InvokeHelper. InvokeHelper then calls InvokeHelperV,
which in turn calls IDispatch::Invoke.
<P>
COleDispatchDriver::InvokeHelperV, in OLEDISP2.CPP, is responsible for
managing input parameters and return values for the call to
IDispatch::Invoke. When the string returned from Invoke is a BSTR, it is
converted to an MFC CString object by the following code:
<P>
<PRE>   case VT_BSTR:
      if (vaResult.bstrVal == NULL)
         AfxThrowMemoryException();
      *(CString*)pvRet = vaResult.bstrVal;
      SysFreeString(vaResult.bstrVal);
      break;

</PRE>Here is the operator= being called:
<P>
<PRE>   const CString&amp; CString::operator=(const char* psz)
   {
      AssignCopy(SafeStrlen(psz), psz);
      return *this;
   }

</PRE>SafeStrlen only returns the length up to the first NULL, so that bytes are
copied only up to the first NULL.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Prototyping the function to return a variant (VT_VARIANT) rather than a
BSTR (VT_BSTR) solves this problem. The entire variant returned from Invoke
is passed back to the wrapper function in the class derived from
COleDispatchDriver. This function can then remove and copy the BSTR
manually.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products
listed at the beginning of this article. This bug was corrected in
Microsoft Visual C++ version 1.51 for Windows.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following sample code demonstrates the problem and a workaround.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>/* Compile options needed: none
*/

// This code will only return the bytes up to the first NULL
// in the BSTR.

   CString MyApplication::GetCaption()
   {
      CString result;
      GetProperty(0x8b, VT_BSTR, (void*)&amp;result);
      return result;
   }

// This code will return the entire BSTR.
//

   BSTR MyApplication::GetCaption()
   {
      VARIANT result;
      GetProperty(0x8b, VT_VARIANT, (void*)&amp;result);

      ASSERT(result.vt == VT_BSTR);

      ::SysAllocString(va_arg(argList, LPTSTR));

      return result.bstrVal;
   }
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.50 2.50<BR>
KBCategory: kbprg kbfixlist kbbuglist<BR>
KBSubcategory: MfcOLE<BR>
Keywords          : kb16bitonly MfcOLE kbbuglist kbfixlist kbprg<BR>
Technology        : kbMfc<BR>
Version           : 1.50<BR>
Platform          : WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
