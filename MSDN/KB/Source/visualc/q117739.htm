

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Visual C++ ERRATA.WRI Part 1-2: Class Library Reference </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q117739">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1994/07/06">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  This article is a reproduction of parts 1 and 2 of the ERRATA.WRI file distributed with Microsoft Visual C++, version 1.5. The Visual C++ setup installs ERRATA.WRI in the MSVC\HELP directory.  MORE INFORMATION  Part 1: Notes on Class Library Refere...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA5V,QAGI,QACI,QAML,QAPN,QAEF,QBVV,QAH6,QAB9,QBWA,QA9N,QAXB,QATX,QANJ,QAH4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Visual C++ ERRATA.WRI Part 1-2: Class Library Reference</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q117739</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.50
WINDOWS
kbreadme
<P>
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Visual C++ for Windows, version 1.5
</UL> 
<P>
SUMMARY
 
<P>
This article is a reproduction of parts 1 and 2 of the ERRATA.WRI file
distributed with Microsoft Visual C++, version 1.5. The Visual C++ setup
installs ERRATA.WRI in the MSVC\HELP directory.
<P>
MORE INFORMATION
 
<P>
<P><h3>Part 1: Notes on Class Library Reference</h3>
 

<UL><LI>Page 32, File Manager Drag and Drop:
<P>
   Replace the last paragraph with the following:
<P>
<P><PRE>      To enable file drag-and-drop in your application, AppWizard writes a
      call to the CWnd member function DragAcceptFiles (if you chose to
      assign a file extension to your document class) for your main frame
      window in your InitInstance. You can remove this call if you do not
      want to implement file drag-and-drop.
</PRE>
<LI>Page 577, CObject::GetRuntimeClass:
<P>
   Replace the second paragraph with the following:
<P>
<P><PRE>      const char* m_lpszClassName A null-terminated string containing the
      ASCII class name.
</PRE>
<LI>Page 737, CScrollView::SetScaleToFitSize(SIZE szTotal):
<P>
   Replace the last sentence in the first paragraph with the following:
<P>
<P><PRE>      Usually cx and cy are greater than zero. However, if you wish to
      invert either the x-axis or the y-axis (as is common when emulating
      standard mapping modes such as MM_LOENGLISH), specify a negative cx
      or cy.
</PRE><P>
</UL><h3>Part 2: Notes on Database Classes</h3>
 

<UL><LI>Page 10:
<P>
   In Table 2.1, column 3 of the Enrollment row, place an asterisk after
   StudentID. The full primary key for the Enrollment table is CourseID +
   SectionID + StudentID.

<LI>Page 14:
<P>
   In the second full paragraph, which begins "A record view is a
   specialized view class that...", replace the sentence
<P>
<P><PRE>      CRecordView supports end-user navigation through records, one at a
      time, using Move First, Move Next, Move Previous, and Move Last
      commands.
</PRE><P>
   with this sentence:
<P>
<P><PRE>      CRecordView supports end-user navigation through records, one at a
      time, using the Move First, Move Next, Move Previous, and Move Last
      commands of the associated CRecordset object.
</PRE>
<LI>Page 34:
<P>
   Change the last line on the page from
<P>
<P><PRE>      pDoc-&gt;m_courseSet.m_strSort = "CourseID:;
</PRE><P>
   to read as follows:
<P>
<P><PRE>      pDoc-&gt;m_courseSet.m_strSort = "CourseID";
</PRE><P>
   (That is, change the colon to a double quotation mark.)

<LI>Page 53:
<P>
   In the second paragraph of the "AppWizard" article, complete the
   sentence
<P>
<P><PRE>      To run AppWizard, choose
</PRE><P>
   to read as follows:
<P>
<P><PRE>      To run AppWizard, choose the AppWizard command on the Project menu in
      Visual Workbench.
</PRE>
<LI>Page 86:
<P>
   In the third full paragraph, replace "CRecordset::Open" with
   "CRecordset::dynaset".

<LI>Page 114:

<LI>The second line of text at the top of the page reads:
<P>
<P><PRE>      you get a recordset that is dynamic but doesn't allow updates or
      backward scrolling
</PRE><P>
   Delete the words "is dynamic but". (A forward-only recordset allows
   forward scrolling only, does not allow updates, and should not be
   considered "dynamic.")
<P>
</UL>- Page 122:
<P>
<PRE>   Step 2 of the procedure "To specify a filter for a recordset object"
   contains two lines of code. In both code lines, add single quotation
   marks around the literal string "MATH101". For example:

      m_pSet-&gt;m_strFilter = "CourseID = 'MATH101'";

   For an explanation, see the "Caution" on page 31.

</PRE><LI>Page 172:
<P>
   Under the section "SQL Statement Construction," after the following
   paragraph:
<P>
<P><PRE>      To override the default SELECT statement, pass a string containing a
      complete SELECT statement when you call Open. Instead of constructing
      its own default string, the recordset uses the string you supply. If
      your replacement statement contains a WHERE clause, don't specify a
      filter in m_strFilter because you would then have two filter
      statements. If your replacement statement contains an ORDER BY
      clause, don't specify a sort in m_strSort so that you will not have
      two sort statements.
</PRE><P>
   add the following "Caution" note:
<P>
<P><PRE>      *Caution*
</PRE><P>
<P><PRE>      In the Enroll tutorial application, filter strings typically use a
      parameter placeholder, "?", rather than assigning a specific literal
      value, such as "MATH101", at compile time. If you do use literal
      strings in your filters (or other parts of the SQL statement), you
      may have to "quote" such strings with a DBMS-specific "literal
      prefix" and "literal suffix" character (or characters). For example,
      the code in this section uses a single quote character to bracket the
      value assigned as the filter, "MATH101". You may also encounter
      special syntactic requirements for operations such as outer joins,
      depending on your DBMS. Use ODBC functions to obtain this information
      from your driver for the DBMS. For example, call ::SQLGetTypeInfo for
      a particular data type, such as SQL_VARCHAR, to request the
      LITERAL_PREFIX and LITERAL_SUFFIX characters. If you are writing
      database-independent code, see Appendix C in the ODBC Programmer's
      Reference for detailed syntax information.
</PRE>
<LI>Page 201:
<P>
   In the list of values that can be returned in the
   CDBException::m_nRetCode data member, add the following values
   (alphabetically):
<P>
<P><PRE>      * AFX_SQL_ERROR_DATA_TRUNCATED  You requested more data than you have
      provided storage for. For information on increasing the provided data
      storage for CString or CByteArray data types, see the nMaxLength
      argument for RFX_Text and RFX_Binary under "Macros and Globals."
</PRE><P>
<P><PRE>      * AFX_SQL_ERROR_LOCK_MODE_NOT_SUPPORTED  Your request to lock records
      for update could not be fulfilled because your ODBC driver does not
      support locking.
</PRE><P>
<P><PRE>      * AFX_SQL_ERROR_NO_POSITIONED_UPDATES  Your request for a dynaset
      could not be fulfilled because your ODBC driver does not support
      positioned updates.
</PRE><P>
<P><PRE>      * AFX_SQL_ERROR_ODBC_V2_REQUIRED  Your request for a dynaset could
      not be fulfilled because a Level 2-compliant ODBC driver is required.
</PRE>
<LI>Page 221:
<P>
   In the description of the CRecordset::GetStatus member function, change
   the description of m_lCurrentRecord to the following:
<P>
<P><PRE>      Contains the zero-based index of the current record in the recordset,
      if known. If the index cannot be determined, this member contains
      AFX_CURRENT_RECORD_UNDEFINED (-2). If IsBOF is TRUE (empty recordset
      or attempt to scroll before first record) then m_lCurrentRecord is
      set to AFX_CURRENT_RECORD_BOF (-1). If on the first record, then it
      is set to 0, second record 1, and so on.
</PRE>
<LI>Pages 224, 225, 234, and 235:
<P>
   Add the indicated information below to the Remarks for the CRecordset
   functions listed below:
<P>
<PRE>      IsFieldDirty            p. 224
      IsFieldNull             p. 225
      IsFieldNullable         p. 225
      SetFieldDirty           p. 234
      SetFieldNull            p. 235

   Add the following:

      Using NULL for the first argument of the function will apply the
      function only to outputColumns, not params. For example, the call

         SetFieldNull(NULL);

      sets only outputColumns to NULL. Params will be unaffected.

      To work on params, you must supply the actual address of the
      individual param you want to work on (i.e.
      SetFieldNull(&amp;m_strParam)). This means you cannot set all params
      NULL, as you can with outputColumns.

</PRE><LI>Page 230:
<P>
   In the description of the forwardOnly option for the nOpenType parameter
   to the CRecordset::Open member function, delete the word "dynaset". (A
   forward-only recordset allows forward scrolling only, does not allow
   updates, and should not be considered a dynaset.)
<P></UL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.50<BR>
KBCategory: kbreadme<BR>
KBSubcategory: VCGenIss<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
