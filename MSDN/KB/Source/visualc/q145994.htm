

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Calculate Dialog Units When Not Using the System Font </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q145994">
<META NAME="KBModify" CONTENT="1998/02/02">
<META NAME="KBCreate" CONTENT="1996/02/12">
<META NAME="Keywords" CONTENT="MfcUI kbcode">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  GetDialogBaseUnits() always assumes the system font when calculating dialog units. If you are using any font other than the system font, the return value may not be correct for your dialog box. This article offers two alternatives you can use to ca...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QADF,QA01,QA2O,QABA,QANX,QAE5,QAH4,QBVV,QA4Q,QAUD,QAR4,QABK,QAJQ,QBSO,QAWP V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Calculate Dialog Units When Not Using the System Font</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 2, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q145994</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
<P><PRE>    - Microsoft Visual C++, 32-bit Edition, versions 2.0, 2.1, 2.2, 4.0
    - Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51, 1.52
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
GetDialogBaseUnits() always assumes the system font when calculating dialog
units. If you are using any font other than the system font, the return
value may not be correct for your dialog box. This article offers two
alternatives you can use to calculate dialog box units based on the current
font.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The horizontal base unit is equal to the average width (in pixels) of the
characters in the system font. The Help for GetDialogBaseUnits() suggests
the following code for calculating the correct units:
<P>
pixelX = (dialogunitX * baseunitX) / 4
pixelY = (dialogunitY * baseunitY) / 8
<P>
However, if you aren't using the system font, you need to do some
additional calculations to get the right coordinates. Here are two methods:
<P>
<P><h3>Method One</h3>
 
<P>
The vertical dialog box unit is equivalent to the character height. The
horizontal dialog box unit is equivalent to the average character width of
the dialog box's font. The average character width is calculated by finding
the average text extent of the alphabetic character set. This is necessary
because tmAveCharWidth is not precise. Use this code:
<P>
<PRE>   void CAboutDlg::OnPaint()
   {
       CPaintDC dc(this); // device context for painting
   
       CFont* pFont = GetFont();
       CFont* oldFont = dc.SelectObject(pFont);
       TEXTMETRIC tm;
       dc.GetTextMetrics( &amp;tm );
       int baseUnitY = tm.tmHeight;
       CSize size;
       size = dc.GetTextExtent(
           "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz", 52);
       int baseUnitX = (size.cx / 26 + 1) / 2;
       TRACE("baseUnitX = %d\n", baseUnitX);
       TRACE("baseUnitY = %d\n", baseUnitY);
       dc.SelectObject(oldFont);
   }

</PRE><h3>Method Two</h3>
 
<P>
The alternative is even easier. Using MapDialogRect() with a coordinate of
x = 4, y = 8 will return the dialog box base units regardless of the dialog
box's font. However, in most situations, the programmer doesn't need to
know the dialog box base units. MapDialogRect() can be used directly to
convert any dialog box units directly to device coordinates. The following
sample code shows how it can be used to find the dialog box base units:
<P>
<PRE>   void CAboutDlg::OnPaint()
   {
       CPaintDC dc(this); // device context for painting
   
       CRect rc( 0, 0, 4, 8 );
       MapDialogRect( &amp;rc );
       int baseUnitY = rc.bottom;
       int baseUnitX = rc.right;
       TRACE("baseUnitX = %d\n", baseUnitX);
       TRACE("baseUnitY = %d\n", baseUnitY);
   }
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 2.50 2.51 2.52 3.00 3.10 3.20<BR>
Keywords          : MfcUI kbcode<BR>
Technology        : kbMfc<BR>
Version           : WIN3.X:1.0,1.5,1.51,1.52;WINNT:2.0,2.1,2.2,4.0<BR>
Platform          : WINDOWS winnt<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 2, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
