

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INFO: Promotion of char to int May Add Two Hex Digits in printf </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q69344 ">
<META NAME="KBModify" CONTENT="1997/09/04">
<META NAME="KBCreate" CONTENT="1991/02/13">
<META NAME="Keywords" CONTENT="CLngIss kbcode">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  When you try to display a signed character in two-digit hexadecimal format as follows:     char hex_byte = 0x80;    printf(  The Hex value is %X , hex_byte);  four digits are displayed if the character has a value of 0x80 to 0xFF because of promoti...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAKD,QA4Q,QBFY,QBE7,QBE6,QAKC,QAO7,QAWN,QA2F,QA4F,QAB4,QAI4,QAKE,QBWP,QDMW V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INFO: Promotion of char to int May Add Two Hex Digits in printf</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 4, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q69344 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Microsoft C for MS-DOS, versions 6.0, 6.0a, 6.0ax
<LI>Microsoft C for OS/2, versions 6.0, 6.0a
<LI>Microsoft C/C++ for MS-DOS, version 7.0
<LI>Microsoft Visual C++ for Windows, versions 1.0, 1.5
<LI>Microsoft Visual C++ 32-bit Edition, versions 1.0, 2.0, 4.0, 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
When you try to display a signed character in two-digit hexadecimal format
as follows:
<P>
<PRE>   char hex_byte = 0x80;
   printf( "The Hex value is %X", hex_byte);

</PRE>four digits are displayed if the character has a value of 0x80 to 0xFF
because of promotion of the character to a signed int. Under Windows NT,
eight digits will be displayed because of the integer size difference. The
%x and %X specifiers designate an unsigned hexadecimal integer, but because
leading 0s (zeros) are dropped, values in the range of 0 to 127 produce the
desired two digits. See the sample code below.
<P>
To preserve the two-digit display for all possible values, typecast the
character to an unsigned character in the printf() argument list, as shown
below:
<P>
<PRE>   printf( "The hex value is %X", (unsigned char)hex_byte);

</PRE>Another way to achieve this, if sign is of no consequence, is to declare
the variables as unsigned character.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
For ANSI compliance, the compiler promotes all character arguments to
signed int. If the type is signed character, then the value will be sign-
extended. Thus, the int will be negative if the left-most bit of the
character was set, resulting in a different value for the int. When an
unsigned character is promoted, a 0 (zero) is placed in the high byte so
that the value is retained.
<P>
This promotion may also cause problems with comparisons of signed and
unsigned characters. This situation, unlike the printf() situation, will
produce a C4018 (signed/unsigned mismatch) warning at warning level 3 and
above, beginning with C version 6.0.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   /* Compile options needed: none
   */

   #include &lt;stdio.h&gt;

   void main( void)
   {
      char goo = 127;
      char myvar = 128;

      printf( "goo = %X\n",   goo); /* yields "7F" */
      printf( "myvar = %X\n",   myvar); /* yields "FF80" or "FFFFFF80"*/

      /* Correct way to represent the char as two hex digits "80". */
      printf( "myvar = %X\n",   (unsigned char)myvar);
   }
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: conversion<BR>
Keywords          : CLngIss kbcode<BR>
Version           : MS-DOS:6.0,6.00a,7.0; OS/2:6.0,6.00a; WINDOWS:1.0,1.5;  WINDOWS NT:1.0,2.0,4.0,5.0<BR>
Platform          : MS-DOS NT OS/2 WINDOWS<BR>
Issue type        : kbinfo<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 4, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
