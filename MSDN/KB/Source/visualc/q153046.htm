

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Updated Data Delayed by Five (5) Seconds in Jet 3.x </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q153046">
<META NAME="KBModify" CONTENT="1997/12/11">
<META NAME="KBCreate" CONTENT="1996/06/27">
<META NAME="Keywords" CONTENT="dbDao MfcDAO MfcDatabase kbprb">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  When two users are trying to gain access to the same Access database using Jet 3.x, there is a delay before data modified by one user becomes visible to the other user even if the code re-queries the database.  CAUSE =====  In order to improve perf...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA1S,QAKD,QAUD,QAYY,QAXB,QAZV,QABA,QBD2,QAAP,QAB4,QAP2,QBWP,QBF0,QAU3,QAPN V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Updated Data Delayed by Five (5) Seconds in Jet 3.x</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 11, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q153046</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
4.00 4.10
WINDOWS NT
kbprg kbusage kbprb
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Visual C++, 32-bit Edition, versions 4.0, 4.1
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When two users are trying to gain access to the same Access database
using Jet 3.x, there is a delay before data modified by one user becomes
visible to the other user even if the code re-queries the database.
<P>
<P><h2>CAUSE</h2>
 
<P>
In order to improve performance, Microsoft Jet version 3.x uses threads to
process read-ahead and write-behind caches asynchronously. Jet 3.0 defines
a key in the registry that determines the delay before the internal cache
is refreshed.
<P>
The PageTimeout property specifies the length of time, in milliseconds,
between when data is placed in an internal cache and when it is checked to
be potentially invalidated. Jet 3.x has a default value for the PageTimeout
property of five (5) seconds, which means that the shared data will be
refreshed after no more than five (5) seconds.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To ensure that the data is being written out to the disk, set PageTimeout
to a value that is appropriate for your system and wait at least that
amount of time before checking for the updated data.
<P>
Note that setting the value of PageTimeout too low may adversely affect
system performance.
<P>
There are two techniques for setting the PageTimeout value:

<OL><P><LI>Manually edit the registry. On Windows NT, run REGEDT32.EXE and select
   the HKEY_LOCAL_MACHINE hive. On Windows 95, run REGEDIT.EXE. Go to
   HKEY_LOCAL_MACHINE\Software\Microsoft\Jet\3.0\Engines\Jet and
   HKEY_LOCAL_MACHINE\Software\Microsoft\Jet\3.5\Engines\Jet3.5 for Jet
   3.5. You may need to add the last "Jet" key. Make a REG_DWORD entry into
   the key called PageTimeout, and set the value to an appropriate value,
   in milliseconds.

<P><LI>Make the changes to the system registry programmatically. The sample
   code below demonstrates how to achieve this.
<P>
</OL>NOTE: Starting with DAO 3.5, you can use the Idle method with the
dbRefreshCache parameter to perform the same function as the PageTimeout.
See the online DAO 3.5 SDK documentation for more information. This method
is preferred because changing the registry entry affects all applications.
<P>
<P><h2>STATUS</h2>
 
<P>
This behavior is by design.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
There are two factors involved in determining when updated data becomes
visible to another user: the data must be written to the database and the
updated data must become visible to the other user. The PageTimeout
property addresses only the second issue; it specifies when the updated
data becomes visible to another user after it has been written to the
database.
<P>
The simplest way to ensure that the data is written to the database is to
wrap the update in a transaction. The issue of when updated data is written
to a database is affected by:

<UL><LI>whether explicit transactions are used.

<LI>whether transactions are synchronous.

<LI>the size of the internal cache.

<LI>the delay before asynchronous changes are written out.

<LI>whether the database is opened exclusively.
<P>
</UL>If an explicit transaction is used, then no data will be written to the
database until the transaction is committed. When the transaction is
committed, the value of the UserCommitSync key in the registry determines
whether the data is written synchronously or asynchronously. In synchronous
mode, the data is written before the commit returns. The default for
explicit transactions is synchronous.
<P>
If explicit transactions are not used, then an implicit transaction is used
and the value of ImplicitCommitSync determines whether the data is written
synchronously or asynchronously. In synchronous mode, the data is written
before control returns to the application code. The default for implicit
transactions is asynchronous.
<P>
In asynchronous mode, changes are stored in a cache. A worker thread writes
the data from the internal cache to the database when one of two things
happens: the buffer pool becomes full (MaxBufferSize is exceeded) or a
period of time passes after the first stored change. This period of time is
specified by the SharedAsyncDelay key in the registry, or by the
ExclusiveAsyncDelay key if the database is opened exclusively.
<P>
If you are considering modifying the default values for transaction
synchronization, please see the article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE ID: <B><A HREF="../VISUALC/Q153491.htm">Q153491</A></B>
   TITLE: PRB: Jet 3.0 UserCommitSync &amp; ImplicitCommitSync Values Wrong

</PRE></OL>Note that Microsoft Jet version 3.0 uses different interpretations of the
registry entries than previous versions of Microsoft Jet.
<P>
You should also note that changing the ODBC Page Timeout property will have
no effect on this issue.  The ODBC Page Timeout value is displayed in the
ODBC Administrator under the Setup Options for a data source, and in the
registry under the HKEY_CURRENT_USER\Software\ODBC\ODBC.INI key for the
data source.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   #include &lt;winreg.h&gt;

   int SetPageTimeoutInSystemRegistry( )
   {
     HKEY hkey = HKEY_LOCAL_MACHINE;
     HKEY hResult;
     char szSubKey[]=_T( "Software\\Microsoft\\Jet\\3.0\\Engines\\Jet" );
     char szValue[]=_T( "PageTimeout" );
     char szClass[]=_T( "" );
     DWORD TimeOut = 20;  // set to desired timeout value, in milliseconds
     LONG lRetVal;
     DWORD dwDisp;


     // If key doesn't exist, it will be created.
     lRetVal = RegCreateKeyEx( hkey, szSubKey, 0, szClass,
                               REG_OPTION_NON_VOLATILE,
                               KEY_ALL_ACCESS, 0, &amp;hResult, &amp;dwDisp );

     // check the return value
     switch( lRetVal )
     {
       case ERROR_SUCCESS:
       case ERROR_FILE_NOT_FOUND:
         if( ERROR_SUCCESS != RegSetValueEx( hResult, szValue, 0,
             REG_DWORD, (const unsigned char *)&amp;TimeOut, 4 ) )
         {
           ::MessageBox( NULL,  _T("error"),  _T("error"), MB_OK );
           return 0;
         }
       break;

       // default is error condition
       default:
         ::MessageBox( NULL,  _T("error"),  _T("error"), MB_OK );
       break;
     } // end of switch

     // Must close the key.
     if( ERROR_SUCCESS != RegCloseKey ( hResult ) )
     {
       ::MessageBox( NULL,  _T("error"),  _T("error"), MB_OK );
       return 0;
     }

     // Success!
     return 1;
   }

</PRE><h2>REFERENCES</h2>
 
<P>
Microsoft Jet Database Engine Programmer's Guide.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbprg kbusage kbprb<BR>
KBSubcategory: MfcDatabase MfcDAO dbDao<BR>
Additional reference words: 4.00 4.10<BR>
Keywords          : dbDao MfcDAO MfcDatabase kbprb<BR>
Version           : Winnt: 4.0, 4.1<BR>
Platform          : winnt<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 11, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
