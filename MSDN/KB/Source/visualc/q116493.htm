

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: Changing Radix May Result in Inaccurate Watch Values </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q116493">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1994/06/20">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Changing the radix used in either CodeView or the Visual Workbench integrated debugger from 16 (hexadecimal format) to 10 (decimal format) may cause the debugger to display inaccurate values in the watch window. This occurs when a variable has alre...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QATK,QATL,QAYL,QAKD,QAR4,QAAP,QDL9,QBWQ,QBWO,QBWN,QAYZ,QAGQ,QA56,QA55,QAVX V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: Changing Radix May Result in Inaccurate Watch Values</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q116493</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
4.10   | 4.10 1.00 1.50
MS-DOS | WINDOWS
kbtool kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>The Visual Workbench Integrated Debugger, included with:
   Microsoft Visual C++ for Windows, versions 1.0 and 1.5
<LI>Microsoft CodeView for Windows, version 4.1
<LI>Microsoft CodeView for MS-DOS, version 4.1
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Changing the radix used in either CodeView or the Visual Workbench
integrated debugger from 16 (hexadecimal format) to 10 (decimal format) may
cause the debugger to display inaccurate values in the watch window. This
occurs when a variable has already been displayed first using the
hexadecimal radix.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Removing the variable from the watch window, then adding it back to the
watch window, causes the debugger to display the correct values using the
new radix.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products
listed at the beginning of this article. This is not a problem in Visual
C++, 32-bit Edition. We are researching this problem and will post new
information here in the Microsoft Knowledge Base as it becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
You can use the sample code below to illustrate this problem in CodeView
for MS-DOS. Build a debug version of the program and follow these steps:

<OL><P><LI>Open the project under CodeView for Windows.

<P><LI>In the command window, type the following commands:
<P>
<P><PRE>      n 16
      w? buf
</PRE><P>
   This sets the radix to 16 (hexadecimal format) and places the variable
   "buf" in the watch window.

<P><LI>Expand the buf variable in the watch window by either double-clicking on
   the variable or moving the cursor to that line and pressing Return. The
   watch window should then display the correct values for buf.

<P><LI>In the command window, type the following command:
<P>
<P><PRE>      n 10
</PRE><P>
   This switches the radix back to decimal format. Notice in the watch
   window that the character array values after 10 have now changed and are
   not correct.

<P><LI>Move the cursor to the line in the watch window containing buf and then
   press CTRL+Y to delete buf. Now reenter buf into the watch window and
   expand it. The values displayed are now correct.
<P>
</OL>To illustrate this behavior under Windows, rebuild the program as a
QuickWin application and follow the steps above using CodeView for Windows.
To reproduce the problem in the Visual Workbench integrated debugger, first
check the "Hexadecimal Display" check box in the Debug dialog box by
choosing Debug from the Options menu in the main menu.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>/* Compile options needed: /Zi /Od */

   #include &lt;stdio.h&gt;

   char buf[] = {'\001','\002','\003','\004','\005','\006','\007',
                 '\010','\011','\012','\013','\014','\015','\016',
                 '\017','\020'};

/* NOTE: The buf declaration simply inserts values 1-16 in   */
/* octal. You may use whatever characters you like for this  */
/* test; we are using these to better illustrate the problem.*/

   void main(void)
   {
     printf("Hello World.\n");
   }
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 1.50 4.10<BR>
KBCategory: kbtool kbbuglist<BR>
KBSubcategory: CvwIss WBDebug<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
