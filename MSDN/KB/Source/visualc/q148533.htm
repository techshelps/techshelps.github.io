

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: No ANSI Notifications from Control Created in OnCreate </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q148533">
<META NAME="KBModify" CONTENT="1997/07/31">
<META NAME="KBCreate" CONTENT="1996/03/18">
<META NAME="Keywords" CONTENT="MfcUI kbprb kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  No notification messages are received from a common control that is created in the OnCreate function (the WM_CREATE handler) of a CFormView or CDialog. Closer inspection reveals that notifications are being sent, but they are the UNICODE versions o...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAEV,QAUD,QAB5,QA7O,QAOE,QAMN,QAYC,QABO,QAY5,QBXR,QBC9,QBC8,QA01,QANO,QAH4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: No ANSI Notifications from Control Created in OnCreate</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 31, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q148533</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
2.10 2.20 4.00 4.10
WINDOWS NT
kbprg kbprb
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
   Microsoft Visual C++, 32-bit Edition, versions 2.1, 2.2, 4.0, 4.1
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
No notification messages are received from a common control that is created
in the OnCreate function (the WM_CREATE handler) of a CFormView or CDialog.
Closer inspection reveals that notifications are being sent, but they are
the UNICODE versions of the notifications.
<P>
<P><h2>CAUSE</h2>
 
<P>
The common controls send a WM_NOTIFYFORMAT message when they are first
created to determine if they should send ANSI or UNICODE notifications to
the parent window.
<P>
The default processing of WM_NOTIFYFORMAT for a dialog box returns
NFR_UNICODE until after the dialog box window has been created. At the
point when the WM_CREATE message is sent, the dialog box still returns
NFR_UNICODE in response to a WM_NOTIFYFORMAT message.
<P>
A CFormView is really a dialog box, so this is a problem for the CFormView
class as well as the CDialog class.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Here are two ways to work around this problem:

<UL><LI>Don't create the control in the WM_CREATE handler. If the control is
   created at a later point, this problem won't occur. For a CDialog-
   derived class, create the control in the OnInitDialog function. For a
   CFormView-derived class, create the control in the OnInitialUpdate
   function.
<P>
   -or-

<LI>Handle the WM_NOTIFYFORMAT message in the CDialog- or CFormView-derived
   class and respond with the NFR_ANSI code. The WM_NOTIFYFORMAT message is
   not available in ClassWizard, so you'll need to manually enter the
   ON_MESSAGE macro for the message as follows:
<P>
<P><PRE>      BEGIN_MESSAGE_MAP(CMyDialog, CDialog)
<PRE></PRE>          //{{AFX_MSG_MAP(CMyDialog)
          ... message map entries created by classwizard
          //}}AFX_MSG_MAP
          ... other manually created message map entries
          ON_MESSAGE(WM_NOTIFYFORMAT, OnNotifyFormat) // ADD THIS LINE
      END_MESSAGE_MAP()

   Add the prototype for this function to the class definition:

      class CMyDialog : public CDialog
      {
          ... other class members
      protected:
          afx_msg LRESULT OnNotifyFormat(WPARAM wParam,LPARAM lParam);
      };

   For more information on how to do this, please see the following article
   in the Microsoft Knowledge Base:

      ARTICLE-ID: <B><A HREF="../VISUALC/Q99848.htm">Q99848</A></B>
      TITLE     : Use ON_MESSAGE() Macro to Map Less-Common Messages

   The OnNotifyFormat function should be implemented as follows:

      LRESULT CMyDialog::OnNotifyFormat(WPARAM wParam,LPARAM lParam)
      {
        #ifdef _UNICODE
          return NFR_UNICODE;
        #else
          return NFR_ANSI;
        #endif
      }

</PRE></UL><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in Microsoft Windows NT. It is not
a bug in MFC. We are researching this problem and will post new information
here in the Microsoft Knowledge Base as it becomes available.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: CAnimateCtrl CHeaderCtrl CHotKeyCtrl<BR>
CImageList CListCtrl CProgressCtrl CRichEditCtrl CSliderCtrl<BR>
CSpinButtonCtrl CStatusBarCtrl CTabCtrl CToolBarCtrl CToolTipCtrl<BR>
CTreeCtrl 2.10 2.20 4.00 4.10 3.10 3.20 NF_QUERY NF_REQUERY<BR>
KBCategory: kbprg kbprb<BR>
KBSubcategory: MfcUI<BR>
Keywords          : MfcUI kbprb kbprg<BR>
Technology        : kbMfc<BR>
Version           : 2.10 2.20 4.00 4.10<BR>
Platform          : NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 31, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
