

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Derive From Classes not Listed in ClassWizard </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q99161 ">
<META NAME="KBModify" CONTENT="1997/11/26">
<META NAME="KBCreate" CONTENT="1993/05/24">
<META NAME="Keywords" CONTENT="WizardIss">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Microsoft ClassWizard supports deriving classes only from the classes listed in the Class Type field of the Add Class dialog box. To create a class derived from a previously derived class or to derive from another class based on the Microsoft Found...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QABO,QABA,QA2O,QAY2,QASR,QBVV,QBXF,QAY5,QAHT,QA2Q,QAD7,QAG2,QBWS,QAEV,QADS V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Derive From Classes not Listed in ClassWizard</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 26, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q99161 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
<P>
 
The information in this article applies to:
<P>
<PRE>   The ClassWizard included with:
    - Microsoft Visual C++ for Windows, version 1.0, 1.5, 1.51, and
      1.52
    - Microsoft Visual C++ 32-bit Edition, version 1.0, 2.0, 2.1, 2.2,
      4.0, 4.1, 4.2
</PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Microsoft ClassWizard supports deriving classes only from the classes
listed in the Class Type field of the Add Class dialog box. To create
a class derived from a previously derived class or to derive from
another class based on the Microsoft Foundation Class Library CWnd
class that is not listed in the Class Type field, a few extra steps
are required. The text below presents these steps.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
For example, suppose the following derivation tree is desired:
<P>
<PRE>   MyDerivedClass
         ^
         |
     MyBaseClass
         ^
         |
      CDialog

</PRE>or, it is desirable to derive a class from a class based on CWnd that
is not listed in the Class Type field in the Add Class dialog box,
such as CFileDialog. There is no predefined method to create this type
of class hierarchy using the ClassWizard. However, by using the
parsing techniques ClassWizard uses, you can create these class
hierarchies.
<P>
The steps below use CDialog as the default class type. Before
proceeding, determine which predefined class type is closest to the
desired base class. For example, CFileDialog is similar to CDialog. If
none of the classes correspond closely to your desired class, use the
generic CWnd class.
<P>
To create a class with multiple levels of derivation, perform the
following three steps:

<OL><P><LI>Use ClassWizard to create MyDerivedClass, deriving it from CDialog
   (or another appropriate predefined class).

<P><LI>Use ClassWizard to create MyBaseClass, deriving it from CDialog
   (or another appropriate predefined class).

<P><LI>Edit the code generated for MyDerivedClass and replace all
   references to CDialog with MyBaseClass. This step is very
   important; many errors occur if this is not done correctly and
   these errors may  be difficult to track down.
<P>
</OL>To create a class based on a class based on CWnd that is not supported
by ClassWizard, perform the following two steps:

<OL><P><LI>Use ClassWizard to create MyDerivedClass, deriving it from CDialog
   (or another appropriate predefined class based on CWnd).

<P><LI>Edit the code generated for MyDerivedClass and replace all
   references to CDialog with the name of the class from which you are
   deriving this class, for example, CFileDialog. This step is very
   important; many errors occur if this is not done correctly and
   these errors may be difficult to track down.
<P>
</OL>Then, for either type of class, perform the following three steps:

<OL><P><LI>Delete the project .CLW file.

<P><LI>Start App Studio, load your project .RC file, and activate Class
   Wizard.

<P><LI>Because the project does not have a .CLW file, ClassWizard prompts
   to generate a .CLW file. Choose Yes to generate the file. NOTE: You
   must generate this file in App Studio. If you attempt to generate
   the file in Visual Workbench, VWB instructs you to generate the
   file in App Studio.
<P>
</OL>Once App Studio has created the .CLW file, the base class of the
derived class has been changed successfully. To verify this, view the
class in ClassWizard and see the data in the Class Info dialog box.
<P>
For classes created using multiple levels of derivation, you can use
ClassWizard to pass system messages, such as WM_INITDIALOG, to the
base class as well. To do this, perform the following nine steps:

<OL><P><LI>Start ClassWizard.

<P><LI>Select the MyDerivedClass class.

<P><LI>Select MyDerivedClass in the Object IDs window.

<P><LI>Select the WM_INITDIALOG message in the Messages window.

<P><LI>Choose Add Function to add a function skeleton that calls the
   OnInitDialog() function in MyBaseClass.

<P><LI>Select the MyBaseClass class.

<P><LI>Select MyBaseClass in the Object IDs window.

<P><LI>Select the WM_INITDIALOG message in the Messages window.

<P><LI>Choose Add Function to add a function skeleton that calls the
   OnInitDialog() function in CDialog. This step is required only
   once. If you derive additional classes from the base class, you do
   not need to redo this operation.
</OL> 
<PRE>Keywords          : WizardIss
Version           : WINDOWS: 1.0, 1.5, 1.51, 1.52;; WINNT: 1.0, 2.0,
Platform          : NT WINDOWS
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 26, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
