

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INFO: /Mx Compiler Options and the LIBC, LIBCMT, MSVCRT Libs </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q128641">
<META NAME="KBModify" CONTENT="1997/10/03">
<META NAME="KBCreate" CONTENT="1995/04/05">
<META NAME="Keywords" CONTENT="CLIss LinkIss MThreadIss">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  This article describes the /ML, /MT and /MD compile options and the default libraries that these options specify. Different compile options imply linking with different default libraries. In the Visual C++ version 2.0 development environment, these...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBHQ,QBFY,QBV8,QABA,QAE2,QAH4,QA5V,QBWC,QABI,QAJQ,QBVV,QAW6,QAPN,QAHE,QBBI V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INFO: /Mx Compiler Options and the LIBC, LIBCMT, MSVCRT Libs</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 3, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q128641</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:
<P>
- Microsoft Visual C++, 32-bit Edition, versions 2.0, 2.1, 4.0, 5.0
 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article describes the /ML, /MT and /MD compile options and the default
libraries that these options specify. Different compile options imply
linking with different default libraries. In the Visual C++ version 2.0
development environment, these options are found in the C/C++ tab after
choosing Project from the Settings menu. In the Visual C++ version 4.0
development environment, these options are found in the C/C++ tab after
choosing Settings... from the Build menu. For both, select Code Generation.
The "Use Run-Time Library" category corresponds to the switches described
below.
<P>
NOTE: The /NODEFAULTLIB linker option can be used to override default
libraries specified by the compiler. If you are having problems linking
to the default libraries, check the usage of this linker option.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>/ML - Compile for Single-Threaded Statically Linked Runtime Support</h3>
 
<P>
This is the default option, so if you don't specify /MT or /MD, /ML is
implicit. This option generates a default library search record for
LIBC.LIB for each and every object compiled with this flag.
<P>
<P><h3>/MT - Compile for Multi-Threaded Statically Linked Run-Time Support</h3>
 
<P>
Multi-threaded support does not imply that the run-time itself is
multi-threaded or that you must use threads in your application. It just
allows you to use threads in you application if you so desire.
<P>
This option generates a default library search record for LIBCMT.LIB for
each and every object compiled with this flag. This option also defines
(#define) the symbol _MT during compilation so that multi-threading support
is enabled when you include (#include) C Run-time Library header files.
<P>
<P><h3>/MD - Compile for Multi-Threaded Dynamically Linked Run-Time Support</h3>
 
<P>
This option generates a default library search record for MSVCRT.LIB for
each and every object compiled with this flag.
<P>
As with /MT, the symbol _MT is defined during compilation so that
multi-threading support is enabled when you include C Run-time Library
header files.
<P>
Also, /MD defines the symbol _DLL during compilation so that C Run-Time
Library variables and functions will be imported from MSVCRTxx.DLL rather
than be statically linked.
<P>
/MD and /D"_DLL" are REQUIRED for C Run-time variable references when
linking with MSVCRT.LIB.
<P>
All modules and static libraries within an application should use the same
compile options (/ML, /MT, or /MD) and link to the library cooresponding
to the selected option. Compiling or linking with two or more of the LIBC,
LIBCMT, MSVCRT libraries will cause LNK2005 "symbol" already defined in
"object" errors. If you are getting these errors, make sure all .OBJ files
(including static libraries) are built with the same /Mx option.
<P>
Some possible consequences of not following the above recommendation are:

<UL><LI>Linking code compiled with an explicit or implicit /ML to the LIBCMT.LIB
   or MSVCRT.LIB can cause unresolved externals on static C Run-Time data
   objects such as _errno.

<LI>Linking code compiled with /MT or /MD with the library LIBC causes
   unresolved externals on _beginthread(), _beginthreadex(), _endthread(),
   and/or _endthreadex(). LIBC is not multi-threaded, so it does not
   contain these run-time functions. This later case is very common in
   Visual C++ versions 2.x and 4.0, because MFC is now multi-threaded. For
   more information, please see the following article in the Microsoft
   Knowledge Base:
<P>
   ARTICLE-ID: <B><A HREF="../VISUALC/Q126646.htm">Q126646</A></B>
<PRE>   TITLE     : PRB: Error Msg: LNK2001 on __beginthreadex and __endthreadex

</PRE><LI>When compiling with /MD, a reference to "var1" in your source becomes a
   reference "__imp__var1" in the .OBJ file because all C Run-Time is now
   held in a DLL. If you try to link with the static libraries LIBC or
   LIBCMT, you will get an unresolved external on __imp__var1. If you try
   to link with MSVCRT.LIB when compiling without /MD, you may not always
   get an unresolved external, but you are likely to have other problems.
<P></UL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: link.exe link cl.exe cl<BR>
Keywords          : CLIss LinkIss MThreadIss<BR>
Version           : WINNT:2.0,2.1,4.0,5.0;<BR>
Platform          : winnt<BR>
Issue type        : kbinfo<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 3, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
