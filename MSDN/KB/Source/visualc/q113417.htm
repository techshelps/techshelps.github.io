

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INFO: C4097: Typedef-Name X Used as Synonym for Class-Name Z </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q113417">
<META NAME="KBModify" CONTENT="1997/10/03">
<META NAME="KBCreate" CONTENT="1994/04/04">
<META NAME="Keywords" CONTENT="CPPIss">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  When a typedef class name is used as a base class, the following warning will appear if compiled with /Ze (enable Microsoft extensions), which is on by default:     warning C4097:Non-standard extension: typedef-name 'identifier1'              used ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBFY,QAB4,QA56,QA55,QDMW,QAAP,QABA,QABO,QBE7,QBE6,QA2O,QAR4,QAD2,QAEO,QDL9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INFO: C4097: Typedef-Name X Used as Synonym for Class-Name Z</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 3, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q113417</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft C/C++ Compiler (CL.EXE) included with:
   - Microsoft C/C++ for MS-DOS, versions 7.0, 7.0a
   - Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51, 1.52
   - Microsoft Visual C++ 32-bit Edition, versions 1.0, 2.0, 2.1, 4.0, 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
When a typedef class name is used as a base class, the following warning
will appear if compiled with /Ze (enable Microsoft extensions), which is on
by default:
<P>
<PRE>   warning C4097:Non-standard extension: typedef-name 'identifier1'
             used as synonym for class-name 'identifier2'

</PRE>If compiled with /Za (disable Microsoft extensions) using Visual C++ for
Windows or Visual C++ 32-bit Edition 1.0, the following error appears:
<P>
<PRE>   error C2505: 'identifier' : is not a legal base class

</PRE>This error message is correct in accordance with the C++ language
specification. In C++ grammar, the "base-list" is specified as being a list
of "base-specifiers". A base-specifier reduces to a "complete-class-name",
which does not include "typedef-names". Consequently, the compiler is
perfectly correct in generating this warning/error for the sample below.
<P>
This error is not generated using Visual C++ 32-bit Edition 2.X. Using
Visual C++ 32-bit Edition, versions 2.x and above, the compiler generates
the following warning with both the /Ze and /Za switches:
<P>
<PRE>   C4097: typedef-name 'identifier1' used as synonym for class-name
   'identifier2'

</PRE><h2>MORE INFORMATION</h2>
 
<P>
For more information on C++ grammar, see the "Grammar Summary" in the
"Annotated C++ Reference Manual" (ARM) by Bjarne Stroustrup and Margaret
Ellis (Appendix A) or Appendix C of the C++ "Language Reference" that comes
with Microsoft C/C++ 7.0 and Microsoft Visual C++ for Windows, versions 1.0
and 1.5. The same Grammar Summary is in Appendix A of the "C++ Language
Reference" manual for Visual C++ 32-bit Edition, versions 1.1 and above,
and in the online documentation under the "Grammar Summary" heading of the
"C++ Langauge Reference" included with Visual C++ 32-bit Edition, version
4.0.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   /* Compile options needed: /Ze /c /W4
   */

    class C
    {
      int _w;
    };

    typedef C D;

    class F : public D     // warning C4097
    { };

    class E : private virtual D // warning C4097
    { };

    class G : protected D // warning C4097
    { };
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 8.00 8.00c 9.00 9.10<BR>
Keywords          : CPPIss<BR>
Version           : MS- DOS:7.0;WIN3X:1.0,1.5,1.51,1.52;WINNT:1.0,2.0,2.1,4.0,5.0<BR>
Platform          : MS-DOS NT WINDOWS<BR>
Issue type        : kbinfo<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 3, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
