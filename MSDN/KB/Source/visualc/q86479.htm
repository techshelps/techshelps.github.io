

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INFO: Initializing in a Loop Within a Case Statement </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q86479 ">
<META NAME="KBModify" CONTENT="1997/09/08">
<META NAME="KBCreate" CONTENT="1992/07/07">
<META NAME="Keywords" CONTENT="CPPLngIss kbcode">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  In the products listed above, the following errors can occur when you define a variable in a loop that is within a case statement. The following error occurs when  default  is the next case:     C2361 Initialization of 'x' is skipped by 'default' l...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAC2,QAMB,QAYL,QAGX,QAA7,QAB4,QAAP,QAVS,QBWP,QBVV,QBFY,QAO4,QABA,QAJQ,QDL9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INFO: Initializing in a Loop Within a Case Statement</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 8, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q86479 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Microsoft C/C++ for MS-DOS, version 7.0
<LI>Microsoft Visual C++ for Windows, versions 1.0, 1.5
<LI>Microsoft Visual C++ 32-bit Edition, versions 1.0, 2.0, 4.0, 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In the products listed above, the following errors can occur when you
define a variable in a loop that is within a case statement. The following
error occurs when "default" is the next case:
<P>
<PRE>   C2361 Initialization of 'x' is skipped by 'default' label

</PRE>When default is not next, the following error appears:
<P>
<PRE>   C2360 Initialization of 'x' is skipped by 'case' label

</PRE>A similar error also occurs when a goto is before the loop:
<P>
<PRE>   C2362 Initialization of 'x' is skipped by 'goto label name'

</PRE><h2>MORE INFORMATION</h2>
 
<P>
In the two samples below, it can be seen that the variable is initialized
when it is declared. The errors are generated because the scope of the
variable, when it is defined and initialized, is in the same scope as the
case label or the goto label. Thus, there is a chance that the
initialization will not occur. There are ways to ensure that the
initialization is performed:

<UL><LI>Enclose the for loop in "{}" (curly braces). This will cause the
   for loop to be in a different scope than the case and goto labels.
<P>
   -or-

<LI>Define the loop variable right before entering the loop. This works
   only for simple types, not for user-defined types.
<P>
   -or-

<LI>Define the variable without initializing it. Any assignments made
   to that variable after its definition are considered assignments,
   not initializations.
<P>
</UL><h3>Sample Code 1</h3>
 
<P>
<PRE>   #include &lt;stdio.h&gt;

   /* Compile Options needed: none.
   */

   void main( void )
   {
     int var;

     switch( var )
     {
       case 1 : for (int i = 0; i &lt; 3; ++i)
                {
                   printf("In loop");
                }
                break;

       case 2 : printf("Case 2");            // C2360
                break;

       default : printf("Default");          // C2361
                 break;
     }
   }

</PRE><h3>Sample Code 2</h3>
 
<P>
<PRE>   #include &lt;stdio.h&gt;

   /* Compile options needed: none.
   */

   void main (void)
   {
      goto label;

      int var = 0;

      label:;                                // C2362
   }
</PRE> 
<PRE>Keywords          : CPPLngIss kbcode
Version           : MS-DOS:7.0; WINDOWS:1.0,1.5; WINDOWS NT:1.0,2.0,4.0,5.0
Platform          : MS-DOS NT WINDOWS
Issue type        : kberrmsg kbinfo</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 8, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
