

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Run Out of Memory or Assertion in GetBufferSetLength() </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q148787">
<META NAME="KBModify" CONTENT="1997/09/19">
<META NAME="KBCreate" CONTENT="1996/03/22">
<META NAME="Keywords" CONTENT="MfcDatabase kbbuglist kbfixlist kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  An error can occur when mapping a CString to a SQL_LONGVARCHAR, SQL_VARCHAR, or other SQL data type fields if a driver returns a large precision value from SQLDescribeCol() for the column.  A bug in the MFC ODBC Database classes results in MFC tryi...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAR4,QAY5,QA56,QA55,QAYL,QBV8,QAB9,QBFY,QA7O,QA7N,QAY2,QAU9,QAUD,QAM1,QAKD V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Run Out of Memory or Assertion in GetBufferSetLength()</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 19, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q148787</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
4.00 4.10
WINDOWS NT
kbprg kbbuglist kbfixlist
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
   Microsoft Visual C++, 32-bit Edition, version 4.0, 4.1
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
An error can occur when mapping a CString to a SQL_LONGVARCHAR,
SQL_VARCHAR, or other SQL data type fields if a driver returns a large
precision value from SQLDescribeCol() for the column.
<P>
A bug in the MFC ODBC Database classes results in MFC trying to allocate a
large chunk of memory to store data that might have this large precision.
<P>
In some cases, such as using a memo field with the FoxPro Desktop ODBC
driver, a memory allocation of 1 gigabyte may be attempted. Or, as is the
case with the Visual FoxPro driver, the MFC Database Classes will try to
allocate a negative number of bytes because the return value of the driver
is 2 gigabytes and then MFC adds 1 which causes the signed variable to wrap
into a negative value. In this case, an assertion occurs in
GetBufferSetLength() on line 447 of Strcore.cpp:
<P>
<PRE>    ASSERT(nNewLength &gt;= 0);

</PRE>SQL Server text fields produce the same result.
<P>
The problem occurs only when mapping CString variables to variable
length fields using the RFX_Text() function.
<P>
<P><h2>CAUSE</h2>
 
<P>
The fourth argument of the RFX_Text() function takes a value for the
user-defined maximum length of the CString. The MFC ODBC database classes
fail to constrain the CString buffer to this maximum length.
<P>
The following code exists at line 527 of Dbrfx.cpp:
<P>
<PRE>   // Determine string pre-allocation size
   if (cbColumn &lt; (UINT)nMaxLength)
      cbColumn = nMaxLength;

</PRE>It should be:
<P>
<PRE>   if (cbColumn &gt; (UINT)nMaxLength)
      cbColumn = nMaxLength;

</PRE><h2>RESOLUTION</h2>
 
<P>
Do one of the following:

<UL><LI>Don't bind to a CString. For example, use a CLongBinary object.
<P>
   -or-

<LI>Write your own RFX_Text() function that corrects the problem with the
   existing RFX_Text(). To do this, copy the contents of the RFX_Text()
   function from Msdev\Mfc\Src\Dbrfx.cpp, change the name, and modify the
   code from this:
<P>
<P><PRE>      if (cbColumn &lt; (UINT)nMaxLength)
<PRE></PRE>          cbColumn = nMaxLength;

   to this:

      if (cbColumn &gt; (UINT)nMaxLength)
         cbColumn = nMaxLength;

</PRE></UL>You'll need to replace the RFX_Text() function call in your CRecordset's
DoFieldExchange() function with a call to your new function. You'll want to
copy the RFX_Text() function prototype from Afxdb.h as well so that you are
sure to use the correct default parameters.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. This bug was corrected in Visual C++ 32-
bit Edition version 4.2.
<P>
It is also fixed in the Visual C++ 4.1a patch. For information on this
patch, see the following Microsoft Knowledge Base article:
<P>
<PRE>   ARTICLE ID: <B><A HREF="../VISUALC/Q150937.htm">Q150937</A></B>
   TITLE: Visual C++ Version 4.1 Patch
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 4.10 4.20 vcbuglist400  vcbuglist410<BR>
vcfixlist420<BR>
KBCategory: kbprg kbbuglist kbfixlist<BR>
KBSubcategory: mfcdatabase<BR>
Keywords          : MfcDatabase kbbuglist kbfixlist kbprg<BR>
Technology        : kbMfc<BR>
Version           : 4.00 4.10<BR>
Platform          : NT WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 19, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
