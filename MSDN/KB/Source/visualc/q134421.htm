

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Use CBitmapButton to Resize a Bitmap to Fit a Button </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q134421">
<META NAME="KBModify" CONTENT="1997/10/10">
<META NAME="KBCreate" CONTENT="1995/08/07">
<META NAME="Keywords" CONTENT="MfcUI kbcode kbprg kbui">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  You can override the default behavior of CBitmapButton so the bitmap sizes to fit the button. How CBitmapButtons behave during initialization depends on which function is used to load the bitmaps.  Function        Behavior                  When use...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAY5,QAB9,QBV8,QAB5,QA5D,QAY2,QAOE,QABO,QAPF,QAMB,QAJD,QAH4,QABA,QBWT,QBXT V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Use CBitmapButton to Resize a Bitmap to Fit a Button</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q134421</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.50 1.51 1.52 | 2.00 2.10 2.20 4.00 4.10 4.20
<PRE>WINDOWS        | WINDOWS NT
</PRE>kbprg kbui kbcode
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC), included with:
<P>
<P><PRE>    - Microsoft Visual C++ for Windows, versions 1.5, 1.51, 1.52
    - Microsoft Visual C++, 32-bit Edition, versions 2.0, 2.1, 2.2,
      4.0, 4.1, 4.2
</PRE><P>
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
You can override the default behavior of CBitmapButton so the bitmap sizes
to fit the button. How CBitmapButtons behave during initialization depends
on which function is used to load the bitmaps.
<P>
<PRE>Function        Behavior                  When used
</PRE> 
<PRE>AutoLoad()      button sizes to bitmap    button is in dialog box

LoadBitmaps()   button remains at size    button is in non-dialog
                specified when created    window


</PRE>If you want the bitmap to stretch to fit the dimensions of the button you
create, you must override these functions:
<P>
<PRE>   CBitmapButton::AutoLoad()
   CBitmapButton::DrawItem()

</PRE>NOTE: You need only override AutoLoad() if you call it to initialize a
button.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following steps give the necessary changes to AutoLoad and DrawItem:

<OL><P><LI>Implement the owner drawn CBitmapButton using one of the standard
   procedures described in the Books Online help for the CBitmapButton
   class.

<P><LI>Derive a class from CBitmapButton.
<P>
   NOTE: If you are using Classwizard, you can not derive directly from
   CBitmapButton; use a base class lower in hierarchy.

<P><LI>To override the AutoLoad member function:
<P>
   a. Include a function prototype in your CBitmapButton-derived class
<P><PRE>      header (.h) file, as in this example:
</PRE><P>
<P><PRE>      class CMyButton: public CBitmapButton
      {
<PRE></PRE>        ...
      public:
        CMyButton(){};
        BOOL AutoLoad(UINT nID, CWnd* pParent);     // ADD THIS LINE
        ...
      };

   b. Implement CMyButton::AutoLoad() in the .cpp file by copying the
      CBitmapButton::AutoLoad() function from Winbtn.cpp file in the MFC
      Src directory and changing the following line near the end of the
      function into a comment:

      // change following to a comment to prevent button resizing
      // SizeToContent();

</PRE><P><LI>To override the DrawItem() member function:
<P>
   a. Include a function prototype in your CBitmapButton-derived class
<P><PRE>      header (.h) file, as in this example:
</PRE><P>
<P><PRE>      class CMyButton: public CBitmapButton
      {
<PRE></PRE>        ...
      public:
        CMyButton(){};
        void DrawItem(LPDRAWITEMSTRUCT lpDIS);     // ADD THIS LINE
        ...
      };

   b. Implement CBitmapButton::DrawItem() in the .cpp file by copying the
      CBitmapButton::DrawItem() function from Winbtn.cpp in the MFC Src
      directory and making these changes:

      Replace this code:

         pDC-&gt;BitBlt(rect.left, rect.top, rect.Width(), rect.Height(),
             &amp;memDC, 0, 0, SRCCOPY);

      with this code:

         // determine bitmaps size for use in StretchBlt
         BITMAP bits;
         pBitmap-&gt;GetObject(sizeof(BITMAP),&amp;bits);
         pDC-&gt;StretchBlt(rect.left,rect.top,rect.Width(),rect.Height(),
            &amp;memDC,0,0,bits.bmWidth, bits.bmHeight, SRCCOPY);

</PRE><P><LI> Modify the declaration of the CBitmapButton member variable from step 1
<P><PRE>    so that it is now of type CMyButton.
<P></BLOCKQUOTE>
</OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 1.50 1.51 1.52 2.50 2.51 2.52 2.00<BR>
2.10 2.20 3.00 3.10 4.00 4.10 4.20<BR>
KBCategory: kbprg kbui kbcode<BR>
KBSubcategory: MfcUI<BR>
Keywords          : MfcUI kbcode kbprg kbui<BR>
Technology        : kbMfc<BR>
Version           : 1.50 1.51 1.52 | 2.00 2.10 2.20<BR>
Platform          : NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
