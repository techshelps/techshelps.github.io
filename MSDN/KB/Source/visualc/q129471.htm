

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: SubClass the MDIClient by Using MFC </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q129471">
<META NAME="KBModify" CONTENT="1997/07/10">
<META NAME="KBCreate" CONTENT="1995/04/26">
<META NAME="Keywords" CONTENT="kbprg kbtool MfcMisc kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  In MFC, the MDICLIENT window is stored in a public HWND member variable (m_hwndMDIClient) within the CMDIFrameWnd class. CMDIFrameWnd is the base class of the CMainFrame class in an AppWizard-generated MDI application.  There are three steps requir...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAUD,QABO,QAG9,QADZ,QBFY,QA56,QA55,QAY5,QAYL,QASR,QAGF,QAGI,QADS,QBXF,QBV8 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: SubClass the MDIClient by Using MFC</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q129471</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
<P>
<P><PRE>    - Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51, 1.52
    - Microsoft Visual C++, 32-bit Edition, versions 1.0, 2.0, 2.1,
      4.0, 4.1, 4.2, 5.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In MFC, the MDICLIENT window is stored in a public HWND member variable
(m_hwndMDIClient) within the CMDIFrameWnd class. CMDIFrameWnd is the base
class of the CMainFrame class in an AppWizard-generated MDI application.
<P>
There are three steps required to subclass the MDICLIENT window:

<OL><P><LI>Use ClassWizard to derive a class from CWnd called CMDIClientWnd.

<P><LI>Add the function, GetSuperWndProcAddr(), to CMDIClientWnd.

<P><LI>Use CMDIClientWnd to subclass the MDICLIENT window.
<P>
</OL>Once the MDICLIENT window has been subclassed with CMDIClientWnd, message
handlers and other functions can be placed in the CMDIClientWnd class.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Here is more detailed information about each of the steps:

<OL><P><LI>Use ClassWizard to derive a class from CWnd called CMDIClientWnd.
<P>
   For details on how to derive a class using ClassWizard, please see the
   User's Guide documentation on ClassWizard, specifically the "Adding a
   New Class" section.

<P><LI>Add the function GetSuperWndProcAddr() to CMDIClientWnd.
<P>
   NOTE: This step need only be performed if you are using 16-bit versions
   of Visual C++, not 32-bit. The 32-bit versions of Visual C++ implement
   this functionality for you.
<P>
   Once the class has been created, add the following prototype to the
   header file:
<P>
<P><PRE>      public:
<PRE></PRE>          WNDPROC* GetSuperWndProcAddr();

   And add the following function to the .CPP file:

      WNDPROC* CMDIClientWnd::GetSuperWndProcAddr() {
          static WNDPROC NEAR pfnSuper = NULL;
          return &amp;pfnSuper;
      }

</PRE><P><LI>Use CMDIClientWnd to subclass the MDICLIENT window in the CMDIFrameWnd
   class (usually CMainFrame).
<P>
   To the CMainFrame class, add a public variable of type CMDIClientWnd
   called m_wndMDIClient. Then modify OnCreate for CMainFrame as follows:
<P>
<P><PRE>      int CMainFrame::OnCreate(LPCREATESTRUCT lpCreateStruct)
      {
<PRE></PRE>          if (CMDIFrameWnd::OnCreate(lpCreateStruct) == -1)
          return -1;

          if (!m_wndMDIClient.SubclassWindow (m_hWndMDIClient)) { // Add
              TRACE ("Failed to subclass MDI client window\n");   // Add
              return (-1);                                        // Add
          }                                                       // Add
      ...
      }

</PRE></OL>After completing these three steps, you can use ClassWizard to add message
handlers to CMDIClientWnd similar to the one below, which changes the
MDICLIENT's background color.
<P>
BOOL CMDIClientWnd::OnEraseBkgnd(CDC* pDC)
{
<PRE>  // Set brush to desired background color
  CBrush backBrush(RGB(255, 128, 128));

  // Save old brush
  CBrush* pOldBrush = pDC-&gt;SelectObject(&amp;backBrush);

  CRect rect;
  pDC-&gt;GetClipBox(&amp;rect);     // Erase the area needed

  pDC-&gt;PatBlt(rect.left, rect.top, rect.Width(), rect.Height(),
      PATCOPY);
  pDC-&gt;SelectObject(pOldBrush);
  return TRUE;
</PRE>}
<P>
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : kbprg kbtool MfcMisc kbhowto<BR>
Technology          : kbMfc<BR>
Version             : 1.0 1.5 1.52 2.0 4.1 4.2 5.0<BR>
Platform            : NT WINDOWS<BR>
Issue type          : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
