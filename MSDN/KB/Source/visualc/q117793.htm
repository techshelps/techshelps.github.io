

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Can't Load Debugee with Multiple Data Segments </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q117793">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1994/07/10">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  When you attempt to debug a large-model Windows-based application in the debugger, the following error message displays:     Could not load debuggee. Debuggee contains multiple writable data    segments (16)  CAUSE =====  This error message occurs ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAYY,QAB4,QAJH,QDL9,QBWQ,QBWO,QBWN,QAH4,QBWS,QAJQ,QBVV,QA63,QA56,QA55,QABA V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Can't Load Debugee with Multiple Data Segments</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q117793</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00 1.50
WINDOWS
kbtool kbprb
<P>
<P>
 
The information in this article applies to:

<UL><LI>The Visual Workbench Integrated Debugger included with:
   Microsoft Visual C++ for Windows, versions 1.0 and 1.5
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When you attempt to debug a large-model Windows-based application in the
debugger, the following error message displays:
<P>
<PRE>   Could not load debuggee. Debuggee contains multiple writable data
   segments (16)

</PRE><h2>CAUSE</h2>
 
<P>
This error message occurs when you try to debug an application containing
more than one data segment when another instance of the same application is
already running. The problem is that 16-bit Windows does not allow more
than one instance of an application containing multiple data segments to
run. Furthermore, because Visual C++ runs in the 16-bit Windows-on-Windows
(WOW) layer in Windows NT, the same error can occur there.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
The easiest solution is to make sure that no instances of your program
are running before you begin the debugging session.
<P>
If it is important to run multiple instances of your program, create a
medium-memory model application or force all data near by using the
/Gx and /Gt compile options.
<P>
NOTE: These options work only if the application's static data, string
literals, stack, and heap all fit into one 64K segment.
<P>
The /Gx option causes the compiler to force static data into the
default data segment, which results in the application having only one
data segment (this is turned on by default in Visual C++).
<P>
The /Gt switch specifies the size that a static object must be to have its
own data segment. When trying to create a single data segment, this
threshold value should be large enough to ensure that no data objects are
allocated outside of the default data segment. If the /Gt option is not
specified, the data threshold will be 32767 bytes. You should only have to
use this option if you have data structures that exceed 32767 bytes.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The reason that Windows does not allow more than one instance of an
application containing multiple data segments to run is that the Windows
loader cannot fix up multiple instances of far pointers because the code is
shared among all instances of an application.
<P>
For more detailed information concerning multiple instances of large-model
programs, see article <B><A HREF="../WIN16SDK/Q90294.htm">Q90294</A></B>, here in the Microsoft Knowledge Base.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: IDE 1.00 1.50 debuggee<BR>
KBCategory: kbtool kbprb<BR>
KBSubcategory: WBDebug<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
