

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Performance Tuning the Jet Engine Per Instance in MFC </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q178942">
<META NAME="KBModify" CONTENT="1998/01/08">
<META NAME="KBCreate" CONTENT="1998/01/07">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  MFC does not document or directly expose any methods to manipulate the performance parameters of the Jet Database (DB) engine. However, if you are using DAO 3.5, you can gain access to the DB engine from within an MFC application and alter the perf...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAY5,QA1S,QALH,QAU3,QAMR,QAUD,QAHE,QBW7,QAI5,QALQ,QAH4,QAL3,QAZV,QBWG,QBXS V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Performance Tuning the Jet Engine Per Instance in MFC</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 8, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q178942</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC)
<LI>Microsoft Visual C++, 32-bit Editions, version 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
MFC does not document or directly expose any methods to manipulate the
performance parameters of the Jet Database (DB) engine. However, if you are
using DAO 3.5, you can gain access to the DB engine from within an MFC
application and alter the performance characteristics just for the instance
of the Jet engine your application is using. This method allows the user to
programatically set performance characteristics, which will apply only to
the specific application. For example, the MaxBufferSize could be set
during program startup.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To gain access to the functions that allow manipulation of Jet, you must
first get access to the DB engine. The undocumented function
AfxDaoGetEngine() returns a pointer to the current instance of the DB
engine. The function is found in Daocore.cpp:
<P>
<PRE>   DAODBEngine* AFXAPI AfxDaoGetEngine()
   {
     // Return DAODBEngine object for direct access
     return AfxGetDaoState()-&gt;m_pDAODBEngine;
   }

</PRE>The following line of code returns a pointer to the DB engine. No special
header files are required:
<P>
<PRE>   DAODBEngine* m_pDAODBEngine = AfxDaoGetEngine();

</PRE>Once you have a pointer to the DB engine, the DAO SDK function SetOption()
can be used to set performance parameters. These parameters only affect the
specific instance of the engine for your application. They do not affect
the default Jet performance parameters stored in the registry. The
following code examples show how to change some of the specific parameters:
<P>
<PRE>   // Change the MaxBufferSize to 128. When doing thousands of
   // inserts, this will restrict memory growth.
   COleVariant  vBufferSize((long)128, VT_I4);
   m_pDAODBEngine-&gt;SetOption( dbMaxBufferSize, vBufferSize );

   // Reduce the time to defer asynchronous flushes on a
   // database opened for exclusive use.
   COleVariant  vExclusiveAsyncDelay((long)10, VT_I2);
   m_pDAODBEngine-&gt;SetOption(dbExclusiveAsyncDelay,&amp;vExclusiveAsyncDelay);

   // Reduce the time to defer asynchronous flushes on a
   // database opened for shared use.
   COleVariant vSharedAsyncDelay((long)15, VT_I2);
   m_pDAODBEngine-&gt;SetOption(dbSharedAsyncDelay, &amp;vSharedAsyncDelay);

</PRE>NOTE: It is necessary to cast the first parameter in the constructor for
the COleVariant in order to avoid the "ambiguous call to overloaded
function" error at compile time.
<P>
The following values and their defaults can be changed:

<UL><LI>PageTimeout             = 5000
<LI>SharedAsyncDelay        = 100
<LI>ExclusiveAsyncDelay     = 2000
<LI>LockRetry               = 20
<LI>UserCommitSync          = Yes
<LI>ImplicitCommitSync      = NO
<LI>MaxBufferSize           = 0
<LI>MaxLocksPerFile         = 9500
<LI>LockDelay               = 100
<LI>RecycleLVs              = 0
<LI>FlushTransactionTimeout = 500
<P>
</UL><h3>References</h3>
 
<P>
Note: The best source for additional information on these settings is the
Access 97 Help Files. Search for the topic:
<P>
<PRE>   Initializing the Microsoft Jet 3.5 Database Engine Driver
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: defaults settings registry<BR>
Component         : dao jet<BR>
Technology        : kbmfc<BR>
Version           : WINNT:5.0<BR>
Platform          : winnt<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 8, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
