

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Comparing Binary Images of Same Project Builds </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q164151">
<META NAME="KBModify" CONTENT="1997/10/09">
<META NAME="KBCreate" CONTENT="1997/02/24">
<META NAME="Keywords" CONTENT="VCGenIss">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Sometimes you may need to compare the build images (EXE, DLL, etc.) of the same project that were built at different times. Since the images contain time and date stamps, a plain file compare reports the differences between the images. You can use ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAJQ,QAG7,QAEF,QACE,QAU3,QAMR,QAKR,QAHE,QAFH,QDH6,QBVV,QA9N,QANJ,QAA5,QBCU V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Comparing Binary Images of Same Project Builds</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 9, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q164151</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual C++, 32-bit Editions, versions 2.0, 2.1, 2.2, 4.0,
   4.1, 4.2, 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Sometimes you may need to compare the build images (EXE, DLL, etc.) of the
same project that were built at different times. Since the images contain
time and date stamps, a plain file compare reports the differences between
the images. You can use the DUMPBIN utility to generate the correct file
compare.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The time and date stamps can be removed from the built image without
removing relevant information (code and data) using the /RAWDATA switch
available in the DUMPBIN utility. Any file compare utility can then be used
on the DUMPBIN output as follows:
<P>
<PRE>   DUMPBIN  /RAWDATA  MyApp.EXE &gt; first.txt

</PRE>If Myapp.exe is built again at a different time, then use DUMPBIN as
follows:
<P>
<PRE>   DUMPBIN  /RAWDATA  MyApp.EXE &gt; second.txt

</PRE>You can now compare first.txt and second.txt using a file compare utility
like:
<P>
<PRE>       FC /B first.txt second.txt

</PRE>Run DUMPBIN in the resident directory of the image. The above procedure
applies to the Release build only because the Debug build records the time
and date stamp on the images (irrespective of /Zi or /Z7) and DUMPBIN does
not remove this information. If the predefined macros __DATE__ and __TIME__
are used in the source, the time and date stamp recorded in the images will
not be removed by DUMPBIN for the Release build. Under these circumstances,
you may use the /DISASM switch. However, the /DISASM switch removes the
time and date stamp, as well as the initialized data. This means that you
will not get a true image compare.
<P>
NOTE: There is no guarantee that Visual C++ will generate the same binary
image when building the same source files on successive builds. However,
you are guaranteed that the EXE (or DLL) will behave in precisely the same
manner under execution, all other things being equal. Compile and link
options and link order play a role in whether two binary images will
compare equally.
<P>
If you follow the procedures outlined above and the two images compare
equally, then the images are the same. If the two images do not compare
equally, then there is still uncertainty as to whether the images are the
same or not.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: DUMPBIN RAWDATA<BR>
Keywords          : VCGenIss<BR>
Version           : WINNT:2.0,2.1,2.2,4.0,4.1,4.2,5.0;<BR>
Platform          : NT WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 9, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
