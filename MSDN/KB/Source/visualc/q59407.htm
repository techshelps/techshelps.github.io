

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Inaccurate Representation of Large Double Values </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q59407 ">
<META NAME="KBModify" CONTENT="1997/07/24">
<META NAME="KBCreate" CONTENT="1990/03/07">
<META NAME="Keywords" CONTENT="CLIss kbfasttip">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  In Microsoft C, subtracting double values greater than or equal to 1.0E+025 may return inaccurate results.  CAUSE =====  This is expected behavior and is due to the imprecise nature of floating-point math. Anytime floating-point math uses large num...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAHH,QBFY,QANY,QAKD,QAAP,QAFO,QAKC,QAJQ,QAL3,QBC6,QA56,QA55,QAY5,QAUD,QAN2 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Inaccurate Representation of Large Double Values</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 24, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q59407 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft C/C++ Compiler (CL.EXE) included with:
   - Microsoft C for MS-DOS, versions 6.0, 6.0a, 6.0ax
   - Microsoft C for OS/2, versions 6.0, 6.0a
   - Microsoft C/C++ for MS-DOS, version 7.0
   - Microsoft Visual C++ for Windows, versions 1.0, 1.5
   - Microsoft Visual C++, 32-bit Edition, versions 1.0, 2.0, 4.0, 5.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
In Microsoft C, subtracting double values greater than or equal to
1.0E+025 may return inaccurate results.
<P>
<P><h2>CAUSE</h2>
 
<P>
This is expected behavior and is due to the imprecise nature of
floating-point math. Anytime floating-point math uses large numbers,
there will be rounding/truncation errors and errors introduced due to
imprecise representation of a result in binary format.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Because double values are only 15-digit precise, simple subtraction of
two large numbers can give unexpected results. The following sample
code demonstrates this behavior.
<P>
Double values less than 1.0E+25 may not experience the same problem.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   #include &lt;stdio.h&gt;

   double a = 1E+28, tmp = 9E+28;

   void main (void)
   {

      printf ("a = %le    tmp = %le\n", a, tmp);

      while (tmp &gt;= 1E+25) {
         tmp -= a;
         printf ("a = %le    tmp = %le\n", a, tmp);
      }
   }

</PRE>The above sample code produces the following output:
<P>
<PRE>a = 1.000000e+028    tmp = 9.000000e+028
a = 1.000000e+028    tmp = 8.000000e+028
a = 1.000000e+028    tmp = 7.000000e+028
a = 1.000000e+028    tmp = 6.000000e+028
a = 1.000000e+028    tmp = 5.000000e+028
a = 1.000000e+028    tmp = 4.000000e+028
a = 1.000000e+028    tmp = 3.000000e+028
a = 1.000000e+028    tmp = 2.000000e+028
a = 1.000000e+028    tmp = 1.000000e+028
a = 1.000000e+028    tmp = 1.319414e+013
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 8.00 8.00c 9.00<BR>
Keywords            : CLIss kbfasttip<BR>
Version             : 6.0 6.0a 6.0ax 7.0 1.0 1.5 2.0 4<BR>
Issue type          : kbprb<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 24, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
