

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Make VC++ Recognize File Extensions as C/C++ Files </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q181506">
<META NAME="KBModify" CONTENT="1998/02/20">
<META NAME="KBCreate" CONTENT="1998/02/20">
<META NAME="Keywords" CONTENT="CLIss VwbIss">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Microsoft's Visual C++ Integrated Development Environment (IDE) recognizes the following file extensions as C++ source files: .c, .cpp, and .cxx. In some cases, a programmer may want to use other file extensions for C++ files; for example, Unix C++...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBFY,QAOG,QAOT,QBWS,QABA,QASR,QAK6,QBAO,QA56,QA55,QAB5,QAIJ,QBIC,QAL0,QAJN V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Make VC++ Recognize File Extensions as C/C++ Files</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 20, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q181506</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Studio versions 97, 97sp1, 97sp2, 97sp3
<LI>Microsoft Visual C++, 32-bit Editions, versions 4.0, 4.0a, 4.1, 4.2,
   4.2b, 5.0, 5.0sp1, 5.0sp2, 5.0sp3
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Microsoft's Visual C++ Integrated Development Environment (IDE) recognizes
the following file extensions as C++ source files: .c, .cpp, and .cxx. In
some cases, a programmer may want to use other file extensions for C++
files; for example, Unix C++ source files often use the .cc extension.
<P>
Using the steps in this article, source files with other file extensions
may benefit from the Visual C++ IDE's syntax coloring, automatic
indentation, and other usage enhancements. This article describes how to
automatically compile such files as C/C++ and associate the C++ icon with
these files in Windows Explorer.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following procedure causes the Visual C++ IDE to recognize extensions
other than .c, .cpp, and .cxx as a C/C++ source file. These changes involve
altering registry settings.
<P>
WARNING: Using Registry Editor incorrectly can cause serious, system-wide
problems that may require you to reinstall Windows to correct them.
Microsoft cannot guarantee that any problems resulting from the use of
Registry Editor can be solved. Use this tool at your own risk.
<P>
Microsoft STRONGLY recommends saving the current registry settings before
starting this procedure. For additional information, please see the
following articles in the Microsoft Knowledge Base (the second link applies
to Windows 95 as well):
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../WINNT/Q103280.htm">Q103280</A></B>
   TITLE     : Using an Emergency Repair Disk Created by Windows NT

   ARTICLE-ID: <B><A HREF="../WINNT/Q164931.htm">Q164931</A></B>
   TITLE     : Using Regedit to Backup Your Windows NT Registry

</PRE>To start the Registry Editor:

<OL><P><LI>Close any running instances of Developer Studio.

<P><LI>On the Start menu, click Run.

<P><LI>Type "regedit" (without the quotation marks) and click OK to start the
   Registry Editor.
<P>
</OL>In the Registry Editor, repeat the following four steps for each new file
extension to associate with a C/C++ icon. These steps illustrate how to
associate the .cc file extension with the C++ source file icon:

<OL><P><LI>Right-click HKEY_CLASSES_ROOT and select New | Key.

<P><LI>A key name will appear; change "New Key #1" to ".cc" (the period is
   mandatory).

<P><LI>Click the new .cc key, then double-click Default in the right-hand pane
   of the Registry Editor.

<P><LI>In the Value Data field, type "cppfile" (without the quotation marks).
   Click OK.
<P>
</OL>NOTE: To associate a file extension with the C source file icon, use
"cfile" instead of "cppfile". The values "hppfile" and "hfile" associate
file extensions with C++ and C header file icons, respectively. (In Windows
Explorer, the appropriate icon should now accompany files with the
extension added in steps 1 through 4. Clicking the icon will launch Visual
C++. Don't do this just yet, though.)
<P>
The following steps apply to keys and values located on the home key. In
the Registry Editor, locate the user settings home key for Developer
Studio. For various versions, the home key is:
<P>
<PRE>   5.0 (which ships with Visual Studio 97)
      HKEY_CURRENT_USER\Software\Microsoft\DevStudio\5.0\
   4.x
      HKEY_CURRENT_USER\Software\Microsoft\Developer

</PRE></OL>The following registry keys cause the IDE to load the C/C++ compiler tool
for the specified file extensions (.cc illustrated):

<OL><P><LI>Locate the following keys under Build System\Components\Platforms:
<P>
<P><PRE>      Win32(ALPHA)\Tools\C/C++ Compiler for Alpha
      Win32(PowerPC)\Tools\C/C++ Compiler for PowerPC
      Win32(x86)\Tools\C/C++ Compiler for 80x86
</PRE><P>
   If WinCE 2.0 is installed, the following keys will also be present:
<P>
<P><PRE>      Win32(WCE x86em)\Tools\C++ Compiler for 80x86em (Emulation)
      Win32(WCE MIPS)\Tools\C/C++ Compiler Mips R4100
      Win32(WCE SH)\Tools\C/C++ Compiler for SH
</PRE>
<P><LI>Each of those keys has a setting called "Input_Spec". Double-click
   "Input_Spec"; then, in the Value Data field, add ";*.cc" to the end of
   the existing list of extensions. Click OK.
<P>
</OL>The following registry key determines the file extensions selected for
syntax coloring, smart indentation, and so on:

<OL><P><LI>Locate the key Text Editor\Tabs/Language Settings\C/C++.

<P><LI>Double-click the "FileExtensions" setting; add ";cc" to the end of the
   existing list of extensions. Click OK.

<P><LI>Close the Registry Editor.

<P><LI>Start Developer Studio and create a new file or open an existing one
   with the extension(s) just added. Syntax coloring and automatic
   indentation should be in effect.
<P>
</OL>NOTE: The new extensions will not appear in the "Files of type" list when
you click Open on the File menu. Use "All Files (*.*)" to view files with
nonstandard extensions. Alternatively, double-click the file from Windows
Explorer; once it loads into Visual C++, right-click inside the file's
window and select "Insert File into Project" to add the file to a project.
<P>
Although the IDE starts the C/C++ compiler tool for the file extensions
added in the steps above, the compiler needs to know whether to compile the
file as C or C++. The compiler normally compiles .c files as C, and
compiles .cpp and .cxx as C++. For all other extensions, the compiler needs
an explicit parameter: /TC compiles files as C, /TP compiles files as C++.
Each project that includes files with custom extensions needs an explicit
/TC or /TP parameter. The following steps illustrate how to do this:

<OL><P><LI>Open a project in Developer Studio.

<P><LI>Click Settings on the Project menu.

<P><LI>In the resulting dialog box, select the configuration and project.

<P><LI>Click the C/C++ tab.

<P><LI>In the Project Options text box at the bottom, add /TP or /TC to the
   end of the listed options. Click OK.
<P>
</OL>This setting treats ALL source files built by the CL compiler tool in the
project as C++ (/TP) or C (/TC) files (the project options cannot be edited
on a per-file basis). The entire project now uses either the C++ compiler
or the C compiler. To treat individual files in a project as C++ or C
source files, use the /Tp&lt;source file&gt; or /Tc&lt;source file&gt; settings. See
REFERENCES for more information on the use of compiler settings.
<P>
If necessary, a custom build step can launch the C/C++ compiler (CL.EXE)
with settings specific to a single file. This is less desirable, because
the custom build step requires explicitly listing all of the compiler
options. See REFERENCES for online documentation of instructions on adding
a custom build step.
<P>
<P><h2>REFERENCES</h2>
 
<P>
Visual C++ Programmer's Guide, Compiling and Linking, Details, Compiler
Reference.
<P>
Visual C++, Developer Studio Environment User's Guide, Working With
Projects, How Do I... Topics: Working With Projects, Customizing a Build
Process.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: kbdsstools<BR>
Keywords          : CLIss VwbIss<BR>
Version           : WINDOWS:97,97sp1,97sp2,97sp3; WINNT:4.0,4.0a,4.1,4.2,4.2b,5.0,5.0sp1,5.0sp2,5.0sp3<BR>
Platform          : WINDOWS winnt<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 20, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
