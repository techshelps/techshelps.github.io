

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: CFile::SetStatus Sets Archive Bit when Not Desired </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q117832">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1994/07/10">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Attempting to clear the archive bit of a file when the archive bit is already cleared causes the archive bit to be set.  CAUSE =====  This is expected behavior that results when the m_mtime member of the CFileStatus structure is not set to 0, indic...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAUR,QA2X,QADR,QAJX,QAEF,QBXS,QBVV,QBFY,QAKJ,QAU3,QAMR,QA56,QA55,QAY5,QAL3 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: CFile::SetStatus Sets Archive Bit when Not Desired</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q117832</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
7.00   | 1.00 1.50
MS-DOS | WINDOWS
kbprg kbprb
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC), included with:
<P>
<P><PRE>    - Microsoft C/C++ version 7.0
    - Microsoft Visual C++ for Windows, versions 1.0 and 1.5
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Attempting to clear the archive bit of a file when the archive bit is
already cleared causes the archive bit to be set.
<P>
<P><h2>CAUSE</h2>
 
<P>
This is expected behavior that results when the m_mtime member of the
CFileStatus structure is not set to 0, indicating that the time should be
updated. Because updating the time has the side effect of setting the
archive bit for a file, this action takes precedence over clearing the
archive bit when the bit was clear to begin with.
<P>
<P><h2>RESOLUTION</h2>
 

<OL><P><LI>If you want to clear only the archive bit, set the m_mtime member
   to 0, which indicates that you do not want to change the file time:
<P>
<P><PRE>      CFile::GetStatus("TEMP.DAT",fs);
      fs.m_mtime=0;
      fs.m_attribute = fs.m_attribute &amp; !CFile::archive;
      CFile::SetStatus("TEMP.DAT",fs);
</PRE>
<P><LI>Check to see whether the archive bit is clear instead of making a
   redundant call to clear it:
<P>
<P><PRE>      CFile::GetStatus("TEMP.DAT",fs);
      if(fs.m_attribute &amp; CFile::archive)
      {
<PRE></PRE>        fs.m_attribute = fs.m_attribute &amp; !CFile::archive;
        CFile::SetStatus("TEMP.DAT",fs);
      }

</PRE></OL><h2>MORE INFORMATION</h2>
 
<P>
To duplicate this behavior, create a test file called TEMP.DAT and run
the sample code below:
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>// Using the MS-DOS ATTRIB command, watch the archive bit toggle
// after each time you run the program.

   #define _DOS
   #include &lt;afx.h&gt;

   CFileStatus fs;

   void main(void) {
     CFile::GetStatus("TEMP.DAT",fs);
     fs.m_attribute = fs.m_attribute &amp; !CFile::archive;
     CFile::SetStatus("TEMP.DAT",fs);
   }

</PRE>This behavior does not occur with Visual C++ 32-bit Edition.
<P>
<P><h2>REFERENCES</h2>
 
<P>
The possible side effects of m_mtime on file attributes are discussed in
the "Class Library Reference" for Visual C++, version 1.5, page 411.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 7.00 1.00 1.50 2.00 2.50<BR>
KBCategory: kbprg kbprb<BR>
KBSubcategory: MfcFileIO<BR>
Keywords            : kb16bitonly<BR>
Technology          : kbMfc<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
