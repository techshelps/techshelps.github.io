

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: Cannot Access Static Data Members in Inline Assembly </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q88092 ">
<META NAME="KBModify" CONTENT="1997/07/21">
<META NAME="KBCreate" CONTENT="1992/08/17">
<META NAME="Keywords" CONTENT="CPPIss vcbuglist400 vcbuglist500">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  When trying to access static data members in a C++ program with inline assembly, the compiler may report the following errors:     error C2420: 'identifier' : illegal symbol in first operand 1    error C2415: improper operand type  The inline assem...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPF,QBFY,QAKD,QBW7,QAI5,QBA8,QA1S,QAYA,QAYY,QAH4,QAKP,QAYL,QBWG,QDKW,QBXT V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: Cannot Access Static Data Members in Inline Assembly</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 21, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q88092 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft C/C++ Compiler (CL.EXE) included with:
   - Microsoft C/C++ for MS-DOS, version 7.0
   - Microsoft Visual C++ for Windows, versions 1.0, 1.5
   - Microsoft Visual C++ 32-bit Edition, versions 1.0, 2.0. 2.1, 4.0, 4.1,
<P><PRE>     4.2, 5.0
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When trying to access static data members in a C++ program with inline
assembly, the compiler may report the following errors:
<P>
<PRE>   error C2420: 'identifier' : illegal symbol in first operand 1
   error C2415: improper operand type

</PRE>The inline assembler cannot access static data members within a class
member function. The sample code below demonstrates the problem.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the products listed above. We
are researching this problem and will post new information here in the
Microsoft Knowledge Base as it becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To access the static data member, assign the address of the data member to
a temporary variable. The inline assembler can then access the data by
loading the address from the temporary variable.
<P>
Below is some code that demonstrates the problem and workaround.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   /* Compile options needed: /AS  for 16-bit
   *                          none for 32-bit
   */

   #include &lt;stdio.h&gt;

   class sample
   {
   public:
      static int value;
      sample();
   };

   int sample::value = 9;

   sample::sample()
   {
        __asm mov value,3             // C2420 and C2415 here
        __asm mov sample::value,ax    // C2420, C2414, C2400 on
                                      // this line

   //  For 16-bit workaround, uncomment next three lines.
   //     void * valueptr=&amp;value;
   //     __asm mov bx, valueptr
   //     __asm mov [bx],3

   //  For 32-bit workaround, uncomment next three lines.
   //     void * valueptr=&amp;value;
   //     __asm mov ebx, valueptr
   //     __asm mov [ebx],3
   }

   int main( void )
   {
      sample aSample;
      printf( "aSample.value = %d.\n", aSample.value );
      return 0;
   }
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 8.00 8.00c 9.00 10.00 10.10 10.20<BR>
Keywords            : CPPIss vcbuglist400 vcbuglist500<BR>
Version             : 7.0 1.0 1.5 2.0 2.1 4.0 4.1 4.2<BR>
Platform            : MS-DOS NT WINDOWS<BR>
Issue type          : kbbug<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 21, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
