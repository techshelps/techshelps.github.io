

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: MeasureItem Not Called for Popup Item on Owner-Draw Menu </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q143209">
<META NAME="KBModify" CONTENT="1997/07/31">
<META NAME="KBCreate" CONTENT="1996/01/28">
<META NAME="Keywords" CONTENT="MfcUI kbcode kbprb kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The CMenu::MeasureItem() function for an owner-draw menu isn't called for those menu items that bring up submenus.  CAUSE =====  This is a limitation of the self-drawing capability of MFC owner-draw menus.  RESOLUTION  For owner-draw menus that con...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAVI,QAF0,QAGI,QBVV,QA4H,QBCF,QAYL,QAH4,QDL9,QBWQ,QBWO,QBWN,QBWR,QAIF,QBWP V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: MeasureItem Not Called for Popup Item on Owner-Draw Menu</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 31, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q143209</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00 1.50 1.51 1.52 | 1.00 2.00 2.10 2.20 4.00
<PRE>WINDOWS             | WINDOWS NT
</PRE>kbprg kbprb kbcode
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
<P>
<P><PRE>    - Microsoft Visual C++, 32-bit Edition, versions 1.0, 2.0, 2.1,
      2.2, 4.0
    - Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51, 1.52
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The CMenu::MeasureItem() function for an owner-draw menu isn't called for
those menu items that bring up submenus.
<P>
<P><h2>CAUSE</h2>
 
<P>
This is a limitation of the self-drawing capability of MFC owner-draw
menus.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
For owner-draw menus that contain sub-popup menus, handle the
WM_MEASUREITEM in the owning window. See the "Sample Code" section in this
article for an example.
<P>
<P><h2>STATUS</h2>
 
<P>
This behavior is by design.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
A menu item that brings up a submenu has no real ID associated with it.
Instead the ID for this popup placeholder is actually the HMENU for the
submenu associated with that item. As for all owner-draw menu items,
Windows will send a WM_MEASUREITEM message to the application, specifying
the address of a MEASUREITEMSTRUCT structure in lParam. The application
should fill in this structure with the dimensions of the menu item. Now
because the submenu item has an HMENU instead of an ID, this is the value
that is passed in the idFrom variable of this structure. Essentially, an
application that handles this message must recognize when this is an HWND
for a valid submenu item. As of MFC 4.0, MFC's implementation of
CWnd::OnMeasureItem() does not make this determination correctly.
<P>
An examination of the MFC source will reveal the problem. When
CWnd::OnMeasureItem() is called by the receipt of this message, it uses
FindPopupMenuFromID() to find the menu associated with a particular ID, so
that the call pMenu-&gt;MeasureItem(...) can be made. Unfortunately
FindPopupMenuFromID() does not check the case where the ID might be an
HMENU. It will always return NULL in this case; therefore, the call to
MeasureItem() will never be made.
<P>
<P><h3>Sample Code</h3>
 
<P>
The following sample code demonstrates how to implement OnMeasureItem when
the menu item in question is a submenu. m_hMenuSub is a member variable
that was initialized when the menu was created. If the item is not a
submenu, the MFC self-drawing menu code can still be used.
<P>
<PRE>/* Compile options needed:  Default
*/

void COwnerWindow::OnMeasureItem(int nIDCtl, LPMEASUREITEMSTRUCT
                                                  lpMeasureItemStruct)
{
    if ( lpMeasureItemStruct-&gt;CtlType == ODT_MENU &amp;&amp;
         IsMenu((HMENU)lpMeasureItemStruct-&gt;itemID) &amp;&amp;
         lpMeasureItemStruct-&gt;itemID == (UINT)m_hMenuSub )
    {
        // MFC's self-drawing won't work in this case
        // go ahead and handle it here
        lpMeasureItemStruct-&gt;itemWidth = 100;
        lpMeasureItemStruct-&gt;itemHeight = 20;
    }
    else
        // let MFC's self-drawing handle it
        CFrameWnd::OnMeasureItem(nIDCtl, lpMeasureItemStruct);
}
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 1.50 2.50 2.51 2.52 2.00 2.10 2.20 3.00<BR>
3.10 3.20 4.00<BR>
KBCategory: kbprg kbprb kbcode<BR>
KBSubcategory: MfcUI<BR>
Keywords          : MfcUI kbcode kbprb kbprg<BR>
Technology        : kbMfc<BR>
Version           : 1.00 1.50 1.51 1.52 | 1.00 2.00<BR>
Platform          : NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 31, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
