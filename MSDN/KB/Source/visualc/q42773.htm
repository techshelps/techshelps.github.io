

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Opening a C File When Disk Is Write-Protected </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q42773 ">
<META NAME="KBModify" CONTENT="1997/07/17">
<META NAME="KBCreate" CONTENT="1989/03/24">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Under MS-DOS, a program can open an existing file for both read and write when the floppy disk is write-protected. The following statement may be used to open the file:     handle = open(  a:\\test.dat , O_RDWR | O_TRUNC );  No error condition is r...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBFY,QBWS,QAAP,QAB4,QAHE,QAGB,QAEF,QAA1,QAY5,QAH4,QABI,QABH,QAC9,QBVV,QAX3 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Opening a C File When Disk Is Write-Protected</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 17, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q42773 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
5.10 6.00 6.00a 6.00ax 7.00 | 1.00 1.50
<PRE>MS-DOS                      | WINDOWS
</PRE>kbprg kbprb
<P>
<P>
 
The information in this article applies to:

<UL><LI>The C Run-time (CRT), included with:
<P>
<P><PRE>    - Microsoft C for MS-DOS, versions 5.1, 6.0, 6.0a, and 6.0ax
    - Microsoft C/C++ for MS-DOS, version 7.0
    - Microsoft Visual C++ for Windows, versionS 1.0 and 1.5
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Under MS-DOS, a program can open an existing file for both read and
write when the floppy disk is write-protected. The following statement
may be used to open the file:
<P>
<PRE>   handle = open( "a:\\test.dat", O_RDWR | O_TRUNC );

</PRE>No error condition is returned and no hard error occurs. Later,
however, when the program tries to write to the file handle or even to
close the file without writing, a hard error will occur with the
following message:
<P>
<PRE>   Writing protect error writing drive A:
   Abort, Retry, Fail?

</PRE><h2>CAUSE</h2>
 
<P>
This is not a problem with the open() function in the Microsoft C
run-time library. The low-level MS-DOS function call that is used to
implement open() does not check for a write-protect error. When the
file is to be closed by close(), the internal buffer has to be flushed
to the disk. No low-level MS-DOS function can close a file without
flushing its associated buffer.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
There is no direct way to detect the write-protect condition. An
indirect workaround is to open a file with the mode to be O_CREAT, as
follows:
<P>
<PRE>   open ( "a:\\chk00000.xxx", O_CREAT, S_IWRITE | S_IREAD) ;

</PRE>A hard error will occur, which can be captured by a user-implemented
and installed hard-error handler. This handler will override the
printing of the hard-error message on the user screen. The open()
function does return -1 when it regains the control from the
hard-error handle. If the file was opened successfully, it may be
removed at the end of the program.
<P>
<P><h3>Sample Code</h3>
 
<P>
The following sample program demonstrates checking of a write-
protected disk:
<P>
<PRE>/* Compile options needed: none
*/

#include &lt;fcntl.h&gt;
#include &lt;sys\types.h&gt;
#include &lt;sys\stat.h&gt;
#include &lt;io.h&gt;
#include &lt;stdio.h&gt;
#include &lt;dos.h&gt;

void far handler ( unsigned, unsigned, unsigned far * ) ;

#define PROTECTED 1
#define OTHER     2

int Flag = 0 ;

char * ChkName = "a:\\qwlbqwsi.ufp" ;  /* dummy file name */

void main( )
</PRE>{
<PRE>   int FileHandle;

   _harderr ( handler );           /* set up hard-error handler */

   FileHandle = open ( ChkName, O_CREAT, S_IWRITE | S_IREAD );

   if( FileHandle == -1 )          /* check write-protection */
   {
       switch( Flag )              /* may be set by handler */
       {
          case PROTECTED :
             puts( "Disk in drive A: is write-protected." );
             break;
          case OTHER :
             puts( "Another hard-error has occurred." );
             break;
          default :
            puts( "Error opening file (non hard-error.)" );
       }
   }
   else
   {
       puts( "Disk is not write-protected." );
       close( FileHandle );
       remove( ChkName );          /* delete the file */
   }
}

/* Hard error routine should be as short as possible */

void far handler ( unsigned deverror, unsigned errcode,
                   unsigned far *devhdr )
{
   if( errcode == 0 )
       Flag = PROTECTED;
   else
       Flag = OTHER;              /* like drive door is open */

   _hardretn( 0 );
</PRE>}
<P>
NOTE: The argument 0 to _hardretn() is not significant in this
program. Please refer to your Microsoft C run-time library reference
manual for more specific information regarding the _hardretn()
function.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 1.50 5.10 6.00 6.00a 6.00ax 7.00<BR>
KBCategory: kbprg kbprb<BR>
KBSubcategory: CRTIss<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 17, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
