

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How To Get 32-bit Scroll Position During Scroll Messages </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q152252">
<META NAME="KBModify" CONTENT="1997/10/10">
<META NAME="KBCreate" CONTENT="1996/06/08">
<META NAME="Keywords" CONTENT="MfcUI kbhowto kbprg kbui">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The current scroll bar position accompanying the SB_THUMBTRACK and SB_THUMBPOSITION type of scroll messages is only 16-bits wide. Functions such as GetScrollPos, SetScrollPos, GetScrollRange, and SetScrollRange can handle 32-bit value scroll-box po...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBXQ,QACI,QAJP,QAEV,QAYC,QAGI,QALQ,QAYY,QAIH,QBXS,QBWP,QA6A,QA3P,QAY5,QAY0 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How To Get 32-bit Scroll Position During Scroll Messages</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q152252</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
2.00 2.10 2.20 4.00 4.10
WINDOWS NT
kbprg kbui kbhowto
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC), included with:
   Microsoft Visual C++, 32-bit Edition, versions 2.0, 2.1, 2.2, 4.0, 4.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The current scroll bar position accompanying the SB_THUMBTRACK and
SB_THUMBPOSITION type of scroll messages is only 16-bits wide. Functions
such as GetScrollPos, SetScrollPos, GetScrollRange, and SetScrollRange can
handle 32-bit value scroll-box positions. This article discusses how the
GetScrollInfo call can be used to retrieve 32-bit scroll position during
scroll messages.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
One of the arguments to the MFC scroll message handlers, OnHScroll and
OnVScroll, is the scroll box position. This argument is meaningful only in
the case of scroll messages with scroll bar code SB_THUMBPOSITION and
SB_THUMBTRACK. This value, even though of type UINT, is really of type
short int. In other words, the scroll thumb position is only 16-bits wide.
This behavior occurs because Windows sends the thumb position in the High
Word of WPARAM accompanying the scroll message.
<P>
To obtain 32-bit scroll positions, the OnxScroll handler should make a call
to GetScrollInfo with the mask set to SIF_TRACKPOS. The immediate position
of the scroll thumb is returned in the nTrackPos member of the SCROLLINFO
structure passed in to GetScrollInfo.
<P>
This functionality was embedded in MFC 4.0 classes and was handled by the
function CWnd::OnWndMsg. However, this gave rise to other problems. As a
consequence, the functionality was withdrawn in MFC 4.1 and it was left to
the user to extract 32-bit values for the scroll box. For more information
on this subject, please see the following article in the Microsoft
Knowledge Base:
<P>
<PRE>   ARTICLE ID: <B><A HREF="../VISUALC/Q147684.htm">Q147684</A></B>
   TITLE     : BUG: Sending WM_xSCROLL Messages Causes Invalid ASSERT

</PRE>This method of extracting 32-bit scroll box positions works only in those
scroll messages that are sent to a window when the user grabs the thumb and
drags it. It is not possible to obtain 32-bit scroll box position in cases
of programmatically sent SB_THUMBTRACK and SB_THUMBPOSITION scroll
messages. First, the 32-bit information cannot be packed into the WPARAM of
the messages because only the High Word contains the scroll position.
Second, the nTrackPos member of the SCROLLINFO structure maintained for
scroll bars cannot be set programmatically. Any calls to SetScrollInfo to
set the immediate scroll positions are ignored by the operating system.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   void CMyWnd::OnHScroll(UINT nSBCode, UINT nPos, CScrollBar* pScrollBar)
   {
       if(nSBCode == SB_THUMBTRACK || nSBCode == SB_THUMBPOSITION)
       {
       // First determine if the user scrolled a scroll bar control
       // on the window or scrolled the window itself
           HWND hWndScroll;
           if ( pScrollBar == NULL )
               hWndScroll = m_hWnd;
           else
               hWndScroll = pScrollBar-&gt;m_hWnd;

           SCROLLINFO info;
           info.cbSize = sizeof(SCROLLINFO);
           info.fMask = SIF_TRACKPOS;
           ::GetScrollInfo(hWndScroll, SB_HORZ, &amp;info);

           nPos = info.nTrackPos;
       }

      //......
      //......
   }
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 2.00 2.10 2.20 4.00 4.10 3.00 3.10 3.20 4.00<BR>
                            4.10 kbinf<BR>
KBCategory: kbprg kbui kbhowto<BR>
KBSubcategory: MfcUI<BR>
Keywords          : MfcUI kbhowto kbprg kbui<BR>
Technology        : kbMfc<BR>
Version           : 2.00 2.10 2.20 4.00 4.10<BR>
Platform          : NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
