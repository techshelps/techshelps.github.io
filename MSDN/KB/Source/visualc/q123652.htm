

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Update() Fails to Write Changed Text Field </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q123652">
<META NAME="KBModify" CONTENT="1997/09/18">
<META NAME="KBCreate" CONTENT="1994/12/06">
<META NAME="Keywords" CONTENT="MfcDatabase kbbuglist kbfixlist kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The CRecordset::Update() function fails to correctly update a text field if that field is changed from a null value to a non-null value. The Update() function may return FALSE or, if the dirty flag is set for the field, the Update() function may re...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QAY5,QA7O,QA7N,QBXS,QAXB,QAUD,QAC1,QBFY,QA56,QA55,QAHE,QBV8,QAB9,QATX V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Update() Fails to Write Changed Text Field</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q123652</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
2.00
WINDOWS NT
kbprg kbfixlist kbbuglist
<P>
 
The information in this article applies to:
<P>
<PRE>   The Microsoft Foundation Classes (MFC) included with:
     - Microsoft Visual C++, 32-bit Edition, version 2.0
</PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The CRecordset::Update() function fails to correctly update a text field if
that field is changed from a null value to a non-null value. The Update()
function may return FALSE or, if the dirty flag is set for the field, the
Update() function may return TRUE but a null value will be written to the
record instead of the expected non-null value.
<P>
For example, the following code worked with Visual C++ version 1.50 or
1.51, but it may fail in Visual C++ version 2.0 given the conditions
described above:
<P>
<PRE>   recordset.Edit();
   recordset.Field1String="SomeText";
   recordset.Update();

</PRE><h2>CAUSE</h2>
 
<P>
The RFX_Text() function, which maps a CString to a text field, has changed
in Visual C++ version 2.0. In Visual C++ version 1.51, you'll see the
following code in the MarkForUpdate operation of the RFX_Text() function:
<P>
<PRE>  case CFieldExchange::MarkForUpdate:
        {
            if (value.IsEmpty())
                pFX-&gt;m_prs-&gt;SetFieldFlags(nField,
                    AFX_SQL_FIELD_FLAG_NULL, pFX-&gt;m_nFieldType);
            else
                pFX-&gt;m_prs-&gt;ClearFieldFlags(nField,
                    AFX_SQL_FIELD_FLAG_NULL, pFX-&gt;m_nFieldType);
            ...

</PRE>This code was removed in Visual C++ version 2.0. The code checks to see if
a CString is empty and sets or resets the null flag accordingly. Without
this code, the null flag for a field will remain set even though you may
change the contents of a CString field variable. Because this code is no
longer present in the Visual C++ version 2.0 database classes code, you
will have to set or reset the null flag for a text field in your code.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
If you use a CRecordView for retrieving data, you won't notice the bug
because a CRecordView sets or resets a field's null flag depending on
whether a user has entered text into the edit control representing that
field. The DDX_FieldText() function does the work of setting the field's
null flag.
<P>
For example, in the AfxFieldText() function, which gets called from the
DDX_FieldText() functions, you'll see this code:
<P>
*****
BOOL AFXAPI AfxFieldText(CDataExchange* pDX, int nIDC, void* pv,
<PRE>    CRecordset* pRecordset)
</PRE>{
<PRE>    ASSERT_VALID(pRecordset);

    HWND hWndCtrl = pDX-&gt;PrepareEditCtrl(nIDC);
    char szT[2];
    if (pDX-&gt;m_bSaveAndValidate)
    {
        ::GetWindowText(hWndCtrl, szT, sizeof(szT));
        if (szT[0] == '\0')
        {
            if (pRecordset-&gt;IsFieldNullable(pv))
            {
                pRecordset-&gt;SetFieldNull(pv);
                return TRUE;
            }
        }
        else
            pRecordset-&gt;SetFieldNull(pv, FALSE);
    }
    else
    {
        if (!pRecordset-&gt;IsOpen() || pRecordset-&gt;IsFieldNull(pv))
        {
            szT[0] = '\0';
            AfxSetWindowText(hWndCtrl, szT);
            return TRUE;
        }
    }
    return FALSE;
</PRE>}
*****
<P>
You can see how the null flag for the field is set or reset. You can write
similar code to handle setting or resetting the null flag in your code.
<P>
As an alternative, you can create a new RFX function, and insert the code
shown above for the MarkForUpdate operation. Replace the call to RFX_Text()
in your CRecordset's DoFieldExchange() function with your new RFX function.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. This bug was corrected in Visual C++ 2.1.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about Record Field Exchange (RFX) functions see the
following references:
<P>
<PRE>    MFC Technote #43 - "RFX Routines"
    MFC Encyclopedia articles on RFX in the online books
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 2.00 3.00<BR>
KBCategory: kbprg kbfixlist kbbuglist<BR>
KBSubcategory: MfcDatabase<BR>
Keywords          : MfcDatabase kbbuglist kbfixlist kbprg<BR>
Technology        : kbMfc<BR>
Version           : 2.00<BR>
Platform          : NT WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
