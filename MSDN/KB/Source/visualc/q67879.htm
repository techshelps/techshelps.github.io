

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INFO: scanf() Format Specifications and Syntax </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q67879 ">
<META NAME="KBModify" CONTENT="1997/09/04">
<META NAME="KBCreate" CONTENT="1990/12/22">
<META NAME="Keywords" CONTENT="CRTIss kbfasttip">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  In Microsoft C, the scanf() format specifier for a string is generally specified with the  %s  specifier. However,  %s  is a shorthand notation for the specifier that the run-time library actually uses.  Because  %s  causes the library to read the ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QATX,QBHQ,QBFY,QBFN,QAYY,QAWN,QAGX,QAUD,QAP2,QAKE,QDNG,QBWP,QA4B,QAYL,QANE V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INFO: scanf() Format Specifications and Syntax</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 4, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q67879 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>The C Run-time (CRT) included with:
   - Microsoft C for MS-DOS, versions 6.0, 6.0a, 6.0ax
   - Microsoft C for OS/2, versions 6.0, 6.0a
   - Microsoft C/C++ for MS-DOS, version 7.0
   - Microsoft Visual C++ for Windows, versions 1.0, 1.5
   - Microsoft Visual C++ 32-bit Edition, versions 1.0, 2.0, 4.0, 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft C, the scanf() format specifier for a string is generally
specified with the "%s" specifier. However, "%s" is a shorthand notation
for the specifier that the run-time library actually uses.
<P>
Because "%s" causes the library to read the input string until it finds
some white space, the equivalent format specifier is "%[^\0x20\t\n]", which
instructs the library to read the string until it encounters a space
character (\0x20), a tab character (\t), or a newline character (\n).
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The table below presents some examples of different uses for the string
type.
<P>
<PRE>   Format
   Specifier   Usage
   ------------------------------------------------------------------

   %[a-z]      Read the input string until the library encounters a
               character other than a lowercase letter ("abc...z").

   %[^a-z]     Read the input string until the library encounters a
               lowercase letter.

   %[]]        According to the ANSI specification, read a series of
               right bracket (]) characters from the input string.

   %[^]]       Read the input string until the library encounters a
               right bracket character.

   %*[^%]      Scan the input string (without storing it in a
               variable) until the library encounters a percent sign
               (%) character. (The asterisk "*" instructs the compiler
               to scan the string without storing it in a variable.)

   %[-af-k]    Read the input string until the library encounters a
               character other than a hyphen (-), a lowercase "a", or
               a character between the lowercase "f" and lowercase "k"
               characters (fghijk).

   %[]         Illegal -- unpredictable results. The compiler does not
               detect this error because it is in a parameter string.

   %[^]        Illegal -- unpredictable results. The compiler does not
               detect this error because it is in a parameter string.

   %40c        Read 40 characters from the input string. [The run-time
               library does not automatically append a null terminator
               to the string, nor does reading 40 characters
               automatically terminate the scanf() function. Because the
               library uses buffered input, you must press the ENTER key
               to terminate the string scan. If you press the ENTER before
               the scanf() reads 40 characters, it is displayed normally,
               and the library continues to prompt for additional input
               until it reads 40 characters.]'

   %[^.-]      Read the input string until the library encounters a
               period (.) or a hyphen (-).
</PRE> 
<PRE>Keywords          : CRTIss kbfasttip
Version           : MS-DOS:6.0,6.00a,6.00ax,7.0; OS/2:6.00a,6.0;  WINDOWS:1.0,1.5; WINDOWS NT:1.0,2.0,4.0,5.0
Platform          : MS-DOS NT OS/2 WINDOWS
Issue type        : kbinfo</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 4, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
