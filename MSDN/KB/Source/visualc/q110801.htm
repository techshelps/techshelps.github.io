

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: Contain Sample Draws Incorrectly with In-place Server </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q110801">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1994/01/28">
<META NAME="Keywords" CONTENT="kb16bitonly MfcOLE">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The Contain sample step 2, which is included with Visual C++ version 1.5 for Windows, has a bug that causes incorrect drawing of the OLE object when the server is in-place activated (not when it is out-of-place activated).  The problem is apparent ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAW6,QA9Q,QAPN,QAH4,QAPF,QAKP,QAAP,QBSO,QABO,QDNY,QASR,QALZ,QAB5,QDIX,QDL9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: Contain Sample Draws Incorrectly with In-place Server</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q110801</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
<P><PRE>    - Microsoft Visual C++ for Windows, version 1.5
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The Contain sample step 2, which is included with Visual C++ version 1.5
for Windows, has a bug that causes incorrect drawing of the OLE object
when the server is in-place activated (not when it is out-of-place
activated).
<P>
The problem is apparent after the embedded OLE object is shrunk and
then reactivated. When the user starts drawing in the embedded object
again, a shaded region will be drawn with a sizing rectangle which is
the size and location of the embedded object before it was resized.
<P>
<P><h2>CAUSE</h2>
 
<P>
Step 2 of the Contain sample is intended to show how to do efficient
redrawing and repainting with an OLE Container application. The cause
of the problem is in the code which has been implemented to resize the
OLE object properly when an out-of-place server has resized the view.
<P>
Step 2 correctly implements this for an out-of-place server. The
Contain tutorial in the OLE 2 Classes Manual mentions HIERSVR as an
example. However, if an in-place activated server is used to embed an
OLE object then the resizing code is incorrect.
<P>
If the server is in-place activated then there is no need to resize
the OLE object. The current implementation will again resize the OLE
object by retrieving the extents from the server. In the case of an
in-place activated server, the extents are not likely to change and the
object will be drawn with its old size.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To fix the problem, make the following code change:
<P>
On Page 37 of "OLE 2 Classes" or in the file CNTRITEM.CPP change:
<P>
<PRE>      void CCntrItem::UpdateFromServerExtent()
      {
        ...
   &gt;&gt;&gt;      if (size != m_rect.Size())
     ...

   -to-

      if (size != m_rect.Size() &amp;&amp; !IsInPlaceActive())

</PRE><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in the Contain sample of
the Microsoft Foundation Classes version 2.5. We are researching this
problem and will post new information here in the Microsoft Knowledge
Base as it becomes available.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: shaded re-size sizing<BR>
Keywords            : kb16bitonly MfcOLE<BR>
Technology          : kbole kbmfc<BR>
Version             : 1.5<BR>
Issue type          : kbbug<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
