

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Using CString or Collection Class Links in CWinApp Code </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q107436">
<META NAME="KBModify" CONTENT="1997/09/16">
<META NAME="KBCreate" CONTENT="1993/11/18">
<META NAME="Keywords" CONTENT="kb16bitonly MfcMisc kbbuglist kbfasttip kbfixlist kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Using a CString object or collection object (CObList, CStringArray, and so forth) in an application forces the code for CWinApp to be linked into the application whether or not a CWinApp object is defined. The CWinApp code requires that SHELL.LIB a...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QAUD,QAPN,QAE2,QAAP,QAB4,QAKP,QAW6,QAWM,QAR4,QBIC,QBFY,QA63,QAY4,QABG V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Using CString or Collection Class Links in CWinApp Code</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 16, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q107436</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00
WINDOWS
kbprg kbfixlist kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
<P><PRE>    - Microsoft Visual C++ for Windows, version 1.0
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Using a CString object or collection object (CObList, CStringArray,
and so forth) in an application forces the code for CWinApp to be
linked into the application whether or not a CWinApp object is
defined. The CWinApp code requires that SHELL.LIB and COMMDLG.LIB be
specified in the link options.
<P>
If you are not linking with SHELL.LIB and COMMDLG.LIB, and you use a
CString or collection object without a CWinApp object, you will
receive the following linker errors:
<P>
<PRE>   error L2029: 'GETFILETITLE' : unresolved external
   error L2029: 'REGSETVALUE' : unresolved external
   error L2029: 'REGQUERYVALUE' : unresolved external
   error L2029: 'DRAGFINISH' : unresolved external
   error L2029: 'DRAGQUERYFILE' :unresolved external

</PRE><h2>CAUSE</h2>
 
<P>
The problem described above is caused by a compiler/linker bug. To
understand the problem, consider the code:
<P>
<PRE>   extern int somevariable;
   __inline void func(){ somevariable=1;}
   void main(){ return;}

</PRE>If the code above is compiled with "/c /AM /Z7" or with "/c /f- /AL"
and then linked, the unresolved external linker error (L2029) occurs.
The linker is searching for the "somevariable" variable even though
the func() function isn't referenced and tries to link it into the
application.
<P>
The Microsoft Foundation Class (MFC) libraries do something similar in
the AFXWIN.INL file located in the \MSVC\MFC\INCLUDE directory. The
code is as follows:
<P>
<PRE>   _AFXWIN_INLINE CWinApp* AFXAPI AfxGetApp()
     { return afxCurrentWinApp; }
   _AFXWIN_INLINE HINSTANCE AFXAPI AfxGetInstanceHandle()
        { ASSERT(afxCurrentInstanceHandle != NULL);
          return afxCurrentInstanceHandle; }
   _AFXWIN_INLINE HINSTANCE AFXAPI AfxGetResourceHandle()
     { ASSERT(afxCurrentResourceHandle != NULL);
       return afxCurrentResourceHandle; }
   _AFXWIN_INLINE void AFXAPI AfxSetResourceHandle(HINSTANCE hInstResource)
     { ASSERT(hInstResource != NULL); afxCurrentResourceHandle =
       hInstResource; }
  _AFXWIN_INLINE const char* AFXAPI AfxGetAppName()
     { ASSERT(afxCurrentAppName != NULL); return afxCurrentAppName; }

</PRE>Therefore, modules compiling with AFXWIN.INL can force the CWinApp
code to be linked into an application.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To work around this problem, do one of the following:

<UL><LI>Link with SHELL.LIB and COMMDLG.LIB and ignore the fact that some
   extra code will be linked into your application.
<P>
   -or-

<LI>Migrate your application to MFC by using a CWinApp object.
<P>
</UL><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem with Microsoft Foundation
Classes version 2.0. This problem has been corrected in version 2.5 of
the Microsoft Foundation Classes, which is included with Visual C++
version 1.5.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To reproduce the problem, compile and link the sample program below:
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>/* Compile options needed:  /AM /GA
</PRE>*  Link options needed: link without SHELL.LIB and COMMDLG.LIB
<PRE>*               link with MAFXCW.LIB
*/

#include &lt;afxwin.h&gt;
void main(void)
</PRE>{
<PRE>        CString func("hello");
}

Additional Reference Words: 1.00 2.00

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbprg kbfixlist kbbuglist kbfasttip<BR>
KBSubcategory: MfcMisc<BR>
Keywords          : kb16bitonly MfcMisc kbbuglist kbfasttip kbfixlist kbprg<BR>
Technology        : kbMfc<BR>
Version           : 1.00<BR>
Platform          : WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 16, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
