

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INFO: Declaring a Pointer to a Function: C4071, C4001, or C4220 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q49064 ">
<META NAME="KBModify" CONTENT="1997/09/02">
<META NAME="KBCreate" CONTENT="1989/09/26">
<META NAME="Keywords" CONTENT="CLngIss kbcode kbfasttip">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  In Microsoft C, the old method of declaring a pointer to a function,     type (*ptr)();    ptr = function;  causes the following compiler warnings when compiling with the  /W3  option in C versions 6.0, 6.0a, and 6.0ax:     C4071: 'ptr' : no functi...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB4,QBFY,QAY5,QBV8,QAB9,QAO3,QAO2,QAHE,QBWP,QA56,QA55,QAMB,QAEF,QDL9,QBWQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INFO: Declaring a Pointer to a Function: C4071, C4001, or C4220</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 2, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q49064 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Microsoft C for MS-DOS, versions 5.1, 6.0, 6.0a, 6.0ax
<LI>Microsoft C/C++ for MS-DOS, version 7.0
<LI>Microsoft Visual C++ for Windows, versions 1.0, 1.5
<LI>Microsoft Visual C++ 32-bit Edition, versions 1.0, 2.0, 2.1, 4.0, 5.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
In Microsoft C, the old method of declaring a pointer to a function,
<P>
<PRE>   type (*ptr)();
   ptr = function;

</PRE>causes the following compiler warnings when compiling with the "/W3"
option in C versions 6.0, 6.0a, and 6.0ax:
<P>
<PRE>   C4071: 'ptr' : no function prototype given

</PRE>Microsoft C/C++ version 7.0 generates the following warning when the
"/W4" option is used:
<P>
<PRE>   C4001: nonstandard extension [...] was used

</PRE>Visual C++, 16- and 32-bit editions, versions 1.0 and above generate the
following warning when the "/W4" option is used:
<P>
<PRE>   C4220: varargs matches remaining parameters

</PRE><h2>RESOLUTION</h2>
 
<P>
Use one of the following methods to avoid the warning message:

<OL><P><LI>Prototype the function with a complete argument list and then specify
</OL>actual parameters when declaring the pointer, as follows:
<P>
<PRE>      type function(parameter_list);
      type (*ptr)(parameter_list);
      ptr = function;

</PRE></OL>Note: The parameter list must be exactly the same parameter list with which
the function was declared.

<OL><P><LI>Adjust the warning level (i.e., /W1, /W2, etc.).
<P>
<P>
</OL>6)  Replace the first sentence of the MORE INFORMATION section with the
following:
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following program will generate a warning when compiled with the
warning level set as specified by the "compile options needed" comment. To
eliminate the warning use the prototype which is shown in the comment.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>  /* Compile options needed: /W3 - Microsoft C version 6.xx
                             /W4 - Microsoft C/C++ version 7.0, Visual C++,
                                   all versions
  */

  #include &lt;stdio.h&gt;

  void main (void)
  {
     /* Declare 'fun_ptr' as a pointer to a function  */
     /* Use the following line to correct the warning */
     /* int (*fun_ptr)(const char *, ... ); */
     int (*fun_ptr)();
     int other_args;

     /* Assign pointer to the specific function, 'printf' */
     fun_ptr = printf;

     /* Standard usage in calling environment */
     fun_ptr("format string goes here", other_args);
  }
</PRE></OL> 
<PRE>Keywords          : CLngIss kbcode kbfasttip
Version           : MS-DOS:5.1,6.0,6.00a,6.00ax,7.0; WINDOWS:1.0,1.5; WINDOWS  NT:1.0,2.0,2.1,4.0,5.0
Platform          : MS-DOS NT WINDOWS
Issue type        : kbinfo</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 2, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
