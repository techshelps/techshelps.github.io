

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: L1103 Error when Initializing __huge Data Array </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q116372">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1994/06/16">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  When you build a project containing an initialized huge array, the linker generates this error message:     L1103: TEST5_DATA : attempt to access data outside segment bounds  TEST is the name of the source file where the initialization occurred.  W...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAVW,QAVX,QAH4,QBFY,QAB4,QAKP,QA4Q,QAPF,QAAP,QAYL,QDKW,QAI4,QAYY,QAO4,QAMA V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: L1103 Error when Initializing __huge Data Array</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q116372</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00 1.50
WINDOWS
kbprg kbbuglist kberrmsg
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft C/C++ Compiler (CL.EXE), included with:
   Microsoft Visual C++ for Windows, version 1.0 and 1.5
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When you build a project containing an initialized huge array, the linker
generates this error message:
<P>
<PRE>   L1103: TEST5_DATA : attempt to access data outside segment bounds

</PRE>TEST is the name of the source file where the initialization occurred.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
To work around this problem:

<UL><LI>Initialize smaller memory objects, using pointers to reference them (see
   the TEST2.C sample below).
<P>
   -or-

<LI>Initialize the variable members within the executable code.
<P>
   -or-

<LI>Initialize the variable members within the executable code using a file
   to set data values (No sample provided).
<P>
</UL><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. We are researching this problem and will
post new information in the Microsoft Knowledge Base as it becomes
available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
This problem occurs only if an element that is near the 64K boundary of the
array is initialized. In the sample code below, initializing the member
"a[0].b" causes the error to occur:
<P>
<P><h3>Sample Code</h3>
 
<P>
*\
<P>
The following code sample does reproduce the problem.
<P>
<PRE>// TEST1.C
</PRE>struct test {
<PRE>    int a[32767];
    char b;
</PRE>};
<P>
struct test _huge a[2] = {{{1,2,3},{'a'}}, {{11,12,13},{'b'}}};
<P>
<PRE>void main() {}


</PRE>The following code samples do not reproduce the problem:
<P>
<PRE>// TEST2.C
int x[32767] = {1,2,3};
int y[32767] = {11,12,13};

</PRE>struct test {
<PRE>    int *a;
    char b;
</PRE>};
<P>
struct test _huge a[2] = {{x,'a'}, {y,'b'}};
<P>
<PRE>void main() {}


// TEST3.C
</PRE>struct test {
<PRE>    int a[32767];
    char b;
</PRE>};
<P>
struct test _huge a[2] = {0};  //Initialization prevents L1072 error
<P>
<PRE>void main() {
   a[0].a[0] = 1;
   a[0].a[1] = 2;
   a[0].a[2] = 3;
   a[0].b = 'a';

   a[1].a[0] = 11;
   a[1].a[1] = 12;
   a[1].a[2] = 13;
   a[1].b = 'b';
</PRE>}
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 1.50 7.00 8.00 8.00c memory model<BR>
initialize<BR>
KBCategory: kbprg kbbuglist kberrmsg<BR>
KBSubCategory: CLIss<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
