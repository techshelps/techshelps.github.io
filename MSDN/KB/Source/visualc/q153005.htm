

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Longjmp Inside a _try Block Fails on PowerPC </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q153005">
<META NAME="KBModify" CONTENT="1997/07/25">
<META NAME="KBCreate" CONTENT="1996/06/26">
<META NAME="Keywords" CONTENT="VCPowerPC">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  A program that contains a longjmp called inside a _try block may not call a _finally block. The sample code below is verified to work consistently on Alpha, MIPS and Intel platforms. It fails only on Power PC.  WORKAROUND  The solution is to includ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAHC,QAY5,QAH4,QDKW,QBFY,QAPN,QAMB,QAJ9,QAJG,QAGI,QAA8,QAB9,QDL9,QBXT,QBWQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Longjmp Inside a _try Block Fails on PowerPC</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 25, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q153005</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft C/C++ Compiler (CL.EXE) included with:
   - Microsoft Visual C++, 32-bit Edition, version 4.1 on the following
<P><PRE>     platform:
     - PowerPC
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
A program that contains a longjmp called inside a _try block may not call a
_finally block. The sample code below is verified to work consistently on
Alpha, MIPS and Intel platforms. It fails only on Power PC.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
The solution is to include the setjmpex.h file instead of setjmp.h. The
latter provides consistent behavior on all platforms, but may cause a
performance degradation. Note: either setjmp.h or setjmpex.h may be
included, but not both, because each defines the setjmp macro in a
different way.
<P>
<P><h2>STATUS</h2>
 
<P>
This behavior is by design.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The on-line documentation claims the following:
<P>
<PRE>   "Exiting a try-finally statement using a return statement or the
   longjmp run-time function is considered abnormal termination. It is
   illegal to jump into a __try statement, but legal to jump out of one."

</PRE>Consequently, a longjmp within a _try block should cause the _finally to be
executed.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   /* Compile options needed:
   */

   #include &lt;stdio.h&gt;
   #include &lt;stdlib.h&gt;
   //#include &lt;setjmpex.h&gt;  // uncomment this line for the workaround
   #include &lt;setjmp.h&gt; // comment this line out for the workaround
   #include &lt;windows.h&gt;

   CRITICAL_SECTION    cs;
   jmp_buf             jmpbuf;

   void main()
   {
        int  i = 0, j;
        int  hits = 0;

        if(setjmp(jmpbuf))
        {
             hits += 1;
             i = 0;
             printf("\n\n Jump.....\n\n");
        }

        while(1)
        {
             for(j = 0; j &lt; 10; j++)
                  printf("%d ", i++);
             _try
             {
                  longjmp(jmpbuf, 1);
             }
             _finally
             {
                  printf("\n\nInside finally....\n");
             }
        }
   }
</PRE> 
<PRE>Keywords          : VCPowerPC
Version           : 4.1
Platform          : NT WINDOWS
Issue type        : kbprb
Solution Type     : kbfix</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 25, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
