

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Messagebox Shows in DDX_FieldCBString &amp; DDX_FieldLBString </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q143330">
<META NAME="KBModify" CONTENT="1997/09/19">
<META NAME="KBCreate" CONTENT="1996/01/31">
<META NAME="Keywords" CONTENT="MfcDAO vcbuglist400 vcfixlist410 kbprg kbbuglist kbfixlist">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  When you map a control to a recordset variable by using DDX_FieldCBString or DDX_FieldLBString, the following message may appear in a messagebox when UpdateData() is called:     Please enter no more than 0 characters.  CAUSE =====  The DDX_FieldCBS...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAKD,QAY5,QBXT,QA5V,QA4Q,QAR4,QABI,QAIB,QAGI,QBV8,QAB9,QAYL,QAPF,QAH4,QABH V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Messagebox Shows in DDX_FieldCBString &amp; DDX_FieldLBString</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 19, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q143330</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
   - Microsoft Visual C++, 32-bit Edition, version 4.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When you map a control to a recordset variable by using DDX_FieldCBString
or DDX_FieldLBString, the following message may appear in a messagebox when
UpdateData() is called:
<P>
<PRE>   Please enter no more than 0 characters.

</PRE><h2>CAUSE</h2>
 
<P>
The DDX_FieldCBString and DDX_FieldLBString functions incorrectly check the
length of the destination CString variable. The problem exists on lines 420
and 509 in Daoview.cpp. The code is performing the following check;
<P>
<PRE>   if (nLen &gt; value.GetAllocLength()) ...

</PRE>It is possible that the buffer for the string has been emptied by a call to
AddNew() or SetFieldNull(). This would cause the CString value to be empty,
which causes the messagebox to be displayed.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Create a new function by copying the DDX_FieldCBString or DDX_FieldLBString
from Daoview.cpp located in the \Msdev\Mfc\Src directory. In the new
function, add an additional parameter to be used as the maximum allowable
length (the size of the field). You'll then need to replace the DDX call in
your DoDataExchange() function with the new function you created.
<P>
For the DDX_FieldCBString function, change the function prototype to
something like this:
<P>
<PRE>   void DDX_MyFieldCBString(CDataExchange* pDX, int nIDC, CString&amp; value,
   CDaoRecordset* pRecordset, int nMaxFieldLength)

</PRE>Replace these lines:
<P>
<PRE>   if (nLen &gt; value.GetAllocLength())
      AfxFailMaxChars(pDX, value.GetAllocLength());
   // get known length
   ::GetWindowText(hWndCtrl, value.GetBuffer(0), nLen+1);

</PRE>with these lines:
<P>
<PRE>   if (nLen &gt; nFieldLength)
      AfxFailMaxChars(pDX, nFieldLength);
   // get known length
   ::GetWindowText(hWndCtrl, value.GetBuffer(nLen), nLen+1);

</PRE>Note that GetBuffer() is no longer receiving 0 but is using the value
in nLen.
<P>
For the DDX_FieldLBString() function, change the prototype to:
<P>
<PRE>   void DDX_MyFieldLBString(CDataExchange* pDX, int nIDC, CString&amp; value,
   CDaoRecordset* pRecordset, int MaxFieldLength)

</PRE>Replace these lines:
<P>
<PRE>   if (nLen &gt; value.GetAllocLength())
     AfxFailMaxChars(pDX, value.GetAllocLength());
   ::SendMessage(hWndCtrl, LB_GETTEXT, nIndex,
                 (LPARAM)(LPSTR)value.GetBuffer(0));

</PRE>with these lines:
<P>
<PRE>   if (nLen &gt; nFieldLength)
     AfxFailMaxChars(pDX, nFieldLength);
   ::SendMessage(hWndCtrl, LB_GETTEXT, nIndex,
                (LPARAM)(LPSTR)value.GetBuffer(nLen));

</PRE>You will need to include a prototype for AfxFailMaxChars() in your code.
Here's the prototype:
<P>
<PRE>   void _stdcall AfxFailMaxChars(CDataExchange* pDX, int nChars);

</PRE><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products
listed at the beginning of this article. This bug was corrected in
Visual C++ 4.1.
<P>
 
<PRE>Keywords          : MfcDAO vcbuglist400 vcfixlist410 kbprg kbbuglist kbfixlist
Technology        : kbMfc
Version           : 4.0
Platform          : NT WINDOWS
Issue type        : kbbug
Solution Type     : kbfix</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 19, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
