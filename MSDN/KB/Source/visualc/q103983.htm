

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Serializing an Abstract Base Class </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q103983">
<META NAME="KBModify" CONTENT="1997/10/10">
<META NAME="KBCreate" CONTENT="1993/09/02">
<META NAME="Keywords" CONTENT="MfcFileIO kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  An abstract base class is a class that contains one or more pure virtual functions. Attempting to use the IMPLEMENT_SERIAL() macro with an abstract base class results in the compiler error:     error C2259 : illegal attempt to instantiate abstract ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QABA,QA2O,QABO,QAB4,QAY5,QBXF,QBFY,QAH4,QAB5,QAY2,QAAP,QBV8,QAB9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Serializing an Abstract Base Class</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q103983</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00 1.50 1.51 1.52 | 1.00 2.00 2.10 4.00 4.10
<PRE>WINDOWS             | WINDOWS NT
</PRE>kbprg
<P>
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC), included with:
<P>
<P><PRE>    - Microsoft C/C++ version 7.0
    - Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51, and
      1.52
    - Microsoft Visual C++ 32-bit Edition, version 1.0, 2.0, 2.1, 4.0,
      and 4.1
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
An abstract base class is a class that contains one or more pure virtual
functions. Attempting to use the IMPLEMENT_SERIAL() macro with an
abstract base class results in the compiler error:
<P>
<PRE>   error C2259 : illegal attempt to instantiate abstract class

</PRE>With Microsoft Visual C++ 32-bit edition, version 2.x, this compiler error
is accompanied by an explanatory warning:
<P>
<PRE>   error C2259: cannot instantiate abstract class due to following members:
   warning C4259: pure virtual function was not defined

</PRE>To work around this problem, implement the Serialize() function as
normal for the abstract base class, and classes derived from the
abstract base class, but skip over the abstract base class when using
the IMPLEMENT_SERIAL() and DECLARE_SERIAL() macros.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The IMPLEMENT_SERIAL() and DECLARE_SERIAL() macros declare a
Construct() function, which creates an instance of the class. This
function is used to create a new instance of the class when an object
is read from a CArchive. Because C++ does not allow you to create
instances of an abstract base class, the compiler error mentioned
above is given when attempting to implement the construct function.
<P>
However, because an object of the abstract base class cannot be
created, it is not possible that such an object was ever stored in an
archive. Only objects derived from the abstract base class need to be
capable of serialization.
<P>
To serialize a class derived from an abstract base class, do not use
the IMPLEMENT_SERIAL() and DECLARE_SERIAL() macros with an abstract
base class. Instead, just declare the Serialize() function and
implement it as normal so that it will serialize the data in the
abstract base class.
<P>
When you derive classes from the abstract base class, use the
IMPLEMENT_SERIAL() and DECLARE_SERIAL() macros. In the
IMPLEMENT_SERIAL() macro, specify the base class of the abstract base
class as the base class. In the Serialize() function of the derived
class, serialize the data in the class and then call the base class
version of Serialize() in the abstract base class so that data in the
base class is serialized. For an example of the technique, please see
the BLOCKS sample (S13483) in the Microsoft Software Library.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 1.00 1.50 2.00 2.10 2.50 2.51 2.52 3.00<BR>
3.10 4.00 4.10<BR>
KBCategory: kbprg<BR>
KBSubcategory: MfcFileIO<BR>
Keywords          : MfcFileIO kbprg<BR>
Technology        : kbMfc<BR>
Version           : 1.00 1.50 1.51 1.52 | 1.00 2.00<BR>
Platform          : NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
