

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DLL Correctly Performs Initialization and Termination </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q92731 ">
<META NAME="KBModify" CONTENT="1997/07/17">
<META NAME="KBCreate" CONTENT="1992/11/15">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The text below describes using Microsoft C/C++ version 7.0 to create a dynamic-link library (DLL) that correctly handles DLL initialization and termination.  A DLL that uses these techniques calls the constructor for each global object when the DLL...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBFY,QAH4,QBHQ,QDNN,QABA,QA7H,QAW6,QAPN,QANG,QAB4,QABI,QAPF,QAGI,QDMW,QDL9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>DLL Correctly Performs Initialization and Termination</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 17, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q92731 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
7.00 7.00a | 1.00 1.50
<PRE>MS-DOS     | WINDOWS
</PRE>kbprg
<P>
 
The information in this article applies to:

<UL><LI>Microsoft C/C++ for MS-DOS, versions 7.0 and 7.0a
<LI>Microsoft Visual C++ for Windows. versions 1.0 and 1.5
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The text below describes using Microsoft C/C++ version 7.0 to create a
dynamic-link library (DLL) that correctly handles DLL initialization
and termination.
<P>
A DLL that uses these techniques calls the constructor for each global
object when the DLL is loaded and the destructor for each global and
static object when the DLL is freed. The DLL also correctly
initializes the floating-support required by the C/C++ run-time
libraries.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
LIBENTRY.OBJ and WEP.OBJ are modules in the standard C run-time
libraries for DLLs that contain the default DLL initialization and
termination code, respectively. The DLL libraries are named
xDLLCEW.LIB, where the letter x is replaced with a code to indicate
the memory model. For example, SDLLCEW.LIB is the small memory model
DLL library.
<P>
Linking a DLL directly to it's own LIBENTRY.OBJ will over-ride any
initialization done by the default LIBENTRY routine in the library.
This initialization code is required to construct global objects and
to load floating-point support. This situation can cause the following
error message when an application implicitly loads DLLs:
<P>
<PRE>   Application Error
   Floating point support not loaded

</PRE>If an application uses a DLL with its own WEP routine, the destructors
for global and static objects are not called.
<P>
To use the default LIBENTRY.OBJ file, link with the DLL library. To
replace the LIBENTRY.OBJ file, list LIBENTRY.OBJ in the list of
modules to link.
<P>
To use the default WEP procedure, first make sure that none of the
modules in the DLL contain a WEP procedure. Then add the following
lines to the module definition (DEF) file for the DLL:
<P>
<PRE>   SEGMENTS 'WEP_TEXT' FIXED PRELOAD

   EXPORTS
      WEP @1 RESIDENTNAME

</PRE>The DETAILS.TXT file, distributed with Microsoft C/C++ version 7.0,
describes this procedure in more detail. In Visual C++, refer to the
"Programming Techniques" manual, chapters 6.3 and 6.4.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 7.00 7.00a 1.00 1.50 start-up constant<BR>
init libmain destructer<BR>
KBCategory: kbprg<BR>
KBSubcategory: CRTIss<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 17, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
