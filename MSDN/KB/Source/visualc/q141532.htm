

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: OnInitMenuPopup Deletes Temporary Objects </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q141532">
<META NAME="KBModify" CONTENT="1997/09/19">
<META NAME="KBCreate" CONTENT="1995/12/19">
<META NAME="Keywords" CONTENT="MfcUI vcbuglist400 vcfixlist410 kbbuglist kbcode kbfixlist kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  When overriding CWnd::OnInitMenuPopup, while the CMenu pointer passed in is accessed, after calling the base class OnInitMenuPopup, the program may cause an ASSERT, access violation, or other problems.  CAUSE =====  In MFC version 4.0 calls to AfxL...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGI,QAW6,QAPN,QAH4,QAR4,QAIF,QBF0,QABA,QAUD,QAGB,QA2O,QBFY,QBCT,QAGC,QAEF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: OnInitMenuPopup Deletes Temporary Objects</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 19, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q141532</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
kbprg kbbuglist kbfixlist kbcode
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
   Microsoft Visual C++, 32-bit Edition, version 4.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When overriding CWnd::OnInitMenuPopup, while the CMenu pointer passed in is
accessed, after calling the base class OnInitMenuPopup, the program may
cause an ASSERT, access violation, or other problems.
<P>
<P><h2>CAUSE</h2>
 
<P>
In MFC version 4.0 calls to AfxLockTempMaps and AfxUnlockTempMaps were
added to CWnd::OnInitMenuPopup. When AfxUnlockTempMaps is called, MFC's
temporary object map reference count will go to zero causing all temporary
MFC objects to be deleted. When the call to OnInitMenuPopup returns, the
CMenu pointer (which is a temporary) will be invalid.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Make a call to AfxLockTempMaps before the call to the base class and a call
to AfxUnlockTempMaps before returning from your OnInitMenuPopup override.
This will stop the internal reference count from reaching zero inside
CWnd::OnInitPopupMenu and the CMenu will not be deleted.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products
listed at the beginning of this article. This bug was corrected in
Visual C++ 4.1.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
MFC maintains a map from handles such as HMENUs to their C++ wrapper
objects. When a call is made to, for example, GetMenu, MFC attempts to find
the C++ wrapper object that corresponds to the HMENU ::GetMenu returns. If
no object in the permanent map is found, MFC creates a temporary object
that is normally destroyed in OnIdle processing by a call to
AfxUnlockTempMaps.
<P>
<P><h3>Sample Code to Reproduce or Resolve Problem</h3>
 
<P>
<PRE>/* Compile options needed: default
*/

// Use this code to fix the problem:
void CMainFrame::OnInitMenuPopup(CMenu* pPopupMenu, UINT nIndex,
                                                   BOOL bSysMenu)
{
    #if _MFC_VER == 0x400
    AfxLockTempMaps();
    #endif

    CMDIFrameWnd::OnInitMenuPopup(pPopupMenu, nIndex, bSysMenu);

    // TODO: Add your message handler code here

    #if _MFC_VER == 0x400
    AfxUnlockTempMaps();
    #endif
</PRE>}
<P>
<PRE>// Use the following code to reproduce the problem in an MDI application:
void CMainFrame::OnInitMenuPopup(CMenu* pPopupMenu, UINT nIndex,
                                                   BOOL bSysMenu)
{
    CMDIFrameWnd::OnInitMenuPopup(pPopupMenu, nIndex, bSysMenu);

    // The next line will cause an ASSERT on line 1034 in a debug
    // build because pPopupMenu is an invalid pointer
    pPopupMenu-&gt;CheckMenuItem(0, MF_BYPOSITION | MF_CHECKED);
</PRE>}
<P>
<P><h2>REFERENCES</h2>
 
<P>
MFC Technical Note 3:  Mapping of Windows Handles to Objects.
<P>
For more information, please see the following article in the Microsoft
Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../VISUALC/Q139469.htm">Q139469</A></B>
   TITLE     : How to Use TrackPopupMenu() and Update UI Handlers
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 4.10<BR>
KBCategory: kbprg kbbuglist kbfixlist kbcode<BR>
KBSubcategory: MfcUI vcbuglist400 vcfixlist410<BR>
Keywords          : MfcUI vcbuglist400 vcfixlist410 kbbuglist kbcode kbfixlist kbprg<BR>
Technology        : kbMfc<BR>
Version           : kbprg kbbuglist kbfixlist kbcode<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 19, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
