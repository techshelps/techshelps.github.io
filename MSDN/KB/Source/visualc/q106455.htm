

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Acquire a List of All CDocument Objects </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q106455">
<META NAME="KBModify" CONTENT="1997/10/10">
<META NAME="KBCreate" CONTENT="1993/11/08">
<META NAME="Keywords" CONTENT="MfcDocView kbcode kbfasttip kbhowto kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The code samples below demonstrate how to retrieve a list of pointers to all open CDocument (and CDocument-derived objects) created by a CWinApp-derived object. For MFC versions 3.x and below, Sample Code 1 shows the use of CWinApp::m_templateList,...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QACI,QAY5,QAE1,QAJP,QAH4,QBV8,QAUD,QAB9,QAW6,QAPN,QAKD,QAGI,QA36,QAPF,QAO3 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Acquire a List of All CDocument Objects</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q106455</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00 1.50 1.51 1.52 | 1.00 2.00 2.10 2.20 4.00
<PRE>WINDOWS             | WINDOWS NT
</PRE>kbprg kbfasttip kbhowto kbcode
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC), included with:
<P>
<P><PRE>    - Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51, 1.52
    - Microsoft Visual C++ 32-bit Edition, versions 1.0, 2.0, 2.1,
      2.2, 4.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The code samples below demonstrate how to retrieve a list of pointers to
all open CDocument (and CDocument-derived objects) created by a
CWinApp-derived object. For MFC versions 3.x and below, Sample Code 1 shows
the use of CWinApp::m_templateList, CDocTemplate::GetFirstDocPosition(),
and CDocTemplate::GetNextDoc(). For MFC version 4.0, Sample Code 2 provides
a similar implementation, but uses CWinApp::GetFirstDocTemplatePosition()
and CWinApp::GetNextDocTemplate() to obtain the valid CDocTemplate
pointers.
<P>
For both code samples, CMyApp is derived from CWinApp. Moreover, once a
valid CDocTemplate pointer is obtained, CDocTemplate::GetFirstDocPosition()
and CDocTemplate::GetNextDoc() are used in both samples to iterate through
the list of open documents for each document template. For MFC versions 3.x
and earlier, an application object's list of document template pointers is
contained in CWinApp::m_templateList, a CPtrList object. Sample Code 1
makes use of this fact. For MFC version 4.0, CWinApp uses a CDocManager to
maintain its list of document templates and provides the
GetFirstDocTemplatePosition() and GetNextDocTemplate() member functions to
traverse the list. Sample Code 2 exhibits this.
<P>
<P><h2>Sample Code 1 - MFC 3.x and prior</h2>
 
<P>
<PRE>/* Compile options needed: none
*/

void CMyApp::GetDocumentList(CObList * pDocList)
</PRE>{
<PRE>   ASSERT(pDocList-&gt;IsEmpty());

   POSITION pos = m_templateList.GetHeadPosition();

   while (pos)
   {
      CDocTemplate* pTemplate = (CDocTemplate*)m_templateList.GetNext(pos);
      POSITION pos2 = pTemplate-&gt;GetFirstDocPosition();
      while (pos2)
      {
         CDocument * pDocument;
         if ((pDocument=pTemplate-&gt;GetNextDoc(pos2)) != NULL)
            pDocList-&gt;AddHead(pDocument);
      }
   }
</PRE>}
<P>
<P><h2>Sample Code 2 - MFC 4.0</h2>
 
<P>
<PRE>/* Compile options needed: none
*/

void CMyApp::GetDocumentList(CObList * pDocList)
</PRE>{
<PRE>   ASSERT(pDocList-&gt;IsEmpty());

   POSITION pos = GetFirstDocTemplatePosition();

   while (pos)
   {
      CDocTemplate* pTemplate = (CDocTemplate*)GetNextDocTemplate(pos);
      POSITION pos2 = pTemplate-&gt;GetFirstDocPosition();
      while (pos2)
      {
         CDocument * pDocument;
         if ((pDocument=pTemplate-&gt;GetNextDoc(pos2)) != NULL)
            pDocList-&gt;AddHead(pDocument);
      }
   }
</PRE>}
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The Visual C++ version 4.0 Books Online document all of the following
functions:

<UL><LI>CWinApp::GetFirstDocTemplatePosition
<LI>CWinApp::GetNextDocTemplate
<LI>CDocTemplate::GetFirstDocPosition
<LI>CDocTemplate::GetNextDoc
<P>
</UL>However, the GetFirstDocPosition and GetNextDoc member functions of
CDocTemplate are not documented in previous versions of Visual C++. These
public member functions are defined in the CDocTemplate class and provide
simple functionality for traversing the list of open documents as shown
above. These functions operate as follows:
<P>
<P><h3>CDocTemplate::GetFirstDocPosition Function</h3>
 
<P>
Declaration: virtual POSITION GetFirstDocPosition() const;
<P>
Remarks:
<P>
Call this function to get the position of the first document in the list of
open documents associated with the template.
<P>
Return Value:
<P>
A POSITION value that can be used for iteration with the GetNextDoc member
function.
<P>
<P><h3>CDocTemplate::GetNextDoc Funcation</h3>
 
<P>
Declaration: virtual CDocument* GetNextDoc(POSITION&amp; rPosition) const;
<P>
rPosition:
<P>
A reference to a POSITION value returned by a previous call to the
GetNextDoc or GetFirstDocPosition member function. This value must not be
NULL.
<P>
Remarks:
<P>
Call this function to iterate through all of the document template's open
documents. The function returns the document identified by rPosition and
then sets rPosition to the POSITION value of the next document in the list.
If the retrieved document is the last in the list, then rPosition is set to
NULL.
<P>
Return Value:
<P>
A pointer to the view identified by rPosition.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 1.00 1.50 2.00 2.10 2.20 2.50 2.51<BR>
2.52 3.00 4.00<BR>
KBCategory: kbprg kbfasttip kbhowto kbcode<BR>
KBSubcategory: MfcDocView<BR>
Keywords          : MfcDocView kbcode kbfasttip kbhowto kbprg<BR>
Technology        : kbMfc<BR>
Version           : 1.00 1.50 1.51 1.52 | 1.00 2.00<BR>
Platform          : NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
