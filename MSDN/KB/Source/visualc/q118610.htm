

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using CWnd::GetParent in a Dialog Box </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q118610">
<META NAME="KBModify" CONTENT="1997/10/10">
<META NAME="KBCreate" CONTENT="1994/07/25">
<META NAME="Keywords" CONTENT="MfcUI kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The window object returned by CWnd::GetParent in a modal dialog box is the top-level window that owns the dialog box, usually the main window. It is not necessarily the window object that has been passed to the constructor or Create() of the CDialo...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGQ,QA01,QAGI,QAW6,QAPN,QADK,QDL9,QBWQ,QBWO,QBWN,QAUR,QAO3,QAO2,QANX,QBW7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Using CWnd::GetParent in a Dialog Box</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q118610</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
7.00   | 1.00 1.50 1.51 1.52 | 1.00 2.00 2.10 4.00
<PRE>MS-DOS | WINDOWS             | WINDOWS NT
</PRE>kbprg
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
<P>
<P><PRE>    - Microsoft C/C++ version 7.0
    - Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51, and 1.52
    - Microsoft Visual C++ 32-bit Edition, versions 1.0, 2.0, 2.1, and 4.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The window object returned by CWnd::GetParent in a modal dialog box is the
top-level window that owns the dialog box, usually the main window. It is
not necessarily the window object that has been passed to the constructor
or Create() of the CDialog object. If you need to access the parent window
that was passed in the constructor of the dialog-box object, then you need
to save a copy of this pointer in the dialog-box object.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
When Windows creates a new popup window or a top-level window, such as a
dialog-box window, it is passed the handle of the parent window for the
dialog box. If the specified parent window is not a top-level window, then
Windows repeatedly calls GetParent until it finds the handle of a top-level
window that contains the specified parent window. Windows then sets this
top-level window to be the parent of the new popup or top-level window. So,
after the new window is created, if you call GetParent in that window, you
will get the pointer to the top-level window object that contains the
original parent window that you passed in the constructor or Create() call.
<P>
This behavior can cause problems in an MFC application if you try to create
a dialog box with a view window as the parent and then try to access the
view inside the dialog box by calling GetParent. Because the view window is
not a top-level window, Windows automatically converts the handle of the
view window to the handle of the top-level window that contains the view,
which is usually the main window of the application. Then when you call
GetParent, it gets the handle of the main window of the application and
then finds the MFC object associated with the main window. If you need to
access the view window from the dialog-box object, then you should store
the pointer to the view in a member variable of the dialog box. To do this,
save a pointer to the view window in the constructor of the dialog box or
override the Create() function and have it save the pointer.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 7.00 1.00 1.50 2.00 2.10 2.50 2.51 2.52 3.00<BR>
3.10 kbinf 4.00<BR>
KBCategory: kbprg<BR>
KBSubcategory: MfcUI<BR>
Keywords          : MfcUI kbprg<BR>
Technology        : kbMfc<BR>
Version           : 7.00 | 1.00 1.50 1.51 1.52 | 1<BR>
Platform          : MS-DOS NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
