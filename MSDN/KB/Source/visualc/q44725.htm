

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INFO: printf() and 512-Byte I/O Buffer </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q44725 ">
<META NAME="KBModify" CONTENT="1997/09/30">
<META NAME="KBCreate" CONTENT="1989/05/20">
<META NAME="Keywords" CONTENT="CRTIss">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The function printf() takes up 512 bytes from the default heap in 16-bit applications and 4096 bytes in 32-bit applications.  MORE INFORMATION  The standard I/O buffer gets allocated only when needed. This gives the program an extra 512 bytes of ne...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QALG,QAHT,QAGX,QAKC,QBJQ,QDL9,QBWQ,QBWO,QBWN,QAH4,QBXH,QBWP,QBFY,QBC6,QAY5 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INFO: printf() and 512-Byte I/O Buffer</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 30, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q44725 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The C Run-time (CRT) included with:
   - Microsoft Visual C++ for Windows, 16-bit edition, version 1.52
   - Microsoft Visual C++, 32-bit Edition, versions 2.0, 2.1, 2.2, 4.0,
<P><PRE>     4.1, 4.2, 5.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The function printf() takes up 512 bytes from the default heap in 16-bit
applications and 4096 bytes in 32-bit applications.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The standard I/O buffer gets allocated only when needed. This gives the
program an extra 512 bytes of near-heap space in small and medium memory
models or an extra 512 bytes of far-heap space in compact and large
models. Therefore, when the printf() function is used for the first time,
a 512-byte buffer is reserved for I/O, and the subsequent calls to
printf() use that buffer.
<P>
The sample program below demonstrates this behavior. When compiled and
executed with current 16-bit versions, the number printed after printf()
executes is 512 bytes more than the number printed before the printf()
executes.
<P>
When this sample program is compiled for release under 32-bit versions and
executed in Windows NT, the output displays 4096 bytes. For debug compile,
the number of bytes shown is 4144, the extra 48 bytes are used to debug
related information. Note that this program displays 0 bytes for 32-bit
versions on Windows 95 because _heapwalk is not supported in Windows 95.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   /* Compile options needed: none
   */

   #include &lt;stdio.h&gt;
   #include &lt;malloc.h&gt;


   unsigned long heapdump (void)
   {
      struct _heapinfo hinfo;
      int heapstatus;
      unsigned long memUsed = 0;

      hinfo._pentry = NULL;
      while ((heapstatus = _heapwalk(&amp;hinfo)) == _HEAPOK)
      {
         if (hinfo._useflag == _USEDENTRY)
            memUsed += hinfo._size;
      }
      switch (heapstatus)
      {
        case _HEAPEMPTY:
            printf("OK - empty heap\n");
            break;
        case _HEAPEND:
            printf("OK - end of heap\n");
            break;
        case _HEAPBADPTR:
            printf("ERROR - bad pointer\n");
            break;
        case _HEAPBADBEGIN:
            printf("ERROR - bad start\n");
            break;
        case _HEAPBADNODE:
            printf("ERROR - bad node\n");
            break;
      }

      return memUsed;
   }


   void main (void)
   {
      unsigned long memUsed, memTemp;

      memTemp = memUsed = heapdump();

      printf("Pre-printf memory used was %lu bytes.\n", memUsed);
      memUsed = heapdump();
      printf("Post-printf memory used is %lu bytes.\n", memUsed);
      printf(
        "The difference in memory used between printf's is %lu bytes.\n",
        memUsed - memTemp);
   }
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: heapwalk printf<BR>
Keywords          : CRTIss<BR>
Version           : WINDOWS: 1.52; WINDOWS NT: 2.0, 2.1, 2.2 , 4.0, 4.1, 4.2, 5.0<BR>
Platform          : NT WINDOWS<BR>
Issue type        : kbinfo<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 30, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
