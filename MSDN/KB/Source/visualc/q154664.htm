

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Dispatch Interface for Automation Object Must Be Registered </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q154664">
<META NAME="KBModify" CONTENT="1998/02/17">
<META NAME="KBCreate" CONTENT="1996/08/12">
<META NAME="Keywords" CONTENT="MfcOLE">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Visual Basic 4.0 can do typesafe binding to automation objects. In this scenario, the Visual Basic program will QueryInterface the automation object for its dispatch interface. If the interface is not registered on the machine, the Visual Basic pro...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QBBS,QAPN,QA2K,QAW6,QAH4,QA5F,QAI4,QAMA,QAA1,QDI2,QA56,QA55,QBVV,QBHQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Dispatch Interface for Automation Object Must Be Registered</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 17, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q154664</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual C++, 32-bit Edition, versions 4.0, 4.1, 4.2
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Visual Basic 4.0 can do typesafe binding to automation objects. In this
scenario, the Visual Basic program will QueryInterface the automation
object for its dispatch interface. If the interface is not registered on
the machine, the Visual Basic program will fail to create the object. In
this case, Visual Basic will report the following error:
<P>
<PRE>   Error 430: Class Does not Support OLE Automation.

</PRE><h2>MORE INFORMATION</h2>
 
<P>
Visual Basic does typesafe binding to an automation object when a variable
is dimensioned as a specific type. For instance:
<P>
<PRE>   Dim x As New TestVB.Document

</PRE>When developing this code, establish a reference to the TestVB module (in
the Visual Basic development environment, select Tools, References, and
Browse for the TestVB type library). Select the type library to register
the type library and the dispatch interface for the Document object.
<P>
The problem occurs when the Visual Basic program and the automation server
are loaded on a machine other than the development machine. Even if the
automation server is initially run to perform self-registration, the
dispatch interface for the automation object will not be registered and the
"New" syntax will fail to create the automation object.
<P>
To eliminate this problem, it is necessary to register the dispatch
interface for the automation object on the non-development machine. This
can be done programmatically or with a .reg file during setup.
<P>
In the case of the TestVB module, the Document object's dispatch interface
is the ITestVB interface, which is defined as follows in the .cpp file for
the Document object:
<P>
<PRE>   // Note: We add support for IID_ITestVB to support typesafe binding
   // from VBA. This IID must match the GUID that is attached to the
   // dispinterface in the .ODL file.
   
   // {1249A4D2-D469-11CF-A68F-00AA00A70FC2}
   static const IID IID_ITestVB =
   { 0x1249a4d2, 0xd469, 0x11cf,
           { 0xa6, 0x8f, 0x0, 0xaa, 0x0, 0xa7, 0xf, 0xc2 } };
   
   BEGIN_INTERFACE_MAP(CTestVBDoc, CDocument)
       INTERFACE_PART(CTestVBDoc, IID_ITestVB, Dispatch)
   END_INTERFACE_MAP()

</PRE>The following .reg file will register the ITestVB interface and enable
marshaling of the interface via the standard IDispatch proxy and stub.
<P>
<PRE>   REGEDIT
   
   HKEY_CLASSES_ROOT\Interface\{1249A4D2-D469-11CF-A68F-00AA00A70FC2}
           = ITestVB
   HKEY_CLASSES_ROOT\Interface\{1249A4D2-D469-11CF-A68F-00AA00A70FC2}
           ProxyStubClsid = {00020420-0000-0000-C000-000000000046}
   HKEY_CLASSES_ROOT\Interface\{1249A4D2-D469-11CF-A68F-00AA00A70FC2}
           ProxyStubClsid32 = {00020420-0000-0000-C000-000000000046}

</PRE>To programmatically register the interface, #include &lt;winreg.h&gt;, and insert
the following code (with the proper dispatch ID) in the InitInstance of the
automation server:
<P>
<PRE>   HKEY key;
   
   // Open HKEY_CLASSES_ROOT
   RegOpenKey(HKEY_CLASSES_ROOT, _T("Interface"), &amp;key);
   
   // Set up the key
   RegSetValue( key,
       _T("{1249A4D2-D469-11CF-A68F-00AA00A70FC2}"), REG_SZ,
       _T("ITestVB"), 0);
   RegSetValue( key,
       _T("{1249A4D2-D469-11CF-A68F-00AA00A70FC2}\\ProxyStubClsid"),
       REG_SZ, _T("{00020420-0000-0000-C000-000000000046}"), 0);
   RegSetValue( key,
       _T("{1249A4D2-D469-11CF-A68F-00AA00A70FC2}\\ProxyStubClsid32"),
       REG_SZ, _T("{00020420-0000-0000-C000-000000000046}"), 0);
   
   RegCloseKey(key);
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: Automation 430<BR>
Keywords          : MfcOLE<BR>
Technology        : kbole kbMfc<BR>
Version           : Winnet:4.0,4.1,4.2<BR>
Platform          : NT WINDOWS<BR>
Issue type        : kbinfo<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 17, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
