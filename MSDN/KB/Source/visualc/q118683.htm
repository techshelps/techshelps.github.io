

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Debugging Spawned Applications in Visual C++ </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q118683">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1994/07/26">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  This article describes how to debug an application that is spawned (executed) from another application within the Visual Workbench for Windows.  MORE INFORMATION  The sample code below contains the source for files PROG_A.EXE and PROG_B.EXE. To deb...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAY2,QA56,QA55,QDL9,QBWQ,QBWO,QBWN,QABA,QAVX,QBJZ,QBFY,QAJH,QDMW,QA6A,QA2O V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Debugging Spawned Applications in Visual C++</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q118683</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00 1.50
WINDOWS
kbtool
<P>
 
The information in this article applies to:

<UL><LI>The Visual Workbench Integrated Debugger included with:
   Microsoft Visual C++ for Windows, versions 1.0 and 1.5
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article describes how to debug an application that is spawned
(executed) from another application within the Visual Workbench for
Windows.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The sample code below contains the source for files PROG_A.EXE and
PROG_B.EXE. To debug PROG_B.EXE, which is spawned from PROG_A.EXE, perform
the following steps:

<OL><P><LI>Load PROG_A.MAK, making sure that it is up to date.

<P><LI>Choose Debug from the Options menu.

<P><LI>Type "PROG_B.EXE" in the Additional DLLs field of the Debug dialog box.

<P><LI>From the Files menu, open the PROG_B.CPP file and put a breakpoint on
   the output line.

<P><LI>Press F5. The debugger stops when it hits the breakpoint in PROG_B.CPP.
<P>
</OL>NOTE: For information on debugging under these circumstances from within a
32-bit environment, refer to Knowledge Base article <B><A HREF="../VISUALC/Q120707.htm">Q120707</A></B>.
<P>
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   /* Compile options needed: Default QuickWin settings.
   */

   // PROG_A.CPP

   #include &lt;iostream.h&gt;
   #include &lt;windows.h&gt;

   void main( void )
   {
      cout &lt;&lt; "Starting Prog_a.exe" &lt;&lt; endl;
      i = WinExec("prog_b.exe", SW_SHOW);
   }

   // PROG_B.CPP

   #include &lt;iostream.h&gt;

   void main()
   {
      cout &lt;&lt; "Greetings from Prog_b." &lt;&lt; endl;
   }
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 1.00 1.50 CreateProcess<BR>
KBCategory: kbtool<BR>
KBSubcategory: WBDebug<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
