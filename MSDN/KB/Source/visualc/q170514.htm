

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: Bad Codegen with /Og and FP Mult in Class with Virt Dtor </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q170514">
<META NAME="KBModify" CONTENT="1997/09/16">
<META NAME="KBCreate" CONTENT="1997/06/23">
<META NAME="Keywords" CONTENT="CLIss CodeGen vcbuglist500">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The Visual C++ 5.0 compiler may generate incorrect instructions when it encounters floating-point multiplication in a member of a class that has a virtual destructor.  RESOLUTION  Use /Op.  -or-  Do not use /Og. Note that /O1, /O2, and /Ox are aggr...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAHH,QAFO,QBE7,QBE6,QAKD,QAI4,QBFY,QDIX,QABO,QALZ,QAEF,QDKW,QDIV V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: Bad Codegen with /Og and FP Mult in Class with Virt Dtor</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 16, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q170514</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The C/C++ Compiler (CL.EXE) included with:
   - Microsoft Visual C++, 32-bit Editions, version 5.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The Visual C++ 5.0 compiler may generate incorrect instructions when it
encounters floating-point multiplication in a member of a class that has a
virtual destructor.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Use /Op.
<P>
-or-
<P>
Do not use /Og. Note that /O1, /O2, and /Ox are aggregate optimization
switches that include /Og.
<P>
-or-
<P>
Use the optimize pragma around the class member to disable the /Og
optimization or to turn on the /Op optimization.
<P>
-or-
<P>
Make the destructor non-virtual. This may not be an option if the given
class is derived from a class that has a virtual destructor in a library
that you cannot change.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. We are researching this bug and will post
new information here in the Microsoft Knowledge Base as it becomes
available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 
<P>
<PRE>   // Compile options needed to reproduce the bug: /Og
   // Compile options needed to work around the bug: /Og /Op

   #include &lt;stdio.h&gt;
   #include &lt;math.h&gt;

   struct A {
       double    m_X;
       double    m_Y;
   };

   typedef double rg23[2][3];

   struct  B
   {
       rg23 m;
       B(double rotn = 0);
       void func(double *px, double *py) const;
       virtual ~B(){}

   };


   B::B(double rotn)
   {
       double cosa = cos(rotn);
       double sina = sin(rotn);

       m[0][0] =
       m[1][1] = cosa;
       m[0][1] = -sina;
       m[1][0] = sina;
       m[0][2] =
       m[1][2] = 0;

   }

   void B::func(double *px, double *py) const
   {
       double x = *px;
       double y = *py;
       *px = x * m[0][0] + y * m[0][1] + m[0][2];
       *py = x * m[1][0] + y * m[1][1] + m[1][2];
   }


   int main () {

       A a;
       a.m_X=1.0;
       a.m_Y=2.0;

       printf("Values in: x=%lf; y=%lf\n", a.m_X, a.m_Y);

       B ct;
       ct.func(&amp;a.m_X, &amp;a.m_Y);

       printf("Values out: x=%lf; y=%lf\n", a.m_X, a.m_Y);


       return 0;
   }

</PRE><h3>Expected Output</h3>
 
<P>
<PRE>   Values in: x=1.000000; y=2.000000
   Values out: x=1.000000; y=2.000000

</PRE><h3>Actual Output</h3>
 
<P>
<PRE>   Values in: x=1.000000; y=2.000000
   Values out: x=1.000000; y=0.000000
</PRE> 
<PRE>Keywords          : CLIss CodeGen vcbuglist500
Version           : 5.0
Platform          : NT WINDOWS
Issue type        : kbbug</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 16, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
