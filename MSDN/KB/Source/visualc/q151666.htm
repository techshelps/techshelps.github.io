

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: C2065/C2064 Errors when Using Win32 APIs in MFC Program </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q151666">
<META NAME="KBModify" CONTENT="1997/07/31">
<META NAME="KBCreate" CONTENT="1996/05/28">
<META NAME="Keywords" CONTENT="MfcMisc kberrmsg kbprb kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Using some Win32 APIs, such as PurgeComm() and RegFlushKey(), in an AppWizard generated application will cause C2065 and C2064 compilation errors. For example, a call to the PurgeComm() function will produce the following errors:     error C2065: '...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAAP,QAB4,QBXT,QA5V,QAIB,QAH4,QACJ,QAY5,QAEF,QBQB,QBWP,QBVV,QAGI,QDL9,QBWQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: C2065/C2064 Errors when Using Win32 APIs in MFC Program</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 31, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q151666</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
4.00 4.10
WINDOWS NT
kbprg kberrmsg kbprb
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC), included with:
   Microsoft Visual C++, 32-bit Edition, versions 4.0, 4.1
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Using some Win32 APIs, such as PurgeComm() and RegFlushKey(), in an
AppWizard generated application will cause C2065 and C2064 compilation
errors. For example, a call to the PurgeComm() function will produce the
following errors:
<P>
<PRE>   error C2065: 'PurgeComm' : undeclared identifier
   error C2064: term does not evaluate to a function

</PRE><h2>CAUSE</h2>
 
<P>
In Visual C++ 4.x, AppWizard automatically adds a macro definition for
VC_EXTRALEAN to the project's precompiled header. Its purpose is to help
speed up compilation by excluding less-frequently used declarations from
the various Windows header files.
<P>
When VC_EXTRALEAN is defined in the precompiled header, the following SDK
symbols get defined in afxv_w32.h:
<P>
<PRE>   #define WIN32_EXTRA_LEAN
   #define NOSERVICE
   #define NOMCX
   #define NOIME
   #define NOSOUND
   #define NOCOMM
   #define NOKANJI
   #define NORPC
   #define NOPROXYSTUB
   #define NOIMAGE
   #define NOTAPE

   #ifndef NO_ANSIUNI_ONLY
   #ifdef _UNICODE
   #define UNICODE_ONLY
   #else
   #define ANSI_ONLY
   #endif
   #endif //!NO_ANSIUNI_ONLY

</PRE>Because the macro NOCOMM is being defined, the prototype for PurgeComm() is
excluded. This behavior causes the errors.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
One solution is to remove the #define VC_EXTRALEAN line from stdafx.h. This
keeps the Communication, Registry, and other areas of the Win32 APIs that
are not directly used by MFC in the project.
<P>
An alternative is to replace the "#define VC_EXTRALEAN" line with the set
of #define lines listed above, and then selectively remove those #define's
that should not be included. For instance, if the Communication APIs are
called, you may have all the #define lines listed above except the "#define
NOCOMM" line in the stdafx.h.
<P>
<P><h2>STATUS</h2>
 
<P>
This behavior is by design.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
For complete information on what the macros listed above exclude, search
the windows.h and afxv_w32.h files for the symbols.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 4.10<BR>
KBCategory: kbprg kberrmsg kbprb<BR>
KBSubcategory: MfcMisc<BR>
Keywords          : MfcMisc kberrmsg kbprb kbprg<BR>
Technology        : kbMfc<BR>
Version           : 4.00 4.10<BR>
Platform          : NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 31, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
