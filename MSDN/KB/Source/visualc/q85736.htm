

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INFO: Multiple Instance Large Model Windows MFC Applications </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q85736 ">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1992/06/18">
<META NAME="Keywords" CONTENT="kb16bitonly MfcMisc kbfasttip kbinfo">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  In the small and medium memory models, all objects based on the Microsoft Foundation Class library must be placed in the near heap. This imposes a limit on the number of objects that can be allocated because the near heap is typically less than 64K...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPF,QABO,QBHQ,QAO3,QAO2,QAJH,QBW6,QBV8,QAYY,QAW6,QAPN,QAKR,QAHE,QABA,QDL9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INFO: Multiple Instance Large Model Windows MFC Applications</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q85736 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:
<P>
<PRE>  The Microsoft Foundation Classes (MFC), included with:
    - Microsoft C/C++ version 7.0
    - Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51, 1.52
</PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In the small and medium memory models, all objects based on the Microsoft
Foundation Class library must be placed in the near heap. This imposes a
limit on the number of objects that can be allocated because the near heap
is typically less than 64K in size. The Microsoft Foundation Class library
does not allow a small or medium model application to create a far instance
of any of the standard classes from the Microsoft Foundation Class library.
To create far instances of classes based on the Microsoft Foundation Class
library, the compact or large memory model must be used.
<P>
This article discusses some of the issues regarding large memory model
Microsoft Windows-based applications built with the Microsoft Foundation
Class library.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Member functions of classes are called with an implicit "this" pointer,
which points to the data for the class. By default, the size of the this
pointer is determined by the ambient memory model. For small and medium
models, the this pointer is near. For large, compact, and huge models, the
this pointer is far. For example, consider the following line of code in a
medium memory model application:
<P>
<PRE>   lpMyString = new FAR CString;

</PRE>The pointer to the new object will be a far pointer. However, the member
functions of the class CString in the medium memory model Microsoft
Foundation Class library expect a near this pointer. As a result, the
compiler will generate a C2662 error stating that it cannot convert the
this pointer from far to near. For more information on the this pointer and
how it is affected by different memory models, please refer to the on-line
help for the __far keyword.
<P>
An application must use the compact or large memory model to allocate far
instances of Microsoft Foundation Class derived classes. To use these
memory models, the appropriate libraries must be built. Please see the
README.TXT file in the MFC\SRC directory for instructions on building
different memory model versions of the Microsoft Foundation Class library.
<P>
Compact and large memory model Windows-based applications raise special
issues. Windows can run multiple instances of an application only if the
application has a single data segment (DGROUP). Multiple instances of a
compact or large memory model application can be run only if all of the
application's static and global data is located in DGROUP. To help enable
this, build the Microsoft Foundation Class libraries and applications by
using the /Gx compiler switch.
<P>
By default, in the compact and large memory models, the compiler allocates
initialized data items as near if they are smaller than or equal in size to
the threshold value set by the /Gt option. The /Gx switch extends this
initialized data allocation rule to data that is un-initialized and data
that is marked as extern. The /Gx option does not affect the size of
pointers. Pointers remain far by default. For more information on the /Gt
and /Gx compiler switches, please refer to the on-line help for the command-
line options for the C/C++ compiler.
<P>
When building the Microsoft Foundation Class libraries, use the OPT=/Gx
option on the NMAKE command line. Instances of classes created using new
can then be allocated outside of DGROUP, overcoming the 64K limit.
<P>
The command line to build a large model Windows version of the Microsoft
Foundation Classes library with the /Gx option is:
<P>
<PRE>   NMAKE MODEL=L TARGET=W OPT=/Gx

</PRE>NOTE: The /Gx option does not work for static or global objects. These
objects must be explicitly declared as NEAR in order for them to be placed
in DGROUP. For example, in the HELLO.CPP sample Microsoft Foundation Class
Windows-based application, the following code used to create the
application object
<P>
<PRE>   CTheApp theApp;

</PRE>should be changed to the following:
<P>
<PRE>   CTheApp NEAR theApp;
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : kb16bitonly MfcMisc kbfasttip kbinfo<BR>
Technology          : kbmfc<BR>
Version             : 1.0 1.5 1.51 1.52 7.0<BR>
Issue type          : kbinfo<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
