

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>File Handles When Spawning from a MOVE Application </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q90800 ">
<META NAME="KBModify" CONTENT="1997/07/17">
<META NAME="KBCreate" CONTENT="1992/10/22">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  A program using the MOVE overlay manager that spawns a child program will not behave the same as a program that does not use the MOVE overlay manager. The memory allocated to the XMS and EMS overlay caches is not released before the spawn. This mus...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBFY,QAEF,QACI,QA9N,QANJ,QAMB,QAH4,QASC,QAJP,QBVV,QBV8,QAB9,QAY2,QAW9,QAK6 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>File Handles When Spawning from a MOVE Application</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 17, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q90800 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
7.00   | 1.00 1.50
MS-DOS | WINDOWS
kbprg kbfasttip
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft C/C++ Compiler (CL.EXE) included with:
<P>
<P><PRE>    - Microsoft C/C++ for MS-DOS, version 7.0
    - Microsoft Visual C/C++ for Windows, versions 1.0 and 1.5
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
A program using the MOVE overlay manager that spawns a child program will
not behave the same as a program that does not use the MOVE overlay
manager. The memory allocated to the XMS and EMS overlay caches is not
released before the spawn. This must be done explicitly with the
_movepause() function.
<P>
The documentation for _movepause() is in the file MOVEAPI.TXT included with
C/C++ and is in MOVEAPI.WRI in Visual C++. It states the following about
the function:
<P>
<PRE>   The _movepause function frees the cache memory and closes the
   executable file.

</PRE>This is useful when the program that is spawned uses extended or expanded
memory. If spawning with P_WAIT or preparing for an abnormal termination,
calling _movepause() is the only way to make sure that the cache is
released.
<P>
Normally, files that are open when a spawn occurs will remain open in the
child process. The MOVE overlay manager keeps a file handle to the
executable open until termination. Calling _movepause() will close this
file handle that would otherwise remain open after a spawn or after an
abnormal termination.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following sample demonstrates the result of using _movepause() to
release the file handle to a MOVE application. There are two programs that
spawn each other with P_OVERLAY. As is, the 16th spawn will fail with the
message:
<P>
<PRE>   Spawn failed: Too many open files

</PRE>If the calls to _movepause() are uncommented, they will spawn each
other infinitely. To break the loop, press CTRL+C.
<P>
<P><h3>Sample Code</h3>
 
<P>
<P><h3>MAIN1.C</h3>
 
<P>
<PRE>/*
 * Compiler options needed: /AM /c
 * LINK command: main1 over1,,,,main1.def
 */

#include &lt;stdio.h&gt;
#include &lt;process.h&gt;

/* You may need to change the path in the following include statement
   if MOVEAPI.H is not in the "c:\c700\source\move" directory */
// Remove the comment from the following line to free handle
// #include "c:\c700\source\move\moveapi.h"

void func1(void);

void main()
</PRE>{
<PRE>   int count;

   func1();

//   _movepause();                  // Remove comment to free handle

   if (_spawnl(P_OVERLAY, "main2.exe", NULL) == -1)
      perror("Spawn failed");
</PRE>}
<P>
<P><h3>OVER1.C</h3>
 
<P>
<PRE>#include &lt;stdio.h&gt;

void func1()
</PRE>{
<PRE>   printf("In func1.\n");
</PRE>}
<P>
<P><h3>MAIN1.DEF</h3>
 
<P>
SEGMENTS
<PRE>   over1_text OVL:1

</PRE><h3>MAIN2.C</h3>
 
<P>
<PRE>/*
 * Compiler options needed: /AM /c
 * LINK command: main2 over2,,,,main2.def
 */

#include &lt;stdio.h&gt;
#include &lt;process.h&gt;

/* You may need to change the path in the following include statement
   if MOVEAPI.H is not in the "c:\c700\source\move" subdirectory */
// Remove the comment from the following line to free handle
// #include "c:\c700\source\move\moveapi.h"

void func2(void);

void main()
</PRE>{
<PRE>   int count;
   func2();

//   _movepause();                      // Uncomment to free handle

   if (_spawnl(P_OVERLAY, "main1.exe", NULL) == -1)
      perror("Spawn failed");
</PRE>}
<P>
<P><h3>OVER2.C</h3>
 
<P>
<PRE>#include &lt;stdio.h&gt;

void func2()
</PRE>{
<PRE>   printf("In func2.\n");
</PRE>}
<P>
<P><h3>MAIN2.DEF</h3>
 
<P>
SEGMENTS
<PRE>   over2_text OVL:1
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 1.00 1.50 5.30 5.31.009 5.60 spawn exec<BR>
KBCategory: kbprg kbfasttip<BR>
KBSubcategory: MoveOverlay<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 17, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
