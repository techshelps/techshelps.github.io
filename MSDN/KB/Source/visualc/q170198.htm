

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: STL Sample for gslice::(length, start, stride) Functions </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q170198">
<META NAME="KBModify" CONTENT="1997/10/09">
<META NAME="KBCreate" CONTENT="1997/06/16">
<META NAME="Keywords" CONTENT="STLIss kbcode">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The sample code below illustrates how to use the gslice::length, gslice::start, and gslice::stride STL functions in Visual C++.  Note that there are some differences in the implementation of the Standard C++ Library components in Visual C++ version...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGI,QAIJ,QBFY,QATX,QA28,QATJ,QANC,QAIF,QABB,QAPF,QDIV,QA56,QA55,QAY5,QAH4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: STL Sample for gslice::(length, start, stride) Functions</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 9, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q170198</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Standard C++ Library included with:
   - Microsoft Visual C++, 32-bit Editions, version 4.2
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The sample code below illustrates how to use the gslice::length,
gslice::start, and gslice::stride STL functions in Visual C++.
<P>
Note that there are some differences in the implementation of the Standard
C++ Library components in Visual C++ version 4.2 versus later revisions.
The relevant sections of code below compile conditionally based upon the
value of _MSC_VER.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Required Header</h3>
 
<P>
<PRE>   &lt;valarray&gt;

</PRE><h3>Prototype</h3>
 
<P>
<PRE>   class gslice
   {
   public:
      gslice();
      gslice(size_t st, const valarray&lt;size_t&gt; len,
                  const valarray&lt;size_t&gt; str);
      size_t start() const;
   #if _MSC_VER == 1020 // if VC++ 4.2, define length()
      const valarray&lt;size_t&gt; length() const;
   #else // if later than VC++ 4.2, define size() instead
      const valarray&lt;size_t&gt; size() const;
   #endif
      const valarray&lt;size_t&gt; stride() const;
   };

</PRE>NOTE: The class/parameter names in the prototype may not match the version
in the header file. Some have been modified to improve readability.
<P>
<P><h3>Description</h3>
 
<P>
This sample demostrates the use of STL gslice array to change "Hello
World!" string to "Hello There." string.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>    //////////////////////////////////////////////////////////////////////
    //
    // Compile options needed: None
    //
    // &lt;filename&gt; :  main.cpp
    //
    // Functions:
    //
    //  gslice::length, gslice::start, gslice::stride
    //
    // Written by Yeong-Kah Tam
    // of Microsoft Product Support Services,
    // Copyright (c) 1996 Microsoft Corporation. All rights reserved.
    //////////////////////////////////////////////////////////////////////

    #include &lt;iostream&gt;          // for i/o functions
    #include &lt;valarray&gt;          // for valarray

    #if _MSC_VER &gt; 1020 // if later than VC++ 4.2
    using namespace std;   // the std C++ libs are in namespace std
    #endif

    void main()
    {
       // Initialize string 1 to contain "Hello World!", and string 2 to
       // contain "There".
       valarray&lt;char&gt; string1("Hello World!", 12);
       valarray&lt;char&gt; string2("There.", 6);

       // Display both strings.
       cout &lt;&lt; "String 1 = ";
       int strlen;
    #if _MSC_VER == 1020   // VC++ 4.2 - call length()
       strlen = string1.length();
    #else   // later than VC++ 4.2 - call size()
       strlen = string1.size();
    #endif
       for (int i = 0; i &lt; strlen; i++)
          cout &lt;&lt; string1[i];
       cout &lt;&lt; "\r\n";

       cout &lt;&lt; "String 2 = ";
    #if _MSC_VER == 1020   // VC++ 4.2 - call length()
       strlen = string2.length();
    #else   // later than VC++ 4.2 - call size()
       strlen = string2.size();
    #endif
       for (i = 0; i &lt; strlen; i++)
          cout &lt;&lt; string2[i];
       cout &lt;&lt; "\r\n\r\n";

       // Create 2 vectors for use by gslice().
       const size_t lv[] = {2, 3};  // number of initial indexes
       const size_t dv[] = {3, 1};  // increment value
       const valarray&lt;size_t&gt; len(lv, 2), stride(dv, 2);

       // gslice(6, len, stride) creates a gslice
            // array of {6, 7, 8, 9, 10, 11} which is used to select the
            // elements of string1.  "World!" it is. In turn, these
            // elements are replaced by the corresponding element
       // in string2.
       gslice gslice_obj(6, len, stride);
       string1[gslice_obj] = string2;

       // Display starting index, length vector, and stride vector of
            // the gslice object.
       cout &lt;&lt; "gslice - starting index = " &lt;&lt; gslice_obj.start()
              &lt;&lt; "\r\n";

    #if _MSC_VER == 1020   // VC++ 4.2 - call length()
       valarray&lt;size_t&gt; gslice_len = gslice_obj.length();
       strlen = gslice_len.length();
    #else   // later than VC++ 4.2 - call size()
       valarray&lt;size_t&gt; gslice_len = gslice_obj.size();
       strlen = gslice_len.size();
    #endif
       cout &lt;&lt; "gslice - length vector  = ";
       for (i = 0; i &lt; strlen; i++)
          cout &lt;&lt; gslice_len[i] &lt;&lt; "  ";
       cout &lt;&lt; "\r\n";

       valarray&lt;size_t&gt; gslice_stride = gslice_obj.stride();
    #if _MSC_VER == 1020   // VC++ 4.2 - call length()
       strlen = gslice_stride.length();
    #else   // later than VC++ 4.2 - call size()
       strlen = gslice_stride.size();
    #endif
       cout &lt;&lt; "gslice - stride vector  = ";
       for (i = 0; i &lt; strlen; i++)
          cout &lt;&lt; gslice_stride[i] &lt;&lt; "  ";
       cout &lt;&lt; "\r\n\r\n";

       // Now print out the result.
       cout &lt;&lt; "After the change, String 1 = ";
    #if _MSC_VER == 1020   // VC++ 4.2 - call length()
       strlen = string1.length();
    #else   // later than VC++ 4.2 - call size()
       strlen = string1.size();
    #endif
       for(i = 0; i &lt; strlen; i++)
          cout &lt;&lt; string1[i];
       cout &lt;&lt; "\r\n";
    }

</PRE><h3>Program Output</h3>
 
<P>
<PRE>   String 1 = Hello World!
   String 2 = There.

   gslice - starting index = 6
   gslice - length vector  = 2  3
   gslice - stride vector  = 3  1

</PRE>After the change, String 1 = Hello There.
<P>
<P><h2>REFERENCES</h2>
 
<P>
Visual C++ Books On Line: Visual C++ Books:C/C++:Standard C++ Library
Reference.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: STL STLSample length start stride
<P>

(c) Microsoft Corporation 1997, All Rights Reserved.<BR>
Contributions by Yeong-Kah Tam, Microsoft Corporation<BR>
Keywords          : STLIss kbcode<BR>
Version           : WINNT:4.2;<BR>
Platform          : NT WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 9, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
