

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Handle OCM_CTLCOLORxxx Reflected Messages </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q148242">
<META NAME="KBModify" CONTENT="1997/07/02">
<META NAME="KBCreate" CONTENT="1996/03/07">
<META NAME="Keywords" CONTENT="kbprg MfcOLE kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  This article shows you how to change the background color of an OLE control that subclasses a Windows Control, with sample code for an Edit control.  This article should apply to Button, Static, ListBox, and ComboBox controls as well.  MORE INFORMA...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB5,QA7O,QAMN,QAG9,QAOE,QAEV,QAHV,QAHP,QAYC,QA9Q,QASW,QDL9,QBWQ,QBWO,QBWN V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Handle OCM_CTLCOLORxxx Reflected Messages</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 2, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q148242</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
   Microsoft Visual C++, 32-bit Edition, version 4.0, 4.1, 4.2, 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article shows you how to change the background color of an OLE control
that subclasses a Windows Control, with sample code for an Edit control.
<P>
This article should apply to Button, Static, ListBox, and ComboBox controls
as well.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Please refer to the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE_ID : <B><A HREF="../WIN32SDK/Q130952.htm">Q130952</A></B>
   TITLE      : WM_CTLCOLORxxx Message Changes for Windows 95

</PRE>for more about the exact WM_CTLCOLORxxx message sent by each control. If a
control sends the WM_CTLCOLORSTATIC, you have to handle the
OCM_CTLCOLORSTATIC message in the OCX and so on.
<P>
To change the background color of an OLE Control that subclasses an Edit
Control, you must handle the OCM_CTLCOLOREDIT(32-bit) messages. These
messages are intercepted by the "reflector window" (created for an OLE
control that subclasses a Windows control) that reflects them back to the
OLE control itself. In response to these reflected messages, you must set
the background color (and optionally the foreground color) and return a
handle to a brush initialized with the background color.
<P>
<P><h3>Step-by-Step Example</h3>
 
<P>
The sample code in this example illustrates how to handle OCM_CTLCOLOREDIT
in order to change the background color of an OLE control that subclasses
an Edit control

<OL><P><LI>Generate an MFC ActiveX Control Wizard Application, and select the
   option that allows you to subclass an Edit control.

<P><LI>To handle an OCM_CTLCOLOREDIT reflected window message, declare the
   following handler function in the .h file of your control's class:
<P>
<P><PRE>      LRESULT OnOcmCtlColor(WPARAM wParam, LPARAM lParam);
</PRE>
<P><LI>In the .cpp file of your control's class, add an ON_MESSAGE entry to the
   message map:
<P>
<P><PRE>      ON_MESSAGE(OCM_CTLCOLOREDIT, OnOcmCtlColor)
</PRE>
<P><LI>Also in the .cpp file, implement the OnOcmCtlColor member function to
   process the reflected message:
<P>
<P><PRE>      // Assuming CEdtclrCtrl is the class for this control
      LRESULT CEdtclrCtrl::OnOcmCtlColor(WPARAM wParam, LPARAM lParam)
      {
<PRE></PRE>        //Declare CBrush* m_pBackBrush in your control's .h file
        if (m_pBackBrush == NULL)
           m_pBackBrush = new CBrush(RGB(0,0,0));
        CDC* pdc = CDC::FromHandle((HDC)wParam);
        pdc-&gt;SetBkMode(TRANSPARENT);
        pdc-&gt;SetBkColor(RGB(0,0,0));
        pdc-&gt;SetTextColor(RGB(0,255,0));
        HBRUSH far* hbr = (HBRUSH far*)m_pBackBrush-&gt;GetSafeHandle();
        return ((DWORD)hbr);
      }

</PRE></OL>NOTE: In your control's constructor, set m_pBackBrush = NULL, and in
your control's destructor, delete m_pBackbBrush.

<OL><P><LI>Build and register your control.

<P><LI>Insert this control into the ActiveX Control Test Container. Notice that
   the background color of your OLE control is changed.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
Refer to technical article “TN062: Message Reflection for Windows Controls”
and the article “ActiveX Controls: Sub-classing a Windows Control in Visual
C++ Programmer's Guide.”
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : kbprg MfcOLE kbhowto<BR>
Technology          : kbMfc kbole<BR>
Version             : 4.0 4.1 4.2 5.0<BR>
Platform            : NT WINDOWS<BR>
Issue type          : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 2, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
