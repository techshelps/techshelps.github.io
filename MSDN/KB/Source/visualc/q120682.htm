

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Exclude CLSIDs from OLE's Insert Object Dialog </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q120682">
<META NAME="KBModify" CONTENT="1997/10/10">
<META NAME="KBCreate" CONTENT="1994/09/18">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  When building a container/server application with the Microsoft Foundation OLE Classes, you should prohibit the application user from inserting an object of the type serviced by the application itself. In fact, with an MDI application, if you try t...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAW6,QAPN,QA01,QAY2,QACI,QA9N,QAML,QAH4,QABO,QAI4,QAP2,QAJH,QA9Q,QAY5,QAYL V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Exclude CLSIDs from OLE's Insert Object Dialog</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q120682</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
<PRE>1.50    | 2.00
</PRE>WINDOWS | WINDOWS NT
kbprg kbcode
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
<P>
<P><PRE>    - Microsoft Visual C++ for Windows, version 1.5
    - Microsoft Visual C++ 32-bit Edition 2.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
When building a container/server application with the Microsoft
Foundation OLE Classes, you should prohibit the application user from
inserting an object of the type serviced by the application itself. In
fact, with an MDI application, if you try to embed your server's object in
your server's document, you'll get the following message and trace messages
indicating that a QueryInterface call failed:
<P>
Message box statement:
<P>
<PRE>   Failed to create object. Make sure that the object is entered
   in the system registry.

</PRE>Trace messages:
<P>
<PRE>   Warning: constructing COleException, scode = E_NOINTERFACE ($80000004)
   Warning: Throwing an Exception of type COleException"

</PRE>This article gives an example showing how to customize the OLE Insert
Object dialog wrapped by the COleInsertDialog class. This customization
omits your server object's class id from the selection list so the user
won't be able to embed it.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The COleInsertDialog class contains a member m_io -- as described in online
help for the OLE Classes:
<P>
<PRE>   COleInsertDialog::m_io

   Structure of type OLEUIINSERTOBJECT used to control the
   behavior of the Insert Object dialog box. Members of
   this structure can be modified either directly or
   through member functions.

</PRE>The OLEUIINSERTOBJECT dialog contains two members which allow the user to
exclude specific object types from the dialog's selection list by CLSID.
The member lpClsidExclude is a pointer of type LPCLSID and therefore must
point directly to a variable of type CLSID. The member cClsidExclude is a
UINT and contains the number of CLSID types that are pointed to by
lpClsidExclude. If you want to exclude more than one CLSID, use an array.
<P>
The sample code below demonstrates how to exclude the AppWizard generated
CLSID for the application's own object. This CLSID can be found in the
CWinApp-derived class implementation file as the static global variable
"clsid" and will look something like this:
<P>
<PRE>// This identifier was generated to be statistically unique for your app.
// You may change it if you prefer to choose a specific identifier.
static const CLSID BASED_CODE clsid = {   0x565295c6, 0xc992, 0x11cd,
                        { 0x96, 0xf2, 0x0, 0xaa, 0x0, 0x3b, 0x80,0x67 } };

</PRE>For the purpose of accessing clsid from a view class member function,
take the "static" storage class off the above declaration.
<P>
You can then assign the lpClsidExclude pointer to &amp;clsid from any module in
the program. For the purpose of this sample, cClsidExclude is a count of
one, so no array will be used.
<P>
The code to assign these members must be run before displaying the dialog.
Therefore it's best to assign these members in the container view class'
OnInsertObject() member. The OnInsertObject() shown in the sample code
below is based on the one that AppWizard provides.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>/* AppWizard generated OnInsertObject() function modified to
 * exclude our own object type from the OLE Insert Object Dialog.
 */
void CSvrcntrView::OnInsertObject()
</PRE>{
<PRE>    // Invoke the standard Insert Object dialog box to obtain information
    //  for new CSvrcntrCntrItem object.
    COleInsertDialog dlg;

    // Our own object's clsid - don't insert it!
    dlg.m_io.lpClsidExclude = (LPCLSID) &amp;clsid;
    dlg.m_io.cClsidExclude = 1;    // Number of clsid's in the array.

    if (dlg.DoModal() != IDOK)
        return;

    BeginWaitCursor();

    CSvrcntrCntrItem* pItem = NULL;
    TRY
    {
        // Create new item connected to this document.
        CSvrcntrDoc* pDoc = GetDocument();
        ASSERT_VALID(pDoc);
        pItem = new CSvrcntrCntrItem(pDoc);
        ASSERT_VALID(pItem);

        // Initialize the item from the dialog data.
        if (!dlg.CreateItem(pItem))
            AfxThrowMemoryException();  // any exception will do
        ASSERT_VALID(pItem);

        // If item created from class list (not from file) then launch
        //  the server to edit the item.
        if (dlg.GetSelectionType() == COleInsertDialog::createNewItem)
            pItem-&gt;DoVerb(OLEIVERB_SHOW, this);

        ASSERT_VALID(pItem);

        // As an arbitrary user interface design, this sets the selection
        //  to the last item inserted.

        // TODO: reimplement selection as appropriate for your application

        m_pSelection = pItem;   // set selection to last inserted item
        pDoc-&gt;UpdateAllViews(NULL);
    }
    CATCH(CException, e)
    {
        if (pItem != NULL)
        {
            ASSERT_VALID(pItem);
            pItem-&gt;Delete();
        }
        AfxMessageBox(IDP_FAILED_TO_CREATE);
    }
    END_CATCH

    EndWaitCursor();
</PRE>}
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 1.50 2.00 2.50 3.00<BR>
KBCategory: kbprg kbcode<BR>
KBSubCategory: MfcOLE<BR>
Technology        : kbMfc<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
