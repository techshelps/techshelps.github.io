

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INFO: Clarification of the "g" Format Specifier for printf() </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q43392 ">
<META NAME="KBModify" CONTENT="1997/09/02">
<META NAME="KBCreate" CONTENT="1989/04/14">
<META NAME="Keywords" CONTENT="CRTIss kbcode kbfasttip">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  In Microsoft C, the output format resulting from the printf() format specifier  g  does not exactly match the output format resulting from either format specifier  e  or  f . The documentation states that  g  will use either the  f  or  e  format, ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBFY,QDNG,QAHH,QBE7,QBE6,QAKC,QDMW,QBWP,QDL9,QBWQ,QBWO,QBWN,QAGN,QBC9,QBC8 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INFO: Clarification of the "g" Format Specifier for printf()</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 2, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q43392 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>The C Run-time (CRT) included with:
   - Microsoft C for MS-DOS, versions 6.0, 6.0a, 6.0ax
   - Microsoft C for OS/2, versions 6.0, 6.0a
   - Microsoft C/C++ for MS-DOS, version 7.0
   - Microsoft Visual C++ for Windows, versions 1.0, 1.5
   - Microsoft Visual C++ 32-bit Edition, versions 1.0, 2.0, 4.0, 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft C, the output format resulting from the printf() format
specifier "g" does not exactly match the output format resulting from
either format specifier "e" or "f". The documentation states that "g" will
use either the "f" or "e" format, whichever is more compact. This is true
in the sense of the overall format but there are some differences.
<P>
The precision value is interpreted differently in "g" format than in "f"
format. The documentation explains this difference. The precision for "f"
specifies the number of digits after the decimal point. The precision for
"g" specifies the maximum number of significant digits printed.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following example demonstrates the difference described in the SUMMARY:
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   #include &lt;stdio.h&gt;

   void main (void)
   {
      double x = 2.0/3.0; /* 0.666... */
      double y;

      y = 6.0 + x;
     printf ("%.4g\n", y);
     printf ("%.4f\n", y);
     printf ("%.4e\n\n", y);

      y = 66.0 + x;
     printf ("%.4g\n", y);
     printf ("%.4f\n", y);
     printf ("%.4e\n\n", y);

      y = 666.0 + x;
     printf ("%.4g\n", y);
     printf ("%.4f\n", y);
     printf ("%.4e\n\n", y);

      y = 6666.0 + x;
     printf ("%.4g\n", y);
     printf ("%.4f\n", y);
     printf ("%.4e\n\n", y);

      y = 66666.0 + x;
     printf ("%.4g\n", y);    /* switches to "e" notation here */
     printf ("%.4f\n", y);
     printf ("%.4e\n\n", y);
   }

</PRE>The results of the above program are correct as shown below:
<P>
<PRE>   6.667
   6.6667
   6.6667e+000

   66.67
   66.6667
   6.6667e+001

   666.7
   666.6667
   6.6667e+002

   6667
   6666.6667
   6.6667e+003

   6.667e+004
   66666.6667
   6.6667e+004
</PRE> 
<PRE>Keywords          : CRTIss kbcode kbfasttip
Version           : MS-DOS:6.0,6.00a,6.00ax,7.00; OS/2:6.0,6.00a;  WINDOWS:1.0,1.5; WINDOWS NT:1.0,2.0,4.0,5.0
Platform          : MS-DOS NT OS/2 WINDOWS
Issue type        : kbinfo</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 2, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
