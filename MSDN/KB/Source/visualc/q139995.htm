

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Duplicate Column Names Improperly Qualified by Wizards </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q139995">
<META NAME="KBModify" CONTENT="1997/09/18">
<META NAME="KBCreate" CONTENT="1995/11/20">
<META NAME="Keywords" CONTENT="MfcDAO MfcDatabase vcbuglist400 vcfixlist410 kbprg kbbuglist kbfixlist">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  If you use AppWizard or ClassWizard to join tables that contain columns that have identical names in an MFC application, you may receive an exception when the recordset is opened. The exception indicates that there has been an:     Ambiguous field ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAUJ,QAE1,QDMN,QARM,QA6A,QA7O,QA7N,QARR,QAR4,QBWD,QAY5,QAJH,QAAP,QAEF,QAB9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Duplicate Column Names Improperly Qualified by Wizards</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q139995</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>AppWizard and ClassWizard included with:
   - Microsoft Visual C++, 32-bit Edition, version 4.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
If you use AppWizard or ClassWizard to join tables that contain columns
that have identical names in an MFC application, you may receive an
exception when the recordset is opened. The exception indicates that there
has been an:
<P>
<PRE>   Ambiguous field reference '[column]'

</PRE>where column corresponds to the name of a column that appears in multiple
tables of the join.
<P>
<P><h2>CAUSE</h2>
 
<P>
AppWizard and ClassWizard apply too many constraints when comparing column
names of joined tables for duplication. Column names should be considered
duplicate and should therefore be qualified with the appropriate table name
(for example, [Table].[Column]) based solely on the name string. However,
the wizards additionally check the type and, in the case where the type can
have a variable length (such as the Text type), the maximum length of the
field.  As a result, if columns in joined tables share the same name but
are of different types or have different maximum sizes, table name
qualifiers are not applied and the column names constitute ambiguous
references.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
In those cases where AppWizard or ClassWizard have mistakenly omitted table
name qualifiers, add them manually. How you do it depends on whether your
application is an ODBC or a DAO database application.
<P>
<P><h3>ODBC Applications</h3>
 
<P>
Add the table qualifiers to the ambiguous references in the RFX functions
of your CRecordset-derived class's DoFieldExchange. Be sure to enclose the
table qualifier in square brackets [] if the name is a reserved word or
contains spaces as in this example:
<P>
<PRE>   [Table 1].[Column 1]

</PRE><h3>DAO Applications</h3>
 
<P>
Add the table qualifiers to the ambiguous references in the DFX functions
of your CDaoRecordset-derived class's DoFieldExchange. Follow this
procedure:

<OL><P><LI>Add qualifiers only to those columns that are duplicates. Qualifying
   columns where no ambiguity exists will result in errors as described in
   the following article in the Microsoft Knowledge Base:
<P>
<P><PRE>      ARTICLE-ID: <B><A HREF="../VISUALC/Q139994.htm">Q139994</A></B>
<PRE></PRE>      TITLE     : PRB: Specifying Table Name with Column Name in MFC DAO

</PRE><P><LI>Add the appropriate table name qualifier to any column that appears in
   more than one of the joined tables. The exact form to use is described
   in detail in the following article in the Microsoft Knowledge Base:
<P>
<P><PRE>      ARTICLE-ID: <B><A HREF="../VISUALC/Q139997.htm">Q139997</A></B>
<PRE></PRE>      TITLE     : BUG: "Item not found in this collection" with MFC DAO
                  Join

   NOTE: The content of <B><A HREF="../VISUALC/Q139997.htm">Q139997</A></B> has been copied into the "References" of
   this article for your convenience.

</PRE></OL><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products
listed at the beginning of this article. This bug was corrected in
Visual C++ 4.1.
<P>
<P><h2>REFERENCES</h2>
 
<P>
The complete text of the following article in included in this article for
your convenience:
<P>
********************* Beginning of Included Article *********************
<P>
ARTICLE-ID: <B><A HREF="../VISUALC/Q139997.htm">Q139997</A></B>
<PRE>TITLE     : FIX: "Item not found in this collection" with MFC DAO Join

</PRE> 
The information in this article applies to:

<UL><LI>AppWizard and ClassWizard included with:
   Microsoft Visual C++, 32-bit Edition, version 4.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When you try to modify a record in an MFC DAO application that uses a
recordset based on a join and that was created by AppWizard or ClassWizard,
the application may throw an exception on the update. Specifically, the
exception indicates:
<P>
<PRE>   Item not found in this collection.

</PRE><h2>CAUSE</h2>
 
<P>
When the wizards generate references to columns that have names that appear
in multiple tables of the join, the wizards will precede the column name
with the name of the table as a qualifier. Both the table name qualifier
and column name are enclosed in brackets in the DFX functions of the
CDaoRecordset-derived class's DoFieldExchange. For example:
<P>
<PRE>   [Table].[Column]

</PRE>The presence of the brackets combined with the use of the table name
qualifier causes the search for the specified field in the collection of
fields maintained by the database engine to fail.
<P>
Note that the presence of brackets around unqualified column names does not
interfere with the field name search and is thus acceptable. This explains
why some fields will be updatable while attempts to update others throws
the exception; the updatable fields are likely unique and therefore
unqualified.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To work around this problem, use one of the following two techniques
depending on the names of the affected tables and columns (the ones for
which table qualifiers are necessary).
<P>
<P><h3>If Table and Column Names Contain No Spaces</h3>
 
<P>
Remove the brackets that enclose the table and column names. The resulting
reference should be of this form:
<P>
<PRE>   Table.Column

</PRE><h3>If Table and/or Column Names Contain Spaces</h3>
 
<P>
Don't remove the bracket delimiters or your application will throw an
exception that indicates:
<P>
<PRE>   Syntax error in query expression 'table name.column name'.

</PRE>Instead, you must override one of the existing overloads of the virtual
function CDaoRecordset::SetFieldValue() as follows (assuming your
CDaoRecordset is named CMyDaoRecordset):
<P>
<PRE>   void CMyDaoRecordset::SetFieldValue(LPCTSTR lpszName,
                                  const COleVariant&amp; varValue)
   {
        CString strNewName(lpszName);
        StripBrackets(strNewName, strNewName.GetBuffer(0));
        strNewName.ReleaseBuffer();
        CDaoRecordset::SetFieldValue(strNewName, varValue);
   }

</PRE>This override uses the StripBrackets member function of CDaoRecordset to
remove the offending brackets and allows the search for the field in the
field collection to succeed.
<P>
NOTE: You can easily add this override to your application by using the
Visual C++ ClassView Add Member Function command. Please refer to the
online documentation and Help files for more details about this command.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products
listed at the beginning of this article. This bug was corrected in
Visual C++ 4.1.
<P>
********************* End of Included Article *********************
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 4.10
<P>

Keywords          : MfcDAO MfcDatabase vcbuglist400 vcfixlist410 kbprg kbbuglist kbfixlist<BR>
Technology        : kbMfc<BR>
Version           : 4.0<BR>
Platform          : NT WINDOWS<BR>
Issue type        : kbbug<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
