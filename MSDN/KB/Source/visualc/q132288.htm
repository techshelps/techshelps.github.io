

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: ExtTextOut Causes Assertion in DCPREV.CPP or DCMETA.CPP </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q132288">
<META NAME="KBModify" CONTENT="1997/09/18">
<META NAME="KBCreate" CONTENT="1995/07/05">
<META NAME="Keywords" CONTENT="MfcDocView kbbuglist kbfixlist kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Calling ExtTextOut in a CView's OnDraw or OnPaint routine causes an assertion failure when Print Preview is used. The assertion failure occurs only when the lpszString parameter points to read-only memory. The assertion failure will occur on one of...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBQU,QAGI,QBFY,QA56,QA55,QAR4,QBW6,QBXT,QA5V,QAY5,QAM1,QAIB,QBRM,QBWP,QAH6 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: ExtTextOut Causes Assertion in DCPREV.CPP or DCMETA.CPP</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q132288</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.50 1.51 1.52 | 2.00 2.10
<PRE>WINDOWS        | WINDOWS NT
</PRE>kbprg kbfixlist
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes(MFC) included with:
<P>
<P><PRE>    - Microsoft Visual C++ for Windows, versions 1.5, 1.51, 1.52
    - Microsoft Visual C++, 32-bit Edition, versions 2.0, 2.1
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Calling ExtTextOut in a CView's OnDraw or OnPaint routine causes an
assertion failure when Print Preview is used. The assertion failure occurs
only when the lpszString parameter points to read-only memory. The
assertion failure will occur on one of the following lines:

<UL><LI>In Visual C++, version 1.50 (MFC 2.50):
<P>
   DCPREV.CPP - Line 588

<LI>In Visual C++, version 1.51 or 1.52 (MFC 2.51 or MFC 2.52):
<P>
   DCPREV.CPP - Line 592

<LI>In Visual C++, 32-bit Edition, version 2.0 or 2.1 (MFC 3.0 or 3.1):
<P>
   DCPREV.CPP - Line 594
<P>
</UL><h2>CAUSE</h2>
 
<P>
The cause is in an incorrect ASSERT statement in the CPreviewDC::ExtTextOut
function as follows:
<P>
<PRE>   ...
   ASSERT(AfxIsValidAddress(lpszString, nCount));
   ...

</PRE>The documentation states (correctly) that AfxIsValidAddress takes an
optional third parameter that specifies whether the memory is to be used
for both reading and writing. It defaults to TRUE.
<P>
Because this particular ASSERT does not provide the optional third
parameter, the call to AfxIsValidAddress checks whether the memory pointed
to by lpszString can be written to. If it cannot, the assertion fails.
<P>
Note that there is no need for the ExtTextOut function to write to the
memory pointed to by lpszString.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Modify the call to ExtTextOut so that it passes non-read-only memory to the
function. This can be done by storing your string data in a different
location or by making a copy of the string data before calling the
ExtTextOut function.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article.  This problem was fixed in Microsoft
Visual C++, 32-bit Edition, version 4.0.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.50 1.51 1.52 2.50 2.51 2.52 2.00 2.10 3.00<BR>
3.10<BR>
KBCategory: kbprg kbfixlist kbbuglist<BR>
KBSubcategory: MfcDocView<BR>
Keywords          : MfcDocView kbbuglist kbfixlist kbprg<BR>
Technology        : kbMfc<BR>
Version           : 1.50 1.51 1.52 | 2.00 2.10<BR>
Platform          : NT WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
