

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Print Preview Problems for Chars with ASCII Values &gt; 127 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q116299">
<META NAME="KBModify" CONTENT="1997/09/18">
<META NAME="KBCreate" CONTENT="1994/06/15">
<META NAME="Keywords" CONTENT="MfcPrinting kbbuglist kbfixlist kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Microsoft Foundation Classes (MFC) library applications may have problems performing a print preview of text that contains characters with ASCII values greater than 127. The problems can range from uneven spacing of the characters to a general prot...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBRM,QBWP,QAH6,QBHQ,QBFY,QA56,QA55,QAKD,QAKP,QDL9,QBWQ,QBWO,QBWN,QAY5,QAYL V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Print Preview Problems for Chars with ASCII Values &gt; 127</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q116299</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00 1.50 | 1.00
<PRE>WINDOWS   | WINDOWS NT
</PRE>kbprg kbfixlist kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
<P>
<P><PRE>    - Microsoft Visual C++ for Windows, versions 1.0 and 1.5
    - Microsoft Visual C++ 32-bit Edition, version 1.0
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Microsoft Foundation Classes (MFC) library applications may have problems
performing a print preview of text that contains characters with ASCII
values greater than 127. The problems can range from uneven spacing of the
characters to a general protection fault (GPF) when you try to activate a
Print Preview.
<P>
<P><h2>CAUSE</h2>
 
<P>
The routine "CPreviewDC::ComputeDeltas()", located in the file DCPREV.CPP,
passes signed char values as the second and third parameters to the
function "::GetCharWidth()". However, ::GetCharWidth() takes unsigned
integer values for its second and third parameters. In the process of
converting from a signed char to an unsigned int, the wrong value is
passed to ::GetCharWidth(), and the function either returns incorrect
values or causes a GPF.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To avoid the problem, you can modify the file DCPREV.CPP and declare the
two variables "lpszCurChar" and "lpszStartRun" as being long pointers to
unsigned const characters. See the "MORE INFORMATION" section, below, to
see exactly what changes need to be made.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the products listed at the
beginning of this article. This problem was corrected in MFC version 3.0,
included with Visual C++ version 2.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The function CPreviewDC::ComputeDeltas(,) located in the source file
DCPREV.CPP, declares and uses two variables called lpszCurChar and
lpszStartRun. These two variables are declared as being of type LPCSTR (in
other words, 32-bit pointers to a const signed char). To avoid the problem
of the pointers referring the ::GetCharWidth() function to passing
characters, declare the variables lpszCurChar and lpszStartRun as being
32-bit pointers to const unsigned chars. With versions 2.0 and 2.5 of the
MFC library supplied with Visual C++ for Windows, versions 1.0 and 1.5,
this can be done when you define a new type called "LPCTSTR" with the
following typedef:
<P>
<PRE>   typedef const unsigned char FAR * LPCTSTR;

</PRE>Place the definition of the LPCSTR type in the file DCPREV.CPP at global
scope before the definition of the function "CPreviewDC::ComputeDeltas()".
The LPCTSTR type is already defined in the 32-bit version of the MFC
library (supplied with Visual C++ for Windows NT, version 1.0) and does not
need to be defined in DCPREV.CPP with that version of the MFC library.
<P>
The variables lpszCurChar and lpszStartRun should be declared as being
of type LPCTSTR. To do this, make the changes listed below:

<OL><P><LI>In the file DCPREV.CPP supplied with Visual C++ for Windows, versions
   1.0 and 1.5, change lines 457 and 458 to read as follows:
<P>
<P><PRE>      LPCTSTR lpszCurChar = (LPCTSTR)lpszString;
      LPCTSTR lpszStartRun = (LPCTSTR)lpszString;
</PRE>
<P><LI>Change lines 489 and 490 to read as follows:
<P>
<P><PRE>      CSize sizeExtent = ::GetTextExtent(m_hAttribDC,(LPCSTR)lpszStartRun,
<PRE></PRE>          nRunLength);

</PRE><P><LI>In the file DCPREV.CPP, supplied with Visual C++ for Windows NT, version
   1.0, change lines 466 and 467 to read as follows:
<P>
<P><PRE>      LPCTSTR lpszCurChar = lpszString;
      LPCTSTR lpszStartRun = lpszString;
</PRE>
<P><LI>After following steps 1 through 3, rebuild the MFC library. For more
   information on rebuilding the MFC library, refer to the Class Library
   User's Guide or to the README.TXT file located in the MFC\SRC directory.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: international foreign extended umlaut 1.00 1.50<BR>
2.00 2.10 2.50<BR>
KBCategory: kbprg kbfixlist kbbuglist<BR>
KBSubcategory: MfcPrinting<BR>
Keywords          : MfcPrinting kbbuglist kbfixlist kbprg<BR>
Technology        : kbMfc<BR>
Version           : 1.00 1.50 | 1.00<BR>
Platform          : NT WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
