

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Retrieve a Counter Field Value Without Requerying </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q132397">
<META NAME="KBModify" CONTENT="1997/06/26">
<META NAME="KBCreate" CONTENT="1995/07/09">
<META NAME="Keywords" CONTENT="kbcode kbprg MfcDatabase">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The Microsoft Access ODBC driver version 2.x provides a Counter field data type. This is an autoincrement field, meaning that the value of the field is assigned automatically by the ODBC driver when a record is first created. This value can then be...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA5V,QALX,QAM9,QAKD,QA1S,QA7O,QA7N,QA9E,QDN9,QDMH,QAPP,QAU9,QASR,QAGI,QAH6 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Retrieve a Counter Field Value Without Requerying</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 26, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q132397</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
   - Microsoft Visual C++ for Windows, version 1.52
   - Microsoft Visual C++, 32-bit Edition, versions 2.1, 2.2, 4.0, 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The Microsoft Access ODBC driver version 2.x provides a Counter field data
type. This is an autoincrement field, meaning that the value of the field
is assigned automatically by the ODBC driver when a record is first
created. This value can then be used as a primary key or as general index.
<P>
Once a record is added, the value of the counter field is assigned by the
Microsoft Access ODBC driver version 2.x. You can save this value for later
use, and have an application retrieve the value of the counter field
without requerying. This article explains how.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
ODBC doesn't supply any mechanism by which an application can easily
retrieve the value of an autoincrement field when a record is added.
However, the Microsoft Access ODBC driver version 2.x does provide a
feature that can help. The Microsoft Access ODBC driver version 2.x appends
newly added records to the end of the current recordset if you use a
dynaset. After adding a record, an application can call MoveLast() to move
to the last record of the recordset to retrieve the value of the new
record.
<P>
If you want to move back to the previous cursor position following the
MoveLast() call, use the information provided in the following article in
the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../VISUALC/Q132398.htm">Q132398</A></B>
   TITLE     : HOWTO: Use Bookmarks with the MFC ODBC Database Classes

</PRE><h3>Sample Code</h3>
 
<P>
The following code segment is an example of how to use the bookmark code in
article <B><A HREF="../VISUALC/Q132398.htm">Q132398</A></B> to retrieve the value of a counter (autoincrement) field in
Microsoft Access version 2.0 so that you can save the value for later use
within your application. This example moves to a record, gets the bookmark
for the record, adds a record, calls MoveLast() to get to the newly added
record and thus retrieve the counter field value, and then moves back to
the record it came from.
<P>
<PRE>   CDatabase db;
   db.Open("MYDataSourceName",NULL,NULL,"ODBC;",FALSE);
   CCounterSet rs(&amp;db);

   // Open up dynaset because any records added by a CRecordset using
   // dynasets are appended to the end of Microsoft Access 2.0 recordset

   rs.Open(CRecordset::dynaset);

   // move to some record
   rs.MoveNext();

   BOOKMARK bookmark;
   rs.GetBookmark(&amp;bookmark);

   // Add record. Counter field of record will be given a value by
   // the ODBC driver
   rs.AddNew();
   rs.m_textfield="SomeText";
   rs.Update();

   // MoveLast to get on record just added
   rs.MoveLast();

   // retrieve the value of the counter field for the
   // newly added record here

   // return to the record you were on
   rs.MoveToBookmark(bookmark);

</PRE><h2>REFERENCES</h2>
 
<P>
For more information, please see the following article in the Microsoft
Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../VISUALC/Q124915.htm">Q124915</A></B>
   TITLE     : SAMPLE: Using Dynasets with the 16-bit MFC Database Classes
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.50 1.51<BR>
Keywords            : kbcode kbprg MfcDatabase<BR>
Technology          : kbMfc<BR>
Version             : 1.52 2.1 2.2 4.0 5.0<BR>
Platform            : NT WINDOWS<BR>
Issue type          : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 26, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
