

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INFO: fstream's File Pointers Are Not Independent </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q104634">
<META NAME="KBModify" CONTENT="1997/09/30">
<META NAME="KBCreate" CONTENT="1993/09/23">
<META NAME="Keywords" CONTENT="CPPLngIss kbcode kbfasttip">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The Microsoft  iostream Class Library Reference  in the Books Online included with Visual C++ 32-bit Edition, version 4.0, contains the following as part of the description for class filebuf:public iostream:     The reserve area, put area, and get ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAO2,QAO3,QA2F,QACI,QAXC,QAJZ,QBWP,QBFY,QABV,QADZ,QAVX,QAVW,QDL9,QBWQ,QBWO V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INFO: fstream's File Pointers Are Not Independent</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 30, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q104634</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Microsoft C/C++ compiler for MS-DOS, versions 7.0, 7.0a
<LI>Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51, 1.52
<LI>Microsoft Visual C++ 32-bit Edition, versions 1.0, 2.0, 2.1, 4.0, 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The Microsoft "iostream Class Library Reference" in the Books Online
included with Visual C++ 32-bit Edition, version 4.0, contains the
following as part of the description for class filebuf:public iostream:
<P>
<PRE>   The reserve area, put area, and get area are introduced in the
   streambuf class description. The put area and the get area are
   always the same for filebuf objects. Also, the get pointer and
   put pointers are tied; when one moves, so does the other.

</PRE>Previous versions of the Microsoft "iostream Class Library Reference" for
class filebuf:public iostream state the following:
<P>
<PRE>   Although the filebuf object's get and put pointers are
   theoretically independent, the get area and the put area cannot
   both be active at the same time.

</PRE>This statement can lead to some confusion as to whether the get and
put pointers are independent of each other. In the Microsoft iostream
library implementation of fstream, these pointers are not independent
of each other. If the get pointer moves, so does the put pointer. The
source code listed below demonstrates this behavior.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   /* Compile options needed: None. Build as a console .EXE for Windows NT
   */

   #include &lt;fstream.h&gt;
   #include &lt;strstrea.h&gt;
   #include &lt;assert.h&gt;
   #undef NDEBUG    // Make sure assert works.

   void main()
   {
     fstream stream("test",ios::in | ios::out | ios::binary);
     int temp;
     char input;

     cout &lt;&lt; "\n\nOpened binary file test" &lt;&lt; endl;
     cout &lt;&lt; "Get pointer is " &lt;&lt; hex &lt;&lt; stream.tellg() &lt;&lt; endl;
     cout &lt;&lt; "Put pointer is " &lt;&lt; hex &lt;&lt; stream.tellp() &lt;&lt; endl;
     cout &lt;&lt; "Now writing 256 bytes..." &lt;&lt; endl;
     for(temp = 0;temp &lt; 256;temp++)
     {
       stream.put((char)temp);
     }
     cout &lt;&lt; "Get pointer is " &lt;&lt; hex &lt;&lt; stream.tellg() &lt;&lt; endl;
     cout &lt;&lt; "Put pointer is " &lt;&lt; hex &lt;&lt; stream.tellp() &lt;&lt; endl;

     cout &lt;&lt; "\nNow setting the put pointer to hex 50" &lt;&lt; endl;
     stream.seekp(0x50);
     cout &lt;&lt; "Get pointer is " &lt;&lt; hex &lt;&lt; stream.tellg() &lt;&lt; endl;
     cout &lt;&lt; "Put pointer is " &lt;&lt; hex &lt;&lt; stream.tellp() &lt;&lt; endl;

     cout &lt;&lt; "\nNow setting the get pointer to hex 40" &lt;&lt; endl;
     stream.seekg(0x40);
     cout &lt;&lt; "Get pointer is " &lt;&lt; hex &lt;&lt; stream.tellg() &lt;&lt; endl;
     cout &lt;&lt; "Put pointer is " &lt;&lt; hex &lt;&lt; stream.tellp() &lt;&lt; endl;

     cout &lt;&lt; "\nNow writing one character" &lt;&lt; endl;
     stream.put('a');
     cout &lt;&lt; "Get pointer is " &lt;&lt; hex &lt;&lt; stream.tellg() &lt;&lt; endl;
     cout &lt;&lt; "Put pointer is " &lt;&lt; hex &lt;&lt; stream.tellp() &lt;&lt; endl;

     cout &lt;&lt; "\nNow reading one character" &lt;&lt; endl;
     stream.get(input);
     cout &lt;&lt; "Get pointer is " &lt;&lt; hex &lt;&lt; stream.tellg() &lt;&lt; endl;
     cout &lt;&lt; "Put pointer is " &lt;&lt; hex &lt;&lt; stream.tellp() &lt;&lt; endl;
     stream.close();
   }
</PRE> 
<PRE>Keywords          : CPPLngIss kbcode kbfasttip
Version           : MS-DOS:7.0,7.00a;WINDOWS:1.0,1.5,1.51,1.52;WINDOWS NT:1.0,2.0,2.1,4.0,5.0
Platform          : MS-DOS WINDOWS
Issue type        : kbinfo</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 30, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
