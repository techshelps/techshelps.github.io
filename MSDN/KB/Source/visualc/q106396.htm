

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_vmalloc() Allocation Limited to 64K </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q106396">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1993/11/07">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The _vmalloc() function fails when attempting to allocate a memory block greater than 64K minus 6 bytes. Even though the type of the block size parameter passed to _vmalloc() is an unsigned long, the maximum block that can be allocated with a singl...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBW6,QDJD,QAHC,QAGI,QANY,QABN,QALG,QDH9,QAA8,QBFY,QAGU,QDMW,QDL9,QBWQ,QBWO V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>_vmalloc() Allocation Limited to 64K</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q106396</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
<PRE>7.00    | 1.00 1.50
</PRE>MS-DOS  | WINDOWS
kbprg kbcode
<P>
 
The information in this article applies to:

<UL><LI>Microsoft C/C++ for MS-DOS, version 7.0
<LI>Microsoft Visual C++ for Windows, versions 1.0 and 1.5
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The _vmalloc() function fails when attempting to allocate a memory
block greater than 64K minus 6 bytes. Even though the type of the
block size parameter passed to _vmalloc() is an unsigned long, the
maximum block that can be allocated with a single call to _vmalloc()
is slightly less than 64K.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The _vmalloc() function will return _VM_NULL if the block size
requested is 65531 bytes or larger. The Virtual Memory Manager (VMM)
is only able to associate a single 64K block of memory with a virtual
memory handle. The extra 6 bytes are used to store internal
information about the memory block.
<P>
The block size limitation is due to the way the Virtual Memory Manager
uses conventional memory to swap in virtual memory blocks. When an
application allocates a block of virtual memory, the memory must be
brought down to a swap area in conventional memory. This is similar to
the page frame implemented by expanded memory. The swap area in
conventional memory that the Virtual Memory Manager uses is limited to
64K bytes.
<P>
The sample code below fails on the call to _vmalloc() because the size
requested exceeds the 64K minus 6 byte limit.
<P>
<P><h3>Sample Code</h3>
 
<P>
/ * Compile options needed: none
<PRE> */

#include &lt;stdio.h&gt;
#include &lt;vmemory.h&gt;

void main( void )
</PRE>{
<PRE>    _vmhnd_t handle;
    unsigned long block_size;
    unsigned long mem_size;

    if ( !_vheapinit( 0, _VM_ALLDOS, _VM_XMS | _VM_EMS ) )
    {
        printf( "Could not initialize virtual memory manager.\n" );
        exit( -1 );
    }

    /* The following allocation request will fail. */

    if ( (handle = _vmalloc( 65531L )) == _VM_NULL )
    {
        _vheapterm();
        printf("Allocation failed!");
        exit( -1 );
    }
    _vfree( handle );
    _vheapterm();
</PRE>}
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 7.00 1.00 1.50 _vmalloc _vrealloc<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: VirtualMem<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
