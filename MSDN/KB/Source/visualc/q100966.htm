

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: C1001: grammar.c, Line 155, Constructor Argument List </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q100966">
<META NAME="KBModify" CONTENT="1997/07/17">
<META NAME="KBCreate" CONTENT="1993/07/01">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  An attempt to compile, with the optimizing compiler, a class constructor that accepts a variable number of arguments fails and Microsoft C/C++ generates the following message:     test.cpp(20) : fatal error C1001: INTERNAL COMPILER ERROR           ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB4,QBFY,QAHE,QAAP,QAPN,QAOT,QAH4,QAGI,QBBI,QAKP,QAO4,QBXT,QA5V,QAIB,QAYL V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: C1001: grammar.c, Line 155, Constructor Argument List</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 17, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q100966</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
7.00 7.00a | 1.00 1.50
<PRE>MS-DOS     | WINDOWS
</PRE>kbtool kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft C/C++ Compiler (CL.EXE), included with:
<P>
<P><PRE>    - Microsoft C/C++ for MS-DOS, versions 7.0
    - Microsoft Visual C++ for Windows, versions 1.0 and 1.5
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
An attempt to compile, with the optimizing compiler, a class constructor
that accepts a variable number of arguments fails and Microsoft C/C++
generates the following message:
<P>
<PRE>   test.cpp(20) : fatal error C1001: INTERNAL COMPILER ERROR
                (compiler file '@(#)grammar.c:1.147', line 155)
                Contact Microsoft Product Support Services

</PRE>Depending on the complexity of the source code, the error may occur on line
156, 179, or 180 in GRAMMAR.C, rather than on line 155. The error occurs
regardless of the specified optimizations.
<P>
If the compiler command line includes the /Ox option switch, the following
error may occur prior to the C1001 error listed above:
<P>
<PRE>   test.cpp(20) : warning C4713: _aab: INTERNAL COMPILER ERROR;
       restarting (compiler file '@(#)grammar.c:1.147', line 155)
                Contact Microsoft Product Support Services

</PRE><h2>CAUSE</h2>
 
<P>
This error is caused by a problem optimizing the variable argument list in
the class constructor. The error occurs only for the actual constructor
call (not for the declaration), and occurs only when the number of
arguments exceeds a limit that varies depending on the complexity of the
code. In the sample code below, the error occurs when the constructor call
specifies between 53 and 98 arguments. If the call specifies fewer than 53
arguments, no error occurs. If the call specifies more than 98 arguments,
the compiler generates the following warning message:
<P>
<PRE>   test.cpp(20) : fatal error C1035: expression too complex;
      simplify expression

</PRE><h2>RESOLUTION</h2>
 
<P>
To address this situation, perform one of the following two steps:

<UL><LI>Simplify the code to specify fewer arguments to the constructor.
   One method to do this involves declaring additional predefined
   arguments.

<LI>Specify the /f compiler option switch to call the fast compiler
   which does not generate this error.
<P>
</UL><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in C/C++ versions 7.0, 7.0a,
and 8.0 for MS-DOS. We are researching this problem and will post new
information here in the Microsoft Knowledge Base as it becomes available.
<P>
This problem does not occur with C/C++ 32-bit compiler versions 8.0 or 9.0,
included with Visual 32-bit Edition, versions 1.0 and 2.0, because the /f
option is not supported.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following code example demonstrates this error when you compile it with
the optimizing compiler (using the specified options):
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>/*
 * Compile options needed: /c /f-
 */

#include &lt;stdarg.h&gt;            // Required for code that uses
                               // variable number of arguments

</PRE>class N
<PRE>   {
</PRE>public:
<PRE>   N(int ar, ...) {}
   };

</PRE>static const N title(1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
<PRE>                     1, 2, 3, 4, 5, 6, 7, 8, 9, 20,
                     1, 2, 3, 4, 5, 6, 7, 8, 9, 30,
                     1, 2, 3, 4, 5, 6, 7, 8, 9, 40,
                     1, 2, 3, 4, 5, 6, 7, 8, 9, 50,
                     1, 2, 3, 4, 5, 6, 7, 8, 9, 60,
                     1, 2, 3, 4, 5, 6, 7, 8, 9, 70,
                     1, 2, 3, 4, 5, 6, 7, 8, 9, 80,
                     1, 2, 3, 4, 5, 6, 7, 8, 9, 90,
                     1, 2, 3, 4, 5, 6, 7, 8
                    );
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 1.50 7.00 7.00a 8.00 8.00c<BR>
KBCategory: kbtool kbbuglist<BR>
KBSubcategory: CPPIss<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 17, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
