

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How To Disable Tabs in CPropertySheet </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q151662">
<META NAME="KBModify" CONTENT="1997/07/31">
<META NAME="KBCreate" CONTENT="1996/05/28">
<META NAME="Keywords" CONTENT="MfcUI kbcode kbhowto kbprg kbui">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  This article describes how to disable tabs in a CPropertySheet so the user is not allowed to activate the tab. To accomplish this behavior, you can do the following:  - Handle the TCN_SELCHANGING notification in the sheet and save the   index of th...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA4P,QBXS,QATJ,QA28,QBWA,QA4Q,QACT,QAUR,QAMB,QARP,QAUD,QAC2,QAH4,QBXV,QAU7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How To Disable Tabs in CPropertySheet</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 31, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q151662</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
4.00 4.10
WINDOWS NT
kbprg kbcode kbui kbhowto
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC), included with:
   Microsoft Visual C++, 32-bit Edition, versions 4.0, 4.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article describes how to disable tabs in a CPropertySheet so the user
is not allowed to activate the tab. To accomplish this behavior, you can do
the following:
<P>
- Handle the TCN_SELCHANGING notification in the sheet and save the
<PRE>  index of the current tab.

</PRE>- Handle the TCN_SELCHANGE notification in the sheet and call
<PRE>  GetActiveIndex() to determine if you want the page disabled.

</PRE>- If you want the page disabled, post a PSM_SETCURSEL message to the
<PRE>  sheet using the index that was saved in TCN_SELCHANGING.

</PRE>The sample code below shows how to implement an EnablePage() function
that allows you to enable and disable pages.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Because there is no way to gray out the text in the tab of the disabled
page, append "Disabled" to the tab label to inform the user that the
page is disabled.
<P>
Instead of posting a PSM_SETCURSEL message in the handler for TCN_SELCHANGE
to activate a different page, you can accomplish this behavior in
OnSetActive() for a CPropertyPage.
<P>
If OnSetActive() returns FALSE, it tries to activate the next tab. The
method described above allows you to reactivate the previously active tab.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   // This sample disables page #2 of a property sheet.

   // We need to include this file so we can use CMap
   #include &lt;afxtempl.h&gt;

   class CMySheet : public CPropertySheet
   {
   protected:
       // we save the current page in TCN_SELCHANGING
       int m_nLastActive;
       // list of indexes of disabled pages
       CMap &lt;int, int&amp;, int, int&amp;&gt; m_DisabledPages;
   public:
       void EnablePage (int nPage, BOOL bEnable = TRUE);
   ...
   };

   BOOL CMySheet::OnInitDialog()
   {
       // OnInitDialog() must be called before EnablePage()
       // or GetTabControl() will fail.
       BOOL bReturn = CPropertySheet::OnInitDialog();
       // disable page #2
       EnablePage (1, FALSE);
       return bReturn;
   }

   void CMySheet::EnablePage (int nPage, BOOL bEnable)
   {
       // if we want to enable the page
       if (bEnable)
       {
           // remove the index from the map
           m_DisabledPages.RemoveKey (nPage);
           // take out " - Disabled" from tab label
           CTabCtrl* pTab = GetTabControl();
           ASSERT (pTab);
           TC_ITEM ti;
           char szText[100];
           ti.mask = TCIF_TEXT;
           ti.pszText = szText;
           ti.cchTextMax = 100;
           VERIFY (pTab-&gt;GetItem (nPage, &amp;ti));
           char * pFound = strstr (szText, " - Disabled");
           if (pFound)
           {
               *pFound = '\0';
               VERIFY (pTab-&gt;SetItem (nPage, &amp;ti));
           }
       }
       // if we want to disable it
       else
       {
           // add the index to the map
           m_DisabledPages.SetAt (nPage, nPage);
           // add " - Disabled" to tab label
           CTabCtrl* pTab = GetTabControl();
           ASSERT (pTab);
           TC_ITEM ti;
           char szText[100];
           ti.mask = TCIF_TEXT;
           ti.pszText = szText;
           ti.cchTextMax = 100;
           VERIFY (pTab-&gt;GetItem (nPage, &amp;ti));
           strcat (szText, " - Disabled");
           VERIFY (pTab-&gt;SetItem (nPage, &amp;ti));
       }
   }

   BOOL CMySheet::OnNotify(WPARAM wParam, LPARAM lParam, LRESULT* pResult)
   {
       NMHDR* pnmh = (NMHDR*)lParam;
       // tab is about to change
       if (TCN_SELCHANGING == pnmh-&gt;code)
           // save the current page index
           m_nLastActive = GetActiveIndex ();
       // tab has been changed
       else if (TCN_SELCHANGE == pnmh-&gt;code)
       {
           // get the current page index
           int nCurrentPage = GetActiveIndex ();
           // if current page is in our map of disabled pages
           if (m_DisabledPages.Lookup (nCurrentPage, nCurrentPage))
           // activate the previous page
           PostMessage (PSM_SETCURSEL, m_nLastActive);
       }
       return CPropertySheet::OnNotify(wParam, lParam, pResult);
   }

   /* Compile options needed: default
   */
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 4.10 CPropertySheet CPropertyPage disable<BR>
KBCategory: kbprg kbcode kbui kbhowto<BR>
KBSubcategory: MfcUI<BR>
Keywords          : MfcUI kbcode kbhowto kbprg kbui<BR>
Technology        : kbMfc<BR>
Version           : 4.00 4.10<BR>
Platform          : NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 31, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
