

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>STL Sample for the exp, log, and log10 Functions </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q157220">
<META NAME="KBModify" CONTENT="1997/10/09">
<META NAME="KBCreate" CONTENT="1996/10/08">
<META NAME="Keywords" CONTENT="STLIss kbcode">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The sample code below illustrates how to use the exp, log, and log10 STL functions in Visual C++.  MORE INFORMATION  Required Header                           Prototype ---------     / exp    template             valarray    exp(const valarray   * ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QDMH,QBFY,QAGI,QAY5,QAL3,QBV8,QAU5,QAHI,QA6A,QAPF,QAB9,QA56,QA55,QAK9,QAKD V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>STL Sample for the exp, log, and log10 Functions</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 9, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q157220</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Standard C++ Library included with:
   - Microsoft Visual C++, 32-bit Edition, version 4.2
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The sample code below illustrates how to use the exp, log, and log10 STL
functions in Visual C++.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Required Header</h3>
 
<P>
<PRE>   &lt;valarray&gt;
   &lt;math&gt;

</PRE><h3>Prototype</h3>
 
<P>
<PRE>   / exp
   template&lt;class T&gt;
   valarray&lt;T&gt; exp(const valarray&lt;T&gt;&amp; x);

   // log
   template&lt;class T&gt;
   valarray&lt;T&gt; log(const valarray&lt;T&gt;&amp; x);

   // log10
   template&lt;class T&gt;
   valarray&lt;T&gt; log10(const valarray&lt;T&gt;&amp; x);

</PRE>NOTE: The class/parameter names in the prototype may not match the version
in the header file. Some have been modified to improve readability.
<P>
<P><h3>Description</h3>
 
<P>
This article illustrates the use of STL exp(), log(), and log10() functions
through sample code.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>//////////////////////////////////////////////////////////////////////
//
// Compile options needed: None
//
// &lt;filename&gt; :  main.cpp
//
// Functions:
//
//    exp, log, log10
//
// Written by Yeong-Kah Tam
// of Microsoft Product Support Services,
// Copyright (c) 1996 Microsoft Corporation. All rights reserved.
//////////////////////////////////////////////////////////////////////

#include &lt;iostream&gt;                 // for i/o functions
#include &lt;valarray&gt;                 // for valarray
#include &lt;math.h&gt;                   // for exp(), log(), and log10()

#define ARRAY_SIZE  3               // array size

</PRE>typedef valarray&lt;double&gt; DB_VARRAY;
<P>
<PRE>void main()
</PRE>{
<PRE>    // Set val_array to contain values 1, 10, 100 for the following test.
    DB_VARRAY val_array(ARRAY_SIZE);
    for (int i = 0; i &lt; ARRAY_SIZE; i++)
        val_array[i] = pow(10, i);

    // Display the size of val_array.
    cout &lt;&lt; "Size of val_array = " &lt;&lt; val_array.length() &lt;&lt; "\r\n";

    // Display the content of val_array before calling exp, log, and
    // log10 functions.
    cout &lt;&lt; "The values in val_array:\r\n";
    for (i = 0; i &lt; ARRAY_SIZE; i++)
        cout &lt;&lt; val_array[i] &lt;&lt; "    ";
    cout &lt;&lt; "\r\n\r\n";

    // rvalue_array to hold the return value from calling the sqrt() and
    // pow() functions.
    DB_VARRAY rvalue_array;

    // ----------------------------------------------------------------
    // exp() - display the content of rvalue_array
    // ----------------------------------------------------------------
    rvalue_array = exp(val_array);
    cout &lt;&lt; "The result after calling exp():\r\n";
    for (i = 0; i &lt; ARRAY_SIZE; i++)
        cout &lt;&lt; rvalue_array[i] &lt;&lt; "     ";
    cout &lt;&lt; "\r\n\r\n";

    // ----------------------------------------------------------------
    // log() - display the content of rvalue_array
    // ----------------------------------------------------------------
    rvalue_array = log(val_array);
    cout &lt;&lt; "The result after calling log():\r\n";
    for (i = 0; i &lt; ARRAY_SIZE; i++)
        cout &lt;&lt; rvalue_array[i] &lt;&lt; "     ";
    cout &lt;&lt; "\r\n\r\n";

    // ----------------------------------------------------------------
    // log10() - display the content of rvalue_array
    // ----------------------------------------------------------------
    rvalue_array = log10(val_array);
    cout &lt;&lt; "The result after calling log10():\r\n";
    for (i = 0; i &lt; ARRAY_SIZE; i++)
        cout &lt;&lt; rvalue_array[i] &lt;&lt; "     ";
    cout &lt;&lt; "\r\n\r\n";
</PRE>}
<P>
Output:
<P>
Size of val_array = 3
<P>
The values in val_array:
<P>
<PRE>1    10    100

</PRE>The result after calling exp():
<P>
<PRE>2.71828     22026.5     2.68812e+043

</PRE>The result after calling log():
<P>
<PRE>0     2.30259     4.60517

</PRE>The result after calling log10():
<P>
<PRE>0     1     2

</PRE><h2>REFERENCES</h2>
 
<P>
Visual C++ Books On Line: Visual C++ Books:C/C++:Standard C++ Library
Reference.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: STL STLSample exp log log10<BR>
Keywords          : STLIss kbcode<BR>
Version           : WINNT:4.2;<BR>
Platform          : NT WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 9, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
