

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Use the Token Pasting Operator in Microsoft C </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q51712 ">
<META NAME="KBModify" CONTENT="1997/09/02">
<META NAME="KBCreate" CONTENT="1989/12/07">
<META NAME="Keywords" CONTENT="CLngIss kbcode kbfasttip">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  In Microsoft C, the token pasting operator (##) is used to replace tokens within a preprocessor string. The (##) can be used to mark off the first portion of the string as a token, the last part of the string as a token, or the middle of a string a...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAKM,QBFY,QANY,QATX,QAPF,QAOX,QAGI,QAML,QBLX,QA56,QA55,QDL9,QBWQ,QBWO,QBWN V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Use the Token Pasting Operator in Microsoft C</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 2, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q51712 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Microsoft C for MS-DOS, versions 5.1, 6.0, 6.0a, 6.0ax
<LI>Microsoft C/C++ for MS-DOS, version 7.0
<LI>Microsoft Visual C++ for Windows, versions 1.0, 1.5
<LI>Microsoft Visual C++, 32-bit Edition, versions 1.0, 2.0, 2.1, 4.0, 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft C, the token pasting operator (##) is used to
replace tokens within a preprocessor string. The (##) can be used to
mark off the first portion of the string as a token, the last part of
the string as a token, or the middle of a string as a portion. See the
examples shown below.
<P>
The token pasting operator cannot be the first or the last token in a
preprocessor string. The first example below (GLUE) demonstrates the
use of the token pasting operator to concatenate two tokens. There is
a replaceable token in front of the operator and one following the
operator. The token pasting operator effectively divides the string
into the two pieces.
<P>
A more complex situation arises when using the token pasting operator
to replace a token embedded within a string (for example,
THIS_IS_A_size_TOKEN, where size could be replaced with either LARGE
or SMALL); the token to be replaced must be surrounded by token
pasting operators (##). This is necessary only when the token to be
replaced is completely embedded in another string (see example 2).
Normally, the space character is used as one of the token markers,
while the (##) marks the other end. Only in this specific case (an
embedded token) is more than one token pasting operator needed.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   /* Compile options needed: none
   */

   /*
       PASTE.C: Demonstrates the use of the token pasting operator.
   */
   /*
       Example 1 definition.
       This definition will replace the token "a" from the beginning
       of the string and "b" from the tail of the string.
   */

   #define GLUE(a,b) a##b

   /*
    - These are the defines for Example 2.
      Calling print with either LARGE or SMALL will then change
      the PRINT macro to call the proper PRINT_..._SIZE macro.
   */
   #define PRINT_LARGE_SIZE(val) printf("The large size is %d\n",val)
   #define PRINT_SMALL_SIZE(val) printf("The small size is %d\n",val)
   #define PRINT(size,val) PRINT_##size##_SIZE(val)

   void main ( void )

   {
       char *varsrc = "Hello!" ;
       char *vardest = "      " ;

   /*
       Example #1: Tokens at beginning and end of string.
   */

       strcpy(GLUE(var,dest),GLUE(var,src)) ;
       printf("%s\n", GLUE(var,dest)) ;

   /*
       Example #2: Token embedded in string.
   */

       PRINT(LARGE, 2) ; /* Calls the printf() for large sizes. */
       PRINT(SMALL, 1) ; /* Calls the printf() for small sizes. */
   }

</PRE>The following is the corresponding .i (preprocessed file). This file
can be generated by using -P option at compile time (cl -P paste.c).
<P>
<PRE>   void main ( void )

   {
       char *varsrc = "Hello!" ;
       char *vardest = "      " ;

       strcpy(vardest,varsrc) ;
       printf("%s\n", vardest) ;

       printf("The large size is %d\n",2) ;
       printf("The small size is %d\n",1) ;
   }

</PRE>For more information on the token pasting operator, see page 205 of the
"Microsoft Visual C++ Reference Volume II: C Language Reference" manual for
Visual C++ for Windows, version 1.0 or search the online documentation
provided with all versions of Visual C++ for "token-pasting operator" or
"##."
 
<PRE>Keywords          : CLngIss kbcode kbfasttip
Version           : MS-DOS:5.1,6.0,6.00a,6.00ax,7.0; WINDOWS:1.0,1.5; WINDOWS  NT:1.0,2.0,2.1,4.0,5.0
Platform          : MS-DOS NT WINDOWS
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 2, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
