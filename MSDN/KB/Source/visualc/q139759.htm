

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: CDatabase::ExecuteSQL() Fails with UNICODE Build </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q139759">
<META NAME="KBModify" CONTENT="1997/09/18">
<META NAME="KBCreate" CONTENT="1995/11/15">
<META NAME="Keywords" CONTENT="MfcDatabase vcbuglist400 vcfixlist410 kbprg kbbuglist kbfixlist">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Trying to run a program that contains a call to CDatabase::ExecuteSQL() that has been built for UNICODE results in a CDBException being thrown with an error message from the ODBC driver. The message depends on the SQL Statement and the ODBC driver....">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QA9E,QATX,QAB4,QAR4,QA1S,QBCT,QAU9,QAPN,QAH7,QAH6,QAGI,QAGC,QAGB,QAEF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: CDatabase::ExecuteSQL() Fails with UNICODE Build</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q139759</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
   - Microsoft Visual C++, 32-bit Edition, version 4.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Trying to run a program that contains a call to CDatabase::ExecuteSQL()
that has been built for UNICODE results in a CDBException being thrown with
an error message from the ODBC driver. The message depends on the SQL
Statement and the ODBC driver. For example, trying to execute an INSERT
statement on a data source that uses the Microsoft Access ODBC driver
results in the following error message:
<P>
<PRE>   Invalid SQL statement;
     expected 'DELETE', 'INSERT', 'PROCEDURE', 'SELECT', or 'UPDATE'.
   State:37000,Native:-3500,Origin:
     [Microsoft][ODBC Microsoft Access 7.0 Driver]

</PRE><h2>CAUSE</h2>
 
<P>
The SQL string passed to CDatabase::ExecuteSQL() is a UNICODE string, and
the ODBC API expects all arguments that are strings to be ASCII strings.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To work around this bug, you have to convert the string yourself, and then
cast the resultant ASCII string to an LPCTSTR when you pass it to
CDatabase::ExecuteSQL(). The cast is necessary because
CDatabase::ExecuteSQL() expects a wide character string.
<P>
For example, using the following code to delete all the records in a table
will fail in an MFC 4.0 program:
<P>
<PRE>   CString   strSQL = _T("DELETE FROM Table1");
   MyDatabase.ExecuteSQL(strSQL);

</PRE>To make the code work, you need to use code similar to this code:
<P>
<PRE>   #include &lt;winnls.h&gt;  // add this include for WideCharToMultiByte()
   .
   .
   .
   CString   strSQL = _T("DELETE FROM Table1");
   char*     szAscii = new char[strSQL.GetLength() + 1];

   WideCharToMultiByte(CP_ACP,0,strSQL,-1,
     szAscii,strSQL.GetLength() + 1,NULL,NULL);

   MyDatabase.ExecuteSQL((LPCTSTR)szAscii);

   delete [] szAscii;

</PRE><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products
listed at the beginning of this article. This bug was corrected in
Visual C++ 4.1.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
In general, you can use the MFC ODBC classes in UNICODE programs. The MFC
ODBC classes will handle the UNICODE/ASCII conversions for ODBC API calls.
CDatabase::ExecuteSQL() is missing this conversion support.
<P>
 
<PRE>Keywords          : MfcDatabase vcbuglist400 vcfixlist410 kbprg kbbuglist kbfixlist
Technology        : kbMfc
Version           : 4.0
Platform          : NT WINDOWS
Issue type        : kbbug
Solution Type     : kbfix</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
