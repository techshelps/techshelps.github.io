

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>STL Sample for deque::begin and deque::end Functions </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q156591">
<META NAME="KBModify" CONTENT="1997/10/09">
<META NAME="KBCreate" CONTENT="1996/09/26">
<META NAME="Keywords" CONTENT="STLIss kbcode">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The sample code below illustrates how to use the deque::begin and deque::end STL functions in Visual C++.  MORE INFORMATION  Required Header               Prototype ---------     const_iterator begin() const;    iterator begin();     const_iterator...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBFY,QAY5,QBV8,QBHU,QBHT,QAB9,QAPF,QBC9,QBC8,QA56,QA55,QAUD,QANO,QALQ,QABB V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>STL Sample for deque::begin and deque::end Functions</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 9, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q156591</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Standard C++ Library included with:
   - Microsoft Visual C++, 32-bit Edition, version 4.2
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The sample code below illustrates how to use the deque::begin and
deque::end STL functions in Visual C++.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Required Header</h3>
 
<P>
<PRE>   &lt; deque&gt;

</PRE><h3>Prototype</h3>
 
<P>
<PRE>   const_iterator begin() const;
   iterator begin();

   const_iterator end() const;
   iterator end();

</PRE>NOTE: The class/parameter names in the prototype may not match the version
in the header file. Some have been modified to improve readability.
<P>
<P><h3>Description</h3>
 
<P>
The begin member function returns a random-access iterator that points at
the first element of the sequence, or just beyond the end of an empty
sequence.
<P>
The end member function returns a random-access iterator that points just
beyond the end of the sequence.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>//////////////////////////////////////////////////////////////////////
//
// Compile options needed: -GX
//
// deque.cpp :
//
// Functions:
//
//    begin()
//    end()
//
// Written by Bobby Mattappally
// of Microsoft Product Support Services,
// Copyright (c) 1996 Microsoft Corporation. All rights reserved.
//////////////////////////////////////////////////////////////////////

/* Compile options needed:-GX
*/
#include &lt;iostream&gt;
#include &lt;deque&gt;

</PRE>typedef deque&lt;int, allocator&lt;int&gt; &gt;  INTDEQUE;
<P>
<PRE>void main()
</PRE>{
<P>
<PRE>    // Create A and fill it with elements 1,2,3,4 and 5
    // using push_back function

    INTDEQUE  A;
    A.push_back(1);
    A.push_back(2);
    A.push_back(3);
    A.push_back(4);
    A.push_back(5);

    // Print the contents of A using iterator
    // and functions begin() and end()

     INTDEQUE::iterator pi;

    for(pi= A.begin();  pi !=A.end(); pi++)
    {
        cout &lt;&lt; *pi &lt;&lt;" " ;
    }
        cout&lt;&lt;endl;
}

</PRE>Program Output is:
<P>
1 2 3 4 5
<P>
<P><h2>REFERENCES</h2>
 
<P>
Visual C++ Books On Line: Visual C++ Books:C/C++:Standard C++ Library
Reference.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: STL STLSample begin end iterator<BR>
Keywords          : STLIss kbcode<BR>
Version           : WINNT:4.2;<BR>
Platform          : NT WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 9, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
