

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Overloading the __huge new Operator </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q102229">
<META NAME="KBModify" CONTENT="1997/07/17">
<META NAME="KBCreate" CONTENT="1993/07/29">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT=" When an application overloads the __huge version of operator new with C/C++ version 8.0 for MS-DOS, you must verify that the declaration properly specifies two parameters.  Microsoft confirmed a problem using the __huge operator new in C/C++ version...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QANY,QAKM,QBFY,QAYL,QAUD,QAKP,QAHE,QBXL,QDKW,QA2O,QAH4,QABA,QAWH,QDL9,QBWQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Overloading the __huge new Operator</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 17, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q102229</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00
WINDOWS
kbprg
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Visual C++ for Windows, version 1.0
</UL> 
<P>
When an application overloads the __huge version of operator new with
C/C++ version 8.0 for MS-DOS, you must verify that the declaration
properly specifies two parameters.
<P>
Microsoft confirmed a problem using the __huge operator new in C/C++
version 7.0 for MS-DOS and documented the methods to work around the
problem in the Microsoft Knowledge Base. For more information, please
search on the following words:
<P>
<PRE>   huge operator new

</PRE><h2>MORE INFORMATION</h2>
 
<P>
An operator new that returns a huge pointer acts like an array
allocator. It has two parameters: the number of elements to allocate
and the size of each element. If the total size of the array is
greater than 128K, the size of each element must be a power of 2.
<P>
The correct declaration for the __huge version of operator new is as
follows:
<P>
<PRE>   void __huge *operator new(unsigned long elems, size_t size);

</PRE>Note that when calling new(), the first parameter must be a constant rather
than a variable due to a code generation problem. Please see the following
Knowledge Base article for a description of this problem:
<PRE>   <B><A HREF="../VISUALC/Q111754.htm">Q111754</A></B>: BUG: __Huge New Operator Fails with Variable Size

</PRE><h3>Sample Code</h3>
 
<P>
<PRE>/*
 * Compiler options needed: /AL /Od /Zi
 */

#include &lt;iostream.h&gt;
#include &lt;malloc.h&gt;
#include &lt;stdio.h&gt;

void __huge *operator new(unsigned long num, size_t size);

void __huge *operator new(unsigned long num, size_t size)
</PRE>{
<PRE>   cout &lt;&lt; "Inside __huge new\n";
   return _halloc(num, size);
</PRE>}
<P>
<PRE>void main()
</PRE>{
<PRE>   int __huge *h_ptr;

   h_ptr = new __huge int[10000L];
   if (h_ptr == NULL)
      cout &lt;&lt; "Alloc failed\n";

   delete h_ptr;
</PRE>}
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 1.00 overload customizing<BR>
KBCategory: kbprg<BR>
KBSubcategory: CPPLngIss<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 17, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
