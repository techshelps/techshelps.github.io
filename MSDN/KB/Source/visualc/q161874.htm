

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Displaying CPropertySheet in COleControl Causes Assert </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q161874">
<META NAME="KBModify" CONTENT="1997/09/19">
<META NAME="KBCreate" CONTENT="1997/01/07">
<META NAME="Keywords" CONTENT="MfcOLE MfcUI vcbuglist400 vcfixlist500 kbbuglist kbfixlist">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Calling CPropertySheet::DoModal() from a method or message handler in a COleControl-derived class may cause an assert in WINOCC.CPP, line 325, when the property sheet is dismissed.  CAUSE =====  The assert is in CWnd::EnableWindow() where it is che...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGI,QAPN,QBF0,QAW6,QAR4,QAIF,QBC9,QBC8,QANO,QAY5,QAY2,QAH4,QDIX,QBVV,QBFY V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Displaying CPropertySheet in COleControl Causes Assert</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 19, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q161874</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual C++, 32-bit Edition, versions 4.0, 4.1, 4.2
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Calling CPropertySheet::DoModal() from a method or message handler in a
COleControl-derived class may cause an assert in WINOCC.CPP, line 325, when
the property sheet is dismissed.
<P>
<P><h2>CAUSE</h2>
 
<P>
The assert is in CWnd::EnableWindow() where it is checking if the m_hWnd
member of the CWnd object is valid.
<P>
In CPropertySheet::DoModal(), MFC gets the parent window via:
<P>
<PRE>   CWnd* pParentWnd = CWnd::GetSafeOwner(m_pParentWnd,&amp;hWndTop);

</PRE>This creates a temporary CWnd* called pParentWnd. RunModalLoop() is called
next and returns after the property sheet is dismissed. When MFC tries to
call EnableWindow() through the pParentWnd pointer, the m_hWnd is no longer
valid.
<P>
This behavior occurs because during RunModalLoop(), COleControl::OnPaint()
will be called. COleControl::OnPaint(), in turn, calls AfxUnlockTempMaps().
This function deletes temporary objects that were previously created. In
this case, the "pParentWnd" pointer is being destroyed.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
You can prevent temporary objects from being destroyed by calling
AfxLockTempMaps() before CPropertySheet::DoModal(). You will need to call
AfxUnlockTempMaps() after CPropertySheet::DoModal() to allow temporary
objects to be cleaned up.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. This bug has been corrected in Visual C++
version 5.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
AfxLockTempMaps() and AfxUnlockTempMaps() are undocumented functions and
may change in future versions of MFC.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   /* Compile options needed: default
   This code snippet displays a CPropertySheet in response to a right-mouse
   click in the COleControl.
   */
   void CTestCtrl::OnRButtonDown(UINT nFlags, CPoint point)
   {
      CPropertySheet sheet;
      CMyPage page;
      sheet.AddPage (&amp;page);

           // Prevent temporary objects from being destroyed.
      AfxLockTempMaps ();

      sheet.DoModal ();

           // Allow temporary objects to be cleaned up.
      AfxUnlockTempMaps ();

      COleControl::OnRButtonDown(nFlags, point);
   }
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: ocx
<P>

Keywords          : MfcOLE MfcUI vcbuglist400 vcfixlist500 kbbuglist kbfixlist<BR>
Technology        : kbMfc<BR>
Version           : 4.0 4.1 4.2<BR>
Platform          : NT WINDOWS<BR>
Issue type        : kbbug<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 19, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
