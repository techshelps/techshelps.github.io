

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Create New Documents Without CWinApp::OnFileNew </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q113257">
<META NAME="KBModify" CONTENT="1997/07/10">
<META NAME="KBCreate" CONTENT="1994/03/30">
<META NAME="Keywords" CONTENT="kbprg kbtool MfcDocView kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  It is sometimes desirable to create a CMultiDocTemplate based window (in other words, a CFrame/CDocument/CView combination) without using the mechanism provided by CWinApp::OnFileNew.  For example, if the program has multiple document templates, CW...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGI,QANE,QAO3,QAO2,QBXR,QA2O,QABA,QACF,QAIF,QBQU,QAP2,QAGU,QAJH,QAFX,QAGQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Create New Documents Without CWinApp::OnFileNew</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q113257</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC), included with:
<P>
<P><PRE>    - Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51 1.52
    - Microsoft Visual C++ 32-bit Edition, versions 1.0, 2.0, 2.1, 4.0,
      4.1, 4.2, 5.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
It is sometimes desirable to create a CMultiDocTemplate based window (in
other words, a CFrame/CDocument/CView combination) without using the
mechanism provided by CWinApp::OnFileNew.
<P>
For example, if the program has multiple document templates,
CWinApp::OnFileNew will prompt the user with a dialog box asking which type
of document to open. The programmer may already know which type of
CMultiDocTemplate to use, and therefore may not want to prompt the user
because it would be inappropriate in the given context of the application.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Assuming the application was originally created with AppWizard, the
undocumented CMultiDocTemplate::OpenDocumentFile function can be used to
create a new CMultiDocTemplate based window. There are several steps
involved:

<OL><P><LI>Add a CMultiDocTemplate pointer to your CWinApp derived class:
<P>
<P><PRE>      class CMyApp : public CWinApp
      {
<PRE></PRE>        ...

       public:
        CMultiDocTemplate* m_pDocTemplate;

        ...

      }

   NOTE: If you plan to use multiple document types, you must create a
   CMultiDocTemplate pointer member variable for each document type.

</PRE><P><LI>In the call to CWinApp::InitInstance, remove the creation of the
   CMultiDocTemplate from the call to AddDocTemplate. Set the pointer to
   point to the new CMultiDocTemplate. Use the pointer to call
   AddDocTemplate:
<P>
<P><PRE>      BOOL CMyApp::InitInstance()
      {
<PRE></PRE>        ...

        m_pDocTemplate = new CMultiDocTemplate(IDR_TEXTTYPE,
                                      RUNTIME_CLASS(CMyDoc),
                                      RUNTIME_CLASS(CMDIChildWnd),
                                      RUNTIME_CLASS(CMyView));

        AddDocTemplate(m_pDocTemplate);

        ...

      }

</PRE><P><LI>Use the pointer to call CMultiDocTemplate::OpenDocumentFile with a NULL
   parameter to create the new window. For this example, assume there is a
   button in a CView window. In the BN_CLICKED handler for the button, we
   want to create a window based on m_pDocTemplate:
<P>
<P><PRE>      void CMyView::OnNewWindowButtonClicked()
      {
<PRE></PRE>          CMyApp* pApp = (CMyApp*)AfxGetApp();
          pApp-&gt;m_pDocTemplate-&gt;OpenDocumentFile(NULL);
      }

   This same technique could be used to create a CSingleDocTemplate based
   window in a Single Document Interface (SDI) application. However, it is
   not necessary. Because there is only one document template for the
   application, calling OnFileNew() will create the new window without
   prompting the user for the type of document.
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : kbprg kbtool MfcDocView kbhowto<BR>
Technology          : kbMfc<BR>
Version             : 1.0 1.51 2.0 4.1 4.2 5.0<BR>
Platform            : NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
