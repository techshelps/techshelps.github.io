

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: CEditView in Splitter Window Doesn't Update Document </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q110800">
<META NAME="KBModify" CONTENT="1997/09/18">
<META NAME="KBCreate" CONTENT="1994/01/28">
<META NAME="Keywords" CONTENT="MfcUI kbbuglist kbfixlist kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Normally, when the text in a CEditView object is changed, it sets the modified flag of the document to which it is attached. If you try to close the last view on the document or exit the application without saving, you will be prompted to save the ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAEV,QAYC,QBME,QBVV,QBFY,QA56,QA55,QAR4,QAHE,QADK,QABO,QAH4,QBXS,QAY5,QAXB V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: CEditView in Splitter Window Doesn't Update Document</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q110800</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00 1.50 | 1.00
<PRE>WINDOWS   | WINDOWS NT
</PRE>kbprg kbfixlist kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
<P>
<P><PRE>    - Microsoft Visual C++ for Windows, versions 1.0 and 1.5
    - Microsoft Visual C++, 32-bit Edition, version 1.0
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Normally, when the text in a CEditView object is changed, it sets the
modified flag of the document to which it is attached. If you try to
close the last view on the document or exit the application without
saving, you will be prompted to save the data.
<P>
When the CEditView derived class is a pane in a splitter window, the
modified flag is not set when the text changes.
<P>
<P><h2>CAUSE</h2>
 
<P>
CEditViews are themselves edit controls. This means the notification
messages are sent to the parent of the CEditView.
<P>
When you don't have a splitter window, the CEditView is created as a
child of a class that is derived from CFrameWnd. A part of the command
routing of  CFrameWnd is to send the message to the active view
(in this case the CEditView message) by calling the view's OnCmdMsg()
member function. CEditView then handles the EN_CHANGE notification
message by setting the modified flag of the document.
<P>
When you use a splitter window, the CEditView message is a child of
CSplitterWnd. CSplitterWnd is derived from CWnd but not CFrameWnd.
CWnds do not send messages back to views as CFrameWnds do, so the
message is not passed back to the CEditView and the modified flag
isn't set.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
In both cases the parent window of the CEditView calls the CEditView's
OnChildNotify() member function when it receives the EN_CHANGE
notification message. The workaround is to add an OnChildNotify()
member function to a CEditView derived class (called CMyEditView
for the sample below).
<P>
The sample code shows the definition of the OnChildNotify() function.
You will also need to add a declaration for OnChildNotify() to your
class declaration.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. This bug was corrected in MFC 3.0,
included with Visual C++ 2.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The name of the view class (CMyEditView) in the sample code below is
for purposes of discussion only.  You should replace this with the
name of your own view class that you have derived from CEditView.
<P>
There are some differences in the way message parameters are "packed"
into wParam and lParam between 16-bit Windows and Win32. These
differences are handled in the sample code using conditional
compilation based on the _WIN32 symbol. This symbol is automatically
defined by the 32-bit version of Visual C++.
<P>
<P><h2>SAMPLE CODE</h2>
 
<P>
<PRE>/*
</PRE>** This is a code fragment only and will not compile as is. Please see
** the MORE INFORMATION section above.
<PRE>*/

</PRE>BOOL CMyEditView::OnChildNotify( UINT message,
<PRE>   WPARAM wParam,
   LPARAM lParam,
   LRESULT* pLResult )
</PRE>{
<PRE>   WORD wNotification;

</PRE>#ifdef _WIN32
<PRE>   wNotification = HIWORD(wParam);
</PRE>#else
<PRE>   wNotification = HIWORD(lParam);
</PRE>#endif
<P>
<PRE>   if (message == WM_COMMAND &amp;&amp; wNotification == EN_CHANGE)
   {
      CEditView::OnEditChange();
      return TRUE;
   }
   else
      return FALSE;
</PRE>}
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information on command routing, refer to the "Class Libraries
Reference" of the Microsoft Visual C++ documentation, or the online help
for CWnd::OnChildNotify.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 1.50 2.00 2.10 2.50<BR>
SetModifiedFlag CDocument<BR>
KBCategory: kbprg kbfixlist kbbuglist<BR>
KBSubcategory: MfcUI<BR>
Keywords          : MfcUI kbbuglist kbfixlist kbprg<BR>
Technology        : kbMfc<BR>
Version           : 1.00 1.50 | 1.00<BR>
Platform          : NT WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
