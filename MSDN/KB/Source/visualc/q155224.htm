

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Using CEdit SetModify/GetModify Returns Invalid Values </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q155224">
<META NAME="KBModify" CONTENT="1998/03/02">
<META NAME="KBCreate" CONTENT="1996/08/23">
<META NAME="Keywords" CONTENT="MfcUI kbprb kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="   The CEdit::GetModify() and CEdit::SetModify() methods may be unreliable when the CEdit object is part of CEditView. Further, using these methods on a CEdit object that is part of a CEditView object may cause CEditView::LockBuffer(), CEditView::Get...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAHP,QAUD,QAHE,QA6A,QAPN,QAK9,QABC,QAGI,QAJX,QAEF,QADR,QAKJ,QA7Y,QA7O,QAMN V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Using CEdit SetModify/GetModify Returns Invalid Values</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 2, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q155224</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
4.00 4.10 4.20
WINDOWS NT
kbprg kbprb
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC), included with:
<P>
   Microsoft Visual C++, 32-bit Edition, versions 4.0, 4.1, and 4.2
</UL> 
<P>
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The CEdit::GetModify() and CEdit::SetModify() methods may be unreliable
when the CEdit object is part of CEditView. Further, using these methods on
a CEdit object that is part of a CEditView object may cause
CEditView::LockBuffer(), CEditView::GetBufferLength(), and other CEditView
methods to return invalid values.
<P>
<P><h2>CAUSE</h2>
 
<P>
Under Windows 95 and Win32s, CEditView uses CEdit::GetModify() and
CEdit::SetModify() to indicate when an internal buffer--which mirrors the
contents of the edit control--is current. As a result, you can experience
unpredictable behavior if the class you derive from CEditView also uses
this flag, for example:
<P>
<P><h2>RESOLUTION</h2>
 
<P>
The easiest workaround is to ignore the edit control's internal modified
flag and define your own in the class you derived from CEditView:
<P>
<PRE>   class CMyEditView : public CEditView
   {
   public:
      BOOL GetModify() { return m_bModified; }
      void SetModify(BOOL bModified) { m_bModified = bModified; }
      // Additional public members...
   protected:
      BOOL m_bModified;
      // Additional protected members...
   };

</PRE>Keep this flag current by overriding OnChange() in the class you derived
from CEditView. OnChange() is called any time the contents of the
underlying edit control changes:
<P>
<PRE>   void CMyEditView::OnChange()
   {
      m_bModified = TRUE;

         //Call base class's EN_CHANGE handler
         CEditView::OnEditChange();
   }

</PRE><h2>MORE INFORMATION</h2>
 
<P>
CEdit::GetModify() and CEdit::SetModify() access an internal "dirty" flag
that is maintained by the standard Windows edit control. These methods are
useful in determining if the contents of an edit control have been modified
since this flag was cleared.
<P>
Due to limitations under Win32s and Windows 95, the MFC classes set an
internal flag, afxData.bWin32s, to TRUE during initialization under either
of these systems. When this flag is TRUE, CEditView uses a modified method
to obtain the contents of the underlying edit control. Instead of reading
data from the edit control each time you need it, CEditView maintains an
internal buffer that mirrors the contents of the edit control. To ensure
this buffer is updated when the contents of the edit control change,
CEditView uses CEdit::GetModify() and CEdit::SetModify(). This can cause
serious conflicts if your application also uses these methods.
<P>
The problem is clearly demonstrated in the source code for
CEditView::LockBuffer(). Instead of accessing the control directly each
time, CEditView::LockBuffer() copies the edit control's contents to a local
buffer. Then CEditView::LockBuffer() calls CEdit::SetModify() with an
argument of FALSE to clear the dirty flag. If your program calls
CEditView::LockBuffer() or one of the many CEditView members that call it,
the buffer is updated only if CEdit::GetModify() returns TRUE (which
indicates the edit control's contents have changed and the local buffer is
no longer current).
<P>
Because CEditView::LockBuffer() clears the edit control's modified flag,
your program no longer relies on this flag. Please note, if your program
clears this flag, CEditView::LockBuffer() returns the contents of the local
buffer even if the contents of the edit control has changed.
CEditView::LockBuffer() is also called by other CEditView members, such as
GetBufferLength() and FindText().
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbprg kbprb<BR>
KBSubcategory: MfcUI<BR>
Additional reference words: 4.00 4.10 4.20 kbdsd W32s Win95<BR>
Keywords          : MfcUI kbprb kbprg<BR>
Technology        : kbMfc<BR>
Version           : 4.00 4.10 4.20<BR>
Platform          : NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 2, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
