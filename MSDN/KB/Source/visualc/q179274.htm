

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Underflow Caused By exp() Function Fails to Set errno </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q179274">
<META NAME="KBModify" CONTENT="1998/01/15">
<META NAME="KBCreate" CONTENT="1998/01/13">
<META NAME="Keywords" CONTENT="kbcode">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  When using the exp() function and an underflow error occurs, the errno variable is not set to a value.  RESOLUTION     #include              #include             #include              extern int errno;     void main( void )    {       double x = -1...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB4,QAAP,QAYL,QAY5,QBXS,QAUD,QBE7,QBE6,QAKD,QAKP,QBV8,QAB9,QBVV,QAO4,QAN2 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Underflow Caused By exp() Function Fails to Set errno</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 15, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q179274</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The C Run Time (CRT) included with:
   - Microsoft Visual C++, 32-bit Editions, version 5.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When using the exp() function and an underflow error occurs, the errno
variable is not set to a value.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
<PRE>   #include &lt;stdio.h&gt;
   #include &lt;math.h&gt;
   #include &lt;ERRNO.H&gt;
   extern int errno;

   void main( void )
   {
      double x = -1.0e+3,y;

      y = exp( x );

      // The exp function returns the exponential value of the
      // floating-point parameter, x, if successful. On overflow,
      // the function returns INF (infinite) and on underflow, exp
      // returns 0.

      // Check for error conditions.
      // Underflow error or other.
      if(y==0 || (errno!=0))
      {
         if (y==0)
            printf("ERROR: Underflow Error\n");
         else
            perror("ERROR");

         printf("Errno: %i\n",errno);
      }
      // No Errors--print results.
      else
      {
         printf( "exp( %f ) = %f\n", x, y );
      }
   }

</PRE><h2>STATUS</h2>
 
<P>
This behavior is by design.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The errno variable is a global variable, which is given an integer value
upon an error. Math functions, such as exp(), set this value to indicate an
error state; library math routines set errno by calling _matherr. However,
the errno variable is not set when an underflow occurs. According to the
ANSI C specification, whether or not errno acquires the value of the macro
ERANGE is implementation-defined.
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 
<P>
Type in and execute the following program [when using the exp() function
and an underflow error occurs, the errno variable is not set to a value]:
<P>
<PRE>   #include &lt;stdio.h&gt;
   #include &lt;math.h&gt;
   #include &lt;ERRNO.H&gt;
   extern int errno;

   void main( void )
   {
      double x = -1.0e+3,y;

      y = exp( x );

      // Check for error conditions.
      // perror() returns the error message associated with errno.
      if(errno!=0)
      {
            perror("ERROR");
      }
      // No Errors--print results. But error did occur because we have an
      // underflow error.
      // The underflow goes undetected because errno wasn't set to any
      // value.
      else
      {
         printf( "exp( %f ) = %f\n", x, y );
      }
   }
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 5.00<BR>
Keywords          : kbcode<BR>
Version           : WINNT:5.0<BR>
Platform          : winnt<BR>
Issue type        : kbprb<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 15, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
