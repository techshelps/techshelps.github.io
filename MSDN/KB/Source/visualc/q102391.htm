

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Create Two-Dimensional Arrays with Operator new </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q102391">
<META NAME="KBModify" CONTENT="1997/09/30">
<META NAME="KBCreate" CONTENT="1993/08/03">
<META NAME="Keywords" CONTENT="CPPLangIss kbcode kbfasttip">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The code example below demonstrates creating a two-dimensional array using the C++ operator new. For more information on creating a two- dimensional array in C with the malloc() function, please search in the Microsoft Knowledge Base on the followi...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA4Q,QAH4,QBFY,QBCT,QAI4,QAEF,QAGC,QAGB,QACJ,QAPF,QDKD,QA5V,QAPN,QAHE,QBV8 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Create Two-Dimensional Arrays with Operator new</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 30, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q102391</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Microsoft C/C++ for MS-DOS, version 7.0
<LI>Microsoft Visual C++ for Windows, versions 1.0, 1.5
<LI>Microsoft Visual C++, 32-bit Edition, versions 1.0, 2.0, 2.1, 4.0, 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The code example below demonstrates creating a two-dimensional array
using the C++ operator new. For more information on creating a two-
dimensional array in C with the malloc() function, please search in
the Microsoft Knowledge Base on the following words:
<P>
<PRE>   dynamic memory allocation two dimensional array

</PRE><h2>MORE INFORMATION</h2>
 
<P>
To conceptualize a two-dimensional array, consider a one-dimensional
array of one-dimensional arrays. To construct a two-dimensional array,
first allocate an array of pointers to pointers. Then, index through
the first array and allocate additional one-dimensional arrays.
<P>
The first code example below copies command-line arguments into a two-
dimensional array. The first dimension represents the total number of
command-line arguments. The second dimension has a variable length and
represents the length of each command-line argument.
<P>
The second code example below dynamically creates a two-dimensional
array of integers where user input specifies the size of each
dimension. The example also initialized the array to contain random
values and displays the contents of the array.
<P>
<P><h3>Sample Code 1</h3>
 
<P>
<PRE>   /*
    * Compiler options needed: None
    */

   #include &lt;iostream.h&gt;
   #include &lt;new.h&gt;
   #include &lt;string.h&gt;

   char **TwoDArray;

   void main(int argc, char **argv)
   {
      // Allocate the first dimension.
      TwoDArray = new char*[argc];

      for (int i = 0; i &lt; argc; i++)
         {
         // Allocate the second dimension
         TwoDArray[i] = new char[strlen(argv[i]) + 1];
         strcpy(TwoDArray[i], argv[i]);
         }

      cout &lt;&lt; "This is the command line that was passed in:" &lt;&lt; endl;
      for (i = 0; i &lt; argc; i++)
         {
         cout &lt;&lt; "argv[" &lt;&lt; i &lt;&lt; "] = ";

         // Print the command line arguments one at a time.
         for (unsigned j = 0; j &lt;= strlen(TwoDArray[i]); j++)
            cout &lt;&lt; TwoDArray[i][j];
         cout &lt;&lt; endl;
         }

      // Delete the 2D array
      for (i = 0; i &lt; argc; i++)
         delete [] TwoDArray[i];
      delete [] TwoDArray;
   }

</PRE><h3>Sample Code 2</h3>
 
<P>
<PRE>   /*
    * Compiler options needed: None
    */

   #include &lt;iostream.h&gt;
   #include &lt;new.h&gt;
   #include &lt;stdlib.h&gt;
   #include &lt;time.h&gt;

   int **MyArray;

   void main(void)
   {
      int d1, d2, ndx1, ndx2;

      cout &lt;&lt; "Enter the first array dimension: ";
      cin &gt;&gt; d1;
      cout &lt;&lt; "Enter the second array dimension: ";
      cin &gt;&gt; d2;

      // Allocate memory for the array
      MyArray = new int*[d1];
      for (ndx1 = 0; ndx1 &lt; d1; ndx1++)
         MyArray[ndx1] = new int[d2];

      // Fill the array with random integer values between 0 and 9
      srand((unsigned)time(NULL));
      for (ndx1 = 0; ndx1 &lt; d1; ndx1++)
         for (ndx2 = 0; ndx2 &lt; d2; ndx2++)
             MyArray[ndx1][ndx2] = rand() % 10;

      // Display the array
      for (ndx2 = 0; ndx2 &lt; d2; ndx2++)
         cout &lt;&lt; '\t' &lt;&lt; "col " &lt;&lt; ndx2;   // col #'s
      cout &lt;&lt; endl;

      for (ndx1 = 0; ndx1 &lt; d1; ndx1++)
         {
         cout &lt;&lt; "row " &lt;&lt; ndx1;           // row #'s

         for (ndx2 = 0; ndx2 &lt; d2; ndx2++)
            {
            cout &lt;&lt; '\t';
            cout &lt;&lt; MyArray[ndx1][ndx2];
            }
         cout &lt;&lt; endl;
         }

      // Delete the array
      for (ndx1 = 0; ndx1 &lt; d1; ndx1++)
         delete [] MyArray[ndx1];
      delete [] MyArray;
   }
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 8.00 8.00c<BR>
Keywords          : CPPLangIss kbcode kbfasttip<BR>
Version           : WINDOWS:1.0,1.5; WINDOWS NT:1.0,2.0,2.1,4.0<BR>
Platform          : NT WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 30, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
