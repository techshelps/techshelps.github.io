

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MFC 4.0 No Longer Pre-Registers Window Classes </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q140596">
<META NAME="KBModify" CONTENT="1997/10/10">
<META NAME="KBCreate" CONTENT="1995/12/04">
<META NAME="Keywords" CONTENT="MfcMisc kbprg kbusage">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  In previous versions of MFC (prior to MFC 4.0), the framework pre- registered some Window classes. Existence of these classes allowed applications to use them to create their own windows. These classes were AfxWnd, AfxFrameOrView, AfxMDIFrame, and ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QABO,QAGQ,QAJH,QAH4,QBXF,QAJQ,QBVV,QDL9,QBWQ,QBWO,QBWN,QBCF,QBDM,QAYZ,QAUD V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>MFC 4.0 No Longer Pre-Registers Window Classes</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q140596</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
4.00
WINDOWS NT
kbprg kbusage
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
   Microsoft Visual C++, 32-bit Edition, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In previous versions of MFC (prior to MFC 4.0), the framework pre-
registered some Window classes. Existence of these classes allowed
applications to use them to create their own windows. These classes were
AfxWnd, AfxFrameOrView, AfxMDIFrame, and AfxControlBar. The MFC classes
shipped with MFC 4.0 no longer register them, so they are no longer
available to be used in an application.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
In any Windows-based application, every window is created based on a
registered window class. The window class identifies several
characteristics of the windows based on it, including the icon, cursor,
background color, and the window procedure.
<P>
In versions prior to and including Visual C++ 2.2, to facilitate creating
windows in an MFC application, the framework pre-registered some classes.
It would then use these classes to create the essential windows in a
typical MFC application. These included the main window, view, and the
control bars.
<P>
Pre-registration of certain window classes gave rise to several problems
like multiple versions of MFC running in the same process space. As a
consequence, MFC 4.0 does not register them and their usage is illegal
unless an application itself registers window classes with these names. If
an MFC 4.0 application goes ahead and uses any of these classes, the
subsequent call to ::CreateWindow fails and GetLastError returns the
message "Cannot find Window class."
<P>
To use Window classes that are similar to the ones mentioned here or to
port MFC applications that use these classes to MFC 4.0, an application
must register these classes. Note that even though MFC does not pre-
register these classes any more, it takes care of registering new window
classes when it needs them. So applications that do not use these classes
in any custom code do not need to make any changes.
<P>
For example, one typical use of these pre-registered window classes was in
applications that registered their own window class for the main window to
help detect multiple instances of the same application. These applications
usually called ::GetClassInfo first to retrieve the information from the
pre-registered MFC window class before registering a new class under a
different name. Now, in MFC 4.0, ::GetClassInfo will fail to fill out
necessary members of the WNDCLASS structure, and any subsequent attempts to
create a window using that window class will fail.
<P>
Technical Note #1, "Window Class Registration." gives the attributes of
these window classes. You can use these attributes to register the
necessary window classes. The following sample code demonstrates how to
register a new window class based on the characteristics of the
AfxFrameOrView class:
<P>
<P><h3>Sample Code</h3>
 
<P>
BOOL CYourWinApp::InitInstance()
{
<PRE>    // Add the following code to your override of InitInstance.
    // Make sure that this code run before you create any
    // windows that use this new window class

    WNDCLASS wndclass;

    wndclass.style = CS_DBLCLKS | CS_HREDRAW | CS_VREDRAW;
    wndclass.lpfnWndProc = ::DefWindowProc;
    wndclass.cbClsExtra = 0;
    wndclass.cbWndExtra = 0;
    wndclass.hInstance = AfxGetInstanceHandle();
    wndclass.hIcon = LoadIcon(IDR_MAINFRAME);
                     // or load a different icon
    wndclass.hCursor = LoadCursor( IDC_ARROW );
    wndclass.hbrBackground = (HBRUSH) (COLOR_WINDOW + 1);
    wndclass.lpszMenuName = NULL;
    wndclass.lpszClassName = "MyAfxFrameOrView";

    if( !AfxRegisterClass( &amp;wndclass ))
      {
        TRACE("Window class MyAfxFrameOrView could not be
               registered.\n");
        return FALSE;
      }

</PRE>}
<P>
Now the MyAfxFrameOrView window class can be used anywhere a need for the
AfxFrameOrView class exists.
<P>
<P><h2>REFERENCES</h2>
 
<P>
MFC Technical Note #1. For information on attributes of other window
classes, see Technical Note #1. It does not mention the lpfnWndProc member
of the WNDCLASS structure. You should always make it ::DefWindowProc.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 4.0 AfxWnd AfxFrameOrView AfxMDIFrame<BR>
AfxControlBar<BR>
KBCategory: kbprg kbusage<BR>
KBSubcategory: MFCMisc<BR>
Keywords          : MfcMisc kbprg kbusage<BR>
Technology        : kbMfc<BR>
Version           : 4.00<BR>
Platform          : NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
