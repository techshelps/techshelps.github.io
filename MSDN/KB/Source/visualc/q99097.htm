

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Customize Common Dialog Box Parameter Blocks </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q99097 ">
<META NAME="KBModify" CONTENT="1998/01/15">
<META NAME="KBCreate" CONTENT="1993/05/23">
<META NAME="Keywords" CONTENT="MfcUI">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The Microsoft Foundation Classes (MFC) Standard Dialog Classes provide convenient C++ wrappers for the Microsoft Windows Common Dialog Boxes dynamic-link library (DLL), COMMDLG.DLL. To customize one of these classes, you may need to modify some of ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA01,QAHE,QABA,QABO,QDL9,QBWO,QBWN,QBFY,QAHC,QAY5,QAH6,QBHQ,QAH4,QBWQ,QANX V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Customize Common Dialog Box Parameter Blocks</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 15, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q99097 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
   - Microsoft C/C++ version 7.0
   - Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51, 1.52
   - Microsoft Visual C++ 32-bit Edition, versions 2.0, 2.1, 4.0, 4.1,
<P><PRE>     4.2, 5.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The Microsoft Foundation Classes (MFC) Standard Dialog Classes provide
convenient C++ wrappers for the Microsoft Windows Common Dialog Boxes
dynamic-link library (DLL), COMMDLG.DLL. To customize one of these classes,
you may need to modify some of the default parameter block members. The
wrapper functions use the same parameter blocks as the corresponding common
dialog functions because, ultimately, the code calls the Windows functions.
<P>
<PRE>   Microsoft
   Foundation Classes   Windows Common Dialog   Parameter Block
   -------------------------------------------------------------------
   CFileDialog          GetOpenFileName and     OPENFILENAME
                          GetSaveFileName
   CFontDialog          ChooseFont              CHOOSEFONT
   CColorDialog         ChooseColor             CHOOSECOLOR
   CPrintDialog         PrintDlg                PRINTDLG
   CFindReplaceDialog   FindText and            FINDREPLACE
                          ReplaceText

</PRE>For Microsoft Foundation Classes version 1.0, distributed with Microsoft
C/C++ version 7.0, Technical Note #13 provides additional information about
these classes and how to use them. Technical Note #13 is in the TN013.TXT
file in the MFC\DOC directory (by default, C:\C700\MFC\DOC). For Microsoft
Foundation Classes library versions 2.x, 3.x, and 4.x, each of these
functions is listed in the online documentation and in the "Class Library
Reference" manual by its class name.
<P>
Even though the parameter block defaults that the Microsoft Foundation
Classes library provides are generally adequate, there are times it
may be necessary to customize a dialog box. For example, it may be
helpful to specify the OFN_ALLOWMULTISELECT flag with the CFileDialog
to allow the user to select more than one file in the GetOpenFileName
dialog box.
<P>
If you add a flag, however, you must be careful to provide any
additional information as appropriate. For example, CFileDialog
provides a default buffer m_szFileName that is _MAX_PATH characters in
length. If you allow the user to select more than one file, this
buffer capacity can be exhausted quickly.
<P>
Even though the CFileDialog class was designed with a buffer to
support only one file, it is an easy matter to provide your own buffer
by setting the m_ofn.lpstrFile and m_ofn.nMax members of the
OPENFILENAME parameter block yourself after constructing your
CFileDialog, but before calling DoModal().
<P>
The text below demonstrates this method of replacing the default
CFileDialog buffer. However, similar techniques apply to any of the
standard dialog box classes. In general, when you change any of the
default flags, you should examine the Microsoft Foundation Classes
library source code to determine the effects of the change, if any,
and to take appropriate action.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following code fragment demonstrates using CFileDialog to select
multiple files by adding the OFN_ALLOWMULTISELECT flag and using an
application-supplied buffer:
<P>
<PRE>   char bigBuff[2048] = "";  // maximum common dialog buffer size
   char szFilter[] =
      "All Files (*.*)|*.*|Text Files (*.txt)|*.txt||";
   CFileDialog dlg(bOpen, NULL, NULL,
      OFN_HIDEREADONLY | OFN_ALLOWMULTISELECT, szFilter);

   // Modify OPENFILENAME members directly to point to bigBuff
   dlg.m_ofn.lpstrFile = bigBuff;
   dlg.m_ofn.nMaxFile = sizeof(bigBuff);

   dlg.DoModal();

</PRE>There are a number of circumstances in which it is desirable to add a
custom template and/or a hook function to the Windows common dialog
boxes. To do so, modify fields in the appropriate common dialog box
parameter block. When the application uses the Microsoft Foundation
Classes library, modify these fields after creating the dialog object
but before calling DoModal(), as illustrated above.
<P>
For more information on using a custom template or a hook function
with one of the common dialog boxes, please query in the Microsoft
Knowledge Base on the following words:
<P>
steps add hook function
<P>
-or-
<P>
steps add custom template
 
<PRE>Keywords          : MfcUI
Technology        : kbMfc
Version           : 1.0 1.5 1.51 1.52 2.0 4.0 4.2
Platform          : MS-DOS NT WINDOWS
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 15, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
