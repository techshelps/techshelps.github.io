

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: Link Error L2022 : "__aab : export undefined" </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q117386">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1994/06/27">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The linker generates the following error message when you export a class that contains a user-defined conversion function (conversion operator):     error L2022: __aab: export undefined  Exporting the conversion function individually also causes th...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA3P,QATX,QAB4,QAY5,QAAP,QBV8,QAMB,QAKP,QAB9,QABO,QAEQ,QBFY,QANY,QAKM,QAH4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: Link Error L2022 : "__aab : export undefined"</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q117386</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00 1.50
WINDOWS
kbtool kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft C/C++ Compiler (CL.EXE), included with:
<P><PRE>    - Microsoft Visual C++ for Windows, versions 1.0 and 1.5
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The linker generates the following error message when you export a class
that contains a user-defined conversion function (conversion operator):
<P>
<PRE>   error L2022: __aab: export undefined

</PRE>Exporting the conversion function individually also causes the linker to
generate the above error message.
<P>
<P><h2>CAUSE</h2>
 
<P>
The compiler generates incorrect code for the function that implicitly uses
the conversion function. LINK is unable to resolve the export.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To correct the error, rewrite the function that implicitly calls the
conversion function. For the sample code in the "MORE INFORMATION" section
below, use one of the following workarounds:

<UL><LI>void __export Global_Function()
   {
<P><PRE>      Text Mytext;
      String temp = String( Mytext );
</PRE>   }
<P>
   -or-

<LI>void __export Global_Function()
   {
<P><PRE>      Text Mytext;
      String temp;
      temp = Mytext;
</PRE>   }
<P>
</UL><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products
listed at the beginning of this article. We are researching this
problem and will post new information here in the Microsoft Knowledge
Base as it becomes available.
<P>
This is not a problem in Visual C++, 32-bit Edition.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The problem only occurs if the conversion function switches from one class
to a user-defined class. The problem does not occur if the class is not a
user-defined class. For example:
<P>
<PRE>   Class MyClass
   {
      _export operator int();    // OK
   }

</PRE><h3>Sample Code</h3>
 
<P>
<PRE>/* Compile options needed: none
*/

   class __export String       // A user defined class
   {
    public :
      String(){};              // Constructor
   };

   class __export Text
   {
    public:
      Text(){}                 // Constructor
      operator String();       // User defined conversion function
    private:
      String m_text;           // Data member
   };

   Text::operator String()     // Function definition
   {
      return m_text;
   }

   void __export Global_Function()
   {
      Text mytext;
      String temp = mytext;    // L2022 Error
   }
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 1.50 8.00 8.00c<BR>
KBCategory: kbtool kbbuglist<BR>
KBSubcategory: CPPIss<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
