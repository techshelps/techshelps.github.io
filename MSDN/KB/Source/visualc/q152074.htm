

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: COleMessageFilter Doesn't Process WM_PAINT </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q152074">
<META NAME="KBModify" CONTENT="1997/07/10">
<META NAME="KBCreate" CONTENT="1996/06/03">
<META NAME="Keywords" CONTENT="MfcOLE VCx86 kbcode kbole kbprb">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  If an automation client calls a method of an automation server that brings up a modal dialog, the client area below the dialog may not re-paint itself if the dialog is moved over it.  CAUSE =====  The painting problem occurs because the WM_PAINT me...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAUD,QAEV,QAGI,QBWP,QA01,QABO,QADX,QAYC,QALW,QDKS,QBVV,QA2K,QAYL,QAR4,QARL V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: COleMessageFilter Doesn't Process WM_PAINT</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q152074</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
4.00 4.10
WINDOWS NT
kbole kbprb kbcode
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
   Microsoft Visual C++, 32-bit Edition, versions 4.0, 4.1
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
If an automation client calls a method of an automation server that brings
up a modal dialog, the client area below the dialog may not re-paint itself
if the dialog is moved over it.
<P>
<P><h2>CAUSE</h2>
 
<P>
The painting problem occurs because the WM_PAINT messages are in the queue,
but are not dispatched.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
One solution is to retrieve and dispatch all WM_PAINT messages when
IMessageFilter::MessagePending is called. The sample code below
demonstrates one way for this resolution to be implemented.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To fix the problem with MFC, create a new class that overrides
COleMessageFilter::OnMessagePending() as described below. Then revoke the
old message filter and register this new one.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   //
   // definition of new COleMessageFilter-derived class
   //
   class CMyMessageFilter : public COleMessageFilter
   {
   public:
      virtual BOOL OnMessagePending(const MSG* pMsg);
   };


   //
   // add a member variable to the CWinApp-derived class
   //
   public:
      CMyMessageFilter MMF;


   //
   // add to the CWinApp::InitInstance after calling AfxOleInit
   //
      COleMessageFilter* OldFilter = AfxOleGetMessageFilter();
      OldFilter-&gt;Revoke();
      MMF.Register();


   //
   // Definition of OnMessageFilter
   //
   CMyMessageFilter::OnMessagePending(const MSG* pMsg)
   {
      MSG msg;

      while (PeekMessage(&amp;msg, NULL, WM_PAINT, WM_PAINT,
                         PM_REMOVE | PM_NOYIELD))
      {
         DispatchMessage(&amp;msg);
      }

      if (pMsg-&gt;message == WM_PAINT) return TRUE;

      return FALSE;
   }


   //
   // add to CWinApp::ExitInstance
   //
      MMF.Revoke();
      return CWinApp::ExitInstance();
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 2.00 2.10 2.20 4.00 4.10<BR>
KBCategory: kbole kbprb kbcode<BR>
KBSubcategory: MfcOLE VCx86<BR>
Keywords            : MfcOLE VCx86 kbcode kbole kbprb<BR>
Technology          : kbMfc<BR>
Version             : 4.00 4.10<BR>
Platform            : NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
