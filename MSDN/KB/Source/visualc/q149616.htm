

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Developer Studio May Hang When Debug Session Starts/Ends </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q149616">
<META NAME="KBModify" CONTENT="1997/12/04">
<META NAME="KBCreate" CONTENT="1996/04/05">
<META NAME="Keywords" CONTENT="VwbIss kbbuglist kbfixlist kbusage">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  When starting or ending a debugging session, Developer Studio hangs (doesn't respond to user input).  CAUSE =====  The problem occurs because there is a large amount of text to display in the Output window, and Developer Studio is in a state where ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QABA,QA2O,QAIJ,QAJH,QAEV,QAUF,QAR4,QAO4,QAKP,QDIR,QBHQ,QAVX,QAKC,QAX6,QBV8 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Developer Studio May Hang When Debug Session Starts/Ends</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 4, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q149616</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
4.00
WINDOWS NT
kbusage kbbuglist kbfixlist
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Visual C++, 32-bit Edition, version 4.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When starting or ending a debugging session, Developer Studio hangs
(doesn't respond to user input).
<P>
<P><h2>CAUSE</h2>
 
<P>
The problem occurs because there is a large amount of text to display in
the Output window, and Developer Studio is in a state where it is unable to
display it.
<P>
Here are two scenarios where this problem will occur:

<UL><LI>The problem can occur when you start debugging an application that
   implicitly links to a large number of DLLs. You implicitly link to a DLL
   by linking with the import library for the DLL. The problem has been
   known to occur with an application that implicitly links to more than
   100 DLLs.
<P>
   In this scenario, the debugger is attempting to output a message similar
   to this one:
<P>
<P><PRE>      LDR: LdrpMapDll Relocating: Base Name MYDLL.dll
</PRE><P>
   This message indicates that the operating system is relocating the DLL
   to load it at an address other than its default base address.

<LI>The problem can also occur when an application sends out a large number
   of debug messages as it exits. These could be messages from the
   application itself, from the C run-time (CRT) library, or from the MFC
   libraries. This has been known to occur when an application has a large
   number of memory leaks that are reported by the MFC or the CRT libraries
   as the application exits.
<P>
</UL><h2>RESOLUTION</h2>
 
<P>
For the first scenario, you could use the /BASE linker option when building
the DLLs with which the application implicitly links. The /BASE option
allows you to set a preferred base address for a .dll or .exe file. If you
set a different base address for each DLL, the operating system will not
need to relocate them when loading them, and Developer Studio will not need
to send a message to indicate this. Using the /BASE option avoids the
problem and allows the application to load more efficiently regardless of
whether it is being debugged or not. For more information about the /BASE
option, please refer to the online documentation.
<P>
For second scenario, if the application being debugged is using MFC, you
can temporarily turn off tracing output using the MFC Tracer application,
If the application does not use MFC and the debug messages are coming from
the CRT library, then you could use the _CrtSetReportMode and
_CrtSetReportFile functions in the application. These functions could be
used to redirect the messages to a file instead of the Developer Studio
Output window. For more information on the CRT debug functions, please
refer to the online documentation.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. This problem has been corrected in
version 4.0.
<P>
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Even though this bug has been fixed in version 4.1, there may be a
noticeable delay when you start a debugging session when the application
implicitly links to a large number of DLLs.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00<BR>
KBCategory: kbusage kbbuglist kbfixlist<BR>
KBSubcategory: VWBIss<BR>
Keywords          : VwbIss kbbuglist kbfixlist kbusage<BR>
Version           : 4.00<BR>
Platform          : NT WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 4, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
