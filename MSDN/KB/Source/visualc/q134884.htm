

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: App with CFormView Causes Stack Overflow or GP Fault </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q134884">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1995/08/13">
<META NAME="Keywords" CONTENT="kb16bitonly kbprg MfcMisc kbbuglist">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  An application that uses a CFormView-derived class as its view may go into an infinite loop as a result of repeatedly creating CFormView windows. Depending on the compiler and linker settings, this problem may surface as a memory exception or a sta...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QADO,QAYL,QBKN,QAKP,QA19,QAML,QALZ,QAGI,QAJH,QAJQ,QDL9,QBWQ,QBWO,QBWN,QBFM V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: App with CFormView Causes Stack Overflow or GP Fault</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q134884</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
   - Microsoft Visual C++ for Windows, versions 1.5, 1.51, 1.52
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
An application that uses a CFormView-derived class as its view may go into
an infinite loop as a result of repeatedly creating CFormView windows.
Depending on the compiler and linker settings, this problem may surface as
a memory exception or a stack overflow.
<P>
<P><h2>CAUSE</h2>
 
<P>
When a CFormView receives the focus, it re-sets the focus to the control in
the CFormView that previously had the focus. The HWND of the control that
had focus last is saved in a CFormView protected member variable,
m_hWndFocus. CFormView::OnSetFocus() calls ::SetFocus(m_hWndFocus)if
m_hWndFocus is a valid window.
<P>
The problem occurs because one of the constructors for CFormView does not
initialize this member variable. As mentioned, the CFormView::OnSetFocus()
function sets focus to m_hWndFocus if it is a valid window. The problem
occurs when this variable's uninitialized value happens to be the same as
the HWND of the formview. ::SetFocus(m_hWndFocus) gives the focus to the
CFormView, which causes OnSetFocus() to be called for the CFormView again.
This causes the application to go into an infinite loop.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
In the constructor of the CFormView-derived class that takes the ID of the
template as an argument, initialize the m_hWndFocus variable to NULL. The
constructor that takes an LPCSTR for an argument already does this. For
example:
<P>
<PRE>   CMyFormView::CMyFormView(UINT nIDTemplate)
      : CFormView(nIDTemplate)
   {
     // ADD THE FOLLOWING LINE TO THIS CONSTRUCTOR
     m_hWndFocus = NULL;
   }

</PRE><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. We are researching this problem and will
post new information here in the Microsoft Knowledge Base as it becomes
available.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 2.50 2.51 2.52<BR>
Keywords            : kb16bitonly kbprg MfcMisc kbbuglist<BR>
Technology          : kbMfc<BR>
Version             : 1.5 1.51 1.52<BR>
Issue type          : kbbug<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
