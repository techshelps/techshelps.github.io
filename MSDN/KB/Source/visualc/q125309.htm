

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: AllocMemoryDebug Gives Assertion or Trace Error on New[0] </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q125309">
<META NAME="KBModify" CONTENT="1997/07/10">
<META NAME="KBCreate" CONTENT="1995/01/24">
<META NAME="Keywords" CONTENT="MfcMisc kbprb kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  If new is called to allocate an array whose size is determined by a variable that has a value of zero (0), the program terminates with the following message in a debug build:     Assertion Failed!        Windows Application:File Afxmem.cpp,        ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB4,QBXT,QA5V,QAIB,QBFY,QA56,QA55,QAGI,QAH4,QAI4,QDL9,QBWQ,QBWO,QBWN,QBWP V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: AllocMemoryDebug Gives Assertion or Trace Error on New[0]</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q125309</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00 1.50 1.51 | 1.00
<PRE>WINDOWS        | WINDOWS NT
</PRE>kbprg kbprb
<P>
 
The information in this article applies to:
<P>
<PRE>   The Microsoft Foundation Classes (MFC), included with:
     - Microsoft Visual C++ for Windows, versions 1.0, 1.5, and 1.51
     - Microsoft Visual C++, 32-bit Edition, version 1.0
</PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
If new is called to allocate an array whose size is determined by a
variable that has a value of zero (0), the program terminates with the
following message in a debug build:
<P>
<PRE>   Assertion Failed! &lt;name&gt; Windows Application:File Afxmem.cpp,
                            Line &lt;line&gt;

</PRE>The &lt;line&gt; value depends on the version of MFC that you have:

<UL><LI>In MFC 2.0  &lt;line&gt;  = 275
<LI>In MFC 2.1  &lt;line&gt;  = 267
<LI>In MFC 2.5  &lt;line&gt;  = 277
<LI>In MFC 2.51 &lt;line&gt;  = 286
<P>
</UL>In MFC 3.x, the code generates a TRACE message similar to this:
<P>
<PRE>   Warning: Allocating zero length memory block.

</PRE><h2>RESOLUTION</h2>
 
<P>
This behavior changed with the introduction of Visual C++ version 2.0. In
the MFC that shipped with version 2.0, a TRACE is output to the Debug
Window in Debug mode.
<P>
If you encounter the assertion failure, you can work around it by simply
not calling new for a zero-length array. Check for a zero value before
calling new. If you need to have a valid address for the memory block,
allocate an array of size 1 as in new[1].
<P>
<P><h2>STATUS</h2>
 
<P>
This behavior is by design. It is intended to help programmers detect logic
errors in programs.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The run-time operator new() can be called with the argument zero. A
distinct (non-null) pointer to an object will be returned. (See Section
5.3.3, third paragraph of the ARM - M.A.Ellis, B.Stroustrup.) This is the
behavior of Visual C++ versions 2.x and 4.0. However, Visual C++ version
4.0 does not warn when new() is called with a zero size. It is the
programmer's responsibility to ensure the pointer returned by new() is
of the appropriate size.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>/* Compile options needed:
        Default MFC App.
*/

int size=0;
char * p = new char[size];

// With MFC 2.51 or earlier, this causes an Assert to be thrown
// With MFC 3.x this causes a TRACE warning
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 1.50 2.00 2.10 2.50 2.51<BR>
KBCategory: kbprg kbprb<BR>
KBSubcategory: MfcMisc<BR>
Keywords            : MfcMisc kbprb kbprg<BR>
Technology          : kbMfc<BR>
Version             : 1.00 1.50 1.51 | 1.00<BR>
Platform            : NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
