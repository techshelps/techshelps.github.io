

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Build a Code Resource </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q129787">
<META NAME="KBModify" CONTENT="1997/10/08">
<META NAME="KBCreate" CONTENT="1995/05/04">
<META NAME="Keywords" CONTENT="VCMac kbcode">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  You can use Visual C++ to build Code Resources of type CDEF, cdev, INIT, LDEF, MDEF, WDEF, and XCMD. This article illustrates how.  MORE INFORMATION  Applications use the register A5 to point to their global memory and as a base for intersegment ju...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QAIM,QBFY,QAMA,QABG,QDO9,QA56,QA55,QABA,QAPF,QA7H,QA63,QAZQ,QANG,QAGI V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Build a Code Resource</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 8, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q129787</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual C++ version 2.0 Cross-Development Edition
   for Macintosh
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
You can use Visual C++ to build Code Resources of type CDEF, cdev, INIT,
LDEF, MDEF, WDEF, and XCMD. This article illustrates how.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Applications use the register A5 to point to their global memory and as a
base for intersegment jumps. Stand-alone Code Resources cannot use A5 in
this manner. To use global memory in Visual C++, follow these steps:

<OL><P><LI>Locate the entry points for the Code Resource types (CDEF, cdev, INIT,
   LDEF, MDEF, WDEF, and XCMD) at the beginning of the resource. When
   Visual C++ compiles a code resource, it locates the global data at the
   beginning of the resource by default. To force the global data to be
   moved to the end of the resource use the code_seg pragma as in this
   example:
<P>
   #pragma code_seg("MAIN$2")
<P>
   This forces any declarations that follow to be placed in the second half
   of the MAIN Code Resource. The data is referenced as an offset from the
   PC register, rather than the A5 register.

<P><LI>To avoid an intersegment jump, merge the code from two segments together
   by using the Linker's MERGE option. This step is necessary if a Code
   Resource calls into a library such as the C Runtime libraries because a
   second segment is created and the call to the function becomes an
   intersegment jump.
<P>
   For example, if the C Runtime library is being merged with and INIT
   titled MAIN, add the following line to the Link:Project Options found in
   the Project Settings dialog:
<P>
   MERGE:CRTSTRING?=MAIN
<P>
   Replace the question mark (?) with an ASCII character 1. The CRTSTRING?
   segment is titled CRTSTRIN by the Linker, so the name of the segments in
   the target application cannot be used. To determine the name of any
   segments generated by Visual C++, build the Code Resource as a 'CODE'
   resource first. Then check the .MAP file for the correct spelling of the
   segment.
<P>
   If a Code Resource is built without merging the segments the following
   Linker error is generated:
<P>
   error LNK1574: A5 reference to SomeFunction invalid in standalone code
<P>
</OL><h3>Sample Code</h3>
 
<P>
Here is a sample INIT Code Resource including code and project settings:
<P>
The C/C++ Project Options:
<P>
<PRE>   /nologo /W3 /YX /Oi /D "_WINDOWS" /D "_MAC" /D "_68K_" /D "NDEBUG" /D
   "_MBCS"

    /FR"MacRel/" /Fp"MacRel/CodRes.pch" /Fo"MacRel/" /c

</PRE></OL>The Link Project Options:
<P>
<PRE>   libcs.lib /NOLOGO /MAC:bundle /MAC:type="rsrc" /MAC:creator="RSED"
    /PDB:"MacRel/CodRes.pdb" /MAP:"MacRel/SACODE.map" /DEBUG /MACHINE:M68K
    /NODEFAULTLIB:"swapd.lib" /NODEFAULTLIB /OUT:"MacRel/CODRES.exe"
   /entry:main
    /section:MAIN,,resource="INIT"@99 /MERGE:CRTSTRING =MAIN

</PRE>The code for this sample:
<P>
<PRE>   #include &lt;string.h&gt;
   #include &lt;macos\osutils.h&gt;

   #pragma code_seg("MAIN$2")

   char _declspec(allocate("_CODE")) java[10] =" Help Me!";

   #pragma code_seg("MAIN$1")

   void main(void)
      {
      char   bob[10];

      bob[0]=0;
      strcpy(bob,java);

      DebugStr(_c2pstr(bob));
      }

</PRE>This code creates an INIT with a resource ID of 99. There will also be
resources of DATA, CODE, and MSCV. They are not needed for this Code
Resource to function.
 
<PRE>Keywords          : VCMac kbcode
Version           : MAC:2.0;
Platform          : MACINTOSH</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 8, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
