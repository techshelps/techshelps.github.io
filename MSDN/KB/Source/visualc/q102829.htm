

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FILE: How to Replace a View in a CMDIChildWnd Window </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q102829">
<META NAME="KBModify" CONTENT="1997/07/31">
<META NAME="KBCreate" CONTENT="1993/08/10">
<META NAME="Keywords" CONTENT="MfcDocView kbfile kbsample kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT=" There is an equivalent VC4.0 (32-bit) sample available under the name of VWRPLC32.   The VWRPLC sample demonstrates how a programmer might write a ReplaceView() member function for a CMDIChildWnd-derived class.  Download VWRPLC.EXE, a self-extractin...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QADK,QAUD,QBWT,QAY2,QAY5,QALW,QAI4,QAEF,QBV8,QAPF,QAB4,QAJQ,QAB9,QAJ4,QBCT V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FILE: How to Replace a View in a CMDIChildWnd Window</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 31, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q102829</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC), included with:
<P><PRE>    - Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51, 1.52
    - Microsoft Visual C++ 32-bit Edition, version 1.0, 2.0, 2.1
</UL></PRE> 
<P>
There is an equivalent VC4.0 (32-bit) sample available under the name of
VWRPLC32.
<P>
<P><h2>SUMMARY</h2>
 
<P>
The VWRPLC sample demonstrates how a programmer might write a ReplaceView()
member function for a CMDIChildWnd-derived class.
<P>
Download VWRPLC.EXE, a self-extracting file, from the Microsoft Software
Library (MSL) on the following services:
<P>
The following file is available for download from the Microsoft Software
Library:
<P>
<PRE> ~ <A HREF="http://support.microsoft.com/download/support/mslfiles/Vwrplc.exe">Vwrplc.exe</A> <I>(size: 36685 bytes)</I> 

</PRE>For more information about downloading files from the Microsoft Software
Library, please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../zMiscellaneous/Q119591.htm">Q119591</A></B>
   TITLE     : How to Obtain Microsoft Support Files from Online Services

</PRE>NOTE: Use the -d option when running VWRPLC.EXE to decompress the file and
re-create the proper directory structure.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The core of the sample can be found in FRAME.CPP. You will see the
following function:
<P>
<PRE>   BOOL CFrame::ReplaceView(CRuntimeClass * pViewClass)
   {
    CCreateContext context;
    CView * pCurrentView;

    // If no active view for the frame, return FALSE because this
    // function retrieves the current document from the active view.
    if ((pCurrentView=GetActiveView())==NULL)
       return FALSE;

    // If you're already displaying this kind of view, no need to go
    // further.
    if ((pCurrentView-&gt;IsKindOf(pViewClass))==TRUE)
       return TRUE;

     // Get pointer to CDocument object so that it can be used in the
     // creation process of the new view.
     CDocument * pDoc= pCurrentView-&gt;GetDocument();

      // Set flag so that document will not be deleted when view is
      // destroyed.
      BOOL bAutoDelete=pDoc-&gt;m_bAutoDelete;
       pDoc-&gt;m_bAutoDelete=FALSE;
      // Delete existing view
      pCurrentView-&gt;DestroyWindow();
      // restore flag
      pDoc-&gt;m_bAutoDelete=bAutoDelete;

     // Create new view and redraw.
     context.m_pNewViewClass=pViewClass;
     context.m_pCurrentDoc=pDoc;
     context.m_pNewDocTemplate=NULL;
     context.m_pLastView=NULL;
     context.m_pCurrentFrame=this;

     CView * pNewView = (CView *) pViewClass-&gt;CreateObject();

     if (pNewView == NULL)
       {
       TRACE1("Warning: Dynamic create of view type %Fs failed\n",
                      pViewClass-&gt;m_lpszClassName);
            return FALSE;
       }

      if (!pNewView-&gt;Create(NULL, NULL, AFX_WS_DEFAULT_VIEW,
            CRect(0,0,0,0), this, AFX_IDW_PANE_FIRST, &amp;context))
            {
            TRACE0("Warning: couldn't create view for frame\n");
               return FALSE; // Programmer can assume FALSE return value
                            // from this function means that there
                            // isn't a view.
            }

     // WM_INITIALUPDATE is define in AFXPRIV.H.
     pNewView-&gt;SendMessage(WM_INITIALUPDATE, 0, 0);

     RecalcLayout();

     pNewView-&gt;UpdateWindow();

     SetActiveView(pNewView);

     return TRUE;
   }

</PRE>The function receives a pointer to CRuntimeClass object for the new view
that is desired. It destroys the old view and replaces it with a new view
of the same CDocument. When DestroyWindow() is called for the old view,
this causes a "delete this" in the CView::PostNcDestroy() function. Also,
the CView::~CView destructor calls CView::RemoveView(), which removes the
view from the document's view list.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information, please see the following article in the Microsoft
Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../VISUALC/Q141499.htm">Q141499</A></B>
   TITLE     : SAMPLE: VWRPLC32, Replacing a View in a CMDIChildWnd Window
</PRE> 
<PRE>Keywords          : MfcDocView kbfile kbsample kbhowto
Technology        : kbmfc
Version           : 1.0 1.5 2.0 2.1
Platform          : NT WINDOWS</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 31, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
