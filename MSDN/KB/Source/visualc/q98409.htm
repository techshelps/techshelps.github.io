

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INFO: Using a Structure with an Empty Array Member </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q98409 ">
<META NAME="KBModify" CONTENT="1997/09/30">
<META NAME="KBCreate" CONTENT="1993/05/04">
<META NAME="Keywords" CONTENT="CLIss kbcode">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The information below is derived from the Microsoft C/C++ version 7.0 online help file. To view the topic that corresponds to this article, search for the word  struct  and choose the  Unsized Arrays in Structures  topic.  In the C language, an app...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAVW,QAVX,QAIC,QAGB,QA7O,QA7N,QBFY,QATX,QAOT,QBE7,QBE6,QALG,QAH4,QDIJ,QAEF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INFO: Using a Structure with an Empty Array Member</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 30, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q98409 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>The Microsoft C/C++ Compiler (CL.EXE) included with:
   - Microsoft C/C++ for MS-DOS, version 7.0
   - Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51, 1.52
   - Microsoft Visual C++, 32-bit Edition, versions 1.0, 2.0, 2.1, 4.0,
<P><PRE>     4.1, 5.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The information below is derived from the Microsoft C/C++ version 7.0
online help file. To view the topic that corresponds to this article,
search for the word "struct" and choose the "Unsized Arrays in
Structures" topic.
<P>
In the C language, an application can define structure that contains
an unsized array as one of its fields. However, an application cannot
define an array of structures when the structure contains an unsized
array because the structure declaration does not allocate any memory
for the unsized array.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Background</h3>
 
<P>
The following structure declaration includes an unsized array field:
<P>
<PRE>   struct test
   {
      int x, y, z;
      char empty[];
   }

</PRE>The code example below demonstrates how the compiler processes the
structure declaration. The sizeof macro returns the size of the
structure, but does not include the unsized array. For the structure
sample above, the sizeof macro returns the value of 6 bytes for the
16-bit compiler and 12 bytes for the 32-bit compiler.
<P>
<P><h3>Declaring Structures with Unsized Array Fields</h3>
 
<P>
An application can declare an instance of a structure type that
includes an unsized array field, but the behavior of the compiler is
unpredictable.
<P>
<PRE>   struct test x;

</PRE>In the declaration above, the compiler allocates six bytes for x and
the address of the empty field is set to six bytes beyond the address
of x. This may present a problem because empty is a character array.
If the application interprets empty as a string, the string has no
length and ends only when a null terminating character (zero value)
appears in memory.
<P>
An attempt to create an array of structures (for example, with a
struct text x[10] declaration) fails and the compiler generates the
following messages:
<P>
<PRE>   warning C4001: nonstandard extension
       'zero sized array in struct/union' was used
   error C2087: 'x' : missing subscript

</PRE>An application can initialize an instance of a type that contains an
unsized array field using the following syntax:
<P>
<PRE>   struct test x={1, 2, 3, "Test String");

</PRE>In this example the empty field in x points to the 'T' in "Test
String" and the string is correctly terminated with a null terminating
character after the 'g'.
<P>
An application can declare a pointer to a structure that contains an
unsized array field. The application must allocate memory for to store
the contents of the array. Given the structure declaration above, the
following code declares a pointer to structure and allocates memory to
store an instance of the structure:
<P>
<PRE>   struct test *right;
   right = malloc(sizeof(struct test) + stringlength + 1);

</PRE>The stringlength variable contains the length of the string stored in
the structure and the constant 1 provides space to store the
terminating null character. Even though the application allocates
memory to store the string, the sizeof macro returns the size of the
elements in the structure except for the unsized array element.
<P>
Using this technique, an application can use malloc() to declare an array
of structures that contain unsized array fields; however, the application
must correctly calculate the proper amount of memory to allocate to store
the structures and the strings and it must correctly implement pointers to
access elements of the array. Because the size of the structure does not
include the storage required by the unsized array element, the value
(ptr+1) points to the sixth (or twelfth) byte of the allocated array which
is not necessarily the first field of the second element.
<P>
An attempt to allocate an array of structures produces the C4001 warning
described above. The C2087 error does not occur because the size of the
array is not specified.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   /*
    * Compile options needed: /W4
    */

   #include &lt;stdio.h&gt;

   struct test
   {
      int x, y, z;
      char str[];
   };

   struct test trythis;

   void main(void)
   {
      printf("the size of test is %d bytes\n",sizeof(struct test));
   }

   /* Output */

   /* 16-bit compiler output */

   the size of test is 6 bytes

   /* 32-bit compiler output */

   the size of test is 12 bytes
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 8.00 8.00c<BR>
Keywords          : CLIss kbcode<BR>
Version           : MS-DOS:6.00ax,7.0;WINDOWS:1.51,1.52;WINDOWS NT:1.0,2.0,2.1,4.0,4.1,5.0<BR>
Platform          : MS-DOS NT WINDOWS<BR>
Issue type        : kbinfo<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 30, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
