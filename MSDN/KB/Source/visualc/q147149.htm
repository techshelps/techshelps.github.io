

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Localize Application Resources with Foundation Classes </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q147149">
<META NAME="KBModify" CONTENT="1997/07/31">
<META NAME="KBCreate" CONTENT="1996/02/20">
<META NAME="Keywords" CONTENT="AppStudioIss MfcMisc kbcode kbhowto kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Microsoft Foundation Class Library Technical Note 23 explains how to customize standard framework resources, such as the buttons on a print preview dialog bar. However, this technical note does not provide a good solution for developers who are pro...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAIM,QAJH,QBRM,QAH4,QAY4,QA9N,QAIY,QBHQ,QDNN,QBDM,QAEF,QDL9,QBWQ,QBWO,QBWN V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Localize Application Resources with Foundation Classes</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 31, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q147149</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
<PRE>WINDOWS             | WINDOWS NT
</PRE>1.00 1.50 1.51 1.52 | 1.00 2.00 2.10 2.20
kbprg kbhowto kbcode
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
<P>
<P><PRE>    - Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51, 1.52
    - Microsoft Visual C++, 32-bit Edition, versions 1.0, 2.0, 2.1, 2.2
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Microsoft Foundation Class Library Technical Note 23 explains how to
customize standard framework resources, such as the buttons on a print
preview dialog bar. However, this technical note does not provide a good
solution for developers who are producing an application localized into
more than one language, and there is a problem with the method described.
<P>
When localizing an application for several languages, it is most convenient
to place all of the application's resources into a dynamic link library
(DLL). To localize the application into a new language, clone the DLL and
translate the resources into the appropriate language. After testing, you
can ship the application code with the appropriate language-specific DLL to
address each market.
<P>
The remainder of this article outlines the general steps required to
localize an application by moving the resources into a DLL.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To place all application resources into a DLL project, open the .rc file in
App Studio. Choose Save As from the File menu to store the resources into
another directory (created for this purpose). Then open the original .rc
file, and remove all resources visible in the App Studio Resource Browser.
Finally, choose Set Includes from the App Studio File menu. Delete the
<PRE>#include statements for Afxprint.rc and for Afxres.rc from the Compile-Time
</PRE>Directives list and choose OK.
<P>
Use the Visual Workbench to create a new Windows DLL project for the
resources. Set the project type to Windows dynamic-link library, and clear
the "Use Microsoft Foundation Classes" check box. Add the .rc file to the
project. Then create the following files in your DLL directory, and add
them to the project.
<P>
<P><h3>Mylocal.cpp</h3>
 
<P>
<PRE>#include &lt;windows.h&gt;

int CALLBACK LibMain(HINSTANCE hinst, WORD wDataSeg, WORD cbHeap,
      LPSTR lpszCmdLine )
</PRE>{
<PRE>   return 1;
</PRE>}
<P>
<P><h3>Mylocal.def</h3>
 
<P>
<PRE>LIBRARY      MYLOCAL
</PRE>DESCRIPTION  'Localized resources for MFC application'
<PRE>EXETYPE      WINDOWS

CODE         PRELOAD MOVEABLE DISCARDABLE
DATA         PRELOAD MOVEABLE SINGLE

</PRE>SEGMENTS
<PRE>   WEP_TEXT FIXED PRELOAD

</PRE>EXPORTS
<PRE>   WEP @1 RESIDENTNAME ; required WEP entry point
                       ; (uses library WEP routine)

</PRE>Copy the standard framework resources into the .rc file for your DLL so you
can modify them. Technical Note 23 outlines a procedure to do this. To
copy all resources from Afxprint.rc and Afxres.rc into the .rc file for
your DLL, select the resources in each source file. Then press and hold the
CTRL key and drag the resources into the new .rc file. Edit the Compile-
Time Directives list box in App Studio to remove the #include files.
<P>
There are two problems with this procedure. Perform the following two steps
to work around these problems before compiling your DLL:
<P>
NOTE: In MFC version 2.5 and later, step 1 is no longer necessary.

<OL><P><LI>The AFX_IDC_MAGNIFY cursor, used by print preview, is loaded using
   the AfxGetInstanceHandle() function rather than the
   AfxGetResourceHandle() function. This error occurs on line 904 of
   the Viewprev.cpp file in the Microsoft Foundation Class Library
   source directory (by default, C:\Msvc\Mfc\Src). If you wish, you
   can modify the source code and recompile the libraries. However, a
   reasonable method to work around this problem involves copying the
   AFX_IDC_MAGNIFY resource into your application's .rc file. Only
   this resource would be common to all languages.

<P><LI>The Afxprint.rc file (located by default in the C:\Msvc\Mfc\Include
   directory) declares AFX_IDD_PREVIEW_TOOLBAR, the standard framework
   resource for the print preview CDialogBar, with the following resource
   style:
<P>
<P><PRE>      STYLE WS_CHILD | CBRS_TOP
</PRE><P>
   The problem is that the CBRS_TOP style is specific to the Microsoft
   Foundation Class Library; App Studio does not copy this style when you
   follow the procedure in Technical Note 23. Use a text editor to open the
   .rc file as a text file. (Note that you may need to change an option in
   the Editor Options dialog box in Visual Workbench.) Add the vertical bar
   (the OR symbol) and CBRS_TOP to the STYLE statement. Otherwise, the
   print preview dialog bar does not appear.
<P>
</OL>AppWizard creates the .rc2 file in the DLL Res directory to contain version
information for the application. Edit this information as appropriate for
your DLL.
<P>
Build the DLL project and copy it into your application's directory.
<P>
To use the localized resources in the DLL from your application, add the
following code to your application and rebuild it:

<OL><P><LI>Modify the main application class (for example, CMyApp) to add an
   HINSTANCE member variable to contain the DLL instance handle, as
   follows:
<P>
   HINSTANCE m_hInstDLL;

<P><LI>In CMyApp::InitInstance(), insert the following code before the first
   line of code generated by ClassWizard:
<P>
   if ((m_hInstDLL = ::LoadLibrary("mylocal.dll")) &lt; HINSTANCE_ERROR)
   {
<P><PRE>      return FALSE; // failed to load the localized resources
</PRE>   }
   else
   {
<P><PRE>      AfxSetResourceHandle(m_hInstDLL); // get resources from the DLL
</PRE>   }

<P><LI>Modify the CMyApp::ExitInstance() function to free the library before
   the application exits. Modify the function as follows:
<P>
<PRE>   int CMyApp::ExitInstance()
   {
      FreeLibrary(m_hInstDLL);
      return CWinApp::ExitInstance();
   }

</PRE></OL>Once you establish that the application works as expected, you can use App
Studio to translate the resources in the DLL project and make additional
copies of the project to localize for other languages.
<P>
For more information on this procedure, see the Microsoft Foundation Class
Library Technical Notes. The Visual C++ 1.0 for Windows setup program
creates an MFC Tech Notes icon in the Visual C++ 1.0 group.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 1.50 2.00 2.50 2.51 2.52 2.10 2.20<BR>
KBCategory: kbprg kbhowto kbcode<BR>
KBSubcategory: AppStudioIss MfcMisc<BR>
Keywords          : AppStudioIss MfcMisc kbcode kbhowto kbprg<BR>
Technology        : kbMfc<BR>
Version           : 1.00 1.50 1.51 1.52 2.00 2.10 2.<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 31, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
