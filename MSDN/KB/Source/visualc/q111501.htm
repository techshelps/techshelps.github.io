

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Debugger/CodeView Appear Not to Break on Correct Line </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q111501">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1994/02/14">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  When setting a breakpoint (using the  Break When Expression Has Changed  option) where a variable in the expression is modified by the increment (++) or decrement (--) operator, CodeView and the Visual Workbench debugger may not appear to stop on t...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAYL,QBE7,QBE6,QAB9,QBXT,QBWI,QA5V,QASR,QAIB,QAR4,QAPN,QBVV,QA56,QA55,QAGB V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Debugger/CodeView Appear Not to Break on Correct Line</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q111501</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
4.00 4.01 4.10 | 1.00 1.50 1.51 1.52 4.00 4.01 4.10
<PRE>MS-DOS         | WINDOWS
</PRE>kbtool kbprb
<P>
 
The information in this article applies to:

<UL><LI>The Visual Workbench Integrated Debugger included with:
<P>
<P><PRE>    - Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51, and 1.52
    - Microsoft CodeView for MS-DOS, versions 4.0, 4.01, and 4.1
    - Microsoft CodeView for Windows, versions 4.0, 4.01, and 4.1
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When setting a breakpoint (using the "Break When Expression Has Changed"
option) where a variable in the expression is modified by the increment
(++) or decrement (--) operator, CodeView and the Visual Workbench debugger
may not appear to stop on the correct source line.
<P>
<P><h2>CAUSE</h2>
 
<P>
The debugger will stop after the assembly language instruction that first
modifies the variable. In a situation where multiple assembly language
instructions are necessary to implement the C language source line, the
debugger will stop on that source line, because the line has not executed
to completion.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
This is the expected behavior for the 16-bit debuggers. Using Mixed
Source/Assembly mode will reveal the fact that the C language statements
x++ and x-- each require two assembly language statements. CodeView and the
Visual Workbench debugger both step, and therefore break at the assembly
language level and stop after the first assembly statement involved in the
increment of the variable x.
<P>
NOTE: This does not occur with the 32-bit debugger.
<P>
The sample program below demonstrates the situation. When "Break When
Expression Has Changed" is set on the variable x, the debugger will stop on
the statement x++ instead of the following line. This is because the
variable x is a long, and the C language statement x++ needs two assembly
statements to be implemented.
<P>
To reproduce this problem using CodeView for Windows or the Visual
Workbench debugger, this sample should be compiled and linked as a QuickWin
application.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>/* Compile options needed: /Od /Zi
</PRE>**
** The CodeView command window command to set a
** breakpoint when the variable x has changed is:
**
**    bp=x
<PRE>*/

</PRE>long x;
<P>
<PRE>void main()
</PRE>{
<PRE>   x++;
</PRE>}
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 1.50 4.00 4.10<BR>
KBCategory: kbtool kbprb<BR>
KBSubcategory: WBDebug CvwIss<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
