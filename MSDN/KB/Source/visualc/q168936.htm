

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: Virtual Base Class Destructor Called More than Once </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q168936">
<META NAME="KBModify" CONTENT="1997/07/31">
<META NAME="KBCreate" CONTENT="1997/05/22">
<META NAME="Keywords" CONTENT="CPPIss vcbuglist500 kbtool">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  If an exception is thrown from the constructor of a class that is derived from a virtual base class, the destructor for the virtual base class is called more than once. This doesn't happen if the exception is thrown from any other member function. ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBJQ,QABA,QA2O,QBFY,QABO,QAGI,QDH9,QA0K,QAY2,QASP,QBAC,QALZ,QDIX,QA6A,QA5A V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: Virtual Base Class Destructor Called More than Once</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 31, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q168936</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The C/C++ Compiler (CL.EXE) included with:
   - Microsoft Visual C++, 32-bit Editions, versions 4.0, 4.1, 4.2, 5.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
If an exception is thrown from the constructor of a class that is derived
from a virtual base class, the destructor for the virtual base class is
called more than once. This doesn't happen if the exception is thrown from
any other member function.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
There is no workaround. Avoid throwing exceptions from the constructor. Use
the two-phased construction documented in the following article in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../VISUALC/Q132893.htm">Q132893</A></B>
   TITLE     : PRB: Exceptions Thrown During Construction Can Orphan Memory

</PRE><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. We are researching this bug and will post
new information here in the Microsoft Knowledge Base as it becomes
available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 
<P>
<PRE>   //compiler options needed  /GX

    #include &lt;iostream.h&gt;
    class A
    {
      public:
            A() { cout &lt;&lt; "In A-ctor" &lt;&lt; endl;}
            ~A(){ cout &lt;&lt; "In A-dtor" &lt;&lt; endl;}
    };

    class B1 : public  virtual   A
    {
      public:
              B1() { cout &lt;&lt; "In B1-ctor" &lt;&lt; endl;}
            ~B1(){ cout &lt;&lt; "In B1-dtor" &lt;&lt; endl;}
    };

    class B2 : public  virtual  A
    {
      public:
              B2() { cout &lt;&lt; "In B2-ctor" &lt;&lt; endl;}
            ~B2(){ cout &lt;&lt; "In B2-dtor" &lt;&lt; endl;}
    };

    class C : public B1 ,public B2
    {
      public:
          C(){
         cout &lt;&lt; "In C-ctor...throw Exception" &lt;&lt; endl;
         throw int(1); //incorrect destructor calls...
             }

          ~C(){ cout &lt;&lt; "In C-dtor" &lt;&lt; endl;}
    };

    void main()
    {
      try
       {
         C c;

       }
      catch (int ex)
       {
         cout &lt;&lt; "Caught Exception #" &lt;&lt; ex &lt;&lt; endl;
         }
    }

    Program Output is :
    In A-ctor
    In B1-ctor
    In B2-ctor
    In C-ctor...throw Exception
    In B2-dtor
    In A-dtor
    In B1-dtor
    In A-dtor
    In A-dtor
    Caught Exception #1


    The Expected Output is:
    In A-ctor
    In B1-ctor
    In B2-ctor
    In C-ctor...throw Exception
    In B2-dtor
    In B1-dtor
    In A-dtor
    Caught Exception #1
</PRE> 
<PRE>Keywords          : CPPIss vcbuglist500 kbtool
Version           : 4.0 4.1 4.2 5.0
Platform          : NT WINDOWS
Issue type        : kbbug</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 31, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
