

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: pvarResult Should Be NULL When vtRet==VT_EMPTY </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q121218">
<META NAME="KBModify" CONTENT="1997/09/18">
<META NAME="KBCreate" CONTENT="1994/09/28">
<META NAME="Keywords" CONTENT="MfcOLE kbbuglist kbfixlist kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  A call to COleDispatchDriver::InvokeHelper causes the server to generate an error when the return type is VT_EMPTY. The nature of the error depends on the automation server. For example, the Word.Basic automation server causes the following error o...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGI,QAUD,QAY5,QAAP,QBV8,QAB9,QDKW,QAY2,QAR4,QAB4,QAIF,QBFY,QA56,QA55,QAM7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: pvarResult Should Be NULL When vtRet==VT_EMPTY</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q121218</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.50 1.51 | 2.00
<PRE>WINDOWS   | WINDOWS NT
</PRE>kbprg kbfixlist kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Foundation Classes included with:
<P>
<P><PRE>    - Microsoft Visual C++ for Windows, versions 1.5 and 1.51
    - Microsoft Visual C++, 32-bit Edition, version 2.0
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
A call to COleDispatchDriver::InvokeHelper causes the server to generate an
error when the return type is VT_EMPTY. The nature of the error depends on
the automation server. For example, the Word.Basic automation server causes
the following error on some methods that have a return type of void (_DEBUG
build):
<P>
<PRE>   Assertion Failed Line 315, OLEDISP2.CPP

</PRE>By using the debugger to examine the excepInfo structure, you'll see that
the btrDescription member contains this message:
<P>
<PRE>   Non Function called as function.

</PRE><h2>CAUSE</h2>
 
<P>
The OLE version 2.0 documentation indicates that in a call to IDispatch-
&gt;Invoke the pvarResult parameter should be NULL if the caller does not
expect a return value. However the MFC implementation always passes a non-
NULL pointer to an empty variant structure. In most cases an automation
server will simply ignore pvarResult when it doesn't intend to return a
value. But some servers will actually perform error checking on this
parameter and will generate an error if it is non-NULL.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To work around this problem, derive your own class from COleDispatchDriver,
such as CMyOleDispatchDriver, and create your own InvokeHelperVoid
function. Then call your own InvokeHelperVoid function instead of
InvokeHelper when you need to call a method that has no return value.
<P>
To implement this work around, create two new functions in your
COleDispatchDriver derived class:
<P>
<PRE>   CMyOleDispatchDriver::InvokeHelperVVoid
   CMyOleDispatchDriver::InvokeHelperVoid

</PRE>Implement these functions by copying the implementations of InvokeHelperV
and InvokeHelper from OLEDISP2.CPP.
<P>
Then modify the following line in InvokeHelperVoid from:
<P>
<PRE>   InvokeHelperV(dwDispID, wFlags, vtRet, pvRet, pbParamInfo,
     argList);

</PRE>to:
<P>
<PRE>   InvokeHelperVVoid(dwDispID, wFlags, vtRet, pvRet, pbParamInfo,
     argList);

</PRE>Then modify the following lines in InvokeHelperVVoid from:
<P>
<PRE>   HRESULT hr = m_lpDispatch-&gt;Invoke(dwDispID, IID_NULL, 0, wFlags,
      &amp;dispparams, &amp;vaResult, &amp;excepInfo, &amp;nArgErr);

</PRE>to:
<P>
<PRE>   HRESULT hr = m_lpDispatch-&gt;Invoke(dwDispID, IID_NULL, 0, wFlags,
            &amp;dispparams, NULL, &amp;excepInfo, &amp;nArgErr);

</PRE>On some servers, you may also need to re-implement the
COleDispatchDriver::SetProperty function and replace it with your own
SetPropertyVoid function by copying the implementation from OLEDISP2.CPP.
Just as for the InvokeHelper function, you will need to change it to call
InvokeHelperVVoid instead of InvokeHelperV.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the products listed at the
beginning of this article. This bug was corrected in Visual C++ 1.52 and
Visual C++ 2.1.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.50 2.00 2.50 2.51 3.00<BR>
KBCategory: kbprg kbfixlist kbbuglist<BR>
KBSubcategory: MfcOLE
<P>

Keywords          : MfcOLE kbbuglist kbfixlist kbprg<BR>
Technology        : kbMfc<BR>
Version           : 1.50 1.51 | 2.00<BR>
Platform          : NT WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
