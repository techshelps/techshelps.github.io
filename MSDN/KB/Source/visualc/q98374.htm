

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using C Run-Time WEP() in MFC 2.0 or 2.5 _USRDLL Library </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q98374 ">
<META NAME="KBModify" CONTENT="1997/07/17">
<META NAME="KBCreate" CONTENT="1993/05/04">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT=" In a dynamic-link library (DLL) built with Microsoft Foundation Class Library version 2.0 or 2.5, the _USRDLL model uses the WEP() (Windows exit procedure) function provided in the C run-time library. Because the code uses the C library WEP() functi...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBHQ,QAGI,QAY5,QBFY,QAB9,QBV8,QAH4,QDNN,QA3P,QAPN,QAIF,QDL9,QBWQ,QBWO,QBWN V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Using C Run-Time WEP() in MFC 2.0 or 2.5 _USRDLL Library</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 17, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q98374 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00 1.50
WINDOWS
kbprg
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC), included with:
<P><PRE>    - Microsoft Visual C++ for Windows, versions 1.0 and 1.5
</UL></PRE> 
<P>
In a dynamic-link library (DLL) built with Microsoft Foundation Class
Library version 2.0 or 2.5, the _USRDLL model uses the WEP() (Windows exit
procedure) function provided in the C run-time library. Because the code
uses the C library WEP() function, the destructors for static and global
objects in the DLL are called and the CWinApp::ExitInstance() function for
the DLL application object is called.
<P>
To use the WEP() function in the C run-time library, the DLL must export
WEP in its module definition (.DEF) file. To do so, add the following
statement to the .DEF file:
<P>
<PRE>   EXPORTS
      WEP  @1 RESIDENTNAME

</PRE>While the ordinal number you choose is not important, you must specify the
RESIDENTNAME attribute when you export WEP(). Do not include a WEP()
function in the DLL code. If you do, Windows calls that function instead of
the C library WEP() and the destructors for global objects and static
objects, and CWinApp::ExitInstance() are not called.
<P>
If you DLL must contain clean-up code, overload the ExitInstance()
function. If your DLL uses an import library to link to another DLL
developed with the Microsoft Foundation Class Library, be sure to list the
Microsoft Foundation Class Library and the C run-time library before the
import library for the other DLL. This step ensures that the linker
includes the WEP() in the C run-time library instead of linking in a
reference to the WEP() in the other DLL.
<P>
The instructions above describe building a _USRDLL that unloads itself and
cleans up properly. The text below describes the process that occurs when a
DLL cleans up.
<P>
When Windows unloads the DLL, it calls the WEP() function in the DLL,
which, using the procedure above, is the WEP() function in the C run- time
library. WEP() calls the _WEP() function implemented in the Microsoft
Foundation Class Library. The _WEP() function calls
CWinApp::ExitInstance(). When ExitInstance() and _WEP() return, the WEP
function calls the destructors for any static or global objects in the DLL.
<P>
For more information about using the C run-time library WEP() function in
an _USRDLL, please refer to Technical Note 11: "Using MFC as Part of a DLL"
in the MFC Tech Notes help file distributed with Visual C++ version 1.0.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 1.00 1.50 2.00 2.50 destructer<BR>
destructers<BR>
KBCategory: kbprg kbfasttip<BR>
KBSubcategory: MfcDLL<BR>
Keywords            : kb16bitonly<BR>
Technology          : kbMfc<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 17, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
