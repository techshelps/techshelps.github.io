

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INFO: Sorting Structures with the C qsort() Function </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q73853 ">
<META NAME="KBModify" CONTENT="1997/09/04">
<META NAME="KBCreate" CONTENT="1991/07/09">
<META NAME="Keywords" CONTENT="CRTIss kbcode kbfasttip">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The Microsoft C and QuickC run-time library function qsort() is useful for sorting data; however, it is necessary to provide qsort() a compare function for the type of data being sorted. This sometimes causes confusion when that type is a structure...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBFY,QAEG,QASA,QAKC,QAUD,QBC6,QAY5,QANY,QA4Q,QAG7,QAG8,QBV8,QAB6,QAB9,QBWP V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INFO: Sorting Structures with the C qsort() Function</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 4, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q73853 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>The C Run-time (CRT) included with:
   - Microsoft C for MS-DOS, versions 5.1, 6.0, 6.0a, 6.0ax
   - Microsoft C for OS/2, versions 5.1, 6.0, 6.0a
   - Microsoft C/C++ for MS-DOS, version 7.0
   - Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51, 1.52
   - Microsoft Visual C++, 32-bit Edition, versions 1.0, 2.0, 2.1, 4.0, 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The Microsoft C and QuickC run-time library function qsort() is useful for
sorting data; however, it is necessary to provide qsort() a compare
function for the type of data being sorted. This sometimes causes confusion
when that type is a structure. The sample program below illustrates how to
use qsort() to sort an array of structures.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
In the sample code, the animal structure contains both an integer, which is
the key to be sorted on, and an array of char that contains the animal's
name. The compare() function receives two pointers to type struct animal
and returns -1, 1, or 0 (zero) if the first element is less than, greater
than, or equal to the first element, respectively.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   /* Compile options needed: none
    *
    * This example program uses the C run-time library function qsort()
    * to sort an array of structures.
    */

   #include &lt;stdio.h&gt;
   #include &lt;stdlib.h&gt;

   typedef int (*compfn)(const void*, const void*);

   struct animal { int  number;
                   char name[15];
                 };

   struct animal array[10]  = { {  1, "Anaconda"    },
                                {  5, "Elephant"    },
                                {  8, "Hummingbird" },
                                {  4, "Dalmatian"   },
                                {  3, "Canary"      },
                                {  9, "Llama"       },
                                {  2, "Buffalo"     },
                                {  6, "Flatfish"    },
                                { 10, "Zebra"       },
                                {  7, "Giraffe"     }  };

   void printarray(void);
   int  compare(struct animal *, struct animal *);

   void main(void)
   {
      printf("List before sorting:\n");
      printarray();

      qsort((void *) &amp;array,              // Beginning address of array
      10,                                 // Number of elements in array
      sizeof(struct animal),              // Size of each element
      (compfn)compare );                  // Pointer to compare function

      printf("\nList after sorting:\n");
      printarray();
   }

   int compare(struct animal *elem1, struct animal *elem2)
   {
      if ( elem1-&gt;number &lt; elem2-&gt;number)
         return -1;

      else if (elem1-&gt;number &gt; elem2-&gt;number)
         return 1;

      else
         return 0;
   }

   void printarray(void)
   {
      int i;

      for (i = 0; i &lt; 10; i++)
         printf("%d:  Number %d is a %s\n",
                  i+1, array[i].number, array[i].name);
   }
</PRE> 
<PRE>Keywords          : CRTIss kbcode kbfasttip
Version           : MS-DOS:5.1,6.0,6.00a,6.00ax,7.0 WINDOWS:1.0,1.5,1.51,1.52;  WINDOWS NT:1.0,2.0,2.1,4.0,5.0
Platform          : MS-DOS NT WINDOWS
Issue type        : kbinfo</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 4, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
