

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ControlWizard Generates Both 16-bit and 32-bit Projects </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q125242">
<META NAME="KBModify" CONTENT="1995/10/12">
<META NAME="KBCreate" CONTENT="1995/01/23">
<META NAME="Keywords" CONTENT="kbole kbprg kbtool">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The ControlWizard included with the Microsoft OLE Control Development Kit (CDK) generates both 16-bit and 32-bit projects. In most cases, you can develop your control on either a 16-bit or 32-bit platform, and then rebuild the control on the other ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAJN,QAB5,QA7O,QAOE,QAMN,QAH4,QABA,QAUJ,QAPF,QAG0,QAHE,QA2O,QAUD,QAMJ,QAHT V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ControlWizard Generates Both 16-bit and 32-bit Projects</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 12, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q125242</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft OLE Control Development Kit (CDK), version 1.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The ControlWizard included with the Microsoft OLE Control Development
Kit (CDK) generates both 16-bit and 32-bit projects. In most cases,
you can develop your control on either a 16-bit or 32-bit platform,
and then rebuild the control on the other platform.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
When ControlWizard is used to create an OLE control, two projects are
generated. The full project name you specify is used as the base name
for the 16-bit MAK file and other files used by the 16-bit IDE. The
first six letters of the project name followed by "32" are used to
create a base name for the 32-bit MAK and DEF files and other files
used by the 32-bit IDE.
<P>
For example, if the full project name is TESTCTRL, these two MAK files
are generated:
<P>
<PRE>   TESTCTRL.MAK -- 16-bit Project File
   TESTCT32.MAK -- 32-bit Project File

</PRE>ControlWizard also generates a 'makefile' file that NMAKE can use to
generate either a 16- or 32-bit project by specifying the WIN32 flag
on the command line. For example:
<P>
<PRE>nmake WIN32=1       // 32 bit version
nmake WIN32=0       // 16 bit version

</PRE>Within the generated source files, place platform-dependent code in
conditional compilation blocks, as shown in this example:
<P>
<PRE>   LRESULT CTestCtrl::OnOcmCommand(WPARAM wParam, LPARAM lParam)
   {
   #ifdef _WIN32
      WORD wNotifyCode = HIWORD(wParam);
   #else
      WORD wNotifyCode = HIWORD(lParam);
   #endif

      // TODO: Switch on wNotifyCode here.

      return 0;
   }

</PRE>To maintain platform independence, use conditional compilation blocks
to isolate platform dependencies in the code you add to your control.
Use the #error statement to flag features that are not implemented
for one platform or the other. For example, you might code the previous
example like the following if the 32-bit implementation was not complete:
<P>
<PRE>   LRESULT CTestCtrl::OnOcmCommand(WPARAM wParam, LPARAM lParam)
   {
   #ifdef _WIN32
      #error OnOcmCommand parameter decoding not completed for Win32!
   #else
      WORD wNotifyCode = HIWORD(lParam);
   #endif

      // TODO: Switch on wNotifyCode here.

      return 0;
   }

</PRE>Note that because separate project files are used for 16- and 32-bit
targets, all project maintenance will need to be performed for both
projects. Project maintenance activities include:

<UL><LI>Adding or removing project files.

<LI>Changing compiler settings.

<LI>Changing linker settings, including input libraries.
<P></UL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 1.00 2.00<BR>
KBCategory: kbole kbprg kbtool<BR>
KBSubcategory: CDKIss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 12, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
