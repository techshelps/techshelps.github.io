

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: L2025 with a CWinApp-Derived Class in an Extension DLL </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q117564">
<META NAME="KBModify" CONTENT="1997/07/18">
<META NAME="KBCreate" CONTENT="1994/06/30">
<META NAME="Keywords" CONTENT="kb16bitonly MfcDLL kbprb kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  It can be useful to define and export (not necessarily instantiate) a CWinApp-derived class within an MFC-extension DLL (_AFXDLL defined). However, the linker generates the following:     d:\msvc\mfc\lib\mfc250d.lib(dumpout.cpp) : error L2025: _Afx...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBJQ,QAB4,QAAP,QBAC,QA4Q,QANY,QAKM,QABO,QAKP,QAX6,QBFY,QAY5 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: L2025 with a CWinApp-Derived Class in an Extension DLL</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q117564</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
7.00   | 1.00 1.50
MS-DOS | WINDOWS
kbprg kbprb
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC), included with:
<P>
<P><PRE>    - Microsoft C/C++ version 7.0
    - Microsoft Visual C++ for Windows, versions 1.0 and 1.5
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
It can be useful to define and export (not necessarily instantiate) a
CWinApp-derived class within an MFC-extension DLL (_AFXDLL defined).
However, the linker generates the following:
<P>
<PRE>   d:\msvc\mfc\lib\mfc250d.lib(dumpout.cpp) : error L2025: _AfxTrace :
       symbol defined more than once
   d:\msvc\mfc\lib\mfc250d.lib(afxmem.cpp) : error L2025: void __far* __far
       __cdecl operator new(unsigned int) : symbol defined more than once
   d:\msvc\mfc\lib\mfc250d.lib(afxmem.cpp) : error L2025: void __far* __far
       __cdecl operator new(unsigned int,char const __far*,int) : symbol
       defined more than once
   d:\msvc\mfc\lib\mfc250d.lib(afxmem.cpp) : error L2025: void __far
       __cdecl operator delete(void __far*) : symbol defined more than
       once
   d:\msvc\mfc\lib\mfc250d.lib(afxmem.cpp) : error L2025: public: static
       void __far* __far __cdecl CObject::operator new(unsigned int) :
       symbol defined more than once
   d:\msvc\mfc\lib\mfc250d.lib(afxmem.cpp) : error L2025: public: static
       void __far* __far __cdecl CObject::operator new(unsigned int,char
       const __far*,int) : symbol defined more than once
   d:\msvc\mfc\lib\mfc250d.lib(afxmem.cpp) : error L2025: public: static
       void __far __cdecl CObject::operator delete(void __far*) : symbol
       defined more than once
   d:\msvc\lib\ldllcew.lib(fmalloc.asm) : error L2025: __fmalloc : symbol
       defined more than once
   d:\msvc\lib\ldllcew.lib(fmalloc.asm) : error L2025: __ffree : symbol
       defined more than once

</PRE><h2>CAUSE</h2>
 
<P>
The CWinApp::_ForceLinkage member function of the CWinApp class forces the
routines mentioned in the error messages to be linked in from the file
DLLINIT.CPP. This member function is used only by the MFC libraries. Having
these routines defined in DLLINIT.CPP as well as in the class libraries
causes the error message "symbol defined more than once".
<P>
The _fmalloc, _free, new, and delete errors can also be caused by a call
to AfxCheckMemory() in a MFC extention DLL. This problem can occur with
or without a CWinApp derived class.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To work around the problem, override CWinApp::_ForceLinkage(). The function
should do nothing, but it prevents the base class function from linking in
the DLLINIT.CPP file.
<P>
This is not a problem with Visual C++ 32-bit Edition, because there is no
CWinApp::_ForceLinkage. Calling AfxCheckMemory() is also safe from a 32-bit
extension DLL.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following sample code is an example of a CWinApp-derived class that
might be included in an _AFXDLL DLL with a _ForceLinkage() member
declaration:
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>/* Compile options needed: /D_AFXDLL
*/

   class CMyApp: public CWinApp
   {
    ...
        void _ForceLinkage()
        {
        #ifndef _WINDLL
          CWinApp::_ForceLinkage();
        #endif
        }
    ...
   };
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 7.00 1.00 1.50 2.00 2.50<BR>
KBCategory: kbprg kbprb<BR>
KBSubcategory: MfcDLL<BR>
Keywords            : kb16bitonly MfcDLL kbprb kbprg<BR>
Technology          : kbMfc<BR>
Version             : 7.00   | 1.00 1.50<BR>
Platform            : MS-DOS WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
