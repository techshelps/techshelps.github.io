

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INFO: Memory Management Via Malloc() </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q90531 ">
<META NAME="KBModify" CONTENT="1997/09/30">
<META NAME="KBCreate" CONTENT="1992/10/18">
<META NAME="Keywords" CONTENT="CRTIss">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  In the C Run-time (CRT) libraries which are included with the Win32 SDK (LIBC.LIB, LIBCMT.LIB, and CRTDLL.LIB), malloc() and its related functions map directly to the system Heap APIs. They don't do the sub-allocation that they do under MS-DOS/Wind...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAHC,QAA8,QAJQ,QBWP,QBFY,QBQU,QABI,QBW6,QBVV,QAH5,QAGU,QAYY,QAGI,QA6G,QAX6 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INFO: Memory Management Via Malloc()</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 30, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q90531 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>The C Run-time (CRT) included with:
   - Microsoft Visual C++ 32-bit Edition, versions 1.0, 2.0, 2.1, 4.0, 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In the C Run-time (CRT) libraries which are included with the Win32 SDK
(LIBC.LIB, LIBCMT.LIB, and CRTDLL.LIB), malloc() and its related functions
map directly to the system Heap APIs. They don't do the sub-allocation that
they do under MS-DOS/Windows. In many ways, using the C Run-time under
Windows NT is the same as using the Win32 API, because the CRT routines
often call the equivalent Win32 API directly.
<P>
In the CRT libraries that are included with Microsoft Visual C++ 32-bit
Edition (LIBC.LIB, LIBCMT.LIB, and MSVCRT.LIB), malloc() does use a heap
allocation scheme which is similar to but more complicated than the 16-bit
heaps were. The 4-bytes that precede the heap entry point to internal data
structures. You should not rely on this information, since we may want to
make changes in the future in order to provide a faster heap.
<P>
The information in the remainder of this article applies only to the Win32
SDK CRT.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The C Run-time heap manager searches for the first available block of
memory that is large enough to satisfy the request. When more memory is
needed, the heap manager will grow the heap. When a block of memory is
freed, the manager checks the previous and following block to see whether
either or both can be combined with the newly freed block to form a
contiguous free block. In either case, freed memory is re-used if possible.
<P>
Internal CRT information such as block size and status (used or free) is
kept in a header in the bytes preceding the block, not in a separate
location, such as a table. You should not rely on this information, since
it may change in future versions of the CRT.
<P>
Problems occur if you corrupt the header information of a block by writing
beyond the previous allocated block. When the block with the corrupted
header is freed, the heap manager will consider the memory that the header
happens to point to as the next block when it attempts to combine adjacent
free blocks. The system will crash with an exception in RtlExAllocateHeap()
upon the next malloc or free involving this memory.
<P>
The blocks are contiguous, so overwriting one block when writing to a
different block is not considered writing outside the program's memory
space. The C Run-time heap manager doesn't make sure that writes do not
extend beyond the end of an allocated block. This would be too great of a
speed penalty, considering how often the heap is used.
<P>
In order to debug heap problems, use the heap diagnostic functions.
<P>
Note that the same problem can occur with APIs such as LocalAlloc() and
GlobalAlloc().
 
<PRE>Keywords          : CRTIss
Version           : WINDOWS NT:1.0,2.0,2.1,4.0,5.0;
Platform          : NT WINDOWS
Issue type        : kbinfo</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 30, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
