

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: Invalid Extraction from istrstream Does Not Set failbit </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q119393">
<META NAME="KBModify" CONTENT="1997/07/24">
<META NAME="KBCreate" CONTENT="1994/08/15">
<META NAME="Keywords" CONTENT="CPPLngIss vcbuglist400 vcbuglist500">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  If you extract an integer of an invalid octal value from istrstream, 0 is extracted and the ios::failbit is not set. In addition, the ios::fail() function returns FALSE, incorrectly indicating that the istrstream is valid.  RESOLUTION  Use the mani...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBXS,QANY,QAKC,QBVV,QBFY,QATX,QAR4,QAKP,QAI4,QBC6,QA4Q,QA3P,QAY2,QALZ,QA2O V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: Invalid Extraction from istrstream Does Not Set failbit</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 24, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q119393</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft C/C++ for MS-DOS, version 7.0
<LI>Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51, 1.52
<LI>Microsoft Visual C++ 32-bit Edition, versions 1.0, 2.0, 2.1, 4.0, 4.1,
   4.2, 5.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
If you extract an integer of an invalid octal value from istrstream,
0 is extracted and the ios::failbit is not set. In addition, the
ios::fail() function returns FALSE, incorrectly indicating that the
istrstream is valid.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Use the manipulators (dec, hex, oct, binary, text) explicitly to set
the correct conversion base for the characters represented by the
stream.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug with the Microsoft products
listed at the beginning of this article. We are researching this
problem and will post new information here in the Microsoft Knowledge
Base as it becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
A scenario that produces an unexpected result, and which may also
reflect this problem, involves using the string "08" to initialize
the buffer used by the istrstream (or any string where the first
character is 0 and one of the following characters is greater than 7).
<P>
This string causes the istrstream extraction operator to load the int
with 0 instead of the expected value. This is because when 0 is the
leading character in a number and it is not followed by an x or X,
the number is treated as an octal number. Therefore, only the
characters 0 through 7 after the leading 0 are valid.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   /* Compile options needed: none
   */

   #include &lt;strstrea.h&gt;

   void main()
   {
      char buffer[10] = "08";
      int i;
      istrstream* str;

      str = new istrstream( buffer, 10 );

      // The following extraction is made with the expectation that
      // the i will be set to 8. However, it will be set to 0.
      *str &gt;&gt; i;

      // To fix this, change the line to:
      // *str &gt;&gt; dec &gt;&gt; i;

      cout &lt;&lt; "i = " &lt;&lt; i &lt;&lt; endl;
      cout &lt;&lt; "str-&gt;fail()=" &lt;&lt; str-&gt;fail() &lt;&lt; endl;
      delete str;
   }
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 8.00 8.00c 9.00 9.10<BR>
Keywords            : CPPLngIss vcbuglist400 vcbuglist500<BR>
Version             : 7.0 1.0 1.5 1.51 1.52 2.0 2.1<BR>
Platform            : MS-DOS NT WINDOWS<BR>
Issue type          : kbbug<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 24, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
