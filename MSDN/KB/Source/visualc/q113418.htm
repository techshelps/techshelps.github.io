

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Determine Whether a Drive Is a RAM Drive </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q113418">
<META NAME="KBModify" CONTENT="1997/10/03">
<META NAME="KBCreate" CONTENT="1994/04/04">
<META NAME="Keywords" CONTENT="CLngIss">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  There are no C language functions or C run-time functions to determine whether or not a drive is a RAM drive. The GetFileType() API may be called by Win32 applications to obtain the type of a particular drive from the operating system. More informa...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAMB,QAC9,QAY5,QAPN,QAC2,QBW6,QBVV,QABH,QABI,QBFY,QBV8,QAB9,QA7T,QAEF,QADK V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Determine Whether a Drive Is a RAM Drive</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 3, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q113418</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Microsoft C for MS-DOS, versions 6.0, 6.0a, 6.0ax
<LI>Microsoft C/C++ for MS-DOS, version 7.0
<LI>Microsoft Visual C++ for Windows, versions 1.0, 1.5
<LI>Microsoft Visual C++ 32-bit Edition, versions 1.0, 2.0, 2.1, 4.0, 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
There are no C language functions or C run-time functions to determine
whether or not a drive is a RAM drive. The GetFileType() API may be called
by Win32 applications to obtain the type of a particular drive from the
operating system. More information may be found about GetFileType() in the
Win32 SDK Reference of the Visual C++ 32-bit Edition Books Online.
<P>
For MS-DOS and Win16 applications, although there are no definitive methods
available, several possible ways exist to determine that a given drive is
"probably" a RAM drive. The remainder of this article will briefly discuss
each of four methods to check for a RAM drive. Note that for all methods
each drive of the host system must be checked.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Method 1</h3>
 
<P>
Check the drive's volume label. This method is probably the most common.
The Microsoft RAMDRIVE.SYS uses a volume label of "MS-RAMDRIVE". However,
this is not guaranteed to be the volume label and will probably not be the
volume label on RAM drives from other companies. A user may also change
this by using the label command.
<P>
For additional information on finding the disk volume, please see the
following article(s) in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../VISUALC/Q58800.htm">Q58800</A></B>
   TITLE     : Using _dos_findfirst() Function to Retrieve Disk Volume

</PRE><h3>Method 2</h3>
 
<P>
Call Interrupt 21h Function 44h subfunction 0Dh, which is a generic I/O
control function for block devices. Most devices support this function.
However, RAMDRIVE.SYS currently does not support it. This lack of support
can be used to identify a RAM drive. Load the CX register with 0860h to get
disk drive device parameters; if the function fails, leaving the carry flag
set, the drive is probably a RAM drive.
<P>
<P><h3>Method 3</h3>
 
<P>
Check how many FAT tables the drive has; if it has only 1, it is probably a
RAM drive. Because RAMDRIVE.SYS does not support the IOCTL functions, the
only way to determine the number of FAT tables is to use INT 25, Absolute
Disk Read. Make note of the warnings that this function has been superseded
and is not supported under Windows. For more information and a sample
showing how to use INT 25, please see the following article(s) in the
Microsoft Knowledge Base:
<P>
ARTICLE-ID: <B><A HREF="../WIN16SDK/Q102870.htm">Q102870</A></B>
<PRE>TITLE     : SAMPLE: Reading the Boot Sector of a Drive

</PRE><h3>Method 4</h3>
 
<P>
Finally, call Interrupt 21h Function 44h subfunction 09h to check whether
the drive is remote. If the value returned in DX is 0x0800, having only bit
11 set, the drive is probably a RAM drive. This is known to be a RAM drive
by deduction. Because bits 6 and 7 are clear, it is known that this device
does not accept IOCTL functions, like most devices. Because bit 12 is
clear, this is not a network drive, and so on.
<P>
Because none of the above methods is guaranteed, it is best to use a
combination of these methods. First eliminate the obvious, such as network
drives, local hard drives, CD-ROM drives, and so forth. Then try to
determine whether or not the given drive is a RAM drive.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: detect find<BR>
Keywords          : CLngIss<BR>
Version           : MS- DOS:6.0,6.00a,6.00ax,7.0;WIN3X:1.0,1.5;WINNT:1.0,2.0,2.1,4.0,5.0;<BR>
Platform          : MS-DOS NT WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 3, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
