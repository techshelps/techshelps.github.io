

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: getch() Returns Incorrect Extended Key Codes </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q107427">
<META NAME="KBModify" CONTENT="1997/07/24">
<META NAME="KBCreate" CONTENT="1993/11/18">
<META NAME="Keywords" CONTENT="CRTIss vcbuglist400 vcbuglist500">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The getch() run-time library function fails to return the correct extended character code for certain key sequences. There are two known situations in which incorrect codes are generated:   - The ALT key is combined with the ASCII characters A - Z....">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QAUD,QAAP,QABG,QBFY,QAQT,QAY5,QAR4,QAMN,QALW,QAI4,QBUD,QBN4,QBXQ,QBV8 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: getch() Returns Incorrect Extended Key Codes</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 24, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q107427</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The C Run-time (CRT), included with:
   - Microsoft Visual C++ 32-bit Edition, versions 1.0, 2.0, 2.1, 4.0, 4.1,
<P><PRE>     4.2, 5.0
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The getch() run-time library function fails to return the correct
extended character code for certain key sequences. There are two known
situations in which incorrect codes are generated:

<UL><LI>The ALT key is combined with the ASCII characters A - Z.
<P>
   -or-

<LI>The RIGHT CTRL key is combined with any of the function or editing
   keys.
<P>
</UL>With Visual C++ versions 2.x and later, only the first error (error with
ALT key) occurs.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the products listed at the
beginning of this article. We are researching this bug and will post new
information here in the Microsoft Knowledge Base as it becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
In the sample code below, the ALT key combined with any ASCII
character returns the ASCII character code instead of the extended
character code. The RIGHT CTRL key combined with any of the function
or editing keys also fails with Visual C++ 1.0, returning the code for the
function or editing key alone. The LEFT CTRL key combined with a function
key or editing key returns the correct code. The set of affected editing
keys are: END, PAGE UP, PAGE DOWN, HOME, RIGHT ARROW, and LEFT ARROW.
<P>
The table below demonstrates some of the actual versus expected values
that result when the sample below is run with the input shown:
<P>
<PRE>Input            Expected          Actual
</PRE> 
<P>
<PRE>ALT+C            0 - 2eH             63H    (C)
RT CTRL+F4       0 - 61H           0 - 3eH  (F4)
RT CTRL+PAGE UP  0 - 84H           0 - 49H  (PAGEUP)
RT CTRL+END      0 - 75H           0 - 4fH  (END)

</PRE><h3>Sample Code</h3>
 
<P>
<PRE>   /* Compile options needed: none
   */

   void main(void)
   {
      int testChar;

      do {
            testChar = getch();
            printf("%x - ", testChar);
            testChar = getch();
            printf("%x \n", testChar);
      } while (testChar != 0x001B);  /* Repeat until ESC key*/
   }
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : CRTIss vcbuglist400 vcbuglist500<BR>
Version             : 1.0 2.0 2.1 4.0 4.1 4.2 5.0<BR>
Platform            : NT WINDOWS<BR>
Issue type          : kbbug<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 24, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
