

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Conditional Breakpoint Doesn't Stop in Recursive Function </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q123160">
<META NAME="KBModify" CONTENT="1997/09/18">
<META NAME="KBCreate" CONTENT="1994/11/22">
<META NAME="Keywords" CONTENT="WBDebug kbfixlist kbtool">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Using  Break when Expression is True  in a recursive function in the Visual C++ integrated debugger may fail to stop program execution even if the expression becomes true.  RESOLUTION  Instead of using  Break when Expression is True,  use  Break at...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB9,QBFY,QA56,QA55,QA4Q,QAUD,QAR4,QAL2,QAGI,QAGB,QBWP,QAY5,QAVX,QAKP,QDKW V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Conditional Breakpoint Doesn't Stop in Recursive Function</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q123160</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.50 1.51 | 1.00 2.00 2.10
<PRE>WINDOWS   | WINDOWS NT
</PRE>kbtool kbfixlist
<P>
 
The information in this article applies to:

<UL><LI>The Integrated Debugger, included with:
<P>
<P><PRE>    - Microsoft Visual C++ for Windows, versions 1.5 and 1.51
    - Microsoft Visual C++, 32-bit Edition, versions 1.0, 2.0, 2.1, and
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Using "Break when Expression is True" in a recursive function in the Visual
C++ integrated debugger may fail to stop program execution even if the
expression becomes true.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Instead of using "Break when Expression is True," use "Break at Location if
Expression is True" to work around the problem.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article.  This problem was not reproducible in
Microsoft Visual C++, 32-bit Edition, version 4.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To demonstrate the problem, build the sample code below for debug mode and
do the following:

<OL><P><LI>Choose Breakpoints... from the Debug menu.

<P><LI>In the Breakpoints dialog, select "Break when Expression is True" for
   the Type field.

<P><LI>In the Expression field, type "{function1}(i==2)" (without the quotation
   marks) to specify the expression.

<P><LI>Add the above breakpoint to the "Breakpoints:" list.

<P><LI>Start the debugger. You will notice that the debugger terminates the
   debug session without breaking, even though i was equal to 2 at one
   point.
<P>
</OL><h3>Sample Code</h3>
 
<P>
<PRE>/* Compile options needed: /Zi /Od
*/

#include &lt;stdio.h&gt;

int function1( int i, int j )
</PRE></OL>{
<PRE>  if ( i&gt;0 )
  {
    return function1( i-1, j+1 );
  }
  else
  {
    return j;
  }
</PRE>}
<P>
<PRE>void main(void)
</PRE>{
<PRE>  int i;

  printf( "Before Recursive Call.\n" );
  i = function1( 10, 0 );
  printf( "Back from Recursive Call.\n" );
</PRE>}
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 1.50 2.00 2.10<BR>
KBCategory: kbtool kbfixlist<BR>
KBSubcategory: WBDebug<BR>
Keywords          : WBDebug kbfixlist kbtool<BR>
Version           : 1.50 1.51 | 1.00 2.00 2.10<BR>
Platform          : NT WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
