

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Duplicate Source Files Cause Breakpoint Failures </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q123092">
<META NAME="KBModify" CONTENT="1997/09/18">
<META NAME="KBCreate" CONTENT="1994/11/21">
<META NAME="Keywords" CONTENT="kbprb kbtool">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  When the same source file (or a copy with the same name in a different directory) is included in both a DLL and its calling application, the debugger can become confused about which module in memory to set breakpoints in. For example, a breakpoint ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAK6,QAJQ,QAUJ,QBFY,QA56,QA55,QAR4,QAH4,QAFO,QAKC,QAGT,QBSO,QBWP,QBC6,QA9N V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Duplicate Source Files Cause Breakpoint Failures</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q123092</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
2.00 2.10 4.00
WINDOWS NT
kbtool kbprb
<P>
 
The information in this article applies to:

<UL><LI>The Integrated Debugger, included with Microsoft Visual C++,
   32-bit Edition, version 2.0, 2.1, and 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
When the same source file (or a copy with the same name in a different
directory) is included in both a DLL and its calling application, the
debugger can become confused about which module in memory to set
breakpoints in. For example, a breakpoint set in the source file belonging
to the DLL may be hit in the DLL or in the application's copy of the source
file, and the module in which the breakpoint is hit may change from one
debugging session to another.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
The best solution is to not use source files that have the same name in the
DLL and in its calling application. If you can't avoid it, try using the
context operator to resolve the breakpoint conflict. To do this, specify
both the source file and the EXE or DLL name in the breakpoint location
field of the Breakpoints dialog box using this syntax:
<P>
<PRE>   {,source.cpp,target.exe} .line_number

   -or-

   {,source.cpp,target.dll} .line_number

</PRE>Here line_number is the actual decimal line number in the source code. You
may need to use full path names when specifying the source and the EXE or
DLL names.
<P>
NOTE: This workaround may not always be successful. If it doesn't work, you
must either rename one of the source file copies or live with the errant
breakpoint behavior.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
For additional information on the purpose and use of the context operator,
refer to the "Using Breakpoints" section in the "Using the Debugger"
chapter of the Visual C++ Books Online "Visual C++ User's Guide."
Specifically, in Visual C++ 2.0, refer to the "General Syntax for
Breakpoint Locations" entry in the "Using Breakpoints" section; in
Visual C++ 4.0, refer to the "Advanced Breakpoint Syntax" entry of the
"Using the Breakpoints Dialog Box" in the "Using Breakpoints" section.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 2.00 2.10 4.00 VWB IDE<BR>
KBCategory: kbtool kbprb<BR>
KBSubCategory: WBDebug<BR>
Keywords          : kbprb kbtool<BR>
Version           : 2.00 2.10 4.00<BR>
Platform          : NT WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
