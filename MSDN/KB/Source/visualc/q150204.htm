

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Retrieve the Actual Parent Window of an ActiveX Control </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q150204">
<META NAME="KBModify" CONTENT="1998/02/17">
<META NAME="KBCreate" CONTENT="1996/04/23">
<META NAME="Keywords" CONTENT="CDKIss MfcOLE">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  An ActiveX control is created as a child of the window of the container most closely associated with the site object. This article describes how to obtain the Parent window of an ActiveX control, and why calling GetParent or CWnd::GetParent for an ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAHV,QA7O,QAMN,QAB5,QAOE,QAW6,QAUD,QAGQ,QALW,QAH4,QBVV,QAPN,QAGI,QBS0,QDL9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Retrieve the Actual Parent Window of an ActiveX Control</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 17, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q150204</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
   - Microsoft Visual C++ for Windows, versions 1.5, 1.51, 1.52
   - Microsoft Visual C++, 32-bit Edition, versions 2.0, 2.1, 2.2, 4.0,
<P><PRE>     4.1, 5.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
An ActiveX control is created as a child of the window of the container
most closely associated with the site object. This article describes how to
obtain the Parent window of an ActiveX control, and why calling GetParent
or CWnd::GetParent for an ActiveX control may not return its actual Parent
window.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
An ActiveX control typically gains access to the following container
windows:

<UL><LI>Frame window: the outer-most container window where the container's main
   menu resides. An ActiveX control retrieves this window handle by calling
   either IOleInPlaceFrame::GetWindow or IOleInPlaceSite::GetWindowContext.

<LI>Site window: the container window that contains the ActiveX control's
   view. An ActiveX control retrieves this container window by calling
   IOleInPlaceSite::GetWindow.
<P>
</UL>However, ActiveX control containers generated using MFC and Microsoft
Visual Basic 4.0 or 5.0 use the same window for the frame and the site
object.
<P>
When the MFC framework creates an ActiveX control's window, it retrieves
the window associated with the container's site object by calling
IOleInPlaceSite::GetWindow. The returned window is made the parent of the
ActiveX control, except in the following two cases, where the framework
creates a reflector window that reflects the notification messages:

<UL><LI>The ActiveX control subclasses a Windows control, and the container does
   not support message reflection.
<P>
   -or-

<LI>The control container does not support automatic clipping of its
   controls.
<P>
</UL>In these two scenarios, the ActiveX control is made a child of the
reflector window whose parent is the window returned from
IOleInPlaceSite::GetWindow.
<P>
NOTE: If IOleObject::DoVerb with OLEIVERB_OPEN is invoked on an ActiveX
control, and if in-place activation is not possible, an outer frame window
is created and becomes the parent of the ActiveX control.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   // The following code should return the
   // actual parent window of the ActiveX control.
   HWND CMyOleControl::GetActualParent()
   {
       HWND hwndParent = 0;

       // Get the window associated with the in-place site object,
       // which is connected to this ActiveX control.
       if (m_pInPlaceSite != NULL)
           m_pInPlaceSite-&gt;GetWindow(&amp;hwndParent);

       return hwndParent;     // Return the in-place site window handle.
   }

</PRE><h2>REFERENCES</h2>
 

<UL><LI>Online Documentation for IOleWindow::GetWindow

<LI>MFC source code for COleControl::OnActivateInPlace and
   COleControl::CreateControlWindow.
<P></UL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: ocx control<BR>
Keywords          : CDKIss MfcOLE<BR>
Technology        : kbMfc kbole<BR>
Version           : Winnet:1.5,1.51,1.52,2.0,2.1,2.2,4.0,5.0<BR>
Platform          : NT WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 17, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
