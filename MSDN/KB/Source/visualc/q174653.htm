

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FILE: How to Call CoGetClassObjectFromURL() in an MFC App </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q174653">
<META NAME="KBModify" CONTENT="1998/02/02">
<META NAME="KBCreate" CONTENT="1997/10/02">
<META NAME="Keywords" CONTENT="AXSDKWinInet MfcOLE kbfile">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  This sample, Urlobj.exe, demonstrates how to call the CoGetClassObjectFromURL() function to download, register, and instantiate an object. The sample implements two interfaces necessary to allow the CoGetClassObjectFromURL() function to work proper...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB5,QAW6,QAPN,QAH4,QAO0,QAGI,QAPF,QA7O,QAY5,QAY2,QAOE,QAMN,QBQU,QAJ4,QAIF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FILE: How to Call CoGetClassObjectFromURL() in an MFC App</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 2, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q174653</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual C++, 32-bit Editions, version 5.0
<LI>Internet Client SDK, versions 4.0, 4.01
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This sample, Urlobj.exe, demonstrates how to call the
CoGetClassObjectFromURL() function to download, register, and instantiate
an object. The sample implements two interfaces necessary to allow the
CoGetClassObjectFromURL() function to work properly: IBindStatusCallback
and IWindowForBindingUI.
<P>
The following file is available for download from the Microsoft Software
Library:
<P>
<PRE> ~ <A HREF="http://support.microsoft.com/download/support/mslfiles/Urlobj.exe">Urlobj.exe</A> <I>(size: 51878 bytes)</I> 

</PRE>For more information about downloading files from the Microsoft Software
Library, please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../zMiscellaneous/Q119591.htm">Q119591</A></B>
   TITLE     : How to Obtain Microsoft Support Files from Online Services

</PRE><h2>MORE INFORMATION</h2>
 
<P>
The CoGetClassObjectFromURL() function returns a class factory object for a
given CLSID. If the desired object is installed on the system, it is
instantiated. Otherwise, the necessary code is downloaded and installed
from the specified URL. The sample uses a CFormView to get the value of the
CLSID, the URL pointing to the code for the ActiveX object, the major and
minor version, and the size of the object for displaying (it assumes that
the control will display itself in some manner).
<P>
The bulk of the relevant code is found in the OnButton1() handler, which
starts the download process, and the OnStopBind() handler, which handles
creating the object after it has finished downloading.
<P>
The IBindStatusCallback and IWindowForBindingUI interfaces are implemented
in the file Download.cpp by using a CCmdTarget derived class and the MFC
interface map macros.
<P>
After the CoGetClassObjectFromURL() has completed the asynchronous
download, the OnStopBind() handler is called to display the control. In
this handler the sample demonstrates instantiating the actual object by
using the CWnd::CreateControl() function. This is assuming that the object
is an OLE control. The handler also contains some code that has been
commented out that demonstrates calling IClassFactory::CreateInstance() in
the case that the object is not an OLE control.
<P>
To maintain simplicity, the sample does not implement much error checking
or verification of user input.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: softlib<BR>
Keywords          : AXSDKWinInet MfcOLE kbfile<BR>
Version           : WINDOWS:4.0; WINNT:5.0<BR>
Platform          : WINDOWS winnt<BR>
Solution Type     : kbsample<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 2, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
