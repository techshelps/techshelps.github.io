

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Common DDL SQL for the Microsoft Access Database Engine </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q180841">
<META NAME="KBModify" CONTENT="1998/02/12">
<META NAME="KBCreate" CONTENT="1998/02/10">
<META NAME="Keywords" CONTENT="MfcDatabase kbcode">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  This article demonstrates some common DDL (Data Definition Language) SQL statements for the Microsoft Jet database engine.  MORE INFORMATION  Microsoft Jet provides a full set of Data Definition Language SQL statements, which can be used to create,...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA1S,QAPN,QA28,QATJ,QAB9,QDKY,QA7O,QA7N,QDN9,QBXR,QAEF,QARR,QAUJ,QABM,QA9N V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Common DDL SQL for the Microsoft Access Database Engine</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 12, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q180841</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The DAO SDK included with:
   - Microsoft Visual C++, 32-bit Editions, version 5.0
<LI>The Microsoft Foundation Classes (MFC) included with:
   - Microsoft Visual C++, 32-bit Editions, version 5.0
<LI>Microsoft Access versions 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article demonstrates some common DDL (Data Definition Language) SQL
statements for the Microsoft Jet database engine.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft Jet provides a full set of Data Definition Language SQL
statements, which can be used to create, modify, and delete tables,
indexes, and relationships in a Microsoft Access database file. You can use
this DDL with the MFC database classes to manipulate an Access database.
This article lists some common examples of this category of SQL statements.
<P>
You can execute a single DDL statement in this article using the following
syntax with the MFC DAO classes:
<P>
<PRE>   // Open database file.
   CDaoDatabase db;
   db.Open( _T("C:\\MyDatabase.mdb") );

   // Set strSQL to desired DDL statement.
   CString strSQL;
   strSQL = _T("CREATE TABLE Simple (ID long)" );

   // Execute DDL statement.
   try
   {
      db.Execute( strSQL, dbFailOnError );
   }
   catch ( CDaoException *e )
   {
      // Display errors (simple example).
      AfxMessageBox( e-&gt;m_pErrorInfo-&gt;m_strDescription,
                     MB_ICONEXCLAMATION );
      e-&gt;Delete();
   }

</PRE>You can execute the DDL statements in this article using the following
syntax with the MFC ODBC classes:
<P>
<PRE>   // Open database file.
   CDatabase db;
   db.OpenEx( _T("DSN=MyAccessDB"), CDatabase::noOdbcDialog );

   // Set strSQL to desired DDL statement.
   CString strSQL;
   strSQL = _T("CREATE TABLE Simple (ID long)" );

   // Execute DDL statement.
   try
   {
      db.ExecuteSQL( strSQL );
   }
   catch ( CDBException *e )
   {
      // Display errors (simple example).
      AfxMessageBox( e-&gt;m_strError,
                     MB_ICONEXCLAMATION );
      e-&gt;Delete();
   }

</PRE><h3>The CREATE TABLE DDL Statement</h3>
 
<P>
The following create table statement creates a test table with all of the
DDL available to Microsoft Access data types:
<P>
<PRE>   CREATE TABLE TestAllTypes
   (
      MyText       TEXT(50),
      MyMemo       MEMO,
      MyByte       BYTE,
      MyInteger    INTEGER,
      MyLong       LONG,
      MyAutoNumber COUNTER,
      MySingle     SINGLE,
      MyDouble     DOUBLE,
      MyCurrency   CURRENCY,
      MyReplicaID  GUID,
      MyDateTime   DATETIME,
      MyYesNo      YESNO,
      MyOleObject  LONGBINARY,
      MyBinary     BINARY(50)
    )

</PRE>Note that you cannot create "AutoNumber Replication," "HyperLink," or
"Lookup" type fields using a Microsoft Access DDL SQL statement. These
field types are not native Jet field types and can be created and used only
by the Microsoft Access user interface. The MyBinary field above is a
special fixed-length binary field, which cannot be created via the
Microsoft Access user interface but can be created using a SQL DDL
statement.
<P>
You can create a table with a single-field primary key with a single DDL
statement. The following statement creates a table named TestPrimaryKey
with a primary key on the MyID field named PK_MyID:
<P>
<PRE>   CREATE TABLE TestPrimaryKey
   (
      MyID LONG CONSTRAINT PK_MyID PRIMARY KEY,
      FirstName TEXT(20),
      LastName  TEXT(20)
   )

</PRE><h3>The ALTER TABLE DDL Statement</h3>
 
<P>
Microsoft Access DDL supports the ALTER TABLE DDL statement. This statement
is useful when you need to remove or add a field to an existing table.
<P>
Note that this statement won't let you alter an existing field in an Access
table (for example, to change the field's data type).
<P>
The following DDL removes the column named MoreInfo from the table
TooManyFields:
<P>
<PRE>   ALTER TABLE TooManyFields DROP COLUMN MoreInfo

</PRE>The following DDL statement adds a column named ExtraInfo to a table named
NotEnoughFields:
<P>
<PRE>   ALTER TABLE NotEnoughFields ADD COLUMN ExtraInfo Text(255)

</PRE>The ALTER TABLE statement can also be used to create a relationship between
two tables.
<P>
The following SQL statement creates two tables (Cars and Colors) and then
creates a relationship between the Cars table and the Colors table on the
ColorID field (each car can have only one color). Note that there are three
separate DDL statements, which must be executed one at a time:
<P>
<PRE>   CREATE TABLE Cars
   (
      CarID LONG,
      CarName TEXT(50),
      ColorID LONG
   )

   CREATE TABLE Colors
   (
      ColorID LONG CONSTRAINT PK_Colors PRIMARY KEY,
      ColorName TEXT(50)
   )

   ALTER TABLE Cars
   ADD CONSTRAINT MyColorIDRelationship
   FOREIGN KEY (ColorID) REFERENCES Colors (ColorID)

</PRE>Note that you cannot specify that you want "Cascade Updates" or "Cascade
Deletes" with a relationship created using DDL. These features are
available only when using the Microsoft DAO (Data Access Objects)
interfaces via code or when using the Microsoft Access user interface.
<P>
<P><h3>The CREATE INDEX DDL Statement</h3>
 
<P>
The CREATE INDEX DDL statement is used to create additional indexes on an
existing table.
<P>
The following DDL statement adds a single-field, non-unique, ascending
index named MyStateIndex to the field State in the table Addresses:
<P>
<PRE>   CREATE INDEX MyStateIndex
   ON Addresses
   (
      State ASC
   )

</PRE>The following DDL statement adds a two-field, unique, ascending index named
MyFullNameIndex to the fields FirstName and LastName in the table
Addresses:
<P>
<PRE>   CREATE UNIQUE INDEX MyFullNameIndex
   ON Addresses
   (
      FirstName ASC,
      LastName  ASC
   )

</PRE>You can also specify an additional constraint of DISALLOW NULL using the
CREATE TABLE DDL statement. Specifying DISALLOW NULL means that the index
will prevent the insertion of fields with null values into any of the
columns in the index.
<P>
The following DDL statement creates a single-field, unique, descending
index named MySalaryIndex on the field Salary in the table HRInfo:
<P>
<PRE>   CREATE UNIQUE INDEX MySalaryIndex
   ON HRInfo
   (
      Salary DESC
   )
   WITH DISALLOW NULL

</PRE>This index enforces that every record must have a value for the Salary
field.
<P>
<P><h3>The DROP DDL Statement</h3>
 
<P>
The DROP DDL statement is used to delete existing tables or indexes.
<P>
The following DDL statement permanently deletes the table named TempTable:
<P>
<PRE>   DROP TABLE TempTable

</PRE>The following DDL statement permanently deletes the index named
MyUnusedIndex on the table OverIndexedTable:
<P>
<PRE>   DROP INDEX MyUnusedIndex ON OverIndexedTable

</PRE><h2>REFERENCES</h2>
 
<P>
For more information about the Microsoft Jet DDL syntax, refer to the
"Microsoft Jet Database Engine Programmer's Guide, Second Edition," Chapter
3, "Data Definition and Integrity."
<P>
 
<PRE>Keywords          : MfcDatabase kbcode
Component         : dao jet
Technology        : odbc
Version           : WINDOWS: 7.0, 97; Winnt: 5.0
Platform          : WINDOWS winnt
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 12, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
