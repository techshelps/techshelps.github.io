

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Assignment of Void Pointer Does Not Give Warning Message </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q41374 ">
<META NAME="KBModify" CONTENT="1997/07/31">
<META NAME="KBCreate" CONTENT="1989/02/17">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The Sample Code below shows an inconsistency with the way that the Microsoft compilers listed above deal with pointer checking. The ANSI standard is unclear about whether an assignment to a void pointer should be checked to see if it is being assig...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB4,QBFY,QAH4,QAO3,QAO2,QAOT,QBWP,QBVV,QAH6,QAEV,QAEF,QABH,QABI,QDL9,QBWQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Assignment of Void Pointer Does Not Give Warning Message</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 31, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q41374 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
6.00 6.00a 6.00ax 7.00 | 6.00 6.00a | 1.00 1.50 1.51 | 1.00 2.00 2.10
<PRE>MS-DOS                 | OS/2       | WINDOWS        | WINDOWS NT
</PRE>kbtool
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft C/C++ Compiler (CL.EXE) included with:
<P>
<P><PRE>    - Microsoft C for MS-DOS, versions 6.0, 6.0a, and 6.0ax
    - Microsoft C for OS/2, versions 6.0, and 6.0a
    - Microsoft C/C++ for MS-DOS, version 7.0
    - Microsoft Visual C++ for Windows, versions 1.0, 1.5, and 1.51
    - Microsoft Visual C++ 32-bit Edition, version 1.0, 2.0, and 2.1
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The Sample Code below shows an inconsistency with the way that the
Microsoft compilers listed above deal with pointer checking. The ANSI
standard is unclear about whether an assignment to a void pointer should be
checked to see if it is being assigned a nonpointer variable. The code
below shows that character pointers are checked while void pointers are
not; the code will generate the following warnings:
<P>
<P><h3>16-bit compilers</h3>
 
<P>
The compiler generates the following warning for the void pointer in the
sample code as well as the character pointer:
<P>
<PRE>   C4047: '=' different levels of indirection

</PRE><h3>32-bit compilers</h3>
 
<P>
The compiler generates the following warming with the sample code:
<P>
<PRE>   C4047: "=": 'void *' differs in levels of indirection from 'int'

</PRE><h3>7.0 and later</h3>
 
<P>
Compiler versions 7.0 and later generate the following error in both cases
if the program is compiled as a C++ program (.cpp extension).
<P>
<PRE>   error C2446: '=' : no conversion from 'int ' to 'void *'

</PRE><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Sample Code:</h3>
 
<P>
<PRE>/* Compile options needed: none
*/

int i;         /* i could be float, double, char, long, or unsigned */
char *p;
void *v;

void main()
</PRE>{
<PRE>   p = i;      /* This will give a warning message */
   v = i;
</PRE>}
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 6.00 6.00a 6.00ax 7.00 8.00 8.00c 9.00<BR>
9.10 1.00 1.50 2.00 2.10<BR>
KBCategory: kbtool<BR>
KBSubcategory: CLIss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 31, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
