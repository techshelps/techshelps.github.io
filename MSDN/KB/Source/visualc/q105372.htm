

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: GetNextAssoc() Crashes _AFXDLL Application </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q105372">
<META NAME="KBModify" CONTENT="1997/09/16">
<META NAME="KBCreate" CONTENT="1993/10/20">
<META NAME="Keywords" CONTENT="kb16bitonly MfcMisc kbbuglist kbfixlist kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  When using one of the map classes (for example, CMapStringToOb) and iterating through the map in a retail build of an _AFXDLL application, a general protection (GP) fault occurs in GetNextAssoc(). A debug build of the same application, or a non-AFX...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAR4,QBKN,QAH4,QAJH,QBVV,QAAP,QDKS,QAJQ,QAVX,QAUD,QAKD,QAKP,QDL9,QBWQ,QBWO V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: GetNextAssoc() Crashes _AFXDLL Application</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 16, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q105372</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00
WINDOWS
kbprg kbfixlist kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
<P><PRE>    - Microsoft Visual C++ for Windows, version 1.0
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When using one of the map classes (for example, CMapStringToOb) and
iterating through the map in a retail build of an _AFXDLL application,
a general protection (GP) fault occurs in GetNextAssoc(). A debug
build of the same application, or a non-AFXDLL version (debug or
retail), does not cause a GP fault.
<P>
<P><h2>CAUSE</h2>
 
<P>
GetStartPosition() returns the predefined value BEFORE_START_POSITION,
which is defined incorrectly in AFX.H. GetNextAssoc() does not
identify this as the beginning of the map and incorrectly uses this
value as a pointer.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Because an _AFXDLL application makes use of MFC200.DLL, it is
insufficient to correct the definition of BEFORE_START_POSITION and
rebuild the application. MFC200.DLL contains references to
BEFORE_START_POSITION that were set at compile time (of the DLL), and
therefore changing the definition without also rebuilding MFC200.DLL
will not solve the problem. Microsoft does not recommend shipping
modified versions of MFC200.DLL with applications.
<P>
To work around the problem, derive a new map class and override
GetNextAssoc() by copying the code from the appropriate MAP_XX.CPP
file in ~\MFC\SRC. No changes to the code are necessary, and it is not
necessary to correct the definition of BEFORE_START_POSITION. Use the
new map class in place of the original.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem with version 2.0 of the
Microsoft Foundation Classes for Windows. This problem was corrected in MFC
2.5.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
In AFX.H, BEFORE_START_POSITION is defined as:
<P>
<PRE>   #define BEFORE_START_POSITION ((void*)(void NEAR*)-1)

</PRE>The explicit NEAR cast in this definition combined with the large
memory model (required by _AFXDLL) causes this to evaluate to DS:-1.
The correct definition should be ((void*)-1), which does not depend on
DS.
<P>
In a retail build, GetStartPosition() is an inline function, which
causes it to exist in the application's code. This means that
BEFORE_START_POSITION as returned by GetStartPosition() contains the
application's DS.
<P>
On the other hand, GetNextAssoc() is not inline and exists in
MFC200.DLL. Consider CMapStringToOb. On line 249 of MAP_SO.CPP is the
comparison:
<P>
<PRE>   if (pAssocRet == (CAssoc*) BEFORE_START_POSITION)

</PRE>This comparison is intended to succeed when pAssocRet is the value
returned by GetStartPosition(). However, BEFORE_START_POSITION in the
above line contains the DLL's DS, and thus the comparison fails, in
which case GetNextAssoc() proceeds to use pAssocRet, and a GP fault
results.
<P>
When building a debug version of the application, inlining is turned
off and both GetStartPosition() and GetNextAssoc() exist in
MFC200D.DLL. For a non-AFXDLL application, both functions are linked
into the application's code (both debug and retail). The same DS is
used in all of these cases and GetNextAssoc() works correctly.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 2.00 CMapWordToOb CMapWordToPtr<BR>
CMapPtrToWord CMapPtrToPtr CMapStringToPtr CMapStringToString<BR>
KBCategory: kbprg kbfixlist kbbuglist<BR>
KBSubcategory: MfcMisc<BR>
Keywords          : kb16bitonly MfcMisc kbbuglist kbfixlist kbprg<BR>
Technology        : kbMfc<BR>
Version           : 1.00<BR>
Platform          : WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 16, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
