

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Make the CMiniFrameWnd Window Paint Its Background Area </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q135884">
<META NAME="KBModify" CONTENT="1997/10/10">
<META NAME="KBCreate" CONTENT="1995/08/29">
<META NAME="Keywords" CONTENT="MfcUI kbcode kbprg kbui">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  This article gives you two ways to make the CMiniFrameWnd miniframe window paint its background area.  A miniframe window (CMiniFrameWnd) doesn't paint its background area even though Windows sends a WM_ERASEBKGND message to prepare the invalidated...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPW,QAGQ,QABO,QAH6,QAH4,QAEV,QAGB,QAEF,QABA,QAY5,QAUD,QAPN,QAG9,QAYC,QAB9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Make the CMiniFrameWnd Window Paint Its Background Area</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q135884</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
2.00 2.10 2.20 4.00 4.10
WINDOWS NT
kbui kbprg kbcode
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
   Microsoft Visual C++, 32-bit Edition, versions 2.0, 2.1, 2.2,
   4.0, and 4.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article gives you two ways to make the CMiniFrameWnd miniframe window
paint its background area.
<P>
A miniframe window (CMiniFrameWnd) doesn't paint its background area even
though Windows sends a WM_ERASEBKGND message to prepare the invalidated
portion of the window for painting. The default window procedure for this
message erases the background by using the class background brush specified
by the hbrBackground member of the WNDCLASS structure. As this background
brush is NULL for a CMiniFrameWnd and MFC doesn't provide a handler for
WM_ERASEBKGND to erase the background of a CMiniFrameWnd, the client area
of a miniframe window is never erased.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
A CMiniFrameWnd is a half-height/half-caption frame window typically
enclosing another child window that takes up the entire client area of the
window. The default window class for a CMiniFrameWnd is pre-registered by
MFC without a background brush; that is, the hbrBackground member of the
WNDCLASS structure is NULL.
<P>
The application sends a WM_ERASEBKGND message to prepare the invalidated
portion of a window for painting. The window procedure of MFC (AfxWndProc)
receives this message first and in turn calls the default window procedure
(DefWindowProc), which erases the background by using the class background
brush. Because there is no background brush for a CMiniFrameWnd, the
background area is never painted.
<P>
This default behavior is by design because there is no need for the
miniframe window to repaint its background, as the child window typically
enclosing the miniframe window will paint over its background area.
<P>
Following are two ways to make the CMiniFrameWnd paint its background area.
<P>
<P><h3>Method One</h3>
 
<P>
This method registers a window class for CMiniFrameWnd with a background
brush. To implement this, derive a class from CMiniFrameWnd and override
the Create member function. The Create function would be similar to the
default implementation of CMiniFrameWnd::Create (in WINMINI.CPP of
~/mfc/src directory), but with the addition of a background brush. The
following code demonstrates this:
<P>
<PRE>// Header file of CMiniFrameWnd derived class (mymini.h)
</PRE>class CMyMiniFrameWnd : public CMiniFrameWnd
{
<PRE>    DECLARE_DYNCREATE(CMyMiniFrameWnd)
</PRE>public:
<PRE>    CMyMiniFrameWnd();

    // Add the declaration for the Create function
    BOOL Create(LPCTSTR lpClassName, LPCTSTR lpszWindowName,
         DWORD dwStyle, const RECT&amp; rect,
         CWnd *pParentWnd = NULL, UINT nID = 0);

    // Rest of the class definition
    ...
</PRE>};
<P>
<P>
<PRE>// Implementation file of CMiniFrameWnd derived class (mymini.cpp)
</PRE>BOOL CMyMiniFrameWnd::Create(
<PRE>    LPCTSTR lpszClassName, LPCTSTR lpszWindowName,
    DWORD dwStyle, const RECT&amp; rect,
    CWnd* pParentWnd, UINT nID)
</PRE>{
<PRE>    // Window title
    m_strCaption = lpszWindowName;

    // Register your own window class
    return CreateEx(0,
        lpszClassName ?
            lpszClassName :
            AfxRegisterWndClass(
                CS_DBLCLKS,
                ::LoadCursor(NULL, IDC_ARROW),
                (HBRUSH) (COLOR_WINDOW + 1)), // Specify bkgnd brush
        lpszWindowName,
        dwStyle,
        rect.left, rect.top,
        rect.right - rect.left, rect.bottom - rect.top,
        pParentWnd-&gt;GetSafeHwnd(),
        (HMENU)nID);
}

</PRE><h3>Method Two</h3>
 
<P>
This method illustrates how to provide a handler for the WM_ERASEBKGND
message for the miniframe window. By implementing this, the miniframe
window paints its own background area in response to a WM_ERASEBKGND. Use
ClassWizard to provide a handler for WM_ERASEBKGND for a CMiniFrameWnd
derived class. Modify the handler as shown in this code:
<P>
BOOL CMyMiniFrameWnd::OnEraseBkgnd(CDC* pDC)
{
<PRE>    // Set brush to desired background color
    CBrush backBrush(RGB(192, 192, 192));

    // Save the old brush
    CBrush* pOldBrush = pDC-&gt;SelectObject(&amp;backBrush);

    // Get the current clipping boundary
    CRect rect;
    pDC-&gt;GetClipBox(&amp;rect);

    // Erase the area needed
    pDC-&gt;PatBlt(rect.left, rect.top, rect.Width(), rect.Height(),
         PATCOPY);

    pDC-&gt;SelectObject(pOldBrush); // Select the old brush back
    return TRUE;  // message handled
</PRE>}
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information, please see WM_ERASEBKGND in the Windows API
documentation MFC source code.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 3.00 3.10 3.20 2.00 2.10 2.20 3.1 3.2 3.0<BR>
4.00 4.10<BR>
KBCategory: kbui kbprg kbcode<BR>
KBSubcategory: MfcUI<BR>
Keywords          : MfcUI kbcode kbprg kbui<BR>
Technology        : kbMfc<BR>
Version           : 2.00 2.10 2.20 4.00 4.10<BR>
Platform          : NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
