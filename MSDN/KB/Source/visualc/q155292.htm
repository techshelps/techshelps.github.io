

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Destructor Not Called When DEBUG_NEW Is Defined </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q155292">
<META NAME="KBModify" CONTENT="1997/12/01">
<META NAME="KBCreate" CONTENT="1996/08/26">
<META NAME="Keywords" CONTENT="CodeGen CPPIss vcbuglist400 vcbuglist500 VS97FixlistSP3">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  If new is defined as DEBUG_NEW and a call to new is made for a class that takes a reference to another class in the member initialization, then the destructor is not called for the referenced class for versions 4.0, 4.1, and 4.2.  This is illustrat...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGI,QAR4,QBVV,QBFY,QA56,QA55,QAOT,QAM1,QAAP,QAB4,QDO3,QDKW,QABO,QAKP,QAPF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Destructor Not Called When DEBUG_NEW Is Defined</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 1, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q155292</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft C/C++ Compiler (CL.EXE) included with:
   - Microsoft Visual C++, 32-bit Edition, versions 4.0, 4.1, 4.2, 5.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
If new is defined as DEBUG_NEW and a call to new is made for a class that
takes a reference to another class in the member initialization, then the
destructor is not called for the referenced class for versions 4.0, 4.1,
and 4.2.
<P>
This is illustrated in the output from the following example:
<P>
<PRE>   ClassA Constructor
   ClassB Constructor
   ClassB Destructor

</PRE>The destructor for ClassA is not called.
<P>
NOTE: The Visual C++ 5.0 compiler generates the following error if you try
to compile the sample code:
<P>
<PRE>   fatal error C1001: INTERNAL COMPILER ERROR
   (compiler file 'E:\utc\src\\P2\ehexcept.c', line 516)

</PRE><h2>RESOLUTION</h2>
 
<P>
The best way to work around the problem is to move the new statement to be
within the body of the constructor. For example,
<P>
<PRE>   ClassC() {
      mClassB = new ClassB("Goodbye");
   }

</PRE><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. This bug has been fixed in Visual Studio
97 Service Pack 3.
<P>
For more information, please see the following article in the Microsoft
Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../VSTUDIO/Q170365.htm">Q170365</A></B>
   TITLE     : INFO: Visual Studio 97 Service Packs - What, Where, and Why

</PRE><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   /* Compile options needed: /D_DEBUG
   */
   #include &lt;afx.h&gt;
   #include &lt;iostream.h&gt;

   #ifdef _DEBUG
   #define new DEBUG_NEW
   #endif

   class ClassA {
   public:
       ClassA(const char *) { cout&lt;&lt; "ClassA Constructor" &lt;&lt; endl; }
       ~ClassA()            { cout&lt;&lt; "ClassA Destructor"  &lt;&lt; endl; }
   };

   class ClassB {
   public:
       ClassB(const ClassA&amp;){ cout &lt;&lt; "ClassB Constructor" &lt;&lt; endl;}
       ~ClassB()            { cout &lt;&lt; "ClassB Destructor"  &lt;&lt; endl;}
   };

   class ClassC {
   public:
       ClassB *mClassB;
       ClassC()
            :mClassB(new ClassB("Goodbye") )    // Error
       {
       //    mClassB = new ClassB("Goodbye");   // Workaround
       }
       ~ClassC() { delete mClassB; }
   };

   void main() {
       ClassC TestClassInstance;
   }
</PRE> 
<PRE>Keywords          : CodeGen CPPIss vcbuglist400 vcbuglist500 VS97FixlistSP3
Version           : 4.0 4.1 4.2 5.0
Platform          : NT WINDOWS
Issue type        : kbbug
Solution Type     : kbfix kbservicepack</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 1, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
