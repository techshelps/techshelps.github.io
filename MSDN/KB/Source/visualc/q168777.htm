

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: MFC ActiveX Control in IE Doesn't Detect Keystrokes </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q168777">
<META NAME="KBModify" CONTENT="1998/02/17">
<META NAME="KBCreate" CONTENT="1997/05/20">
<META NAME="Keywords" CONTENT="AXSDKControls MfcOLE kbcode">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Accelerator keys, such as ARROW keys, are first received by the message pump of the ActiveX control's container. Even if the control has the focus, it does not receive messages for keystrokes that have special meaning to control containers, such as...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB5,QA7O,QAOE,QAMN,QAHV,QAGI,QAEV,QAUD,QBVV,QBV9,QALQ,QAGX,QAYC,QAL2,QBRJ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: MFC ActiveX Control in IE Doesn't Detect Keystrokes</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 17, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q168777</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
   - Microsoft Visual C++, 32-bit Editions, versions 4.0, 4.0a, 4.1, 4.2,
<P><PRE>     4.2b, 5.0
</PRE>   - Microsoft Internet Explorer (Programming), versions 3.0, 3.01, 3.02
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Accelerator keys, such as ARROW keys, are first received by the message
pump of the ActiveX control's container. Even if the control has the focus,
it does not receive messages for keystrokes that have special meaning to
control containers, such as ARROW and TAB keys. MFC ActiveX controls have a
chance to intercept these messages by overriding their PreTranslateMessage
function.
<P>
However, PreTranslateMessage is not always called for an MFC ActiveX
control.
<P>
<P><h2>CAUSE</h2>
 
<P>
PreTranslateMessage in an MFC ActiveX control is called by the
TranslateAccelerator method of the IOleInPlaceActiveObject interface of the
control. Internet Explorer only calls this method for the control that is
currently UI-Active. Only one control can be UI-Active at a time.
<P>
Internet Explorer does not automatically UI-Activate any controls when a
page is first loaded. Internet Explorer waits until the user tabs to an
ActiveX control on the page to UI-Activate it. Also, MFC ActiveX controls
UI-Activate themselves when they are clicked with the mouse. In an MFC
ActiveX control, this is done in COleControl::OnLButtonUp.
<P>
If you have a child control inside your COleControl, mouse-click messages
on the child control are not sent to the COleControl and MFC does not UI-
Activate the ActiveX control, even though the child control has just been
given the keyboard focus. Internet Explorer intercepts the keystrokes and
does not give the control a chance to filter them in PreTranslateMessage.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Here is a typical PreTranslateMessage. This code forwards ARROW, HOME, and
END keys back to the control so that they can be received using a
MESSAGE_MAP entry:
<P>
<PRE>   // trap keys and forward on to the control
   BOOL CMyEditCtrl::PreTranslateMessage(MSG* pMsg)
   {
      switch (pMsg-&gt;message)
      {
         case WM_KEYDOWN:
         case WM_KEYUP:
            switch (pMsg-&gt;wParam)
            {
               case VK_UP:
               case VK_DOWN:
               case VK_LEFT:
               case VK_RIGHT:
               case VK_HOME:
               case VK_END:
                  SendMessage (pMsg-&gt;message, pMsg-&gt;wParam, pMsg-&gt;lParam);
                  // Windowless controls won't be able to call SendMessage.
                  // Instead, just respond to the message here.
                  return TRUE;
            }
            break;
      }
      return COleControl::PreTranslateMessage(pMsg);
   }

</PRE>If you have a child control within your ActiveX control, you need to
UI-Activate the whole control whenever that child control is activated. For
example, if you have an edit control inside your ActiveX control, add a
handler as follows:
<P>
<PRE>   int CMyEditCtrl::OnMouseActivate(CWnd* pDesktopWnd, UINT nHitTest, UINT
   message)
   {
      OnActivateInPlace (TRUE, NULL); // == UI-Activate the control
      return COleControl::OnMouseActivate(pDesktopWnd, nHitTest, message);
   }

</PRE>Because Internet Explorer may not immediately UI-Activate a control, even
if that is the only control on the page, it may be desirable to
automatically request a UI-Activation when the control is created. This can
be done during the COleControl::OnCreate (WM_CREATE) handler. Windowless
controls do not get WM_CREATE or any windows messages; therefore, this code
won't work in a windowless control. Also note that this does not guarantee
that a control will remain UI-Activated. If there are other controls on a
page that request UI-Activation in a similar manner, only one will
eventually be UI-Activated and receive keystroke messages as described. And
if the user TABs away from an ActiveX Control, Internet Explorer will
automatically UI-deactivate the control.
<P>
<PRE>   int CMyEditCtrl::OnCreate(LPCREATESTRUCT lpCreateStruct)
   {
      if (COleControl::OnCreate(lpCreateStruct) == -1)
         return -1;
      OnActivateInPlace (TRUE, NULL); // == UI-Activate the control
      return 0;
   }

</PRE><h2>STATUS</h2>
 
<P>
This behavior is by design.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Calling OnActiveInPlace() in WM_CREATE causes an assert when the control is
hosted in Test Container. The assert is bogus and can be ignored.
 
<PRE>Keywords          : AXSDKControls MfcOLE kbcode
Technology        : kbMfc kbole kbInetDev
Version           : Winnt:3.0,3.01,3.02,4.0,4.0a,4.1,4.2,5.0
Platform          : winnt
Issue type        : kbprb</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 17, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
