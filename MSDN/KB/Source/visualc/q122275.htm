

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: C Run-time Include Files Missing #pragma Pack Directives </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q122275">
<META NAME="KBModify" CONTENT="1997/09/18">
<META NAME="KBCreate" CONTENT="1994/11/01">
<META NAME="Keywords" CONTENT="CRTIss kbbuglist kbfixlist kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The include (.H) files shipped with Visual C++ do not use the #pragma pack preprocessor directive around declarations of structures used by C run-time functions. You may run into problems using C run-time functions in your program if:   - You are c...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBFY,QBGA,QA55,QA56,QAR4,QBV8,QAIC,QA7R,QAOT,QAM1,QABA,QAKP,QAH4,QBWP,QBBI V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: C Run-time Include Files Missing #pragma Pack Directives</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q122275</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00 2.00
WINDOWS NT
kbprg kbfixlist
<P>
 
The information in this article applies to:

<UL><LI>The C Run-time (CRT), included with:
<P>
<P><PRE>    - Microsoft Visual C++, 32-bit Edition, version 2.0
    - Microsoft Visual C++, 32-bit Edition, version 1.0
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The include (.H) files shipped with Visual C++ do not use the #pragma
pack preprocessor directive around declarations of structures used by
C run-time functions. You may run into problems using C run-time
functions in your program if:

<UL><LI>You are compiling files with the /Zp compiler option and using a value
   other than 8 as the argument.
<P>
   -or-

<LI>You are using #pragma pack in your source files.
<P>
</UL><h2>CAUSE</h2>
 
<P>
Problems occur because most C run-time functions expect the structures
they work on to be built with the default compiler structure packing.
The structure packing they expect would be specified with one of these
compiler options:  /Zp8, /Zp, or no /Zp.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
If you are changing the default structure packing when building your
application, add #pragma pack directives around the #includes of the
C run-time include files to specify 8 as the packing alignment. This is
illustrated in the sample code shown in the More Information section.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. This problem was fixed in Microsoft
Visual C++, version 4.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
There are other potential problems with changing the default structure
packing. For additional information, please see the following article in
the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../VISUALC/Q117388.htm">Q117388</A></B>
   TITLE     : PRB: Structure Packing Causes Some Win32 Programs to Fail

</PRE><h2>REFERENCES</h2>
 
<P>
Visual C++ Build Tools User's Guide, Chapter 2, Using the 32-Bit CL.
A description of the /Zp compiler option.
<P>
Visual C++ Preprocessor Reference, Chapter 2, Pragma Directives. A
description of #pragma pack.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>/* Compile options needed: none
*/

</PRE>#pragma pack( push, 8 )
<PRE>#include &lt;stdio.h&gt;
</PRE>#pragma pack( pop )
<P>
<PRE>void main( void )
</PRE>{
<PRE>    FILE *fp;

    fp = fopen( "c:\\autoexec.bat", "r" );
</PRE>}
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 2.00 runtime run time error errors errno<BR>
KBCategory: kbprg kbfixlist kbbuglist<BR>
KBSubcategory: CRTIss<BR>
Keywords          : CRTIss kbbuglist kbfixlist kbprg<BR>
Version           : 1.00 2.00<BR>
Platform          : NT WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
