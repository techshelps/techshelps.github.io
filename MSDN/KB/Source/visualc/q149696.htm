

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Bad Code Generated for Inline Assembly Using Enumerators </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q149696">
<META NAME="KBModify" CONTENT="1997/09/19">
<META NAME="KBCreate" CONTENT="1996/04/09">
<META NAME="Keywords" CONTENT="InLineAsmIss kbbuglist kbfixlist kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  When you use an enumerator in an inline assembly statement, incorrect code will be generated for the enumerator value. The following code fragment demonstrates the problem:     void main()    {    enum { FALL=1, WINTER, SPRING, SUMMER };     _asm {...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QBFY,QAR4,QBA8,QDL9,QBWO,QBWN,QBWP,QAPN,QAMA,QAAP,QAHF,QAKP,QAYA,QAHT V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Bad Code Generated for Inline Assembly Using Enumerators</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 19, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q149696</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
4.10
WINDOWS NT
kbprg kbbuglist kbfixlist
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Visual C++, 32-bit Edition, versions 4.1
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When you use an enumerator in an inline assembly statement, incorrect code
will be generated for the enumerator value. The following code fragment
demonstrates the problem:
<P>
<PRE>   void main()
   {
   enum { FALL=1, WINTER, SPRING, SUMMER };

   _asm {
        mov eax, WINTER  ; &lt;--- This will incorrectly load 'eax'
                          ;      with something other than 2.
        }
   }

</PRE><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. This bug was corrected in Visual C++ 32-
bit Edition version 4.2.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
This problem will impact developers that are using the Microsoft Windows 95
Device Driver Kit (DDK) or other tools that are used to build VXD drivers
with C/C++. The DDK provides C/C++ header files that use enumerators and
inline assembly in this fashion.
<P>
There are no workarounds for this problem. The following are possible
alternatives if the developer is at liberty to modify the source code:
<P>
<PRE>   void main()
   {

   #define FALL   1
   #define WINTER 2
   #define SPRING 3
   #define SUMMER 4

   _asm {
        mov eax, WINTER
        }
   }

</PRE>The drawback to the #define directive method is that it has no scope.
Another method that does have scope is this:
<P>
<PRE>   void main()
   {

   const int FALL   = 1,
             WINTER = 2,
             SPRING = 3,
             SUMMER = 4;

   _asm {
        mov eax, WINTER
        }
   }
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.10 10.10 4.20 10.20 vcbuglist410 vcfixlist420<BR>
KBCategory: kbprg kbbuglist kbfixlist<BR>
KBSubcategory: InLineAsmIss
<P>

Keywords          : InLineAsmIss kbbuglist kbfixlist kbprg<BR>
Version           : 4.10<BR>
Platform          : NT WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 19, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
