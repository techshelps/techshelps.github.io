

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: Function that Inherits Through Dominance Fails </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q116239">
<META NAME="KBModify" CONTENT="1997/07/31">
<META NAME="KBCreate" CONTENT="1994/06/14">
<META NAME="Keywords" CONTENT="CPPIss vcbuglist400 vcbuglist500">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Code that makes use of the C++ implicit invocation of a user-defined conversion causes the C/C++ compiler to generate the following error message:     error C2594: '=' : ambiguous conversions from 'class ::E ' to 'int '  C/C++ 9.00 gives the follow...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB4,QBFY,QA4Q,QAAP,QAY5,QAEQ,QABO,QAY2,QAKM,QBV8,QANY,QAGI,QAB9,QAKP,QDH9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: Function that Inherits Through Dominance Fails</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 31, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q116239</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft C/C++ Compiler (CL.EXE) included with:
   - Microsoft C/C++ for MS-DOS, version 7.0
   - Microsoft Visual C++ for Windows, versions 1.0, 1.5
   - Microsoft Visual C++ 32-bit Edition, versions 1.0, 2.0, 4.0, 4.1, 4.2,
<P><PRE>     5.0
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Code that makes use of the C++ implicit invocation of a user-defined
conversion causes the C/C++ compiler to generate the following error
message:
<P>
<PRE>   error C2594: '=' : ambiguous conversions from 'class ::E ' to 'int '

</PRE>C/C++ 9.00 gives the following level 2 warning and errors from the
implicit cast and only the warning from the explicit call:
<P>
<PRE>   warning C4250: 'E' : inherits 'B::operator`int'' via dominance
   error C2679: binary '=' : no operator defined which takes a right-
      hand operand of type 'class E' (or there is no acceptable conversion)
   error C2594: '=' : ambiguous conversions from 'class E' to 'int'

</PRE><h2>RESOLUTION</h2>
 
<P>
Explicitly invoke the user-defined conversion, as demonstrated in the
sample code in the "MORE INFORMATION" section below, rather then depending
on the implicit invocation.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the products listed at the
beginning of this article. We are researching this bug and will post new
information here in the Microsoft Knowledge Base as it becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Suppose a virtual-base class A is defined and classes B and C inherit from
class A. Furthermore, a class E inherits from both B and C. The two
classes, A and B, each provide a virtual user-defined conversion function
to "int". The relationship may be represented by the following directed
acyclic graph:
<P>
<PRE>                        A { int () }
                          ^      ^
                         /        \
                        /          \
                  B { int () }    C {}
                       ^           ^
                         \        /
                          \      /
                           E { }

</PRE>The dominance rule requires that when you invoke the virtual user-defined
conversion function to int from an instance of an object of type E, the
version provided by B should be used. This conversion function may be
invoked implicitly by assigning an instance of an object of type E to an
int. It may also be invoked explicitly through the use of the "operator
int" function.
<P>
As demonstrated by the following sample code, the compiler accurately
identifies and invokes the correct user-defined conversion function
when using the explicit call syntax. However, when attempting to make use
of the implicit conversion, the compiler produces an error, citing an
ambiguity in its search for the correct user-defined conversion function.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   /* Compile options needed: /W3
   */
   #include &lt;iostream.h&gt;

   class A
   {
   public:
       virtual operator int () { return 2; }
   };

   class B : virtual public A
   {
   public:
       virtual operator int () { return 3; }
   };

   class C : virtual public A {};

   class E : public B, public C {};

   void main(void)
   {
      int i;
      int error=0;

      E eObject;

      // Both of the invocations below should call B's
      // operator int ().

      if ((i = eObject) != 3)                // Fails to compile
         error = 1;

      if ((i = eObject.operator int()) != 3) // Compiles OK
         error = 1;

      if (!error)
         cout &lt;&lt; "PASSED" &lt;&lt; endl;
      else
         cout &lt;&lt; "FAILED" &lt;&lt; endl;
   }

</PRE><h2>REFERENCES</h2>
 
<P>
The Annotated C++ Reference Manual (ARM), Ellis and Stroustrup,
section 10.1.1, "Ambiguities," section 10.2, "Virtual Functions," and
section 12.3, "Conversions."
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 8.00 8.00c 9.00<BR>
Keywords          : CPPIss vcbuglist400 vcbuglist500<BR>
Version           : 7.0 1.0 1.5 2.0 4.0 4.1 4.2 5.0<BR>
Platform          : MS-DOS NT WINDOWS<BR>
Issue type        : kbbug<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 31, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
