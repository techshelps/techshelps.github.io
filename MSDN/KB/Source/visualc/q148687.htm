

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Clipboard Assistant - Paste Fails or Causes Hard Break </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q148687">
<META NAME="KBModify" CONTENT="1997/09/19">
<META NAME="KBCreate" CONTENT="1996/03/19">
<META NAME="Keywords" CONTENT="VwbIss kbcode kbprg kbtool kbbuglist kbfixlist">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Code generated by the Clipboard Assistant for a Custom Clipboard Format may cause the following problems:   - Copying to the clipboard fails to replace what was previously placed on    the clipboard.   - An access violation occurs with a message si...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QANH,QAH4,QAKP,QABI,QAKS,QA9N,QAR4,QAGI,QABH,QAY5,QBWP,QAM1,QAKE,QAC1,QABA V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Clipboard Assistant - Paste Fails or Causes Hard Break</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 19, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q148687</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual C++, 32-bit Edition, versions 4.0, 4.1, 4.2
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Code generated by the Clipboard Assistant for a Custom Clipboard
Format may cause the following problems:

<UL><LI>Copying to the clipboard fails to replace what was previously placed on
   the clipboard.

<LI>An access violation occurs with a message similar to the following:
<P>
   Exception: access violation (0xc0000005),
   Address: 0x5f82cf37

<LI>An unexpected memory overwrite occurs after several clipboard
   operations.

<LI>On the Checked build of Windows NT, a Cut, Copy, or Paste operation
   causes a hard-coded breakpoint to be encountered and a trace message
   similar to the following to be generated:
<P>
   BASE: GlobalFree called with a locked object.
<P>
</UL><h2>CAUSE</h2>
 
<P>
The first three problems can occur because of the OnEditPaste function
generated by the Clipboard Assistant. The code is not correct because it
frees the HGLOBAL that it retrieves from the clipboard when doing a paste
operation. This memory should not be freed because the Clipboard will free
it when necessary. The code also fails to call CloseClipboard for all
possible calls to OpenClipboard.
<P>
The fourth problem is caused by a separate bug in the CSharedFile::Detach()
function. For more details on this problem, please see the following
article in the Microsoft Knowledge Base:
<P>
<PRE>  ARTICLE-ID: <B><A HREF="../VISUALC/Q148455.htm">Q148455</A></B>
  TITLE     : BUG: CSharedFile::Detach() Does Not Call GlobalUnlock()

</PRE><h2>RESOLUTION</h2>
 
<P>
The sample code in this article shows new versions of the OnEditCopy,
OnEditCut, and OnEditPaste functions. You should use this code to replace
the versions previously generated by the Clipboard Assistant.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. This problem has been fixed in Visual C++
version 5.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Sample Code to Resolve Problem</h3>
 
<P>
<PRE>   /* Compile options needed: Default AppWizard options  */

   void CMyView::OnEditCopy()
   {
   // CG: This block was added by the Clipboard Assistant component
     {
       CSharedFile memFile;
       CArchive ar(&amp;memFile, CArchive::store|CArchive::bNoFlushOnDelete);

       // serialize data to archive object
       DoCutCopyPaste(ar, FALSE);

       ar.Flush();

       HGLOBAL hData = memFile.Detach();
       //Resolution for CSharedFile::Detach() problem
       //Check <B><A HREF="../VISUALC/Q148455.htm">Q148455</A></B> for current status.
       // _MFC_VER might need to be updated.
       #if _MFC_VER &lt;= 0x0420
         ::GlobalUnlock(hData);
       #endif

       if (OpenClipboard())
       {
         ::SetClipboardData(m_nClipboardFormat, hData);
         CloseClipboard();
       }
       else
         AfxMessageBox(CG_IDS_CANNOT_OPEN_CLIPBOARD);
     }
   }

   void CMyView::OnEditCut()
   {
     // CG: This block was added by the Clipboard Assistant component
     {
       CSharedFile memFile;
       CArchive ar(&amp;memFile, CArchive::store|CArchive::bNoFlushOnDelete);

       // Serialize data to archive object
       DoCutCopyPaste(ar, TRUE);

       ar.Flush();

       HGLOBAL hData = memFile.Detach();

       //Resolution for CSharedFile::Detach() problem
       //Check <B><A HREF="../VISUALC/Q148455.htm">Q148455</A></B> for current status.
       // _MFC_VER might need to be updated.
       #if _MFC_VER &lt;= 0x0420
         ::GlobalUnlock(hData);
       #endif

       if (OpenClipboard())
       {
         ::SetClipboardData(m_nClipboardFormat, hData);
         CloseClipboard();
       }
       else
         AfxMessageBox(CG_IDS_CANNOT_OPEN_CLIPBOARD);
     }
   }

   void CMyView::OnEditPaste()
   {
     // CG: This block was added by the Clipboard Assistant component
     {
       if (OpenClipboard())
       {
         HANDLE hData = ::GetClipboardData(m_nClipboardFormat);
         if (hData != NULL)
         {
           CSharedFile memFile;
           memFile.SetHandle(hData,FALSE);
           CArchive ar(&amp;memFile, CArchive::load);

           // Serialize data to document
           DoCutCopyPaste(ar, FALSE);
           ar.Close();

           //Resolution for CSharedFile::Detach() problem
           //Check <B><A HREF="../VISUALC/Q148455.htm">Q148455</A></B> for current status.
           // _MFC_VER might need to be updated.
           #if _MFC_VER &lt;= 0x0420
             ::GlobalUnlock(memFile.Detach());
           #else
             memFile.Detach();
           #endif
         }
         else
           AfxMessageBox(CG_IDS_CANNOT_GET_CLIPBOARD_DATA);

         CloseClipboard();
       }
       else
         AfxMessageBox(CG_IDS_CANNOT_OPEN_CLIPBOARD);
     }
   }

</PRE> 
<PRE>Keywords          : VwbIss kbcode kbprg kbtool kbbuglist kbfixlist
Technology        : kbMfc
Version           : 4.0 4.1 4.2
Platform          : NT WINDOWS
Issue type        : kbbug
Solution Type     : kbfix</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 19, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
