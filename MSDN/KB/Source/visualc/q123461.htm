

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: const char* not same as const CPTR where #typedef char* C </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q123461">
<META NAME="KBModify" CONTENT="1997/08/26">
<META NAME="KBCreate" CONTENT="1994/12/01">
<META NAME="Keywords" CONTENT="CLIss">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The following program compiles, but one of the following warnings appears:     C4090: 'initializing' : different 'const' qualifiers:  -or-     C2440: 'initializing' : cannot convert from 'const char *' to 'char *'                            Convers...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAKJ,QAJQ,QBQU,QBFY,QBVV,QAUD,QAO3,QAO2,QAB4,QAKD,QAH4,QBXS,QA56,QA55,QA4F V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: const char* not same as const CPTR where #typedef char* C</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 26, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q123461</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft C/C++ Compiler (CL.EXE) included with:
   - Microsoft Visual C++, 32-bit Edition, version 2.0, 2.1, 4.0, 5.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The following program compiles, but one of the following warnings appears:
<P>
<PRE>   C4090: 'initializing' : different 'const' qualifiers:

</PRE>-or-
<P>
<PRE>   C2440: 'initializing' : cannot convert from 'const char *' to 'char *'
                           Conversion loses qualifiers

   const char *ReturnConstantPtr()
   {
      const char *p = "can't touch this";
      return p;
   }

   void main()
   {
       char *p = ReturnConstantPtr();
   }

</PRE>However, the above program will compile without exception if a type
definition is used for char* as follows:
<P>
<PRE>   #typedef char* CPTR;

   const CPTR ReturnConstantPtr()
   {
       const CPTR p = "can't touch this";
       return p;
   }

   void main()
   {
       CPTR p = ReturnConstantPtr();
   }

</PRE><h2>CAUSE</h2>
 
<P>
This occurs for two reasons.  First, typedefs are not macros, so modifiers
like const or volatile apply to the whole construct.  When the following
are used
<P>
<PRE>   #typedef  char*  CPTR
   const  CPTR  cPtr;

</PRE>they are equivalent to "char* const cPtr;" not "const char* cPtr;."
<P>
Second, since "char* const cPtr;" declares cPtr as a constant pointer to
character data and "const char* cPtr;" declares cPtr as a pointer to
constant character data, the two declarations are quite different.
<P>
Thus, a "different const qualifier" warning is generated for
<P>
<PRE>   char *p = ReturnConstantPtr();

</PRE>because it is trying to set p equal to a pointer that points to a constant
character whose value *p could try to change.  Alternatively, no warning is
generated for
<P>
<PRE>   CPTR p = ReturnConstantPtr();

</PRE>because it is setting p equal to a constant pointer that points to a
character whose value *p may freely change.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information on the const keyword, search the online documentation
provided with Visual C++, 32-bit edition, for "const" or "constant values."
For more information on the typedef keyword, search the online
documentation for "#typedef" or "typedef specifier."
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 9.00<BR>
Keywords          : CLIss<BR>
Version           : WINDOWS NT:2.0,2.1,4.0,5.0<BR>
Platform          : NT WINDOWS<BR>
Issue type        : kbprb<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 26, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
