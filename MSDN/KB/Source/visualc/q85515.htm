

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Foundation Class Collections Limited to 32K Total Objects </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q85515 ">
<META NAME="KBModify" CONTENT="1997/07/17">
<META NAME="KBCreate" CONTENT="1992/06/11">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Each object of the  collection  classes provided by the Microsoft Foundation Classes can store no more than 32,767 objects.  Collection classes include the following:     Arrays          Lists           Maps    -------------------------------------...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QBJQ,QAW6,QABO,QA4Q,QATJ,QAB5,QAH4,QAWH,QBXT,QA5V,QA28,QAIB,QAE1,QAPF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Foundation Class Collections Limited to 32K Total Objects</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 17, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q85515 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
7.00   | 1.00 1.50 1.51 1.52
MS-DOS | WINDOWS
kbprg
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
<P>
<P><PRE>    - Microsoft C/C++ version 7.0
    - Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51,
      and 1.52
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Each object of the "collection" classes provided by the Microsoft
Foundation Classes can store no more than 32,767 objects.
<P>
Collection classes include the following:
<P>
<PRE>   Arrays          Lists           Maps
   ----------------------------------------------------

   CByteArray      CObList         CMapPtrToWord
   CDWordArray     CPtrList        CMapPtrToPtr
   CObArray        CStringList     CMapStringToOb
   CPtrArray                       CMapStringToOb
   CStringArray                    CMapStringToString
   CWordArray                      CMapWordToOb
                                   CMapWordToPtr

</PRE><h2>MORE INFORMATION</h2>
 
<P>
Each of the Microsoft Foundation Classes collection classes uses a
signed integers to store the total number of objects in an object of
the class. In MS-DOS and 16-bit Windows, a signed integer is limited
to 32K. In Windows NT, a 32-bit signed integer can index up to 2
billion items.
<P>
If you need to store more than 32K objects in a collection object, you
can create a collection class that does not use an "int" to index the
array.
<P>
The TEMPLDEF sample program includes a sample "list" implementation,
which may be modified to implement a collection of more than 32K
objects. Changing the type of the list's index variable from an "int"
to a "long" allows an application to create a list that contains up to
2,048,000 objects.
<P>
To implement the modified "list" class, perform the following six
steps:

<OL><P><LI>Build the TEMPLDEF sample application in the Microsoft Foundation
   Classes Samples directory.

<P><LI>Copy the LIST.CTT template to LLIST.CTT. This file will contain the
   new "list" class.

<P><LI>Make the following five changes to LLIST.CTT:
<P>
   a. Change all occurrences of CList to CLongList. CLongList is the
<P><PRE>      base for the new list class.
</PRE><P>
   b. Change the line
<P>
<PRE>         int  GetCount() const

      to the following:

         long GetCount() const

      and change

         _AFXCOLL_INLINE int CLongList&lt;TYPE, ARG_TYPE, IS_SERIAL,
         HAS_CREATE&gt;::GetCount() const

      to the following:

         _AFXCOLL_INLINE long CLongList&lt;TYPE, ARG_TYPE, IS_SERIAL,
         HAS_CREATE&gt;::GetCount() const

   c. Change the line

         POSITION FindIndex(int nIndex) const;

      to the following:

         POSITION FindIndex(long nIndex) const;

   d. Change the line

         int     m_nCount;

      to the following:

         long    m_nCount;

   e. Change the line

         POSITION CLongList&lt;TYPE, ARG_TYPE, IS_SERIAL,
           HAS_CREATE&gt;::FindIndex(int nIndex) const

      to the following:

         POSITION CLongList&lt;TYPE, ARG_TYPE, IS_SERIAL,
           HAS_CREATE&gt;::FindIndex(long nIndex) const

</PRE><P><LI>Create the LLIST_O.H and LLIST_O.CPP files using the following
   command:
<P>
<P><PRE>      templdef "CLongList&lt;CObject*,CObject*,0,0&gt; CObLongList"
<PRE></PRE>          llist.ctt llist_o.h llist_o.inl llist_o.cpp

   Make sure that LLIST_O.H is included in LLIST_O.CPP.

</PRE><P><LI>Copy the PLEX.H file from the Microsoft Foundation Classes Source
   (SRC) directory to the Microsoft Foundation Classes INCLUDE
   directory.

<P><LI>Add the following line to the LLIST_O.H file:
<P>
<P><PRE>      // Inline function declarations
      #ifdef _AFX_ENABLE_INLINES
      #include "llist_o.inl"
      #endif //_AFX_ENABLE_INLINES
</PRE>
<P><LI>Add the following line to the LLIST_O.CPP file:
<P>
<P><PRE>      // Inlines
      #ifndef _AFX_ENABLE_INLINES
      #define _AFXCOLL_INLINE
      #include "llist_o.inl"
      #endif //!_AFX_ENABLE_INLINES
</PRE><P>
</OL>The LLIST_O.CPP and LLIST_O.H files contain the code to implement the
CLongList class. A CLongList object can contain up to 2,048K CObject-
type objects. To use this class, compile the LLIST_O.CPP file and link
the LLIST_O.OBJ file with your source code.
<P>
NOTE: You cannot serialize a CLongList object because serialization
does not support more than 32K objects in an instance of a class.
<P>
The TEMPLDEF sample program also provides the source code for ARRAY
and MAP classes in the ARRAY.CTT and MAP.CTT files, respectively. You
can modify these files as above to create map classes that support
more than 32K elements.
<P>
The ARRAY class has an additional limitation. The CObArray class
implements an "array" of pointers to CObjects or objects derived from
CObject. This array, and about 100 bytes of overhead, must reside in
one 64K segment. Therefore, the array is limited to approximately
32,000 elements if the CObject pointers are 16-bit near pointers (as
appropriate for the small or medium memory models) or 16,000 elements
if the pointers are 32-bit far pointers (as appropriate for the
compact and large memory models).
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 7.00 1.00 1.50 2.00 2.50 2.51 2.52<BR>
KBCategory: kbprg kbfasttip<BR>
KBSubcategory: MfcMisc<BR>
Keywords            : kb16bitonly<BR>
Technology          : kbMfc<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 17, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
