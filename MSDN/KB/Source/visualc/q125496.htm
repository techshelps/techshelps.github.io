

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: _dos_findfirst() with _A_VOLID on MS-DOS vs. Windows NT </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q125496">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1995/01/30">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  A program calling _dos_findfirst() with the _A_VOLID attribute set behaves differently when run under MS-DOS versus Windows NT. When it's run under MS- DOS, the call can specify any subdirectory and get the volume ID back, if one exists. However wh...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWP,QAFI,QBXB,QATJ,QBFY,QAGI,QAVV,QAY5,QBWS,QDL9,QBWQ,QBWO,QBWN,QA7T,QA4H V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: _dos_findfirst() with _A_VOLID on MS-DOS vs. Windows NT</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q125496</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
7.00   | 1.00 1.50 1.51
MS-DOS | WINDOWS
kbprg kbprb
<P>
 
The information in this article applies to:

<UL><LI>The C Run-time (CRT) included with:
<P>
<P><PRE>    - Microsoft C/C++ version 7.0
    - Microsoft Visual C++ for Windows, versions 1.0, 1.5, and 1.51
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
A program calling _dos_findfirst() with the _A_VOLID attribute set behaves
differently when run under MS-DOS versus Windows NT. When it's run under MS-
DOS, the call can specify any subdirectory and get the volume ID back, if
one exists. However when it's run under Windows NT, you will only get the
volume ID back if the call specifies the root directory.
<P>
<P><h2>CAUSE</h2>
 
<P>
This is not a problem with the C Run-time library.
<P>
The _dos_findfirst() function puts the user-supplied parameters into
the appropriate registers and issues an INT 21h call. The differences
observed are due to different operating system implementations of INT
21h Function 4Eh.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
In order to avoid different behavior when getting the volume ID using
_dos_findfirst(), always specify the root directory when making the call.
<P>
<P><h2>STATUS</h2>
 
<P>
This behavior is by design.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following sample code demonstrates this behavior. Make sure you have a
volume ID defined for your C drive and that you have a C:\DOS subdirectory
containing at least one file. Then run the program first under MS-DOS, then
under Windows NT.
<P>
The output when run under MS-DOS is:
<P>
<PRE>   _dos_findfirst succeeded in the root directory
   _dos_findfirst succeeded in the DOS directory

</PRE>The output when run under Windows NT is:
<P>
<PRE>   _dos_findfirst succeeded in the root directory
   _dos_findfirst failed in the DOS directory

</PRE><h3>Sample Code</h3>
 
<P>
<PRE>/* Compile options needed: none
*/

#include &lt;stdio.h&gt;
#include &lt;dos.h&gt;

void main()
</PRE>{
<PRE>   struct _find_t info;

   if (!_dos_findfirst("c:\\*.*",_A_VOLID,&amp;info))
      printf("_dos_findfirst succeeded in the root directory\n");
   else printf("_dos_findfirst failed in the root directory\n");

   if (!_dos_findfirst("c:\\dos\\*.*",_A_VOLID,&amp;info))
      printf("_dos_findfirst succeeded in the DOS directory\n");
   else printf("_dos_findfirst failed in the DOS directory\n");
</PRE>}
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 7.00 1.00 1.50<BR>
KBCategory: kbprg kbprb<BR>
KBSubcategory: CRTIss<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
