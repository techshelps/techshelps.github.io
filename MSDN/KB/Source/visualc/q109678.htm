

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: CodeView/Visual Workbench Can't Watch static const Member </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q109678">
<META NAME="KBModify" CONTENT="1997/09/18">
<META NAME="KBCreate" CONTENT="1994/01/06">
<META NAME="Keywords" CONTENT="WBDebug kbbuglist kbfixlist kbtool">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  If you try to watch a static const member of a class in CodeView or the Visual Workbench debugger by placing a watch on classname::member, the debugger will display the error     CXX0030 expression not evaluatable  -or-     CXX0017 expression canno...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QATK,QATL,QAR4,QA56,QA55,QA4Q,QAIS,QAYL,QAAP,QDL9,QBWQ,QBWO,QBWN,QBWP,QBVV V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: CodeView/Visual Workbench Can't Watch static const Member</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q109678</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00 1.50 | 1.00 2.00
<PRE>WINDOWS   | WINDOWS NT
</PRE>kbtool kbfixlist kbbuglist
<P>
 
The information in this article applies to:
<UL><LI>Microsoft CodeView for MS-DOS, versions 4.0, 4.01, and 4.1
<LI>Microsoft CodeView for Windows, versions 4.0, 4.01, and 4.1
<LI>Microsoft CodeView for Win32s, version 4.25

<LI>The Visual Workbench Integrated Debugger, included with:
<P>
<P><PRE>    - Microsoft Visual C++ for Windows, versions 1.0 and 1.5
    - Microsoft Visual C++, 32-bit Edition, versions 1.0 and 2.0
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
If you try to watch a static const member of a class in CodeView or the
Visual Workbench debugger by placing a watch on classname::member, the
debugger will display the error
<P>
<PRE>   CXX0030 expression not evaluatable

</PRE>-or-
<P>
<PRE>   CXX0017 expression cannot be evaluated

</PRE>or it will show invalid information. Also, if you try to watch the class
that contains the static const member and expand the class to look at the
members, the debugger will not display the correct information for the
static const member.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
You can work around this by making the member variable static and not
const, or by setting a watch on an instance of the class. For example, set
the watch on scmemGlobal.scInt in the sample code below.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products
listed at the beginning of this article. This problem was corrected in
Visual C++ version 2.1.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>/* Compile options needed: /Zi /Od
*/

#include &lt;stdio.h&gt;

</PRE>class CSCMember
{
public:
<PRE>    static const int scInt;
    static int sInt;
    const int cInt;
</PRE>public:
<PRE>    CSCMember () : cInt(4) {};
</PRE>};
<P>
const int CSCMember::scInt= 2;
<PRE>int CSCMember::sInt= 3;

</PRE>CSCMember scmemGlobal;
<P>
<PRE>void main ()
</PRE>{
<PRE>    /*
    The first line prints the correct value, but you cannot
    watch the variable in the debugger by placing a watch on
    CSCMember::scInt or by watching the members of scmemGlobal.
    */
    printf ("static const member= %d\n", scmemGlobal.scInt);
    printf ("static member= %d\n", scmemGlobal.sInt);
    printf ("const member= %d\n", scmemGlobal.cInt);
</PRE>}
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 4.10 1.00 1.10 1.50 2.00<BR>
KBCategory: kbtool kbfixlist kbbuglist<BR>
KBSubcategory: WBDebug<BR>
Keywords          : WBDebug kbbuglist kbfixlist kbtool<BR>
Version           : 1.00 1.50 | 1.00 2.00<BR>
Platform          : NT WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
