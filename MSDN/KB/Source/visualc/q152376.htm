

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How To Disable Push Buttons on a DialogBar in MFC </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q152376">
<META NAME="KBModify" CONTENT="1997/07/31">
<META NAME="KBCreate" CONTENT="1996/06/12">
<META NAME="Keywords" CONTENT="MfcDocView MfcUI kbhowto kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Push-button controls on a DialogBar cannot be disabled by calling EnableWindow. The following code has no effect:     GetDlgItem(IDC_BUTTON1)-&gt;EnableWindow(FALSE);  This article describes how to implement push-button controls that can be disabled. ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB5,QBXS,QA7O,QA4P,QAOE,QAMN,QBWP,QBFY,QABO,QDL9,QBWQ,QBWO,QBWN,QDMW,QA7R V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How To Disable Push Buttons on a DialogBar in MFC</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 31, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q152376</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00 1.50 1.51 1.52 | 1.00 2.00 2.10 2.20 4.00 4.10
<PRE>WINDOWS             | WINDOWS NT
</PRE>kbprg kbhowto
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC), included with:
   - Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51, 1.52,
<P><PRE>     1.52b, 1.52c
</PRE>   - Microsoft Visual C++, 32-bit Edition, versions 1.0, 2.0, 2.1, 2.2,
<P><PRE>     4.0, 4.1
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Push-button controls on a DialogBar cannot be disabled by calling
EnableWindow. The following code has no effect:
<P>
<PRE>   GetDlgItem(IDC_BUTTON1)-&gt;EnableWindow(FALSE);

</PRE>This article describes how to implement push-button controls that can be
disabled.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Controls on a DialogBar behave like the bitmaps on a Toolbar. They can be
enabled or disabled by manually adding an ON_UPDATE_COMMAND_UI within the
message map of the appropriate class (such as CMainFrame).
<P>
<P><h3>Step-by-Step Example</h3>
 
<P>
After you have placed a control on your DialogBar, such as a push-button
with a resource ID of IDC_BUTTON1, use the following steps to manage the
state of the control:

<OL><P><LI>Within the declaration of your class, add the declaration for a handler
   function:
<P>
   afx_msg void OnUpdateButton1(CCmdUI* pCmdUI);

<P><LI>Within the implementation of your class, add a manual entry in the
   message map:
<P>
   BEGIN_MESSAGE_MAP(CMainFrame, CMDIFrameWnd)
<P><PRE>       //{{AFX_MSG_MAP(CMainFrame)
       ...
       //}}AFX_MSG_MAP
       ON_UPDATE_COMMAND_UI(IDC_BUTTON1, OnUpdateButton1)
</PRE>   END_MESSAGE_MAP()

<P><LI>Provide the definition of the handler function, as follows:
<P>
<PRE>   void CMainFrame::OnUpdateButton1(CCmdUI* pCmdUI)
   {
       pCmdUI-&gt;Enable( TRUE );
   }
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 1.50 1.51 1.52 2.00 2.10 2.20 4.00 4.10<BR>
KBCategory: kbprg kbhowto<BR>
KBSubcategory: MfcUI MfcDocView<BR>
Keywords          : MfcDocView MfcUI kbhowto kbprg<BR>
Technology        : kbMfc<BR>
Version           : 1.00 1.50 1.51 1.52 | 1.00 2.00<BR>
Platform          : NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 31, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
