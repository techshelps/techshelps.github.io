

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INFO: _DEBUG Must Be Defined When Linking to Debug Libraries </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q85514 ">
<META NAME="KBModify" CONTENT="1997/10/10">
<META NAME="KBCreate" CONTENT="1992/06/11">
<META NAME="Keywords" CONTENT="MfcMisc kbfasttip kbinfo">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  To link an application with the debugging version of the Microsoft Foundation Class (MFC) libraries, the source code must define the _DEBUG macro at compile time. Specify the name of the appropriate MFC library on the LINK command line before the n...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBFY,QBHQ,QBV8,QAH4,QAVX,QA56,QA55,QAD7,QBSO,QBJQ,QAG2,QBXT,QBXS,QA5V,QAIB V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INFO: _DEBUG Must Be Defined When Linking to Debug Libraries</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q85514 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
<P><PRE>    - Microsoft C/C++ version 7.0
    - Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51, 1.52
    - Microsoft Visual C++, 32-bit Edition, version 1.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
To link an application with the debugging version of the Microsoft
Foundation Class (MFC) libraries, the source code must define the _DEBUG
macro at compile time. Specify the name of the appropriate MFC library on
the LINK command line before the name of the appropriate C/C++ Run-time
Library.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The debugging versions of the MFC libraries provide additional debugging
information in functions that the C/C++ run-time libraries normally provide
(such as "new" and "delete"). An attempt to link code compiled when
the_DEBUG macro is not defined with the debugging libraries may fail and
LINK may generate errors similar to the following:
<P>
<PRE>   C:\...\MFC\lib\safxcwd.lib(memory.cpp) : error L2025: public:
      static void __near* __near __cdecl
      CObject::operator new(unsigned int) : symbol defined
      more than once

   C:\...\MFC\lib\safxcwd.lib(memory.cpp) : error L2025: public:
      static void __near __cdecl
      CObject::operator delete(void __near*) : symbol defined
      more than once

</PRE>When compiling from the command line, use the /D compiler option to
specify the _DEBUG macro. For example, in Microsoft C/C++ version 7.0
for MS-DOS and Windows or in Visual C++ version 1.0 or 1.5 for Windows,
the command line might look like the following:
<P>
<PRE>   cl /AS /D_DEBUG test.cpp safxcwd.lib

</PRE>In Visual C++ 32-bit edition version 1.0, the command line might look
like the following:
<P>
<PRE>   cl /D_DEBUG /D_X86_ test.cpp nafxcwd

</PRE>When you compile code that uses the Microsoft Foundation Classes in
Programmer's WorkBench (PWB), select the Use MFC Libraries option. (To
do so, choose Language Options from the Options menu, then choose
Compiler Options, choose Additional Compiler Options, and select MFC
Libraries. Then choose OK.) PWB automatically inserts the /D_DEBUG
option when it compiles the debugging version of your application. The
PWB-generated LINK command specifies the appropriate Microsoft
Foundation Classes library and the appropriate C/C++ Run-time Library
in the correct order.
<P>
When you compile code that uses the Microsoft Foundation Classes in
Visual Workbench (VWB) in Visual C++ 1.0 or 1.5 for Windows, or Visual
C++, 32-bit edition, version 1.0, select the Use MFC Libraries option. (To
do so, choose Project from the Options menu, then select Use Microsoft
Foundation Classes and choose OK.) VWB automatically inserts the /D_DEBUG
option when is compiles the debugging version of your application. The VWB-
generated LINK command specifies the appropriate Microsoft Foundation
Classes library and the appropriate C/C++ run-time library in the
correct order.
<P>
In Visual C++, 32-bit Edition, version 2.0 and later, internal makefiles
automatically include a /D_DEBUG option on the build line debug targets.
Therefore, removing /D_DEBUG from the preprocessor command line options
does not cause an error.
 
<PRE>Keywords          : MfcMisc kbfasttip kbinfo
Technology        : kbmfc
Version           : 1.0 1.5 1.51 1.52 7.0
Platform          : MS-DOS NT WINDOWS</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
