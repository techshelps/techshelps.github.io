

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Memory Leak Reported in PLEX.CPP When Using CSocket </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q136080">
<META NAME="KBModify" CONTENT="1997/09/18">
<META NAME="KBCreate" CONTENT="1995/08/31">
<META NAME="Keywords" CONTENT="MfcMisc kbbuglist kbfixlist kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Running an application that uses the CSocket class causes a memory leak report to be generated when the application exits. The memory leak report will be similar to this:     {1555} plex.cpp(28) : non-object block at $002ECC8C, 132 bytes long  CAUS...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAEV,QAR4,QBW6,QAW6,QAPN,QAM1,QAYC,QAKJ,QBWP,QBVV,QAUQ,QAGB,QAJH,QBFY,QA56 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Memory Leak Reported in PLEX.CPP When Using CSocket</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q136080</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
2.10 2.20
WINDOWS NT
kbprg kbfixlist
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
   Microsoft Visual C++, 32-bit Edition, versions 2.1 and 2.2
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Running an application that uses the CSocket class causes a memory leak
report to be generated when the application exits. The memory leak report
will be similar to this:
<P>
<PRE>   {1555} plex.cpp(28) : non-object block at $002ECC8C, 132 bytes long

</PRE><h2>CAUSE</h2>
 
<P>
The CSocket class will queue up socket notification messages while it waits
for a particular socket operation to complete. These messages are stored in
CPtrList (m_listSocketNotifications) on a per-thread basis. This object is
destroyed when the thread-state information for that thread is cleaned-up.
Unfortunately the thread-state information for the primary thread is not
cleaned-up until after the memory leak detection is performed.
<P>
Because MFC does not take care to free the plex objects associated with
this list before the list is destroyed, the perceived memory leak is
reported.
<P>
Because the problem is related to the frequency and sequence of the socket
notification messages being received, the memory leak message might not
occur every time the program is executed. It might only be seen under
certain circumstances.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
This message will only occur when CSocket objects are used in the primary
thread. The message can be safely ignored because the
m_listSocketNotifications object is actually being safely deleted before
the application exits, so the memory will be freed then.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. This problem was fixed in Microsoft
Visual C++, 32-bit Edition, version 4.0.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 2.10 2.20 3.10 3.20 3.1 3.2<BR>
KBCategory: kbprg kbfixlist kbbuglist<BR>
KBSubcategory: MfcMisc<BR>
Keywords          : MfcMisc kbbuglist kbfixlist kbprg<BR>
Technology        : kbMfc<BR>
Version           : 2.10 2.20<BR>
Platform          : NT WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
