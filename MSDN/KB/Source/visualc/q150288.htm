

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Enable Selection Button in Print Dialog Box </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q150288">
<META NAME="KBModify" CONTENT="1997/07/31">
<META NAME="KBCreate" CONTENT="1996/04/25">
<META NAME="Keywords" CONTENT="MfcPrinting kbcode kbhowto kbprg kbprint">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  By design, the Selection button is disabled on the Print dialog box created by the MFC framework. This article describes how to enable the Selection button and provides a code segment illustrating how to support selection printing in a CEditView cl...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAOX,QABO,QA2Q,QAY2,QAY5,QA01,QATX,QAMB,QAGI,QAML,QABH,QABI,QAH4,QBV8,QAB9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Enable Selection Button in Print Dialog Box</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 31, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q150288</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.50 1.51 1.52 | 2.00 2.10 2.20 4.00 4.10
<PRE>WINDOWS        | WINDOWS NT
</PRE>kbprg kbprint kbhowto kbcode
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
<P>
<P><PRE>    - Microsoft Visual C++ for Windows, versions 1.5, 1.51, 1.52
    - Microsoft Visual C++, 32-bit Edition,
      versions 2.0, 2.1, 2.2, 4.0, 4.1
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
By design, the Selection button is disabled on the Print dialog box created
by the MFC framework. This article describes how to enable the Selection
button and provides a code segment illustrating how to support selection
printing in a CEditView class.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
When you choose Print from the File menu from any AppWizard-generated
application, the PD_NOSELECTION style for the CPrintDialog disables the
Selection button on the Print dialog box. The enabling task can be
performed before the Print dialog box is displayed in the
OnPreparePrinting() function of any CView derived class.
<P>
The CEditView class in MFC does not support selection printing. However,
selection printing can be accomplished in a CEditView class as outlined in
the "Sample Code" section in this article.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Sample Code</h3>
 
<P>
Steps to support selection printing in a CEditView class:

<OL><P><LI>Derive a class from CEditView if one is not found.

<P><LI>Add the following member variables related to selection printing to the
   CEditView derived class:
<P>
   class CMyEditView : public CEditView
<P><PRE>       {
       // TRUE for selection printing; FALSE otherwise.
<PRE></PRE>       BOOL    m_bPrintSelection;

       // Position of the next character to be printed in the current
       // selection. It is 0 when no selection is found. If
       // selection is found, then initially it will be equal to the
       // position of the first character in the current selection.
       // And its value will be incremented until you are done with
       // selection printing.
       int    m_nNextSelCharToBePrint;

       // Position of the first unselected character past the end of
       // the current selection. It is 0 when no selection is found.
       int    m_nFirstNonSelChar;

       ...
       };

</PRE><P><LI>Initialize the member variables from step 2 in the constructor function
   of the CEditView derived class:
<P>
   CMyEditView::CMyEditView()
<P><PRE>       {
       // Initially, no selected text is found from CEditView window.
       m_bPrintSelection = FALSE;
       m_nNextSelCharToBePrint = m_nFirstNonSelChar = 0;
</PRE><P>
<P><PRE>       ...
       }
</PRE>
<P><LI>Override the OnPreparePrinting() function in the class derived from
   the CEditView class. Add the following code to enable the Selection
   button if selected text is found from CEditView. Also, make selection
   printing the default printing in Print dialog box:
<P>
   BOOL CMyEditView::OnPreparePrinting(CPrintInfo* pInfo)
<P><PRE>       {
       // Is there any selected text in CEditView window? If the
       // selected text is found, enable the Selection button
       // and then have it checked so selection printing is performed
       // by default.
       GetEditCtrl().GetSel(m_nNextSelCharToBePrint,
<PRE></PRE>                            m_nFirstNonSelChar);
       if (m_nNextSelCharToBePrint != m_nFirstNonSelChar)
           {
           // Enable the Selection button.
           pInfo-&gt;m_pPD-&gt;m_pd.Flags &amp;= ~PD_NOSELECTION;

           // Checked the Selection button.
           pInfo-&gt;m_pPD-&gt;m_pd.Flags |= PD_SELECTION;
           }

       // Call the base class OnPreparePrinting() to display the
       // Print dialog box.
       BOOL rvalue = CEditView::OnPreparePrinting(pInfo);

       // Now check to see whether selection printing should be
       // performed or not. TRUE if the user selects the selection
       // printing; FALSE otherwise.
       m_bPrintSelection = pInfo-&gt;m_pPD-&gt;PrintSelection();

       return rvalue;
       }

</PRE><P><LI>Override the OnPrepareDC() function of the CEditView derived class. The
   function is called for every page to be printed and before OnPrint() is
   called. Stop the MFC framework from calling OnPrint() again if the
   selection printing from the last call to OnPrint() function is finished.
   Set the pInfo-&gt;m_bContinuePrinting to TRUE to continue selection
   printing or FALSE to discontinue.
<P>
<PRE>   void CMyEditView::OnPrepareDC(CDC* pDC, CPrintInfo* pInfo)
       {
       // If this is for selection printing, you should check whether
       // you are at the end of the selected text yet, i.e.
       // m_nNextSelCharToBePrint equals to m_SelectionStop.
       // m_bContinuePrinting is TRUE if you are not at the end of the
       // selected text; FALSE otherwise.
       if (m_bPrintSelection)
           {
           pInfo-&gt;m_bContinuePrinting =
               m_nNextSelCharToBePrint &lt; m_nFirstNonSelChar;
           }
       else
           {
           CEditView::OnPrepareDC(pDC, pInfo);
           }
       }

</PRE><P><LI>Override the OnPrint() function of the CEditView derived class. Use
   PrintInsideRect(), a public member function of CEditView, to print the
   selected text in the rectangle specified by the pInfo-&gt;m_rectDraw
   variable. The return value of PrintInsideRect() is the index of the next
   character to be printed; the character following the last character
   rendered:
<P>
<PRE>   void CMyEditView::OnPrint(CDC* pDC, CPrintInfo* pInfo)
       {
       if (m_bPrintSelection)
           {
           m_nNextSelCharToBePrint =
               PrintInsideRect(pDC, pInfo-&gt;m_rectDraw,
               m_nNextSelCharToBePrint, m_nFirstNonSelChar);
           }
       else
           {
           CEditView::OnPrint(pDC, pInfo);
           }
       }

</PRE></OL><h2>REFERENCES</h2>
 
<P>
For more information about the MFC printing, see:
<P>
"Programming with the Microsoft Foundation Class Library" in Books Online.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.50 1.51 1.52 1.00 2.00 2.10 2.20 4.00 4.10<BR>
KBCategory: kbprg kbprint kbhowto kbcode<BR>
KBSubcategory: MfcPrinting<BR>
Keywords          : MfcPrinting kbcode kbhowto kbprg kbprint<BR>
Technology        : kbMfc<BR>
Version           : 1.50 1.51 1.52 | 2.00 2.10 2.20<BR>
Platform          : NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 31, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
