

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Copying a Bitmap to the Clipboard with MFC </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q112530">
<META NAME="KBModify" CONTENT="1997/07/18">
<META NAME="KBCreate" CONTENT="1994/03/10">
<META NAME="Keywords" CONTENT="kb16bitonly MfcMisc kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  In order to pass a handle to a Bitmap to the clipboard, you have to get it from the GetSafeHandle method and then  detach  it from the objects that are using it so the clipboard has the only handle.  MORE INFORMATION  Here is a sample application t...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QANH,QA2Q,QAY2,QAY5,QAPN,QAG2,QBV8,QAB9,QBSO,QBWS,QBFY,QA9N,QAW6,QASB V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Copying a Bitmap to the Clipboard with MFC</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q112530</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
7.00   | 1.00 1.50
MS-DOS | WINDOWS
kbprg
 
The information in this article applies to:
<P>
<PRE>   The Microsoft Foundation Classes (MFC) included with:
    - Microsoft C/C++ version 7.0
    - Microsoft Visual C++ for Windows, versions 1.0 and 1.5
</PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In order to pass a handle to a Bitmap to the clipboard, you have to get it
from the GetSafeHandle method and then "detach" it from the objects that
are using it so the clipboard has the only handle.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Here is a sample application that can be used to copy a bitmap from the
client window to the clipboard. The easiest way to implement this is to
follow these steps:

<OL><P><LI>Begin by building your application with AppWizard.

<P><LI>Select the Browse ClassWizard menu.

<P><LI>Select the Message Maps tab. In the Object IDs listbox, select
   ID_EDIT_COPY. In the Messages listbox, select Command. The Add function
   button will hilight. Press it to create the function.

<P><LI>Press the Edit Code button. It will then take you to the
   CClipmfcView::OnEditCopy() function.

<P><LI>From here, you need to add the following code:
<P>
</OL><h3>Sample Code</h3>
 
<P>
<PRE>void CClipmfcView::OnEditCopy()
</PRE></OL>{
<PRE>    // TODO: Add your command handler code here
    CBitmap     cBmp;
    CClientDC   cWndDC(this);   // View is an hWnd, so we can use "this"
    CDC         cMemDC;         // Handle to a memory DC
    CRect     rect;             // For storing the size of the window

    cMemDC.CreateCompatibleDC(&amp;cWndDC); // Create the memory DC.

    GetWindowRect(rect);         // Get the size of the window
    // Here we are going to do a little drawing so we can see a line.
    cWndDC.MoveTo(0,0);
    cWndDC.LineTo(rect.Width(),rect.Height());

    cBmp.CreateCompatibleBitmap(&amp;cMemDC, rect.Width(),rect.Height() );
    // Keep the old bitmap
    CBitmap* pOldBitmap = cMemDC.SelectObject(&amp;cBmp);

    cMemDC.BitBlt(0, 0, rect.Width(),rect.Height(), &amp;cWndDC, 0, 0,
</PRE>SRCCOPY);
<P>
<P>
<PRE>    // here are the actual clipboard functions.
    AfxGetApp()-&gt;m_pMainWnd-&gt;OpenClipboard() ;
    EmptyClipboard() ;
    SetClipboardData (CF_BITMAP, cBmp.GetSafeHandle() ) ;
    CloseClipboard () ;
        // next we select the old bitmap back into the memory DC
        // so that our bitmap is not deleted when cMemDC is destroyed.
        // Then we detach the bitmap handle from the cBmp object so that
        // the bitmap is not deleted when cBmp is destroyed.
    cMemDC.SelectObject(pOldBitmap);
    cBmp.Detach();

    return;
</PRE>}
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 7.00 1.00 1.50 2.00 2.50<BR>
KBCategory: kbprg<BR>
KBSubcategory: MfcMisc<BR>
Keywords            : kb16bitonly MfcMisc kbprg<BR>
Technology          : kbMfc<BR>
Version             : 7.00   | 1.00 1.50<BR>
Platform            : MS-DOS WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
