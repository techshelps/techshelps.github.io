

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INFO: Dynamic Processing of WM_COMMAND Messages </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q97693 ">
<META NAME="KBModify" CONTENT="1997/10/10">
<META NAME="KBCreate" CONTENT="1993/04/19">
<META NAME="Keywords" CONTENT="MfcMisc kbfasttip kbinfo">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The message-map mechanism provided by the Microsoft Foundation Classes (MFC) can process WM_COMMAND messages for a constant ID. However, in some cases, an application needs to process WM_COMMAND messages for an ID that is not known until run time. ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAEV,QAYC,QAH4,QAGI,QA4H,QBV8,QAB9,QAVI,QAY5,QAXB,QAUD,QAOE,QAKJ,QAGU,QABO V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INFO: Dynamic Processing of WM_COMMAND Messages</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q97693 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC), included with:
<P><PRE>    - Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51, 1.52
    - Microsoft Visual C++ 32-bit Edition, versions 1.0, 2.0, 2.1, 4.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The message-map mechanism provided by the Microsoft Foundation Classes
(MFC) can process WM_COMMAND messages for a constant ID. However, in some
cases, an application needs to process WM_COMMAND messages for an ID that
is not known until run time. This can occur when an application modifies
menus or dynamically creates controls at run time. To process these
messages, your application must override the CCmdTarget::OnCmdMsg()
function.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The Microsoft Foundation Classes provide both the ON_COMMAND() and
ON_UPDATE_COMMAND_UI() message-map macros to process WM_COMMAND messages.
The ON_COMMAND() macro dispatches a WM_COMMAND message generated when the
user selects a user interface object (for example, a control or a menu
item). The ON_UPDATE_COMMAND_UI() macro updates the status of the user
interface object that generates the WM_COMMAND message. Each of these
macros requires a constant for the command ID. If the command ID is not
known until run time, the message must be processed without using a message
map.
<P>
The sample code below demonstrates overriding the OnCmdMsg() member
function to dynamically process messages from a dynamically-created button.
<P>
The sample code processes messages for a class derived from CDocument. The
command ID is stored in the m_MyButtonID member variable. The code calls
the DoMyButton() member function when the user chooses the button, and
calls the DoUpdateMyButton() member function when the Microsoft Foundation
Classes library requests the status of the button.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   BOOL CMyDocument::OnCmdMsg(UINT nID, int nCode, void * pExtra,
                              AFX_CMDHANDLERINFO* pHandlerInfo)
   {
      // If pHandlerInfo is NULL, then handle the message
      if (pHandlerInfo == NULL)
         {
         // Filter the commands sent to a button the
         // ID of which is stored in m_MyButtonID.

         if (nID == m_MyButtonID)
            {
            if (nCode == CN_COMMAND)
               DoMyButton();      // Handles WM_COMMAND messages
                                  // sent by the button.
            else if (nCode == CN_UPDATE_COMMAND_UI)
               DoUpdateMyButton((CCmdUI*) pExtra);
                                  // Update buttons UI.
            return(TRUE);
            }
         }

      // Call the base class version of OnCommand
      // so the message-map can handle the message.
      return CDocument::OnCmdMsg(nID, nCode, pExtra, pHandlerInfo);
   }

</PRE><h2>REFERENCES</h2>
 
<P>
MFC Technical Note 6: Message Maps.
MFC Technical Note 21: Command and Message Routing.
 
<PRE>Keywords          : MfcMisc kbfasttip kbinfo
Technology        : kbmfc
Version           : 1.0 1.5 1.51 1.52 2.0
Platform          : NT WINDOWS</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
