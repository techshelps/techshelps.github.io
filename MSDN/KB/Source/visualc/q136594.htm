

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Error Using Inline Assembly in a Template Class </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q136594">
<META NAME="KBModify" CONTENT="1997/09/18">
<META NAME="KBCreate" CONTENT="1995/09/11">
<META NAME="Keywords" CONTENT="CPPIss kbbuglist kbfixlist kbtool">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  If inline assembly is used in an inline member function defined within a templated class, the compiler generates these errors:    If the assembly instruction is of the form _asm { int 3 }:         error C2304: '                          }' : unexpe...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAAP,QAB4,QBA8,QA4Q,QA36,QAR4,QBV8,QAKP,QABO,QAB9,QBFY,QATS,QASR,QAH4,QAJQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Error Using Inline Assembly in a Template Class</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q136594</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
2.00 2.10 2.20
WINDOWS NT
kbtool kbbuglist kbfixlist
<P>
 
<P>
The information in this article applies to:

<UL><LI>The Microsoft C/C++ Compiler (CL.EXE) included with:
   Microsoft Visual C++, 32-bit Edition, versions 2.0, 2.1, 2.2
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
If inline assembly is used in an inline member function defined within
a templated class, the compiler generates these errors:
<P>
<PRE>  If the assembly instruction is of the form _asm { int 3 }:

       error C2304: '&lt;template class instance&gt; }' : unexpected tokens
                                                    following type
       fatal error C1004: unexpected end of file found.

  If the assembly instruction is of the form _asm int 3:

       fatal error C1075: end of file found before the left &lt;Unknown&gt;
                          at &lt;filename line number&gt; was matched.

</PRE>The type of error depends on whether the assembly instruction is enclosed
in braces or not.
<P>
NOTE: The same error occurs for macros like ASSERT and VERIFY, which expand
to an _asm {int 3} instruction.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Define the member function outside the templated class using the "inline"
keyword.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. This bug was corrected in Microsoft
Visual C++, 32-bit Edition, version 4.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Sample Code to Reproduce Problem</h3>
 
<P>
<PRE>/* Compile options needed: /Ob1 or /Ob2 for the workaround function
/*                                      to be inline
*/

</PRE>template &lt;class type&gt;
class myclass
{
<PRE> public:
   void good_fun();
   void bad_fun() {
   _asm {int 3}      // This generates a compiler error.
   }
};

</PRE>template &lt;class type&gt;
inline void myclass&lt;type&gt;::good_fun() {
<PRE>   _asm {int 3}      // This doesn't generate an error.
}

void main(void) {
   myclass&lt;int&gt; foo;
</PRE>}
<P>
In this code, the good_fun() compiles without any error.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 2.00 2.10 2.20 9.00 9.10<BR>
KBCategory: kbtool kbbuglist kbfixlist<BR>
KBSubcategory: CPPIss<BR>
Keywords          : CPPIss kbbuglist kbfixlist kbtool<BR>
Version           : 2.00 2.10 2.20<BR>
Platform          : NT WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
