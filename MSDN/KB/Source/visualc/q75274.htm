

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>16 Background Colors in Text Mode with MCGA, EGA, or VGA </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q75274 ">
<META NAME="KBModify" CONTENT="1997/07/17">
<META NAME="KBCreate" CONTENT="1991/08/18">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The attribute byte for video display in text mode is       7  6  5  4   3   2  1  0      -------------------------     | |         |   |         |      -------------------------  where the bits control the following:     Bits  Control    ----------...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAG9,QAPG,QATX,QAMB,QA5V,QAI4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>16 Background Colors in Text Mode with MCGA, EGA, or VGA</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 17, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q75274 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
5.10 6.00 6.00a 6.00ax 7.00 | 1.00 1.50
<PRE>MS-DOS                      | WINDOWS
</PRE>kbprg
<P>
<P>
 
The information in this article applies to:

<UL><LI>The C Run-time (CRT), included with:
<P>
<P><PRE>    - Microsoft C for MS-DOS, versions 5.1, 6.0, 6.0a, and 6.0ax
    - Microsoft C/C++ for MS-DOS, version 7.0
    - Microsoft Visual C++ for Windows, versions 1.0 and 1.5
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The attribute byte for video display in text mode is
<P>
<PRE>     7  6  5  4   3   2  1  0
     -------------------------
    | |         |   |         |
     -------------------------

</PRE>where the bits control the following:
<P>
<PRE>   Bits  Control
   ----------------------------------

   0-2   Foreground color
     3   Foreground intensity
   4-6   Background color
     7   Blinking for foreground
          - or -
         Intensity for background

</PRE>A total of 16 foreground colors are possible with the combination of
bits 0-3. If bit 7 is on (default), these colors can be optionally
blinking, for a combination of 32 foreground colors.
<P>
Eight background colors are possible with the combination of bits 4-6.
With an MCGA, EGA, or VGA, bit 7 can be toggled to be interpreted as
background intensity rather than the default blinking color. Doing so
makes 16 background colors available in text mode.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The BIOS call that toggles the interpretation of bit 7 is Interrupt
10h, function 10h, subfunction 03h. This call is available only with
an MCGA, EGA, or VGA. A zero (0) in BL enables intensity, a one (1) in
BL enables blinking text.
<P>
The following sample program illustrates the effect of this toggle.
First, bit 7 is left as the blink bit; therefore, there are eight
background colors and 32 foreground colors. Each of the 32 foreground
colors is displayed once and each background color is repeated four
times.
<P>
Next, bit 7 is toggled to intensity; therefore, there are 16
background colors and no blinking text. Still, you have to go through
foreground colors 0-31 to view all 16 background colors. This is
because bit 7 is still controlled in the setting of the foreground
color; however, it is now interpreted to affect the display of the
background color rather than the foreground color. Viewing the output
of the sample program should clarify this concept.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>/* Compile options needed: none
*/

#include &lt;graph.h&gt;
#include &lt;dos.h&gt;
#include &lt;conio.h&gt;
#include &lt;stdio.h&gt;

#define TRUE  1
#define FALSE 0

#define VIDEO_IO        0x10
#define BIOS_CALL       0x10
#define INTENSITY_TGL   0x03

void toggle_intensity( int );

void main( )
</PRE>{
<PRE>   long i;
   int row;
   int color;
   char buf[80];

   _settextrows( 43 );
   _clearscreen( _GCLEARSCREEN );
   toggle_intensity( 1 );

/*  Bit 7 = blink; there are 8 background colors and blinking text */

   for (i = 0, row = 1, color = 31; i &lt;= 31; i++, row++, color--)
   {
      _setbkcolor( i );
      _settextcolor( color );
      _settextposition( row, 10 );
      sprintf( buf, "  Background %2ld  Foreground %2d\n", i,color );
      _outtext( buf );
   }

   _setbkcolor( _BLACK );
   _settextcolor( 7 );
   _outtext( "\n\nSetting 8 background colors, blinking text." );
   _outtext( "\n\nStrike any key to continue..." );
   getch( );

   _clearscreen( _GCLEARSCREEN );
   toggle_intensity( 0 );
/*  Bit 7 = intensity; there are 16 background colors */

   for (i = 0, row = 1, color = 31; i &lt;= 31; i++, row++, color--)
   {
      _setbkcolor( i );
      _settextcolor( color );
      _settextposition( row, 10 );
      sprintf( buf, "  Background %2ld  Foreground %2d\n", i,color );
      _outtext (buf);
   }

   _setbkcolor( _BLACK );
   _settextcolor( 7 );
   _outtext( "\n\nSetting 16 background colors, no blinking text." );
   _outtext( "\n\nStrike any key to quit..." );
   getch( );

   _setvideomode( _DEFAULTMODE );
   _clearscreen( _GCLEARSCREEN );
</PRE>}
<P>
<PRE>void toggle_intensity( int onoff )
</PRE>{
<PRE>   union REGS regs;

   regs.h.ah = VIDEO_IO;
   regs.h.al = INTENSITY_TGL;
   if ( !onoff )
      regs.h.bl = 0x0;
   else
      regs.h.bl = 0x1;
   int86( BIOS_CALL, &amp;regs, &amp;regs );
</PRE>}
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 1.00 1.50 5.10 6.00 6.00a 6.00ax 7.00<BR>
KBCategory: kbprg<BR>
KBSubcategory: CRTIss<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 17, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
