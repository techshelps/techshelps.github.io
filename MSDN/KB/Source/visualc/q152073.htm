

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Wrapper Class for Automation Object May Be Incomplete </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q152073">
<META NAME="KBModify" CONTENT="1997/07/31">
<META NAME="KBCreate" CONTENT="1996/06/03">
<META NAME="Keywords" CONTENT="MfcOLE kbole kbprb kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  An automation object may support a statement and function with the same name even though the statement and function will most likely have different behaviors. Class Wizard will not recognize both the statement and function. However, when generating...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAY5,QAB9,QAPN,QABX,QBV8,QAGI,QA6E,QAUD,QAL3,QA5F,QABO,QAW6,QAJQ,QAIK,QAIF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Wrapper Class for Automation Object May Be Incomplete</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 31, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q152073</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
2.00 2.10 2.20 4.00 4.10
WINDOWS NT
kbprg kbole kbprb
<P>
 
The information in this article applies to:

<UL><LI>The Class Wizard, included with:
   Microsoft Visual C++, 32-bit Edition, versions 2.0, 2.1, 2.2, 4.0, 4.1
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
An automation object may support a statement and function with the same
name even though the statement and function will most likely have different
behaviors. Class Wizard will not recognize both the statement and function.
However, when generating a new class from the object's type library, the
Class Wizard will generate a function and prototype for a single function.
This generated function will not give you the ability to call both the
function and the statement.
<P>
<P><h2>CAUSE</h2>
 
<P>
The similarly-named function and statement will share a single entry in the
.odl file for the object and a single entry in the type library. The Class
Wizard does the best job it can and generates a single function and
prototype based on this entry.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Given adequate documentation for the statement and function, it is possible
to modify the wrapper class by hand so that the statement or function may
be called. If the parameter list for the statement and function vary, which
may be the case if optional parameters are used, the wrapper function can
be overridden. Otherwise, the wrapper for the statement and function will
need different names.
<P>
<P><h2>STATUS</h2>
 
<P>
This behavior is by design.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
An example of this problem is WordBasic's Bold. The Bold statement turns
the bold character formatting on and off just as selecting the Bold Toolbar
button in Word does. The Bold() function returns a short indicating whether
all, some, or none of the characters in a selection are formatted as bold.
Visual Basic will call the function if a return value is assigned to the
Bold() call. Otherwise, it will call the Bold statement.
<P>
The .odl statement for Bold is as follows:
<P>
<PRE>   [id(0x00008048), helpstring("Makes the selection bold (toggle)"),
   helpcontext(0x00001d48)] short Bold([in, optional] VARIANT On);

</PRE>The Class Wizard will generate the following function and prototype using
this information:
<P>
<PRE>   short Bold(const VARIANT&amp; On);

   short WordBasic::Bold(const VARIANT&amp; On)
   {
       short result;
       static BYTE parms[] =
           VTS_VARIANT;
       InvokeHelper(0x8048, DISPATCH_METHOD, VT_I2, (void*)&amp;result, parms,
           &amp;On);
       return result;
   }

</PRE>Using this function will result in the WordBasic Bold() function being
called. In order to call the statement, you could define BoldStatement()
and BoldFunction() functions. In this case, however, because there is no
reason to pass a parameter to the Bold() function, the parameter lists vary
and it is possible to overload the wrapper functions as follows:
<P>
<PRE>   void Bold(const VARIANT&amp; On);
   short Bold();

   void WordBasic::Bold(const VARIANT&amp; On)
   {
       static BYTE parms[] =
           VTS_VARIANT;
       InvokeHelper(0x8048, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
           &amp;On);
   }

   short WordBasic::Bold()
   {
       short result;
       static BYTE parms[] =
           VTS_VARIANT;
       InvokeHelper(0x8048, DISPATCH_METHOD, VT_I2, (void*)&amp;result, NULL);
       return result;
   }

</PRE><h2>REFERENCES</h2>
 
<P>
Microsoft Office Developer's Kit - PART 2 Word Basic Reference,
Statements and Functions.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 2.00 2.10 2.20 4.00 4.10 automation variant<BR>
KBCategory: kbprg kbole kbprb<BR>
KBSubcategory: MfcOLE<BR>
Keywords          : MfcOLE kbole kbprb kbprg<BR>
Technology        : kbMfc<BR>
Version           : 2.00 2.10 2.20 4.00 4.10<BR>
Platform          : NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 31, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
