

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: localtime() Does Not Always Switch to Standard Time </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q148681">
<META NAME="KBModify" CONTENT="1997/09/19">
<META NAME="KBCreate" CONTENT="1996/03/19">
<META NAME="Keywords" CONTENT="CRTIss kblist kbbuglist kbfixlist kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The C run-time function localtime() incorrectly fills the tm_isdst member of the returning struct tm when it is executed in a time zone that does not switch from Daylight Savings to Standard time on the same date that the U.S. time zones make the s...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QACE,QAU3,QAMR,QAFH,QAKR,QAHE,QBFY,QABB,QBWP,QAUD,QAML,QABA,QBCF,QDL9,QBWQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: localtime() Does Not Always Switch to Standard Time</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 19, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q148681</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
<P>
 
The information in this article applies to:

<UL><LI>The C Run-time (CRT) included with:
<P>
<P><PRE>    - Microsoft Visual C++ for Windows, versions 1.5, 1.51, 1.52
    - Microsoft Visual C++, 32-bit Edition, versions 2.0, 2.1, 2.2, 4.0
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The C run-time function localtime() incorrectly fills the tm_isdst member
of the returning struct tm when it is executed in a time zone that does not
switch from Daylight Savings to Standard time on the same date that the
U.S. time zones make the switch.
<P>
<P><h2>CAUSE</h2>
 
<P>
The C Runtime Function localtime() is apparently not considering the time
zone. Instead, it is assuming that the switch to Standard time always
occurs on the last Sunday in October.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Choose one of the following two workarounds:

<UL><LI>Use the return value of the Win32 SDK function GetTimeZoneInformation,
   which returns a DWORD. A return value of TIME_ZONE_ID_STANDARD or
   TIME_ZONE_ID_DAYLIGHT will indicate whether the system time has been
   adjusted for daylight savings time. GetTimeZoneInformation correctly
   considers the current system time zone settings and adjusts on the
   proper date. (See the documentation for GetTimeZoneInformation, as there
   are other possible return values.)
<P>
   -or-

<LI>Obtain the source for the C Run-time Library, and modify the localtime
   function to adjust according to the current system time zone setting.
   The C Run-time Library source is available in several locations. For
   instructions about how to obtain the C Runtime Library Source, please
   see the following article in the Microsoft Knowledge Base:
<P>
   For Visual C++ 2.x:
<P>
<P><PRE>      ARTICLE-ID: <B><A HREF="../VISUALC/Q123464.htm">Q123464</A></B>
<PRE></PRE>      TITLE     : How to Obtain Visual C++ 2.0 Run-Time Library Source Code

   NOTE: localtime is defined in the file Localtim.c. Windows NT and
   Windows 95 both account for the different dates by way of the
   HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\TimeZoneInformation
   registry entry, which is changed when the time zone changes in the
   control panel.

</PRE></UL><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. This bug was corrected in Microsoft
Visual C++, 32-bit Edition, version 4.1.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Some Time Zones switch from Daylight Savings back to Standard Time about a
month before most time zones (including the U.S. time zones). GMT + 0200
(Cairo) is an example. In the GMT + 0200 time zone, the switch date is the
last Wednesday in September, whereas most other time zones switch on the
last Sunday in October.
<P>
Calling the localtime() CRT to fill in a structure of type tm (defined in
Time.h) gives an incorrect result of non-zero for the tm_isdst data member
if you call it from one of the time zones that switch early on a date that
falls between the two. A non-zero value in the tm_isdst member indicates
that the system time has been adjusted for daylight savings time.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>/* Compile options needed: None
*/

#include &lt;iostream.h&gt;
#include &lt;time.h&gt;

void main()
</PRE>{
<PRE>  tm *loc;
  time_t clock;

  time(&amp;clock);
  tzset();
  loc = localtime(&amp;clock);
  cout &lt;&lt; "In timezone GMT+0200, 9-26-1995 is DST, ";
  cout &lt;&lt; "9-27-1995 is not DST" &lt;&lt; endl;
  cout &lt;&lt; "The current date and time is: " &lt;&lt; asctime(loc) &lt;&lt; endl;
  if(loc-&gt;tm_isdst)
    cout &lt;&lt; "It is daylight savings time" &lt;&lt; endl;
  else
    cout &lt;&lt; "It isn't daylight savings time" &lt;&lt; endl;
</PRE>}
<P>
<P><h3>Steps to Reproduce Problem</h3>
 

<OL><P><LI>Change your system date to 9/26/95.

<P><LI>Change your time zone to GMT + 0200. Note that Egypt Daylight Time
   displays as your time zone. (Windows 95 and Windows NT automatically
   adjust the time.)

<P><LI>Run the sample code listed above, and note that it correctly says that
   it is daylight savings time.

<P><LI>Change the system date to 9/27/95. Note that Egypt Daylight Time
   changes to Egypt Standard. (Windows 95 and Windows NT automatically
   adjust the time.)

<P><LI>Run the sample code again, and note that it incorrectly says that it is
   daylight savings time.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: localtime<BR>
Keywords          : CRTIss kblist kbbuglist kbfixlist kbprg<BR>
Version           : 1.50 1.51 1.52 | 2.00 2.10 2.20<BR>
Platform          : NT WINDOWS<BR>
Issue type        : kbbug<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 19, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
