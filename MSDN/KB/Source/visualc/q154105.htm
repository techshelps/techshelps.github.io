

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: C2664 Compiler Error in Afxtempl.h Using VC++ 4.2 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q154105">
<META NAME="KBModify" CONTENT="1998/02/09">
<META NAME="KBCreate" CONTENT="1996/07/29">
<META NAME="Keywords" CONTENT="MfcMisc">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  If you are using MFC-templated type safe collection classes, such as CTypedPtrArray, CTypedPtrList, CTypedPtrMap classes or any classes derived from these classes in MFC4.2, and you have a forward declaration of the base classes that are stored as ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QABO,QA2O,QABA,QAY5,QAP2,QAY2,QAB4,QAAP,QAPN,QAOT,QACI,QBXF,QBFY,QBE7,QBE6 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: C2664 Compiler Error in Afxtempl.h Using VC++ 4.2</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 9, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q154105</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC), included with:
   Microsoft Visual C++, 32-bit Edition, version 4.2
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
If you are using MFC-templated type safe collection classes, such as
CTypedPtrArray, CTypedPtrList, CTypedPtrMap classes or any classes derived
from these classes in MFC4.2, and you have a forward declaration of the
base classes that are stored as elements in these collection classes, you
may get compiler errors similar to the ones listed below depending on which
classes are used in the application:
<P>
<PRE>   c:\msdev\mfc\include\afxtempl.h(1561) : error C2664:
     'struct __POSITION *CObList::AddHead(class CObject *)' :
     cannot convert parameter 1 from 'class X *' to 'class CObject *'
     (new behavior; please see help)

   - or -

   c:\msdev\mfc\include\afxtempl.h(1587) : error C2664:
   'SetAt' : cannot convert parameter 2 from 'class X *' to
             'class CObject *' (new behavior; please see help)

</PRE>See the More Information section below for a reproducible case.
<P>
<P><h2>CAUSE</h2>
 
<P>
The MFC-templated type safe collection classes provided in MFC4.0 and
MFC4.1 are not fully type safe. MFC4.2 added more wrapper functions to
these classes to make them fully type safe. For example, in MFC4.2 the
CTypedPtrList class now contains the following additional wrapper
functions that were not in MFC4.0 or MFC4.1:
<P>
<PRE>     // Add a new element before head or after tail of the list
     POSITION AddHead( TYPE newElement );
     POSITION AddTail( TYPE newElement );

     // Add another list of elements before head or after tail
     void AddHead( CTypedPtrList&lt;BASE_CLASS,TYPE&gt; *pNewList );
     void AddTail( CTypedPtrList&lt;BASE_CLASS,TYPE&gt; *pNewList );

     // Modify an element at a given position
     void SetAt( POSITION pos, TYPE newElement );

</PRE>The implementation of some of these newly-added functions makes calls to
their base class' implementation. For example, CTypedPtrList::AddHead(TYPE
newElement) calls BASE_CLASS::AddHead(newElement) where newElement is
expected to be a pointer to CObject. (BASE_CLASS can be either CObList,
CPtrList, or any classes derived from these two classes for a
CTypedPtrList.)
<P>
The BASE_CLASS must be derived from CObject or you will get the compiler
error C2664.
<P>
Because there is only a forward declaration of the base class, before
instantiating the MFC templated type safe collection class, the compiler
has no way to tell if the base class is derived from CObject directly or
indirectly, hence the compiler error C2664.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Define the base class before instantiating the type safe collection
classes.
<P>
<P><h2>STATUS</h2>
 
<P>
This behavior is by design.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following sample code demonstrates the problem:
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   #include &lt;afxtempl.h&gt;

   class X;
   class Y
   {
     public:
       CTypedPtrArray&lt;CObArray, X*&gt; m_TextArray;
   };

   class X : public CObject
   {
     ......
   };

</PRE>You can also reproduce the problem by building step 2 of the Scribble
tutorial from Visual C++ 4.1 using Visual C++ 4.2.
For a full list of newly-added functions in classes CTypedPtrList,
CTypedPtrArray and CTypePtrMap, please refer to the following Microsoft
Knowledge Base article:
<P>
<PRE>   ARTICLE : <B><A HREF="../VISUALC/Q154482.htm">Q154482</A></B>
   TITLE   : FIX: Undocumented Functions in Type Safe Collection Classes
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 4.00 4.10 4.20<BR>
Keywords          : MfcMisc<BR>
Technology        : kbMfc<BR>
Version           : winnt:4.2<BR>
Platform          : winnt<BR>
Issue type        : kbprb<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 9, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
