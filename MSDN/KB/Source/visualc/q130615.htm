

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Unwanted Rebuilds Occur When Using NMAKE or Visual C++ </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q130615">
<META NAME="KBModify" CONTENT="1997/08/26">
<META NAME="KBCreate" CONTENT="1995/05/23">
<META NAME="Keywords" CONTENT="NmakeIss VwbIss">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  When building a project, the development environment suddenly executes a Rebuild All command or unnecessarily recompiles specific object modules. Alternatively, after rebuilding and then trying to debug your program you may receive the message   On...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QACE,QAU3,QAMR,QAFH,QBFY,QAVZ,QA56,QA55,QBVV,QAUR,QAR4,QAKJ,QAA5,QBI8,QAVX V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Unwanted Rebuilds Occur When Using NMAKE or Visual C++</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 26, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q130615</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The development environment and Program Maintenance Utility
   (NMAKE.EXE) included with:
   - Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51
   - Microsoft Visual C++, 32-bit Edition, versions 1.0, 2.0, 2.1, 4.0, 5.0
   - Microsoft FORTRAN PowerStation, 32-bit Edition, versions 1.0, 4.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When building a project, the development environment suddenly executes a
Rebuild All command or unnecessarily recompiles specific object modules.
Alternatively, after rebuilding and then trying to debug your program you
may receive the message
<P>
"One or more targets are out of date or do not exist"
<P>
This happens when you are building from within the integrated development
environment provided with the Microsoft products listed at the beginning of
this article or when you are using the NMAKE.EXE utility.
<P>
<P><h2>CAUSE</h2>
 
<P>
The time on one of your dependency files is later than one of the output
files linked to the dependency.
<P>
The build engine checks the time and date stamp of all files that have
dependencies in the makefile. Files included in the project list are
considered "dependencies." System- and user-created .H files included in
the source files with #include statements are also considered dependencies.
If the time and date of a dependency file is later than the time and date
of a target file, then the target is automatically rebuilt.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
The following five scenarios can cause this unwanted behavior. Resolve the
issue by revising any of the following scenarios that fit your situation.

<OL><P><LI>The time and/or date on your computer is not correct or was not correct
   when Visual C++ or the project in question was written to disk. The time
   and date of the targets and/or dependencies end up being earlier than
   the time and date when Visual C++ was installed.
<P>
   For example:
<P>
   a. You install Visual C++ when the date on the computer is
<P><PRE>      2/1/94 12:00 PM.
</PRE><P>
   b. You change the date to 1/1/94 at 12:00 AM.
<P>
   c. You try to build a sample application. The .OBJ and .EXE files are
<P><PRE>      written with the date 1/1/94 and some time. All the Visual C++ header
      files are dated later than the target .OBJ and .EXE files. If any of
      these headers are included as dependencies, the project will always
      be rebuilt.
</PRE><P>
   The fix is to either change the date on the computer to be later then
   that of any other files that are included in the project or to "touch"
   (rewrite the time and date) every dependency file in the build process.
   Ideally you should set the correct time and date on the computer and
   reinstall Visual C++.

<P><LI>You have enabled network caching or the network writes out files only
   after a certain time period.
<P>
   This causes a problem if you modify a file in the build dependencies
   that is stored on the network, save it, and then initiate a build. The
   network does not use the time stamp when you issued the save command but
   rather when the network actually writes the file.
<P>
   For example, you save a DEPEND.H file on the network, and then start a
   build on the local drive. The time is 1:00 PM. The network does not
   write DEPEND.H to the network disk right away because of caching. The
   changes made are presumably seen in the build, however, because the
   reads and writes to the file are serviced by the network, which uses the
   image in network cache memory. The build finishes and the output file
   ALLDONE.EXE file is written to the local drive at 1:05PM. Then at
   1:10PM, DEPEND.H is flushed to the network disk.
<P>
   If the network uses the time that DEPEND.H was actually rewritten to
   disk (1:10) and not the when the user actually issued the save command
   (1:00), a rebuild of all files dependent on DEPEND.H will occur.

<P><LI>You are using some files over a network and the time and date on the
   local computer and the server differ now or did differ at one time.
<P>
   This is a variation of the two previous problems. The time stamp of the
   output files on one location are earlier than the dependency files seen
   on the other location. Synchronize the time on your local machine with
   the network time, synchronize all of the file times, and rebuild.

<P><LI>A dependency file is deleted but the dependencies were not updated.
<P>
   For example, the TEST.H file is listed as a dependency but it has been
   deleted and is no longer included in any source files. If the
   dependencies are not updated, everything that was dependent on TEST.H is
   rebuilt every time.
<P>
   With Visual C++ version 5.0, dependencies are updated every time the
   project is built using either Build, Rebuild All, or Batch Build.
   Dependencies for C and C++ files are generated by the C/C++ compiler
   during the build process. Dependencies for other types of source files
   are generated by the build system's dependency scanner.

<P><LI>Some type of corruption causes the date of a dependency file to be later
   than the output files.
<P>
</OL><h2>STATUS</h2>
 
<P>
This behavior is by design.
 
<PRE>Keywords          : NmakeIss VwbIss
Version           : WINDOWS:1.0,1.5,1.51;WINDOWS NT:1.0,2.0,2.1,4.0,5.0
Platform          : NT WINDOWS
Issue type        : kbprb</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 26, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
