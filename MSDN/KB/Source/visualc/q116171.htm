

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: Compiler Accepts Invalid Syntax: "class funcname()" </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q116171">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1994/06/13">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The Microsoft C/C++ Compiler for MS-DOS, versions 8.0 and 8.0c, does not generate an error or warning when the C++ keyword  class  is used with a function for which a declaration has been provided.  RESOLUTION  The ambiguity of using the C++ keywor...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBFY,QAY5,QAGI,QAOT,QBV8,QABO,QAB9,QAB4,QAVX,QAVW,QBVV,QAUD,QAKP,QAIF,QAEY V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: Compiler Accepts Invalid Syntax: "class funcname()"</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q116171</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
7.00   | 1.00 1.50
MS-DOS | WINDOWS
kbtool kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft C/C++ Compiler (CL.EXE), included with:
<P>
<P><PRE>    - Microsoft C/C++ for MS-DOS, version 7.0
    - Microsoft Visual C++ for Windows, versions 1.0 and 1.5
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The Microsoft C/C++ Compiler for MS-DOS, versions 8.0 and 8.0c, does not
generate an error or warning when the C++ keyword "class" is used with a
function for which a declaration has been provided.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
The ambiguity of using the C++ keyword "class" with a declared function
should be resolved. Either a class should be defined with a name that
is different from the function or the "class" keyword should be
removed from the function call.
<P>
When the C++ keyword "class" is used with a function for which a
declaration has been provided, the C/C++ compiler for Windows NT, version
8.0, returns the following error message:
<P>
<PRE>   error C2514: 'S' : class has no constructors

</PRE>This is the correct behavior.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the C/C++ compiler for
MS-DOS, versions 7.0, 8.0, and 8.0c. We are researching this problem and
will post new information here in the Microsoft Knowledge Base as it
becomes available.
<P>
This problem does not occur with the C/C++ 32-bit compiler, version 8.0 or
version 9.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Suppose a function "func()" has been defined and declared within a single
.CPP file. If func() is invoked later in the same file, the code runs as
expected. However, if "class func()" is used, the func() function may run
instead. Within this context the compiler should be capable of determining
that a function call has not been requested because the term "class"
appears before the term "func()". However, it does not.
<P>
You can use the following sample code to illustrate this problem:
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>/* Compile options needed: none
*/
   #include &lt;stdio.h&gt;

   static int call_count = 0; // Number of calls to the function

   short S()   // Function used to test ambiguity resolution
   {
       printf("\nI'm in the function.");
       printf("  Incrementing call count to %d.", ++call_count);
       return(-32767);
   }

   void main()
   {
       short S();   // Declaration of function.  LEGAL.

       S();         // No type causes call to S(). LEGAL.

       class S();   // No class S exists.  ILLEGAL.

       if(call_count != 1)
           printf("\n\n*** TEST FAILED ***\n");
       else
           printf("\n\n*** TEST PASSED ***\n");
   }

</PRE><h2>REFERENCES</h2>
 
<P>
The Annotated C++ Reference Manual (ARM), Ellis and Stroustrup,
section 9.1.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 1.50 7.00 8.00 8.00c<BR>
KBCategory: kbtool kbbuglist<BR>
KBSubcategory: CPPIss<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
