

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Assertion Failed, WINCORE.CPP--Line 129, 133, 182, or 307 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q113421">
<META NAME="KBModify" CONTENT="1997/07/10">
<META NAME="KBCreate" CONTENT="1994/04/04">
<META NAME="Keywords" CONTENT="MfcUI kbprb kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Opening a dialog box in an application that subclasses a control of the dialog box using CWnd::SubclassDlgItem() or CWnd::SubclassWindow() causes an  Assertion Failed!  error in WINCORE.CPP. The line number reported depends on the version of the Mi...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB5,QA7O,QAYL,QAOE,QAMN,QBXT,QA5V,QA01,QAIB,QABO,QAHV,QDL9,QBWQ,QBWO,QBWN V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Assertion Failed, WINCORE.CPP--Line 129, 133, 182, or 307</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q113421</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00 1.50 1.51 1.52 | 1.00 2.00 2.10 4.00
<PRE>WINDOWS             | WINDOWS NT
</PRE>kbprg kbprb
<P>
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
<P>
<P><PRE>    - Microsoft Visual C++ for Windows, versions 1.0. 1.5, 1.51 and
      1.52
    - Microsoft Visual C++ 32-bit Edition, version 1.0, 2.0, 2.1, and 4.0
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Opening a dialog box in an application that subclasses a control of the
dialog box using CWnd::SubclassDlgItem() or CWnd::SubclassWindow() causes
an "Assertion Failed!" error in WINCORE.CPP. The line number reported
depends on the version of the Microsoft Foundation Classes (MFC) being
used:
<P>
<PRE>    Version 2.0 for Windows    - Line 133
    Version 2.5 for Windows    - Line 182
    Version 2.0 32-bit Edition - Line 129
    Version 3.0 32-bit Edition - Line 283
    Version 3.1 32-bit Edition - Line 315
    Version 4.0 32-bit Edition - Line 307

</PRE><h2>CAUSE</h2>
 
<P>
The second ASSERT (below) in WINCORE.CPP is the one being hit:
<P>
<PRE>   BOOL CWnd::Attach(HWND hWndNew)
   {
      ASSERT(m_hWnd == NULL);   // Only attach once, detach on destroy
      ASSERT(FromHandlePermanent(hWndNew) == NULL);
         // Must not be already in permanent map
   ...

</PRE>This implies that the control that we are attempting to subclass has
already been subclassed.
<P>
With MFC dialog boxes, you can specify DDX/DDV member variables to
associate with the controls of an MFC dialog class. These member variables
can be real values (for example, int, CString) or control variables (for
example, CEdit, CListBox). If the member variables are control variables,
then the DDX/DDV handlers actually do subclass the dialog box controls
using the control member variables. If you try to subclass those controls
yourself, the above error can result.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
If you want to subclass controls yourself, then do not associate DDX/DDV
variables with those controls.
<P>
Alternatively, if you want to subclass controls but avoid the work, you can
let the DDX/DDV routines work for you. To do this, use the following steps.

<OL><P><LI>Create a dialog box template in App Studio.

<P><LI>Use ClassWizard to associate a C++ CDialog derived class with the
   template.

<P><LI>In ClassWizard, with the dialog class selected, choose Edit Variables
   and add a member variable of the appropriate control type, associating
   it with the control you want to subclass. With Visual C++ 1.5, choose
   the Member Variables tab and select Add Variable to accomplish this.

<P><LI>Edit the CDialog derived class definition to change the "// Dialog Data"
   section slightly. Change the class type for the member variable from the
   default (for example CEdit), to your own class derived from that control
   class (for example, CMyEdit), as follows:
<P>
<P><PRE>      // Dialog Data
<PRE></PRE>         //{{AFX_DATA(CTestDlg)
         enum { IDD = IDD_TEST_DLG };
         CMyEdit m_EditControl;
         //}}AFX_DATA

   This will cause the control to be automatically subclassed with your own
   type of window.
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 1.50 1.51 1.52 2.00 2.10 2.50 2.51 2.52<BR>
3.00 3.10 4.00<BR>
KBCategory: kbprg kbprb<BR>
KBSubcategory: MfcUI<BR>
Keywords            : MfcUI kbprb kbprg<BR>
Technology          : kbMfc<BR>
Version             : 1.00 1.50 1.51 1.52 | 1.00 2.00<BR>
Platform            : NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
