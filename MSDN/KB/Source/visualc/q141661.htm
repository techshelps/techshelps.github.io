

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Access Violation Firing an Error Event in OLE Control </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q141661">
<META NAME="KBModify" CONTENT="1997/09/19">
<META NAME="KBCreate" CONTENT="1995/12/21">
<META NAME="Keywords" CONTENT="CDKIss kbbuglist kbfixlist kbole kbprg kbtshoot">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  An access violation occurs when the error event is fired in an OLE Control. This occurs on the first firing of an error event in Release builds and only after several firings in Debug builds.  CAUSE =====  An invalid  this  pointer is being loaded ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAO4,QAPN,QBC9,QBC8,QANO,QA7O,QAAP,QAMN,QAGI,QAB5,QAOE,QAB4,QA9Q,QAR4,QA1S V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Access Violation Firing an Error Event in OLE Control</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 19, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q141661</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
2.00 2.10 2.20
WINDOWS NT
kbprg kbole kbtshoot kbbuglist kbfixlist
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Visual C++, 32-bit Edition, versions 2.0, 2.1, 2.2
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
An access violation occurs when the error event is fired in an OLE Control.
This occurs on the first firing of an error event in Release builds and
only after several firings in Debug builds.
<P>
<P><h2>CAUSE</h2>
 
<P>
An invalid "this" pointer is being loaded off the stack on a call to
ExternalRelease() at the end of COleControl::FireEvent().
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. This bug was corrected in Microsoft
Visual C++, 32-bit Edition, version 4.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To reproduce this problem, add the stock Error event to an OLE Control
using ClassWizard's OLE Events tab. The name given the member function to
fire the event will be FireError. In the OnLButtonDown handler of the OLE
Control, call FireError() and pass the following parameters:
<P>
<PRE>     FireError(CTL_E_OUTOFMEMORY, " ");

</PRE>This causes the SCODE of the error to be 0x800A0007 (CTL_E_OUTOFMEMORY),
and the description string to be " ", a single space followed by a NULL
byte. The rest of the parameters will be defaults.
<P>
Now, run the test container, insert your control, and click the control's
client area. In Release builds, this causes an access violation on the
first occurrence of the event. In Debug, it takes several occurrences
before the access violation is seen.
<P>
<P><h3>Sample Code</h3>
 
<P>
Below is the OnLButtonDown handler for the Circ3 tutorial sample, modified
to call the error event.
<P>
<PRE>/* Compile options needed:
*/

void CCirc3Ctrl::OnLButtonDown(UINT nFlags, CPoint point)
</PRE>{
<PRE>   /*  Comment the tutorial.
        CDC* pdc;

   // Flash the color of the control if within the
           ellipse.
   if (InCircle(point))
   {
      pdc = GetDC();
      FlashColor(pdc);
      ReleaseDC(pdc);

      // Fire the ClickIn event
      FireClickIn(point.x, point.y);
   }
   else
      // Fire the ClickOut event
      FireClickOut();
        */

        // Here's the call.

   FireError(CTL_E_OUTOFMEMORY, " ");
   COleControl::OnLButtonDown(nFlags, point);
</PRE>}
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 2.00 2.10 2.20 3.00 3.10 3.20<BR>
KBCategory: kbprg kbole kbtshoot kbbuglist kbfixlist<BR>
KBSubcategory: CDKIss<BR>
Keywords          : CDKIss kbbuglist kbfixlist kbole kbprg kbtshoot<BR>
Version           : 2.00 2.10 2.20<BR>
Platform          : NT WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 19, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
