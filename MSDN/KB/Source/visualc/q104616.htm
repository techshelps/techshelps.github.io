

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INFO: Sharing Common C Types with MASM </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q104616">
<META NAME="KBModify" CONTENT="1997/09/30">
<META NAME="KBCreate" CONTENT="1993/09/23">
<META NAME="Keywords" CONTENT="CLIss kbcode kbfasttip">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The sample code below demonstrates how to share variables of type char, short, and long between a Microsoft C program and a Microsoft Macro Assembler (MASM) program. This is accomplished by declaring the C variables outside the a function definitio...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBFY,QAYL,QAH4,QBWP,QAPF,QA0K,QBW7,QBDM,QA3A,QAI5,QBV8,QA56,QA55,QA2S,QAUJ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INFO: Sharing Common C Types with MASM</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 30, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q104616</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>The Microsoft C/C++ Compiler (CL.EXE) included with:
   - Microsoft C for MS-DOS, versions 6.0, 6.0a, 6.0ax
   - Microsoft C for OS/2, versions 6.0, 6.0a
   - Microsoft C/C++ for MS-DOS, version 7.0
   - Microsoft Visual C++ for Windows, versions 1.0, 1.5
   - Microsoft Visual C++ 32-bit Edition, versions 1.0, 2.0, 4.0, 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The sample code below demonstrates how to share variables of type
char, short, and long between a Microsoft C program and a Microsoft
Macro Assembler (MASM) program. This is accomplished by declaring the
C variables outside the a function definition, which makes them
public. The MASM subprogram can gain access to these public variables
by declaring them with the EXTRN directive. The EXTRN directive has
the following format
<P>
<PRE>   EXTRN &lt;name&gt;:&lt;type&gt;

</PRE>where &lt;name&gt; represents the public name of the variable as it is
declared in the main module, and &lt;type&gt; can be either BYTE, WORD,
DWORD, FWORD, QWORD, or TBYTE. Note that in MASM 6.0 and later, EXTRN
is a synonym for EXTERN. If you are using MASM 6.x, then you should
use EXTERNDEF, because it is more flexible when used in different
contexts.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The samples below include one C file and two different assembly files.
The two assembly files demonstrate how to share variables in small
model for MS-DOS and in flat model for Windows NT. Link only the
appropriate assembly module to the C module.
<P>
Note that MASM 6.1 or later and the C/C++ 32-bit compiler that ships
with Visual C++, 32-bit Edition, are required to build the flat model
Windows NT version.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   // Filename: CMAIN.C
   // Compile options needed: /c

   #include &lt;stdio.h&gt;

   #ifdef __cplusplus
   extern "C" {
   #endif

   void MasmFunc(void);
   char charvar = 'a';       // Declaring variables outside
   short shortvar  = 1;      // of a function definition
   long longvar = 32768L;    // makes them public.

   #ifdef __cplusplus
   }
   #endif

   main ()
   {
      while (shortvar &lt; 11)  // Display and increment variables 11 times
      {
         printf ("%c %d %ld\n", charvar, shortvar, longvar) ;
          MasmFunc () ;
      }
   }

</PRE><h3>Sample Code for MS-DOS Small Model Version</h3>
 
<P>
<PRE>   ; Filename: MASMSUB.ASM
   ; Assemble options needed for MASM: /MX
   ; Assemble options needed for ML: /c /Cx

   .MODEL small, C
   .286

   .DATA                            ; NOTE: You can put these as EXTERNDEF
                                    ; in .INC file and include it here.
     EXTRN charvar:BYTE        ; The EXTRN directive enables a MASM
     EXTRN shortvar:WORD        ; procedure to access public variables.
     EXTRN longvar:DWORD

   .CODE
   MasmFunc PROC
      inc charvar
      inc shortvar
      add WORD PTR longvar, 1
      adc WORD PTR longvar+2, 0
      ret
   MasmFunc ENDP
   END

</PRE><h3>Sample Code for Windows NT Flat Model Version</h3>
 
<P>
<PRE>   ; Filename: MASMSUB.ASM
   ; Assemble options needed for ML: /c /Cx /coff

   .386
   .MODEL flat, C

   .DATA                             ; NOTE: You can put these as EXTERNDEF
                                     ; in .INC file and include it here.
      EXTERNDEF charvar:BYTE      ; The EXTRN directive enables a MASM
      EXTERNDEF shortvar:WORD     ; procedure to access public variables.
      EXTERNDEF longvar:DWORD

   .CODE
   MasmFunc PROC
      inc charvar
      inc shortvar
      inc longvar
      ret
   MasmFunc ENDP
   END

</PRE>The following is the output of the program:
<P>
<PRE>   a 1 32768
   b 2 32769
   c 3 32770
   d 4 32771
   e 5 32772
   f 6 32773
   g 7 32774
   h 8 32775
   i 9 32776
   j 10 32777
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 8.00 8.00c 9.00 mixed language<BR>
Keywords          : CLIss kbcode kbfasttip<BR>
Version           : MS-DOS:6.0,6.0a,6.0ax,7.0; OS/2:6.0,6.0a; WINDOWS:1.0,1.5; WINDOWS NT:1.0,2.0,4.0,5.0<BR>
Platform          : MS-DOS NT OS/2 WINDOWS<BR>
Issue type        : kbinfo<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 30, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
