

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: CMemFile Causes GP Faults in Debug with _AFXDLL </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q104703">
<META NAME="KBModify" CONTENT="1997/09/16">
<META NAME="KBCreate" CONTENT="1993/09/27">
<META NAME="Keywords" CONTENT="kb16bitonly MfcDLL kbbuglist kbfixlist kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  If a CMemFile object is used in the _DEBUG version of an application or extension dynamic-link library (DLL) that links to the MFC200D.DLL, that application or DLL may generate a general protection (GP) fault. The problem occurs if enough data is a...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAR4,QBKN,QAVX,QAGI,QAW6,QAPN,QAM1,QAH4,QAKP,QAY5,QABO,QAB5,QAI4,QAJQ,QDL9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: CMemFile Causes GP Faults in Debug with _AFXDLL</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 16, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q104703</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00
WINDOWS
kbprg kbfixlist kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC), included with:
<P><PRE>    - Microsoft Visual C++ for Windows, version 1.0
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
If a CMemFile object is used in the _DEBUG version of an application
or extension dynamic-link library (DLL) that links to the MFC200D.DLL,
that application or DLL may generate a general protection (GP) fault.
The problem occurs if enough data is added to the CMemFile object to
cause it to reallocate a larger block of memory for the CMemFile.
After doing this, the application's heap is corrupted and a GP fault
is likely to occur soon afterward.
<P>
<P><h2>CAUSE</h2>
 
<P>
The debug version of AfxAppReAlloc() in the MFC200D.DLL is not
implemented correctly; the normal nondebug version of AfxAppReAlloc()
is used, which does not allocate memory on the heap in the same way as
AfxAppAlloc() and AfxAppFree(). This causes the heap to be corrupted
when AfxAppReAlloc() is called. Because AfxAppReAlloc() is used to
resize the memory buffer for CMemFile objects, using CMemFile objects
can cause GP faults.
<P>
To workaround this problem, derive a new class from CMemFile and
override the GrowFile() function. Copy the original code for
GrowFile() in FILEMEM.CPP, modify the call to ReAlloc(), and have it
call Alloc() and free() to resize the buffer. Because these functions
do work correctly in _DEBUG, this will correct the problem. The
following code fragment demonstrates how to derive a class from
CMemFile and implement the GrowFile() function:
<P>
<P><h3>In the .H File</h3>
 
<P>
class CMyMemFile : public CMemFile
{
<PRE>   public:
      CMyMemFile(int nGrowFile=1024) : CMemFile(nGrowFile) {}
   protected:
      void GrowFile(DWORD dwNewLen);
</PRE>};
<P>
<P><h3>And in the .CPP File</h3>
 
<P>
<PRE> void CMyMemFile::GrowFile(DWORD dwNewLen)
</PRE>{
<PRE>     ASSERT_VALID(this);
     ASSERT((dwNewLen &amp; 0xFFFF0000L) == 0L);

     if (dwNewLen &gt; m_nBufferSize)
     {
          // Grow the buffer.
          DWORD dwNewBufferSize = (DWORD)m_nBufferSize;

          while (dwNewBufferSize &lt; dwNewLen)
               dwNewBufferSize += m_nGrowBytes;

          if (dwNewBufferSize &gt; USHRT_MAX)
               AfxThrowFileException(CFileException::diskFull);
          ASSERT((dwNewBufferSize &amp; 0xFFFF0000L) == 0L);

          BYTE FAR* lpNew;
          if (m_lpBuffer == NULL)
               lpNew = Alloc((UINT)dwNewBufferSize);
          else
             {
</PRE>#ifdef _DEBUG
<PRE>                   lpNew = Alloc( (UINT)dwNewBufferSize);
             _fmemcpy(lpNew,m_lpBuffer,m_nBufferSize);
             free(m_lpBuffer);
</PRE>#else
<PRE>            lpNew = Realloc(m_lpBuffer, (UINT)dwNewBufferSize);
</PRE>#endif
<PRE>             }

          if (lpNew == NULL)
               AfxThrowMemoryException();

          m_lpBuffer = lpNew;
          m_nBufferSize = (UINT)dwNewBufferSize;
     }
     ASSERT_VALID(this);
</PRE>}
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in the Microsoft
Foundation Classes (MFC) version 2.0. This problem has been fixed in MFC
version 2.5.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 2.00 GP-Fault GPF<BR>
KBCategory: kbprg kbfixlist kbbuglist<BR>
KBSubcategory: MfcDLL<BR>
Keywords          : kb16bitonly MfcDLL kbbuglist kbfixlist kbprg<BR>
Technology        : kbMfc<BR>
Version           : 1.00<BR>
Platform          : WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 16, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
