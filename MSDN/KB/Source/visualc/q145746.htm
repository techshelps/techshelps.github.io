

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DOC: Technical Note 38: MFC/OLE IUnknown Implementation </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q145746">
<META NAME="KBModify" CONTENT="1998/02/17">
<META NAME="KBCreate" CONTENT="1996/02/06">
<META NAME="Keywords" CONTENT="MfcOLE">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Technical Note 38  TN038: MFC/OLE IUnknown Implementation  contains two errors. First, it describes how to implement standard and custom interface functions for an OLE COM object using the MFC Interface Map macros, but the code is incorrect. Additi...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QBBS,QA3P,QAAP,QAUD,QAB5,QAJ8,QABO,QAY5,QAUJ,QAPN,QABG,QBV8,QAB9,QA9Q V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>DOC: Technical Note 38: MFC/OLE IUnknown Implementation</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 17, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q145746</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
   Microsoft Visual C++ for Windows, 32-bit Edition, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Technical Note 38 "TN038: MFC/OLE IUnknown Implementation" contains two
errors. First, it describes how to implement standard and custom interface
functions for an OLE COM object using the MFC Interface Map macros, but the
code is incorrect. Additionally, the article explains how to aggregate an
object, but the code in the interface map is also incorrect.
<P>
The problems were corrected in Visual C++ 4.1.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>First Code Problem</h3>
 
<P>
For the implementation of the interface functions, two sets of sample code
are included, the first set is correct. The code immediately following the
discussion of the Interface Map macros is the code in error. The code
illustrates the implementation of the IUnknown functions and custom
interface functions for the interface being created using the MFC Interface
Maps. The sample code in error is as follows:
<P>
<PRE>   ULONG FAR EXPORT CEditPrintObj::CEditObj::AddRef()
   {
       METHOD_PROLOGUE(CEditPrintObj, EditObj)
       return pThis-&gt;ExternalAddRef();
   }

   ULONG FAR EXPORT CEditPrintObj::CEditObj::Release()
   {
       METHOD_PROLOGUE(CEditPrintObj, EditObj)
       return pThis-&gt;ExternalRelease();
   }

   HRESULT FAR EXPORT CEditPrintObj::CEditObj::QueryInterface(
       REFIID iid, void FAR* FAR* ppvObj)
   {
       METHOD_PROLOGUE(CEditPrintObj, EditObj)
       return (HRESULT)pThis-&gt;ExternalQueryInterface(&amp;iid,
                     ppvObj);
   }

   void FAR EXPORT CEditPrintObj::CEditObj::EditObject()
   {
       METHOD_PROLOGUE(CEditPrintObj, EditObj)
       // code to "Edit" the object, whatever that     // means...
   }

</PRE>All of the function signatures are incorrect. CEditObj should actually be
XEditObj. The BEGIN_INTERFACE_PART and END_INTERFACE_PART macros create a
nested class inside the object class definition, and assign a name to the
nested class. The name of the nested class is created by prepending an X to
the first argument of the BEGIN_INTERFACE_PART macro, which should be the
name of your custom interface. Therefore, if you are going to implement the
functions in the nested classes that were created for you by the
BEGIN_INTERFACE_PART and END_INTERFACE_PART macros, the nested classes name
would always begin with an X. This is to distinguish the nested class from
global classes (which typically start with C) and interface classes (which
typically start with I).
<P>
To implement a member of the above described nested class correctly, you
need to implement the AddRef shown above as:
<P>
<PRE>   ULONG FAR EXPORT CEditPrintObj::XEditObj::AddRef()
   {
      METHOD_PROLOGUE(CEditPrintObj, EditObj)
      return pThis-&gt;ExternalAddRef();
   }

</PRE><h3>Second Code Problem</h3>
 
<P>
The second problem is in the discussion of aggregation. In the second step,
the instructions say, "Include an INTERFACE_AGGREGATE macro in your
interface map, which refers to the member variable by name." However, the
code doesn't do that. Here is the incorrect code:
<P>
<PRE>   BEGIN_INTERFACE_MAP(CAggrExample, CCmdTarget)
      // native "INTERFACE_PART" entries go here
      INTERFACE_AGGREGATE(CAggrExample, m_lpTypeInfo)
   END_INTERFACE_MAP()

</PRE>The variable m_lpTypeInfo should be m_lpAggrInner. The code should look
like this:
<P>
<PRE>   BEGIN_INTERFACE_MAP(CAggrExample, CCmdTarget)
      // native "INTERFACE_PART" entries go here
      INTERFACE_AGGREGATE(CAggrExample, m_lpAggrInner)
   END_INTERFACE_MAP()
</PRE> 
<PRE>Keywords          : MfcOLE
Technology        : kbMfc kbole
Version           : 4.0
Platform          : NT WINDOWS
Issue type        : kbdocerr
Solution Type     : kbdocfix</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 17, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
