

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DOC: CCriticalSection::Lock Doesn't Do a Timed Wait </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q151893">
<META NAME="KBModify" CONTENT="1997/07/31">
<META NAME="KBCreate" CONTENT="1996/05/30">
<META NAME="Keywords" CONTENT="MFCThreadIss vcbuglist400 vcfixlist420 kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The CCriticalSection class contains a member function, Lock, that can be used by a thread to gain ownership of a Critical Section object. There are two versions of the Lock function, one taking no arguments and the other taking a DWORD argument. Th...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QAW6,QADN,QAGI,QAA8,QAHE,QABT,QAUQ,QAHT,QAFH,QABO,QBSO,QAIF,QBVV,QAY5 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>DOC: CCriticalSection::Lock Doesn't Do a Timed Wait</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 31, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q151893</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
   - Microsoft Visual C++, 32-bit Edition, versions 4.0, 4.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The CCriticalSection class contains a member function, Lock, that can be
used by a thread to gain ownership of a Critical Section object. There are
two versions of the Lock function, one taking no arguments and the other
taking a DWORD argument. The documentation for the latter version of Lock
states that the DWORD argument specifies the amount of time, in
milliseconds, to wait for the critical section to become available.
<P>
This information is not correct. The CCriticalSection class wraps the SDK
CRITICAL_SECTION object. This object does not have the capability for timed
waits. As a consequence, entering or leaving the Critical Section always
results in blocked waits. Hence, when CCriticalSection::Lock is called, the
argument passed is ignored and an infinite wait is executed.
<P>
The Mutex object has the capability for timed waits. The functionality of
this object is wrapped by the MFC class CMutex. An MFC application should
use the CMutex class when timed waits are desired.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
CCriticalSection::Lock makes a call to ::EnterCriticalSection. This is a
blocking call that does an infinite wait. For example, if another thread
currently owns the Critical Section object, ::EnterCriticalSection blocks
the execution of the calling thread indefinitely until the other thread
releases its ownership. The classes, such as CEvent, CMutex, and
CSemaphore, that wrap other synchronization objects, make a call to
::WaitForSingleObject from their Lock functions. ::WaitForSingleObject
accepts an argument that identifies the time-out interval and executes a
true timed wait. A Critical Section object cannot be used with
::WaitForSingleObject. Therefore, it is not possible to do a timed wait
with Critical Section objects.
<P>
This documentation error was corrected in Visual C++ 32-bit Edition
version 4.2.
 
<PRE>Keywords          : MFCThreadIss vcbuglist400 vcfixlist420 kbprg
Technology        : kbMfc
Version           : 4.0 4.1
Platform          : NT WINDOWS
Issue type        : kbdocerr
Solution Type     : kbdocfix</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 31, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
