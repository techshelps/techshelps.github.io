

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Causes of R6000 "Stack Overflow" Error </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q32816 ">
<META NAME="KBModify" CONTENT="1997/07/17">
<META NAME="KBCreate" CONTENT="1988/07/12">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  An attempt to run an application fails and the run-time library generates the following message:     R6000 Stack Overflow  CAUSE =====  There are two causes for this error:   - The stack overflows because your program does not allocate    enough st...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QBE7,QBE6,QBBI,QAYY,QAAP,QAB4,QBFY,QAKJ,QBV8,QAR5,QA19,QAHE,QAC2,QDIV V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Causes of R6000 "Stack Overflow" Error</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 17, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q32816 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
6.00 6.00a 6.00ax 7.00 | 5.10 6.00 6.00a | 1.00 1.50 1.51 1.52
<PRE>MS-DOS                 | OS/2            | WINDOWS
</PRE>kbprg kbfasttip kbprb
<P>
 
The information in this article applies to:

<UL><LI>The C Run-time (CRT), included with:
<P>
<P><PRE>    - Microsoft C for MS-DOS, versions 6.0, 6.0a, and 6.0ax
    - Microsoft C for OS/2, versions 5.1, 6.0, and 6.0a
    - Microsoft C/C++ for MS-DOS, version 7.0
    - Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51, and 1.52
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
An attempt to run an application fails and the run-time library
generates the following message:
<P>
<PRE>   R6000 Stack Overflow

</PRE><h2>CAUSE</h2>
 
<P>
There are two causes for this error:

<UL><LI>The stack overflows because your program does not allocate
   enough stack space to hold the data the application uses during
   execution. This often affects applications that implement
   recursive algorithms or contain functions that declare large
   amounts of stack-based "local" or "automatic" data.

<LI>The stack overflows because the C startup (initialization) code
   fails in its attempt to allocate stack space.
<P>
</UL><h2>RESOLUTION</h2>
 
<P>
To address the first cause above, perform one or more of the
following:

<UL><LI>Specify the /STACK linker option to specify a larger stack
   allocation
<LI>Modify the source code to use less recursion
<LI>Modify the source code to allocate less stack-based data
<P>
</UL>To address the second cause above, reduce the size of the stack or
reduce the amount of near data your application stores in the DGROUP
segment.
<P>
Please refer below for more information about the causes of this
error, methods to address the problem, and a method to determine which
of the causes above is relevant to a given situation.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Case 1: R6000 Occurs While Application Running</h3>
 
<P>
The stack overflows because the application attempts to push too much
data (either function-return addresses or local data) on the stack.
Each time a function call is made, the caller pushes the return
address on the stack with any parameters. The called function may also
allocate stack-based data for its own use. Each process requires stack
space.
<P>
To address the R6000 error, perform one of the following:

<UL><LI>Decrease the amount of stack-based data. If you declare a variable
   with the keyword "static," it is not pushed on the stack each time
   the function is called.

<LI>Increase the size of the stack by specifying the /F &lt;x&gt; compiler
   option switch, where &lt;x&gt; is a hexadecimal number that specifies the
   desired stack size.

<LI>Change the stack size by specifying the /STACK:&lt;x&gt; linker option
   switch (where &lt;x&gt; is a decimal number that specifies the desired
   stack size) or by using the EXEMOD utility. Note that if you
   increase the stack size too far, you can cause an R6000 error as
   described in case 2 below.
<P>
</UL><h3>Case 2: R6000 Occurs at Startup</h3>
 
<P>
The startup code allocates stack space in the DGROUP segment. If
DGROUP does not contain enough free space for the stack (by default,
2K), the startup code fails and generates the R6000 error.
<P>
To address this situation, either reduce the size of the stack or
reduce the amount of data stored in DGROUP. To reduce the stack size,
compile with the /F &lt;x&gt; option, link with the /STACK:&lt;x&gt; option, or
use the EXEMOD utility, as described above. To reduce the amount of
data stored in DGROUP, compile the code in a large-data memory model
(compact, large, or huge memory model) instead of a small-data memory
model (small or medium memory model). If you are already using a large-
data memory model, specify the /Gt compiler option switch to move data
from DGROUP into far data segments.
<P>
To use the /Gt option, specify /Gt&lt;x&gt;, where &lt;x&gt; is a decimal number
of bytes. Data items larger than &lt;x&gt; bytes are placed into a separate
data segment which creates room in DGROUP for the stack.
<P>
<P><h3>Determining the Cause of the R6000 Error</h3>
 
<P>
The CodeView debugger provides an excellent method to determine the
cause of the problem. After starting CodeView and specifying your
application, execute to the beginning of the main() function by doing
one of the following:

<UL><LI>Manually single-step using the F8 key or T.
<LI>Enter "g main" (without quotation marks) at the CodeView command
   prompt.
<P>
</UL>Once execution passes the opening curly-brace ({) of main(), the C
startup code has allocated space for the stack and data. An R6000
error at this time indicates cause 2 above (a stack overflow at
startup). Otherwise, cause 1 is indicated.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 1.50 6.00 6.00a 6.00ax 7.00<BR>
KBCategory: kbprg kbfasttip kbprb<BR>
KBSubcategory: CRTIss<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 17, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
