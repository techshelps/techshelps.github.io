

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Access Violation After Unloading Extension DLL </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q147315">
<META NAME="KBModify" CONTENT="1997/09/19">
<META NAME="KBCreate" CONTENT="1996/02/22">
<META NAME="Keywords" CONTENT="MfcDLL vcfixlist500 WizardIss kbtool kbbuglist">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  After you dynamically unload an AppWizard-generated Microsoft Foundation Class (MFC) Extension DLL, an access violation may occur as you try to gain access to Windows resources. The last MFC function on the call stack is usually AfxFindResourceHand...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAOG,QAGI,QAR4,QA1S,QBW7,QAM1,QAI5,QDNN,QAIF,QBFY,QA56,QA55,QAY5,QAO4,QAML V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Access Violation After Unloading Extension DLL</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 19, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q147315</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The AppWizard included with:
   - Microsoft Visual C++, 32-bit Edition, versions 2.0, 2.1, 2.2, 4.0,
<P><PRE>     4.1, 4.2
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
After you dynamically unload an AppWizard-generated Microsoft Foundation
Class (MFC) Extension DLL, an access violation may occur as you try to gain
access to Windows resources. The last MFC function on the call stack is
usually AfxFindResourceHandle().
<P>
NOTE: This occurs only when Extension DLLs are loaded and unloaded
explicitly with calls to AfxLoadLibrary() and AfxFreeLibrary() or
LoadLibrary() and FreeLibrary(). Most Extension DLLs are loaded implicitly
by linking to their import libraries.
<P>
<P><h2>CAUSE</h2>
 
<P>
When AppWizard generates the program template for an Extension DLL, it is
not including a call to AfxTermExtensionModule(). This function removes the
DLL from the list of loaded MFC Extension DLLs. Since this list is used
when searching for resources, an access violation may occur after an
AppWizard-generated Extension DLL is freed.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Add the following line to the DLL_PROCESS_DETACH section of an AppWizard-
generated Extension DLL's DllMain():
<P>
<PRE>   else if (dwReason == DLL_PROCESS_DETACH)
   {
      // Add the following line
      AfxTermExtensionModule(extensionDLL);

          // TODO: perform other cleanup tasks here
   }

</PRE>extensionDLL should be the same static value passed to
AfxInitExtensionModule() in the DLL_PROCESS_ATTACH section. This value
should be different for every Extension DLL.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. This problem has been fixed in Visual C++
5.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
NOTE: Dynamically loading and unloading MFC Extension DLLs was not
supported in versions prior to Visual C++ 4.0. Dynamically loading or
freeing Extension DLLs built with earlier versions could corrupt static
MFC state information.
<P>
AfxLoadLibrary() and AfxFreeLibrary() should be called to load and free
MFC Extension DLLs. Calling the Win32 API functions LoadLibrary() and
FreeLibrary() to load or free MFC Extension DLLs can cause problems in
multi-threaded applications.
<P>
For more information on AfxTermExtensionModule() see the "TN033: DLL
Version of MFC" technote in the MFC documentation.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: _AFXDLL gpfault gpf
<P>

<BR>
Keywords          : MfcDLL vcfixlist500 WizardIss kbtool kbbuglist<BR>
Technology        : kbMfc<BR>
Version           : 2.0 2.1 2.2 4.0 4.1 4.2<BR>
Platform          : NT WINDOWS<BR>
Issue type        : kbbug<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 19, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
