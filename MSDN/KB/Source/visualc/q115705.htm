

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: Function Style Conversion Incorrectly Generates Errors </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q115705">
<META NAME="KBModify" CONTENT="1997/07/24">
<META NAME="KBCreate" CONTENT="1994/06/01">
<META NAME="Keywords" CONTENT="CPPIss vcbuglist400 vcbuglist500">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  When calling a class conversion function within a macro, as shown in the code below, the compiler may incorrectly generate the following errors:    error C2061: syntax error : identifier 'timeVal'   error C2066: cast to function type is illegal   e...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAAP,QAB4,QAKP,QBFY,QDO7,QAIH,QAH4,QAY5,QAUD,QANY,QAKM,QBV8,QALZ,QAGI,QAEQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: Function Style Conversion Incorrectly Generates Errors</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 24, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q115705</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft C/C++ Compiler (CL.EXE) included with:
   - Microsoft Visual C++ for Windows, versions 1.0, 1.5
   - Microsoft Visual C++ 32-bit Edition, versions 1.0, 2.0, 4.0, 4.1, 4.2,
<P><PRE>     5.0
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When calling a class conversion function within a macro, as shown in the
code below, the compiler may incorrectly generate the following errors:
<P>
<PRE>  error C2061: syntax error : identifier 'timeVal'
  error C2066: cast to function type is illegal
  error C2059: syntax error : ')'

</PRE><h2>RESOLUTION</h2>
 
<P>
Following are two possible workarounds for this problem:

<UL><LI>Use temporary variables to hold an intermediate result.
<P>
<P><PRE>      unsigned int tmp1, tmp2;
</PRE><P>
<P><PRE>      tmp1 = WORD(timeVal);
      tmp2 = WORD(dateVal);
      m_dwVal = MAKELONG(tmp1, tmp2);
</PRE><P>
</UL>-or-

<UL><LI>Use a type cast operator instead of a conversion operator.
<P>
<P><PRE>      m_dwVal = MAKELONG((WORD)timeVal, (WORD)dateVal);
</PRE><P>
</UL><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the products listed at the
beginning of this article. We are researching this problem and will post
new information here in the Microsoft Knowledge Base as it becomes
available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following sample code demonstrates this problem.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   /* Compile options needed: /c
   */

   typedef unsigned short      WORD;
   typedef unsigned long       DWORD;

   #define LONG long

   #define MAKELONG(low, high) ((LONG)(((WORD)(low)) |  \
                   (((DWORD)((WORD)(high))) &lt;&lt; 16)))

   class CMyDate
   {
   public:
      operator WORD()
      {
         return m_wVal;
      }

   private:
      WORD m_wVal;
   };

   class CMyTime
   {
   public:
      operator WORD()
      {
         return m_wVal;
      }

   private:
      WORD m_wVal;
   };

   class CMyDateTime
   {
      CMyDateTime(CMyDate dateVal, CMyTime timeVal)
      {
         m_dwVal = MAKELONG(WORD(timeVal), WORD(dateVal));

      // This call works in both, even though it is identical.

         m_dwVal= MAKELONG(timeVal.operator WORD(), dateVal.operator
                  WORD());
      }

    private:
      DWORD m_dwVal;
   };
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 8.00 8.00c 9.00<BR>
Keywords            : CPPIss vcbuglist400 vcbuglist500<BR>
Version             : 1.0 1.5 2.0 4.0 4.1 4.2 5.0<BR>
Platform            : NT WINDOWS<BR>
Issue type          : kbbug<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 24, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
