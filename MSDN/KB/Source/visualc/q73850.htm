

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Variables with Local Scope to Switch Won't Be Initialized </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q73850 ">
<META NAME="KBModify" CONTENT="1997/07/24">
<META NAME="KBCreate" CONTENT="1991/07/09">
<META NAME="Keywords" CONTENT="CLngIss kbfasttip">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  In Microsoft C, variables may be declared as local to a switch statement by defining them within the braces that make up the switch. They then have visibility and life for the duration of the switch statement. However, because of the design of a sw...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAHE,QAKR,QAMB,QAC2,QA4Q,QAGX,QAYL,QAPN,QAB9,QABA,QAOE,QBFY,QAVS,QAHH,QAFV V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Variables with Local Scope to Switch Won't Be Initialized</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 24, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q73850 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft C for MS-DOS, versions 6.0, 6.0a, 6.0ax
<LI>Microsoft C/C++ for MS-DOS, version 7.0
<LI>Microsoft Visual C++ for Windows, versions 1.0, 1.5
<LI>Microsoft Visual C++, 32-bit Edition, versions 1.0, 2.0, 2.1, 4.0, 5.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
In Microsoft C, variables may be declared as local to a switch
statement by defining them within the braces that make up the switch.
They then have visibility and life for the duration of the switch
statement. However, because of the design of a switch block, they will
not be initialized when declared unless the variable is static or is
declared after a case label.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
If you must declare an initialized variable that is local to the
switch statement and transient in duration, use brackets before and
after the switch and place the declaration outside the switch
statement.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The ANSI Standard (Section 3.6.4.2) states:
<P>
<PRE>   A "switch" statement causes control to jump to, into, or past
   the statement that is the switch body, depending on the value
   of a controlling expression, and on the presence of a "default"
   label and the values of any "case" labels on or in the switch
   body. A "case" or "default" label is accessible only within the
   closest enclosing "switch" statement.

</PRE><LI>The integral promotions are performed on the controlling
   expression. The constant expression in each "case" label is
   converted to the promoted type of the controlling expression.
   If a converted value matches that of the promoted controlling
   expression, control jumps to the statement following the
   matched "case" label. Otherwise, if there is a "default" label,
   control jumps to the labeled statement. If no converted case
   constant expression matches and there is no default label, no
   part of the switch body is executed.
<P>
</UL>Compiling the sample code below and runnning the resultant executable
demonstrates this problem. The following text will be output:
<P>
<PRE>   local_int NOT initialized

</PRE>There are three options available to ensure that the variable local_int is
initialized to the correct value (5 in this case):

<OL><P><LI>Declare it outside the switch statement, using braces to limit its
   scope if necessary. For example:
<P>
<P><PRE>      {
<PRE></PRE>         int local_int = 5;
         switch (param)
         {
            case 100:
               local_int+=5;
               rc = (local_int == 10 ? 1 : 0);
               break;
            default:
               break;
         }
      }

</PRE><P><LI>Declare after each case label in which it is to be used. For
   example:
<P>
<P><PRE>      switch (param)
      {
<PRE></PRE>         case 100:
         {
            int local_int = 10;
            rc = (local_int == 10 ? 1 : 0);
            break;
         }
         case 101:
         {
            int local_int = 11;
            rc = (local_int == 10 ? 1 : 0);
            break;
         }
         default:
            break;
      }

</PRE><P><LI>Declare the variable as static.
<P>
<P><PRE>      /* Compile options needed: none
      */
</PRE><P>
<P><PRE>      int _cdecl printf(const char *, ...);
      int switch_func(int);
      int main(void);
</PRE><P>
<P><PRE>      int main(void)
      {
<PRE></PRE>         int rc = switch_func(100);

         if ( rc )
            printf("local_int initialized\n");
         else
            printf("local_int NOT initialized\n");

         return( rc );
      }

      int switch_func(int param)
      {
         int rc = 0;

         switch (param)
         {
            int local_int = 5;
            case 100:
               local_int+=5;
               rc = (local_int == 10 ? 1 : 0);
               break;
            default:
               break;
         }

         return( rc );
      }
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : CLngIss kbfasttip<BR>
Version             : 6.0 6.0a 6.0ax 7.0 1.0 1.5 2.0 2<BR>
Platform            : MS-DOS NT WINDOWS<BR>
Issue type          : kbprb<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 24, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
