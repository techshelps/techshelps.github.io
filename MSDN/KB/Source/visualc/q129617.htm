

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Destructor Called on Non Constructed Temporary </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q129617">
<META NAME="KBModify" CONTENT="1997/09/18">
<META NAME="KBCreate" CONTENT="1995/05/01">
<META NAME="Keywords" CONTENT="kbbuglist kbfixlist kbprg kbtool">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The destructor of a class is called on a temporary that was never constructed if all the following conditions exist:   - Two classes A and B are created.  - A global function takes an argument of class B by value.  - A conversion operator is used t...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGI,QAVX,QAVW,QABO,QAIF,QDKW,QAY5,QAH4,QBFY,QAR4,QAPN,QBV8,QAKP,QAUD,QAM1 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Destructor Called on Non Constructed Temporary</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q129617</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.50 1.51 1.52 | 1.00 2.00 2.10
<PRE>WINDOWS        | WINDOWS NT
</PRE>kbtool kbfixlist kbprg
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft C/C++ Compiler (CL.EXE) included with:
<P>
<P><PRE>    - Microsoft Visual C++ for Windows, versions 1.5, 1.51, and 1.52
    - Microsoft Visual C++, 32-bit Edition, versions 1.0, 2.0, and 2.1
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The destructor of a class is called on a temporary that was never
constructed if all the following conditions exist:

<UL><LI>Two classes A and B are created.
<LI>A global function takes an argument of class B by value.
<LI>A conversion operator is used to convert from class A to class B.
<LI>The global function is called with an item of class A.
<P>
</UL>The destructor being called for an object that was never constructed can
cause a general protection (GP) fault or other memory errors at run time.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
Listed below in order of preference are three workarounds to this
problem:

<UL><LI>Define a conversion constructor in class B instead of a conversion
   operator in class A.
<P>
   -or-

<LI>Define the function to take an argument of "const B &amp;" instead of
   taking class B by value.
<P>
   -or-

<LI>Explicitly instantiate a B object and call the global function with the
   instance of the B object.
<P>
</UL>The first workaround produces much cleaner code than the other two
workarounds. See the sample code listed below for further details.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article.  This problem was fixed in Microsoft
Visual C++, 32-bit Edition, version 4.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The sample code below can be used to reproduce this problem. If the program
is complied with no options, the following output is displayed when the
program is run:
<P>
<PRE>   -- A ctor called
   -- Class A -&gt; Class B conversion called
   -- B ctor called, Created B: 1245064
   -- B copy ctor, Created B: 1245096
   -- B dtor called, Destroyed B: 1245064
   -- Calling function test(B) on B: 1245076
   -- B dtor called, Destroyed B: 1245076
       This B was never constructed!
   -- B dtor called, Destroyed B: 1245096
   -- A dtor called

</PRE><h3>Sample Code to Reproduce Problem</h3>
 
<P>
<PRE>/* Compile options needed, choose one of the following:
          none           - To demonstrate the problem.
          /DWORKAROUND1  - For workaround 1.
          /DWORKAROUND2  - For workaround 2.
          /DWORKAROUND3  - For workaround 3.
*/

#include &lt;iostream.h&gt;

</PRE>class A;
<P>
class B
{
<PRE>   B *pBthis;
</PRE>public:
<PRE>   B() {
      pBthis = this;
      cout &lt;&lt; "-- B ctor called, Created B: " &lt;&lt; (long)this &lt;&lt; endl;
   }
</PRE>#ifdef WORKAROUND1
<PRE>   B(const A&amp;) {
      pBthis = this;
      cout &lt;&lt; "-- B(A) ctor called, Created B: " &lt;&lt; (long)this &lt;&lt; endl;
   }
</PRE>#endif
<PRE>   B( const B&amp; b ) {
      pBthis = this;
      cout &lt;&lt; "-- B copy ctor, Created B: " &lt;&lt; (long)this &lt;&lt; endl;
   }
   ~B() {
      cout &lt;&lt; "-- B dtor called, Destroyed B: " &lt;&lt; (long)this &lt;&lt; endl;
     if (pBthis != this)
         cout &lt;&lt; "    This B was never constructed!" &lt;&lt; endl;
   }
};

</PRE>class A
{
public:
<P>
<PRE>   A() { cout &lt;&lt; "-- A ctor called" &lt;&lt; endl; }
   ~A() { cout &lt;&lt; "-- A dtor called" &lt;&lt; endl; }

</PRE>#ifndef WORKAROUND1
<PRE>   operator B() {
      cout &lt;&lt; "-- Class A -&gt; Class B conversion called" &lt;&lt; endl;
      B b1;
      return b1;
   }
</PRE>#endif
<P>
};
<P>
#ifdef WORKAROUND2
<PRE>void test(const B &amp;b)
</PRE>#else
<PRE>void test(B b)
</PRE>#endif
{
<PRE>   cout &lt;&lt; "-- Calling function test(B) on B: " &lt;&lt; (long)(&amp;b) &lt;&lt; endl;
</PRE>}
<P>
<PRE>int main()
</PRE>{
<PRE>   A a;
</PRE>#ifdef WORKAROUND3
<PRE>   B b(a);
   test(b);
</PRE>#else
<PRE>   test(a);
</PRE>#endif
<PRE>   return 0;
</PRE>}
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 1.50 1.51 1.52 2.00 2.10 8.0 8.00 8.0c<BR>
8.00c 9.0 9.00 GPF<BR>
KBCategory: kbtool kbfixlist kbbuglist kbprg<BR>
KBSubCategory: CPPIss<BR>
Keywords          : kbbuglist kbfixlist kbprg kbtool<BR>
Version           : 1.50 1.51 1.52 | 1.00 2.00 2.10<BR>
Platform          : NT WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
