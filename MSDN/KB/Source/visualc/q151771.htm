

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SAMPLE: LICREQST.EXE Requesting a License Key from an Object </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q151771">
<META NAME="KBModify" CONTENT="1997/07/31">
<META NAME="KBCreate" CONTENT="1996/05/29">
<META NAME="Keywords" CONTENT="MfcOLE kbsample kbcode kbfile kbole">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The LicReqst sample illustrates using the IClassFactory2 interface to request an object's License key.  The following file is available for download from the Microsoft Software Library:   ~ Licrqst.exe  For more information about downloading files ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBXO,QAPN,QAW6,QAGI,QAH4,QAUD,QAPF,QBBI,QAY2,QABG,QAI4,QATX,QAQT,QALW,QAMB V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>SAMPLE: LICREQST.EXE Requesting a License Key from an Object</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 31, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q151771</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
4.10
WINDOWS NT
kbole kbfile kbcode
<P>
 
The information in this article applies to:
<P>
<PRE>   Microsoft Visual C++, 32-bit Edition, version 4.1
</PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The LicReqst sample illustrates using the IClassFactory2 interface to
request an object's License key.
<P>
The following file is available for download from the Microsoft
Software Library:
<P>
<PRE> ~ <A HREF="http://support.microsoft.com/download/support/mslfiles/Licrqst.exe">Licrqst.exe</A> <I>(size: 56105 bytes)</I> 

</PRE>For more information about downloading files from the Microsoft Software
Library, please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../zMiscellaneous/Q119591.htm">Q119591</A></B>
   TITLE     : How to Obtain Microsoft Support Files from Online Services

</PRE>NOTE: Use the -d option when running Licrqst.exe to decompress the file and
recreate the proper directory structure.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The LicReqst sample is a dialog-based MFC application that illustrates
using the IClassFactory2 interface to request an object's License key.
LicReqst displays the ProgID of each of the currently registered ActiveX
controls in a Listbox. When one of the displayed ProgID's is selected, an
instance of the corresponding control is created and then asked for it's
License key. If a valid key is returned, LicReqst displays the key and
enables the "Copy to Clipboard" button that allows the License key to be
copied to the Clipboard. The License key can then easily be pasted into
code that uses the CWnd::CreateControl method to dynamically create an
instance of the Control.
<P>
LicReqst creates a textual version of the License key data in the form of a
declaration of an array of WCHAR when copying the key to the Clipboard.
This is done because the License key data could contain non-printable
characters. A human-readable version of the License key data is also
provided for reference and is included inside a Comment block in the final
string that is copied to the Clipboard.
<P>
For example, if an object uses the string "Copyright (c) 1994" (without the
quotes) for its License key, LicReqst would generate the following block of
text that could be copied to and pasted from the Clipboard:
<P>
<PRE>  /*
  Copyright (c) 1994
  */

  WCHAR pwchLicenseKey[] =
  {
    0x0043,  0x006F,  0x0070,  0x0079,  0x0072,  0x0069,
    0x0067,  0x0068,  0x0074,  0x0020,  0x0028,  0x0063,
    0x0029,  0x0020,  0x0031,  0x0039,  0x0039,  0x0034,
    0x0020
  };

</PRE>The block of text shown above can be used in code that creates an instance
of the Licensed object, and the pwchLicenseKey variable can be used to
specify the object's License key.
<P>
For example, if MFC code is dynamically creating an instance of a Licensed
ActiveX Control using the Create method of a Visual C++ Component Gallery
generated wrapper class, the pwchLicenseKey variable can be used in the
Create call like this:
<P>
<PRE>   BSTR bstrLicense = ::SysAllocStringLen(pwchLicenseKey,
       sizeof(pwchLicenseKey)/sizeof(WCHAR));

   m_MyControl.Create(NULL, WS_VISIBLE, CRect(10,10,10,10), this,
       2, NULL, FALSE, bstrLicense);

   ::SysFreeString(bstrLicense);

</PRE>Note how a BSTR is created from the pwchLicenseKey variable and how the
BSTR is then used for the License key parameter in the Create call.
<P>
NOTE: The code in this sample that generates the text copied to the
Clipboard makes the assumption that it is being executed on a little endian
machine (Intel x86-class processors). Because of this, it will not work
correctly on big endian machines. For these machines, it is still possible
to use the Helper function used internally by the sample to request the
License key from an object.
<P>
The sample uses a Helper function called RequestLicenseKey() to get the
License key from an object based on its ProgID. The source code for the
RequestLicenseKey() function is shown below in the Sample Code section.
<P>
To find other locations of interest in the sample source code, use the
Find in Files feature of the Visual C++ Developer Studio to search for the
string named SAMPLE CODE. This string has been used to tag each of the
modified sections in the source code.
<P>
NOTE: Running the LicReqst sample on a licensed machine to obtain an
object's License key, and then distributing that key to allow applications
to be developed on other non-licensed machines, may be a violation of
established copyrights. For more information and to determine if an
object's License key can be legally redistributed, refer to the License
Agreement provided with the object or contact the creator of the object.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>// Compile options needed: none

///////////////////////////////////////////////////////////////////////
//  SAMPLE CODE - Implementation of the RequestLicenseKey function
//
//  The RequestLicenseKey function uses the IClassFactory2 interface
//  to request a License key from an object specified by its ProgID.
//
//  Parameters:
//
//    [out] BSTR&amp; bstrLicenseKey
//          Upon return, this BSTR will contain either a valid
//          License key or an error message. It is the caller's
//          responsibility to call ::SysFreeString on this BSTR.
//
//    [in]  CString strProgID
//          Specifies the ProgID of the object from which to request the
//          License key.
//
//
//  Return Value:
//
//    A BOOL specifying success or failure. If TRUE is returned,
//    the License key was retrieved successfully and the
//    bstrLicenseKey parameter contains a valid License key. If
//    FALSE is returned, the License key was not retrieved
//    successfully and the bstrLicenseKey parameter contains a
//    descriptive error string.
//
//    Regardless of the return value, it is the responsibility of
//    the caller to call ::SysFreeString on the returned bstrLicenseKey
//    parameter.
//

   BOOL RequestLicenseKey(BSTR&amp; bstrLicenseKey, CString strProgID)
   {
     USES_CONVERSION;

     LPCLASSFACTORY2 pClassFactory;
     CLSID clsid;
     BOOL bValidKeyReturned = FALSE;

     // Get the CLSID of the specified ProgID
     if (SUCCEEDED(CLSIDFromProgID(T2OLE(strProgID), &amp;clsid)))
     {
       // Create an instance of the object and query it for
       //  the IClassFactory2 interface.
       if (SUCCEEDED(CoGetClassObject(clsid, CLSCTX_INPROC_SERVER, NULL,
         IID_IClassFactory2, (LPVOID *)(&amp;pClassFactory))))
       {
         LICINFO licinfo;

         // Check to see if this object has a runtime License key
         if (SUCCEEDED(pClassFactory-&gt;GetLicInfo(&amp;licinfo)))
         {
           if (licinfo.fRuntimeKeyAvail)
           {
             HRESULT hr;

             // The object has a runtime License key, so request it
             hr = pClassFactory-&gt;RequestLicKey(0, &amp;bstrLicenseKey);

             if (SUCCEEDED(hr))
             {
               if(bstrLicenseKey == NULL)
                 bstrLicenseKey = ::SysAllocString(
                   L"&lt;Object returned a NULL license key&gt;");
               else
                 // We got the license key!
                 bValidKeyReturned = TRUE;
             }
             else
               // Requesting the License key failed
               switch(hr)
               {
                 case E_NOTIMPL:
                   bstrLicenseKey = ::SysAllocString(
                     L"&lt;The object's class factory does not support"
                     L" run-time license keys&gt;");
                   break;

                 case E_UNEXPECTED:
                   bstrLicenseKey = ::SysAllocString(
                     L"&lt;An unexpected error occurred when requesting the"
                     L" run-time license key&gt;");
                   break;

                 case E_OUTOFMEMORY:
                   bstrLicenseKey = ::SysAllocString(
                     L"&lt;The object's class factory was unable to allocate"
                     L" the license key&gt;");
                   break;

                 case CLASS_E_NOTLICENSED:
                   bstrLicenseKey = ::SysAllocString(
                     L"&lt;The object's class factory supports run-time"
                     L" licensing, but the current machine\r\nitself is"
                     L" not licensed. Thus, a run-time key is not"
                     L" available on this machine&gt;");
                   break;

                 default:
                   bstrLicenseKey = ::SysAllocString(
                     L"&lt;An unknown error occurred when requesting the"
                     L" license key&gt;");
               }
           }
           else
             bstrLicenseKey = ::SysAllocString(
               L"&lt;The object has no runtime license key&gt;");
         }
         else
           bstrLicenseKey = ::SysAllocString(
             L"&lt;Unable to get the licensing capabilities of the object's"
             L" class factory&gt;");

         // Make sure we release the reference to the class factory
         pClassFactory-&gt;Release();
       }
       else
         bstrLicenseKey = ::SysAllocString(
           L"&lt;Unable to get the IClassFactory2 interface from the"
           L" specified object&gt;");
     }
     else
       bstrLicenseKey = ::SysAllocString(
         L"&lt;Unable to get the CLSID of the specified object&gt;");

     // Return a BOOL specifying whether or not we were able to get a
     //  valid license key
     return bValidKeyReturned;
   }

</PRE><h2>REFERENCES</h2>
 
<P>
For more information, please see: The documentation in the OLE Programmer's
Reference on the IClassFactory2 interface and the documentation on the
CWnd::CreateControl method.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbole kbfile kbcode<BR>
KBSubcategory: MfcOLE kbsample<BR>
Additional reference words: 4.10<BR>
Keywords          : MfcOLE kbsample kbcode kbfile kbole<BR>
Technology        : kbMfc<BR>
Version           : 4.10<BR>
Platform          : NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 31, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
