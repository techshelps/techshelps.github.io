

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INFO: Archiving Several Objects That Point to a Third Object </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q85520 ">
<META NAME="KBModify" CONTENT="1997/10/10">
<META NAME="KBCreate" CONTENT="1992/06/11">
<META NAME="Keywords" CONTENT="MfcFileIO kbinfo">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  When an application uses the archiving capabilities of the Microsoft Foundation Classes, you must carefully archive objects that contain pointers. If two distinct objects (A and B) each point to a third object (C), you serialize A and B into separa...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QAW6,QAUR,QBFY,QA2X,QBQU,QABO,QA9N,QASB,QBDM,QA56,QA55,QAYY,QAL2,QAKH V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INFO: Archiving Several Objects That Point to a Third Object</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q85520 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC), included with:
<P><PRE>    - Microsoft C/C++ version 7.0
    - Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51, 1.52
    - Microsoft Visual C++ 32-bit Edition, versions 1.0, 2.0, 2.1, 4.0, 4.1
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
When an application uses the archiving capabilities of the Microsoft
Foundation Classes, you must carefully archive objects that contain
pointers. If two distinct objects (A and B) each point to a third
object (C), you serialize A and B into separate archives, and
deserialize A and B, each one points to a unique copy of object C.
<P>
This can cause several problems. If either object A or B changes
object C, the change affects only the corresponding copy of object C.
This can cause inconsistencies. In addition, this creates duplicate
copies of object C on disk and in memory which wastes system
resources.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The CArchive class provides a solution to this classic problem when an
application serializes two objects into one archive object. Each
archive maintains a mapping from the stored object to a 16-bit
persistent identifier (PID). The serialization process assigns a new
PID to each unique class and object name in an archive.
<P>
Each time an application saves an object to the archive (usually
through the insertion operator), the serialization code determines if
the class or object already exists in the archive. For any class or
object already in the archive, the code inserts the PID already
associated with the object instead of a new copy of the class or
object.
<P>
PID values have no significance outside an archive. If you serialize
objects A and B into different archives, the process assigns a PID to
object C and stores of the object in each archive, even if both
archives refer to the same file. Even if you disregard the space that
this process wastes, deserializing the objects creates a data
structure that contains two distinct copies of object C, which does
not accurately reflect the original data structure.
<P>
Additional information on storing objects using the CArchive class is
available in the "Class Libraries User's Guide" and in the "Class
Libraries Reference" manual. In Visual C++, further information is
available in Technical Note #2 in the MFC Tech Notes help file. In
Microsoft C/C++ version 7.0, further information is available in
Microsoft Foundation Classes technical note file TN002.TXT.
<P>
NOTE: Starting with Visual C 4.0, the PID can be 16- or 32-bit value
depending on the number of objects serialized.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: Carchive persistent serialize<BR>
Keywords          : MfcFileIO kbinfo<BR>
Technology        : kbmfc<BR>
Version           : 1.0 1.5 1.51 1.52 2.0 2.1 4.0 4.<BR>
Platform          : MS-DOS NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
