

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Assertion Failed - SOCKCORE.CPP, Line 51 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q130944">
<META NAME="KBModify" CONTENT="1997/07/18">
<META NAME="KBCreate" CONTENT="1995/05/30">
<META NAME="Keywords" CONTENT="kb16bitonly MfcSockets kberrmsg kbprb kbprg kbtshoot">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  An application using MFC's socket classes (CSocket and CAsyncSocket) causes an assertion failure upon exit. The assertion failure text is similar to this:     myapp Windows Application: File sockcore.cpp, Line 51, Assertion Failed!  CAUSE =====  Th...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QAW6,QAO4,QABI,QAJH,QBVV,QAGB,QAEV,QBXT,QA56,QA55,QA5V,QAUD,QAIB,QBWS V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Assertion Failed - SOCKCORE.CPP, Line 51</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q130944</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.52
WINDOWS
kbprg kberrmsg kbprb kbtshoot
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
   Microsoft Visual C++ for Windows, version 1.52
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
An application using MFC's socket classes (CSocket and CAsyncSocket) causes
an assertion failure upon exit. The assertion failure text is similar to
this:
<P>
<PRE>   myapp Windows Application: File sockcore.cpp, Line 51, Assertion Failed!

</PRE><h2>CAUSE</h2>
 
<P>
This assertion failure most likely occurs if any CSocket or CAsyncSocket
objects have not been closed (or destroyed).
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Ensure that all socket objects in the application are properly closed and
destroyed. If a socket object has been used but was not destroyed, this
message will occur.
<P>
Here is a technique you can use to determine which socket object was not
destroyed:

<OL><P><LI>Make sure that tracing has been enabled by running the "MFC Trace
   Options" program, which can be found in the Visual C++ group. Select the
   Enable Tracing check box.

<P><LI>Debug the application using the Visual Workbench Debugger:
<P>
   Select Debug.Go

<P><LI>When the Assertion Failed! message box appears for this assertion,
   select Ignore.
<P>
</OL>At this point, if you have not destroyed all of your socket objects, the
Visual Workbench Output window will probably list a memory leak for the
particular socket object that has not been destroyed. The message looks
similar to this:
<P>
<PRE>   Detected memory leaks!
   Dumping objects -&gt;
   {2} a CSocket at $DEF0932 m_hSocket = 0x2
   m_pbBlocking = $0
   m_nConnectError = -1
   Object dump complete.

</PRE></OL><h2>STATUS</h2>
 
<P>
This behavior is by design.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
For more information on how to track down memory leaks, please see the
following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../VISUALC/Q122307.htm">Q122307</A></B>
   TITLE     : Tracking Down Memory Leaks with _afxBreakAlloc

</PRE>Using the techniques shown in <B><A HREF="../VISUALC/Q122307.htm">Q122307</A></B>, you can determine where the socket
object was allocated.
<P>
Sockets require a window to receive notification messages when socket
events occur (when data is ready to be received on the socket). MFC manages
this notification window for you when you use the MFC socket classes.
<P>
This window is created by MFC when your application uses a socket object.
When all of the socket objects have been closed, MFC destroys the
notification window.
<P>
The assertion failure message is generated by the following line:
<P>
<PRE>   ASSERT(_afxSockState-&gt;hSocketWindow == NULL);

</PRE>This assertion is verifying that the socket notification window has been
destroyed. Because this window is destroyed when all of the socket objects
have been destroyed, you have most likely created and used a socket object
but never destroyed it.
<P>
A common scenario where this might occur is with a server application that
opens a listening socket, and the listening socket is left open throughout
the execution of the application. In this scenario, you may easily overlook
the need to destroy the socket object. For example:
<P>
<PRE>   BOOL CMyApp::InitInstance()
   {
      // ...
      m_pSock = new CListeningSocket;
      m_pSock-&gt;Create(nPort);
      m_pSock-&gt;Listen();
      // ...
      return CWinApp::InitInstance();
   }

</PRE>This is a common sequence of events, but you must remember to destroy the
socket object before exiting the application. For example:
<P>
<PRE>   int CMyApp::ExitInstance()
   {
      delete m_pSock;
      return CWinapp::ExitInstance();
   }
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.52 2.52<BR>
KBCategory: kbprg kberrmsg kbprb kbtshoot<BR>
KBSubcategory: MfcSockets<BR>
Keywords            : kb16bitonly MfcSockets kberrmsg kbprb kbprg kbtshoot<BR>
Technology          : kbMfc<BR>
Version             : 1.52<BR>
Platform            : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
