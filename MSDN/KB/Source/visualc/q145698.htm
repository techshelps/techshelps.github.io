

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Mnemonic Differences Between MFC 4.0 and Visual Basic 4.0 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q145698">
<META NAME="KBModify" CONTENT="1997/07/31">
<META NAME="KBCreate" CONTENT="1996/02/05">
<META NAME="Keywords" CONTENT="MfcOLE kbcode kbprb">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  An accelerator table provided by way of COleControl::OnGetControlInfo that describes an OLE control's mnemonic keys does not work in both MFC 4.0 and Visual Basic 4.0 OLE control containers.  CAUSE =====  Visual Basic 4.0 and MFC 4.0 provide differ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAMN,QA7O,QAB5,QAOE,QAGH,QAW6,QAH4,QA9Q,QBBI,QAUD,QAGI,QABH,QABI,QAHV V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Mnemonic Differences Between MFC 4.0 and Visual Basic 4.0</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 31, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q145698</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
<P><PRE>    - Microsoft Visual C++, 32-bit Edition, version 4.0
    - Microsoft OLE Control Developer's Kit (CDK), versions 1.0, 1.1, 1.2
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
An accelerator table provided by way of COleControl::OnGetControlInfo that
describes an OLE control's mnemonic keys does not work in both MFC 4.0 and
Visual Basic 4.0 OLE control containers.
<P>
<P><h2>CAUSE</h2>
 
<P>
Visual Basic 4.0 and MFC 4.0 provide different mnemonic handling
implementations, so they require different accelerator table entries.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Create accelerator table entries that will allow a control's mnemonics to
be handled in both a Visual Basic 4.0 and MFC 4.0 OLE control container.
<P>
<P><h2>STATUS</h2>
 
<P>
This behavior is by design.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
An OLE control overrides the virtual COleControl::OnGetControlInfo method
to allow its container to get a description of the control's mnemonic keys.
The OnGetControlInfo method returns a filled-out structure of type
CONTROLINFO that contains, among other things, a handle to an accelerator
table. This accelerator table is used by the container to do checks for
mnemonic keys. When the container determines that a control's mnemonic key
was pressed, it calls the control's IOleControl::OnMnemonic method. This
causes the MFC framework to call the virtual COleControl::OnMnemonic
method, which the control can override to do special processing.
<P>
The Visual Basic 4.0 and MFC 4.0 OLE control mnemonic handling
implementations have different requirements for the entries in the
accelerator table returned by way of OnGetControlInfo.
<P>
An accelerator key used in an accelerator table is defined by the ACCEL
structure. The ACCEL structure has the following definition:
<P>
<PRE>   typedef struct tagACCEL
   {
       BYTE   fVirt;
       WORD   key;
       WORD   cmd;
   } ACCEL;

</PRE>The fVirt member specifies the accelerator flags. This member can be a
combination of the following values:
<P>
<PRE>   Value       Meaning
   ---------------------------------------------------------------------
   FALT        The ALT key must be held down when the accelerator key is
               pressed.
   FCONTROL    The CTRL key must be held down when the accelerator key
               is pressed.
   FNOINVERT   Specifies that no top-level menu item is highlighted when
               the accelerator is used. If this flag is not specified, a
               top-level menu item will be highlighted, if possible,
               when the accelerator is used.
   FSHIFT      The SHIFT key must be held down when the accelerator key
               is pressed.
   FVIRTKEY    The key member specifies a virtual-key code. If this flag
               is not specified, key is assumed to specify an ASCII
               character code.

</PRE>The key member specifies the accelerator key. This member can be either a
virtual-key code or an ASCII character code.
<P>
The cmd member specifies the accelerator identifier. This value is placed
in the low-order word of the wParam parameter of the WM_COMMAND or
WM_SYSCOMMAND message when the accelerator is pressed.
<P>
Visual Basic 4.0 has the following requirements for accelerator table
entries used for mnemonic handling:

<UL><LI>The fVirt member must be a combination of (FVIRTKEY | FALT) or
   (FVIRTKEY | FALT | FSHIFT).
<LI>The key member must be uppercase.
<LI>The cmd member must not be equal to 0.
<P>
</UL>MFC 4.0 has the following requirements for accelerator table entries used
for mnemonic handling:

<UL><LI>The fVirt member must be FALT or 0.
<LI>The key member must be lowercase.
<LI>The cmd member is ignored.
<P>
</UL>MFC 4.0 OLE control containers also differ from Visual Basic 4.0 in the way
they handle mnemonic processing when a control is UI active. When handling
keyboard input MFC containers, first check to see if an OLE control has the
focus. If it does, the framework calls its
IOleInPlaceActiveObject::TranslateAccelerator method. In the COleControl
implementation of this method the control's PreTranslateMessage function is
called. In order for an OLE control to have its mnemonics function
correctly when the control is UI active, the OLE control must override
PreTranslateMessage and check for its special key combinations.
<P>
NOTE: Overriding PreTranslateMessage is not necessary if the control is
generated with Visual C++ 5.0 because OnMnemonic will be called when the
control is UI active.
<P>
The following sample code shows an overridden OnGetControlInfo,
PreTranslateMessage, and OnMnemonic that allow a control's mnemonics to
work correctly in both an MFC 4.0 OLE control container as well as a Visual
Basic 4.0 container.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>/* Compile options needed: None
*/

#define NUM_ENTRIES 4

void CMnemonicCtrl::OnGetControlInfo(LPCONTROLINFO lpi)
</PRE>{
<PRE>  HACCEL hAccel = NULL;
  TCHAR ch = 'm';   // Hard code the mnemonic key to 'm' for this
                    // example.

  ACCEL accKey[NUM_ENTRIES];

  // Accel table entries 0 and 1 are to work with Visual Basic 4.0 as a
  // container. Visual Basic 4.0 has the following requirements for
  // accel table entries for a control's mnemonics:
  //
  //  (fVirt == FVIRTKEY | FALT) || (fVirt == FVIRTKEY | FALT | FSHIFT)
  //  key must be uppercase
  //  (cmd != 0)

  accKey[0].fVirt = FVIRTKEY | FALT;
  accKey[1].fVirt = FVIRTKEY | FALT | FSHIFT;
  accKey[0].key = accKey[1].key = LOBYTE(VkKeyScan(ch));
  accKey[0].cmd = accKey[1].cmd = 1;

  // Accel table entries 2 and 3 are to work with MFC 4.0 containers.
  // MFC containers have the following requirements for accel table
  // entries for a control's mnemonics:
  //
  //  (fVirt == FALT) || (fVirt == 0)
  //  key should be lowercase
  //  cmd is ignored

  accKey[2].fVirt = FALT;
  accKey[3].fVirt = 0;
  accKey[2].key = accKey[3].key = ch;
  accKey[2].cmd = accKey[3].cmd = 1;

  // Create the accel table.
  hAccel = CreateAcceleratorTable(accKey, NUM_ENTRIES);

  if (hAccel != NULL)
  {
    // Fill in the CONTROLINFO structure passed in.
    lpi -&gt; hAccel = hAccel;
    lpi -&gt; cAccel = NUM_ENTRIES;
    lpi -&gt; dwFlags = 0;
  }
  else
    COleControl::OnGetControlInfo(lpi);
</PRE>}
<P>
<PRE>// NO need to override PreTranslateMessage if the control is generated in
// Visual C++ 5.00.
</PRE>BOOL CMnemonicCtrl::PreTranslateMessage( MSG * pMsg )
{
<PRE>  // Check for ALT-M key combination.
  if(pMsg-&gt;message == WM_SYSKEYDOWN) {
    if((pMsg-&gt;wParam == 'm')||(pMsg-&gt;wParam == 'M'))
    {
      // Do mnemonic key processing here.
      return TRUE;
    }
  }
  return COleControl::PreTranslateMessage(pMsg);
</PRE>}
<P>
<PRE>void CMnemonicCtrl::OnMnemonic(LPMSG pMsg)
</PRE>{
<PRE>  if ((pMsg-&gt;message == WM_SYSKEYDOWN)||
      (pMsg-&gt;message == WM_SYSCHAR))
  {
    if ((pMsg-&gt;wParam == 'm')||(pMsg-&gt;wParam == 'M'))
    {
      // Do mnemonic key processing here.
      return;
    }
  }
  COleControl::OnMnemonic(pMsg);
</PRE>}
 
<PRE>Keywords          : MfcOLE kbcode kbprb
Technology        : kbMfc
Version           : 1.5 1.51 1.52 2.0 2.1. 2.2 4.0
Platform          : NT WINDOWS</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 31, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
