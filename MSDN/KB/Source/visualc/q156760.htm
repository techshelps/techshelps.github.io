

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>STL Sample for deque::front and deque::back Functions </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q156760">
<META NAME="KBModify" CONTENT="1997/10/09">
<META NAME="KBCreate" CONTENT="1996/09/30">
<META NAME="Keywords" CONTENT="STLIss kbcode">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The sample code below illustrates how to use the deque::front and deque::back STL functions for the deque container class in Visual C++.  MORE INFORMATION  Required Header               Prototype ---------     reference front();    const_reference ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAML,QBFY,QAGY,QAY5,QAOX,QA6A,QAK9,QABC,QBV8,QAB3,QAPF,QAB9,QA56,QA55,QAUD V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>STL Sample for deque::front and deque::back Functions</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 9, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q156760</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Standard C++ Library included with:
   - Microsoft Visual C++, 32-bit Edition, version 4.2
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The sample code below illustrates how to use the deque::front and
deque::back STL functions for the deque container class in Visual C++.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Required Header</h3>
 
<P>
<PRE>   &lt; deque&gt;

</PRE><h3>Prototype</h3>
 
<P>
<PRE>   reference front();
   const_reference front() const;

   reference back();
   const_reference back() const;

</PRE>NOTE: The class/parameter names in the prototype may not match the version
in the header file. Some have been modified to improve readability.
<P>
<P><h3>Description</h3>
 
<P>
The member function front() returns a reference to the first element of
the controlled sequence, which must be non-empty.
<P>
The member function back() returns a reference to the last element of
the controlled sequence, which must be non-empty.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   //////////////////////////////////////////////////////////////////////
   //
   // Compile options needed: -GX
   //
   // deque.cpp :
   //
   // Functions:
   //
   //    front()
   //
   //    back()
   //
   // Written by Bobby Mattappally
   // of Microsoft Product Support Services,
   // Copyright (c) 1996 Microsoft Corporation. All rights reserved.
   //////////////////////////////////////////////////////////////////////

   /* Compile options needed:-GX
   */
   #include &lt;iostream&gt;
   #include &lt;deque&gt;

   typedef deque&lt;char, allocator&lt;char&gt; &gt;  CHARDEQUE;
   void print_contents (CHARDEQUE  deque, char*);

   void main()
   {
       //create a  with  A, B, C and D
       CHARDEQUE  a;
       a.push_back('A');
       a.push_back('B');
       a.push_back('C');
       a.push_back('D');

       //print out the contents
       print_contents (a,"a");

       cout &lt;&lt;"The first element of a is " &lt;&lt;a.front() &lt;&lt;endl;

       cout &lt;&lt;"The last element of a is " &lt;&lt;a.back() &lt;&lt;endl;

       //now let us modify the first and last elements
       //using reference ,front() and back()

       CHARDEQUE::reference reffront=a.front();
       CHARDEQUE::reference refback=a.back();

       reffront='X';
       refback='Y';

        //print out the contents
        print_contents (a,"a");

       }

   //function to print the contents of deque
   void print_contents (CHARDEQUE  deque, char *name)
   {
       CHARDEQUE::iterator pdeque;

       cout &lt;&lt;"The contents of "&lt;&lt; name &lt;&lt;" : ";

           for(pdeque = deque.begin();
           pdeque != deque.end();
           pdeque++)
       {
           cout &lt;&lt; *pdeque &lt;&lt;" " ;
       }
           cout&lt;&lt;endl;
   }

</PRE>Program output is:
<P>
<PRE>   The contents of a : A B C D

   The first element of a is A

   The last element of a is D

   The contents of a : X B C Y

</PRE><h2>REFERENCES</h2>
 
<P>
Visual C++ Books On Line: Visual C++ Books:C/C++:Standard C++ Library
Reference.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: STL STLSample deque front back reference<BR>
Keywords          : STLIss kbcode<BR>
Version           : WINNT:4.2;<BR>
Platform          : NT WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 9, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
