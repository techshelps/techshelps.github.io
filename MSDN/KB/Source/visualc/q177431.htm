

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: C2065: Undeclared Identifier Creating a STL Function Object </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q177431">
<META NAME="KBModify" CONTENT="1997/12/01">
<META NAME="KBCreate" CONTENT="1997/12/01">
<META NAME="Keywords" CONTENT="CPPIss CPPLngIss STLIss vcbuglist500 kbbuglist">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Creating the STL function object “binder2nd” causes the compiler to generate the following error C2065:     'identifier' : undeclared identifier  It is the “std::multiples     (): line that causes the namespace to be lost.  RESOLUTION  One of the f...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA4Q,QDKW,QAMB,QAKP,QBXT,QA5V,QAPN,QAIB,QDIX,QAY5,QAW6,QAUD,QBV8,QAKN,QBFY V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: C2065: Undeclared Identifier Creating a STL Function Object</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 1, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q177431</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual C++, 32-bit Edition, version 5.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Creating the STL function object “binder2nd” causes the compiler to
generate the following error C2065:
<P>
<PRE>   'identifier' : undeclared identifier

</PRE>It is the “std::multiples&lt;int&gt;(): line that causes the namespace to be
lost.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
One of the following methods can be used to work around this problem:

<UL><LI>Use the 'using namespace' directive instead of qualifying the function
   objects.
<P>
 -or-

<LI>Pre-declaring an instance of std::multiplies&lt;int&gt; solves the problem.
<P>
</UL><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft product
listed at the beginning of this article. We are researching this
bug and will post new information here in the Microsoft Knowledge
Base as it becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following sample demonstrates the problem and the first workaround.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   /*
   * Compiler Options: /GX
   */

   #include &lt;algorithm&gt;
   #include &lt;functional&gt;
   #include &lt;iostream&gt;

   #define BUG
   //Workaround: Comment the line above.
   //Uncomment the line below.
   //#define WORKAROUND

   #ifdef WORKAROUND
   using namespace std ;
   #endif

   int main()
   {

   #ifdef BUG
      std::binder2nd&lt; std::multiplies&lt;int&gt; &gt;
                     times_two(std::multiplies&lt;int&gt;(), 2);
   #endif

   #ifdef WORKAROUND
       binder2nd&lt; multiplies&lt;int&gt; &gt; times_two(multiplies&lt;int&gt;(), 2);
   #endif

      int n = times_two(4) ;
      std::cout &lt;&lt; "n = " &lt;&lt; n &lt;&lt; std::endl ;
      return 0 ;
   }

</PRE>The following sample demonstrates the problem and the second workaround.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   /*
   * Compiler Options: /GX
   */

   #include &lt;algorithm&gt;
   #include &lt;functional&gt;
   #include &lt;iostream&gt;

   #define BUG
   //Workaround: Comment the line above.
   //Uncomment the line below.
   //#define WORKAROUND

   int main()
   {

   #ifdef BUG
      std::binder2nd&lt; std::multiplies&lt;int&gt; &gt;
                     times_two(std::multiplies&lt;int&gt;(), 2);
   #endif

   #ifdef WORKAROUND
      std::multiplies&lt;int&gt; mi ;
      std::binder2nd&lt; std::multiplies&lt;int&gt; &gt; times_two(mi, 2);
   #endif

      int n = times_two(4) ;
      std::cout &lt;&lt; "n = " &lt;&lt; n &lt;&lt; std::endl ;
      return 0 ;
   }

</PRE><h2>REFERENCES</h2>
 
<P>
Please see the following help topics in the Microsoft Visual C++ online
documentation for more information on ”binder2nd”:
<P>
<PRE>   TITLE: binder2nd
   URL:   mk:@ivt:vclang/STDLIBBLD/FUNCTIO2_BINDER2ND.HTM

   TITLE: Visual C++ 4.2 Standard Template Library Tutorial
   URL:   mk:@ivt:tatech/F1/DB/S4249.HTM#sec58

</PRE> 
<PRE>Keywords          : CPPIss CPPLngIss STLIss vcbuglist500 kbbuglist
Version           : WINNT:5.0
Platform          : winnt
Issue type        : kbbug
Solution Type     : kbfix</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 1, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
