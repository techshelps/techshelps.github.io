

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Vector Delete Calls Exported Destructor Only Once </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q121216">
<META NAME="KBModify" CONTENT="1997/09/18">
<META NAME="KBCreate" CONTENT="1994/09/28">
<META NAME="Keywords" CONTENT="CPPIss vcbuglist400 vcfixlist500 kbprg kbtool">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  A call to the vector delete operator on a class defined in a DLL calls the destructor for the object only once. This problem occurs only if the destructor is virtual and the DLL itself does not reference the vector memory allocation functions (new ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGI,QBCT,QAEF,QAGC,QAGB,QDKD,QAY5,QA63,QAOT,QALQ,QAH4,QADF,QBFY,QAR4,QAIF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Vector Delete Calls Exported Destructor Only Once</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q121216</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft C/C++ Compiler (CL.EXE) included with:
   - Microsoft Visual C++ for Windows, versions 1.0, 1.5
   - Microsoft Visual C++ 32-bit Edition, versions 1.0, 2.0, 4.0,
<P><PRE>     4.1, 4.2
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
A call to the vector delete operator on a class defined in a DLL calls the
destructor for the object only once. This problem occurs only if the
destructor is virtual and the DLL itself does not reference the vector
memory allocation functions (new [] or delete []).
<P>
<P><h2>CAUSE</h2>
 
<P>
The code generated by the compiler to perform vector deleting of objects is
done by generating a call to an internal function. This internal function
is generated by the compiler.
<P>
The problem is due to an incorrect compiler optimization. The compiler
assumes that if a module (EXE or DLL) never makes reference to the vector
memory operators, then the internal function that handles the vector
deleting is not needed. This is a valid optimization for an EXE but not for
a DLL.
<P>
Therefore, this statement:
<P>
<PRE>   delete [] pClass

</PRE>Ends up being basically the same as:
<P>
<PRE>   delete pClass

</PRE><h2>RESOLUTION</h2>
 
<P>
To work around this problem, you must force your DLL to reference the
vector deleting destructor. The memory allocation functions don't actually
need to be called. The compiler just needs to see them. This can be done by
generating a dummy function that is never called but that is linked in to
the DLL. For example:
<P>
<PRE>   void ForceVectors()
   {
     CMyClass *pClass = new CMyClass[2];
     CMyClass *pOtherClass = new CMyOtherClass[2];
   };

   static (void *pFunc)() = ForceVectors;

</PRE>The reference to the static variable initialization (pFunc) forces the
function ForceVectors to be linked in. This then forces the DLL to have the
vector deleting destructors for the classes (CMyClass and CMyOtherClass).
Place this code in any module in your DLL.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the products listed at the
beginning of this article. This bug was corrected in Visual C++ version
5.0.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 8.00 8.00c 9.00 10.00 10.10 10.20
<P>

Keywords          : CPPIss vcbuglist400 vcfixlist500 kbprg kbtool<BR>
Version           : 1.0 1.5 1.0 2.0 4.0 4.1<BR>
Platform          : NT WINDOWS<BR>
Issue type        : kbbug<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
