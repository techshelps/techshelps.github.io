

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: Default Button Style Not Set Correctly in CFormView </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q135759">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1995/08/27">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  In a 16-bit MFC application that includes command buttons in a form view, if you click a button other than the default button, the current button gets the focus but does not have the default button style. That is, the button is not surrounded by a ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAUD,QAEV,QABA,QAYC,QBVV,QA5D,QAJD,QAH4,QADO,QDL9,QBWQ,QBWO,QBWN,QBFY,QA56 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: Default Button Style Not Set Correctly in CFormView</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q135759</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.50 1.51 1.52 1.52b
WINDOWS
kbprg kbcode kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Fundation Classes (MFC) included with:
   Microsoft Visual C++ for Windows, versions 1.5, 1.51, 1.52, 1.52b
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
In a 16-bit MFC application that includes command buttons in a form view,
if you click a button other than the default button, the current button
gets the focus but does not have the default button style. That is, the
button is not surrounded by a heavy border. However, if you use the TAB key
to move from one control to another, the default button style is moved to
the button that has the focus.
<P>
NOTE: This occurs only in appliations developed by using the Microsoft
products listed at the beginning of this article. It does not occur in
applications developed using Visual C++ version 1.0 for Windows or Visual
C++ 32-bit editions.
<P>
<P><h2>CAUSE</h2>
 
<P>
Only the keyboard messages are passed to the dialog manager but the mouse
messages are filtered out in the CFormView::PreTranslateMessage.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Override CFormView::PreTranslateMessage() in your CFormView-derived class.
Call CFormView's PreTranslateMessage() to process the keyboard messages. If
CFormView::PreTranslateMessage() returns FALSE, you should check to see if
the messages are mouse messages and handle them if they are. You can use
something similar to the following code to work around the problem:
<P>
BOOL CMyFormView::PreTranslateMessage( MSG *pMsg )
{
<PRE>  BOOL processed = CFormView::PreTranslateMessage( pMsg );

  if ( !processed &amp;&amp; pMsg-&gt;message &gt;= WM_MOUSEFIRST &amp;&amp;
                                 pMsg-&gt;message &lt;= WM_MOUSELAST )
     return ::IsDialogMessage( m_hWnd, pMsg );

  return processed;
</PRE>}
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. We are researching this bug and will post
new information here in the Microsoft Knowledge Base as it becomes
available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Code to Reproduce Problem</h3>
 
<P>
BOOL CFormView::PreTranslateMessage(MSG* pMsg)
{
<PRE>    ...

    if (pMsg-&gt;message &gt;= WM_KEYFIRST &amp;&amp; pMsg-&gt;message &lt;= WM_KEYLAST)
            return ::IsDialogMessage(m_hWnd, pMsg);

    return FALSE;
</PRE>}
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.50 1.00<BR>
KBCategory: kbprg kbcode kbbuglist<BR>
KBSubCategory: MfcUI<BR>
Keywords            : kb16bitonly<BR>
Technology          : kbMfc<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
