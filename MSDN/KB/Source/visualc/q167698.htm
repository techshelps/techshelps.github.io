

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FILE: Help95.exe Implements Windows 95 Style Help </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q167698">
<META NAME="KBModify" CONTENT="1997/09/30">
<META NAME="KBCreate" CONTENT="1997/04/29">
<META NAME="Keywords" CONTENT="MfcMisc kbcode kbsample kbfile">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Windows 95 provides support for context-sensitive help by means of the messages WM_HELP and WM_CONTEXTMENU. It also provides a new style WS_EX_CONTEXTHELP that has the effect of adding a question mark button to the windows caption bar of a dialog. ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB5,QAEV,QA01,QDL9,QBWQ,QBWO,QBWN,QBTC,QAMN,QAMB,QBFY,QAYC,QA7O,QAOE,QAGI V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FILE: Help95.exe Implements Windows 95 Style Help</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 30, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q167698</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
   - Microsoft Visual C++, 32-bit Editions, versions 4.2, 4.2b, 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Windows 95 provides support for context-sensitive help by means of the
messages WM_HELP and WM_CONTEXTMENU. It also provides a new style
WS_EX_CONTEXTHELP that has the effect of adding a question mark button to
the windows caption bar of a dialog. The HELP95 sample shows how these
messages can be used to show context Help for a window.
<P>
The sample includes the file help95.hpj that contains the following line:
<P>
<PRE>   #include &lt;c:\msdev\mfc\include\afxhelp.hm&gt; // for VC++ 4.xx

   -or-

   #include &lt;c:\devstudio\VC\MFC\include\afxhelp.hm&gt; // for VC++ 5.00

</PRE>This assumes that the Visual C++ compiler is installed in C:\MSDEV (for
Visual C++ 4.xx) or C:\DEVSTUDIO\VC (for Visual C++ 5.00) directory. You
may need to modify this line to reflect the correct path.
<P>
The following file is available for download from the Microsoft Software
Library:
<P>
<PRE> ~ <A HREF="http://support.microsoft.com/download/support/mslfiles/Help95.exe">Help95.exe</A> <I>(size: 141131 bytes)</I> 

</PRE>For more information about downloading files from the Microsoft Software
Library, please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../zMiscellaneous/Q119591.htm">Q119591</A></B>
   TITLE     : How to Obtain Microsoft Support Files from
               Online Services

</PRE>NOTE: Use the -d option when running HELP95.EXE to decompress the file
and recreate the proper directory structure.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
In 16-bit MFC, applications implemented context-sensitive Help by using the
accelerator keys F1 and SHIFT+F1 that generated WM_COMMAND messages with
IDs ID_HELP and ID_CONTEXTHELP, respectively. This, together with the MFC
private messages WM_COMMANDHELP and WM_HELPHITEST, was used to bring up
context Help for an application.
<P>
Windows 95 makes this process easier by providing the WM_HELP message that
gets sent each time the user presses the F1 key, giving the application a
chance to bring up Help information on the control that has the keyboard
focus or on the dialog box itself. This new WM_HELP message is not limited
to dialog boxes alone; it gets sent to any window that has keyboard focus
or to the currently active window.
<P>
Windows 95 also provides the new style WS_EX_CONTEXTHELP that adds a
question mark button to a dialog's caption bar. When a user clicks on this
button, the cursor changes to a question mark with a pointer. If the user
then clicks on a control on the dialog box, a WM_HELP message is sent to
it. The control passes this message on to its parent, which should then
handle this message and call WinHelp() with HELP_WM_HELP. This displays a
pop-up window with the Help text for the control.
<P>
There is also the WM_CONTEXTMENU message that gets sent whenever the user
right-clicks on a window. This message is typically used to display a
pop-up menu using TrackPopupMenu(). It can also be used to display context
Help by calling WinHelp() with the parameter HELP_CONTEXTMENU. This has the
effect of displaying a pop-up menu with a "What's This?" entry. Selecting
this option then displays a pop-up window with Help text for the window.
<P>
HELP95 is an MFC MDI application with form views for MDI child windows. The
application shows how to bring up context Help for form views, dialogs,
common dialogs, and property sheets.
<P>
Context Help for dialogs and form views is pretty straight-forward. It
requires that the user handle the WM_HELP or WM_CONTEXTMENU message and
call WinHelp(). Make sure the Help ID is checked for each of the controls
in the resource editor. In case of WM_HELP message, the lParam points to a
HELPINFO structure that contains information about the menu item, control,
dialog box, or window for which help is requested. For WM_CONTEXTMENU
messages, there is no HELPINFO structure with all the information so the
API calls GetDlgCtrlID() and GetWindowContextHelpId() are needed to give
the required information.
<P>
In case of property sheets, it is slightly more complicated. Adding Help
IDs to controls on a property page using the resource editor causes the
DIALOGEX resource to be used instead of the DIALOG resource. But Windows
does not support the creation of property sheets with the DIALOGEX
resource. To work around this, the Help IDs are added programmatically
after the creation of the property sheet and property pages. Also, because
there is no property sheet template, the WS_EX_CONTEXTHELP style has to be
set programmatically. The handling of the WM_HELP and WM_CONTEXTMENU
messages remains the same.
<P>
<P><h2>REFERENCES</h2>
 
<P>
MFC Technical Note 28: "Context-Sensitive Help Support"
<P>
For more information, please see the following articles in the Microsoft
Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../WIN32SDK/Q125670.htm">Q125670</A></B>
   TITLE     : How to Implement Context-Sensitive Help in Windows 95
               Dialogs

   ARTICLE-ID: <B><A HREF="../VISUALC/Q149343.htm">Q149343</A></B>
   TITLE     : How to Implement Context-Sensitive Help for Dialog
               Controls

   ARTICLE-ID: <B><A HREF="../VISUALC/Q138505.htm">Q138505</A></B>
   TITLE     : How to Add Context-Sensitive Help Button to Windows 95
               Dialogs

   ARTICLE-ID: <B><A HREF="../VISUALC/Q110506.htm">Q110506</A></B>
   TITLE     : SAMPLE: Context Sensitive Help in a CDialog

   ARTICLE-ID: <B><A HREF="../VISUALC/Q140676.htm">Q140676</A></B>
   TITLE     : PRB: ClassWizard Uses WM_HELPINFO Instead of WM_HELP

</PRE>(c) Microsoft Corporation 1997, All Rights Reserved. Contributions by
Jaganathan Thangavelu, Microsoft Corporation
 
<PRE>Keywords          : MfcMisc kbcode kbsample kbfile
Technology        : kbMfc
Version           : WINDOWS NT: 4.2, 4.2b, 5.0
Platform          : NT WINDOWS
Issue type        : kbhowto
Solution Type     : kbfile</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 30, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
