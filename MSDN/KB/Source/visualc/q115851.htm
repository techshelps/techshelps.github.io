

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Use of /Oe with Ternary Operator May Generate Bad Code </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q115851">
<META NAME="KBModify" CONTENT="1997/09/18">
<META NAME="KBCreate" CONTENT="1994/06/06">
<META NAME="Keywords" CONTENT="CodeGen kb16bitonly kbbuglist kbfixlist kbtool">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The compiler may generate bad code when the /Oe compiler optimization switch is used when compiling code that contains a complex use of the conditional (ternary) operator. The sample code below shows one such case.  CAUSE =====  This problem is due...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QBFY,QAR4,QAKR,QAHE,QAOT,QAAP,QANY,QAKM,QAYA,QAKP,QDL9,QBXH,QBWQ,QBWO V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Use of /Oe with Ternary Operator May Generate Bad Code</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q115851</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
7.00   | 1.00
MS-DOS | WINDOWS
kbtool kbfixlist kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft C/C++ Compiler (CL.EXE), included with:
<P>
<P><PRE>    - Microsoft C/C++ for MS-DOS, version 7.0
    - Microsoft Visual C++ for Windows, version 1.0
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The compiler may generate bad code when the /Oe compiler optimization
switch is used when compiling code that contains a complex use of the
conditional (ternary) operator. The sample code below shows one such case.
<P>
<P><h2>CAUSE</h2>
 
<P>
This problem is due to an overly aggressive code generation technique
which lengthens byte memory references to word memory references in
certain cases.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
You can correct this error by either

<OL><P><LI>removing the /Oe switch
<P>
   -or-

<P><LI>disabling the optimization via the #pragma statement
<P>
   -or-

<P><LI>simplifying the statement containing the conditional operator
<P>
</OL><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in the C/C++ compiler for
MS-DOS, versions 7.0 and 8.0. This problem was corrected in the C/C++
compiler for MS-DOS version 8.0c, which is included in Visual C++ for
Windows, version 1.5.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following is a fragment of the assembly code generated when compiling
the sample code below:
<P>
<PRE>   *** 00001d  26 ff 07          inc   WORD PTR es:[bx]
   *** 000020  26 8e 47 02       mov   es,WORD PTR es:[bx+2]
   *** 000024  26 8b 34          mov   si,WORD PTR es:[si]

</PRE></OL>The last line of this assembly language fragment is incorrect. The correct
assembly language for this would be:
<P>
<PRE>      *** 000021  26 ff 07          inc   WORD PTR es:[bx]
      *** 000024  26 8e 47 02       mov   es,WORD PTR es:[bx+2]
      *** 000028  26 8a 04          mov   al,BYTE PTR es:[si]

</PRE><h3>Sample Code</h3>
 
<P>
<PRE>/*  compile with these switches: -c -Oe -Fc
*/

</PRE>struct  mystruct {
<PRE>      unsigned char  _far  *ptr;
      int (*buf)(mystruct _far *);
      short cnt;
</PRE>};
<P>
<PRE>// #pragma optimize ("e",off)    // Uncomment line to fix problem
void func1(void)
</PRE>{
<PRE>      int c;
      mystruct _far *fb = (mystruct far *)0;

      while ((c = (--(fb)-&gt;cnt&gt;=0 ?
        ((int)(*((fb)-&gt;ptr)++)) : (*(fb)-&gt;buf)(fb))) != (-1));
}
// #pragma optimize ("e", on)

void main()
</PRE>{
<PRE>  func1();
</PRE>}
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 7.00 8.00 register<BR>
KBCategory: kbtool kbfixlist kbbuglist<BR>
KBSubcategory: CodeGen<BR>
Keywords          : CodeGen kb16bitonly kbbuglist kbfixlist kbtool<BR>
Version           : 7.00   | 1.00<BR>
Platform          : MS-DOS WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
