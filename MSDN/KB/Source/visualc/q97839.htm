

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Compiler Generates C4056, C4756 Warnings Incorrectly </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q97839 ">
<META NAME="KBModify" CONTENT="1997/07/17">
<META NAME="KBCreate" CONTENT="1993/04/22">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="   When it compiles the code sample below, Microsoft C generates one of the following warning messages. In Microsoft C/C++ versions 7.0 and later:     warning C4756: overflow in constant arithmetic  In Microsoft C versions 6.0, 6.0a, and 6.0ax:     w...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB4,QAOT,QBFY,QAH4,QAKJ,QAL3,QAEF,QAKC,QAB9,QBVV,QBC6,QA5C,QAEV,QAAP,QAG8 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Compiler Generates C4056, C4756 Warnings Incorrectly</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 17, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q97839 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
6.00 6.00a 6.00ax 7.00 | 1.00 1.50 1.51 1.52
<PRE>MS-DOS                 | WINDOWS
</PRE>kbtool kbprb
<P>
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft C/C++ Compiler (CL.EXE), included with:
<P>
<P><PRE>    - Microsoft C for MS-DOS, versions 6.0, 6.0a, and 6.0ax
    - Microsoft C/C++ for MS-DOS, versions 7.0
    - Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51, and
      1.52
</UL></PRE> 
<P>
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When it compiles the code sample below, Microsoft C generates one
of the following warning messages. In Microsoft C/C++ versions 7.0
and later:
<P>
<PRE>   warning C4756: overflow in constant arithmetic

</PRE>In Microsoft C versions 6.0, 6.0a, and 6.0ax:
<P>
<PRE>   warning C4056: overflow in constant arithmetic

</PRE>The compiler generates the correct code; the warning is erroneous.
<P>
<P><h2>CAUSE</h2>
 
<P>
The optimizing compiler performs strength reduction for equations by
removing parentheses from the equation when the resulting equation is
mathematically equivalent.
<P>
The warning occurs when strength reduction creates a constant that is too
large for its data type. The compiler can create such a constant because
the ANSI standard does not mandate that the compiler honor parentheses as
long as the resulting equation is mathematically equivalent. After the
compiler performs strength reduction, the compiler cannot determine where
the parentheses were and does not provide any method to suppress the
warning message.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
There are two methods to work around this warning message:

<UL><LI>Compile the module with the fast compiler (specify /f on the
   compiler command line). The fast compiler does not perform any
   strength reduction.

<LI>Create a temporary variable to hold partial results of the
   calculation.
<P>
</UL><h2>MORE INFORMATION</h2>
 
<P>
The following sample code demonstrates this warning message.
<P>
When the compiler performs strength reduction on the code below, it
creates the following equation:
<P>
<PRE>   result += number * 31536000L - 63072000000L;

</PRE>The warning does not occur if you replace the equation with the
following:
<P>
<PRE>   long temp = 0L;

   temp = number - 2000L;
   result += temp * 31536000L;

</PRE><h3>Sample Code</h3>
 
<P>
<PRE>/*
 * Compile options needed: /f- /W2
 */

</PRE>long result = 0L;
long number = 2010L;
<P>
<PRE>void main (void)
</PRE>{
<PRE>   result += (number - 2000L) * 31536000L;
</PRE>}
<P>
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 6.00 6.00a 6.00ax 7.00 8.00 8.00c<BR>
                            1.00 1.50 1.51 1.52<BR>
KBCategory: kbtool<BR>
KBSubcategory: kbprb<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 17, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
