

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: _read() Returns -1 When Reading Last Byte of a Segment </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q120153">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1994/09/04">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  If you open a file with _open() specifying O_TEXT mode or letting it default to O_TEXT mode and then you call _read() to read to the last byte of a segment, the _read() function returns -1. Though this return value indicates that an error occurred,...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAUD,QAML,QBFN,QBFY,QAKP,QBQU,QALW,QALZ,QALG,QAAP,QDL9,QBWQ,QBWO,QBWN,QA5W V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: _read() Returns -1 When Reading Last Byte of a Segment</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q120153</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00 1.50
WINDOWS
kbprg kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>The C Run-time (CRT) included with:
<P>
<P><PRE>    - Microsoft C version 6.0, 6.0a, 6.0ax
    - Microsoft C/C++ version 7.0
    - Microsoft Visual C++ for Windows, versions 1.0 and 1.5
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
If you open a file with _open() specifying O_TEXT mode or letting it
default to O_TEXT mode and then you call _read() to read to the last byte
of a segment, the _read() function returns -1. Though this return value
indicates that an error occurred, the information was read correctly.
<P>
<P><h2>CAUSE</h2>
 
<P>
The carry flag is unexpectedly set when looking for carriage return, line
feed (CR/LF) pairs at 0xFFFF. The Run-Time incorrectly interprets this as
an error and returns -1 instead of the number of characters read.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the products listed above. We
are researching this problem and will post new information here in the
Microsoft Knowledge Base as it becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following sample code illustrates the problem:
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>/* Compile options needed: /AL
*/

   #include &lt;stdio.h&gt;
   #include &lt;fcntl.h&gt;
   #include &lt;sys\types.h&gt;
   #include &lt;sys\stat.h&gt;
   #include &lt;malloc.h&gt;
   #include &lt;io.h&gt;
   #include &lt;dos.h&gt;
   #include &lt;errno.h&gt;

   int hfIn;
   int ret_val;
   char huge* lpcBase;
   char huge* lpcTest;

   void main(void)
   {
      lpcBase = (char _huge*) halloc(100000L, 1);
      lpcTest= lpcBase;
      FP_OFF(lpcTest)= 0xFFFC;   // Point to end of the segment.

      hfIn = open("C:\\config.sys", _O_RDONLY);
      ret_val = read(hfIn, lpcTest, 4);
      if (ret_val&lt; 0)
      {
         printf ("ret_val = %i indicating Failure Reading to 0xFFFF\n",
                  ret_val);
         printf ("errno = %d\n", errno);
      }
      close(hfIn);
   }
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 6.00 6.00a 6.00ax 7.00 7.00a 1.00 1.50<BR>
KBCategory: kbprg kbbuglist<BR>
KBSubcategory: CRTIss<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
