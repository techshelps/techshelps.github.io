

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_wrapon() Prevents Text Mode Text Window from Scrolling </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q66774 ">
<META NAME="KBModify" CONTENT="1997/07/17">
<META NAME="KBCreate" CONTENT="1990/11/08">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  In an application developed with Microsoft C that uses text mode, a text window filled with characters scrolls when the user places a character into the last position in the lower-right corner of the window. To prevent the window from scrolling in ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAML,QAMB,QATX,QAY5,QBFY,QACI,QBCF,QAH4,QBXT,QBVV,QA6Y,QA5W,QA5V,QAM3,QAIB V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>_wrapon() Prevents Text Mode Text Window from Scrolling</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 17, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q66774 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
5.10 6.00 6.00a 6.00ax 7.00 | 6.00 6.00a | 1.00
<PRE>MS-DOS                      | OS/2       | WINDOWS
</PRE>kbprg kbcode
<P>
<P>
 
The information in this article applies to:

<UL><LI>The C Run-time (CRT), included with:
<P>
<P><PRE>    - Microsoft C for MS-DOS, versions 5.1, 6.0, 6.0a, and 6.0ax
    - Microsoft C for OS/2, versions 6.0, and 6.0a
    - Microsoft C/C++ for MS-DOS, version 7.0
    - Microsoft Visual C++ for Windows, version 1.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In an application developed with Microsoft C that uses text mode, a
text window filled with characters scrolls when the user places a
character into the last position in the lower-right corner of the
window. To prevent the window from scrolling in this situation, use
the _wrapon() function.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Functions that display text, such as _outtext(), are designed with the
assumption that the current cursor position is one character beyond
the last output position. Therefore, when the cursor is on, it blinks
just beyond the most recently displayed character.
<P>
When the application enables text wrap and writes a character to the
last position in a line, the cursor blinks in the first position of
the next line. On the last line of a window in text mode, this
behavior causes the window to scroll. In graphics mode, or when the
application uses _outgtext(), this does not occur.
<P>
To work around this behavior, use the _wrapon() function to turn off
text wrap when the application draws the final character in the
window. The _wrapon() function accepts either of two wrap conditions:
_GWRAPOFF or _GRAPON.
<P>
The code example below demonstrates this condition and addressing it
with the _wrapon() function.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>#include &lt;stdio.h&gt;
#include &lt;ctype.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;graph.h&gt;
#include &lt;conio.h&gt;
#include &lt;string.h&gt;

void main(void)
</PRE>{
<PRE>   int i, response;
   char ch[11];

   _clearscreen(_GCLEARSCREEN);

   printf("\n\nDo you want text wrap on? (y/n)");
   response = getch();
   if (_toupper(response) == 'Y')
      _wrapon(_GWRAPON);
   else
      _wrapon(_GWRAPOFF);

   // Label screen grid for easy reference

   _clearscreen(_GCLEARSCREEN);
   _outtext("123456789");
   for (i = 2; i &lt;= 9; i++)
   {
      _settextposition(i, 1);
      _outtext(itoa(i, ch, 10));
   }

   // Set a text window and fill all but last line

   _settextwindow(3, 3, 9, 9);
   for (i = 1; i &lt;= 6; i++)
   {
      _settextposition(i, 1);
      memset(ch, i + '0', 10);
      _outmem(ch, 7);
   }

   // Fill last line, all but last character

   _settextposition(i, 1);
   memset(ch, i + '0', 10);
   _outmem(ch, 6);
   getch();

   // Fill last character in window -- the entire window will scroll
   //   if text wrap was specified

   _outmem(ch, 1);
   getch();
   _clearscreen(_GCLEARSCREEN);
</PRE>}
<P>
Note: This sample program uses the _outmem() function, which is not
available in the C version 5.1 or Microsoft QuickC version 2.0 run-
time libraries. To build this program with either of these compilers,
you must rewrite the code to remove the _outmem() function.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 5.00 5.10 6.00 6.00a 6.00ax 7.00 1.00<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: CRTIss GraphicsIss<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 17, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
