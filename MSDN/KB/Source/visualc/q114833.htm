

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Error C2664 Generated with Class Created by TEMPLDEF </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q114833">
<META NAME="KBModify" CONTENT="1997/09/18">
<META NAME="KBCreate" CONTENT="1994/05/15">
<META NAME="Keywords" CONTENT="kb16bitonly MfcMisc kbbuglist kbfixlist kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  When a user-defined MFC collection class of the form     CMap          toString  is generated using the TEMPLDEF utility and when the class is compiled with /AS or /AM, for small or medium memory model, the compiler generates the following error me...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB4,QAH4,QABI,QABO,QAKD,QAY2,QAR4,QAAP,QA9N,QABG,QAKP,QASB,QAPF,QAH7,QAH6 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Error C2664 Generated with Class Created by TEMPLDEF</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q114833</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00 1.50
WINDOWS
kbprg kbfixlist kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
<P><PRE>    - Microsoft Visual C++ for Windows, versions 1.0 and 1.5
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When a user-defined MFC collection class of the form
<P>
<PRE>   CMap&lt;any type&gt;toString

</PRE>is generated using the TEMPLDEF utility and when the class is compiled
with /AS or /AM, for small or medium memory model, the compiler generates
the following error message:
<P>
<PRE>   error C2664: 'ConstructElement' : cannot convert parameter 1 from
      'unsigned short __near *' to 'class ::CString __near *'

</PRE>If the code was compiled with /AL or /AC, for large or compact memory
model, the error message contains __far instead of __near, because
in these memory models, pointers are far pointers by default.
<P>
<P><h2>CAUSE</h2>
 
<P>
The TEMPLDEF utility is passed several parameters to create a new
collection class. One of these is HAS_CREATE. The following code
is inserted into the newly created class code if HAS_CREATE is defined:
<P>
<PRE>        ASSERT(m_nCount &gt; 0);  // make sure we don't overflow
        memset(&amp;pAssoc-&gt;key, 0, sizeof(KEY));
</PRE>#if HAS_CREATE
<PRE>        ConstructElement(&amp;pAssoc-&gt;key);  // special construct values

</PRE>When creating a Map&lt;Type&gt;toString class, HAS_CREATE is defined. The
ConstructElement() function is only used with CStrings and is defined
in the header file ELEMENTS.H. Creating a CMapWordtoString class
would use the MAP.CTT template. The code listed above is from the
MAP.CTT template.
<P>
The only class that maps from CStrings is CMapStringToString. This
class is expanded from MAP_S.CTT. The code from MAP_S.CTT is:
<P>
<PRE>        ASSERT(m_nCount &gt; 0);  // make sure we don't overflow
        memcpy(&amp;pAssoc-&gt;key, &amp;afxEmptyString, sizeof(CString));
</PRE>#if HAS_CREATE
<PRE>        ConstructElement(&amp;pAssoc-&gt;value);
</PRE>#else
<PRE>        memset(&amp;pAssoc-&gt;value, 0, sizeof(VALUE));
</PRE>#endif
<P>
Notice that the ConstructElement() parameter in MAP_S.CTT is the value
member of pAssoc if HAS_CREATE is defined (instead of the key member as
listed in MAP.CTT). Passing key to ConstructElement() is sure to fail in
the case of CMap&lt;TYPE&gt;toString because key is declared as WORD and
ConstructElement() expects a CString*.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Change the source file containing the call to ConstructElement() so
that it is passed the value field of pAssoc. It should look like:
<P>
<PRE>   ConstructElement(&amp;pAssoc-&gt;value);

</PRE><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft Foundation
Classes, versions 2.0 and 2.5. This problem was corrected in MFC version
3.0, included with Visual C++ version 2.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
In order to reproduce the problem, copy all of the following lines to
MKCOLL.BAT:
<P>
<PRE>   templdef "CMap&lt;WORD, WORD, CString, const char*,1,1&gt; CMapWordtoString"
   map.ctt temp.h temp.inl map_ws.cpp
   copy newcoll.h+temp.h newcoll.h
   copy newcoll.inl+temp.inl newcoll.inl
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 1.50 2.00 2.50<BR>
KBCategory: kbprg kbfixlist kbbuglist<BR>
KBSubcategory: MfcMisc<BR>
Keywords          : kb16bitonly MfcMisc kbbuglist kbfixlist kbprg<BR>
Technology        : kbMfc<BR>
Version           : 1.00 1.50<BR>
Platform          : WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
