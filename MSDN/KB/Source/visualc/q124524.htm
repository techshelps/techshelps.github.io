

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Using String Constant as Default Argument Doesn't Work </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q124524">
<META NAME="KBModify" CONTENT="1997/09/18">
<META NAME="KBCreate" CONTENT="1995/01/03">
<META NAME="Keywords" CONTENT="CPPIss VCx86 kbbuglist kbfixlist kbtool">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Using a string constant to initialize a character pointer as a default parameter argument in a class member function does not work as expected. Instead of assigning the address of the string constant to the pointer, the compiler uses a different ex...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAKJ,QATX,QAR4,QAHE,QBFY,QAO3,QAO2,QAOT,QAKP,QBWP,QAPN,QAML,QABA,QDKW,QABO V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Using String Constant as Default Argument Doesn't Work</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q124524</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
2.00
WINDOWS NT
kbtool kbfixlist
<P>
 
The information in this article applies to:
<P>
<PRE>   The Microsoft C/C++ Compiler (CL.EXE) included with
     - Microsoft Visual C++, 32-bit Edition, version 2.0
       on the following platform: x86
</PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Using a string constant to initialize a character pointer as a default
parameter argument in a class member function does not work as expected.
Instead of assigning the address of the string constant to the pointer, the
compiler uses a different existing string constant.
<P>
<P><h2>CAUSE</h2>
 
<P>
This is a problem with character constants within a class definition, no
matter how they are used. The compiler always uses the last string constant
in the class definition.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To work around the problem, create a static character pointer that is set
to the desired string constant and use that static variable to initialize
the character pointer parameter of the constructor. Typically, string
constants are defined globally in a header file so that they can be easily
modified.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. This problem was corrected in Microsoft
Visual C++, 32-bit Edition, version 4.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
You can use the following sample to reproduce this problem. The output of
the sample code will be:
<P>
<PRE>   Value of 'String' 1234567890 = 123456

</PRE>In this case, the compiler used the first six characters of the
"1234567890" string instead of using the "abcde" string.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>/* Compile options needed: none
*/

#include &lt;iostream.h&gt;

</PRE>class A
{
public:
<PRE>   void Func(char* String = "abcde")
   {
      cout &lt;&lt; "Value of 'String' " &lt;&lt; "1234567890 = " &lt;&lt; String &lt;&lt; endl;
   }
</PRE>};
<P>
<PRE>void main()
</PRE>{
<PRE>   A a;
   a.Func();
</PRE>}
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 2.00 9.00 buglist2.00<BR>
KBCategory: kbtool kbfixlist kbbuglist<BR>
KBSubcategory: CPPIss VCx86<BR>
Keywords          : CPPIss VCx86 kbbuglist kbfixlist kbtool<BR>
Version           : 2.00<BR>
Platform          : NT WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
