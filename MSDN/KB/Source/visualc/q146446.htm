

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: ClassWizard Doesn't Support Property Change Notifications </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q146446">
<META NAME="KBModify" CONTENT="1998/02/17">
<META NAME="KBCreate" CONTENT="1996/02/15">
<META NAME="Keywords" CONTENT="CDKIss MfcOLE">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  ClassWizard makes adding event handlers in an OLE control container much easier by providing the required macros, function declarations, and the function body. However, ClassWizard currently doesn't provide support to add handlers for property chan...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QAB5,QA7O,QAOE,QAMN,QAGI,QAUD,QA01,QAY5,QAW6,QAO4,QAMA,QAH4,QBWC,QA9Q V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: ClassWizard Doesn't Support Property Change Notifications</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 17, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q146446</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
   Microsoft Visual C++, 32-bit Edition, versions 4.0, 5.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
ClassWizard makes adding event handlers in an OLE control container much
easier by providing the required macros, function declarations, and the
function body. However, ClassWizard currently doesn't provide support to
add handlers for property change requests and property change
notifications. You must manually add the macros, function declarations, and
the function body required for defining an event sink map entry in order to
handle property change notifications. This article explains the steps
necessary for handling one such property change notification.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
The following steps illustrate how to handle property change notifications
for the "Caption" stock property of the Circ3 sample control in a dialog
based control container application:

<OL><P><LI>Place the Circ3 control in the main dialog template of the container
   application.

<P><LI>Add an event sink map manually to the control container as follows:
<P>
   a. In the .h file of your Main Dialog class, add a
<P><PRE>      DECLARE_EVENTSINK_MAP() macro inside the AFX_MSG section.
</PRE><P>
   b. In the .cpp file of your Main Dialog Class, add the following:
<P>
<P><PRE>      BEGIN_EVENTSINK_MAP(COleCntrDlg, CDialog)
<PRE></PRE>        //{{AFX_EVENTSINK_MAP(COleCntrDlg)
        //}}AFX_EVENTSINK_MAP
      END_EVENTSINK_MAP()

      In the this event sink map, COleCntrDlg is the name of your main
      dialog class.

</PRE><P><LI>Add the following two functions to the protected section in the .h file
   of your Main Dialog Class:
<P>
   BOOL CaptionRequest(BOOL *pChange);
   BOOL CaptionChanged(void);

<P><LI>Add the following ON_PROPNOTIFY macro outside of the AFX_EVENTSINK_MAP
   comments section in the event sink map:
<P>
   ON_PROPNOTIFY(COleCntrDlg, IDC_CIRC3CTRL1, DISPID_CAPTION,
<PRE>                  CaptionRequest, CaptionChanged )

   In this macro, IDC_CIRC3CTRL1 is the ID of the Circ3 control. Please
   refer to the ON_PROPNOTIFY documentation for the syntax of the macro and
   its parameters. The documentation incorrectly states that the changed
   notification function should take a UINT parameter. However, the
   property changed notification function takes VOID as its only parameter.

</PRE><P><LI>Add the following implementations for CaptionRequest and
   CaptionChanged in the .cpp file of your Main Dialog Class:
<P>
<PRE>   // Property Change Notifications
   BOOL COleCntrDlg::CaptionRequest(BOOL *pChange)
   {
       // Perform customized processing here
       AfxMessageBox("IPropertyNotifySink::OnRequestEdit called");

       // Return TRUE to allow the property to change, else return
       // FALSE
       *pChange = TRUE;
       return TRUE;    // Notification handled
   }

   BOOL COleCntrDlg::CaptionChanged(void)
   {
       // Perform customized processing here
       AfxMessageBox("IPropertyNotifySink::OnChanged called");

       return TRUE;    // Notification handled
   }

</PRE></OL><h2>MORE INFORMATION</h2>
 
<P>
An OLE control container would typically implement IPropertyNotifySink in
order to receive notifications about property changes from an OLE control.
The control container creates a sink with this interface and connects it to
the control through the connection point mechanism.
<P>
The OLE control itself is required to call the methods of
IPropertyNotifySink only for those properties marked with the [bindable]
and [requestedit] attributes in the object's type information. When the
control is about to change a [requestedit] property, it must call
IPropertyNotifySink::OnRequestEdit before changing the property and must
also honor the action by the sink on return from this call. Also, when the
control changes a [bindable] property, it is required to call
IPropertyNotifySink::OnChanged. An OLE control will send these
notifications only for property changes occurring after it is fully
constructed and initialized.
<P>
<P><h2>REFERENCES</h2>
 
<P>
Online documentation for ON_PROPNOTIFY and ON_PROPNOTIFY_RANGE.
Online documentation for Property Change Notification.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: ocx ole control cdk<BR>
Keywords          : CDKIss MfcOLE<BR>
Technology        : kbole kbMfc<BR>
Version           : Winnet:4.0,5.0<BR>
Platform          : NT WINDOWS<BR>
Issue type        : kbprb<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 17, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
