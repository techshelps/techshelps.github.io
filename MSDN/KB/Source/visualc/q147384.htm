

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Icons, Bitmaps, &amp; Menus Not Displayed in an AFXDLL Dialog </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q147384">
<META NAME="KBModify" CONTENT="1997/09/19">
<META NAME="KBCreate" CONTENT="1996/02/25">
<META NAME="Keywords" CONTENT="MfcUI kbbuglist kbfixlist kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Additional resources specified in a dialog template of a dialog implemented in an extension DLL will be displayed incorrectly or not displayed at all. That can affect icons, bitmaps, and menus that are specified in a dialog template.  CAUSE =====  ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QA01,QAGI,QAIM,QA36,QAUD,QAR4,QBXS,QAHT,QBVV,QAY2,QAKD,QADX,QAJQ,QBBI V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Icons, Bitmaps, &amp; Menus Not Displayed in an AFXDLL Dialog</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 19, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q147384</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
4.00
WINDOWS NT
kbprg kbbuglist kbfixlist
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
   Microsoft Visual C++, 32-bit edition, version 4.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Additional resources specified in a dialog template of a dialog implemented
in an extension DLL will be displayed incorrectly or not displayed at all.
That can affect icons, bitmaps, and menus that are specified in a dialog
template.
<P>
<P><h2>CAUSE</h2>
 
<P>
The implementation of the CDialog class was changed in MFC version 4.0. The
previous implementation of CDialog used a ::DialogBox() call to create a
modal dialog and passed an instance handle obtained from a call to
AfxFindResourceHandle() as a handle of the module where resources were
stored. It was possible to call AfxSetResourceHandle() or use an extension
DLL to find a dialog template that was stored in another module.
<P>
The new implementation first loads dialog template. Then it calls
::CreateDialogIndirect(), passing a handle obtained from a call to
AfxGetInstanceHandle(). This handle is the handle of the executable module;
it is not the handle of the one that contains additional resources.
Therefore, no additional resources will be found or displayed.
<P>
Note that it is also possible that you have another resource in the
executable module with the same ID as the one required for the dialog. This
would cause an incorrect resource to be displayed.
<P>
This is a problem when you have a dialog template located in an extension
DLL, or a resource only DLL. This is not a problem for regular DLLs.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To correct this problem, you have to set the current handle to be the one
that corresponds to the module containing a dialog template. You also need
to reset the handle back to the old value before proceeding with any code
that involves the dialog. The easiest way to achieve this is to override
DoModal in your CDialog derived class as in this example:
<P>
<PRE>int CMyDialog::DoModal()
</PRE>{
<PRE>    m_hInstSave = afxCurrentInstanceHandle;
    afxCurrentInstanceHandle = AfxFindResourceHandle(
        MAKEINTRESOURCE(IDD), RT_DIALOG);

    return CDialog::DoModal();
</PRE>}
<P>
Here m_hInstSave is a data member of CMyDialog of type HINSTANCE. The
variable afxCurrentInstanceHandle is used by MFC to store the current
instance handle. Its value is returned from AfxGetInstanceHandle(), and it
is defined in Afxwin.h.
<P>
This implementation sets the current instance handle to the one that is
returned from AfxFindResourceHandle(), which searches through the list of
available extension DLLs for a dialog template. If you are using a resource
only DLL, you will probably use AfxSetResourceHandle() to set the MFC
current resource handle to the one that corresponds to the DLL. In that
case, you can set afxCurrentInstanceHandle either directly using the same
value or with a value returned from AfxGetResourceHandle().
<P>
To reset the current instance handle back to the saved value, you need to
have a handler for the WM_INITDIALOG message, OnInitDialog, with the
following code:
<P>
BOOL CMyDialog::OnInitDialog()
{
<PRE>    afxCurrentInstanceHandle=m_hInstSave;

    CDialog::OnInitDialog();

    // some other code...

    return TRUE;
</PRE>}
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. This problem was corrected in Visual C++,
32-bit Edition, version 4.1.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For the implementation of the CDialog class, refer to the Dlgcore.cpp
file, located in MFC source code directory, \Msdev\Mfc\Src.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 dialog template DLL resource-only<BR>
vcbuglist400 vcfixlist410<BR>
KBCategory: kbprg kbbuglist kbfixlist<BR>
KBSubcategory: MfcUI
<P>

Keywords          : MfcUI kbbuglist kbfixlist kbprg<BR>
Technology        : kbMfc<BR>
Version           : 4.00<BR>
Platform          : NT WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 19, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
