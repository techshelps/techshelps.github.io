

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: MFC ODBC Exceptions Using the SQL Server 6.5 Driver </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q151683">
<META NAME="KBModify" CONTENT="1997/09/19">
<META NAME="KBCreate" CONTENT="1996/05/28">
<META NAME="Keywords" CONTENT="MfcDatabase kbbuglist kbfixlist kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  There are two bugs in the MFC code that are exposed when using the MFC ODBC classes with the Microsoft SQL Server ODBC driver version 2.65.0201 that ships with Microsoft SQL Server 6.5. Setting synchronous mode works around this problem.  The bugs ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QABM,QA9E,QAUD,QAGI,QAJZ,QBXS,QA5W,QAU9,QAH4,QABA,QA4F,QAY5,QAAP,QAKP,QDIT V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: MFC ODBC Exceptions Using the SQL Server 6.5 Driver</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 19, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q151683</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
2.00 2.10 2.20 4.00 4.10
WINDOWS NT
kbprg kbbuglist kbfixlist
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC), included with:
   Microsoft Visual C++, 32-bit Edition, versions 2.0, 2.1, 2.2, 4.0, 4.1
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
There are two bugs in the MFC code that are exposed when using the MFC ODBC
classes with the Microsoft SQL Server ODBC driver version 2.65.0201 that
ships with Microsoft SQL Server 6.5. Setting synchronous mode works around
this problem.
<P>
The bugs mentioned above can lead to exceptions being thrown for no valid
reason. Specifically, CDBExceptions can be thrown that contain no
information about what led to the exception. With DB tracing enabled, one
of the following trace messages may be displayed in the output window of
Visual C++/MSDEV:
<P>
<PRE>   Error: SQLNumResultCols failed during IsOpen()
   Error: failure updating record.

</PRE>The CDBException contains an m_nRetCode value of 2 (SQL_STILL_EXECUTING).
<P>
<P><h2>CAUSE</h2>
 
<P>
Version 2.65.0201 of the Microsoft SQL Server ODBC driver can return
SQL_STILL_EXECUTING from two ODBC API functions that previous versions of
the driver implemented as synchronous. This change in the driver has led to
the exposure of two bugs in the MFC ODBC classes. MFC wraps ODBC API
function calls in one of two wrapper macros: AFX_SQL_SYNC for those calls
that are expected to return only when completed; and AFX_SQL_ASYNC for
those calls that can return SQL_STILL_EXECUTING. There are two places in
the MFC ODBC classes where the wrong macro is used (Visual C++ 4.1 source
code shown):
<P>
<PRE>  CRecordset::IsOpen()
  {
    ...
    AFX_SQL_SYNC(::SQLNumResultCols(m_hstmt, &amp;nCols));
    if (!Check(nRetCode))
    {
      ...
      {
  #ifdef _DEBUG
        TRACE0("Error: SQLNumResultCols failed during IsOpen().\n");
    ...
  }

  CRecordset::ExecuteSetPosUpdate();
  {
    ...
    AFX_SQL_SYNC(::SQLSetPos(m_hstmt,1,wPosOption,SQL_LOCK_NO_CHANGE));
    if (!Check(nRetCode))
    {
      TRACE0("Error: failure updating record.\n");
      AfxThrowDBException(nRetCode, m_pDatabase, m_hstmt);
    }
    ...
  }

</PRE>Both SQLNumResultCols() and SQLSetPos() can return SQL_STILL_EXECUTING.
While the bug in IsOpen() may appear to be more serious, since IsOpen() is
called frequently in the MFC code, it is less likely that the driver will
return SQL_STILL_EXECUTING for this API function than for SQLSetPos().
<P>
<P><h2>RESOLUTION</h2>
 
<P>
It is recommended that you set the synchronous mode to "on" for all
connections that use this version of the SQL Server ODBC driver. Since most
applications do not actually need to do asynchronous processing, this is
the most direct solution. By setting synchronous mode, you guarantee that
every ODBC API function will return only when completed.
<P>
To set the synchronous mode to on, use the CDatabase::SetSynchronousMode()
function or make a call to the ODBC API function SQLSetStmtOption(). The
MFC database classes set the synchronous mode to "off" by default, so you
must be careful to avoid conflicts with MFC. Two suggested ways to set
synchronous mode to on are:

<UL><LI>Create a CDatabase object, open it on the desired datasource, set the
   synchronous mode to on using CDatabase::SetSynchronousMode(TRUE), and
   pass a pointer to this CDatabase object to the constructors of your
   recordsets. Only those recordsets that are created off this CDatabase
   object will inherit its synchronous nature. Note that you must manage
   the cleanup of this database object yourself.
<P>
   -or-

<LI>Override the virtual CRecordset::OnSetOptions() to set the synchronous
   mode to on by calling SQLSetStmtOption() following the call to the base
   class OnSetOptions(). Do not set the mode prior to the base class
   OnSetOptions where synchronous mode is set to off.
<P>
</UL><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products
listed at the beginning of this article. This bug was corrected in Visual
C++ 32-bit Edition version 4.2.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Note that the responsibility for this problem does not lie with the
SQL Server ODBC driver, but with the MFC ODBC classes. The ODBC 2.0
specification states that SQLSetPos and SQLNumResultCols can return
SQL_STILL_EXECUTING.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information, please see: ODBC 2.0 Programmer's Reference and SDK
Guide (available Online).
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 2.00 2.10 2.20 4.00 4.10 4.20 vcbuglist400<BR>
                            vcfixlist420<BR>
KBCategory: kbprg kbbuglist kbfixlist<BR>
KBSubcategory: MfcDatabase
<P>

Keywords          : MfcDatabase kbbuglist kbfixlist kbprg<BR>
Technology        : kbMfc<BR>
Version           : 2.00 2.10 2.20 4.00 4.10<BR>
Platform          : NT WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 19, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
