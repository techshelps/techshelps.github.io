

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Missing '::' in Error C2579 for Ambiguous Overload </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q131203">
<META NAME="KBModify" CONTENT="1997/09/18">
<META NAME="KBCreate" CONTENT="1995/06/05">
<META NAME="Keywords" CONTENT="CPPIss kbbuglist kbfixlist kbtool">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  A member function that is an ambiguous overload of another member function of the class causes the compiler to generate a correct C2579 error message to indicate that the parameter list is not sufficiently different to overload the function. This b...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB4,QAAP,QBFY,QAR4,QBWP,QA56,QA55,QA4Q,QAKP,QBVV,QAY5,QAOT,QAHE,QAE1,QDH6 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Missing '::' in Error C2579 for Ambiguous Overload</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q131203</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
2.00 2.10
WINDOWS NT
kbtool kbfixlist
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft C/C++ Compiler (CL.EXE) included with:
   Microsoft Visual C++, 32-bit Edition, versions 2.0 and 2.1
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
A member function that is an ambiguous overload of another member function
of the class causes the compiler to generate a correct C2579 error message
to indicate that the parameter list is not sufficiently different to
overload the function. This behavior is as it should be.
<P>
However, in the error message, the scope resolution operator (::) is
missing between the class name and the function name used to indicate the
problem. For example, compiling the sample code shown in article causes the
compiler to generate this error :
<P>
<PRE>   error C2579: 'TestClassTestFunc(int)' : parameter list not
                sufficiently different from
                'TestClassTestFunc(const int)'

</PRE>The error should look like this:
<P>
<PRE>   error C2579: 'TestClass::TestFunc(int)' : parameter list not
                sufficiently different from
                'TestClass::TestFunc(const int)'

</PRE>This only happens with Visual C++, 32-bit Edition, versions 2.0 and 2.1.
This does not happen with Visual C++ version 1.0 for Windows NT nor does it
happen with the 16-bit versions of Visual C++.
<P>
NOTE: In Visual C++ 4.0, the text message of error C2579 has been
corrected. It now appears as follows:
<P>
<PRE>   error C2579: '&lt;function_name&gt;(&lt;parameter_list1&gt;)' :
      parameter list not sufficiently different from
      '&lt;function_name&gt;(&lt;parameter_list2&gt;)'


</PRE><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. This problem was corrected in Microsoft
Visual C++, 32-bit Edition, version 4.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Sample Code to Demonstrate Problem</h3>
 
<P>
<PRE>/* Compiler Options: /c
*/

</PRE>class TestClass
{
<PRE> public:
     void TestFunc(const int i) {};
     void TestFunc(int i) {};       // Expecting C2579
};
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 2.00 2.10 8.0 8.00 8.0c 8.00c 9.0 9.00 9.1<BR>
9.10<BR>
KBCategory: kbtool kbfixlist kbbuglist<BR>
KBSubcategory: CPPIss<BR>
Keywords          : CPPIss kbbuglist kbfixlist kbtool<BR>
Version           : 2.00 2.10<BR>
Platform          : NT WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
