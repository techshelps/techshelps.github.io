

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INFO: Switching from Reading to Writing Files Can Garble Data </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q43072 ">
<META NAME="KBModify" CONTENT="1997/09/02">
<META NAME="KBCreate" CONTENT="1989/04/01">
<META NAME="Keywords" CONTENT="CRTIss kbfasttip">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  When switching from reading to writing data files, it is necessary to make a call to an fsetpos(), fseek(), or rewind() function. If a call to one of these functions is not made, the file pointer may not be updated and the data could be corrupted. ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBFY,QAGI,QAH4,QBWP,QAY5,QAY2,QAO3,QAO2,QAKR,QAHE,QADX,QAC1,QDL9,QBWQ,QBWO V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INFO: Switching from Reading to Writing Files Can Garble Data</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 2, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q43072 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>The C Run-time (CRT) included with:
   - Microsoft C for MS-DOS, versions 6.0ax
   - Microsoft C for OS/2, versions 6.0, 6.0a
   - Microsoft C/C++ for MS-DOS, version 7.0
   - Microsoft Visual C++ for Windows, versions 1.0, 1.5
   - Microsoft Visual C++ 32-bit Edition, versions 1.0, 2.0, 2.1, 2.2, 4.0,
<P><PRE>     4.1, 5.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
When switching from reading to writing data files, it is necessary to make
a call to an fsetpos(), fseek(), or rewind() function. If a call to one of
these functions is not made, the file pointer may not be updated and the
data could be corrupted. It is also necessary to make a call to one of
these functions when switching from writing to reading. This is documented
on page 275 of the "Microsoft C Optimizing Compiler Run-Time Library
Reference" manual, which shipped with version 5.1 of the Microsoft C
Compiler.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following program attempts to read in the first character of a file and
to write it out as the second character:
<P>
<P><h3>Sample Code #1</h3>
 
<P>
<PRE>   #include &lt;stdio.h&gt;
   void main(void)
   {
     FILE *fp;
     char a;

     if (( fp = fopen("text.fil","r+")) != NULL)
     {
       fscanf(fp,"%c",&amp;a);      /* Read one character */
       fprintf(fp,"%c",a);     /* Write to the next location */
       fclose(fp);
     }
   }

</PRE>The above program fails because there is no fseek, fsetpos, or rewind
between the fscanf and fprintf to change the pointer position. The
following program performs the desired operation:
<P>
<P><h3>Sample Code #2</h3>
 
<P>
<PRE>   #include &lt;stdio.h&gt;
   void main(void)
   {
     FILE *fp;
     char a;
     fpos_t loc;     /* Storage for the current location */

     if (( fp = fopen("text.fil","r+")) != NULL)
     {
       fscanf(fp,"%c",&amp;a);    /* Read one character */
       fgetpos(fp,&amp;loc);     /* Get current file pointer pos */
       fsetpos(fp,&amp;loc);     /* Set current file pointer pos */
       fprintf(fp,"%c",a);   /* Write to next location */
       fclose(fp);
     }
   }
</PRE> 
<PRE>Keywords          : CRTIss kbfasttip
Version           : MS-DOS:6.00ax,7.0; OS/2:6.0,6.00a; WINDOWS:1.0,1.5;  WINDOWS NT:1.0,2.0,2.1,2.2,4.0,4.1,5.0
Platform          : MS-DOS NT OS/2 WINDOWS
Issue type        : kbinfo</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 2, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
