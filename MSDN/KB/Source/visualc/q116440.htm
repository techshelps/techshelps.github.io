

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: C4713: Internal Compiler Error, grammar.c, line 168 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q116440">
<META NAME="KBModify" CONTENT="1997/09/18">
<META NAME="KBCreate" CONTENT="1994/06/20">
<META NAME="Keywords" CONTENT="CLIss kb16bitonly kbbuglist kbfixlist kbtool">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Compiling the sample code shown below with /Oe and /Oi optimizations causes the compiler to generate one of the following error messages:     warning C4713: Scroll: internal compiler error; restarting            ( compiler file '@(#) grammar.c:1.14...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB4,QAOT,QBFY,QAR4,QAH4,QAKP,QAAP,QDKW,QBXT,QA5V,QA26,QAIB,QAYL,QBV8,QAB9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: C4713: Internal Compiler Error, grammar.c, line 168</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q116440</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.50
WINDOWS
kbtool kbfixlist kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft C/C++ Compiler (CL.EXE), included with:
<P><PRE>    - Microsoft Visual C++ for Windows, version 1.5
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Compiling the sample code shown below with /Oe and /Oi optimizations
causes the compiler to generate one of the following error messages:
<P>
<PRE>   warning C4713: Scroll: internal compiler error; restarting
           ( compiler file '@(#) grammar.c:1.147', line 168 )

</PRE><h2>CAUSES</h2>
 
<P>
If both /Oe (global register allocation) and /Oi (intrinsic function
generation) are used, and the compiler finds an expression too complicated
for this optimization, the compiler fails to generate the optimized code.
However, the compiler is able to detect the problem at a point where it can
restart the code-generation process and not optimize the function where the
error was detected.
<P>
This is just a warning; the resulting code should be correct.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To eliminate the warning message, do one of the following:

<UL><LI>Turn on the fast compiler option, /f.
<P>
   -or-

<LI>Turn off one of the options, /Oe or /Oi, or turn off both options.
   This also can be done using #pragma optimize(). See the sample code
   in the "MORE INFORMATION" section, below.
<P>
   -or-

<LI>Simplify the complex expression. For example, assign part of the
   expression to a temporary variable, then use the temporary variable
   in its place in the expression.
<P>
</UL><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in the Microsoft products
listed above. This is not a problem in Visual C++, 32-bit Edition. This
problem was corrected in Visual C++ version 2.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
You can use the following sample code to demonstrate this problem:
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>/* Compile options needed: /Oe /Oi
*/

   #include &lt;string.h&gt;

   short NRow, NCol, BRow;
   short ScrnMem[80];

   /* Uncomment this line to work around the problem */
   /* #pragma optimize( "ei", off ) */

   void Scroll(short nlines)
   {
      if ( nlines != 0 )
         memset(&amp;ScrnMem[NRow*NCol], 0, (NRow-
   BRow)*NCol*sizeof(ScrnMem[0]));
   }

   /* Uncomment this line to work around the problem */
   /* #pragma optimize( " ", on ) */
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.50 8.00c<BR>
KBCategory: kbtool kbfixlist kbbuglist<BR>
KBSubcategory: CLIss<BR>
Keywords          : CLIss kb16bitonly kbbuglist kbfixlist kbtool<BR>
Version           : 1.50<BR>
Platform          : WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
