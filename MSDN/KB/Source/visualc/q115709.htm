

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: 'CXX0017: Error: symbol not found' Compiling with /Zi </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q115709">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1994/06/01">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Attempting to use the CodeView Display Expression command (?) when debugging code which was compiled with the /Zi switch may cause CodeView to generate the following error message:     CXX0017: Error: symbol not found  CAUSE =====  The compiler is ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAUD,QBE7,QBE6,QAB4,QAH4,QAHE,QAB9,QBV8,QAY5,QAKR,QAKP,QA4Q,QAAP,QBVV,QBFY V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: 'CXX0017: Error: symbol not found' Compiling with /Zi</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q115709</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00 1.50
WINDOWS
kbtool kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft C/C++ Compiler (CL.EXE), included with:
<P><PRE>    - Microsoft Visual C++ for Windows, versions 1.0 and 1.5
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Attempting to use the CodeView Display Expression command (?) when
debugging code which was compiled with the /Zi switch may cause CodeView to
generate the following error message:
<P>
<PRE>   CXX0017: Error: symbol not found

</PRE><h2>CAUSE</h2>
 
<P>
The compiler is not emitting the correct symbolic information for the
symbol.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
You can sometimes avoid the problem by compiling with the /Z7 switch.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in the Microsoft products
listed above. We are researching this problem and will post new information
here in the Microsoft Knowledge Base as it becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The sample code shown below can be used to illustrate the problem. To
reproduce the problem, do the following:

<OL><P><LI>Compile the sample code with the /Od and /Zi switches.

<P><LI>Load the resulting executable into CodeView.

<P><LI>Set a breakpoint on the final closing } of the source code.

<P><LI>Run to the breakpoint.

<P><LI>Open the Command window in CodeView and enter the following
   command:
<P>
   ?Function( x.a == 1 &amp;&amp; ::X() == 5 ),s

<P><LI>Press enter.
<P>
</OL>This should cause CodeView to call Function() with the result of the
expression ( x.a == 1 &amp;&amp; ::X() == 5 ) as an argument. The value
returned by Function() should be displayed as a string. However,
CodeView instead issues the CXX0017 error message.
<P>
Compiling the same code with /Od /Z7 and following steps 2 through 6
listed above causes CodeView to correctly display the string "PASSED"
as the return from Function().
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>/* Compile options needed: /Od /Zi
*/

char * Function( int Condition );

int X(void) { return 5; }

void main( void )
</PRE></OL>{
<PRE>    struct X { int a; };
    X x;
    x.a = 1;

    {
        struct X { int b; };
        X y;
        y.b = 2;
    }
</PRE>}
<P>
<PRE>char * Function( int Condition )
</PRE>{
<PRE>    if( Condition )
        return "PASSED";
    else
        return "FAILED";
}
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 1.50 4.10 8.00 8.00c<BR>
KBCategory: kbtool kbbuglist<BR>
KBSubcategory: CLIss<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
