

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: C1853 Error Generated by Mixing C and C++ Files </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q126717">
<META NAME="KBModify" CONTENT="1997/08/26">
<META NAME="KBCreate" CONTENT="1995/02/28">
<META NAME="Keywords" CONTENT="CLIss CPPIss kberrmsg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  When you build Visual C++ projects that include both C and C++ files and that use precompiled headers, you may receive the following error message:     fatal error C1853: '          ' is not a precompiled header file    created with this compiler  ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBFY,QAK6,QAJN,QBXS,QAOT,QAB4,QA56,QA55,QAF8,QABO,QAG0,QBVV,QABA,QAAP,QAHP V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: C1853 Error Generated by Mixing C and C++ Files</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 26, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q126717</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft C/C++ Compiler (CL.EXE) included with:
   - Microsoft Visual C++, 32-bit Edition, version 2.0, 2.1, 4.0, 5.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When you build Visual C++ projects that include both C and C++ files and
that use precompiled headers, you may receive the following error message:
<P>
<PRE>   fatal error C1853: '&lt;filename&gt;' is not a precompiled header file
   created with this compiler

</PRE><h2>CAUSE</h2>
 
<P>
The compiler attempts to use a precompiled header generated by a C++
compiler on a C source file. This can happen when "Per-File Use of
Precompiled Headers" is used with both C and C++ source code in a project.
<P>
It is not valid to use a C++ compiler created precompiled header with a
source file that is to be compiled by the C compiler. Nor is it valid to
use a C compiler created precompiled header with a source file that is to
be compiled by the C++ compiler.
<P>
The Visual C++ version 2.x error message help for C1853 may be misleading.
It implies that the problem occurs only when mixing .PCH files
generated with the 16-bit and 32-bit compilers. Frequently, however, this
can occur when building a project after adding a C source file to a pure
C++ project that uses the "Per-File Use of Precompiled Headers." (The
Visual C++ version 4.0 online help correctly incorporates this information
by stating that fatal error C1853 "can be caused by using a precompiled
C++ file with C code.")
<P>
<P><h2>RESOLUTION</h2>
 
<P>
This problem can be resolved in several ways depending on the situation:
<P>
<P><h3>Resolution I</h3>
 
<P>
For projects with a single C source file and multiple C++ source files (or
vice-versa), use the following steps to disable precompiled headers for the
single source file:

<OL><P><LI>For the current target, open the Project Settings dialog box and select
   the Precompiled Headers section under the C/C++ Tab.

<P><LI>Select the C file from the project tree in the left pane.

<P><LI>For Visual C++ version 2.x, disable the Use .PCH File checkbox in the
   Per-File Use of Precompiled Headers. For Visual C++ version 4.0, select
   the Not using precompiled headers option button.

<P><LI>Save the new settings and build the project.
<P>
</OL><h3>Resolution II</h3>
 
<P>
For projects with multiple C and C++ source files, use the following steps
to disable precompiled headers for a set of source files procedure:
<P>
<PRE>  With Visual C++ version 2.x:

  1. For the current target, create a New Group by choosing New Group from
     the Project menu item.

  2. Move the C source files into the new group.

  3. Open the Project Settings and select the Precompiled Headers section
     under the C/C++ tab dialog.

  4. Select the new group from the project tree in the left pane.

  5. Disable the Use .PCH File checkbox in the Per-File Use of Precompiled
     Headers.

  6. Save the new settings and build the project.

  This will disable precompiled headers for a set of source files. However,
  source files in subsequent additions to this group may need the PCH usage
  disabled depending on the file's previous settings.

  With Visual C++ version 4.0, groups are no longer supported. To disable
  the use of precompiled headers for a group of source files, follow the
  the steps of Resolution I, but in step 2 hold down the CRTL key while
  selecting each file.

</PRE></OL><h3>Resolution III</h3>
 
<P>
For projects not requiring precompiled headers, follow the steps of
Resolution I, but in step 2 select all targets from the project tree in
the left pane.
<P>
<P><h3>Resolution IV (VC 4.x and 5.0)</h3>
 

<OL><P><LI>Create a subproject of type "Static Library".

<P><LI>Insert the .C files into this subproject.

<P><LI>Delete the .C files from the top-level project.

<P><LI>Add the resulting library or .obj files to the link line for the
   top-level project.
<P>
</OL>This will allow you to specify a pre-compiled header for the top-level
project (.CPP files), and a different pre-compiled header for the
subproject (.C files).
<P>
<P><h2>STATUS</h2>
 
<P>
This behavior is by design.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Visual C++ version 2.0 allows only one precompiled header file per target
in a project. This file is named PROJNAME.PCH by default where PROJNAME is
the name of the project. This can be changed in the Project Options edit
control of the target settings using the /Fp option (for example, "/Fp
MYNAME.PCH").
<P>
This precompiled header (.PCH) file can be generated using either the
Automatic or Per-File Use system as shown in the Precompiled Headers
section of the C/C++ tab dialog project settings.
<P>
The Automatic PCH option (/YX option) generates a .PCH file when the
current .PCH file is invalid or when the header file is updated. Invalid
.PCH files include those generated by another compiler (C or C++) or those
that contain a different set of header files from the set found in the
source. This option optimally saves compilation time if all source files
that use this option contain an identical set of header files and are of
one type (C or C++), or if only one file in the project is usually built.
<P>
The efficiency of this option can depend on compilation order. Interleaving
C and C++ source files in the compilation order always regenerates a new
.PCH file. Building a project after updating a C file when the last build
resulted in a C++ .PCH file, regenerates the .PCH file.
<P>
The Per-File Use PCH option generates a .PCH file whenever a source file
with the 'Create .PCH File' (/Yc option) checkbox enabled is compiled. The
generated .PCH file is used with all source files that have the 'Use .PCH
File' (/Yu option) checkbox enabled. The compiler doesn't regenerate a new
.PCH file if the generated one is invalid; instead, it gives one of the
following two messages:

<UL><LI>If the PCH was generated by the C++ compiler:
<P>
   fatal error C1853: '&lt;filename&gt;' is not a precompiled header
   file created with this compiler

<LI>If the PCH was generated by a source code containing a different set of
   includes:
<P>
   fatal error C1852: '&lt;filename&gt;' is not a valid precompiled
   header file
<P>
</UL>NOTE: It is possible to specify more than one source to create a .PCH
file, however Microsoft does not recommend it. Nor does Microsoft recommend
that you mix the two PCH systems because mixing the two can result in the
errors outlined above.
<P>
Previous versions of Visual C++ (1.51, 1.50, and 1.1) allowed a separate
precompiled header file for C and C++ source files. Because Visual C++
version 2.0 is limited to only one PCH, it is not possible to use different
precompiled header files for C and C++ files.  Porting such a project over
will result in the following message when attempting to build the project:
<P>
<PRE>   The source files "file1.c" and "file2.cpp" are both configured to
   produce the output file "proj.pch". The project cannot be built.

</PRE></OL><h2>REFERENCES</h2>
 
<P>
For more information on precompiled headers, please search on "Precompiled
Headers" in Books Online.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 9.00<BR>
Keywords          : CLIss CPPIss kberrmsg<BR>
Version           : WINDOWS NT:2.0,2.1,4.0,5.0<BR>
Platform          : NT WINDOWS<BR>
Issue type        : kbprb<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 26, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
