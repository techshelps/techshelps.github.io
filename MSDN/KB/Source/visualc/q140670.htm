

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Using Run-Time Type Info May Cause Memory Leak Report </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q140670">
<META NAME="KBModify" CONTENT="1997/09/19">
<META NAME="KBCreate" CONTENT="1995/12/05">
<META NAME="Keywords" CONTENT="CRTIss kbbuglist kbfixlist kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  When exiting a debug application that uses run-time type information (RTTI) and calls the 'name' member function of the type_info class, Visual C++ reports  Detected memory leaks!  in the output window.  CAUSE =====  When you call the 'name' member...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGI,QAVX,QAVW,QAH4,QAY5,QAR4,QAIF,QBW6,QBWP,QAAP,QBV8,QBFY,QA56,QA55,QAB9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Using Run-Time Type Info May Cause Memory Leak Report</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 19, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q140670</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
4.00 4.10
WINDOWS NT
kbprg kbbuglist kbfixlist
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Visual C++, 32-bit Edition, versions 4.0, 4.1
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When exiting a debug application that uses run-time type information (RTTI)
and calls the 'name' member function of the type_info class, Visual C++
reports "Detected memory leaks!" in the output window.
<P>
<P><h2>CAUSE</h2>
 
<P>
When you call the 'name' member function of the type_info class, it
incorrectly allocates a _NORMAL_BLOCK buffer to hold the type name. This
can cause a memory leak to be reported incorrectly when you run a debug
version of the program.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
The reported memory leak can be ignored.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products
listed at the beginning of this article. This problem was corrected in
Visual C++, 32-bit Edition, version 4.2.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
When you call the 'name' member function of the type_info and then later
call _CrtDumpMemoryLeaks, memory leaks are incorrectly reported. The
following sample code demonstrates the problem.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>/* Compile options needed: /D_DEBUG
*/

#include &lt;typeinfo.h&gt;
#include &lt;iostream.h&gt;
#include &lt;crtdbg.h&gt;

</PRE>struct test {};
<P>
<PRE>void main()
</PRE>{
<PRE>    test t;
    typeid(t).name();
    _CrtDumpMemoryLeaks();
</PRE>}
<P>
You would see messages similar to the following in the debug tab of the
output window:
<P>
<PRE>   Loaded symbols for 'E:\WINNT35\system32\MSVCR40D.DLL'
   Detected memory leaks!
   Dumping objects -&gt;
   {44} normal block at 0x002D2390, 12 bytes long.
   Data: &lt;struct test &gt; 73 74 72 75 63 74 20 74 65 73 74 00
   Object dump complete.
   The program 'E:\temp\Text1.exe' has exited with code 1 (0x1).

</PRE>NOTE: If you are using the 'name' member function within an MFC
application, the leaks will be reported even if you do not explicitly call
_CrtDumpMemoryLeaks. MFC calls this function automatically when the
application terminates.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 4.10 vcbuglist400 vcfixlist420<BR>
KBCategory: kbprg kbbuglist kbfixlist<BR>
KBSubcategory: CRTIss<BR>
Keywords          : CRTIss kbbuglist kbfixlist kbprg<BR>
Version           : 4.00 4.10<BR>
Platform          : NT WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 19, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
