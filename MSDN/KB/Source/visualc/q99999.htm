

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INFO: Background Processing in an MFC Application </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q99999 ">
<META NAME="KBModify" CONTENT="1997/10/10">
<META NAME="KBCreate" CONTENT="1993/06/13">
<META NAME="Keywords" CONTENT="MfcMisc kbinfo">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Many applications perform lengthy processing  in the background  during intervals when the user is not otherwise interacting with the application. In an application developed for the Microsoft Windows operating system, an application can perform ba...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAA7,QAJH,QDL9,QBWO,QBWN,QBHQ,QA5C,QBFY,QA56,QA55,QAY5,QAPW,QAEV,QDOP,QBWQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INFO: Background Processing in an MFC Application</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q99999 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
<P><PRE>    - Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51, 1.52
    - Microsoft Visual C++ 32-bit Edition, versions 2.0, 2.1, 4.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Many applications perform lengthy processing "in the background" during
intervals when the user is not otherwise interacting with the application.
In an application developed for the Microsoft Windows operating system, an
application can perform background processing by splitting a lengthy
process into many small fragments. After processing each fragment, the
application yields execution control to Windows using a PeekMessage() loop.
<P>
An application developed with the Microsoft Foundation Class Library
can perform background processing either by using the PeekMessage()
loop in the library code's main message loop or by embedding another
PeekMessage() loop in the application.
<P>
NOTE: The remainder of this article, namely the sample code, is specific to
Visual C++ for Windows and Visual C++ 32-bit Edition, version 2.x. For
Visual C++ 32-bit Edition, version 4.0, please refer to the Frequently
Asked Question (FAQ) about MFC "Background Processing in an MFC
Application" in the Visual C++ 4.0 Books Online.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
In an application developed with the Microsoft Foundation Class Library,
the main message loop in the CWinApp class contains a PeekMessage() loop.
This loop calls the CWinApp::OnIdle() function between messages. An
application can process messages in this idle time by overriding the
OnIdle() function. For more information about performing background
processing in the OnIdle() function, please refer to the documentation for
the CWinApp::OnIdle() function in the "Class Libraries Reference" manual.
<P>
Another method to perform background processing in an application involves
embedding a PeekMessage() loop in a function. Because a PeekMessage() loop
is very similar to the main message loop, such a loop in an application
developed with the Microsoft Foundation Class Library must perform many of
the functions of the main message loop in the library. The following code
fragment demonstrates writing a PeekMessage() loop that is compatible with
the Microsoft Foundation Class Library:
<P>
<PRE>   while (bDoingBackgroundProcessing)
   {
      while (::PeekMessage(&amp;msg, NULL, 0, 0, PM_REMOVE))
      {
         if (msg.message == WM_QUIT)
         {
            bDoingBackgroundProcessing = FALSE;
            ::PostQuitMessage(nExitCode);
            break;
         }
         if (!AfxGetApp()-&gt;PreTranslateMessage(&amp;msg))
         {
            ::TranslateMessage(&amp;msg);
            ::DispatchMessage(&amp;msg);
         }
      }
      AfxGetApp()-&gt;OnIdle(0);   // updates user interface
      AfxGetApp()-&gt;OnIdle(1);   // frees temporary objects

     // Perform some background processing here
     // When you are done with the background task
     // set bDoingBackgroundProcessing to FALSE
   }
</PRE> 
<PRE>Keywords          : MfcMisc kbinfo
Technology        : kbmfc
Version           : 1.0 1.5 1.51 1.52 2.0 2.1 4.0
Platform          : NT WINDOWS</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
