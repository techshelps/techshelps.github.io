

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PGCHART: How to Draw a Line Chart with Lines Only </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q68745 ">
<META NAME="KBModify" CONTENT="1997/07/17">
<META NAME="KBCreate" CONTENT="1991/01/26">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  In Microsoft C versions 6.0, 6.0a, 6.0ax, C/C++ 7.0 and Visual C/C++ 1.0 using _pg_defaultchart(), you can specify a line-chart type with _PG_LINECHART. The choices for the chart style are _PG_POINTANDLINE and _PG_POINTONLY. There is no manifest co...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBFY,QBXT,QAIB,QA5V,QAPG,QAH4,QAM4,QDNX,QACR,QBC9,QBC8,QAQG,QANO,QALQ,QBWA V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PGCHART: How to Draw a Line Chart with Lines Only</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 17, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q68745 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
6.00 6.00a 6.00ax 7.00 | 1.00
<PRE>MS-DOS                 | WINDOWS
</PRE>kbprg kbcode
<P>
<P>
 
The information in this article applies to:

<UL><LI>The C Run-time (CRT), included with:
<P>
<P><PRE>    - Microsoft C for MS-DOS, versions 6.0, 6.0a, and 6.0ax
    - Microsoft C/C++ for MS-DOS, version 7.0
    - Microsoft Visual C++ for Windows, version 1.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft C versions 6.0, 6.0a, 6.0ax, C/C++ 7.0 and Visual C/C++
1.0 using _pg_defaultchart(), you can specify a line-chart type with
_PG_LINECHART. The choices for the chart style are _PG_POINTANDLINE
and _PG_POINTONLY. There is no manifest constant for "lines only," but
a line chart with lines only can be made with a few modifications to
the existing code, which produces a chart with points and lines.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following code, which defines the field in the palette to be
modified, is taken from page 259 of the "Microsoft C Advanced
Programming Techniques" manual that shipped with C version 6.0.
<P>
<PRE>/* Typedef for pattern bitmap */
</PRE>typedef unsigned char fillmap[8];
<P>
<PRE>/* Typedef for palette entry definition */
</PRE>typedef struct
{
<PRE>     unsigned short color;
     unsigned short style;
     fillmap fill;
     char plotchar;     /* by default, the plotted character is '*' */
</PRE>} paletteentry;
<P>
<PRE>/* Typedef for palette definition */
</PRE>typedef paletteentry palettetype[ _PG_PALETTELEN ];
<P>
The following are the modifications to be made to the sample program
SCATTER.C on pages 256-258 of "Microsoft C Advanced Programming
Techniques" (also on pages 280-281 of "C For Yourself," which was
shipped with QuickC version 2.5). Note that the original program
produces a scatter chart; a line chart requires different arguments in
the call to _pg_defaultchart(), as shown below.
<P>
Declare the following variable
<P>
<PRE>   palettetype palette_struct;

</PRE>after the line
<P>
<PRE>   _pg_initchart( );

</PRE>but before the line:
<P>
<PRE>   _pg_defaultchart( &amp;env, _PG_LINECHART, _PG_POINTANDLINE);

</PRE><P><LI>Get the array of current palette structures with the line:
<P>
<P><PRE>      _pg_getpalette( palette_struct );
</PRE>
<P><LI>Change the plotted character in the first palette to a blank, so
   that no points will appear on the graph (the line will be
   unbroken). For example:
<P>
<P><PRE>      palette_struct[1].plotchar = ' ';
</PRE>
<P><LI>Reset the palette with the line:
<P>
<P><PRE>      _pg_setpalette( palette_struct );
</PRE><P>
</OL>The following is the modified SCATTER.C program:
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>#include &lt;conio.h&gt;
#include &lt;string.h&gt;
#include &lt;graph.h&gt;
#include &lt;pgchart.h&gt;

#define MONTHS  12

</PRE></OL>typedef enum {FALSE, TRUE}  boolean;
<P>
float far value[MONTHS] =
{
<PRE>        33.0,27.0,42.0,64.0,106.0,157.0,
       182.0,217.0,128.0,62.0,43.0,36.0
</PRE>};
<P>
<PRE>char far *category[MONTHS] =
</PRE>{
<PRE>        "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jly", "Aug",
        "Sep", "Oct", "Nov", "Dec"
};

</PRE>palettetype palette_struct;
<P>
main( )
{
<PRE>        chartenv env;
        int mode = _VRES16COLOR;

        if( _setvideomode( _MAXRESMODE ) == 0 )
                exit( 0 );
        _pg_initchart();

        _pg_getpalette( palette_struct );
        palette_struct[1].plotchar = ' ';
        _pg_setpalette( palette_struct );

        _pg_defaultchart( &amp;env, _PG_LINECHART, _PG_POINTANDLINE );
        strcpy( env.maintitle.title, "Good Neighbor Grocery" );
        env.maintitle.titlecolor = 6;
        env.maintitle.justify = _PG_RIGHT;
        strcpy( env.subtitle.title, "Orange Juice vs Hot Chocolate" );
        env.subtitle.titlecolor = 6;
        env.subtitle.justify = _PG_RIGHT;
        strcpy( env.xaxis.axistitle.title, "Months" );
        strcpy( env.yaxis.axistitle.title, "Quantity" );
        env.chartwindow.border = FALSE;
        env.xaxis.ticinterval = 4.0;

        if( _pg_chart( &amp;env, category, value, MONTHS ) )
        {
                _setvideomode( _DEFAULTMODE );
                _outtext( "Error: can't draw chart" );
        }
        else
        {
                getch();
                _setvideomode( _DEFAULTMODE );
        }
        return( 0 );
}

</PRE>For more information about line charts, see pages 252-273 of
"Microsoft C Advanced Programming Techniques," and pages 267-296 of "C
for Yourself."
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 6.00 6.00a 6.00ax 7.00 1.00<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: CRTIss<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 17, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
