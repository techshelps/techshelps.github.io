

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Compiler Errors when Implementing CObject-Derived Class </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q117794">
<META NAME="KBModify" CONTENT="1997/07/31">
<META NAME="KBCreate" CONTENT="1994/07/10">
<META NAME="Keywords" CONTENT="MfcMisc kbprb kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="   When you implement a class derived from CObject and your code is written so that the copy constructor or assignment operator for the class needs to be called, the compiler may report errors similar to the following:      error C2660: 'CSample::CSa...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB4,QBFY,QAAP,QA9N,QASB,QAOT,QANY,QAKM,QABO,QBWP,QA56,QA55,QAB5,QAH4,QAY5 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Compiler Errors when Implementing CObject-Derived Class</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 31, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q117794</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
7.00   | 1.00 1.50 1.51 1.52 | 1.00 2.00 2.10 4.00
<PRE>MS-DOS | WINDOWS             | WINDOWS NT
</PRE>kbprg kbprb
<P>
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC), included with:
<P>
<P><PRE>    - Microsoft C/C++ version 7.0
    - Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51 and
      1.52
    - Microsoft Visual C++ 32-bit Edition, version 1.0, 2.0, 2.1, and
      4.0
</UL></PRE> 
<P>
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When you implement a class derived from CObject and your code is written so
that the copy constructor or assignment operator for the class needs to be
called, the compiler may report errors similar to the following:
<P>
<PRE>    error C2660: 'CSample::CSample' : function does not take
        1 parameters
    error C2582: 'CSample' : 'operator =' function is unavailable

</PRE>You can reproduce the problem by compiling the sample code in the
"RESOLUTION" section, below.
<P>
NOTE: Using Visual C++, 32-bit Edition, versions 2.x and 4.0, the sample
code shown in this article generates the following error messages:
<P>
<PRE>   error C2558: 'CSample::CSample' : no copy constructor available
   error C2582: 'CSample' : 'operator =' function is unavailable

</PRE><h2>CAUSE</h2>
 
<P>
The reason for the compiler errors is that CObject declares a private copy
constructor and assignment operator in the AFX.H file. The compiler does
not generate a default copy constructor and assignment operator for the
CObject-derived class because of this. Because the compiler does not find
these functions declared in the class, it reports the errors.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To avoid the compiler errors, you need to implement a copy constructor and
assignment operator for the CObject-derived class. This is illustrated in
the sample code below. You can avoid the errors by uncommenting the lines
indicated in the sample code.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>/* Compile options needed: /c
*/

   // replace with #define _CONSOLE when compiling for Windows NT
   #define _DOS

   #include &lt;afx.h&gt;

   class CSample : public CObject
   {
   private:
       short m_nValue;
   public:
   // uncomment the lines below to avoid the compiler errors
   //    CSample() {}
   //    CSample( const CSample &amp;s )  // copy ctor
   //        { m_nValue = s.m_nValue; }
   //    CSample&amp; operator=( const CSample &amp;s )  // assignment operator
   //        { m_nValue = s.m_nValue; return *this; }
   };

   void main()
   {
       CSample a;
       CSample b = a;
       a = b;
   }

</PRE><h2>REFERENCES</h2>
 
<P>
"Visual C++ and C/C++, version 7.0 Language Reference" manuals,
Section 11.7, "Copying Class Objects."
<P>
Visual C++ 4.0 Books Online: Visual C++ Books, C/C++, C++ Language
Reference, Special Memeber Functions, Copying Class Objects.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 7.00 1.00 1.50 2.00 2.10 2.50 1.51 1.52 2.51<BR>
3.00 3.10 4.00 arguments<BR>
KBCategory: kbprg kbprb<BR>
KBSubcategory: MfcMisc<BR>
Keywords          : MfcMisc kbprb kbprg<BR>
Technology        : kbMfc<BR>
Version           : 7.00   | 1.00 1.50 1.51 1.52 | 1<BR>
Platform          : MS-DOS NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 31, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
