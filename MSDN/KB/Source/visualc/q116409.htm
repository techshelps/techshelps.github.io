

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Edit() After Requery() May Produce Incorrect Results </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q116409">
<META NAME="KBModify" CONTENT="1997/09/18">
<META NAME="KBCreate" CONTENT="1994/06/20">
<META NAME="Keywords" CONTENT="kb16bitonly MfcDatabase kbbuglist kbfixlist kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  In an MFC database application using CRecordsets:  1. Open a recordset and look at the contents of the first record.  2. Call Edit() on the recordset object to place it in Edit mode.  3. Change the parameters for the query.  4. Call Requery() on th...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGI,QA5V,QAIF,QAYL,QBF0,QAY5,QAR4,QBXS,QAW6,QAPN,QAKD,QACF,QDMH,QA7O,QA7N V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Edit() After Requery() May Produce Incorrect Results</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q116409</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.50
WINDOWS
kbprg kbfixlist kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC), included with:
<P><PRE>    - Microsoft Visual C++ for Windows, version 1.5
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
In an MFC database application using CRecordsets:

<OL><P><LI>Open a recordset and look at the contents of the first record.

<P><LI>Call Edit() on the recordset object to place it in Edit mode.

<P><LI>Change the parameters for the query.

<P><LI>Call Requery() on the recordset with a different query so that a
   different record appears as the first record.

<P><LI>Call Edit() on the new recordset and notice that the fields are loaded
   with the values from the first record of the first recordset.

<P><LI>Inspect the field variables of the recordset and note that they contain
   the values of the original query instead of the new values you would
   expect.
<P>
</OL><h2>CAUSE</h2>
 
<P>
The reason for this behavior is that Requery() does not reset the
m_nEditMode variable that gets set when you call Edit(), nor does it flush
the CMemFile-based record cache. The second time Edit() is called,
m_nEditMode indicates that the recordset is in Edit mode and therefore is
reset, with the cache restored to the record fields. This behavior of the
second call to Edit() is expected according to the specification of the
function [see the Edit() function description in the "MFC Library
Reference"].
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To work around this, override CRecordset::Requery() in your derived
CRecordset class and call the ReleaseCopyBuffer() function. This
resets the Edit-mode member variable, m_nEditMode, and also flushes
the record cache. The sample code in the "MORE INFORMATION" section, below,
includes an example of an overridden Requery().
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. This problem was corrected in MFC version
2.51, included with Visual C++ version 1.51.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The CRecordset class contains two member variables called "m_pmemfile" and
"m_par". m_pmemfile is a pointer to a CMemFile object used to hold the
current record; m_par is a pointer to an archive used to hold the CMemFile.
m_pmemfile is the cache that remains persistent between calls to "Edit()"
if no reopen or requery is done. "ReleaseCopyBuffer()" frees the objects
associated with these pointers and thus flushes any values that might be
restored on a second edit call. Edit() then reallocates the CMemFile object
and archive and reloads the cache buffer.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>// CMyRecordset is derived from CRecordset.

   BOOL CMyRecordset::Requery()
   {
       BOOL bRC = CRecordset::Requery();
       ReleaseCopyBuffer();
       return bRC;
   }

</PRE></OL><h2>REFERENCES</h2>
 
<P>
For other articles pertaining to problems with CRecordset::Requery(), query
on "Requery" and "CRecordset".
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: InitRecord 1.50 2.50<BR>
KBCategory: kbprg kbfixlist kbbuglist<BR>
KBSubcategory: MfcDatabase<BR>
Keywords          : kb16bitonly MfcDatabase kbbuglist kbfixlist kbprg<BR>
Technology        : kbMfc<BR>
Version           : 1.50<BR>
Platform          : WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
