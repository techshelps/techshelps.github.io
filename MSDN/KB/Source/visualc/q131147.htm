

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: CXX0033 Error in OMF Type from Forward Class Declaration </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q131147">
<META NAME="KBModify" CONTENT="1997/09/18">
<META NAME="KBCreate" CONTENT="1995/06/04">
<META NAME="Keywords" CONTENT="CLIss WBDebug kbbuglist kbfixlist kbtool">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  In the Visual C++ debugger, if you debug an application built using precompiled header (PCH) options, the debugger's expression evaluator may generate errors when viewing classes that were declared but not defined in the precompiled header file.  O...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB4,QBFY,QAAP,QAVX,QA56,QA55,QAVW,QAKP,QABO,QAYY,QAP2,QBVV,QAR4,QAFQ,QAM1 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: CXX0033 Error in OMF Type from Forward Class Declaration</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q131147</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00 1.50 1.51 1.52 | 1.00 2.00 2.10
<PRE>WINDOWS             | WINDOWS NT
</PRE>kbtool kbfixlist
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft C/C++ Compiler (CL.EXE) included with:
<P>
<P><PRE>    - Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51, 1.52
    - Microsoft Visual C++, 32-bit Edition, versions 1.0, 2.0, 2.1
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
In the Visual C++ debugger, if you debug an application built using
precompiled header (PCH) options, the debugger's expression evaluator may
generate errors when viewing classes that were declared but not defined in
the precompiled header file.
<P>
One of the following errors may be generated depending on the Visual C++
version:
<P>
<PRE>   CXX0017 Error: symbol "xxxx" cannot be found
   CXX0030 Error: expression cannot be evaluated
   CXX0033 Error: error in OMF type information
   CV1255 Error: no data members

</PRE>NOTE: The first error message is very generic, and can occur for several
different reasons including this one.
<P>
<P><h2>CAUSE</h2>
 
<P>
When the compiler writes out type information into the program database
(.PDB) file, incomplete type information is written for the forward class
declaration when the full definition has not yet been compiled.
<P>
When the module containing the full class definition is compiled, the
complete type information is not replacing the incomplete type information
in the .PDB file.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Here are three possible workarounds:

<UL><LI>Turn off PCH usage. This avoids the problem altogether.
<P>
   -or-

<LI>Include the full definition of the class in .PCH file. This causes the
   complete type information to be written to the .PDB file.
<P>
   -or-

<LI>Compile using C7 Compatible Debug Info switch (/Z7). This will not use
   a .PDB file to store type information. You may also need to use the /Yd
   option to include PCH debug information in all object modules.
<P>
<P>
</UL><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. This problem was fixed in Microsoft
Visual C++, 32-bit Edition, version 4.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following small sample application reproduces the problem. In the
Visual C++ integrated debugger, it is not possible to expand "A" in the
locals window, watch window, or with a quickwatch.
<P>
<P><h3>Sample Code to Demonstrate Problem</h3>
 
<P>
<PRE>/* PCH.H
*/
</PRE>class FwdNonPCHClass;
<P>
class PCHClass
{
<PRE> public:
   int i;
   long l;
   class FwdClass * FwdNonPCHClassPtr;
</PRE>};
<P>
<P>
<PRE>/*
   STDPCH.CPP
   Win32 Compile options needed: /Yc"pch.h" /Od /Zi /c
   Win16 Compile options needed: /Yc"pch.h" /Od /Zi /Mq /c

*/
#include "pch.h"

/*
   TEST.CPP
   Win32 Compile options needed: /Yu"pch.h" /Od /Zi test.cpp stdpch.obj
   Win16 Compile options needed: /Yu"pch.h" /Od /Zi /Mq test.cpp stdpch.obj

*/
#include "pch.h"

</PRE>class FwdNonPCHClass
{
<PRE> public:
 int i;
 long l;
</PRE>};
<P>
<PRE>void main(void)
</PRE>{
FwdNonPCHClass A;
PCHClass B;
<P>
A.i = 1;
A.l = 17L;
<P>
B.i = 54;
B.l = 17L;
}
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 1.50 1.51 1.52 1.52a 2.00 2.10 8.0 8.00<BR>
8.0c 8.00c 9.0 9.00 9.1 9.10<BR>
KBCategory: kbtool kbfixlist kbbuglist<BR>
KBSubcategory: CLIss WBDebug<BR>
Keywords          : CLIss WBDebug kbbuglist kbfixlist kbtool<BR>
Version           : 1.00 1.50 1.51 1.52 | 1.00 2.00<BR>
Platform          : NT WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
