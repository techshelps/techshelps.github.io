

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: C2440 Expanding Template with a Pointer to a Nested Class </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q149327">
<META NAME="KBModify" CONTENT="1997/07/31">
<META NAME="KBCreate" CONTENT="1996/03/30">
<META NAME="Keywords" CONTENT="CLIss vcbuglist400 vcbuglist500 kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  At the point where a class template is expanded using a pointer to a nested class, the compiler reports the following errors (generated by the sample code listed in this article):     [FileName](14) : error C2440: 'initializing' : cannot convert fr...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBFY,QABO,QA36,QAB4,QAAP,QAKP,QAJ8,QBXF,QA6A,QAO3,QAO2,QALZ,QAH4,QAG4,QDKW V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: C2440 Expanding Template with a Pointer to a Nested Class</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 31, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q149327</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft C/C++ Compiler (CL.EXE) included with:
   - Microsoft Visual C++, 32-bit Edition, versions 4.0, 4.1, 4.2, 5.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
At the point where a class template is expanded using a pointer to a nested
class, the compiler reports the following errors (generated by the sample
code listed in this article):
<P>
<PRE>   [FileName](14) : error C2440: 'initializing' : cannot convert from
   'class A::B' to 'class A::B *' (new behavior; please see help)

   [FileName](14) : error C2439: 't' : member could not be initialized

</PRE>Lines 13 and 14 in the sample code are:
<P>
<PRE>   template &lt;class T&gt; C&lt;T&gt;::C() : t(T())  // error
   {

</PRE><h2>RESOLUTION</h2>
 
<P>
There are three possible workarounds to this problem. Each is stated here
in terms of the sample code included in this article:

<UL><LI>Remove t(T()) from the initializer list and add t = T(); to the body of
   the constructor. This workaround assumes there is an operator= defined
   for class T.
<P>
   -or-

<LI>Change C&lt;A::B *&gt; c; to C&lt;A::B&amp;&gt; c; or C&lt;A::B&gt; c:
<P>
   -or-

<LI>Change the definitions of class A and class B to that B is no longer
   nested in the definition of A.
<P>
</UL><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. We are researching this problem and will
post new information here in the Microsoft Knowledge Base as it becomes
available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
In this case, the problem is caused by the attempt to initialize the
data member t.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   /* Compile options needed: None */
   template &lt;class T&gt; class C
   {
   public:
      C();
   private:
      T t;
   };

   template &lt;class T&gt; C&lt;T&gt;::C() : t(T())  // error
   {
   }

   class A
   {
   public:
      class B
      {
      };
   };

   main()
   {
      C&lt;A::B *&gt; c;
      return 0;
   }
</PRE> 
<PRE>Keywords          : CLIss vcbuglist400 vcbuglist500 kbprg
Version           : 4.0 4.1 4.2 5.0
Platform          : NT WINDOWS
Issue type        : kbbug</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 31, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
