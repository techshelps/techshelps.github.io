

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INFO: Creating a Browser Library for the Foundation Classes </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q98656 ">
<META NAME="KBModify" CONTENT="1997/10/10">
<META NAME="KBCreate" CONTENT="1993/05/11">
<META NAME="Keywords" CONTENT="MfcMisc kbprg kbfasttip">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The Microsoft Visual C++ products include the source code for the Microsoft Foundation Class (MFC) Library. Because it is important to understand the implementation of the Foundation Classes when overriding or using member functions, developers are...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBHQ,QBFY,QAFI,QBJZ,QA56,QA55,QAZV,QBV8,QBXB,QATJ,QAIB,QBVV,QAHE,QBXS,QBWS V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INFO: Creating a Browser Library for the Foundation Classes</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q98656 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
   - Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51, 1.52
   - Microsoft Visual C++ 32-bit Edition, versions 1.0, 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The Microsoft Visual C++ products include the source code for the Microsoft
Foundation Class (MFC) Library. Because it is important to understand the
implementation of the Foundation Classes when overriding or using member
functions, developers are encouraged to construct a Browser database for
the Microsoft Foundation Classes source code. Once a Browser database (.BSC
file) is created, it can be loaded into the Visual Workbench by choosing
File.Open.
<P>
This article discusses the following:

<UL><LI>Modifying the MFC source makefile to create a Browser database
   without re-building the Foundation Classes Library.

<LI>Modifying the MFC source makefile to create a Browser database
   while re-building the library.

<LI>Integrating the Foundation Classes Browser information into your
   project.
<P>
</UL>For more information about the Browser tool, see chapter 7 in the
Visual Workbench User's Guide.
<P>
NOTE: The distribution CD for Microsoft Visual C++ 32-bit Edition, versions
2.x and 4.0, contains a pre-built browser database for the 32-bit edition
of MFC, versions 3.x and 4.0, respectively. This browser database can be
found in the MFC source code directory as \MSVC20\MFC\SRC\MFC.BSC for
Visual C++ 2.x and as \MSDEV\MFC\SRC\MFC.BSC for Visual C++ 4.0. Although
Visual C++ 1.5x is included on the Visual C++ 2.x CD, this CD does not
contain a pre-built browser database for the 16-bit version of MFC.
Nevertheless, one can be built following the instructions below.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Modifying the 'makefile' File to Add Rules for Building the .bsc File</h3>
 
<P>
Make the following additions to the file called MAKEFILE in the
\MSVC\MFC\SRC directory:

<OL><P><LI>You'll see the lines:
<P>
<P><PRE>      ###############################################################
      # Set CPPFLAGS for use with .cpp.obj and .c.obj rules
      # Define rule for use with OBJ directory
      # C++ uses a PCH file
</PRE><P>
   On the next line after this, include the text:
<P>
<P><PRE>      # define compiler options for building just the .BSC file
      # BSC=1 means browser database only
      # BSC=2 means browser database with library rebuild
      !if "$(BSC)"=="1"
      OPT=$(OPT) /FR$D\ /Zn /Zs
      !else if "$(BSC)"=="2"
      OPT=$(OPT) /FR$D\ /Zn
      !endif
</PRE><P>
</OL>2, You also see the lines:
<P>
<PRE>      ###############################################################
      # Goals to build

      goal: create.dir ..\lib\$(GOAL).lib


   Change this to:


      ##############################################################
      # Goals to build

      !if "$(BSC)"!="1"
      goal: create.dir ..\lib\$(GOAL).lib bsc
      !endif

      !if "$(BSC)"=="1" || "$(BSC)"=="2"
      #Build .BSC file
      bsc: create.dir $(OBJS)
         cd $D
         bscmake /Iu /o $(GOAL).bsc *.sbr
         del *.sbr

      !else
      bsc:

      !endif

</PRE></OL>These changes will allow you to use the MAKEFILE NMAKE file to create a
Browser database for the Microsoft Foundation Classes. You will run the
makefile the same as that which is described in the README.TXT file located
in the \MSVC\MFC\SRC directory. The only difference is that you can specify
whether you want a .BSC file created for the project. Be sure that you
understand the information in the README.TXT file before reading further.
<P>
See NMAKE.WRI in the \MSVC\MFC\HELP directory for more information
about using NMAKE and creating NMAKE files.
<P>
<P><h3>Creating a Browser Database without Re-building OBJs or the Library</h3>
 
<P>
After you have made the modifications to the MAKEFILE file described
above, perform the following steps to create the Browser file (.BSC
file) for the Foundation Class Library:

<OL><P><LI>If you have previously built the library and OBJs already exist
   in the destination directory (i.e. $MWD), delete the .PCH and
   OBJs in that directory. You can do this by following the
   directions in section 3 for the \MSVC\MFC\SRC\README.TXT file.

<P><LI>Make sure you have you have the system environment variables
   configured correctly (by running MSVCVARS.BAT or VCVARS32.BAT)
   and invoke the NMAKE command line specifying "BSC=1". "BSC=1"
   means that just the browser database (.BSC) will be built.
   The OBJs and Library will not be built. Here is an example
   of a command line you might specify:
<P>
<P><PRE>      NMAKE MODEL=M TARGET=W DEBUG=1 DLL=0 BSC=1
</PRE><P>
   This will build a file called MAFXCWD.BSC in the $MWD
   subdirectory under the \MSVC\MFC\SRC directory. See the
   \MSVC\MFC\SRC\README.TXT file for more information about the
   NMAKE parameters shown above.
<P>
</OL>To use the Browser file, start VC++ and select "Open" from the file menu.
Choose the .BSC file which you created. The Browser window will appear and
you can then look up any of the MFC functions or data variables.
<P>
You may want to delete the .PCH file that is located in the same
directory as the .BSC file you created.
<P>
<P><h3>Creating a Browser Database when Re-building the Library</h3>
 
<P>
To create a .BSC file for the Foundation Classes when rebuilding the
MFC library, first you must make the modifications shown above to the
MAKEFILE file. Next, perform the following steps:

<OL><P><LI>If you have previously built the library and OBJS already exist
   in the destination directory (i.e. $MWD), delete the .PCH and
   OBJs in that directory. You can do this by following the
   directions in section 3 for the \MSVC\MFC\SRC\README.TXT file.

<P><LI>Make sure you have you have the system environment variables
   configured correctly (by running MSVCVARS.BAT or VCVARS32.BAT)
   and invoke the NMAKE command line specifying "BSC=2". The OBJs
   and Library will not be built. Here is an example of a command
   line you might specify:
<P>
<P><PRE>      NMAKE MODEL=M TARGET=W DEBUG=1 DLL=0 CODEVIEW=1 BSC=2
</PRE><P>
   This NMAKE command line will build the medium model, Windows,
   debug, MFC library and place it in the $MWD subdirectory. It
   will also build a Browser database for the library. The file
   will be called MAFXCWD.BSC.
<P>
   See the \MSVC\MFC\SRC\README.TXT file for more information
   about the NMAKE parameters shown above.
<P>
</OL>To use the Browser file, start Visual C++ and select "Open" from the file
menu. Choose the .BSC file which you created. The Browser window will
appear and you can then look up any of the MFC functions or data variables.
<P>
<P><h3>Integrating the Class Library Browser Information into Your Project</h3>
 
<P>
The text below presents the three steps required to integrate the MFC
Library browser information (.SBR files) into your project browser
database.

<OL><P><LI>Create browser information files (.SBR) for the appropriate
   MFC library.
<P>
   To create the SBR files, follow the directions above except don't
   add the makefile line "del *.sbr". Also, place a "/n" on the
   BSCMAKE command line.  This will prevent the .SBR files from
   getting truncated to zero when the .BSC file is created. After
   building the browser database for the MFC library, you will be
   left with .SBR files as well.

<P><LI>Load your project in Visual C++ and modify the compiler options as
   follows to place the .SBR files for your project into the current
   directory.
<P>
   a. Choose Project from the Options menu.
<P>
   b. Choose Compiler in the Customize Build Options group.
<P>
   c. Choose Listing Files in the Category group.
<P>
   d. Clear the Browser Information check box.
<P>
   e. Choose Custom Options in the Category group.
<P>
   f. At the beginning of the Other Options field enter "/Fr.\"
<P><PRE>     (without quotation marks).
</PRE><P>
   g. Choose OK.
<P>
   (You must disable browser information for your project to prevent
   Visual C++ from calling BSCMAKE. If Visual C++ calls BSCMAKE, the
   browser database includes only .SBR files for files in the project;
   the MFC Library files are not included.)

<P><LI>In Visual Workbench, add an option on the Tools menu to call
   BSCMAKE, as follows:
<P>
   a. Choose Tools from the Options menu.
<P>
   b. Choose Add.
<P>
   c. In the Add Tool dialog box, specify the path to BSCMAKE in the
<P><PRE>      File Name field (by default C:\MSVC\BIN\BSCMAKE under Windows and
      C:\MSVCNT\BIN\BSCMAKE under Windows NT).
</PRE><P>
   d. Modify the contents of the Menu Text field to read something
<P><PRE>      like "BSCMAKE with MAFXCWD" (without quotation marks).
</PRE><P>
   e. Specify the the following in the Arguments field:
<P>
<PRE>         /o$PROJ /n *.SBR &lt;sbrdirectory&gt;\*.sbr

      where &lt;sbrdirectory&gt; is the directory where the SBR files are
      located.  For example, if you followed the directions in step 1
      and created the .SBR files for the medium model, debug, Windows,
      MFC library, you're SBR files will be located in the
      \MSVC\MFC\SRC\$MWD.

   f. Choose OK.

   Note that the BSCMAKE command line includes the /n option switch.
   As the documentation describes, this switch prevents BSCMAKE from
   performing an incremental build that truncates all .SBR files to
   zero bytes. The /n option slows the .BSC build; however, it
   preserves the .SBR files for other projects to use. To speed
   performance, you may want to make a backup copy of the MFC Library
   .SBR files for repeated use and edit the Arguments field to remove
   the /n option switch to enable incremental builds.

   You may want to modify the Arguments field to include the /Iu
   option switch. The /Iu switch instructs BSCMAKE to include all
   information that the source code defines but does not reference. By
   default, BSCMAKE does not include any symbols that are not
   referenced. Unfortunately, if you specify the /Zn compiler option
   in the Visual Workbench, VWB sets the Browser Information check box
   (and invokes BSCMAKE without specifying the MFC Library .SBR
   files). In Visual C++ version 1.0, the ability to browse MFC
   Library files and to browse symbols that are defined but not
   referenced are mutually exclusive.

   To build the .BSC file for your project, build the project, then
   run BSCMAKE from the newly created option on the Tools menu.

   IMPORTANT: You must close the browser window before you run
   BSCMAKE. BSCMAKE cannot create a new browser file unless the .BSC
   file is closed.

</PRE></OL><h3>Important Notes</h3>
 

<UL><LI>If you are running Windows with the Win32s DLLs, you will not be
   able to run BSCMAKE from the Tools menu. You must run it from the
   MS-DOS command line.

<LI>The .BSC file you create must not be moved to another directory
   otherwise the browser will not be able to find the source files.

<LI>Do not specify /A on the NMAKE command line if you don't have Microsoft
   Macro Assembler 6.1 or greater in your PATH. The /A option will do a
   "rebuild all" and will cause some assembler files (.ASM files) to be
   re-assembled. Of course, if you don't have the assembler, the makefile
   will fail.

<LI>For more information about BSCMAKE, view the BSCMAKE.WRI file located in
   the MSVC\HELP directory.

<LI>For more information about NMAKE, view the NMAKE.WRI file located in the
   MSVC\HELP directory.
</UL> 
<PRE>Keywords          : MfcMisc kbprg kbfasttip
Technology        : kbmfc
Version           : 1.0 1.5 1.51 1.52 4.0
Platform          : NT WINDOWS
Issue type        : kbinfo</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
