

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: _stat Function Fails for Names Ending with "\" </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q168439">
<META NAME="KBModify" CONTENT="1997/05/21">
<META NAME="KBCreate" CONTENT="1997/05/12">
<META NAME="Keywords" CONTENT="CRTIss vcbuglist500 kbbuglist">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Using the C-Run-time function stat to check a directory fails when the name passed to the function ends with  \ .  For example, _stat( \\my_directory\\my_name ,*buf) returns OK, but _stat( \\my_directory\\my_name\\ ,*buf) will return -1 as error.  ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBFY,QAY5,QAUD,QBV8,QAB9,QAUJ,QAL3,QAKP,QALZ,QAD7,QABI,QAFI,QDIX,QARM,QALW V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: _stat Function Fails for Names Ending with "\"</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  May 21, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q168439</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The C Run-time (CRT) included with:
   - Microsoft Visual C++, 32-bit Editions, version 5.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Using the C-Run-time function stat to check a directory fails when the
name passed to the function ends with "\".
<P>
For example, _stat("\\my_directory\\my_name",&amp;buf) returns OK, but
_stat("\\my_directory\\my_name\\",&amp;buf) will return -1 as error.
<P>
<P><h2>CAUSE</h2>
 
<P>
The _stat function calls the windows API function FindFirstFile passing it
the path name. The FindFirstFile returns an invalid handle if the name ends
with "\."
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Remove the trailing "\" from the path name.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products
listed at the beginning of this article. We are researching this
bug and will post new information here in the Microsoft Knowledge
Base as it becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following Sample program demonstrates the problem:
<P>
<PRE>   //Sample.cpp
   /* Compiler Options : none */
   #include &lt;sys/types.h&gt;
   #include &lt;sys/stat.h&gt;
   #include &lt;stdio.h&gt;
   #include &lt;windows.h&gt;
     HANDLE            hSearch;
     WIN32_FIND_DATA   Buf;
   int main( void )
   {
      struct _stat buf;
      int result;

      result = _stat( "c:\\temp", &amp;buf );
      if( result != 0 )
         printf( "_stat function on c:\\temp failed " );

      result = _stat( "c:\\temp\\", &amp;buf );
      if( result != 0 )
        printf( "_stat function on c:\\temp\\ failed " );

      hSearch= FindFirstFile((LPSTR)"c:\\temp", &amp;Buf);
      if (hSearch == INVALID_HANDLE_VALUE )
         printf("\n\n FindFirstFile on c:\\temp failed too");

      hSearch= FindFirstFile((LPSTR)"c:\\temp\\", &amp;Buf);
      if (hSearch == INVALID_HANDLE_VALUE )
         printf("\n\n FindFirstFile on c:\\temp\\ failed too");

   return 0;
   }

</PRE>Program Output:
<P>
If you have a valid C:\temp directory:
<P>
_stat function on c:\temp\ failed.
<P>
<PRE> FindFirstFile on c:\temp\ failed, too.

</PRE><h2>REFERENCES</h2>
 
<P>
Online docs on _stat CRT function
mk:@ivt:vccore/F3F/F43/D4D/S4CF6A.HTM
<P>
Online docs on FindFirstFile API function
mk:@ivt:pdref/native/sdk/win32/func/src/f24_10.htm
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : CRTIss vcbuglist500 kbbuglist<BR>
Version             : 5.0<BR>
Platform            : NT WINDOWS<BR>
Issue type          : kbbug<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  May 21, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
