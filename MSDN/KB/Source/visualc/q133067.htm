

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Create Two-dimensional Huge Arrays w/ C++ new Operator </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q133067">
<META NAME="KBModify" CONTENT="1997/08/26">
<META NAME="KBCreate" CONTENT="1995/07/24">
<META NAME="Keywords" CONTENT="CPPIss CPPLangIss kb16bitonly kbcode">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The code sample in this article shows two ways to dynamically create huge two-dimensional arrays (bigger than the 64K byte limit) using the C++ new operator. One method shows the proper use of the __huge keyword for 16-bit compilers.  For more info...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAOT,QANY,QAH4,QBFY,QAPN,QAKM,QDNL,QA6A,QAO3,QAO2,QBXR,QAPF,QBV8,QDMW,QBCT V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Create Two-dimensional Huge Arrays w/ C++ new Operator</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 26, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q133067</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information to this article applies to:

<UL><LI>The Microsoft C/C++ Compiler (CL.EXE) included with:
   - Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51, 1.52
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The code sample in this article shows two ways to dynamically create huge
two-dimensional arrays (bigger than the 64K byte limit) using the C++ new
operator. One method shows the proper use of the __huge keyword for 16-bit
compilers.
<P>
For more information on creating a two-dimensional array (with a size less
than 64K bytes), please see the following article in the Microsoft
Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../VISUALC/Q102391.htm">Q102391</A></B>
   TITLE     : HOWTO: Create Two-Dimensional Arrays with Operator new

</PRE><h2>MORE INFORMATION</h2>
 
<P>
Here are two methods you can use to create a large two-dimensional array.
The first method, for the 16-bit compiler, shows the proper use of the
__huge keyword. The second method needs a special compiler option for a
16-bit Windows-based application.
<P>
<P><h3>First Method Sample Code</h3>
 
<P>
A pointer to an array of the elements to be created is to be declared
First as follows:
<P>
<PRE>   /* For 16-bit compiler  */
   /* No special compile options needed. */

   #include &lt;iostream.h&gt;

   void main(void)
   {
       char (__huge *varchar)[350];            // Declare pointer to an
                                               // array of 350 characters.
       varchar = new __huge char[130000][350]; // Pointer declaration and
                                               // the initialization have
                                               // to be on separate lines.
       /* Application code */

       delete [] varchar;
   }

</PRE><h3>Second Method Sample Code</h3>
 
<P>
<PRE>   /* Use the Huge memory model compiler option with the 16-bit compiler */

   void main(void)
   {
      char (*varchar )[350];
      varchar = new char [130000][350];

      /* Application code */

      delete [] varchar;
   }

</PRE>The second method can be used in Visual C++ versions 2.0 and 2.1 without
using any compiler option.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 8.0 8.0c 8.00 8.00c<BR>
Keywords          : CPPIss CPPLangIss kb16bitonly kbcode<BR>
Version           : WINDOWS:1.0,1.5,1.51,1.52<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 26, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
