

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Prevent Mainframe Window from Being ReSized </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q133256">
<META NAME="KBModify" CONTENT="1997/10/10">
<META NAME="KBCreate" CONTENT="1995/07/26">
<META NAME="Keywords" CONTENT="MfcUI kbcode kbprg kbui">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Adding the WS_THICKFRAME windows style allows a window to be re-sized. By removing this from the Mainframe window's styles, you can prevent this window from being resized. Further, the MINMAXINFO structure stores the maximum and minimum tracking si...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAVI,QA4P,QAY2,QALK,QBVV,QAGQ,QAG4,QBE7,QBE6,QAQ3,QAEF,QBW1,QAJH,QAA8,QDL9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Prevent Mainframe Window from Being ReSized</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q133256</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.50 1.51 1.52 | 2.00 2.10 2.20 4.00 4.10 4.20
<PRE>WINDOWS        | WINDOWS NT
</PRE>kbprg kbcode kbui
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
<P>
<P><PRE>    - Microsoft Visual C++ for Windows, versions 1.5, 1.51, 1.52
    - Microsoft Visual C++, 32-bit Edition, versions 2.0, 2.1, 2.2,
      4.0, 4.1, 4.2
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Adding the WS_THICKFRAME windows style allows a window to be re-sized. By
removing this from the Mainframe window's styles, you can prevent this
window from being resized. Further, the MINMAXINFO structure stores the
maximum and minimum tracking size of a window. The WM_GETMINMAXINFO message
is sent to a window when the size or position of that window is about to
change. An application can over-ride the handler for this message to set a
window's default minimum or maximum tracking size.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
You can prevent the Mainframe window of an AppWizard-generated SDI
application from being resized by following these steps:

<OL><P><LI>Modify the IDR_MAINFRAME menu to add a top-level menu item (F&amp;reeze!)
   with an ID of ID_FREEZE.

<P><LI>Add a public Boolean data member (say, BOOL freezeState) to the
   CMainFrame class to keep track of the current state of the application.
   Initialize freezeState to FALSE in the constructor of the CMainFrame
   class.

<P><LI>Provide a command handler for the 'Freeze' menu item as follows:
<P>
<PRE>   void CMainFrame::OnFreeze()
   {
      char* lpszFreeze = "F&amp;reeze!";
      char* lpszUnFreeze = "&amp;UnFreeze!";
      CMenu* pmenu = GetMenu();
      if (!freezeState)
      {

          freezeState = TRUE;
          pmenu-&gt;ModifyMenu(ID_FREEZE, MF_STRING, ID_FREEZE,
                                                       lpszUnFreeze);
          DWORD style = ::GetWindowLong(this-&gt;m_hWnd, GWL_STYLE);

   // Remove the thick frame style and the Minimize, Maximize buttons
        style &amp;= ~(WS_MAXIMIZEBOX|WS_MINIMIZEBOX|WS_THICKFRAME);
        ::SetWindowLong(this-&gt;m_hWnd, GWL_STYLE, style);
   }
   else
   {
       freezeState = FALSE;
       pmenu-&gt;ModifyMenu(ID_FREEZE, MF_STRING, ID_FREEZE,
                                                      lpszFreeze);
       DWORD style = ::GetWindowLong(this-&gt;m_hWnd, GWL_STYLE);

   // Add the thick frame style and the Minimize, Maximize buttons
      style |= (WS_MAXIMIZEBOX|WS_MINIMIZEBOX|WS_THICKFRAME);
      ::SetWindowLong(this-&gt;m_hWnd, GWL_STYLE, style);
      }
      DrawMenuBar();
   }

</PRE><P><LI>Provide a handler for the WM_GETMINMAXINFO message as follows:
<P>
<PRE>   void CMainFrame::OnGetMinMaxInfo(MINMAXINFO FAR* lpMMI)
   {
      if (freezeState)
      {
          RECT rc;

          GetWindowRect(&amp;rc);
          lpMMI-&gt;ptMaxSize.x = rc.right - rc.left;
          lpMMI-&gt;ptMaxSize.y = rc.bottom - rc.top;
          lpMMI-&gt;ptMaxPosition.x = rc.left;
          lpMMI-&gt;ptMaxPosition.y = rc.top;
          lpMMI-&gt;ptMinTrackSize.x = rc.right - rc.left;
          lpMMI-&gt;ptMinTrackSize.y = rc.bottom - rc.top;
          lpMMI-&gt;ptMaxTrackSize.x = rc.right - rc.left;
          lpMMI-&gt;ptMaxTrackSize.y = rc.bottom - rc.top;
      }

      CFrameWnd::OnGetMinMaxInfo(lpMMI);
   }

</PRE><P><LI>If the mainframe is maximized, disable the Freeze menu option because
   there is no point in making the window non-resizable because a maximized
   window cannot be resized anyway:
<P>
<PRE>   void CMainFrame::OnSize(UINT nType, int cx, int cy)
   {
      CFrameWnd::OnSize(nType, cx, cy);
      CMenu* pmenu = GetMenu();

      if (nType == SIZE_MAXIMIZED)
          pmenu-&gt;EnableMenuItem(ID_FREEZE, MF_DISABLED|MF_GRAYED);
      else
          pmenu-&gt;EnableMenuItem(ID_FREEZE, MF_ENABLED);

      DrawMenuBar();
   }

</PRE></OL>NOTE: The steps to prevent the Mainframe window of an MDI application from
being resized should be identical to the steps listed in this article.
However, because there is more than one menu resource in an MDI
application, you may want to design your application to add the 'Freeze'
menu item to more than one menu resource.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 1.50 2.00 2.10 2.20 2.50 2.51 2.52<BR>
3.00 3.0 3.10 3.1 3.20 3.2 4.00 4.10 4.20<BR>
KBCategory: kbprg kbcode kbui<BR>
KBSubcategory: MfcUI<BR>
Keywords          : MfcUI kbcode kbprg kbui<BR>
Technology        : kbMfc<BR>
Version           : 1.50 1.51 1.52 | 2.00 2.10 2.20<BR>
Platform          : NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
