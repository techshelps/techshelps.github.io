

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SAMPLE: MMFILE - Class for Memory-Mapped Files </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q142377">
<META NAME="KBModify" CONTENT="1997/07/02">
<META NAME="KBCreate" CONTENT="1996/01/10">
<META NAME="Keywords" CONTENT="kbsample MFCFileIO kbcode kbfile kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Memory-mapped files allow a file on disk to be associated with an address space. Once this mapping is done the data in the file can be accessed as if the file was in memory. Memory-mapped files provide a method on Win32 for sharing blocks of memory...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAHE,QAH6,QAH4,QBW7,QAI5,QBWS,QAY2,QAHT,QAGI,QBWG,QABA,QABO,QAJ4,QAC9,QBW6 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>SAMPLE: MMFILE - Class for Memory-Mapped Files</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 2, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q142377</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
2.00 2.10 2.20 4.00
WINDOWS NT
kbprg kbfile kbcode
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
   Microsoft Visual C++, 32-bit Edition, versions 2.x and 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Memory-mapped files allow a file on disk to be associated with an
address space. Once this mapping is done the data in the file can be
accessed as if the file was in memory. Memory-mapped files provide
a method on Win32 for sharing blocks of memory between processes.
<P>
The CMemoryMappedFile class provides a C++ wrapper class for creating
a memory-mapped file and using it. The MMFILE.TXT file included with
code provides more information about how to use the class.
<P>
The following file is available for download from the Microsoft
Software Library:
<P>
<PRE> ~ <A HREF="http://support.microsoft.com/download/support/mslfiles/Mmfile.exe">Mmfile.exe</A> <I>(size: 24541 bytes)</I> 

</PRE>For more information about downloading files from the Microsoft Software
Library, please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../zMiscellaneous/Q119591.htm">Q119591</A></B>
   TITLE     : How to Obtain Microsoft Support Files from Online Services

</PRE><h2>MORE INFORMATION</h2>
 
<P>
CMemoryMappedFile is derived from CMemFile. It wraps the file mapping
APIs to manage the file mapping. A memory-mapped file does not
necessarily have to be associated with a disk file.
<P>
To create a memory-mapped file without an associated disk file, call
CMemoryMappedFile::Open(). The first argument has to be supplied and
it can be any string. This memory-mapped file can be accessed by
other processes by using this string when they open the file. The
other arguments to Open specify the size and protection flags for
this file. The default parameters creates a memory-mapped file with
a size of 4096 bytes and does not map to a disk file.
<P>
Mapping a file on disk into memory involves opening the disk file with the
correct access. Then call CMemoryMappedFile::Open() and pass in the handle
to the file. The other parameters specify protection flags for the mapping,
size of the mapping, and the part of the file to map. The default
parameters try to map the complete file into memory.
<P>
The code below shows the two ways of creating the memory-mapped file.
<P>
<P><h2>REFERENCES</h2>
 
<P>
"Advanced Windows" - Jeffrey Richter
Win32 SDK Docs
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   // Code to open a memory-mapped file
   //
   CMemoryMappedFile SharedFile1;

   // Opens a memory-mapped file without creating a file on disk.
   // This or other processes can access the file by using the
   // name. Default size is 4096 bytes.
   SharedFile1.Open("Test");
   ...
   SharedFile1.Close();

   //Open a file on disk and map it into memory
   CFile file("DiskFile", CFile::modeReadWrite |
              CFile::modeCreate | CFile::shareDenyNone);

   CMemoryMappedFile SharedFile2;
   SharedFile2.Open("MapFile", (HANDLE) file.m_hFile);
   ...
   SharedFile2.Close();
   file.Close();
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbprg kbfile kbcode<BR>
KBSubcategory: MFCFileIO kbsample<BR>
Additional reference words: 4.00 2.00 2.10 2.20 memory mapped<BR>
Keywords            : kbsample MFCFileIO kbcode kbfile kbprg<BR>
Technology          : kbMfc<BR>
Version             : 2.00 2.10 2.20 4.00<BR>
Platform            : NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 2, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
