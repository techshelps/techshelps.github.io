

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FILE: Using VBX Controls in AN _AFXDLL DLL </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q104239">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1993/09/13">
<META NAME="Keywords" CONTENT="kb16bitonly kbfile kbsample MfcVBX">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  There are two techniques for using VBX controls in a dialog box that is created in a dynamic-link library (DLL) built with _AFXDLL (Microsoft Foundation Class Library Extension DLL):   - The application can call the Create() member function of the ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QABO,QAH4,QA7O,QA01,QAOE,QAMN,QAGI,QAB5,QAY5,QAY2,QDNN,QBVV,QABI,QBV8,QAB9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FILE: Using VBX Controls in AN _AFXDLL DLL</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q104239</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
   Microsoft Visual C++ for Windows, versions 1.0, 1.5
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
There are two techniques for using VBX controls in a dialog box that
is created in a dynamic-link library (DLL) built with _AFXDLL
(Microsoft Foundation Class Library Extension DLL):

<UL><LI>The application can call the Create() member function of the
   CVBControl class to create the VBX control. Call Create() in the
   OnInitDialog() function (for a modal dialog box) or in the
   OnCreate() function (for a modeless dialog box).

<LI>Reregister the "VBControl" class in the DLL so that it can be used
   from the DLL. Also, change the resource instance handle during the
   OnInitDialog() function so that resources in the DLL will be used
   while the controls are being created.
<P>
</UL>The AFXVBX sample demonstrates the techniques described below.
<P>
The following file is available for download from the Microsoft Software
Library:
<P>
<PRE> ~ <A HREF="http://support.microsoft.com/download/support/mslfiles/Afxvbx.exe">Afxvbx.exe</A> <I>(size: 24369 bytes)</I> 

</PRE>For more information about downloading files from the Microsoft Software
Library, please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../zMiscellaneous/Q119591.htm">Q119591</A></B>
   TITLE     : How to Obtain Microsoft Support Files from
               Online Services


</PRE><h2>MORE INFORMATION</h2>
 
<P>
A dialog box template that uses VBX controls specifies "VBControl" as
the window class for each of the VBX controls. MFC registers the
"VBControl" class when a programmer calls EnableVBX(). This is
typically done in the InitInstance() function of a program. However,
the class is registered as a local class rather than a global class.
This means that a DLL used by the application does not see the
registered window class and when Windows tries to create a dialog box in a
DLL that uses the "VBControl" class, the dialog box creation will fail.
<P>
To register the "VBControl" class for the DLL, the following code can
be used:
<P>
<PRE>   // Check to see if the class is already registered.
   if(::GetClassInfo(hInstDLL,"VBControl",&amp;wndClass)==0)
    {
     // If not registered, get the class information from the
     // application. This assumes that the application has called
     // EnableVBX to register the VBControl class.
     VERIFY(::GetClassInfo(AfxGetInstanceHandle(),"VBControl",
                           &amp;wndClass));
     wndClass.hInstance = hInstDLL; // Change the instance handle so
                                    // it is that of the DLL and not
                                    // the App.
     VERIFY(::RegisterClass(&amp;wndClass));  // Register the class.
    }

</PRE>Also, if you are using Visual C++, version 1.0 (and NOT 1.50, 1.51, OR
1.52), then you should add the following code to the OnInitDialog()
function for the dialog box that is created in the DLL:
<P>
<PRE>   // PLEASE NOTE: THIS CODE ONLY TO BE USED WITH
   // VISUAL C++ VERSION 1.0 (MFC VERSION 2.0)

   BOOL CVBXDialog::OnInitDialog()
   {
    HINSTANCE hOldInstance = _AfxGetAppData()-&gt;appCurrentInstanceHandle;
    _AfxGetAppData()-&gt;appCurrentInstanceHandle = hInstDLL;
    CDialog::OnInitDialog();
    _AfxGetAppData()-&gt;appCurrentInstanceHandle = hOldInstance;

    // Add your initialization code below.
    return TRUE;
   }
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : kb16bitonly kbfile kbsample MfcVBX<BR>
Technology          : kbmfc<BR>
Version             : 1.0 1.5<BR>
Platform            : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
