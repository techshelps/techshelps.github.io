

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INFO: Using Accelerator Keys with Modal Dialog Box Main Window </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q100770">
<META NAME="KBModify" CONTENT="1997/10/10">
<META NAME="KBCreate" CONTENT="1993/06/28">
<META NAME="Keywords" CONTENT="MfcUI kbinfo">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The TRACER sample application, provided with the Microsoft Foundation Class Library, uses a modal dialog box as its main window. Many applications that use this technique also include a main menu on the dialog box (the TRACER sample does not use a ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA01,QAH4,QAY5,QBFY,QBXS,QA56,QA55,QAGH,QAB9,QBV8,QAW0,QAEV,QAVI,QBWS,QDL9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INFO: Using Accelerator Keys with Modal Dialog Box Main Window</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q100770</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
<P><PRE>    - Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51, 1.52
    - Microsoft Visual C++ 32-bit Edition, versions 2.0, 2.1, 4.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The TRACER sample application, provided with the Microsoft Foundation Class
Library, uses a modal dialog box as its main window. Many applications that
use this technique also include a main menu on the dialog box (the TRACER
sample does not use a menu). Typically, one or more of the menu items has a
keyboard accelerator associated with it. The text below details the steps
required to add a menu and keyboard accelerators to the TRACER sample.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
A typical application, developed for the Windows operating system
using C and the Microsoft Windows Software Development Kit (SDK), that
uses keyboard accelerators calls the TranslateAccelerator() function
in its main message loop. However, when you use a modal dialog box as
the main window, the application does not have a main message loop;
instead, the application uses the dialog manager message loop (built
into Windows) to translate and dispatch messages. Of course, because
this message loop is not designed to process accelerators, it does not
call the TranslateAccelerator() function.
<P>
To process accelerator keys in a modal dialog box, you must override
the CWinApp::ProcessMessageFilter() function. The framework calls
ProcessMessageFilter() before it processes a message.
<P>
Perform the following eighteen steps to modify the TRACER sample to
correctly process accelerator keys.

<OL><P><LI>Load the TRACER project into Visual C++. For Visual C++ for Windows,
   all versions, and Visual C++ 32-bit Edition, versions through 2.2,
   start App Studio. For Visual C++ 32-bit Edition, version 4.0, select
   the Resource View in the Project Workspace window.

<P><LI>Edit the dialog box resource and specify the "thin" border style.
   This step is required for a dialog box that contains a menu.

<P><LI>Create a new menu resource that contains a top level entry "&amp;File"
   and a menu item "&amp;Exit\tCTRL+E".(CTRL-X is usually associated with
   cutting text, so CTRL-E was used instead).

<P><LI>Associate the menu with the dialog box by entering the menu ID in
   the dialog resource properties edit control.

<P><LI>Select the "&amp;Exit\tCTRL+E" menu item and click the ClassWizard
   button on the toolbar.

<P><LI>In the Add Class dialog box, choose Select Class. Then choose
   CPromptDlg and choose OK. Visual C++ 4.0 recognizes that the menu
   resource is not associated with any object and prompts you to associate
   it with the CPromptDlg class.

<P><LI>In the ClassWizard dialog box, select the menu ID associated with the
   Exit menu, ID_FILE_EXIT, and the COMMAND message. Then choose Add
   Function.

<P><LI>The Add Member Function dialog box proposes a name for the
   function which you can edit if desired. Choose OK.

<P><LI>Choose Edit Code. Insert the following line into the function:
<P>
<P><PRE>      PostMessage(WM_COMMAND, IDOK, 0L);
</PRE><P>
   This gives the same effect as clicking the OK button when the user
   chooses Exit from the File menu. Clicking the OK button closes
   TRACER.

<P><LI>Create a new accelerator resource and associate the CTRL+E key
   combination with ID_FILE_EXIT.

<P><LI>Save the resources and close App Studio.

<P><LI>Edit the TRACER.CPP file to declare the following variables after
   the #include statements:
<P>
<PRE>      HWND    ghDlg;          // Handle to main dialog box
      HACCEL  ghAccelTable;   // Handle to accelerator table

</PRE><P><LI>In ClassWizard, choose the CPromptDlg and the WM_INITDIALOG
   message and add a function. With Visual C++ 4.0, choose the CPromptDlg
   class, the CPromptDlg Object ID, the WM_INITDIALOG message, and press
   Add Function. Note that now there are two OnInitDialog() functions,
   one for Macintosh, surrounded by #ifdef _MAC/#endif directives, and the
   one just added.

<P><LI>Edit the function added above to include the following line of code:
<P>
<P><PRE>      ghDlg = m_hWnd;
</PRE><P>
   In Visual C++ 4.0, be sure to edit the newly added function, not the
   existing, Machintosh-specific one.
<P>
<P><PRE>      ghDlg = m_hWnd;
</PRE>
<P><LI>Edit CTraceApp::InitInstance() in the TRACER.CPP file to add the
   following line immediately after the call to SetDialogBkColor() or,
   as in Visual C++ 4.0, after the declaration of dlg, the CPromptDlg
   object:
<P>
<P><PRE>     ghAccelTable = LoadAccelerators(AfxGetInstanceHandle(),
<PRE></PRE>        MAKEINTRESOURCE(IDR_ACCELERATOR1));

</PRE><P><LI>Edit the CTracerApp class definition to add the following line to
   the public section:
<P>
<P><PRE>     virtual BOOL ProcessMessageFilter(int code, LPMSG lpMsg);
</PRE>
<P><LI>Add the following function after the InitInstance() function:
<P>
<P><PRE>       BOOL CTracerApp::ProcessMessageFilter(int code, LPMSG lpMsg)
       {
<PRE></PRE>          if (code &lt; 0)
             CWinApp::ProcessMessageFilter(code, lpMsg);

          if (ghDlg &amp;&amp; ghAccelTable)
             {
             if (::TranslateAccelerator(ghDlg, ghAccelTable, lpMsg))
                return(TRUE);
             }

         return CWinApp::ProcessMessageFilter(code, lpMsg);
      }

</PRE><P><LI>Compile and run TRACER. It should have a menu. When you choose
<P><PRE>    Exit from the File menu or press CTRL+E the application closes, as
    expected.
</OL></PRE> 
<PRE>Keywords          : MfcUI kbinfo
Technology        : kbmfc
Version           : 1.0 1.5 1.51 1.52 2.0 2.1 4.0
Platform          : NT WINDOWS</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
