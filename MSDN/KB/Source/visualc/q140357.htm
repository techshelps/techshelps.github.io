

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: No Warning Using Extern "C" in a Namespace </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q140357">
<META NAME="KBModify" CONTENT="1997/07/14">
<META NAME="KBCreate" CONTENT="1995/11/29">
<META NAME="Keywords" CONTENT="CPPIss kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Unexpected behavior can occur when you use extern  C  in a namespace.  CAUSE =====  Among other things, extern  C  directs the compiler not to decorate the names of symbols. But a symbol name is not recognized as part of a namespace outside of a tr...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBFY,QAB4,QAY5,QBV8,QAUJ,QAB9,QAOT,QAKP,QBVV,QALZ,QAX6,QAWM,QARM,QAMA,QALQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: No Warning Using Extern "C" in a Namespace</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 14, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q140357</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft C/C++ Compiler (CL.EXE) included with:
   - Microsoft Visual C++, 32-bit Edition, versions 4.0, 4.1, 5.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Unexpected behavior can occur when you use extern "C" in a namespace.
<P>
<P><h2>CAUSE</h2>
 
<P>
Among other things, extern "C" directs the compiler not to decorate the
names of symbols. But a symbol name is not recognized as part of a
namespace outside of a translation unit unless the namespace name is part
of the decorated name for the symbol.
<P>
The compiler should generate a warning when using extern "C" in a
namespace, but it does not.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Don't use extern "C" linkage in a namespace. If you have to use extern "C"
linkage, use it outside of a namespace.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. We are researching this problem and will
post new information here in the Microsoft Knowledge Base as it becomes
available.
<P>
MORE INFORMATION
 
<P>
The following sample programs (Test1.cpp and Test2.cpp) demonstrate two
cases of this.
<P>
<P><h3>Sample Code to Reproduce Problem</h3>
 
<P>
<PRE>   //test1.cpp
   /* Compile options needed: -W4
   */
   namespace A{
      extern "C" void printf(int);
   }

   void main(){
      A::printf(1); // actually resolves to CRT printf
                    // which causes an access violation
   }
   //end of test1.cpp

   //test2.cpp

   /* Compile options needed: -W4
   */

   #include &lt;iostream.h&gt;

   namespace A{
      extern "C" void  function(void){cout &lt;&lt;"namespace A" &lt;&lt;endl;};

   }

   namespace B{
      extern "C" void function(void){cout &lt;&lt;"namespace B" &lt;&lt;endl;};

   }

   void main(){
       A::function();
      B::function();

   }
   // end of test2.cpp

</PRE>The compiler names both the functions as just "_function" resulting in
the following link errors:
<P>
<PRE>   error LNK2005: _function already defined in test2.obj.
   LNK1169: one or more multiply defined symbols found.
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 10.00 10.10 LNK2005 LNK1169<BR>
Keywords            : CPPIss kbprg<BR>
Version             : 4.0 4.1 5.0<BR>
Platform            : NT WINDOWS<BR>
Issue type          : kbbug<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 14, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
