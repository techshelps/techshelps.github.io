

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Change Window Attributes in an MFC Application </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q99847 ">
<META NAME="KBModify" CONTENT="1997/05/28">
<META NAME="KBCreate" CONTENT="1993/06/09">
<META NAME="Keywords" CONTENT="MfcUI kbfasttip kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  To change the default window attributes used by a framework application created in AppWizard, override the window's PreCreateWindow() virtual member function. PreCreateWindow() allows an application to access the creation process normally processed...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAJH,QABA,QABO,QAGQ,QBFY,QA56,QA55,QAY5,QAUD,QAGI,QBV8,QBHQ,QAX6,QAOE,QALQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Change Window Attributes in an MFC Application</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  May 28, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q99847 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
<P><PRE>    - Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51, 1.52
    - Microsoft Visual C++, 32-bit Edition, versions 2.0, 2.1, 4.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
To change the default window attributes used by a framework application
created in AppWizard, override the window's PreCreateWindow() virtual
member function. PreCreateWindow() allows an application to access the
creation process normally processed internally by the CDocTemplate class.
The framework calls PreCreateWindow() just prior to creating the window. By
modifying the CREATESTRUCT structure parameter to PreCreateWindow(), your
application can change the attributes used to create the window.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The CTRLBARS sample application, provided with the Microsoft Foundation
Class Library, demonstrates this technique to change window attributes.
Note that depending on what your application changes in PreCreateWindow(),
it may be necessary to call the base class implementation.
<P>
In a single document interface (SDI) application, the default window style
in the framework is a combination of the WS_OVERLAPPEDWINDOW and
FWS_ADDTOTITLE styles. FWS_ADDTOTITLE is a framework-specific style that
instructs the framework to add the document title to the window's caption.
To change the window attributes in an SDI application, override the
PreCreateWindow() function in your class derived form CFrameWnd. For
example:
<P>
<PRE>   BOOL CMainFrame::PreCreateWindow(CREATESTRUCT&amp; cs)
   {
      // Create a window without min/max buttons or sizable border
      cs.style = WS_OVERLAPPED | WS_SYSMENU | WS_BORDER;

      // Size the window to 1/3 screen size and center it
      cs.cy = ::GetSystemMetrics(SM_CYSCREEN) / 3;
      cs.cx = ::GetSystemMetrics(SM_CXSCREEN) / 3;
      cs.y = ((cs.cy * 3) - cs.cy) / 2;
      cs.x = ((cs.cx * 3) - cs.cx) / 2;

      return CFrameWnd::PreCreateWindow(cs);
   }

</PRE>A little more work is required to change the window style of a child window
in a multiple document interface (MDI) application. By default, an MDI
application generated in AppWizard uses the default CMDIChildWnd class
defined in the Microsoft Foundation Class Library. To change the window
style of an MDI child window, your application must derive a new class from
CMDIChildWnd and replace all references to CMDIChildWnd in your project
with references to the new class. Most likely, the only reference to
CMDIChildWnd in the application is located in your application's
InitInstance() member function.
<P>
The default window style used in an MDI application is a combination of the
WS_CHILD, WS_OVERLAPPEDWINDOW, and FWS_ADDTOTITLE styles. To change the
window attributes of an MDI application's child windows, override the
PreCreateWindow() function in your class derived from CMDIChildWnd. For
example:
<P>
<PRE>   BOOL CMyChildWnd::PreCreateWindow(CREATESTRUCT&amp; cs)
   {
      // Create a child window without the maximize button
      cs.style &amp;= ~WS_MAXIMIZEBOX;
      return CMDIChildWnd::PreCreateWindow(cs);
   }

</PRE>For more information about the PreCreateWindow() function, please refer to
the Microsoft Visual C++ "Class Library Reference, Volume 1," or to the
Visual C++ online help files and Visual C++ 4.0 Books Online.
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : MfcUI kbfasttip kbhowto<BR>
Technology          : kbmfc<BR>
Version             : 1.0 1.51.51 1.52 2.0 2.1 4.0<BR>
Platform            : NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  May 28, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
