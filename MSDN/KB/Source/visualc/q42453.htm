

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INFO: Clarification of fcvt() Function </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q42453 ">
<META NAME="KBModify" CONTENT="1997/09/02">
<META NAME="KBCreate" CONTENT="1989/03/14">
<META NAME="Keywords" CONTENT="CRTIss kbfasttip">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  This article is meant to clarify the description of the fcvt() function in the  Microsoft C Optimizing Compiler: Run-Time Library Reference,  version 5.1 manual, pages 251-252.  The fcvt() function converts a floating-point number to a null- termin...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAKC,QAG8,QAUD,QATX,QBC6,QBFY,QAEF,QBC9,QBC8,QANO,QAH7,QAH6,QAD7,QALW,QAY5 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INFO: Clarification of fcvt() Function</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 2, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q42453 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>The C Run-time (CRT) included with:
   - Microsoft C for MS-DOS, versions 5.1, 6.0, 6.0a, 6.0ax
   - Microsoft C for OS/2, versions 5.1, 6.0, 6.0a
   - Microsoft C/C++ for MS-DOS, version 7.0
   - Microsoft Visual C++ for Windows, versions 1.0, 1.5
   - Microsoft Visual C++ 32-bit Edition, versions 1.0, 2.0, 2.1, 2.2, 4.0,
<P><PRE>     4.1, 5.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article is meant to clarify the description of the fcvt() function in
the "Microsoft C Optimizing Compiler: Run-Time Library Reference," version
5.1 manual, pages 251-252.
<P>
The fcvt() function converts a floating-point number to a null- terminated
character string. The number of digits converted depends on the second
parameter passed. This second parameter is called "count" for the remainder
of this article.
<P>
The function is designed to return all the digits to the left of the
decimal point, and then count digits to the right. Once the string is
converted, all leading zeros are removed unless the number passed was zero
(see example 4 below). The string will be terminated with the "/0"
character. The decimal point is not included in the string, and its
position can be obtained from the third parameter (see the documentation).
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Based on this description, the following examples apply. In all cases,
count = 8. The examples are as follows:

<OL><P><LI>Number passed: 3.667      String returned: "366700000\0"
<P>
   Nine digits are returned; one for the number to the left of the
   decimal point, eight more because of the count parameter.

<P><LI>Number passed: 3.37E-08   String returned: "3\0"
<P>
   In this case, only "3" is returned because after the number is
   converted, all the leading zeros are removed.

<P><LI>Number passed: 1.023E-12  String returned: "\0"
<P>
   In this case, a NULL string is returned because only zeros are left
   after the conversion, and these are all removed from the resulting
   string. If error checking were being performed, this would indicate
   a conversion underflow.

<P><LI>Number passed: 0          String returned: "00000000\0"
<P>
   This is the only "special" case. Eight zeros are returned so that
   error checking can be performed easily.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 8.00 8.00c 9.00 9.10 10.00 10.10<BR>
Keywords          : CRTIss kbfasttip<BR>
Version           : MS-DOS:6.00ax,7.0; OS/2:6.0,6.00a; WINDOWS:1.0,1.5;  WINDOWS NT:1.0,2.0,2.1,2.2,4.0,4.1,5.0<BR>
Platform          : MS-DOS NT OS/2 WINDOWS<BR>
Issue type        : kbinfo<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 2, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
