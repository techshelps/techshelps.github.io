

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Customize the Common Print Dialog Box </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q132909">
<META NAME="KBModify" CONTENT="1997/07/31">
<META NAME="KBCreate" CONTENT="1995/07/19">
<META NAME="Keywords" CONTENT="MfcPrinting kbprg kbprint kbprint">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  This article explains how the standard print dialog box can be modified and used in a typical MFC application. Customizing the print dialog involves modifying Window's default common print dialog template. When customizing the common print dialog, ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA01,QAOX,QAIM,QBFY,QA36,QAY2,QABO,QA9N,QAEF,QAB5,QBDM,QA56,QA55,QAOE,QAHE V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Customize the Common Print Dialog Box</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 31, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q132909</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
   - Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51, 1.52
   - Microsoft Visual C++, 32-bit Edition, versions 2.0, 2.1, 2.2,
<P><PRE>     4.0, 4.1, 4.2, 5.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article explains how the standard print dialog box can be modified and
used in a typical MFC application. Customizing the print dialog involves
modifying Window's default common print dialog template. When customizing
the common print dialog, you can add new controls and/or remove existing
controls.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
In some situations, you may find it necessary to customize the standard
print dialog box. This involves modifying the existing print dialog
template and modifying the views implementation of printing to use
this customized template.
<P>
<P><h3>Step-by-Step Procedure</h3>
 
<P>
Use this method to implement a customized print dialog:

<OL><P><LI>Copy the PRINTDLGORD dialog template from COMMDLG.RC to the
   application's .RC file. (In Visual C++ 4.x and 5.0, this dialog template
   resides in the file INCLUDE\PRNSETUP.DLG) To do this:
<P>
   a. Open MSVC\MFC\SAMPLES\APSTUDIO\COMMDLG.RC and your
<P><PRE>      application's resource file by using AppStudio (the Resource Editor).
      This file is in \msdev\samples\mfc\general\clipart under 32-bit
      Visual C++.
</PRE><P>
<P><PRE>      If you are using Visual C++ 4.x or 5.0, add the line
      #include "windows.h" to the top of the file the file
      INCLUDE\PRNSETUP.DLG. Save and close this file. Reopen it as
      "Resources". (See the "Open As" combo box in the File Open dialog
      box.)
</PRE><P>
   b. In the resource browser window of the "from" file, select the
<P><PRE>      PRINTDLGORD (id 1538) dialog resource.
</PRE><P>
   c. As you hold down the CTRL key, drag the resource to the resource
<P><PRE>      browser window of the "to" file.
</PRE><P>
<P><PRE>      NOTE: Dragging the resource without holding the CTRL key moves
      the resource rather than copies it.
</PRE>
<P><LI>Make the necessary changes to the copied dialog template.
<P>
   NOTE: None of the controls present in the original dialog template
   should be deleted. Deleting the controls will cause a problems in the
   DoDataExchange function of CPrintDialog. Instead, the unwanted
   controls should be disabled and/or hidden in an overridden
   OnInitDialog member function of your CPrintDialog-derived class.

<P><LI>Use ClassWizard to add a C++ class (say, CMyPrintDialog) for
   this dialog template. Derive this new class from CDialog with
   PRINTDLGORD as the dialog ID. (NOTE: In Visual C++ 4.x and 5.0 this
   class can be derived directly from CPrintDialog.)

<P><LI>Change all references from CDialog to CPrintDialog in both the
   header and implementation file of the newly created class. (This
   step is not necessary if you have derived your class directly from
   CPrintDialog.)
<P>

<P><LI>Because the constructor of CPrintDialog differs from CDialog, modify
   the constructor of CMyPrintDialog using this code:
<P>
   (NOTE: this step is not necessary if you have derived your class
   directly from CPrintDialog.)
<P>
<P><PRE>      // Header file of CMyPrintDialog
      class CMyPrintDialog : public CPrintDialog
      {
      // Construction
      public:
</PRE><P>
<P><PRE>      // The arguments to the following constructor closely match
      // CPrintDialog. Note the difference in the second argument.
      CMyPrintDialog(BOOL bPrintSetupOnly,
<PRE></PRE>                     // TRUE for Print Setup, FALSE for Print Dialog
                       DWORD dwFlags = PD_ALLPAGES | PD_USEDEVMODECOPIES |
                                    PD_HIDEPRINTTOFILE,
                     // Combination of flags. Refer to the Windows SDK
                     // documentation for PRINTDLG structure for a
                     // description of all the flags that can be used.
                        CWnd* pParentWnd = NULL);

      // Rest of the class declaration
      ...

      DECLARE_MESSAGE_MAP()
      };

      // Implementation file of CMyPrintDialog
      CMyPrintDialog::CMyPrintDialog(BOOL bPrintSetupOnly,
        DWORD dwFlags /* = PD_ALLPAGES | PD_USEDEVMODECOPIES |
                      PD_HIDEPRINTTOFILE */,
        CWnd* pParentWnd /* = NULL */)
        : CPrintDialog(bPrintSetupOnly, dwFlags, pParentWnd)
      {
        //{{AFX_DATA_INIT(CMyPrintDialog)
        // NOTE: the ClassWizard will add member initialization here
        //}}AFX_DATA_INIT
      }

</PRE><P><LI>Modify the CView-derived class (say, CMyView) to use the customized
   print dialog by using this code:
<P>
<P><PRE>      //  Implementation file of the view (say, in myview.cpp)
      ...
      #include "myprintd.h"  // Include the CMyPrintDialog header file
      ...
</PRE><P>
<P><PRE>      // Override OnPreparePrinting of the CView-derived class as below:
      BOOL CMyView::OnPreparePrinting(CPrintInfo* pInfo)
      {
<PRE></PRE>         // Delete the CPrintDialog object created in the CPrintInfo
         // constructor, and substitute with customized print dialog.
         delete pInfo-&gt;m_pPD;

         // Construct and substitute with customized print dialog.
         pInfo-&gt;m_pPD = new CMyPrintDialog(FALSE);

         // Set the page range.
         pInfo-&gt;m_pPD-&gt;m_pd.nMinPage = 1;      // one based page numbers
         pInfo-&gt;m_pPD-&gt;m_pd.nMaxPage = 0xffff; // how many pages is unknown

         // Change the PRINTDLG struct so that the custom print dialog will
         // be used.
         pInfo-&gt;m_pPD-&gt;m_pd.hInstance = AfxGetInstanceHandle();
         pInfo-&gt;m_pPD-&gt;m_pd.lpPrintTemplateName =
                                              MAKEINTRESOURCE(PRINTDLGORD);

         // Set the Flags of the PRINTDLG structure as shown, else the
         // changes will have no effect
         pInfo-&gt;m_pPD-&gt;m_pd.Flags |= PD_ENABLEPRINTTEMPLATE;

         // For details about these flags, refer to the SDK documentation
         // on the PRINTDLG structure.

         return DoPreparePrinting(pInfo);
      }

</PRE></OL><h2>REFERENCES</h2>
 
<P>
For more information, please see the PRINTDLG structure in Windows SDK
documentation and OnPreparePrinting and CPrintDialog in Foundation Class
documentation.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: CFileDialog<BR>
Keywords          : MfcPrinting kbprg kbprint kbprint<BR>
Technology        : kbMfc<BR>
Version           : 1.0 1.5 2.0 4.0 4.1 4.2<BR>
Platform          : NT WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 31, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
