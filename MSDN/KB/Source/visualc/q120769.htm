

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Visual C++ Version 2.0 README.WRI File - Part 1 Setup </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q120769">
<META NAME="KBModify" CONTENT="1997/06/27">
<META NAME="KBCreate" CONTENT="1994/09/19">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The following is based on the Visual C++ version 2.0 README.WRI file:  Environment Variable Settings  The CD Install option does not initialize the environment variables PATH, LIB, and INCLUDE to point to the CD drive. You must set these directorie...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAA1,QDI2,QBFY,QA56,QA55,QBWP,QAYL,QAFI,QDIM,QBQU,QDIZ,QBVV,QAX1,QAGB,QAB4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Visual C++ Version 2.0 README.WRI File - Part 1 Setup</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 27, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q120769</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
2.00
WINDOWS NT
kbreadme kbsetup
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Visual C++, 32-bit Edition, version 2.0
   on the following platform: x86
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The following is based on the Visual C++ version 2.0 README.WRI file:
<P>
<P><h3>Environment Variable Settings</h3>
 
<P>
The CD Install option does not initialize the environment variables PATH,
LIB, and INCLUDE to point to the CD drive. You must set these directories
as appropriate after you run Setup.
<P>
If you reinstall the Visual C++ version 2.0 development environment to a
different path than the original installation, the environment variables
are not reset and the Platforms subkey in the Registry points to the
original installation.
<P>
If an INIT variable is specified in AUTOEXEC.BAT, it will be placed in the
system environment but not in the registry, so it will not be accessible to
Setup and to tools using the variable. The INIT variable should be
specified using the System dialog from the Control Panel applet.
<P>
<P><h3>Installing for Remote Debugging</h3>
 
<P>
When you install the Visual C++ version 2.0 development environment for
Win32s, Setup installs the Visual C++ Debug Monitor icon in your Visual C++
program group. However, when you install the development environment for
Windows 95 or Windows NT, Setup copies the appropriate remote debugging
files to the BIN subdirectory of your Visual C++ installation but does not
install this icon to your program group. You can add this icon to your
program group.
<P>
<P><h3>Installing Over Previous Versions of Visual C++</h3>
 
<P>
If you install Microsoft Visual C++ version 2.0 into a directory that
contains Microsoft Visual C++ version 1.5, version 2.0 will overwrite
version 1.5 without warning.
<P>
If you have installed a pre-release version of Visual C++ version 2.0, you
should delete the previous installation and the registry associated with it
before installing the retail version.
<P>
WARNING: take care when deleting keys from your registry. It is possible to
damage your system configuration if the wrong keys are deleted.
<P>
To delete your registry for previous installations of Visual C++
version 2.0:

<OL><P><LI>Run REGEDT32.EXE, which is in your SYSTEM32 directory.

<P><LI>Make sure the HKEY_CURRENT_USER on the Local Machine window is active.

<P><LI>Open the Software folder by double-clicking the folder icon.

<P><LI>Open the Microsoft folder by double-clicking the folder icon.

<P><LI>Highlight the Visual C++ version 2.0 folder by clicking it once.

<P><LI>From the Edit menu, choose Delete to delete this registration key.

<P><LI>Before you choose Yes on the Warning dialog box, verify that the Visual
   C++ version 2.0 registration key is selected. It should have an outline
   box around it.

<P><LI>Exit the Registry Editor by choosing Exit from the Registry menu.
<P>
</OL><h3>Installing Without the Microsoft Foundation Class Library</h3>
 
<P>
If you install Visual C++ version 2.0 without the Microsoft Foundation
Class (MFC) Library and then open an MFC project, a dialog box appears
warning that you did not install MFC. This message may be incorrect if you
installed MFC or built modified MFC libraries at another time. To prevent
this dialog box from appearing, you can change the MFCInstalled registry
subkey under HKEY_CURRENT_USER.Software.Microsoft.Visual C++ 2.0.General
to:
<P>
MFCInstalled : REG_DWORD : 0x1
<P>
<P><h3>NT System Symbols Setup</h3>
 
<P>
When debugging code in a callback function, it is helpful to have the
symbol (.DBG) files for corresponding system DLLs on the call stack. If
these symbol files are not installed, the Visual C++ debugger will not
always be able to determine the context in which your functions are called.
Without this information, the debugger shows a truncated call stack.The
system symbol files are also required for OLE RPC debugging.
<P>
You can install the symbol files using the NT System Symbols Setup
application. An icon for this application is installed in the Visual C++
program group. The NT System Symbols Setup application installs symbol
files for the most commonly used system DLLs. If your application calls a
less commonly used system DLL, you may need to install the symbol file
manually from your Windows NT distribution disk. The symbol files are in
the SUPPORT\DEBUG\I386\SYMBOLS\DLL directory. They should be installed into
the %SystemRoot%{WINDOWS}\SYMBOLS\DLL directory, or a directory pointed to
by the %_NT_SYMBOL_PATH%\SYMBOLS\DLL environment variable.
<P>
If you update your Windows NT system files, you will also have to reinstall
the symbol files containing updated information.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 2.00<BR>
KBCategory: kbreadme kbsetup<BR>
KBSubcategory: vc20setup<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 27, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
