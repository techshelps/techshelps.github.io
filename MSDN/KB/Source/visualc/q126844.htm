

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: C1001 ICE If Compiling MFC Applications with /vmg Option </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q126844">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1995/03/05">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="   Compiling an MFC application with the /vmg compiler option may result in the following warning and fatal compiler error:          warning C4759: segment lost in conversion          fatal error C1001: INTERNAL COMPILER ERROR                     ( c...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAOT,QBV8,QAB4,QBBI,QAKJ,QAO3,QAO2,QAAP,QABA,QBWC,QBFY,QAY5,QBQU,QBLI,QAJH V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: C1001 ICE If Compiling MFC Applications with /vmg Option</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q126844</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00 1.50 1.51 1.52
WINDOWS
kbtool kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC), included with:
<P><PRE>    - Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51 and
      1.52
</UL></PRE> 
<P>
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Compiling an MFC application with the /vmg compiler option may result in
the following warning and fatal compiler error:
<P>
<PRE>        warning C4759: segment lost in conversion

        fatal error C1001: INTERNAL COMPILER ERROR
                    ( compiler file 'gencode.c', line 408 )


</PRE><h2>CAUSE</h2>
 
<P>
Each entry in an MFC message map specifies a member function to be called
in response to a certain message. To accomplish this, the message map
facility uses pointers to member functions.
<P>
Depending on the inheritance model used by each class, the compiler
represents pointers to member functions differently. You can specify the
way in which the compiler will represent pointers to member functions with
the /vmb (Best-case always) and the /vmg (General-purpose always) C++
compiler options.
<P>
If you specify the /vmg (General-purpose always) option, and specify any
inheritance model other than /vms (for single inheritance), the C1001 error
will result.
<P>
<P><h2>RESOLUTION</h2>
 

<OL><P><LI>Use the /vmb (Best-case always) C++ compiler option, which is the
   default option, for MFC applications. If you must use the /vmg
   (General-purpose always) option, use it with /vms (single
   inheritance) for MFC applications.
<P>
   - or -

<P><LI>Use #pragma pointers_to_members( pointer-declaration,
<PRE>                                    [most-general-representation] )

   where pointer-declaration could be one of the following:

    - full_generality
    - best_case

   and the [most-general-representation] could be one of:

    - single_inheritance
    - multiple_inheritance
    - virtual_inheritance

   The equivalent compiler option for full_generality is /vmg and
   option for best_case is /vmb. The equivalent of the
   single_inheritance is /vms, the multiple_inheritance is /vmm, and
   the virtual_inheritance is /vmvand, which is the default option used
   by the compiler for both full_generality and best_case.


</PRE></OL><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products
listed at the beginning of this article. We are researching this bug
and will post new information here in the Microsoft Knowledge Base as
it becomes available.
<P>
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
If you specify the /vmb (Best-case always) C++ compiler option, which
is the default, the compiler uses the smallest possible representation
of each pointer, and will generate the smallest amount of code required
to operate on the pointer for each kind of inheritance.
<P>
If you specify the /vmg (General-purpose always) option, you must also
specify an option to indicate the inheritance model of the classes. This
can be one of three options: /vms (single inheritance), /vmm (multiple
inheritance) or /vmv (virtual inheritance or point to any class). The
default general-purpose representation is /vmv. In other words, specifying
/vmg by itself indicates to the compiler that you are using the /vmv
representation. This will result in the C1001 error.
<P>
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 8.00 8.00c 1.00 1.50 1.51 1.52<BR>
KBCategory: kbtool kbbuglist<BR>
KBSubCategory: CPPIss<BR>
Keywords            : kb16bitonly<BR>
Technology          : kbMfc<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
