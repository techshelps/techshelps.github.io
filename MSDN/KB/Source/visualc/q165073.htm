

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INFO: Making Transparent Controls with MFC </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q165073">
<META NAME="KBModify" CONTENT="1998/02/17">
<META NAME="KBCreate" CONTENT="1997/03/12">
<META NAME="Keywords" CONTENT="MfcOLE kbgraphic kbtool kbinf">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The OLE Control '96 Specification defines transparent controls and Visual C++ 4.2 will create controls that conform to this new specification. However, most available containers, including Internet Explorer 3.0, do not support this feature. This ar...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAOE,QAB5,QA7O,QAMN,QAYL,QADR,QAHV,QBVV,QAUD,QBCF,QBFY,QBE7,QBE6,QA56,QA55 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INFO: Making Transparent Controls with MFC</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 17, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q165073</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual C++, 32-bit Editions, versions 4.2, 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The OLE Control '96 Specification defines transparent controls and Visual
C++ 4.2 will create controls that conform to this new specification.
However, most available containers, including Internet Explorer 3.0, do not
support this feature. This article demonstrates the process required to
convert a standard Visual C++ ControlWizard control to be transparent in
Internet Explorer 3.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Create a Transparent OLE Control</h3>
 

<OL><P><LI>Create a default control using the ControlWizard.

<P><LI>Override PreCreateWindow for the control as shown below. You will need
   to add the prototype and handler manually because ClassWizard does not
   provide an override for PreCreateWindow in the case of controls:
<P>
<P><PRE>      BOOL CTransCtrl::PreCreateWindow(CREATESTRUCT&amp; cs)
      {
<PRE></PRE>         // Add the Transparent style to the control
         cs.dwExStyle |= WS_EX_TRANSPARENT;

         return COleControl::PreCreateWindow(cs);
      }

</PRE><P><LI>To get the control to show what is behind it, use the “trick” shown
   below, which sends a WM_ERASEBKGND message to the parent with the
   handle to the control's device context. Use ClassWizard to add a
   handler for WM_ERASEBKGND and add the following code:
<P>
<P><PRE>      BOOL CTransCtrl::OnEraseBkgnd(CDC* pDC)
      {
<PRE></PRE>         // This is needed for transparency and the correct drawing...
         CWnd*  pWndParent;       // handle of our parent window
         POINT  pt;

         pWndParent = GetParent();
         pt.x       = 0;
         pt.y       = 0;

         MapWindowPoints(pWndParent, &amp;pt, 1);
         OffsetWindowOrgEx(pDC-&gt;m_hDC, pt.x, pt.y, &amp;pt);
         ::SendMessage(pWndParent-&gt;m_hWnd, WM_ERASEBKGND,
                      (WPARAM)pDC-&gt;m_hDC, 0);
         SetWindowOrgEx(pDC-&gt;m_hDC, pt.x, pt.y, NULL);

         return 1;
      }

</PRE><P><LI>Modify the OnDraw() function to display the desired image for the
   control. The example below draws an ellipse. If you do not select
   the NULL_BRUSH before drawing, the inside of the ellipse is filled in
   using the current brush.
<P>
   NOTE: If you do not select your own pens and brushes, the resulting
   behavior is unpredictable and depends on the GDI objects passed by
   the control container.
<P>
<P><PRE>      void CTransCtrl::OnDraw(CDC* pdc, const CRect&amp; rcBounds, const
<PRE></PRE>                              CRect&amp; rcInvalid)
      {
         CPen* oldpen;  CBrush* oldbrush;

         oldpen = (CPen*) pdc-&gt;SelectStockObject(BLACK_PEN);
         oldbrush = (CBrush*) pdc-&gt;SelectStockObject(NULL_BRUSH);

         pdc-&gt;Ellipse(rcBounds);

         pdc-&gt;SelectObject(oldpen);
         pdc-&gt;SelectObject(oldbrush);
      }

</PRE><P><LI>Override the OnSetClientSite() function to set the m_bAutoClip member
   variable to TRUE. The COleControl::m_bAutoClip variable is an
   undocumented variable that is used to maintain a window that clips the
   contents of the control to its design-time size:
<P>
<P><PRE>      void CTransCtrl::OnSetClientSite()
      {
<PRE></PRE>         m_bAutoClip = TRUE;

         COleControl::OnSetClientSite();
      }
</PRE></OL> 
<PRE>Keywords          : MfcOLE kbgraphic kbtool kbinf
Technology        : kbole kbMfc
Version           : Winnet:4.2,5.0
Platform          : NT WINDOWS</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 17, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
