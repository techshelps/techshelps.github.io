

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Function Name Without "()" Produces No Code </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q50234 ">
<META NAME="KBModify" CONTENT="1997/07/31">
<META NAME="KBCreate" CONTENT="1989/10/26">
<META NAME="Keywords" CONTENT="CLIss kbfasttip kbtool">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT=" The information in this article is included in the documentation starting with Visual C++ 5.0. Look there for future revisions.   When a function name declared in your program is used without parentheses, the compiler does not produce any code. The ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB4,QBFY,QAH4,QAY5,QA56,QA55,QAGI,QAOT,QAB9,QBWP,QBV8,QBVV,QAEF,QDL9,QBWQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Using Function Name Without "()" Produces No Code</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 31, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q50234 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
6.00 6.00a 6.00ax 7.00 | 6.00 6.00a | 1.00 1.50 | 1.00 2.00 4.00
<PRE>MS-DOS                 | OS/2       | WINDOWS   | WINDOWS NT
</PRE>kbtool kbfasttip
<P>
<P>
 
The information in this article applies to:
<P>
<PRE>   The Microsoft C/C++ Compiler (CL.EXE) included with:
    - Microsoft C for MS-DOS, versions 6.0, 6.0a, and 6.0ax
    - Microsoft C for OS/2, versions 6.0 and 6.0a
    - Microsoft C/C++ for MS-DOS, versions 7.0
    - Microsoft Visual C++ for Windows, versions 1.0 and 1.5
    - Microsoft Visual C++ 32-bit Edition, versions 1.0, 2.0, and 4.0
</PRE> 
<P>
The information in this article is included in the documentation starting
with Visual C++ 5.0. Look there for future revisions.
<P>
<P><h2>SUMMARY</h2>
 
<P>
When a function name declared in your program is used without
parentheses, the compiler does not produce any code. The compiler may
not produce error messages or warnings as long as the function has
been prototyped. This occurs regardless of whether or not the function
takes parameters because the compiler calculates the function address;
however, because the function call operator "()" is not present, no
call is made. This result is similar to the following:
<P>
<PRE>   int a;

   a;      /* no code generated here either */

</PRE>In Microsoft C versions 6.0, 6.0a, and 6.0ax, the following warning is
generated on warning level 4:
<P>
<PRE>   warning C4205: statement has no effect

</PRE>In Microsoft C/C++ version 7.0, 16-bit Visual C++ version 1.XX, and 32-bit
Visual C++ version 1.0,  using warning level 4 generates the following:
<P>
<PRE>   warning C4705: statement has no effect with /W4

</PRE>The warning is only generated when compiling with the optimizing compiler
and does not occur if the fast (/f) compiler is used.
<P>
In Microsoft 32-bit Visual C++ versions 2.0 and above, even using warning
level 4 generates no diagnostic output.  No warning issued, no code is
produced.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The sample code below compiles and links correctly without errors but
produces no code in reference to myfunc(). For this to work correctly,
add the function call operator "()".
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>/* Compiler Options needed: /W4     (C6.0, C6.0a, C6.0ax and 8.00 for
                                     Visual C++ for Windows NT)
                            /f- /W4 (7.0, and 8.0 for Visual C++
                                     for Windows)
*/

void funcname(int a, int b);
void main(void)
</PRE>{
<PRE>     funcname;   /* Using myfunc without function call operator () */
}
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbtool kbfasttip<BR>
KBSubcategory: CLIss<BR>
Additional reference words: 1.00 1.50 2.00 4.00 6.00 6.00a 6.00ax<BR>
7.00 8.00 8.00c 9.00<BR>
Keywords          : CLIss kbfasttip kbtool<BR>
Version           : 6.00 6.00a 6.00ax 7.00 | 6.00 6.<BR>
Platform          : MS-DOS NT OS/2 WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 31, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
