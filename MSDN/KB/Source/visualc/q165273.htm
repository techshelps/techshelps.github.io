

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: XL97 Errors Using OLE Automation </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q165273">
<META NAME="KBModify" CONTENT="1997/07/31">
<META NAME="KBCreate" CONTENT="1997/03/14">
<META NAME="Keywords" CONTENT="kbinterop kbtool kbbug">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  OLE Automation code that successfully controlled previous versions of Microsoft Excel may fail with Microsoft Excel 97. If the code was generated by a scripting language, you may get an error message similar to the following:     “Method does not e...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QAGI,QAPN,QAH4,QA2K,QAKP,QBS0,QA9Q,QAIF,QAHE,QAB4,QAB5,QBB3,QAY5,QAD7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: XL97 Errors Using OLE Automation</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 31, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q165273</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual C++, 32-bit Editions, versions 2.0, 2.1, 2.2, 4.0,
   4.0a, 4.1, 4.2, 4.2b, 5.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
OLE Automation code that successfully controlled previous versions of
Microsoft Excel may fail with Microsoft Excel 97. If the code was
generated by a scripting language, you may get an error message similar to
the following:
<P>
<PRE>   “Method does not exist”

</PRE><h2>CAUSE</h2>
 
<P>
This problem can be caused by an improperly implemented OLE Automation
Controller. An OLE Automation Controller actually makes the calls to a
server application's IDispatch interface to allow that server to be
controlled by the client.
<P>
In this case, the problem relates to how the IDispatch::Invoke method is
called. The Invoke method requires that you specify the context of the
IDispatch call by passing one or more of the following flags via the
wFlags parameter:

<UL><LI>DISPATCH_METHOD
<LI>DISPATCH_PROPERTYGET
<LI>DISPATCH_PROPERTYPUT
<LI>DISPATCH_PROPERTYPUTREF
<P>
</UL>These flags indicate whether the function being called via IDispatch should
be called as a property or a method.
<P>
Previous versions of Microsoft Excel implemented their collection accessor
functions as methods. For example, consider the following line of Visual
Basic For Applications, Excel edition code:
<P>
<PRE>      Workbooks(1).Worksheets(1).Range("A1").Value = 10

</PRE>Workbooks, Worksheets, and Range are implemented as methods in Microsoft
Excel version 5.0 and 7.0. However, Microsoft Excel 97 implements these
same calls as properties.
<P>
If OLE Automation Controllers break when they try to drive Microsoft
Excel 97, it is usually because they are passing DISPATCH_METHOD as the
wFlags parameter of IDispatch::Invoke. Because these functions are no
longer implemented as methods in Microsoft Excel 97, the Invoke method
will fail with DISP_E_MEMBERNOTFOUND. If you are using a scripting
language on top of the controller, you will generally get an error message
similar to the one mentioned above.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To resolve this problem, modify the OLE Automation Controller code so that
calls to IDispatch::Invoke include DISPATCH_PROPERTYGET as part of the
wFlags parameter. Though you can pass DISPATCH_PROPERTYGET by itself where
these property calls are being made, the best solution is to logically OR
this flag with DISPATCH_METHOD (DISPATCH_PROPERTYGET | DISPATCH_METHOD).
By doing this, you ensure that the function call will succeed
regardless of whether it has been implemented as a property or a method.
<P>
It should be emphasized that this problem is not a problem in Microsoft
Excel. The problem lies in the implementation of the OLE Automation
Controller. The only solution to this problem is to fix the OLE Automation
Controller code.
<P>
Customers who did not write the OLE Automation Controller (such as those
who may be using a scripting language) should contact their vendor for
support.
<P>
To confirm that this is a problem in the controller code, Visual Basic
should be used to automate Microsoft Excel in the fashion attempted by the
non-functioning controller. If the Visual Basic test is successful, the
problem lies in the controller.
<P>
STATUS
<P>
Microsoft has confirmed that this is a problem in the product versions
listed at the beginning of this article. We are researching this problem
and will post new information here in the Microsoft Knowledge Base as it
becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Developers who have used the Class Wizard in Microsoft Visual C++ to
generate wrapper classes to automate Microsoft Excel may also encounter
this problem if they generated the classes from an older type library.
Class Wizard will read the type library and call IDispatch::Invoke with
whichever flag is appropriate. When used with an older type library, it
will see that the collection accessors are implemented as methods, so it
will use the DISPATCH_METHOD flag when it calls these functions. The
solution is the same. Logically OR DISPATCH_METHOD with
DISPATCH_PROPERTYGET for the wFlags parameter in the Dispatch helper
function calls. This will result in IDispatch::Invoke being properly
called by the wrapper classes.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For additional information, please see the following:
<P>
"Ole2 Programmer's Reference," Volume 2, Chapter 5, "Dispatch Methods", p.
112
<P>
For additional information, please see the following article(s) in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../OLEPROG/Q141759.htm">Q141759</A></B>
   TITLE     : SAMPLE: XLCLIENT: Automation Client for Excel
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: XLClient<BR>
Keywords          : kbinterop kbtool kbbug<BR>
Technology        : kbole<BR>
Version           : 2.0 2.2 4.0 4.1 4.2 4.2 5.0<BR>
Platform          : NT WINDOWS<BR>
Issue type        : kbbug<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 31, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
