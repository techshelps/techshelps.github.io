

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Control Bar Not Visible After Calling Create </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q111768">
<META NAME="KBModify" CONTENT="1997/05/28">
<META NAME="KBCreate" CONTENT="1994/02/17">
<META NAME="Keywords" CONTENT="MfcUI kbprb">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  A control bar is not immediately visible after a call to Create. The control bar becomes visible only when the parent window is resized (or minimized\maximized). This behavior is true for all the built-in framework classes derived from CControlBar:...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGI,QAOE,QA7O,QAMN,QAB5,QAIB,QAIA,QAIF,QBXR,QAPF,QA01,QANS,QACI,QBVV,QA39 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Control Bar Not Visible After Calling Create</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  May 28, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q111768</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
<P><PRE>    - Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51, 1.52
    - Microsoft Visual C++ 32-bit Edition, versions 2.0, 2.1, 4.0
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
A control bar is not immediately visible after a call to Create. The
control bar becomes visible only when the parent window is resized (or
minimized\maximized). This behavior is true for all the built-in framework
classes derived from CControlBar:
<P>
<PRE>   CDialogBar
   CToolBar
   CStatusBar

</PRE><h2>CAUSE</h2>
 
<P>
A control bar is initially placed at position (0,0) with size (0,0) so that
the parent frame can control the size and position. The size and position
are recomputed when a call is made to RecalcLayout. If a call is made to
Create, then the control bar will not become visible until RecalcLayout is
called for the parent frame window. The control bar becomes visible when
the main frame window is resized, because CFrameWnd has a WM_SIZE handler
that calls RecalcLayout.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Use one of the following to resolve this issue:

<UL><LI>If the control bar is ALWAYS going to be attached to the frame window
   when it is created, then create the control bar once in the OnCreate
   message handler for the frame window. This would apply to the main frame
   window of an SDI (CFrameWnd) or MDI (CMDIFrameWnd) application, or to an
   MDI Child Window (CMDIChildWnd).

<LI>If the control is to be created dynamically (for example, a toolbar that
   pops-up only under certain circumstances), make a call to RecalcLayout
   for the parent frame window to cause the control bar to be properly
   resized and drawn.
<P>
</UL><h2>MORE INFORMATION</h2>
 
<P>
There are two code segments below that show how to create a CDialogBar
attached to a CMDIChildWnd. The first sample creates a CDialogBar as soon
as the child window is created (that is, the child window always has the
dialog bar). The second sample shows a function that will properly create
and display a dialog bar at any time.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   /* Compile options needed: None
      Sample 1 - Override OnCreate.
   
      Note that the dialog template is called IDD_CHILDBAR
      and that CMyMDIChild has a member variable declaration:
      CDialogBar m_dlgbar;
   */
   int CMyMDIChild::OnCreate(LPCREATESTRUCT lpCreateStruct)
   {
        if (CMDIChildWnd::OnCreate(lpCreateStruct) == -1)
             return -1;
   
       m_dlgbar.Create(this,IDD_CHILDBAR,CBRS_TOP,115);
   
        return 0;
   }
   
   /*
     Sample 2 - Creating a dialog bar at any time.
     Note that the dialog template is called IDD_CHILDBAR
     and that CMyMDIChildWnd has a member variable declaration:
     CDialogBar *m_pdlgbar;
   */
   void CMyMDIChild::CreateDialogBar()
   {
       m_pDlgBar = new CDialogBar();
       m_pDlgBar-&gt;Create(this,IDD_CHILDBAR,CBRS_TOP,115);
       RecalcLayout();
   }

</PRE>Because you are allocating a CDialogBar object, you need to call delete
m_pDlgBar when you close the application or there will be a memory leak.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: WM_SIZE CRect tool bar status tool-bar status-bar<BR>
statusbar<BR>
Keywords            : MfcUI kbprb<BR>
Technology          : kbmfc<BR>
Version             : 1.00 1.50 1.51 1.52 2.0 2.1 4.0<BR>
Platform            : NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  May 28, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
