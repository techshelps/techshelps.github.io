

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: Breakpoint Skip Count Resets to Zero After First Pass </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q171065">
<META NAME="KBModify" CONTENT="1997/07/14">
<META NAME="KBCreate" CONTENT="1997/07/07">
<META NAME="Keywords" CONTENT="WBDebug">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  If you set a breakpoint with a skip count, the debugger behaves correctly and stops at the breakpoint for the first time after skipping the breakpoint the number of counts specified. However, after the first pass the breakpoint is hit every time wi...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH7,QAD7,QAKJ,QBXS,QAMO,QAH6,QAG8,QAU3,QAMR,QBJZ,QAVX,QAGB,QAH4,QAFH,QAWF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: Breakpoint Skip Count Resets to Zero After First Pass</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 14, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q171065</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The integrated debugger included with:
   - Microsoft Visual C++, 32-bit Editions, version 5.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
If you set a breakpoint with a skip count, the debugger behaves correctly
and stops at the breakpoint for the first time after skipping the
breakpoint the number of counts specified. However, after the first pass
the breakpoint is hit every time without skipping the breakpoint for the
specified counts.
<P>
<P><h2>CAUSE</h2>
 
<P>
The debugger resets the skip count to 0 after the first pass.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
See the MORE INFORMATION section for a workaround.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. We are researching this bug and will post
new information here in the Microsoft Knowledge Base as it becomes
available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The skip count feature is very useful in a loop where you want to stop
inside the loop after skipping a line of code for a certain number of
times. The following sample describes a situation of this nature.
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 
<P>
Build the following code with debug information.
<P>
<PRE>   // File name test.cpp

    #include &lt;iostream.h&gt;

    int main()
    {
        cout &lt;&lt; "Start debugging" &lt;&lt; endl;

        for( int i = 0; i &lt; 100; ++i )
            cout &lt;&lt; i &lt;&lt; "\n";        //SET A BREAKPOINT HERE

      return 0;
    }

</PRE>Set a breakpoint on the line shown and press the F5 key (Debug Go). The
debugger will stop at this line of code. The Auto window will show the
value of i to be 0. Press the F5 key. Again, the debugger stops at the
breakpoint and the value of i is shown to be 1.

<OL><P><LI>From the Edit menu select "Breakpoints...".

<P><LI>You will see in the dialog box for the Location tab that the breakpoint
   is set "at{,test.cpp",}.line#". Highlight this breakpoint, and Condition
   is enabled. Click Condition.

<P><LI>A dialog box with an edit box entitled "Enter the number of times to
   skip before stopping" appears. Enter number 5 and click OK.

<P><LI>Click OK again to close the dialog box.

<P><LI>From the Edit menu select "Breakpoints..." again. You will see that the
   text in the Breakpoints box now reads "at{,test.cpp",}.line#,skip 5
   time(s),(5 remaining)".

<P><LI>Click Cancel or OK to close the dialog box.

<P><LI>With the above setting, you want to skip the line of code with the
   breakpoint the specified number of times. Press the F5 key, and you will
   find that the breakpoint has been skipped 5 times and the value of i is
   now 7.

<P><LI>Again, from the Edit menu select "Breakpoints...". This time you will
   notice that the text in the Breakpoints box reads
   "at{,test.cpp",}.line#,skip 5 time(s),(0 remaining)".

<P><LI>Click Condition button, and notice that the skip count is still 5.

<P><LI>If you press the F5 key again, the breakpoint is not skipped 5 times.
   Instead it stops for every increment of i.
<P>
</OL><h3>Workaround</h3>
 
<P>
Change the skip count to a value other than the last set using Condition.
For example set it to 0, click OK, and go back to main dialog box. Set
Condition to 5, click OK, and click OK again to close the main dialog box.
Press the F5 key, and the breakpoint is skipped 5 times. You must repeat
this process every time you want to skip more than once.
<P>
Alternatively, if your loop has a count variable like "i" in the sample
code above, you can use conditional breakpoint to get the same effect. Set
breakpoint to break when 'i % 5 == 0' is true.
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : WBDebug<BR>
Version             : 5.0<BR>
Platform            : NT WINDOWS<BR>
Issue type          : kbbug<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 14, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
