

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Display an MFC Automation Document Automatically </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q140591">
<META NAME="KBModify" CONTENT="1998/02/17">
<META NAME="KBCreate" CONTENT="1995/12/04">
<META NAME="Keywords" CONTENT="MfcOLE">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Some OLE Automation servers, such as Microsoft Excel, automatically display a worksheet when it is created through OLE Automation. OLE Automation servers implemented in MFC do not display the document window by default when the document object is c...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA9Q,QA2K,QAML,QAW6,QAPN,QAGI,QAH4,QAJH,QBXR,QBWS,QAOE,QAM2,QABH,QABI,QAY2 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Display an MFC Automation Document Automatically</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 17, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q140591</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
<P><PRE>    - Microsoft Visual C++ for Windows, versions 1.5, 1.51, 1.52
    - Microsoft Visual C++, 32-bit Edition, versions 2.0, 2.1, 2.2,
      4.0, 4.1, 4.2, 5.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Some OLE Automation servers, such as Microsoft Excel, automatically display
a worksheet when it is created through OLE Automation. OLE Automation
servers implemented in MFC do not display the document window by default
when the document object is created through OLE Automation. This article
explains how to add this behavior to a generic MFC OLE Automation server
created using AppWizard.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The creation process for a document object created through OLE Automation
slightly differs from the process involved when the server's File.New menu
item is used. The document object is created using a class factory, which
is represented by the application object's COleTemplateServer data member
(m_server).
<P>
When a new document object is created through OLE Automation,
COleTemplateServer::OnCreateObject() is called, which calls
CDocTemplate::OpenDocumentFile with the last parameter set to FALSE to
create an invisible document window. By replacing this call to
CDocTemplate::OpenDocumentFile() with the last parameter set to TRUE, a
visible document window will be created.
<P>
Additionally, the code in the application's InitInstance(), which checks if
the server is running embedded or automated, should be removed. The main
window of the application will not be displayed if this code isn't removed
and the server isn't already running.
<P>
<P><h3>Step-by-Step Procedure</h3>
 
<P>
The following steps illustrate how to add this behavior to a generic MFC
OLE Automation server created using AppWizard:

<OL><P><LI>Using AppWizard, create an SDI or MDI application called MyApp with OLE
   Automation support.

<P><LI>Add the following class definition before the project's CWinApp-derived
   class's definition in the application object's header file (MyApp.h).
<P>
<PRE>   // CMyTemplateServer used to override OnCreateObject.
   class CMyTemplateServer : public COleTemplateServer
   {
      // Constructors / Destructors
      public:
      CMyTemplateServer(){}
      virtual ~CMyTemplateServer(){}

      // Overrides
      virtual CCmdTarget* OnCreateObject();
   };

</PRE><P><LI>Add the following implementation of OnCreateObject() to the CWinApp-
   derived class's implementation file (MyApp.cpp).
<P>
<PRE>   // Identical to COleTemplateServer::OnCreateObject() except for
   // the call to OpenDocumentFile() with the last parameter set to
   // TRUE instead of FALSE.
   CCmdTarget* CMyTemplateServer::OnCreateObject()
   {
      ASSERT_VALID(this);
      ASSERT_VALID(m_pDocTemplate);

      // Save application user control status
      BOOL bUserCtrl = AfxOleGetUserCtrl();

      // Create visible doc/view/frame set
      CDocument* pDoc;
      pDoc = m_pDocTemplate-&gt;OpenDocumentFile(NULL, TRUE);

      // Restore application's user control status
      AfxOleSetUserCtrl(bUserCtrl);

      if (pDoc != NULL)
      {
         ASSERT_VALID(pDoc);
         ASSERT_KINDOF(CDocument, pDoc);

         // All new documents created by OLE start out modified
         pDoc-&gt;SetModifiedFlag();
      }
      return pDoc;
   }

</PRE><P><LI>Change the CWinApp-derived object's m_server member from type
   COleTemplateServer to CMyTemplateServer. For example:
<P>
   class CMyApp : public CWinApp
   {
<P><PRE>       public:
       CMyApp();
</PRE><P>
<P><PRE>       // Overrides
       // ClassWizard generated virtual function overrides
       // {{AFX_VIRTUAL(CMyApp)
       public:
       virtual BOOL InitInstance();
       // }}AFX_VIRTUAL
</PRE><P>
<P><PRE>       // Implementation
       CMyTemplateServer m_server; // &lt;== change to derived class
       ...
       ...
    };
</PRE>
<P><LI>Modify the check for running embedded or automated from the
   application's InitInstance() member function. For example, modify
   the AppWizard provided code to match the following lines from
   InitInstance():
<P>
<P><PRE>      // Check to see if launched as OLE server
      if (cmdInfo.m_bRunEmbedded || cmdInfo.m_bRunAutomated)
      {
<PRE></PRE>         // Register all OLE server (factories) as running. This enables
         // the OLE libraries to create objects from other applications.
      COleTemplateServer::RegisterAll();

         // Application was run with /Embedding or /Automation. Don't
         // show the main window in this case.
         //      return TRUE;
      } else {
   
         // When a server application is launched stand-alone, it
         // is a good idea to update the system registry in case
         // it has been damaged.
       m_server.UpdateRegistry(OAT_DISPATCH_OBJECT);
       COleObjectFactory::UpdateRegistryAll();
       }

   NOTE: This code is specific to Visual C++ version 4.0; it varies with
   the earlier versions.

</PRE><P><LI>Compile the application, and run it stand-alone.

<P><LI>Create an OLE Automation client that creates an instance of your
   document type. Upon creation of the document object, the view
   should automatically be displayed.
</OL> 
<PRE>Keywords          : MfcOLE
Technology        : kbMfc kbole
Version           : WINDOWS:1.50,1.51,1.52;Winnet:2.0,2.1,2.2,4.1,4.2,5.0
Platform          : NT WINDOWS
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 17, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
