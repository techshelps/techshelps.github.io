

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Create a Status Bar in Every MDI Child Window </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q121946">
<META NAME="KBModify" CONTENT="1997/10/10">
<META NAME="KBCreate" CONTENT="1994/10/24">
<META NAME="Keywords" CONTENT="kbcode kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  By using the technique described in this article, you can have a status bar in every child window of an MDI Application.  MORE INFORMATION  For Visual C++ for Windows and Visual C++ 32-bit Edition version through 2.x, use the following steps to cre...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBTL,QAO2,QA9N,QAH4,QABO,QBXR,QBFY,QA56,QA55,QAY2,QAUD,QAEF,QABI,QAGQ,QDL9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Create a Status Bar in Every MDI Child Window</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q121946</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00 1.50 1.51 | 1.00 2.00 2.10 4.00
<PRE>WINDOWS        | WINDOWS NT
</PRE>kbprg kbcode
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC), included with:
<P>
<P><PRE>    - Microsoft Visual C++ for Windows, versions 1.0, 1.5, and 1.51
    - Microsoft Visual C++, 32-bit Edition, versions 1.0, 2.0, 2.1, and
      4.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
By using the technique described in this article, you can have a status bar
in every child window of an MDI Application.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
For Visual C++ for Windows and Visual C++ 32-bit Edition version through
2.x, use the following steps to create a status bar in every child window
of an MDI Application:

<OL><P><LI>Create an MDI Application by using AppWizard.

<P><LI>Create a new MDI child window class. Derive it from CMDIChildWnd by
   using Class Wizard.

<P><LI>For the new class, create an OnCreate handler for the WM_CREATE
   message by using Class Wizard. You can cut and paste the following
   code from the MAINFRAME.CPP file to the OnCreate handler:
<P>
   if (!m_wndStatusBar.Create(this) ||
<PRE>          !m_wndStatusBar.SetIndicators(indicators,
            sizeof(indicators)/sizeof(UINT)))
   {
      TRACE("Failed to create status bar\n");
      return -1;       // fail to create
   }

</PRE><P><LI>Cut and paste the following definition to the beginning of the newly
   created child class .CPP file:
<P>
   static UINT BASED_CODE indicators[] =
   {
<PRE>        ID_SEPARATOR,                 // status line indicator
        ID_INDICATOR_CAPS,
        ID_INDICATOR_NUM,
        ID_INDICATOR_SCRL,
   };

</PRE><P><LI>Add the following public data member in the child class .H file:
<P>
   CStatusBar m_wndStatusBar;

<P><LI>Include your new child class .H file into your project .CPP file.

<P><LI>In your project .CPP file, make sure you use your newly derived child
   window class to replace CMDIChildWnd in AddDocTemplate, as in this
   example:
<P>
   AddDocTemplate(new CMultiDocTemplate(IDR_PROJTYPE,
<PRE>                     RUNTIME_CLASS(CProjDoc),
                     RUNTIME_CLASS(CNewChild),
                     RUNTIME_CLASS(CProjView)));

   Replace PROJ with the project name you provided to AppWizard, and
   replace CNewChild with the new child class derived from CMDIChildWnd.

</PRE><P><LI>Build and run your program. You will see the status bar in every
   MDI child window.
<P>
</OL>For Visual C++ 32-bit Edition, version 4.0, the process is simpler:

<OL><P><LI>Create an MDI Application by using AppWizard.

<P><LI>Start ClassWizard. For CChildFrame, create an OnCreate handler for the
   WM_CREATE message.

<P><LI>Edit CChildFrame::OnCreate() in CHILDFRM.CPP. Copy and paste the
   following code from the CMainFrame::OnCreate() (in MAINFRM.CPP):
<P>
<P><PRE>      if (!m_wndStatusBar.Create(this) ||
<PRE></PRE>          !m_wndStatusBar.SetIndicators(indicators,
          sizeof(indicators)/sizeof(UINT)))
      {
            TRACE0("Failed to create status bar\n");
            return -1;      // fail to create
      }

</PRE><P><LI>Copy and paste the following declaration/definition from the top
   of MAINFRM.CPP to the top of CHILDFRM.CPP, immediately after the
   END_MESSGE_MAP() macro:
<P>
<P><PRE>      static UINT indicators[] =
      {
<PRE></PRE>            ID_SEPARATOR,           // status line indicator
            ID_INDICATOR_CAPS,
            ID_INDICATOR_NUM,
            ID_INDICATOR_SCRL,
      };

</PRE><P><LI>Add the following public data member to CChildFrame in CHILDFRM.H:
<P>
   CStatusBar m_wndStatusBar;

<P><LI>Build and run your program. You will see the status bar in every
   MDI child window.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf status mdi child window 1.00 1.50 2.00<BR>
2.10 2.50 2.51 3.00 4.00<BR>
KBCategory: kbprg kbcode<BR>
KBSubCategory: MfcUI<BR>
Keywords          : kbcode kbprg<BR>
Technology        : kbMfc<BR>
Version           : 1.00 1.50 1.51 | 1.00 2.00 2.10<BR>
Platform          : NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
