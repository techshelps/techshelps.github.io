

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SAMPLE: DRAGD95.EXE OLE Drag/Drop in Windows 95 Common Controls </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q152092">
<META NAME="KBModify" CONTENT="1998/01/09">
<META NAME="KBCreate" CONTENT="1996/06/04">
<META NAME="Keywords" CONTENT="MfcOLE kbfile kbsample">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  This sample demonstrates implementing OLE drag and drop in Windows 95 Common controls. It also demonstrates how the drag image functionality can be preserved while dragging within the application that is the source of the data.  MORE INFORMATION  T...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA9N,QAB5,QAOE,QA7O,QAMN,QACI,QA9Q,QAY5,QDL9,QBWQ,QBWO,QBWN,QAH6,QBIC,QAPF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>SAMPLE: DRAGD95.EXE OLE Drag/Drop in Windows 95 Common Controls</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 9, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q152092</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
   - Microsoft Visual C++, 32-bit Edition, versions 4.0, 4.1, 4.2, 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This sample demonstrates implementing OLE drag and drop in Windows 95
Common controls. It also demonstrates how the drag image functionality can
be preserved while dragging within the application that is the source of
the data.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following file is available for download from the Microsoft
Software Library:
<P>
<PRE> ~ <A HREF="http://support.microsoft.com/download/support/mslfiles/Dragd95.exe">Dragd95.exe</A> <I>(size: 80908 bytes)</I> 

</PRE>For more information about downloading files from the Microsoft Software
Library, please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../zMiscellaneous/Q119591.htm">Q119591</A></B>
   TITLE     : How to Obtain Microsoft Support Files from Online Services

</PRE>NOTE: Use the -d option when running dragd95.exe to decompress the file and
recreate the proper directory structure. If you are using Visual C++ 5.0
you may get a message:
<P>
<PRE>   “This project was generated by a previous version of Developer Studio.
   Continuing will convert it to the new format. Do you want to convert the
   project?”

</PRE>Accept this by clicking “Yes.”
<P>
<P><h3>Please Note the Following Problem</h3>
 
<P>
Dragd95.exe reports a memory leak when the steps below are taken:

<OL><P><LI>Build the debug version of the sample. Then, run the .exe.

<P><LI>Drag one item from left pane to right pane.

<P><LI>Close the .exe. You should see the memory leak in the output window of
   VC++.
<P>
</OL><h3>Resolution</h3>
 
<P>
The following code needs to be at the bottom of OnHandleDrag() (that is,
before the last return statement):
<P>
<PRE>   delete m_pDragImage;
   m_pDragImage = NULL;

</PRE></OL><h3>More Information</h3>
 
<P>
Windows 95 Common controls implement their own style of drag and drop.
However, this style of drag and drop does not support dragging to other
applications. To enable this functionality, it is possible to implement OLE
drag and drop using the Common controls. Unfortunately, when OLE drag and
drop is implemented, the Common control drag image is lost.
<P>
It is possible, when implementing OLE drag and drop, to preserve the Common
control drag image. However, this image will only be displayed when the
pointer is over the application that is the source of the data. This is
because the image is not a system-wide resource and belongs to the
application that is the source of the data. This behavior is consistent
with that of the shell in Windows 95. In Windows 95, you will notice that
the drag image is lost over applications other than the Explorer or the
Windows shell. The shell and any instances of the Explorer that are running
are a single instance of the same application.
<P>
OLE drag and drop as implemented by this sample is straight forward. When a
drag is started, a COleDataSource object is loaded with data and
COleDataSource::DoDragDrop() is called. The data source is loaded with a
CF_TEXT format and a private clipboard format that has been registered.
Applications that understand CF_TEXT, such as Microsoft Word, can be a drop
target for the data. You can also implement a COleDropTarget object so that
you can be a drop target for your own custom clipboard format.
<P>
Common controls normally begin a drag operation in response to the
LVN_BEGINDRAG message. You can also take advantage of this message to begin
the drag operation. This is where the similarity with Common control drag
and drop ends. Common control drag and drop uses mouse messages to control
tracking the drag image and processing the drop. You will not be able to
use mouse messages because, after you begin the drag operation, control is
passed to OLE's DoDragDrop() function.
<P>
To control the tracking and display of the common control drag image, you
will implement a COleDropSource object and pass it to the DoDragDrop()
function. COleDropSource implements a GiveFeedback() function that is
called to give feedback about the effect of a drop at the current mouse
position as the mouse is moved over a drop target. Overriding the
GiveFeedback() function and obtaining the position of the mouse gives you a
chance to control tracking and display of the drag image.
<P>
<P><h2>REFERENCES</h2>
 
<P>
Programming with MFC: Encyclopedia – Drag-and-Drop (OLE)
 
<PRE>Keywords          : MfcOLE kbfile kbsample
Technology        : kbMfc kbole
Version           : Winnt:4.0 4.1 4.2 5.0
Platform          : winnt</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 9, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
