

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Use MFC to Automate Excel &amp; Create/Format a New Workbook </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q179706">
<META NAME="KBModify" CONTENT="1998/02/09">
<META NAME="KBCreate" CONTENT="1998/01/22">
<META NAME="Keywords" CONTENT="MfcOLE kbcode kbinterop">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  This article shows how to automate Microsoft Excel 97 using the Microsoft Foundation Class (MFC) library, version 4.2 (installed with Microsoft Visual C++ version 5.0).  The article describes a technique for using OLE automation to create/format a ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QDMR,QBVP,QAIB,QDNZ,QBCF,QA6E,QAJB,QDMF,QAH4,QBCE,QA28,QATJ,QAM3,QAJH,QAPN V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Use MFC to Automate Excel &amp; Create/Format a New Workbook</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 9, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q179706</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual C++, 32-bit Editions, version 5.0
<LI>Microsoft Excel 97 for Windows
<LI>The Microsoft Foundation Classes (MFC)
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article shows how to automate Microsoft Excel 97 using the Microsoft
Foundation Class (MFC) library, version 4.2 (installed with Microsoft
Visual C++ version 5.0).
<P>
The article describes a technique for using OLE automation to create/format
a Microsoft Excel workbook; it introduces several methods/properties (from
the Microsoft Excel type library) for adding data to the worksheet and
formatting the worksheet.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
You can copy the code in this article to the message handler function of an
event defined in an MFC .cpp file. However, the purpose of the code is to
illustrate the process of using the IDispatch interfaces and member
functions defined in the Excel8.olb type library. The primary benefit of
this article, however, comes from reading and understanding the code in the
example so that you can modify the example or write your own code to
automate Microsoft Excel 97 using MFC.
<P>
<P><h3>Steps to Create the Project</h3>
 

<OL><P><LI>Follow steps 1 through 12 in the following Microsoft Knowledge Base
   article to create a sample project that uses the IDispatch interfaces
   and member functions defined in the Excel8.olb type library:
<P>
<P><PRE>      ARTICLE-ID: <B><A HREF="../VISUALC/Q178749.htm">Q178749</A></B>
<PRE></PRE>      TITLE     : HOWTO: Create an Automation Project Using MFC and a Type
                  Library

</PRE><P><LI>At the top of the AutoProjectDlg.cpp file, add the following line:
<P>
<P><PRE>      #include "excel8.h"
</PRE>
<P><LI>Add the following code to CAutoProjectDlg::OnRun() in the
   AutoProjectDLG.cpp file.
<P>
<P><PRE>      // Commonly used OLE variants.
      COleVariant
<PRE></PRE>                 covTrue((short)TRUE),
                 covFalse((short)FALSE),
                 covOptional((long)DISP_E_PARAMNOTFOUND, VT_ERROR);

      _Application app;
      Workbooks books;
      _Workbook book;
      Worksheets sheets;
      _Worksheet sheet;
      Range range;
      Font font;
      Range cols;

      // Start Excel and get Application object.
      if(!app.CreateDispatch("Excel.Application"))
      {
       AfxMessageBox("Couldn't start Excel and get Application object.");
       return;
      }

      //Get a new workbook.
      books = app.GetWorkbooks();
      book = books.Add (covOptional);

      //Get the first sheet.
      sheets =book.GetSheets();
      sheet = sheets.GetItem(COleVariant((short)1));

      //Fill cells A1, B1, C1, and D1 one cell at a time with "headers".
      range = sheet.GetRange(COleVariant("A1"),COleVariant("A1"));
      range.SetValue(COleVariant("First Name"));
      range = sheet.GetRange(COleVariant("B1"),COleVariant("B1"));
      range.SetValue(COleVariant("Last Name"));
      range = sheet.GetRange(COleVariant("C1"),COleVariant("C1"));
      range.SetValue(COleVariant("Full Name"));
      range = sheet.GetRange(COleVariant("D1"),COleVariant("D1"));
      range.SetValue(COleVariant("Salary"));

      //Format A1:D1 as bold, vertical alignment = center.
      range = sheet.GetRange(COleVariant("A1"), COleVariant("D1"));
      font = range.GetFont();
      font.SetBold(covTrue);
      range.SetVerticalAlignment(
               COleVariant((short)-4108));   //xlVAlignCenter = -4108

      //Fill A2:B6 with an array of values (First &amp; Last Names).
      {
         COleSafeArray saRet;
         DWORD numElements[]={5,2};   //5x2 element array
         saRet.Create(VT_BSTR, 2, numElements);

         //Fill the 5x2 SafeArray with the following data:
         //   John      Smith
         //   Tom       Brown
         //   Sue       Thomas
         //   Jane      Jones
         //   Adam      Johnson

         FillSafeArray(L"John", 0, 0, &amp;saRet);
         FillSafeArray(L"Smith", 0, 1, &amp;saRet);
         FillSafeArray(L"Tom", 1, 0, &amp;saRet);
         FillSafeArray(L"Brown", 1, 1, &amp;saRet);
         FillSafeArray(L"Sue", 2, 0, &amp;saRet);
         FillSafeArray(L"Thomas", 2, 1, &amp;saRet);
         FillSafeArray(L"Jane", 3, 0, &amp;saRet);
         FillSafeArray(L"Jones", 3, 1, &amp;saRet);
         FillSafeArray(L"Adam", 4, 0, &amp;saRet);
         FillSafeArray(L"Johnson", 4, 1, &amp;saRet);

         range = sheet.GetRange(COleVariant("A2"), COleVariant("B6"));
         range.SetValue(COleVariant(saRet));

         saRet.Detach();
      }

      //Fill C2:C6 with a relative formula (=A2 &amp; " " &amp; B2).
      range = sheet.GetRange(COleVariant("C2"), COleVariant("C6"));
      range.SetFormula(COleVariant("=A2 &amp; \" \" &amp; B2"));

      //Fill D2:D6 with a formula(=RAND()*100000) and apply a number
      //format.
      range = sheet.GetRange(COleVariant("D2"), COleVariant("D6"));
      range.SetFormula(COleVariant("=RAND()*100000"));
      range.SetNumberFormat(COleVariant("$0.00"));

      //AutoFit columns A:D.
      range = sheet.GetRange(COleVariant("A1"), COleVariant("D1"));
      cols = range.GetEntireColumn();
      cols.AutoFit();

      //Manipulate a variable number of columns for Quarterly Sales Data.
      {
         short NumQtrs;
         CString msg;
         Range resizedrange;
         Interior interior;
         Borders borders;

         //Determine how many quarters to display data for.
         for(NumQtrs=1;NumQtrs&lt;=3;NumQtrs++)
         {
            msg.Format("Enter sales data for %d quarter(s)?", NumQtrs);
            if(AfxMessageBox(msg,MB_YESNO)==IDYES)
            {
               break;
            }
         }
         msg.Format("Displaying data for %d quarters.", NumQtrs);
         AfxMessageBox(msg);

         //Starting at E1, fill headers for the number of columns selected.
         range = sheet.GetRange(COleVariant("E1"), COleVariant("E1"));
         resizedrange = range.GetResize(covOptional, COleVariant(NumQtrs));
         resizedrange.SetFormula(
                COleVariant("=\"Q\" &amp; COLUMN()-4 &amp; CHAR(10) &amp; \"Sales\""));
         //Change the Orientation and WrapText properties for the headers.
         resizedrange.SetOrientation(COleVariant((short)38));
         resizedrange.SetWrapText(covTrue);
         //Fill the interior color of the headers.
         interior = resizedrange.GetInterior();
         interior.SetColorIndex(COleVariant((short)36));

         //Fill the columns with a formula and apply a number format.
         range = sheet.GetRange(COleVariant("E2"), COleVariant("E6"));
         resizedrange = range.GetResize(covOptional, COleVariant(NumQtrs));
         resizedrange.SetFormula(COleVariant("=RAND()*100"));
         resizedrange.SetNumberFormat(COleVariant("$0.00"));

         //Apply borders to the Sales data and headers.
         range = sheet.GetRange(COleVariant("E1"), COleVariant("E6"));
         resizedrange= range.GetResize(covOptional, COleVariant(NumQtrs));
         borders = resizedrange.GetBorders();
         borders.SetWeight(COleVariant((short)2));   //xlThin = 2

         //Add a Totals formula for the Quarterly sales data and apply a
         //border.
         range = sheet.GetRange(COleVariant("E8"), COleVariant("E8"));
         resizedrange = range.GetResize(covOptional, COleVariant(NumQtrs));
         resizedrange.SetFormula(COleVariant("=SUM(E2:E6)"));
         borders = resizedrange.GetBorders();
         {
            Border bottomborder;
            bottomborder = borders.GetItem((long)9);
            bottomborder.SetLineStyle(
                           COleVariant((short)-4119));   //xlDouble = -4119
            bottomborder.SetWeight(
                           COleVariant((short)4));       //xlThick = 4
         }
      }

      //Make the application visible and give the user control of
      //Microsoft Excel.
      app.SetVisible(TRUE);
      app.SetUserControl(TRUE);

</PRE><P><LI>Add the following function to AutoProjectDLG.cpp, locating it somewhere
   before CAutoProjectDlg::OnRun():
<P>
<P><PRE>      void FillSafeArray(OLECHAR FAR* sz, int iRow, int iCol,
<PRE></PRE>                         COleSafeArray* sa)
      {
         VARIANT v;
         long index[2];

         index[0] = iRow;
         index[1] = iCol;

         VariantInit(&amp;v);
         v.vt = VT_BSTR;
         v.bstrVal = SysAllocString(sz);
         sa-&gt;PutElement(index, v.bstrVal);
         SysFreeString(v.bstrVal);
         VariantClear(&amp;v);
      }

</PRE><P><LI>In Developer Studio, run the application. When the dialog box appears
   (the example creates a dialog-based application), click the Run button.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: Excel 8 8.0 XL97 XL8<BR>
Keywords          : MfcOLE kbcode kbinterop<BR>
Technology        : kbmfc<BR>
Version           : WINDOWS:97; WINNT:5.0<BR>
Platform          : WINDOWS winnt<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 9, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
