

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: C4127 Generated When Subexpression Evaluates to Constant </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q60734 ">
<META NAME="KBModify" CONTENT="1997/07/17">
<META NAME="KBCreate" CONTENT="1990/04/13">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The following warning was added beginning with Microsoft C version 6.0:     C4127: conditional expression is constant  Microsoft C/C++ version 7.0 and later use the following warning:     C4727: conditional expression is constant  This warning is d...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB4,QBFY,QAKJ,QAOT,QABH,QBVV,QAKR,QAKD,QAH4,QAHE,QADK,QACE,QAB9,QA56,QA55 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: C4127 Generated When Subexpression Evaluates to Constant</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 17, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q60734 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
6.00 6.00a 6.00ax 7.00 | 6.00 6.00a | 1.00 1.50 1.51
<PRE>MS-DOS                 | OS/2       | WINDOWS
</PRE>kbtool kbprb
<P>
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft C/C++ Compiler (CL.EXE), included with:
<P>
<P><PRE>    - Microsoft C for MS-DOS, versions 6.0, 6.0a, and 6.0ax
    - Microsoft C for OS/2, versions 6.0 and 6.0a
    - Microsoft C/C++ for MS-DOS, versions 7.0
    - Microsoft Visual C++ for Windows, versions 1.0, 1.5, and 1.51
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The following warning was added beginning with Microsoft C version 6.0:
<P>
<PRE>   C4127: conditional expression is constant

</PRE>Microsoft C/C++ version 7.0 and later use the following warning:
<P>
<PRE>   C4727: conditional expression is constant

</PRE>This warning is designed to inform you that the controlling expression of
an if statement or while loop evaluates to a constant, so the body of the
loop is ALWAYS executed or NEVER executed.
<P>
The warning may appear in certain expressions that don't seem to be
constants, but this is because the compiler will generate this warning if
ANY subexpression in a larger conditional expression evaluates to a
constant.
<P>
<P><h2>CAUSE</h2>
 
<P>
The warning is strictly informational and does not necessarily indicate any
problems in the code.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
In the sample code below, warning C4127 is generated by the optimizing
compiler supplied with C version 6.0 if the code is compiled at warning
level three or four (/W3 or /W4). The quick compiler (/qc) supplied with C
version 6.0 does not generate the warning because it does not check for
this situation.
<P>
The fast compiler, invoked with the /f switch, supplied with C/C++ version
7.0 and Visual C/C++ versions 1.0 and 1.5 does not generate the C4727
warning at any warning level.
<P>
The compilers included with Visual C++ 32-bit edition do not generate any
warnings either.
<P>
The optimizing compiler, invoked with the /f- switch, supplied with C/C++
version 7.0 and Visual C++ for Windows generates the C4727 warning for the
sample code below only at warning level three or four. The optimizing
compiler supplied with Visual C/C++ versions 1.0 and 1.5, also invoked with
the /f- switch, generates the C4727 warning only at warning level four.
<P>
The following expression
<P>
<PRE>   ( hours &gt;= 0 &amp;&amp; hours &lt;= 24 )

</PRE>is NOT a constant because hours could be EITHER in the range 0 (zero) to
24, or out of that range. However, this expression generates warning C4127
because the left subexpression
<P>
<PRE>   hours &gt;= 0

</PRE>ALWAYS evaluates to true since hours is unsigned and an unsigned int
is ALWAYS greater than or equal to zero. The compiler generates the
warning to inform you of this situation.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>/* Compile options needed: none
*/

#include &lt;stdio.h&gt;

void main(void)
</PRE>{
<PRE>    unsigned hours;

    scanf ( "%ud", &amp;hours );

    if ( hours &gt;= 0 &amp;&amp; hours &lt;= 24 )
        printf("Hours OK\n");
    else
        printf("Hours BAD\n");
}

</PRE>Making a simple change, such as replacing the "&gt;=" with a "&gt;", eliminates
the warning because the left expression can now evaluate to either true or
false (for example, false if hours = 0; true otherwise).
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 7.00 8.00 8.00c 1.00 1.50 1.51<BR>
KBCategory: kbtool kbprb<BR>
KBSubcategory: CLIss<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 17, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
