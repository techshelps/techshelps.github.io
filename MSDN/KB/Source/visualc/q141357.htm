

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: WM_MOUSEMOVE Messages Returned Out of Sequence </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q141357">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1995/12/17">
<META NAME="Keywords" CONTENT="MacPrgIss MfcMac VCMac">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  When you move the mouse pointer over a window, some of the WM_MOUSEMOVE messages arrive out of order. For example, when you draw using the Scribble sample program, an old point is occasionally received causing a zig-zag effect.  CAUSE =====  There ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAEV,QBC9,QBC8,QANO,QDO9,QAEF,QAYC,QAPN,QABI,QAU3,QAUD,QAMR,QABH,QAO2,QAII V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: WM_MOUSEMOVE Messages Returned Out of Sequence</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q141357</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual C++, Macintosh Cross-Development Edition, versions 2.0,
   4.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When you move the mouse pointer over a window, some of the WM_MOUSEMOVE
messages arrive out of order. For example, when you draw using the Scribble
sample program, an old point is occasionally received causing a zig-zag
effect.
<P>
<P><h2>CAUSE</h2>
 
<P>
There is a bug in the WLM implementation of ::PeekMessage that causes some
of the mouse move messages to be retrieved later.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Check the time field of the MSG record of the current message when
processing a WM_MOUSEMOVE message. If the time is older than that of the
previous WM_MOUSEMOVE message, discard the message. See the Sample Code
section of this article for an example.
<P>
An alternative solution is to use Mac APIs (such as StillDown() and
GetMouse()) directly to track the mouse until the button is released. This
method dramatically increases mouse tracking and is a common method that
native Macintosh applications use. Keep in mind that this will keep the
system locked until the mouse is released.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. We are researching this problem and will
post new information here in the Microsoft Knowledge Base as it becomes
available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The WLM message system was designed by imitating Window's message system
using the Macintosh API. The bug is more precisely related to the WLM
message system used by ::PeekMessage.
<P>
This problem is very apparent in the released version of the target
Macintosh executable using Visual C++ 2.0 (try the Scribble sample
program). It occurs much less frequently on Visual C++ 4.0 but it still
exists.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   // Method one
   // Check by timestamp of messages

   void CMyView::OnMouseMove(UINT, CPoint point)
   {
       ...
       static DWORD lastTime = 0;
       if (lastTime &gt; GetCurrentMessage()-&gt;time)
           return; // discard message
       else
           lastTime = GetCurrentMessage()-&gt;time;
       // process message
   }

   // Method two
   // Use native MacOS calls to track mouse movements

   #ifdef _MAC
   #include &lt;macname1.h&gt;
   #include &lt;Types.h&gt;
   #include &lt;Events.h&gt;
   #include &lt;macname2.h&gt;
   #endif

   void CMyView::OnLButtonDown(UINT nFlags, CPoint point)
   {
   #ifdef _MAC
      Point macPt;    // Mac specific data type
      CPoint winPt;   // temp Windows Point var

      while(StillDown()) {
         GetMouse(&amp;macPt);       // Get GLOBAL mouse coordinates
         winPt.x = macPt.h;      // Convert to windows struct
         winPt.y = macPt.v;
         ScreenToClient(&amp;winPt); // Convert to Client Coordinates
         TRACE("Where? (%d,%d)\n", winPt.x, winPt.y);
      }
   #else
      CView::OnLButtonDown(nFlags, point);
   #endif
   }

</PRE><h2>REFERENCES</h2>
 
<P>
Books Online - WM_MOUSEMOVE, ::PeekMessage, GetCurrentMessage
68k Porting Reference - PeekMessage
Inside Macintosh - Macintosh Toolbox Essentials
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : MacPrgIss MfcMac VCMac<BR>
Version             : 2.0 4.0<BR>
Platform            : MACINTOSH NT WINDOWS<BR>
Issue type          : kbbug<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
