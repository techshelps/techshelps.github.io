

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_ellipse() Floodfills Until Border Color Is Reached </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q75242 ">
<META NAME="KBModify" CONTENT="1997/07/17">
<META NAME="KBCreate" CONTENT="1991/08/15">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Using the _ellipse() function with _GFILLINTERIOR, which is part of the graphics library shipped with the Microsoft C Compiler versions 5.0 an later and Microsoft QuickC versions 2.0, 2.01, 2.5, and 2.51, will create an ellipse that is filled with ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAK2,QAG9,QAPG,QAM3,QBCF,QBCE,QAIB,QAXQ,QATX,QAJQ,QBC9,QBC8,QANO,QAMB,QAEF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>_ellipse() Floodfills Until Border Color Is Reached</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 17, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q75242 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
5.10 6.00 6.00a 6.00ax 7.00 | 1.00 1.50
<PRE>MS-DOS                      | WINDOWS
</PRE>kbprg
<P>
<P>
 
The information in this article applies to:

<UL><LI>The C Run-time (CRT), included with:
<P>
<P><PRE>    - Microsoft C for MS-DOS, versions 5.1, 6.0, 6.0a, and 6.0ax
    - Microsoft C/C++ for MS-DOS, version 7.0
    - Microsoft Visual C++ for Windows, versions 1.0 and 1.5
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Using the _ellipse() function with _GFILLINTERIOR, which is part of
the graphics library shipped with the Microsoft C Compiler versions
5.0 an later and Microsoft QuickC versions 2.0, 2.01, 2.5, and 2.51,
will create an ellipse that is filled with the current color. First
the border is drawn, then the ellipse is floodfilled (meaning the fill
begins at one point and continues in all directions until the boundary
color is reached).
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
If the ellipse being filled contains pixels with the boundary color,
the ellipse will not be completely filled. This is expected because
the method used to fill the ellipse is a floodfill.
<P>
In the first example, two ellipses are floodfilled. The ellipses
overlap, so the filling of the second ellipse is not complete. This
will happen if any shape intersects the ellipse. The portion of the
ellipse filled is determined by the points of intersection and the
point at which floodfilling is begun. This point was chosen to be the
center of the ellipse and there is no way to override that choice.
<P>
In the second example, an ellipse is floodfilled and text is written
within it. The program attempts to erase the writing by repeating the
exact same ellipse. The ellipse is already filled with the color, so
floodfilling ceases immediately without erasing the text.
<P>
There are several ways to avoid these and similar situations:

<UL><LI>Use _polygon() or _rectangle() instead of _ellipse(), because they
   use a different method to fill the region.
<P>
   -or-

<LI>Use a different color when drawing the ellipse, so that the color
   of the existing shapes or text will not cause the floodfill to
   cease. The ellipse can be left that color or can then be
   subsequently filled with the color of existing shapes or text (that
   is, in the first example, draw the first ellipse, change the color,
   draw the second ellipse, restore the color, redraw the second
   ellipse; in the second example, draw a blue ellipse, write white
   text in it, draw an ellipse in anything but blue or white, then
   draw the blue ellipse.)
<P>
   -or-

<LI>Use _remappalette() so that two different color indices map to the
   same color. Filling with these colors is visually identical,
   but they will be considered two different colors in a floodfill.
   This workaround is used in the same way as the second workaround,
   but will avoid the flicker that comes from using a visually
   different color. If you need to remap the palette to change the
   duplicate index back into its original color, make sure that the
   ellipse has been redrawn in the original index (rather than the
   duplicate) before you do this, otherwise the ellipse will change
   color when the palette is remapped.
<P>
</UL><h3>Sample Code 1</h3>
 
<P>
<PRE>/* Compile options needed: none
*/

#include &lt;conio.h&gt;
#include &lt;graph.h&gt;

void main()
</PRE>{
<PRE>   _setvideomode( _ERESCOLOR );

   _ellipse( _GFILLINTERIOR, 290, 0, 345, 349 );
   _ellipse( _GFILLINTERIOR, 0, 155, 525, 195 );
   while( !kbhit() );

   _setvideomode( _DEFAULTMODE );
</PRE>}
<P>
<P><h3>Sample Code 2</h3>
 
<P>
<PRE>/* Compile options needed: none
*/

#include &lt;graph.h&gt;
#include &lt;conio.h&gt;
#include &lt;stdlib.h&gt;

char fondir[80];   /*  String for user's font directory  */

void main( )
</PRE>{
<P>
<PRE>/*  Set the video mode for the maximum resolution  */

   _setvideomode( _MAXRESMODE );

/*  Register a font 24 pixels high with _registerfonts and _setfont
*/

   if( _registerfonts( "*.fon" ) &lt;= 0 )
   {
      _settextposition( 5, 5 );
      _outtext( "Enter directory where fonts are located: " );
      gets( fondir );
      _clearscreen( _GCLEARSCREEN );
      strcat( fondir, "\\*.FON" );
      if( _registerfonts( fondir ) &lt;= 0 )
      {
         _outtext( "Exiting - can't register fonts.\n" );
         while( !kbhit() );
         _setvideomode(_DEFAULTMODE);
         exit( 1 );
      }
   }
   _setfont( "h24" );

/*  Draw a blue ellipse  */

   _setcolor( 1 );
   _ellipse( _GFILLINTERIOR, 100, 145, 500, 200 );

/*  Draw white text inside the ellipse using _outgtext and wait  */

   _setcolor( 7 );
   _moveto( 170, 160 );
   _outgtext( "Press any key to erase...\n" );
   _setcolor( 1 );
   do
      getch( );
   while( kbhit() );

/* Draw a blue ellipse in the exact spot. The intent is to erase
   the white text, but since the ellipse is already blue and _ellipse
   uses a floodfill, the blue border is reached before the text is
   erased.
*/
   _ellipse( _GFILLINTERIOR, 100, 145, 500, 200 );
   while( !kbhit() );
   _setvideomode( _DEFAULTMODE );
</PRE>}
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 1.00 1.50 5.10 6.00 6.00a 6.00ax 7.00<BR>
KBCategory: kbprg<BR>
KBSubcategory: CLngIss GraphicsIss<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 17, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
