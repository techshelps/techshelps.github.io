

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: ios::internal Adds No Fill Characters for int and long </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q123161">
<META NAME="KBModify" CONTENT="1997/07/31">
<META NAME="KBCreate" CONTENT="1994/11/22">
<META NAME="Keywords" CONTENT="CodeGen vcbuglist400 vcbuglist500 VCx86">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Using member function ios::flags() with flag ios::internal fails to add fill characters after the leading sign but before the value. This only occurs for negative integers or negative long integers. For other data types and positive integers or pos...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA4Q,QAR4,QAHH,QAAP,QBCF,QA7Y,QAJ9,QAKP,QBFY,QAYV,QAM1,QAHE,QAFO,QBB2,QBCE V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: ios::internal Adds No Fill Characters for int and long</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 31, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q123161</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft C/C++ Compiler (CL.EXE), included with:
   - Microsoft Visual C++ for Windows, versions 1.5, 1.51
   - Microsoft Visual C++, 32-bit Edition, versions 1.0, 2.0, 2.1, 4.0,
<P><PRE>     4.1, 4.2, 5.0 on the following platform:
     - x86
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Using member function ios::flags() with flag ios::internal fails to add
fill characters after the leading sign but before the value. This only
occurs for negative integers or negative long integers. For other data
types and positive integers or positive long integers, the flag works
correctly.
<P>
The following is output from the sample program given under "MORE
INFORMATION":
<P>
<PRE>   --- Output Starts ---

+          1234      // Correct, positive integer with space between
                        + and 1234.
+          1234      // Correct, positive long integer.
+      1234.000      // Correct, positive float.
+      1234.000      // Correct, positive double.
          -1234      // Incorrect, negative integer with no space
                        between - and 1234.
          -1234      // Incorrect, negative long integer.
-     1.23e+003      // Correct, negative float in scientific notation.
-     1.23e+003      // Correct, negative double.

   --- Output Ends ---

</PRE><h2>RESOLUTION</h2>
 
<P>
Cast the integer or long integer values to float or double values, and use
manipulator setprecision(0) and ios flag ios::fixed. See the sample code in
the "More Information" section of this article.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the products listed at the
beginning of this article. We are researching this problem and will post
new information here in the Microsoft Knowledge Base as it becomes
available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Sample Code to Reproduce Problem</h3>
 
<P>
<PRE>   /* Compile options needed: none
   */

   #include        &lt;IOSTREAM.H&gt;
   #include        &lt;IOMANIP.H&gt;

   #pragma         warning( disable : 4270 )
   #define         WIDTH   20

   void main( void )
   {
     int i = 1234;

     cout.flags( ios::showpos | ios::internal );
     cout &lt;&lt; setw(WIDTH) &lt;&lt; (int) i &lt;&lt; endl;
     cout &lt;&lt; setw(WIDTH) &lt;&lt; (long) i &lt;&lt; endl;

     cout.precision(3);
     cout.flags( ios::showpos | ios::internal | ios::fixed );
     cout &lt;&lt; setw(WIDTH) &lt;&lt; (float) i &lt;&lt; endl;
     cout &lt;&lt; setw(WIDTH) &lt;&lt; (double) i &lt;&lt; endl;

     cout &lt;&lt; setw(WIDTH) &lt;&lt; (int)-i &lt;&lt; endl;  // Problem
     cout &lt;&lt; setw(WIDTH) &lt;&lt; (long)-i &lt;&lt; endl; // Problem

     // The following two lines show how to work around the problem.
     // cout &lt;&lt; setprecision(0) &lt;&lt; setw(WIDTH) &lt;&lt;  (float)-i &lt;&lt; endl;
     // cout &lt;&lt; setprecision(0) &lt;&lt; setw(WIDTH) &lt;&lt;  (float)-i &lt;&lt; endl;

     cout.precision(3);
     cout.flags( ios::showpos | ios::internal | ios::scientific );
     cout &lt;&lt; setw(WIDTH) &lt;&lt; (float)-i &lt;&lt; endl;
     cout &lt;&lt; setw(WIDTH) &lt;&lt; (double)-i &lt;&lt; endl;
   }
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: buglist1.50 buglist1.00 buglist2.00<BR>
Keywords          : CodeGen vcbuglist400 vcbuglist500 VCx86<BR>
Version           : 1.5 1.51 1.0 2.0 2.1 4.0 4.1 4.2<BR>
Platform          : NT WINDOWS<BR>
Issue type        : kbbug<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 31, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
