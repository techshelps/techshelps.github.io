

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Insert Objects Without Using Insert Object Dialog Box </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q137357">
<META NAME="KBModify" CONTENT="1997/10/10">
<META NAME="KBCreate" CONTENT="1995/09/25">
<META NAME="Keywords" CONTENT="MfcOLE kbcode">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  When building an OLE container or OLE server application using MFC OLE classes, you should insert an OLE embedded object programmatically, without using the InsertObject dialog box. This article show you how.  In a default MFC AppWizard-generated O...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAW6,QAH4,QAPN,QACI,QA9N,QBVP,QA9Q,QBJZ,QA01,QAML,QAHE,QAGI,QAY5,QAGU,QBV8 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Insert Objects Without Using Insert Object Dialog Box</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q137357</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
   - Microsoft Visual C++ for Windows, versions 1.5, 1.51, 1.52
   - Microsoft Visual C++, 32-bit Edition, versions 2.0, 2.1, 2.2,
<P><PRE>     4.0, 4.1, 5.0
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
When building an OLE container or OLE server application using MFC OLE
classes, you should insert an OLE embedded object programmatically, without
using the InsertObject dialog box. This article show you how.
<P>
In a default MFC AppWizard-generated OLE container or OLE server
application, a command handler is implemented to enable the user to insert
an object by clicking Insert New Object on the Edit menu. The AppWizard-
generated code makes use of the COleInsertDialog class, which is an MFC
wrapper for the OLEUIINSERTOBJECT common dialog box. The COleInsertDialog
data and member functions are used to embed the object.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The member function most responsible for the embedding of an OLE object is
COleInsertDialog::CreateItem, which takes a pointer to a COleClientItem as
a formal parameter.
<P>
When the user clicks Insert New Object on the Edit menu, a COleInsertDialog
is created, and it is shown by calling its DoModal function. When the
dialog box is dismissed, some of its data members are set by selections
made by the user, such as Create From File or Create New.
<P>
The implementation of COleInsertDialog::CreateItem calls the COleClientItem
member functions to embed the object, which leads to the solution of by-
passing the COleInsertDialog class and calling COleClientItem to do the
work.
<P>
Here is an excerpt from COleInsertDialog::CreateItem:
<P>
*******Begin Excerpt*******
<PRE>   switch (selType)
   {
     case linkToFile:
      // link to file selected
     ASSERT(m_szFileName[0] != 0);
           bResult=pNewItem-&gt;CreateLinkFromFile(m_szFileName);
     break;

     case insertFromFile:
     // insert file selected
     ASSERT(m_szFileName[0] != 0);
     bResult=pNewItem-&gt;CreateFromFile(m_szFileName);
     break;

     default:
     // otherwise must be create new
     ASSERT(selType == createNewItem);
     bResult=pNewItem-&gt;CreateNewItem(m_io.clsid);
     break;
   }

</PRE>*******End Excerpt*******
<P>
This code features a switch structure whose logic flow is controlled by the
selType set by the user interaction with the COleInsertDialog dialog box.
<P>
The following code demonstrates how to insert an OLE embedded object
programmatically. The code shows the creation of an instance of a
COleClientItem object, which then calls its CreateNewItem member
function to create and embed a Microsoft Excel worksheet.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   /* Compile options needed : None
   */


   void CMyView::OnInsertObject()
   {

     BeginWaitCursor();

     CMyOleClientItem* pItem = NULL;
     TRY
     {
         // Create new item connected to this document.
         CMyDoc* pDoc = GetDocument();
         ASSERT_VALID(pDoc);
         pItem = new CMyOleClientItem(pDoc);
         ASSERT_VALID(pItem);

         // Get Class ID for Excel sheet
         // This is used in creation
         CLSID clsid;
         if(FAILED(::CLSIDFromProgID("Excel.Sheet",&amp;clsid)))
           AfxThrowMemoryException();

         // Create the Excel embedded item
         if(!pItem-&gt;CreateNewItem(clsid))
           AfxThrowMemoryException();  // any exception will do
         ASSERT_VALID(pItem);

         // Launch the server to edit the item.
         pItem-&gt;DoVerb(OLEIVERB_SHOW, this);

         ASSERT_VALID(pItem);

         // As an arbitrary user interface design, this sets the
         // selection to the last item inserted.

         // TODO: reimplement selection as appropriate for your
         // application

         m_pSelection = pItem;   // set selection to last inserted item
         pDoc-&gt;UpdateAllViews(NULL);
     }
     CATCH(CException, e)
     {
         if (pItem != NULL)
         {
           ASSERT_VALID(pItem);
           pItem-&gt;Delete();
         }
         AfxMessageBox(IDP_FAILED_TO_CREATE);
     }
     END_CATCH

     EndWaitCursor();
   }

</PRE>NOTE: When using Visual C++ versions 5.0, 4.0, and 4.1, you need to
typecast the 'Excel.Sheet' argument in the previous code sample with the
T2COLE macro. In order to use this macro, you need to #include "afxpriv.h"
in the view class's implementation file. Also, add the macro
<PRE>'USES_CONVERSION' in the try block before the following line (which shows
</PRE>the T2COLE macro added):
<P>
<PRE>   if (FAILED(::CLSIDFromProgID(T2COLE("Excel.Sheet"),&amp;clsid)))
      AfxThrowMemoryException();
 mikefra 9/25/97
</PRE> 
<PRE>Keywords          : MfcOLE kbcode
Technology        : kbMfc kbole
Version           : WINDOWS:1.5,1.51,1.52;WINDOWS NT:2.0,2.1,2.2,4.0,4.1,5.0;
Platform          : NT WINDOWS</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
