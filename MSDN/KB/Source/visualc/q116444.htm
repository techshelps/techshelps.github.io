

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: _strtod Fails with Buffer &gt;100 Bytes with /AL and /FPa </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q116444">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1994/06/20">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  When a source module that makes a call to _strtod() is compiled using /FPa (alternate math library) and /AL (large memory model), and then is run, the _strtod() call fails if the size of the string sent as the first parameter is greater than 100 by...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGI,QAUD,QAIF,QAKP,QANY,QDL9,QBWQ,QBWO,QBWN,QBVV,QBFY,QALZ,QALG,QBCT,QBCF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: _strtod Fails with Buffer &gt;100 Bytes with /AL and /FPa</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q116444</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00 1.50
WINDOWS
kbprg kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>The C Run-time (CRT), included with:
<P>
<P><PRE>    - Microsoft Visual C++ for Windows, versions 1.0 and 1.5
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When a source module that makes a call to _strtod() is compiled using
/FPa (alternate math library) and /AL (large memory model), and then is
run, the _strtod() call fails if the size of the string sent as the first
parameter is greater than 100 bytes.
<P>
<P><h2>CAUSE</h2>
 
<P>
There is call to strlen() in _strtod(), which makes a floating-point
call. The result from the call is not correct.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug with Visual C++ for Windows,
versions 1.0 and 1.5. We are researching this problem and will post new
information here in the Microsoft Knowledge Base as it becomes available.
<P>
This is not a problem with the 32-bit compilers.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<PRE>/* Compile options needed: /AL /FPa
*/

   #include &lt;stdio.h&gt;
   #include &lt;stdlib.h&gt;
   #include &lt;string.h&gt;

   #define BUFFER_SIZE 0x4000

   int main (void)
   {
       char        *pBuffer = new char [BUFFER_SIZE];
       char        *pBuf, *pBuf2, *pNext = "0";
       unsigned    uCount;

       for (uCount = 1, pBuf = pBuffer;
            uCount &lt; BUFFER_SIZE;
            ++uCount, ++pBuf)
       {
          strcpy (pBuf, pNext);
          putchar (*pNext);

// Fill the buffer with ","s to illustrate the fact that
// strtod does not have to parse a long number; it only has to
// parse a "0" and ignore the ","s, but it still fails.

          pNext = ",";

          strtod (pBuffer, &amp;pBuf2);
          if (pBuf2 == pBuffer)
          {
             printf ("\nStrtod failed at character %u\n", uCount);
             delete pBuffer;
             return 1;
          }
       }

       printf ("\n Strtod copied %u chars successfully\n", uCount);
       delete pBuffer;
       return 0;
   }
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 1.50<BR>
KBCategory: kbprg kbbuglist<BR>
KBSubcategory: CRTIss<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
