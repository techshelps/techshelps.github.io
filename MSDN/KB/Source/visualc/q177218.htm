

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Return Array to VB from VC++ DLL or OLE Server </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q177218">
<META NAME="KBModify" CONTENT="1997/11/25">
<META NAME="KBCreate" CONTENT="1997/11/24">
<META NAME="Keywords" CONTENT="VBKBAutomation">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  This article illustrates how to return an array from a Microsoft Visual C++ DLL or OLE server using the ColeSafeArray class included with the Microsoft Foundation Classes (MFC).  MORE INFORMATION  You can receive, manipulate, and return Microsoft V...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QATJ,QA28,QBS0,QAUD,QAH4,QAAP,QA56,QA55,QBFY,QAB4,QAY2,QAMA,QBWP,QA9Q,QDNN V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Return Array to VB from VC++ DLL or OLE Server</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 25, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q177218</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual C++, 32-bit Editions, versions 4.0, 5.0 on the
   following platforms:
   - Windows NT
   - Windows 95
<LI>Microsoft Visual Basic Learning, Professional, and Enterprise Editions
   for Windows, version 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article illustrates how to return an array from a Microsoft Visual C++
DLL or OLE server using the ColeSafeArray class included with the Microsoft
Foundation Classes (MFC).
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
You can receive, manipulate, and return Microsoft Visual Basic arrays in
Microsoft Visual C++ with an understanding of safe arrays. A safe array is
an array that contains information about the number of dimensions and the
bounds of its dimensions. Because Microsoft Visual Basic natively uses
these types of arrays, you have to construct safe arrays of the data you
want to pass.
<P>
Normally, this is a difficult task, and hard to manage from Microsoft
Visual C++. However, this task is easier if you use the ColeSafeArray class
included with the Microsoft Foundation Classes. The following DLL routine
demonstrates how to use this class to return a 10x10 two-dimensional array
of doubles from a DLL.
<P>
NOTE: The same code and principles in this sample DLL also apply to an OLE
server.
<P>
<P><h3>Steps to Create the Visual C++ DLL</h3>
 

<OL><P><LI>Click New on the File menu and choose MFC AppWizard (dll).

<P><LI>Name the project "MyDll."

<P><LI>Add the following DLL routine to your main .cpp file (MyDll.cpp):
<P>
<P><PRE>      VARIANT _stdcall retVariantArray(void) {
<PRE></PRE>         COleSafeArray saRet;
         DWORD numElements[] = {10, 10}; // 10x10

         // Create the safe-array...
         saRet.Create(VT_R8, 2, numElements);

         // Initialize it with values...
         long index[2];
         for(index[0]=0; index[0]&lt;10; index[0]++) {
            for(index[1]=0; index[1]&lt;10; index[1]++) {
               double val = index[0] + index[1]*10;
               saRet.PutElement(index, &amp;val);
            }
         }

         // Return the safe-array encapsulated in a VARIANT...
         return saRet.Detach();
      }

</PRE><P><LI>Add the following line to the end of your .def file (MyDll.def):
<P>
<P><PRE>      retVariantArray
</PRE>
<P><LI>Build the DLL.
<P>
</OL><h3>Steps to Create the Visual Basic Program That Uses the DLL</h3>
 

<OL><P><LI>Start Visual Basic 5.0, and then start a new Standard EXE project.

<P><LI>Add a Command button to Form1.

<P><LI>Add the following code to Form1:
<P>
<P><PRE>      Private Declare Function retVariantArray Lib "c:\mydll.dll" _
<PRE></PRE>         () As Variant

      Private Sub Command1_Click()
         Dim myarr As Variant

         myarr = retVariantArray

         MsgBox "myArr(1,1) = " &amp; myarr(1, 1)
      End Sub

</PRE><P><LI>Run the program and click Command1. A message box displays the text
   "myArray(1,1) = 11."
<P>
<P>
</OL><h3>Other Notes</h3>
 
<P>
Run-time error 5 "Invalid Procedure Call" or run-time error 11 "Divide by
zero" may occur when performing this task.
<P>
Error 5 often occurs when calling into an OLE server whose method was not
properly created. To correct this error, re-create this method using
ClassWizard, choose the appropriate options, and then cut and paste
the code into your new function.
<P>
If Error 11 occurs while attempting to access elements in your array,
it may indicate that you did not construct the safe array correctly. It
might not have been completely initialized or it could have been corrupted
from logical errors in your code. To resolve this error, verify that you
are not indexing the array past its bounds, or overwriting memory.
<P>
<P><h2>REFERENCES</h2>
 
<P>
More information about the ColeSafeArray class, or VARIANT types, is
included in the Microsoft Visual C++ online help, and/or MSDN.
 
<PRE>Keywords          : VBKBAutomation
Technology        : kbole
Version           : WINDOWS:4.0,5.0; WINNT:4.0,5.0
Platform          : WINDOWS winnt
Issue type        : kbhowto
Solution Type     : kbsample</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 25, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
