

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: getenv() Fails when Called in Ctor for QuickWin App </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q116213">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1994/06/13">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Calling the getenv() function inside a constructor for a global object may not work for a QuickWin Application. Using the same code for an MS-DOS application works properly.  RESOLUTION  A possible workaround is to move the call to getenv() out of ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGI,QAH4,QAJQ,QAMB,QAMA,QAJH,QAIF,QDKW,QA4Q,QALZ,QAOX,QAKP,QDIX,QBV8,QAG0 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: getenv() Fails when Called in Ctor for QuickWin App</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q116213</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00 1.50
MS-DOS
kbprg kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>The C Run-time (CRT), included with:
   Microsoft Visual C++ for Windows, versions 1.0 and 1.5
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Calling the getenv() function inside a constructor for a global object may
not work for a QuickWin Application. Using the same code for an MS-DOS
application works properly.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
A possible workaround is to move the call to getenv() out of the
constructor and into a member function. Call this member after stepping
inside main(). (See comments in the sample code below.)
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the products listed at the
beginning of this article. We are researching this bug and will post new
information here in the Microsoft Knowledge Base as it becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The sample code below demonstrates how the same code works for an MS-DOS
application but fails in a QuickWin Application.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>/* Compile options needed for MS-DOS: cl /AM /D_DOS
   Compile options needed for QuickWin: standard
*/

   #include &lt;iostream.h&gt;
   #include &lt;stdlib.h&gt;

   class Enviro
   {
   public:
     Enviro();
     void PrintEnviro()
     { cout &lt;&lt; s_ &lt;&lt; endl; }

     // void MyGetEnv()          // uncomment as workaround
     // { s_ = getenv("PATH"); }

     static int RefCount;
   private:
     char *s_;
   };

   Enviro::Enviro()
   {
     RefCount++;
     s_ = getenv("PATH");       // enviro1 fails here
     if (!s_)                    // enviro2 works here
       s_ = "Not Found";
   }

   int Enviro::RefCount=0;

   static Enviro enviro1;       // enviro1 ctor is called before main()

   void main(int argc, char *argv[], char *envp[])
   {
      //enviro1.MyGetEnv();  // uncomment as workaround

     Enviro enviro2;          // enviro2 ctor is called after main()

     cout &lt;&lt; "print: enviro2" &lt;&lt; endl;
     enviro2.PrintEnviro();

     cout &lt;&lt; "print: enviro1" &lt;&lt; endl;
     enviro1.PrintEnviro();
   }
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 1.50 runtime<BR>
KBCategory: kbprg kbbuglist<BR>
KBSubcategory: CRTIss<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
