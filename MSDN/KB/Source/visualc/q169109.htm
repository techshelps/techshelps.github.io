

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Parse Maps Do Not Handle Multi-select List Boxes </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q169109">
<META NAME="KBModify" CONTENT="1997/07/31">
<META NAME="KBCreate" CONTENT="1997/05/27">
<META NAME="Keywords" CONTENT="MfcISAPI MfcMisc kbcode kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  MFC ISAPI extension cannot handle a multiple-select list box on a form. The following error message may appear in Internet Explorer 3.0 when multiple items are selected:     BAD REQUEST  Your client sent a request that this server didn't understand...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGJ,QBVR,QAUJ,QAH4,QAGI,QBV8,QACE,QA2Q,QAB4,QARM,QDNU,QBVV,QA9N,QASB,QAKD V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Parse Maps Do Not Handle Multi-select List Boxes</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 31, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q169109</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
   - Microsoft Visual C++, 32-bit Editions, versions 4.1, 4.2, 5.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
MFC ISAPI extension cannot handle a multiple-select list box on a form. The
following error message may appear in Internet Explorer 3.0 when multiple
items are selected:
<P>
<PRE>   BAD REQUEST

</PRE>Your client sent a request that this server didn't understand.
<P>
<P><h2>CAUSE</h2>
 
<P>
MFC ISAPI parse maps are not designed to handle multiple-select list boxes.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
One way of handling multiple selections is to override CallFunction and do
the all the parsing in CallFunction without calling the base class. This
involves writing the code for parsing the input from the browser.
<P>
Another method involves modifying the input to a format that can be handled
by the parse maps. The sample code in the MORE INFORMATION section of this
article overrides CallFunction and modifies the input in a way that the
parse maps can handle.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
If you select multiple items in the list box, the following is sent when
you use the HTML in the Sample Code section:
<P>
<PRE>   MFCIsapiCommand=WorksOn&amp;Name=ssm&amp;Days=Monday&amp;Days=Tuesday

</PRE>The code in CallFunction below modifies the input as follows:
<P>
<PRE>   MFCIsapiCommand=WorksOn&amp;Name=ssm&amp;Days=Monday,Tuesday

</PRE>In the parse map function, the variable associated with the list box
contains a string with all the selected items in the list box, delimited by
<PRE>','. If a comma is not a good delimiter then change the line:

   #define DELIMITER  ','

</PRE>and specify a different character. Note that &amp;, ?, =, + have special
meanings and should not be used as delimiters.
<P>
<P><h3>Sample Code</h3>
 
<P>
HTML Form that calls the sample dll:
<P>
<PRE>   &lt;HTML&gt;

   &lt;form action="/scripts/MyIsapi.dll?" method="Post"&gt;
   &lt;input type=hidden Name=MFCIsapiCommand Value=WorksOn&gt;
   Name &lt;input name="Name" &gt;
   &lt;p&gt;
   Works on
   &lt;SELECT MULTIPLE NAME="Days"&gt;
   &lt;OPTION VALUE=""&gt;NONE
   &lt;OPTION&gt;Sunday
   &lt;OPTION&gt;Monday
   &lt;OPTION&gt;Tuesday
   &lt;OPTION&gt;Wednesday
   &lt;OPTION&gt;Thursday
   &lt;OPTION&gt;Friday
   &lt;OPTION&gt;Saturday
   &lt;/SELECT&gt;
   &lt;p&gt;
   &lt;input type=submit&gt;
   &lt;/form&gt;

   &lt;/HTML&gt;

</PRE>MFC ISAPI PARSE_MAP entries and function for the above:
<P>
<PRE>   ON_PARSE_COMMAND(WorksOn, CMyIsapiExtension, ITS_PSTR ITS_PSTR)
   ON_PARSE_COMMAND_PARAMS("Name=~ Days=~")

   void CFirstISAPIExtension::WorksOn (CHttpServerContext* pCtxt,
       LPCTSTR Name, LPTSTR Days)
   {
       StartContent(pCtxt);
       *pCtxt &lt;&lt; Name &lt;&lt; " works on the following Days : &lt;p&gt;" &lt;&lt; Days;
       EndContent(pCtxt);

   }

</PRE>The code above generates the error message when more than one day is
selected in the list box.
<P>
The following override of CallFunction modifies the input so that the parse
maps can handle multiple selections:
<P>
<PRE>   #define DELIMITER ","

   int CMyIsapiExtension::CallFunction(CHttpServerContext* pCtxt,
       LPTSTR pszQuery, LPTSTR pszCommand)
   {
       LPTSTR queryIn = pszQuery;
       LPTSTR queryOut = new TCHAR[_tcslen(queryIn) + sizeof(TCHAR)];
       LPTSTR pOut = queryOut;
       *pOut = NULL;

       LPTSTR pIn = queryIn;
       // Copy everything till the first ?
       if (_tcschr(pIn, '?'))
       {
           pIn = _tcschr(pIn, '?');
           pIn++;
           memcpy(pOut, queryIn, (pIn - queryIn)); //copy till the ?
           pOut += (pIn - queryIn);
           *pOut = NULL;
       }

       LPTSTR lastParameter = NULL;
       int nLastParameterLen = 0;

       while (pIn &amp;&amp; *pIn)
       {
           // Is there a '=' in the input string
           LPTSTR q = _tcschr(pIn, '=');
           if (!q)
           {
               // No. Copy till end of the buffer and break out
               // No more parameter/value pairs.
               _tcscpy(pOut, pIn);
               break;
           }

           int paramLen = (q - pIn);

           // Is the last parameter name the same as the present
           // parameter name?
           if (paramLen &amp;&amp;
               nLastParameterLen == paramLen &amp;&amp;
               _tcsncmp(lastParameter, pIn, nLastParameterLen) == 0)
           {
               // Yes! replace &amp; with , and just copy the value
               // of the parameter.
               q++;
               if (*q)
               {
                   LPTSTR r = _tcschr(q, '&amp;');
                   *(pOut - 1) = ',';
                   //copy the value
                   if (r)
                   {
                       _tcsncpy(pOut, q, (r - q) + 1);
                       pOut+=(r - q) + 1;
                       pIn = r + 1;
                   }
                   else
                   {
                       _tcscpy(pOut, q);
                       break;
                   }
               }
               else
               {
                   *(pOut - 1) = ',';
                   *pOut = NULL;
                   break;
               }
           }
           else
           {
               nLastParameterLen = paramLen;
               lastParameter = pIn;

               q = _tcschr(pIn, '&amp;');
               if (q)
               {
                   if (paramLen)
                   {
                       _tcsncpy(pOut, pIn, (q - pIn) + 1);
                       pOut += (q - pIn) + 1;
                   }
                   pIn = q + 1;
               }
               else
               {
                   if (paramLen)
                   {
                       _tcscpy(pOut, pIn);
                       break;
                   }
                   else
                   {
                       if (pOut == queryOut)
                           *pOut = NULL;
                       else
                           *(pOut - 1) = NULL;
                       break;
                   }
               }
           }
       }

       pszQuery = queryOut;

       int nRet = CHttpServer::CallFunction(pCtxt,
           pszQuery, pszCommand);

       delete []queryOut;

       return nRet;
   }

</PRE>The following modification to the WorksOn function prints the days on
different lines:
<P>
<PRE>   void CMyIsapiExtension::WorksOn (CHttpServerContext* pCtxt,
       LPCTSTR Name, LPTSTR Days)
   {
       StartContent(pCtxt);
       *pCtxt &lt;&lt; Name &lt;&lt; " works on the following Days&lt;p&gt;";
       LPTSTR p = (LPTSTR)Days;
       while (p)
       {
           LPCTSTR q = p;
           p = _tcschr(p, ',');
           if (p)
               *p++ = NULL;

           *pCtxt &lt;&lt; q &lt;&lt; "&lt;p&gt;";
       }

       EndContent(pCtxt);

   }</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: multiple select listbox list box mfcisapi form<BR>
Keywords          : MfcISAPI MfcMisc kbcode kbprg<BR>
Technology        : kbMfc kbInetDev<BR>
Version           : 4.1 4.2 5.0<BR>
Platform          : NT WINDOWS<BR>
Issue type        : kbprb<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 31, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
