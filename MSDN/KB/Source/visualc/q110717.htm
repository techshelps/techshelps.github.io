

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: Incorrect C4050 Warning When Using Function Pointers </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q110717">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1994/01/27">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Attempting to assign the address of a function marked as __loadds or __export to a correctly declared function pointer will cause the compiler to incorrectly generate a C4050 warning when the following conditions are true:   - The code being compil...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB4,QA4Q,QAY5,QBFY,QA3P,QAH4,QBV8,QAB9,QBXT,QA5V,QAO3,QAO2,QAOT,QAIB,QBXS V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: Incorrect C4050 Warning When Using Function Pointers</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q110717</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
7.00   | 1.00 1.50
MS-DOS | WINDOWS
kbtool kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft C/C++ Compiler (CL.EXE), included with:
<P>
<P><PRE>    - Microsoft C/C++ for MS-DOS, versions 7.0
    - Microsoft Visual C++ for Windows, versions 1.0 and 1.5
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Attempting to assign the address of a function marked as __loadds or
__export to a correctly declared function pointer will cause the
compiler to incorrectly generate a C4050 warning when the following
conditions are true:

<UL><LI>The code being compiled is in a .C file
<LI>Warning level 4 of the compiler is being used
<P>
</UL>The complete C4050 warning message generated is:
<P>
<PRE>   warning C4050: 'argument' : different code attributes

</PRE>The sample code shown below illustrates this problem.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To avoid the C4050 warning, use one of the following methods:

<UL><LI>Provide a cast when assigning the address of the function to the
   function pointer
<P>
   -or-

<LI>Compile at warning level 3 with the /W3 compiler switch
<P>
   -or-

<LI>Disable the C4050 warning with the following #pragma warning
   directive:
<P>
   #pragma warning ( disable: 4050 )
<P>
</UL><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the products listed at the
beginning of this article. We are researching this bug and will post new
information here in the Microsoft Knowledge Base as it becomes available.
<P>
This is not a problem in the 32-bit compiler.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
NOTE: The C4050 warning message is not generated when code matching
the scenario listed above is located in a .CPP file.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>/* Compile options needed: /W4 /c
</PRE>*
*  Compile this sample code as a .C file
<PRE>*/

#include &lt;windows.h&gt;

void Function();

int FAR PASCAL __loadds CallbackProc1(int i) { return i; }
</PRE>typedef int (FAR PASCAL __loadds *FNPROC1)(int);
<P>
<PRE>int FAR PASCAL __export CallbackProc2(int i) { return i; }
</PRE>typedef int (FAR PASCAL __export *FNPROC2)(int);
<P>
<PRE>/* Uncomment the following line to disable the C4050 warning
*/

/*
</PRE>#pragma warning ( disable: 4050 )
<PRE>*/

void Function()
</PRE>{
<PRE>  /* Function pointer variables */
  int (FAR PASCAL *lpfnProc1)(int);
  int (FAR PASCAL __export *lpfnProc2)(int);

  lpfnProc1 = CallbackProc1;          /* This line generates C4050 */
  lpfnProc1 = (FNPROC1)CallbackProc1; /* No warning on this line   */

  lpfnProc2 = CallbackProc2;          /* This line generates C4050 */
  lpfnProc2 = (FNPROC2)CallbackProc2; /* No warning on this line   */
}
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 1.50 7.00 8.00 8.00c<BR>
KBCategory: kbtool kbbuglist<BR>
KBSubcategory: CLIss<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
