

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Smartptr Property in Interface Causes C2512 Error </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q168009">
<META NAME="KBModify" CONTENT="1997/12/18">
<META NAME="KBCreate" CONTENT="1997/05/02">
<META NAME="Keywords" CONTENT="VS97FixlistSP3 VS97FixlistSP2 VS97FixlistSP1">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The compiler may incorrectly issue error C2512 when a class has a _declspec(property) member. Having a _declspec(property) member is common when you import type-libraries with #import. In addition to error C2512, warnings C4510, C4511, C4512, C4513...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB4,QAUD,QBVV,QBBS,QAPN,QAAP,QABA,QDO3,QAR4,QA56,QA55,QAEQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Smartptr Property in Interface Causes C2512 Error</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q168009</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual C++, 32-bit Editions, version 5.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The compiler may incorrectly issue error C2512 when a class has a
_declspec(property) member. Having a _declspec(property) member is common
when you import type-libraries with #import. In addition to error C2512,
warnings C4510, C4511, C4512, C4513 and C4610 may also be generated.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
This can be avoided when doing #import by using the attributes
raw_interfaces_only or no_native_types. Unfortunately, this also turns off
major functionality.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. This bug has been corrected in Visual
Studio 97, Service Pack 1.
<P>
For additional information about the Visual Studio 97 Service Pack 1,
please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../VSTUDIO/Q170365.htm">Q170365</A></B>
   TITLE     : INFO: Visual Studio 97 Service Packs - What, Where, and Why

</PRE><h2>MORE INFORMATION</h2>
 
<P>
The first sample below causes the compiler to give the following messages
when compiled at warning level 4:
<P>
<PRE>   warning C4510: 'B' : default constructor could not be generated
   warning C4610: struct 'B' can never be instantiated - user defined
                  constructor required
   error C2512: 'B' : no appropriate default constructor available

</PRE><h3>Sample Code A</h3>
 
<P>
<PRE>   // Compile option needed /W4
   class A
   {  A();
   };
   struct B
   {  __declspec( property (get=getA)) A a;
      A getA();
   };
   void f()
   {
      B b;
   }

</PRE>The second sample generates the following errors:
<PRE>   warning C4510: 'IA' : default constructor could not be generated
   warning C4511: 'IA' : copy constructor could not be generated
   warning C4512: 'IA' : assignment operator could not be generated
   warning C4513: 'IA' : destructor could not be generated
   warning C4610: struct 'IA' can never be instantiated - user defined
                  constructor required
   warning C4510: 'CA' : default constructor could not be generated
   warning C4511: 'CA' : copy constructor could not be generated
   warning C4512: 'CA' : assignment operator could not be generated
   warning C4513: 'CA' : destructor could not be generated
   warning C4610: class 'CA' can never be instantiated - user defined
                  constructor required
   error C2512: 'CA' : no appropriate default constructor available

</PRE><h3>Sample Code B</h3>
 
<P>
<PRE>   // custom.idl
   // MIDL options: &lt;none&gt;
   #include &lt;olectl.h&gt;
   #include &lt;idispids.h&gt;
   #ifndef DO_NO_IMPORTS
   import "objidl.idl";
   import "oleidl.idl";
   import "oaidl.idl";
   import "ocidl.idl";
   #endif
   interface IB;
   [ object, uuid(27979FD1-E576-11cf-BFAC-00A02437A6A0) ]
   interface IA : IUnknown
   {
       [propput, id(1)] HRESULT Interface([in] IB* pB);
       [propget, id(1)] HRESULT Interface([out, retval] IB** ppB);
   }
   [ object, uuid(27979FD0-E576-11cf-BFAC-00A02437A6A0) ]
   interface IB : IUnknown
   {
       [id(5)] HRESULT Method([in] int in1);
   }
   [ uuid(596DBF82-2F2D-11D0-A537-00A02437A6A0), version(1.0) ]
   library Custom
   {
       importlib(STDOLE_TLB);
       importlib(STDTYPE_TLB);
       interface IA;
       interface IB;
   }

   // test.cpp
   // compile options: /GX /W4 /c
   #import "Custom.tlb" no_namespace
   class CA : IA
   {
      STDMETHOD_(ULONG, AddRef)() { return 0; }
      STDMETHOD_(ULONG, Release)() { return 0; }
      STDMETHOD(QueryInterface)(REFIID,  LPVOID* ) { return E_NOTIMPL; }
      // ICustom methods
      STDMETHOD(put_Interface)(IB *) { return E_NOTIMPL; }
      STDMETHOD(get_Interface)(IB **) { return E_NOTIMPL; }
   };
   class CB
   {
      CB(){
         CA* pA = new CA;
          if (pA)
            delete pA;
      }
   };
</PRE> 
<PRE>Keywords          : VS97FixlistSP3 VS97FixlistSP2 VS97FixlistSP1
Version           : 5.0
Platform          : NT WINDOWS
Issue type        : kbbug
Solution Type     : kbfix kbservicepack</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
