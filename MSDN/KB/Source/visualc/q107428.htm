

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Extra New Line Added to Debug Output in Visual Debugger </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q107428">
<META NAME="KBModify" CONTENT="1997/09/16">
<META NAME="KBCreate" CONTENT="1993/11/18">
<META NAME="Keywords" CONTENT="WBDebug kbbuglist kbfasttip kbfixlist kbtool">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  When using the Visual Workbench debugger, a new line is inserted in the debugging output window every time debugging information is output through the CDumpContext insertion operator or OutputDebugString(). This interferes with formatting done for ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA5A,QBXT,QA5V,QAIB,QAGI,QA56,QA55,QAOX,QAH4,QAR4,QAHT,QACI,QAY4,QAUS,QAIF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Extra New Line Added to Debug Output in Visual Debugger</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 16, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q107428</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00
WINDOWS
kbtool kbfixlist kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>The Visual Workbench Integrated Debugger
<P><PRE>    - Microsoft Visual C++ 32-bit Edition, version 1.0
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When using the Visual Workbench debugger, a new line is inserted in
the debugging output window every time debugging information is output
through the CDumpContext insertion operator or OutputDebugString().
This interferes with formatting done for the debug output.
<P>
<P><h2>CAUSE</h2>
 
<P>
A new line is inserted by the debugger after every call to the Windows
3.1 application programming interface (API) function
OutputDebugString(). In the Microsoft Foundation Classes (MFC), the
insertion operator (&lt;&lt;) for CDumpContext eventually maps to a call to
OutputDebugString(), so every invocation of &lt;&lt; for a CDumpContext
object also introduces a new line in the output window.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
The following are three suggested workarounds:

<UL><LI>Use the WinDbg debugger that ships with the Microsoft Win32 Software
   Development Kit (SDK) for Windows NT. WinDbg does not insert
   uncalled for new lines into the debugging output.

<LI>Consolidate debugging output into strings that can be displayed with
   a single call to OutputDebugString or with a single insertion into
   the dump context.

<LI>Add additional lines of debugging information to indicate the
   beginning and end of a sequence of debugging output. For example,
<P>
<PRE>   void CPerson::Dump( CDumpContext &amp;dc ) const
    {
       dc &lt;&lt; "Begin dump of CPerson object";  // identify dump start
       CObject::Dump( dc );
       dc &lt;&lt; "Name: " &lt;&lt; m_name;
       dc &lt;&lt; "Age: " &lt;&lt; m_years;
       dc &lt;&lt; "End dump of CPerson object";    // identify dump end
    }

</PRE></UL><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the products listed at the
beginning of this article. This problem was corrected in Visual C++ 2.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following code fragment demonstrates the problem that occurs when
calling OutputDebugString directly. The output that would normally
appear on the same line actually displays over three lines:
<P>
<P><h3>Code</h3>
 
<P>
<PRE>   OutputDebugString("This");
   OutputDebugString("output");
   OutputDebugString("takes three lines.\n");

</PRE><h3>Output</h3>
 
<P>
<PRE>   This
   output
   takes three lines.

</PRE>The code fragment below demonstrates how each insertion of debugging
text into the afxDump context causes a new line to appear in the
output window:
<P>
<PRE>   void CPerson::Dump( CDumpContext &amp;dc ) const
   {
      CObject::Dump( dc );
      dc &lt;&lt; m_name &lt;&lt; " is ";
      dc &lt;&lt; m_years &lt;&lt; " years old.\n";
   }

</PRE>A call to myPerson.Dump(afxDump) produces the following output in the
Visual Workbench's output window:
<P>
<PRE>   a
   CObject
    at
   $18FC80

   FirstName LastName
    is
   30
    years old.

</PRE>The following is what is desired:
<P>
<PRE>   a CObject at $3917477E FirstName LastName is 30 years old.
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: newline afxDump 1.00 1.10<BR>
KBCategory: kbtool kbfixlist kbbuglist kbfasttip<BR>
KBSubcategory: WBDebug<BR>
Keywords          : WBDebug kbbuglist kbfasttip kbfixlist kbtool<BR>
Technology        : kbMfc<BR>
Version           : 1.00<BR>
Platform          : WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 16, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
