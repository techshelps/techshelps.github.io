

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Work With  Invalid Rectangle When Window Is Resized </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q177352">
<META NAME="KBModify" CONTENT="1997/11/26">
<META NAME="KBCreate" CONTENT="1997/11/25">
<META NAME="Keywords" CONTENT="MfcUI">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  This article describes how to work with the invalidated rectangle that is created when a window is resized.  MORE INFORMATION  To optimize painting in an MFC program, you can usually call GetClipBox() in your view's OnDraw() function to get the inv...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAUD,QABO,QAUJ,QAM7,QAK4,QAGQ,QDL9,QBWQ,QBWO,QBWN,QDKW,QARM,QALW,QBXF,QAJQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Work With  Invalid Rectangle When Window Is Resized</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 26, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q177352</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC) included with:
<P><PRE>    - Microsoft Visual C++, 32-bit Editions, versions 4.0, 4.1, 4.2, 5.0
    - Microsoft Visual C++ for Windows, 16-bit edition, version 1.52
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article describes how to work with the invalidated rectangle that is
created when a window is resized.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To optimize painting in an MFC program, you can usually call GetClipBox()
in your view's OnDraw() function to get the invalid rectangle and paint
only in this area. However, if the user resizes the window, GetClipBox() l
always returns the whole client area. This happens because the "window
class" used for CView and CFrameWnd has the styles CS_VREDRAW and
CS_HREDRAW. These styles cause the whole window to be invalidated whenever
the window is resized. To work around this problem, you have to register
your own window class for the view and the frame which do not have the
class styles of CS_VREDRAW and CS_HREDRAW. You can register the class name
in InitApplication() and use the class name in PreCreateWindow().
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   class CTestApp : public CWinApp
   {
   public:
      CString m_strMyClassName;
   ...
   }

   BOOL CTestApp::InitApplication()
   {
   // Register our own class with the same attributes as AfxFrameOrView"
   // refer to MFC Tech Note 1: Window Class Registration for more
   // information.
         m_strMyClassName = AfxRegisterWndClass (0, ::LoadCursor (NULL,
                            IDC_ARROW), (HBRUSH)(COLOR_WINDOW+1),
                            LoadIcon(AFX_IDI_STD_FRAME));

         return CWinApp::InitApplication();
   }


   BOOL CMainFrame::PreCreateWindow(CREATESTRUCT&amp; cs)
   {
         CTestApp* pApp = (CTestApp*)AfxGetApp ();
         //  Change the class name to our own name.
         cs.lpszClass = (const char *)(pApp-&gt;m_strMyClassName);

         return CFrameWnd::PreCreateWindow(cs);
   }


   BOOL CTestView::PreCreateWindow(CREATESTRUCT&amp; cs)
   {
         CTestApp* pApp = (CTestApp*)AfxGetApp ();
         //  Change the class name to our own name.
         cs.lpszClass = (const char *)(pApp-&gt;m_strMyClassName);

         return CView::PreCreateWindow(cs);
   }

</PRE> 
<PRE>Keywords          : MfcUI
Version           : WINDOWS:1.52; WINNT:4.0,4.1,4.2,5.0
Platform          : WINDOWS winnt
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 26, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
