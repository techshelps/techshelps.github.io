

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to View Multiple Records of CRecordset with GRID.VBX </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q121287">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1994/09/30">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  You can use the GRID.VBX custom control to display data in a series of rows and columns by using various properties of the Grid control and displaying the contents of a CRecordset object in a Grid.  MORE INFORMATION  The sample code below uses the ...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA5V,QAMB,QA7O,QATX,QAMN,QAB5,QARR,QAOE,QAH4,QA4Q,QDPB,QAPF,QBXS,QAUY,QAPN V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to View Multiple Records of CRecordset with GRID.VBX</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q121287</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.50
WINDOWS
kbprg kbcode
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC), included with:
   Microsoft Visual C++ for Windows, version 1.5
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
You can use the GRID.VBX custom control to display data in a series of rows
and columns by using various properties of the Grid control and displaying
the contents of a CRecordset object in a Grid.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The sample code below uses the Student table of the "Student Registration"
Data Source that is used by the Enroll tutorial in the Database Classes
manual. You will need to modify portions of the code for use with your own
custom data source.
<P>
For more information on using the GRID.VBX custom control, see MFC TechNote
#27, the VBChart sample, and query on the following words in the Microsoft
Knowledge Base:
<P>
<PRE>   GRID.VBX and SAMPLE

</PRE><h3>Sample Code</h3>
 
<P>
<PRE>void FillGridControl(CVBControl* pGrid, CMyRecordset* pSet)
</PRE>{
<PRE>   #define TWIPS_PER_INCH  1440

   // These are the arbitrary widths
   // of the columns of the recordset in twips
   #define STUDENTID_WIDTH 1000
   #define NAME_WIDTH      2000
   #define GRADYEAR_WIDTH  1000

   char buf[80];

   // calculate number of records in the record set
   while (!pSet-&gt;IsEOF()) pSet-&gt;MoveNext();
   int nRows = (int)pSet-&gt;GetRecordCount();

   // set # of rows and columns for the Grid control
   pGrid-&gt;SetNumProperty("Cols", 4);
   pGrid-&gt;SetNumProperty("Rows", nRows + 1);

   // set height and width of grid control
   CDC* pDC = pGrid-&gt;GetParent()-&gt;GetDC();
   pGrid-&gt;SetNumProperty("Height",
         6 * (1 + MulDiv((int)pGrid-&gt;GetNumProperty("RowHeight"),
         pDC-&gt;GetDeviceCaps(LOGPIXELSY), TWIPS_PER_INCH)));
   pGrid-&gt;SetNumProperty("Width",
         5 + MulDiv((int)pGrid-&gt;GetNumProperty("ColWidth", 0) +
         STUDENTID_WIDTH + NAME_WIDTH + GRADYEAR_WIDTH,
         pDC-&gt;GetDeviceCaps(LOGPIXELSX), TWIPS_PER_INCH) +
         ::GetSystemMetrics(SM_CXVSCROLL));
   pGrid-&gt;GetParent()-&gt;ReleaseDC(pDC);

   // Initialize column headings
   pGrid-&gt;SetNumProperty("Row", 0);

   pGrid-&gt;SetNumProperty("Col", 1);
   pGrid-&gt;SetNumProperty("ColWidth", STUDENTID_WIDTH, 1);
   pGrid-&gt;SetStrProperty("Text", "StudentID");

   pGrid-&gt;SetNumProperty("Col", 2);
   pGrid-&gt;SetNumProperty("ColWidth", NAME_WIDTH, 2);
   pGrid-&gt;SetStrProperty("Text", "Name");

   pGrid-&gt;SetNumProperty("Col", 3);
   pGrid-&gt;SetNumProperty("ColWidth", GRADYEAR_WIDTH, 3);
   pGrid-&gt;SetStrProperty("Text", "GradYear");

   // Initialize row headings
   pGrid-&gt;SetNumProperty("Col", 0);
   for (int i = 1; i &lt;= nRows; i++)
   {
      wsprintf(buf, "%d", i);
      pGrid-&gt;SetNumProperty("Row", i);
      pGrid-&gt;SetStrProperty("Text", buf);
   }

   // Initialize cell contents
   pSet-&gt;MoveFirst();
   for (i = 1; i &lt;= nRows; i++)
   {
      pGrid-&gt;SetNumProperty("Row", i);

      pGrid-&gt;SetNumProperty("Col", 1);
      wsprintf(buf, "%ld", pSet-&gt;m_StudentID);
      pGrid-&gt;SetStrProperty("Text", buf);

      pGrid-&gt;SetNumProperty("Col", 2);
      pGrid-&gt;SetStrProperty("Text", pSet-&gt;m_Name);

      pGrid-&gt;SetNumProperty("Col", 3);
      wsprintf(buf, "%d", pSet-&gt;m_GradYear);
      pGrid-&gt;SetStrProperty("Text", buf);

      pSet-&gt;MoveNext();
   }

   pSet-&gt;MoveFirst();
</PRE>}
<P>
In this code, pGrid is a pointer to a CVBControl variable associated with
the control, and pSet is a pointer to an open CRecordset derived object
called CMyRecordset.
<P>
Remember to add the EnableVBX() function to the InitInstance function of
your CWinApp derived class.
<P>
You may also want to enable direct editing of the Grid control's fields
as demonstrated by the VBChart sample mentioned above.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 1.50 2.50 multirecord odbc<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: MfcDatabase<BR>
Keywords            : kb16bitonly<BR>
Technology          : kbMfc<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
