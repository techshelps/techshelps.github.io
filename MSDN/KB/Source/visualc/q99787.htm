

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: GP Fault from ON_REGISTERED_MESSAGE() in _USRDLL </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q99787 ">
<META NAME="KBModify" CONTENT="1997/09/16">
<META NAME="KBCreate" CONTENT="1993/06/08">
<META NAME="Keywords" CONTENT="kb16bitonly MfcDLL">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  In an application developed with the Microsoft Foundation Class Library, the ON_REGISTERED_MESSAGE() macro is used to process messages created with the RegisterWindowMessage() function. However, if a _USRDLL dynamic-link library (DLL) uses the ON_R...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAEV,QAH4,QBKN,QAYC,QAGI,QAR4,QABO,QA2O,QAY2,QAM1,QABA,QDL9,QBWQ,QBWO,QBWN V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: GP Fault from ON_REGISTERED_MESSAGE() in _USRDLL</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 16, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q99787 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC), included with:
<P><PRE>    - Microsoft Visual C++ for Windows, version 1.0
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
In an application developed with the Microsoft Foundation Class Library,
the ON_REGISTERED_MESSAGE() macro is used to process messages created with
the RegisterWindowMessage() function. However, if a _USRDLL dynamic-link
library (DLL) uses the ON_REGISTERED_MESSAGE() macro, the DLL generates a
general protection (GP) fault when it processes the message.
<P>
<P><h2>CAUSE</h2>
 
<P>
In the WINCORE.CPP file, on line 851, pMessageMap is declared as follows:
<P>
<PRE>   AFX_MSGMAP* pMessageMap;

</PRE>AFX_MSGMAP is a NEAR structure. Consequently, pMessageMap is a NEAR
pointer. Later in the WINCORE.CPP file, on line 914, the code uses the
_AFX_FP_SEG() macro to determine the segment in which the message map is
stored. Because pMessageMap is a NEAR pointer, _AFX_FP_SEG() gives an
incorrect result.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Modify the DLL code to remove the ON_REGISTERED_MESSAGE() macro and
add code that overrides WindowProc(). The WindowProc() function is
called for each message a window receives. In WindowProc(), test
the wMessage parameter to determine if it is the registered message
and process the message when it arrives. Call the base class
version of WindowProc() to dispatch other messages according to the
message map.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in the Microsoft
Foundation Class Library version 2.0 for Windows. The problem was
fixed and the ON_REGISTERED_MACRO now can be used in a USRDLL with
version 2.5 of the Microsoft Foundation Classes.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The code example below demonstrates the method described above. The
CMyWnd class is derived from CWnd.
<P>
<PRE>   UINT nRegMessage; // contains result from RegisterWindowMessage()

   ...

   LRESULT CMyWnd::WindowProc(UINT message, WPARAM wParam,
      LPARAM lParam)
   {
      // If the message is the registered message,
      // call the handler for that message
      if (message == nRegMessage)
         return OnMyRegisteredMessage(wParam, lParam);

      // Otherwise, call the base class version
      // of WindowProc to process other messages
      CWnd::WindowProc(message, wParam, lParam);
   }
</PRE> 
<PRE>Keywords          : kb16bitonly MfcDLL
Technology        : kbmfc
Version           : 1.0
Platform          : WINDOWS
Issue type        : kbbug
Solution Type     : kbfix</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 16, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
