

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SAMPLE: CMEMDC.EXE Memory Bitmap for Scrolling in CScrollV </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q151856">
<META NAME="KBModify" CONTENT="1997/07/10">
<META NAME="KBCreate" CONTENT="1996/05/30">
<META NAME="Keywords" CONTENT="kbsample MfcDocView MfcMisc kbfile kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Scrolling a complex image in a CScrollView can be very slow and jerky since OnDraw() is called for every WM_VSCROLL and WM_HSCROLL message. While only part of the window is invalidated and redrawn, the whole painting code gets called every time.  T...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPF,QAH4,QAY2,QBW6,QBRM,QAKJ,QAJ4,QAMR,QBWP,QAX6,QALQ,QABE,QAJQ,QAB2,QAU3 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>SAMPLE: CMEMDC.EXE Memory Bitmap for Scrolling in CScrollV</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q151856</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
4.00 4.10
WINDOWS NT
kbprg kbfile kbcode
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC), included with:
   - Microsoft Visual C++, 32-bit Edition, versions 4.0, 4.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Scrolling a complex image in a CScrollView can be very slow and jerky since
OnDraw() is called for every WM_VSCROLL and WM_HSCROLL message. While only
part of the window is invalidated and redrawn, the whole painting code gets
called every time.
<P>
This CMemDC sample demonstrates drawing to a memory bitmap instead of
the screen. The complex, time-consuming drawing code only needs to be
performed when the image changes and in OnInitialUpdate(). During
OnPaint(), the only work that needs to be done is a simple BitBlt from the
memory bitmap to the screen.
<P>
The sample code draws a complex pattern on its client area. A menu option
toggle allows the user to see the speed difference between using and not
using the offscreen bitmap. Printing and print preview are supported
through the normal printing code, and do not use the memory bitmap.
<P>
While CMemDC is a 32-bit sample, the same technique can be used in 16-bit
MFC applications.
<P>
The following file is available for download from the Microsoft
Software Library:
<P>
<PRE> ~ <A HREF="http://support.microsoft.com/download/support/mslfiles/Cmemdc.exe">Cmemdc.exe</A> <I>(size: 38424 bytes)</I> 

</PRE>For more information about downloading files from the Microsoft Software
Library, please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../zMiscellaneous/Q119591.htm">Q119591</A></B>
   TITLE     : How to Obtain Microsoft Support Files from Online Services

</PRE>NOTE: Use the -d option when running CMEMDC.EXE to decompress the file and
recreate the proper directory structure.
<P>
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
This sample is a MFC implementation of the Windows SDK sample, MemDC. For
more information, please see the following article in the Microsoft
Knowledge Base:
<P>
<PRE>   ARTICLE ID: <B><A HREF="../WIN32SDK/Q130805.htm">Q130805</A></B>
   TITLE     : SAMPLE: Drawing to a Memory Bitmap for Faster Performance
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbprg kbfile<BR>
KBSubcategory: MfcDocView MfcMisc kbsample<BR>
Additional reference words: 4.00 4.10<BR>
Keywords            : kbsample MfcDocView MfcMisc kbfile kbprg<BR>
Technology          : kbMfc<BR>
Version             : 4.00 4.10<BR>
Platform            : NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
