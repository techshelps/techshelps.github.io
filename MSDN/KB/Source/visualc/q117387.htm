

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: CScrollView::FillOutsideRect() Fills Incorrectly </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q117387">
<META NAME="KBModify" CONTENT="1997/09/18">
<META NAME="KBCreate" CONTENT="1994/06/27">
<META NAME="Keywords" CONTENT="MfcDocView kbbuglist kbfixlist kbprg">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  Calling CScrollView::FillOutsideRect() incorrectly fills the area outside of the scrolling area that belongs to the CScrollView.  CAUSE =====  In the file VIEWSCRL.CPP, in the Visual C++ MFC\SRC directory, FillOutsideRect() has the following implem...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAIB,QBCF,QAM3,QABK,QBCE,QANY,QBFY,QA56,QA55,QAR4,QAAP,QBWP,QANE,QADK,QAE8 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: CScrollView::FillOutsideRect() Fills Incorrectly</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q117387</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00 1.50 | 1.00
<PRE>WINDOWS   | WINDOWS NT
</PRE>kbprg kbfixlist kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>The Microsoft Foundation Classes (MFC), included with:
<P>
<P><PRE>    - Microsoft Visual C++ for Windows, versions 1.0 and 1.5
    - Microsoft Visual C++ 32-bit Edition, version 1.0
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Calling CScrollView::FillOutsideRect() incorrectly fills the area outside
of the scrolling area that belongs to the CScrollView.
<P>
<P><h2>CAUSE</h2>
 
<P>
In the file VIEWSCRL.CPP, in the Visual C++ MFC\SRC directory,
FillOutsideRect() has the following implementation:
<P>
<PRE>   void CScrollView::FillOutsideRect(CDC* pDC, CBrush* pBrush)
   {
      ASSERT_VALID(pDC);
      ASSERT_VALID(pBrush);
      // Fill Rect outside the image
      CRect rect;
      GetClientRect(rect);
      ASSERT(rect.left == 0 &amp;&amp; rect.top == 0);
      rect.left = m_totalDev.cy;
      if (!rect.IsRectEmpty())
         pDC-&gt;FillRect(rect, pBrush);    // vertical strip along the side
      rect.left = 0;
      rect.right = m_totalDev.cy;
      rect.top = m_totalDev.cy;
      if (!rect.IsRectEmpty())
         pDC-&gt;FillRect(rect, pBrush);    // horizontal strip along the
                                         // bottom

   }

</PRE>This implementation is incorrect because it sets rect.left and rect.right
to "m_totalDev.cy", instead of setting them equal to "m_totalDev.cx".
<P>
This causes the first rectangle filled to have its left border begin at the
coordinate "m_totalDev.cy" (the bottom border of the scrollable area of the
view) when it should be at the coordinate of the right border of the view
(that is, "m_totalDev.cx"). Similarly, the second rectangle filled has its
right border ending at the coordinate "m_totalDev.cy" (always the bottom
border of the scrollable area of the view) when it should be at the
coordinate of the right border of the view.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Modify the MFC source file, VIEWSCRL.CPP, to read as follows:
<P>
<PRE>   rect.left = m_totalDev.cx;
   rect.right = m_totalDev.cx;

</PRE>Rebuild the MFC libraries with this change. The README.TXT file in the
Visual C++ MFC\SRC directory describes how to do this.
<P>
NOTE: You will need to have your system configured to build from the
command prompt. Running the MSVCVARS.BAT or VCVARS32.BAT file in your BIN
directory sets your environment correctly.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the products listed at the
beginning of this article. This problem was corrected in the MFC 3.0
included with Visual C++ 2.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To reproduce this problem, open the DIBLOOK MFC sample, and use Class
Wizard to map the WM_ERASEBKGND message of CDibView to the following code,
taken from the online help for FillOusideRect():
<P>
<PRE>   BOOL CDibView::OnEraseBkgnd(CDC* pDC)
   {
      CBrush br( GetSysColor( COLOR_ACTIVECAPTION ) );
      FillOutsideRect( pDC, &amp;br );
      return TRUE;                   // Erased
   }

</PRE>After rebuilding DIBLOOK, use it to load a bitmap whose height is greater
than its width (WINNT.BMP is one example). There will be an unfilled area
at the right of the bitmap.
<P>
The problem occurs with any bitmap that has its height greater than its
width. In these conditions, the area defined by
<P>
<PRE>   (BitmapWidth) &lt; x &lt; (BitmapWidth) + (BitmapHeight - BitmapWidth)
   (0)           &lt; y &lt; (BitmapHeight)

</PRE>is never painted.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 1.50 2.00 2.10 2.50<BR>
KBCategory: kbprg kbfixlist kbbuglist<BR>
KBSubcategory: MfcDocView<BR>
Keywords          : MfcDocView kbbuglist kbfixlist kbprg<BR>
Technology        : kbMfc<BR>
Version           : 1.00 1.50 | 1.00<BR>
Platform          : NT WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
