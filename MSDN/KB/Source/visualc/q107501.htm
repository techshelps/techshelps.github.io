

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INFO: __declspec(dllexport) Replaces __export in 32-bit VC++ </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q107501">
<META NAME="KBModify" CONTENT="1997/09/30">
<META NAME="KBCreate" CONTENT="1993/11/19">
<META NAME="Keywords" CONTENT="CLngIss kbfasttip">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  The __export keyword provided with the Visual C++ for Windows compiler is obsolete with the Microsoft Visual C++ 32-bit compiler. The equivalent functionality for WIN32 can be achieved by using the keyword __declspec with the dllexport attribute. W...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA3P,QAY5,QABO,QA56,QA55,QAEY,QAH4,QBV8,QBFY,QAVX,QAVW,QAB9,QAPF,QAYY V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INFO: __declspec(dllexport) Replaces __export in 32-bit VC++</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 30, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q107501</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Microsoft Visual C++ 32-bit Edition, versions 1.0, 2.0, 4.0, 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The __export keyword provided with the Visual C++ for Windows compiler is
obsolete with the Microsoft Visual C++ 32-bit compiler. The equivalent
functionality for WIN32 can be achieved by using the keyword __declspec
with the dllexport attribute. With Visual C++ 32-bit Edition, verison 4.0,
compiling code containing the __export (or _export) keyword results in
either of the following warnings:
<P>
<PRE>   C4236: nonstandard extension used : '__export' is an obsolete keyword,
   see documentation for __declspec(dllexport)

   -or-

   C4226: nonstandard extension used : '__export' is an obsolete
   keyword

</PRE>Compiling code containing the __export (or _export) keyword with 32-bit
Visual C++, versions 1.0 and 2.x, results in the C4226 warning.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The __declspec construct is not supported by the tools supplied with
Microsoft Win32 Software Development Kit (SDK).
<P>
When porting DLL source code from Windows to Win32, replace each
instance of __export with __declspec( dllexport ). The
__declspec(dllexport) keyword can be used to export data, functions,
classes, or class member functions. For example:
<P>
<PRE>   /* exported function */
   __declspec( dllexport ) void func();

   /* exported data */
   __declspec( dllexport ) int i;

   // exported class
   class __declspec( dllexport ) DLLClass
   {
      ...
   };

   class DLLClass
   {
   public:
       // exported member function
       __declspec( dllexport ) void MemberFunction( void );
   };

</PRE>The sample code below demonstrates exporting classes and class member
functions from a DLL using the __declspec( dllexport ) and
__declspec( dllimport ) storage class attributes in the DLL and EXE,
respectively.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   /* DLL Sample: TESTDLL.CPP
   /* Compile options needed: /D"_X86" /MT TESTDLL.CPP /link
   /*                  /DLL /OUT:testdll.dll /implib:testdll.lib
   */

   #include &lt;stdio.h&gt;

   class DLLClass
       {
       public:
        // exported member function
        __declspec( dllexport ) void functionA( void ) {
            printf("\nIn Function A of the exported function");
        }
       };

   // exported class
   class __declspec( dllexport) ExportDLLClass
       {
       public:
        void functionB(void) {
           printf("\nIn Function B of the exported class");
        }
       };

   // exported instance of the DLLClass
   __declspec(dllexport) DLLClass test;


   /* Source that calls the DLL Sample: CALLDLL.CPP
   /* Compile options needed: /D"_X86" /D"_CONSOLE" /ML CALLDLL.CPP
   /*                  TESTDLL.LIB
   */

   #include &lt;stdio.h&gt;

   class DLLClass
       {
       public:
        // imported member function
        __declspec( dllimport ) void functionA( void );
       };

   class __declspec( dllimport) ExportDLLClass
       {
       public:
        void functionB(void);
       };

   __declspec( dllimport ) DLLClass test;

   void main(void)
   {
      ExportDLLClass TestClass;

      test.functionA();
      TestClass.functionB();
   }

</PRE><h2>REFERENCES</h2>
 
<P>
For more information on exporting, query on the following words in the
Microsoft Knowledge Base:
<P>
<PRE>   __export and def and prolog and dllexport

</PRE>For more information creating DLLs for WIN32 or on the dllexport and
dllimport storage class attributes, refer to Chapter 4 of the "Programming
Techniques" manual that ships with Visual C++ 32-bit Edition, or search
for dllexport or dllimport or export in the Visual C++ Books Online.
&gt;From within the Visual Workbench, select Help and choose Keyword Search.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 8.00 9.00<BR>
Keywords          : CLngIss kbfasttip<BR>
Version           : WINDOWS NT:1.0,2.0,4.0,5.0;<BR>
Platform          : NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 30, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
