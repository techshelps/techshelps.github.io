

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: List of Fixes in VC++ 4.2 to Bugs in VC++ 4.0/VC++ 4.1 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q154492">
<META NAME="KBModify" CONTENT="1997/09/19">
<META NAME="KBCreate" CONTENT="1996/08/07">
<META NAME="Keywords" CONTENT="VCGenIss kbbuglist kbfixlist kbprg kbref kbtool kbusage">
<META NAME="KBArea" CONTENT="Support; KB; visualc">
<META NAME="Description" CONTENT="  This article lists fixes in Visual C++ version 4.2 to bugs that appeared in the Microsoft 32-bit Edition of Visual C++ version 4.0 and 4.1.  MORE INFORMATION  Visual C++ version 4.2 fixes several Visual C++ version 4.0 and 4.1 bugs. These bugs incl...">
<META NAME="Product" CONTENT="Visual C++">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAR4,QAM1,QAX6,QA6A,QAMB,QDIX,QAB4,QABA,QA2O,QAGI,QAYY,QBFY,QAY2,QBVV,QABM V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: List of Fixes in VC++ 4.2 to Bugs in VC++ 4.0/VC++ 4.1</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 19, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q154492</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
4.20
WINDOWS NT
kbprg kbref kbtool kbusage kbbuglist  kbfixlist
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Visual C++, 32-bit Edition, version 4.2
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article lists fixes in Visual C++ version 4.2 to bugs that appeared
in the Microsoft 32-bit Edition of Visual C++ version 4.0 and 4.1.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Visual C++ version 4.2 fixes several Visual C++ version 4.0 and 4.1 bugs.
These bugs include Developer Studio debugger problems with breakpoints and
long directory structure names, and MFC database classes problems with
certain ODBC drivers producing "Out of memory" errors. Many developers will
find the bug fixes listed in this article to be of particular interest.

<OL><P><LI>In an MFC application that uses the Microsoft database classes, when
   using certain ODBC drivers, you may get "Out of memory" errors. These
   errors can occur when mapping a CString to a SQL_LONGVARCHAR,
   SQL_VARCHAR, or other SQL data type fields if a driver returns a large
   precision value from SQLDescribeCol() for the column.
<P>
   For more information, please see the following article in the Microsoft
   Knowledge Base:
<P>
   ARTICLE-ID: <B><A HREF="../VISUALC/Q148787.htm">Q148787</A></B>
<PRE>   TITLE     : FIX: Run Out of Memory or Assertion in GetBufferSetLength()

</PRE><P><LI>In the Microsoft Developer Studio, you may not be stopping at
   breakpoints you have set if your project was built from a directory
   structure that contained long names. This problem did not exist in
   Visual C++ 4.0.
<P>
   For more information, please see the following article in the Microsoft
   Knowledge Base:
<P>
   ARTICLE-ID: <B><A HREF="../VISUALC/Q150936.htm">Q150936</A></B>
<PRE>   TITLE     : FIX: VC41 Debugger Fails to Stop on Breakpoints w/ Long
               Names

</PRE><P><LI>_CRTDBG_MAP_ALLOC does not work as documented. When an object is
   allocated through use of the new operator and dumped through use of the
   debugging routines in the C Run-Time Library, the allocation is reported
   as occurring in the Crtdbg.h file, line 512.
<P>
   For more information, please see the following article in the Microsoft
   Knowledge Base:
<P>
   ARTICLE-ID: <B><A HREF="../VISUALC/Q140858.htm">Q140858</A></B>
<PRE>   TITLE     : FIX: _CRTDBG_MAP_ALLOC Does Not Work as Documented

</PRE><P><LI>Attempting to add a function or variable to a class by using ClassView
   fails and returns the error message:
<P>
   One or more of the files for &lt;class name&gt; are read-only.
<P>
   &lt;class name&gt; corresponds to the class that is selected.
<P>
   For more information, please see the following article in the Microsoft
   Knowledge Base:
<P>
   ARTICLE-ID: <B><A HREF="../VISUALC/Q140270.htm">Q140270</A></B>
<PRE>   TITLE     : FIX: ClassView Add Function/Variable Fails If Header File
               Moved

</PRE><P><LI>When using the CCheckListBox class in MFC and specifying a style of
   LBS_MULTICOLUMN, the user will be unable to check or uncheck items that
   are not displayed in the first column.
<P>
   For more information, please see the following article in the Microsoft
   Knowledge Base:
<P>
   ARTICLE-ID: <B><A HREF="../VISUALC/Q142960.htm">Q142960</A></B>
<PRE>   TITLE     : FIX: CCheckListBox Fails with Style LBS_MULTICOLUMN

</PRE><P><LI>If the #include preprocessor directive is used in a template class
   definition, the compiler generates a C1001 internal compiler error in
   compiler file msc1.cpp, line 899.
<P>
   For more information, please see the following article in the Microsoft
   Knowledge Base:
<P>
   ARTICLE-ID: <B><A HREF="../VISUALC/Q146000.htm">Q146000</A></B>
<PRE>   TITLE     : FIX: C1001 Including Header File in Template Class
               Definition

</PRE><P><LI>On Windows NT, when running in debug mode using a dynamically-loaded DLL
   such as an OLE control with a long file name or an .exe file with a long
   file name, the debugger may not break at set breakpoints. You may be
   able to set breakpoints both before starting and while it is running,
   but the debugger will not break on them.
<P>
   For more information, please see the following article in the Microsoft
   Knowledge Base:
<P>
   ARTICLE-ID: <B><A HREF="../VISUALC/Q146447.htm">Q146447</A></B>
<PRE>   TITLE     : FIX: Breakpoints Not Hit for Long File Name DLL/EXE

</PRE><P><LI>It is possible to use AppWizard to create an OLE Custom Control
   (.ocx file) that subclasses a standard Windows control. If you choose
   to subclass an edit control, the control will not exhibit the same
   behavior as a standard edit control.
<P>
   For more information, please see the following article in the Microsoft
   Knowledge Base:
<P>
   ARTICLE-ID: <B><A HREF="../VISUALC/Q146617.htm">Q146617</A></B>
<PRE>   TITLE     : FIX: SetWindowText(NULL) Doesn't Clear .OCX Edit Control

</PRE><P><LI>Under circumstances similar to the following, ClassWizard may cause an
   access violation:
<P>
   1. Derive a class CRecordSet1 from CRecordSet using ClassWizard.
<P>
   2. Derive a class CRecordSet2 from CRecordSet using ClassWizard.
<P>
   3. Replace all occurrences of CRecordSet in the .cpp and .h files for
<P><PRE>      CRecordSet2 with CRecordSet1. When ClassWizard is invoked to view
      CRecordSet2, an access violation may occur. This may also happen
      with CDaoRecordset class.
</PRE><P>
   For more information, please see the following article in the Microsoft
   Knowledge Base:
<P>
   ARTICLE-ID: <B><A HREF="../VISUALC/Q147735.htm">Q147735</A></B>
<PRE>   TITLE     : FIX: ClassWizard Quits If Class Twice Derived from
               CRecordSet

</PRE><P><LI>Running an application that uses the MFC DAO classes to retrieve
<P><PRE>    CLongBinary data from a database may result in one or more of the
    following behaviors when performing a recordset move or requery:
</PRE><P>
<P><PRE>    Access violations or "Out of memory" exceptions.
</PRE><P>
<P><PRE>    For more information, please see the following article in the Microsoft
    Knowledge Base:
</PRE><P>
<P><PRE>    ARTICLE-ID: <B><A HREF="../VISUALC/Q147948.htm">Q147948</A></B>
<PRE></PRE>    TITLE     : FIX: Errors Occurs Using DAO CLongBinary Data from Database

</PRE><P><LI>COleDateTimeSpan returns an incorrect number of days when using dates
<P><PRE>    earlier than midnight December 30, 1899. Also, adding or subtracting
    COleDateTimeSpan objects from COleDateTime objects will produce
    incorrect results if the resulting date is before midnight December 30,
    1899.
</PRE><P>
<P><PRE>    For more information, please see the following article in the Microsoft
    Knowledge Base:
</PRE><P>
<P><PRE>    ARTICLE-ID: <B><A HREF="../VISUALC/Q148751.htm">Q148751</A></B>
<PRE></PRE>    TITLE     : FIX: COleDateTimeSpan Returns Incorrect Value

</PRE><P><LI>When installing ODBC drivers from the Visual C++ 4.1 CD-ROM, you may
<P><PRE>    see the following error message:
</PRE><P>
<P><PRE>    Setup could not open the file: "...\MSDEV\REDIST\ORACLE.HLP"
</PRE><P>
<P><PRE>    For more information, please see the following article in the Microsoft
    Knowledge Base:
</PRE><P>
<P><PRE>    ARTICLE-ID: <B><A HREF="../VISUALC/Q148916.htm">Q148916</A></B>
<PRE></PRE>    TITLE     : FIX: Setup Could Not Open \Msdev\Redist\Oracle.hlp File

</PRE><P><LI>Running an application built using the MFC ODBC classes to retrieve
<P><PRE>    CLongBinary date from a database may result in data truncation. If
    Visual C++ 4.1 is used, the truncation is only evident in release
    builds; debug builds work as expected.
</PRE><P>
<P><PRE>    For more information, please see the following article in the Microsoft
    Knowledge Base:
</PRE><P>
<P><PRE>    ARTICLE-ID: <B><A HREF="../VISUALC/Q149137.htm">Q149137</A></B>
<PRE></PRE>    TITLE     : FIX: ODBC Long Binary Functions Use SQL_NO_TOTAL
                Incorrectly

</PRE><P><LI>Using /O1 (minimize size) or /O2 (maximize speed) causes a C1001
<P><PRE>    internal compiler error in a try block. The error is in compiler file
    \school.tp2\test\c10\src\p2\main.c, line 413. Additionally, C++
    exception handling must be enabled (/GX). If the warning level is set
    to 4 (/W4), C4702 (unreachable code) warnings are issued before C1001.
</PRE><P>
<P><PRE>    For more information, please see the following article in the Microsoft
    Knowledge Base:
</PRE><P>
<P><PRE>    ARTICLE-ID: <B><A HREF="../VISUALC/Q150884.htm">Q150884</A></B>
<PRE></PRE>    TITLE     : FIX: C1001 Fatal Error in File Main.c, Line 413 for /O1
                or /O2

</PRE><P><LI>If the MFC CMultiLock class is used to synchronize on more than eight
<P><PRE>    synchronization objects, a memory leak occurs when using CEvent,
    CSemaphore, or CMutex as the synchronization objects. The size of the
    leak equals the number of synchronization objects used multiplied by
    the memory needed for a BOOL variable.
</PRE><P>
<P><PRE>    For more information, please see the following article in the Microsoft
    Knowledge Base:
</PRE><P>
<P><PRE>    ARTICLE-ID: <B><A HREF="../VISUALC/Q151033.htm">Q151033</A></B>
<PRE></PRE>    TITLE     : FIX: Using CMultiLock Class Can Cause a Memory Leak

</PRE><P><LI>Using Visual C++ 4.0 or 4.1 C Run-time to asynchronously spawn a child
<P><PRE>    process that is inheriting a pipe handle, the parent process hangs
    before returning from the spawn call.
</PRE><P>
<P><PRE>    For more information, please see the following article in the Microsoft
    Knowledge Base:
</PRE><P>
<P><PRE>    ARTICLE-ID: <B><A HREF="../VISUALC/Q151071.htm">Q151071</A></B>
<PRE></PRE>    TITLE     : FIX: Spawn Hangs When Inheriting Pipe Handle

</PRE><P><LI>When using MFC 4.0 or 4.1, an assert can occur in bardock.cpp, line 682
<P><PRE>    when CFrameWnd::LoadBarState() is called. This behavior occurs if
    SaveBarState() was previously called and more than one CToolBar was
    docked at the bottom of the window.
</PRE><P>
<P><PRE>    For more information, please see the following article in the Microsoft
    Knowledge Base:
</PRE><P>
<P><PRE>    ARTICLE-ID: <B><A HREF="../VISUALC/Q151382.htm">Q151382</A></B>
<PRE></PRE>    TITLE     : FIX: LoadBarState() Causes Assert In Bardock.cpp, Line 682

</PRE><P><LI>With MFC 4.0 or 4.1, the internal state of the ControlBars is
<P><PRE>    corrupted when ControlBars are docked and undocked. The size of the
    registry key or the .INI file grows when SaveBarState is a result of
    this corruption.
</PRE><P>
<P><PRE>    For more information, please see the following article in the Microsoft
    Knowledge Base:
</PRE><P>
<P><PRE>    ARTICLE-ID: <B><A HREF="../VISUALC/Q151446.htm">Q151446</A></B>
<PRE></PRE>    TITLE     : FIX: Internal State of ControlBars Corrupted

</PRE><P><LI>When using the MFC ODBC classes with the Microsoft SQL Server ODBC
<P><PRE>    driver version 2.65.0201 that ships with Microsoft SQL Server 6.5,
    CDBExceptions can be thrown that contain no information about what led
    to the exception.
</PRE><P>
<P><PRE>    For more information, please see the following article in the Microsoft
    Knowledge Base:
</PRE><P>
<P><PRE>    ARTICLE-ID: <B><A HREF="../VISUALC/Q151683.htm">Q151683</A></B>
<PRE></PRE>    TITLE     : FIX: MFC ODBC Exceptions Using the SQL Server 6.5 Driver

</PRE><P><LI>When installing ODBC drivers from the Visual C++ 4.1 CD-ROM by running
<P><PRE>    setup from \msdev\redist, you may see the following error message:
</PRE><P>
<P><PRE>    Setup could not open the file: "...\MSDEV\REDIST\QFEUPD.EXE".
</PRE><P>
<P><PRE>    When this happens, you have to quit the setup program.
</PRE><P>
<P><PRE>    For more information, please see the following article in the Microsoft
    Knowledge Base:
</PRE><P>
<P><PRE>    ARTICLE-ID: <B><A HREF="../VISUALC/Q152317.htm">Q152317</A></B>
<PRE></PRE>    TITLE     : FIX: Setup Could Not Open \MSDEV\REDIST\QFEUPD.EXE

</PRE><P><LI>When using MFC ISAPI classes to send a POST HTTP request to an MFC
<P><PRE>    ISAPI DLL, an access violation may occur in the debugger, or a message
    about a failed request from the Web browser may be generated.
</PRE><P>
<P><PRE>    For more information, please see the following article in the Microsoft
    Knowledge Base:
</PRE><P>
<P><PRE>    ARTICLE-ID: <B><A HREF="../ISAPI/Q152365.htm">Q152365</A></B>
<PRE></PRE>    TITLE     : FIX: Sending a POST HTTP Request May Cause an Access
                Violation

</PRE><P><LI>Using the ClassWizard to associate a short with a control on a dialog
<P><PRE>    may result in an access violation when UpdateData(TRUE) is called, or
    in other member variables of the dialog being corrupted after the
    call toUpdateData(TRUE).
</PRE><P>
<P><PRE>    For more information, please see the following article in the Microsoft
    Knowledge Base:
</PRE><P>
<P><PRE>    ARTICLE-ID: <B><A HREF="../VISUALC/Q152384.htm">Q152384</A></B>
<PRE></PRE>    TITLE     : FIX: DDX for Short Causes Stack Corruption

</PRE><P><LI>Generating an ISAPI filter using the MFC ISAPI Extension Wizard and
<P><PRE>    selecting the option "Client Authentication Requests," will generate an
    ISAPI filter DLL with an OnAuthentication() member function that will
    never be called.
</PRE><P>
<P><PRE>    For more information, please see the following article in the Microsoft
    Knowledge Base:
</PRE><P>
<P><PRE>    ARTICLE-ID: <B><A HREF="../ISAPI/Q152493.htm">Q152493</A></B>
<PRE></PRE>    TITLE     : FIX: ISAPI Extension Wizard Generates Bad OnAuthentication

</PRE><P><LI>When the POST method is used to send information from an HTML form to
<P><PRE>    an MFC ISAPI DLL, the last parameter in the function handling command
    may have extra characters that are not part of the actual input. This
    will happen if the last parameter is a string.
</PRE><P>
<P><PRE>    For more information, please see the following article in the Microsoft
    Knowledge Base:
</PRE><P>
<P><PRE>    ARTICLE-ID: <B><A HREF="../ISAPI/Q152968.htm">Q152968</A></B>
<PRE></PRE>    TITLE     : FIX: Extra Invalid Characters in String Arguments
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbprg kbref kbtool kbusage kbbuglist kbfixlist<BR>
KBSubcategory: VCGenIss<BR>
Additional reference words: 4.00 4.10 4.20 kbdsi
<P>

Keywords          : VCGenIss kbbuglist kbfixlist kbprg kbref kbtool kbusage<BR>
Version           : 4.20<BR>
Platform          : NT WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 19, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
