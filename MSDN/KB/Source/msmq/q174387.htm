

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INFO: Using a Single MSMQ Queue for an MTS Component </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q174387">
<META NAME="KBModify" CONTENT="1998/03/06">
<META NAME="KBCreate" CONTENT="1997/09/26">
<META NAME="Keywords" CONTENT="MQProg">
<META NAME="KBArea" CONTENT="Support; KB; msmq">
<META NAME="Description" CONTENT="  Microsoft Message Queue Server (MSMQ) send and receive operations can be included in Microsoft Transaction Server (MTS) transactions. Since an MTS component can be marked for transactions in several ways, you may need to manage two types of queues ...">
<META NAME="Product" CONTENT="msmq">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH6,QAJG,QAGI,QAD7,QAKJ,QBVV,QAPN,QAHE,QAXC,QAIF,QAH4,QAAP,QAB4,QBS0,QAMB V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INFO: Using a Single MSMQ Queue for an MTS Component</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 6, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q174387</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Message Queue Server version 1.0
<LI>Microsoft Transaction Server 1.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Microsoft Message Queue Server (MSMQ) send and receive operations can be
included in Microsoft Transaction Server (MTS) transactions. Since an MTS
component can be marked for transactions in several ways, you may need to
manage two types of queues and write conditional code to avoid queue and
component type mismatch (MQ_ERROR_TRANSACTION_USAGE error). It is possible
to use a single transactional queue in all the cases. MTS provides the
context object, IsInTransaction() method, to determine whether or not the
component is transactional. MSMQ provides specific flags in send and
receive APIs and ActiveX calls to deal with specific cases.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following table shows the results of using MQ_MTS_TRANSACTION constant
in the pTransaction parameter of send/receive APIs and ActiveX methods for
different combinations of components and queue types.
<P>
<PRE>   T= Transactional , N= Non-transactional

   MQ_MTS_TRANSACTION in MQSendMessage/ Send:

   Component    Queue        Result
   --------    ---------   ---------
   T               T         OK
   T               N         Error
   N               N         OK
   N               T         Error


   MQ_MTS_TRANSACTION in MQReceiveMessage/ Receive:

   Component      Queue      Result
   ---------   ---------    ---------
   T               T         OK
   T               N         Error
   N               N         OK
   N               T         OK, *

   *(assume local queue)

</PRE><h3>How to Use a Single Transactional Queue with MQSendMessage/Send</h3>
 
<P>
If the component is non-transactional, use the MQ_SINGLE_MESSAGE constant
in the pTransaction parameter of MQSendMessage/Send call to send to a
transactional queue. This makes the message transactional. This is an
independent transaction not related to the MTS transaction and will not
rollback the send operation if the MTS component is marked transactional
and you call SetAbort to abort the MTS transaction.
<P>
<P>
<P><h3>How to Use a Single Transactional Queue with MQReceiveMessage/Receive</h3>
 
<P>
Use MQ_NO_TRANSACTION constant in the pTransaction parameter of
MQReceiveMessage/Receive call. This makes it possible to receive non-
transactionally from the transactional queue even if the queue is not
local.
<P>
You will need to use the MTS context object, IsInTransaction() method, to
determine whether or not the component is transactional and then pass the
appropriate flag to the MSMQ send/receive call. For code example using MSMQ
C API and ActiveX see the following articles:
<P>
<P><h2>REFERENCES</h2>
 
<P>
For additional information, please see the following articles in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../msmq/Q175725.htm">Q175725</A></B>
   TITLE     : HOWTO: Using MSMQ C API Inside an MTS Component

   ARTICLE-ID: <B><A HREF="../msmq/Q175726.htm">Q175726</A></B>
   TITLE     : HOWTO: Using MSMQ Within an MTS Component in Visual Basic

   ARTICLE-ID: <B><A HREF="../msmq/Q176816.htm">Q176816</A></B>
   TITLE     : HOWTO: Using MSMQ within an MTS Component in Java
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: viper falcon<BR>
Keywords          : MQProg<BR>
Version           : WINNT:1.0<BR>
Platform          : winnt<BR>
Issue type        : kbinfo<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 6, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
