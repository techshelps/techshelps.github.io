

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: Version 2.0 Database Operations Take Longer Than in 1.x </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q114083">
<META NAME="KBModify" CONTENT="1997/05/12">
<META NAME="KBCreate" CONTENT="1994/04/25">
<META NAME="Keywords" CONTENT="GnlOthr kbusage">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  Disk-intensive database operations (such as record updates) seem to take longer in Microsoft Access version 2.0 than in version 1.x.  CAUSE =====  Typically poor performance disk-intensive database operations, such as locking, depend on the environ...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAY5,QA1S,QAMR,QAU3,QA26,QA5V,QDN9,QAZV,QBE7,QBE6,QBFN,QAPN,QAC1,QBXJ,QBQB V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: Version 2.0 Database Operations Take Longer Than in 1.x</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  May 12, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q114083</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 1.0, 1.1, 2.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Disk-intensive database operations (such as record updates) seem to take
longer in Microsoft Access version 2.0 than in version 1.x.
<P>
<P><h2>CAUSE</h2>
 
<P>
Typically poor performance disk-intensive database operations, such as
locking, depend on the environment. For example, a network that has heavy
network traffic could cause a performance decrease. Disk operations
performed on databases that are opened nonexclusively, or shared, take
longer than operations on databases that are opened exclusively, because
lock checking occurs for each operation in a shared database.
<P>
In addition, changes to the way that nontransaction record writing is done
in version 2.0 can, in some cases, cause those operations to take longer
than they do in version 1.x.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To speed up non-exclusive operations, open the database exclusively
whenever possible.
<P>
To improve record writing performance in version 2.0, embed your disk-
writing routines in transactions (using the BeginTrans and CommitTrans
statements). This improves speed by decreasing the number of times
Microsoft Access must write data to the disk, because the data is instead
written to the transaction buffer in memory. When the transaction is
committed, the data is written to the disk, resulting in fewer physical
writes to the disk. Using transactions brings performance back to 1.x
levels in most cases.
<P>
However, avoid putting all write operations into a transaction, because the
transaction buffer could conceivably become large enough to decrease the
size of the read-cache buffer, which could subsequently slow down read
operations. The key in this tradeoff is to place only disk-intensive write
operations in transactions, leaving enough room for the read-cache
buffer.
<P>
Transactions can also improve concurrency in multiuser situations. Consider
the following example:
<PRE>   .
   .
   BeginTrans
     set myrs = mdb.openrecordset("long running query")
   CommitTrans
   .
   .
   debug.print myrs!field1
   .
   .
   myrs.close

</PRE>This partial code construction allows other users to edit records as soon
as the query is finished running. If transactions are not used, or the
CommitTrans statement is after the myrs.close statement, the read locks on
the index pages are not released as quickly, thereby not allowing other
users to commit changes to their data.
<P>
The cost in using this method is that there will be a slight pause at the
CommitTrans stage when all the record read locks are released. These read
locks would otherwise be gradually released when the system had idle time.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about optimizing performance, please see the
following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../ACCESS/Q112117.htm">Q112117</A></B>
   TITLE     : ACC2: How to Optimize Microsoft Access Version 2.0
               Performance

</PRE>For more information about optimizing Microsoft Access performance, search
for "optimizing performance" then "Optimizing Microsoft Access Performance"
using the Microsoft Access Help menu.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: reading writing caching<BR>
Keywords            : GnlOthr kbusage<BR>
Version             : 1.0 1.1 2.0<BR>
Platform            : WINDOWS<BR>
Hardware            : X86<BR>
Issue type          : kbprb<BR>
Resolution Type     : Info_Provided<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  May 12, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
