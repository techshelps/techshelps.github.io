

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC2: Query by Form (QBF) Using Dynamic QueryDef </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q117544">
<META NAME="KBModify" CONTENT="1997/06/08">
<META NAME="KBCreate" CONTENT="1994/06/30">
<META NAME="Keywords" CONTENT="kbprg MdlQry">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  This article demonstrates how to use a form to specify the criteria for a query that is dynamically built by an Access Basic function. This technique is called query by form (QBF...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBT6,QBV4,QAHP,QA1S,QAPF,QAPN,QA35,QDN9,QAIJ,QA4H,QAVT,QAMA,QAMB,QAB9,QA5V V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC2: Query by Form (QBF) Using Dynamic QueryDef</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 8, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q117544</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access version 2.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
This article demonstrates how to use a form to specify the criteria for a
query that is dynamically built by an Access Basic function. This
technique is called query by form (QBF).
<P>
This article assumes that you are familiar with Access Basic and with
creating Microsoft Access applications using the programming tools
provided with Microsoft Access. For more information on Access Basic,
please refer to the "Building Applications" manual.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
You can use the QBF method to specify the criteria for filtering an
existing query, but this method becomes complex as you add more fields to
the form. For example, one such complication arises when you do not enter
a value in one of the form's criteria fields.
<P>
A more flexible QBF method is to use an Access Basic function to
dynamically create the SQL statement for a query that is deleted and
recreated each time the function runs. This method does not use an empty
criteria field as part of the query's WHERE condition.
<P>
<P><h3>Creating the Sample Function</h3>
 
<P>
Concatenating (joining) SQL statements in Access Basic requires that you
"type cast" fields with special characters to instruct the Microsoft Jet
database engine what field data types you are using. The following
type-casting characters are used in this article:
<P>
<PRE>   Field Type       Type-Casting Character
   ------------------------------------------
   Text             Single quotation mark (')
   Date             Number sign (#)
   Numeric          None

</PRE>The following sample SQL statements demonstrate the use of type casting.
<P>
NOTE: In the following sample statements, an underscore (_) at the end of a
line is used as a line-continuation character. Remove the underscore from
the end of the line when re-creating these statements.
<P>
<PRE>   Text: "Select * from [Orders] where [ship city] = '" &amp; [Mycriteria] _
   &amp; "' ;"
   Date: "Select * from [Orders] where [Order Date] = #"&amp; [Mycriteria] _
   &amp; "# ;"
   Numeric: "Select * from [Orders] where [Employee ID] = "&amp; [Mycriteria] _
   &amp; ";"

</PRE>To create a sample function that uses the QBF technique to display the
records matching the specified criteria, follow these steps:

<OL><P><LI>Open the sample database NWIND.MDB and create a new blank form.

<P><LI>Add six text boxes to the form. Set the text boxes' Name property as
   follows:
<P>
<P><PRE>      Text Box 1:
<PRE></PRE>         Name: Customer ID
      Text Box 2:
         Name: Ship City
      Text Box 3:
         Name: Ship Country
      Text Box 4:
         Name: Employee ID
      Text Box 5:
         Name: Order Start Date
      Text Box 6:
         Name: Order End Date

</PRE><P><LI>Add a command button to the form and set the command button's Caption
   property as follows:
<P>
<P><PRE>      Caption: Run Query
</PRE>
<P><LI>Type the following code for the command button's OnClick event
   procedure.
<P>
   NOTE: In the following sample code, an underscore (_) at the end of a
   line is used as a line-continuation character. Remove the underscore
   from the end of the line when re-creating this code.
<P>
<P><PRE>      Dim db As Database
      Dim QD As QueryDef
      Dim MyWhere As Variant
</PRE><P>
<P><PRE>      Set db = dbengine.workspaces(0).databases(0)
</PRE><P>
<P><PRE>      ' Delete the existing dynamic query; trap the error if the query does
      ' not exist.
      On Error Resume Next
      db.querydefs.Delete ("Dynamic_Query")
      On Error GoTo 0
</PRE><P>
<P><PRE>      ' Note the single quotation marks surrounding the text fields _
      ' [Ship Country] and [Customer ID].
      ' Note that there are no type-casting characters surrounding the _
      ' numeric field [Employee Id].
      MyWhere = Null
      MyWhere = MyWhere &amp; (" AND [Ship Country]= '" + _
<PRE></PRE>         Me![Ship Country] + "'")
      MyWhere = MyWhere &amp; (" AND [Customer Id]= '" + _
         Me![customer id] + "'")
      MyWhere = MyWhere &amp; (" AND [Employee Id]= " + Me![Employee Id])

      ' The following section evaluates the Ship City criterion you enter.
      ' If the first or the last character of the criterion is the wildcard
      ' character (*), then the function uses the "LIKE" operator in the
      ' SQL statement instead of "=." Also note the single quotation
      ' marks surrounding the text field [Ship City].

      If Left(Me![Ship City],1) = "*" Or Right(Me![Ship City],1) = "*" Then
         MyWhere = MyWhere &amp; (" AND [Ship City] like '" + Me![Ship City] _
         + "'")
      Else
         MyWhere = MyWhere &amp; (" AND [Ship City] = '" + Me![Ship City]+"'")
      End If

      ' Note the number signs (#) surrounding the date field [Order Date].
      If Not IsNull(Me![order start date]) And _
            Not IsNull(Me![order end date]) Then
         MyWhere = MyWhere &amp; (" AND [order date] between #" &amp; _
            Me![order start date] + "# AND #" + Me![order end date] + "#")
      ElseIf IsNull(Me![order end date]) Then
         MyWhere = MyWhere &amp; (" AND [order date] &gt;= #" + _
            Me![order start date] + " #")
      ElseIf IsNull(Me![order start date]) Then
         MyWhere = MyWhere &amp; (" AND [order date] &lt;= #" + _
            Me![order end date] + " #")
      End If

      ' Remove the following MsgBox line if you do not want to display the
      ' SQL statement.

      MsgBox "Select * from orders " &amp; (" where " + Mid(MyWhere, 6) + ";")
      Set QD = db.CreateQueryDef("Dynamic_Query", "Select * from _
         orders " &amp; (" where " + Mid(MyWhere, 6) + ";"))
      DoCmd OpenQuery "Dynamic_Query"

</PRE><P><LI>View the form in Form view.

<P><LI>To run the query, enter the following sample criteria in the text boxes,
   and then click the command button:
<P>
<P><PRE>      Ship City text box: SE*
      Employee ID text box: 1
      Customer ID text box: CACTU
      Order Start Date text box: 1/1/94
</PRE><P>
</OL>NOTE: The method in this example has the following features:

<UL><LI>The AND operator is used to evaluate the text box criteria. For
   example, if you enter "BONAP" in the Customer ID text box and "1" in
   the Employee ID box, the resulting query displays records in which
   [Customer ID] = BONAP AND [Employee ID] = 1.

<LI>If you enter an asterisk (*) at the beginning or end of a value in
   the Ship City text box, the asterisk is interpreted as a wildcard, and
   the LIKE operator is used in the SQL statement. For example, if you
   enter "Sea*" in the Ship City text box, the resulting query displays
   records in which the Ship City is Seattle.

<LI>If you enter a criteria in the Order Start Date text box, but not in
   the Order End Date box, the resulting query searches for everything
   after the specified start date instead of searching for a range of
   dates.

<LI>After you enter the criteria on the form and click the command
   button, the query is built and run. You can also use this function to
   print a report based on the query.

<LI>The SQL statement that is built for the dynamic query is displayed in
   a message box.

<LI>If you do not enter any criteria, the resulting query returns all
   the records in the table.
<P>
</UL><h2>REFERENCES</h2>
 
<P>
For more information about the CreateQueryDef method, search for
"CreateQueryDef," and then "CreateQueryDef Method (Data Access)" using the
Microsoft Access Help menu.
<P>
For more information about SQL, search for "SQL: basics," and then
"Retrieving Data Using SQL" using the Microsoft Access Help menu.
<P>
For more information about the QBF technique, search for "QBF," and then
"Query by Form" using the Microsoft Access Help menu. Or, please see the
following articles in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../ACCESS/Q95931.htm">Q95931</A></B>
   TITLE     : ACC: How to Use the Query-by-Form (QBF) Technique

</PRE></OL>You can also obtain this article through Microsoft FastTips by ordering
item number <B><A HREF="../ACCESS/Q95931.htm">Q95931</A></B> from the FastTips Main Menu.
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : kbprg MdlQry<BR>
Version             : 2.0<BR>
Platform            : WINDOWS<BR>
Hardware            : X86<BR>
Issue type          : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 8, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
