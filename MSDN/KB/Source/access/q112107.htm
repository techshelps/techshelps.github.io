

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC2: How to Index an Existing Field with DAO </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q112107">
<META NAME="KBModify" CONTENT="1997/11/12">
<META NAME="KBCreate" CONTENT="1995/11/07">
<META NAME="Keywords" CONTENT="MdlDao PgmObj TblFldp kbprg">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  This article demonstrates how to create a compound (multiple- field) index in an existing table using data access objects (DAO).  This article assumes that you are familiar ...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QATJ,QA28,QA7O,QA7N,QA1S,QDN9,QAMA,QAPN,QBJZ,QBXS,QA5F,QABD,QABE,QAW6,QAH4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC2: How to Index an Existing Field with DAO</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 12, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q112107</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access version 2.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
This article demonstrates how to create a compound (multiple- field) index
in an existing table using data access objects (DAO).
<P>
This article assumes that you are familiar with Access Basic and with
creating Microsoft Access applications using the programming tools provided
with Microsoft Access. For more information on Access Basic, please refer
to the "Building Applications" manual, Chapter 3, "Introducing Access
Basic."
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
An Index object contains the fields that are being indexed, and usually
contains only a single field. The Index object created in the example below
will have two fields appended to it, creating a multiple- field index.
<P>
The example below demonstrates how to create a multiple- field index with
DAO:

<OL><P><LI>Open the sample database NWIND.MDB.

<P><LI>Create the following new table:
<P>
<P><PRE>    Table: Interviews
    --------------------------
    Field Name: CustomerID
       Data Type: Number
       Field Size: Long Integer
    Field Name: InterviewerID
       Data Type: Number
       Field Size: Long Integer
    Field Name: Appointment
       Data Type: Date/Time
</PRE>
<P><LI>Save the table as Interviews without creating a primary key, and then
   close it.

<P><LI>Create a new module and type the following line in the Declarations
   section:
<P>
<P><PRE>       Option Explicit
</PRE>
<P><LI>Type the following function in the module:
<P>
<P><PRE>       '---------------------------------------------------------------
       'PURPOSE: Adds a multiple-field index to a table.
       'ACCEPTS: Nothing.
       'RETURNS: Nothing.
       '---------------------------------------------------------------
       Function AddMultiIndex ()
<PRE></PRE>          Dim DB As Database, TDef As TableDef
          Dim Idx As Index, Fld As Field

          Set DB = DBEngine.Workspaces(0).Databases(0)

          ' Open the table definition.
          Set TDef = DB.TableDefs("Interviews")

          ' Create an index called PrimaryKey for this TableDef
          ' .. and turn on the Primary and Required properties.
          Set Idx = TDef.CreateIndex("PrimaryKey")
          Idx.Primary = True
          Idx.Required = True
          Idx.Ignorenulls = False

          ' Create an index field with the same name as a table field,
          ' .. then append it to the index.
          Set Fld = Idx.CreateField("CustomerID")
          Idx.fields.Append Fld

          '   Do the second field the same way.
          Set Fld = Idx.CreateField("InterviewerID")
          Fld.Attributes = DB_DESCENDING
          Idx.fields.Append Fld

          '   Append the index to the TableDef.
          TDef.indexes.Append Idx

       End Function

</PRE><P><LI>Save the module as DAOaddMultiIndex.

<P><LI>From the View menu, choose Immediate Window.

<P><LI>Type the following in the Immediate window, and then press ENTER:
<P>
<P><PRE>      ? AddMultiIndex()
</PRE>
<P><LI>Close the Immediate window and the module, and then open the Interviews
   table in Design view. Note the compound primary key on the CustomerID
   and InterviewerID fields.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about Index objects, search for "Index," and then
"Index Object, Indexes Collection" using the Microsoft Access Help menu.
 
<PRE>Keywords          : MdlDao PgmObj TblFldp kbprg
Version           : 2.0
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 12, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
