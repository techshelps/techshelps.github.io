

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: Can't Import Numeric Field Names with TransferSpreadsheet </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q165142">
<META NAME="KBModify" CONTENT="1997/04/01">
<META NAME="KBCreate" CONTENT="1997/03/13">
<META NAME="Keywords" CONTENT="IsmExl5 IsmOthr kbusage">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  When you use the TransferSpreadsheet macro action or Visual Basic method to import a Microsoft Excel spreadsheet that contains numeric field names, the fields in the new table ar...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QAUJ,QA7O,QA7N,QAH4,QAPN,QBWS,QARM,QBS0,QAEQ,QAUR,QA1S,QBWD,QBFY,QAIK P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: Can't Import Numeric Field Names with TransferSpreadsheet</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 1, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q165142</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 7.0, 97
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
When you use the TransferSpreadsheet macro action or Visual Basic method
to import a Microsoft Excel spreadsheet that contains numeric field names,
the fields in the new table are named F1, F2, F3, and so on.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
There are two ways you can work around this behavior.
<P>
<P><h3>Method 1: Change Field Names in Microsoft Excel</h3>
 
<P>
If you want to use TransferSpreadsheet to import a Microsoft Excel file
that contains field names, you must change the field names in Microsoft
Excel so they are non-numeric. It is not enough to format the cells as
text in Microsoft Excel, but leave the numeric values. You must change the
field names or precede the numbers with one or more non-numeric
characters, such as a letter of the alphabet or an underscore (_).
<P>
NOTE: You cannot use a space as the first character of the field name. If
you format the field name as Text in Microsoft Excel, and then you use a
space as the first character of the field name in an attempt to preserve
its numeric name, you receive the following error message when you try to
import the file:
<P>
<PRE>   The database engine can't find '&lt;Field Name&gt;'. Make sure it is a valid
   parameter or alias name, that it doesn't include invalid characters or
   punctuation, and that the name isn't too long.

</PRE><h3>Method 2: Use the Import Spreadsheet Wizard</h3>
 

<OL><P><LI>On the File menu, point to Get External Data, and then click Import.

<P><LI>In the Import dialog box, select Microsoft Excel (*.xls) in the Files
   Of Type box, and then select your spreadsheet file. Click Import.

<P><LI>Click Next on the first screen of the Import Spreadsheet Wizard.

<P><LI>Click "First Row Contains Column Headings" on the second screen of the
   wizard, and then click Next.

<P><LI>Follow the instructions on the remaining screens of the wizard to
   import your spreadsheet file.
<P>
</OL><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 
<P>
The following example uses the TransferSpreadsheet action in a macro. You
can also reproduce this behavior if you use the TransferSpreadsheet method
of the DoCmd object in Visual Basic code.

<OL><P><LI>Start Microsoft Excel and create a new workbook.

<P><LI>Type the following three rows of data in the spreadsheet:
<P>
<PRE>      A      B      C
      ------------------
      1980   1990   2000
      a      b      c
      d      e      f

</PRE><P><LI>Save the spreadsheet as C:\My Documents\NoField.xls, and then quit
   Microsoft Excel.

<P><LI>Start Microsoft Access and open the sample database Northwind.mdb.

<P><LI>Create a new macro called ImportXL:
<P>
<P><PRE>      Macro Name: ImportXL
      --------------------
      TransferSpreadsheet
</PRE><P>
<P><PRE>      ImportXL Actions
      -----------------------------------------------------------------
      TransferSpreadsheet
<PRE></PRE>         Transfer Type: Import
         Spreadsheet Type: &lt;Select the correct Microsoft Excel version&gt;
         Table Name: NoField
         File Name: C:\My Documents\NoField.xls
         Has Field Names: Yes

</PRE><P><LI>Save the ImportXL macro.

<P><LI>On the Run menu, click Run.

<P><LI>Open the NoField table in Datasheet view. Note that the field names are
   F1, F2, and F3 instead of 1980, 1990, and 2000.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about using TransferSpreadsheet in a macro or in
code, search the Help Index for "TransferSpreadsheet action" or
"TransferSpreadsheet method."
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: fieldname<BR>
Keywords            : IsmExl5 IsmOthr kbusage<BR>
Version             : 7.0 97<BR>
Platform            : WINDOWS<BR>
Hardware            : x86<BR>
Issue type          : kbprb<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 1, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
