

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: How to Activate an Application with Class Name (1.x/2.0) </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q104710">
<META NAME="KBModify" CONTENT="1997/06/08">
<META NAME="KBCreate" CONTENT="1993/09/27">
<META NAME="Keywords" CONTENT="kbprg PgmApi">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  The function AppActivate() activates an application using the title bar text of the application. You must use the exact title bar text or the function will fail. For example...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA1S,QBTM,QDN9,QAUJ,QAJH,QDL9,QBWO,QBWN,QAY5,QAH4,QBV8,QARM,QAB9,QAMB,QABO V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: How to Activate an Application with Class Name (1.x/2.0)</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 8, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q104710</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 1.0, 1.1, 2.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
The function AppActivate() activates an application using the title bar
text of the application. You must use the exact title bar text or the
function will fail. For example, the title bar text of Microsoft Access is
"Microsoft Access" unless an object (a form or report, for example) is
maximized. If an object is maximized, the title bar text is "Microsoft
Access - &lt;Object Name&gt;." Because knowing the exact title bar text ahead of
time can be challenging, the following function demonstrates how to
activate an application using the application's Class Name and Microsoft
Windows API calls.
<P>
This article assumes that you are familiar with Access Basic and with
creating Microsoft Access applications using the programming tools provided
with Microsoft Access. For more information on Access Basic, please refer
to the "Introduction to Programming" manual in Microsoft Access version
1.x, or the "Building Applications" manual, Chapter 3, "Introducing Access
Basic," in version 2.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
When an application is started from Program Manager, it registers the class
name of the form. The window class provides information about the name,
attributes, and resources required by your form. The Microsoft Access
window has the class name "OMain."
<P>
You can determine the class name of an application by using SPY.EXE
supplied with the Microsoft Windows Software Development Kit (SDK)version
3.1 or SPYXX.EXE supplied with Microsoft Visual C++ version 2.0.
<P>
To use the application's Class Name to activate the application, create a
new module with the following Declaration section and function:
<P>
NOTE: In the following sample code, an underscore (_) is used as a line-
continuation character. Remove the underscore from the end of the line when
re-creating this code in Access Basic.
<P>
NOTE: You may have these Microsoft Windows API functions defined in an
existing Microsoft Access library or module; therefore, your declarations
may be duplicates causing a duplicate procedure name error message. There
are two resolutions to this error:

<OL><P><LI>Remove or comment out the duplicated declarations statements.

<P><LI>Use function aliasing by replacing the phrase "alias_" throughout the
   code below with your own unique aliasing characters. This method allows
   you to remove the other module and not lose the declarations for the API
   functions in the new module. For more information on aliasing see page
   Microsoft Access, "Building Applications," version 2.0, page 369.
<P>
<P><PRE>    '**************************************************************
    ' MODULE DECLARATION SECTION
    '**************************************************************
<PRE></PRE>    Option Compare Database   'Use database order for string comparisons
    Option Explicit

    'Windows API Declarations
    Declare Function alias_ShowWindow Lib "User" Alias "ShowWindow" _
     (ByVal hWnd As Integer, ByVal nCmdShow As Integer) As Integer

    Declare Function alias_FindWindow Lib "user" Alias "FindWindow" _
     (ByVal lpclassname As String, ByVal lpCaption As Any) As Integer

    Declare Function alias_SetActiveWindow Lib "User" Alias _
      "SetActiveWindow" (ByVal hWnd As Integer) As Integer

    Const SW_SHOW = 9

    '******************************************************************
    ' FUNCTION: AppActivateClass()
    '
    ' PURPOSE: Used to activate another application by using its
    '    class name instead of the title bar text as AppActivate does.
    '
    ' ARGUMENTS:
    '    lpClassName$   - The Class Name of the application.
    '
    ' RETURNS:
    '     0   - The application was not found - it either was not running
    '           or the class name is incorrect
    '    -1   - The application was activated

    '******************************************************************

    Function AppActivateClass(lpclassname$)
      Dim hWnd As integer       'the application's window handle
      Dim dummy as integer      'Dummy variable

      'Get the Window Handle
      hWnd = alias_FindWindow(lpclassname$, 0&amp;)

      'Activate the Application
      dummy = alias_SetActiveWindow(hWnd)
      dummy = alias_ShowWindow(hWnd, SW_SHOW)

      'Return True if Application Running, or False if not.
      AppActivateClass = hWnd

    End Function

</PRE></OL>To use this function, call the function and supply the class name of the
application to activate. The following example shows how to activate
Microsoft Word for Windows:
<P>
<PRE>   x=AppActivateClass("opusapp")

</PRE>Below are some class names of common applications that are included in
Windows:
<P>
<PRE>   Class Name                   Application
   ----------------------------------------
   OMain                        ACCESS.EXE
   SciCalc                      CALC.EXE
   CalWndMain                   CALENDAR.EXE
   Cardfile                     CARDFILE.EXE
   Clipboard                    CLIPBOARD.EXE
   Clock                        CLOCK.EXE
   CtlPanelClass                CONTROL.EXE
   XLMain                       EXCEL.EXE
   Session                      MS-DOS.EXE
   Notepad                      NOTEPAD.EXE
   pbParent                     PBRUSH.EXE
   Pif                          PIFEDIT.EXE
   PrintManager                 PRINTMAN.EXE
   Progman                      PROGMAN.EXE   (Windows Program Manager)
   Recorder                     RECORDER.EXE
   Reversi                      REVERSI.EXE
   #32770                       SETUP.EXE
   Solitaire                    SOL.EXE
   Terminal                     TERMINAL.EXE
   WFS_Frame                    WINFILE.EXE
   MW_WINHELP                   WINHELP.EXE
   #32770                       WINVER.EXE
   OpusApp                      WINWORD.EXE
   MSWRITE_MENU                 WRITE.EXE

</PRE>Below are some class names of applications that are new with Windows 95:
<P>
<PRE>   Class Name                   Application
   ----------------------------------------------------
   CabinetWClass                My Computer Window
   Internet Explorer_Frame      IEXPLORE.EXE
   MSPaintApp                   MSPAINT.EXE
   SageWindowClass              System Agent Com Window
   Shell_Traywnd                Windows 95 Task Bar
   WordPadClass                 WORDPAD.EXE
   DialerClass                  DIALER.EXE
   SJE_CDPlayerClass            CDPLAYER.EXE
   MyDlgClass                   CHARMAP.EXE
   MSDefragWClass1              DEFRAG.EXE
   GFVMainWndClass              FAXVIEW.EXE
   FreeWClass                   FREECELL.EXE
   Mplayer                      MPLAYER.EXE
   AfxFrameorView               HEARTS.EXE
   NW_Class                     NETWATCH.EXE
   AppClass                     PACKAGER.EXE
   System Policy Editor         POLEDIT.EXE
   PWLEdit                      PWLEDIT.EXE
   RegEdit_RegEdit              REGEDIT.EXE
   ScanDskWDlgClass             SCANDSK.EXE
   SoundRec                     SNDREC32.EXE
   Volume Control               SNDVOL32.EXE
   System Monitor               SYSMON.EXE
   MSTaskSwWClass               TASKMAN.EXE
   TelnetWClass                 TELNET.EXE
   WinIPCfgClass                WINIPCFG.EXE
   WordPadClass                 WORDPAD.EXE
   Session_Window               HYPERTRM.EXE
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: caption<BR>
Keywords            : kbprg PgmApi<BR>
Version             : 1.0 1.1 2.0<BR>
Platform            : WINDOWS<BR>
Hardware            : X86<BR>
Issue type          : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 8, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
