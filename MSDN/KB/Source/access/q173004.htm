

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC97: Access Methods That Reset The Visual Basic Project </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q173004">
<META NAME="KBModify" CONTENT="1997/09/29">
<META NAME="KBCreate" CONTENT="1997/08/21">
<META NAME="Keywords" CONTENT="MdlProb PgmObj">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  When you use certain Access methods that modify modules or references, all variables in the same Visual Basic for Applications project are reset.  You will reset your variab...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QA1S,QDN9,QAPN,QAYL,QBXS,QAH4,QAKE,QA5F,QA28,QAZV,QAX6,QATJ,QAMA,QAJH P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC97: Access Methods That Reset The Visual Basic Project</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q173004</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access 97
<LI>Microsoft Visual Basic for Applications
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
When you use certain Access methods that modify modules or references, all
variables in the same Visual Basic for Applications project are reset.
<P>
You will reset your variables with the following methods:
<P>
AddFromFile (Module Object)
AddFromFile (References Collection)
AddFromString
AddFromGUID
CreateEventProc
DeleteLines
InsertLine
InsertText
ReplaceLine
Remove (References Collection)
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to the "Building
Applications with Microsoft Access 97" manual.
<P>
<P><h2>CAUSE</h2>
 
<P>
These methods automatically reset the database's Visual Basic
for Applications project.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Move any variables that you do not want to be reset to an add-in or library
database. Add-ins and library databases have separate Visual Basic for
Applications projects; therefore, variables stored in them are not affected
when you use one of these methods.
<P>
<P><h2>STATUS</h2>
 
<P>
This behavior is by design.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
A database's Visual Basic for Applications project consists of all the
standard and class modules stored in the database. When you one of these
methods, the project is recompiled. This resets the project
state, including any defined variables.
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 

<OL><P><LI>Open the sample database Northwind.mdb.

<P><LI>Create a module and type the following lines in the Declarations
   section:
<P>
<P><PRE>       Option Explicit
       Public pMyVar As String
</PRE>
<P><LI>Type the following procedure:
<P>
<P><PRE>     Sub CreateNewProc()
<PRE></PRE>        Dim frm As Form
        Dim mdl As Module
        Dim ret As Long

        ' Set Public Variable.
        pMyVar = "Hello"

        ' Create a new form.
        Set frm = CreateForm()
        Set mdl = frm.Module

        ' Create an event procedure in the form's
        ' module.
        ret = mdl.CreateEventProc("Load", "Form")

        'Display current contents of Public variable.
        MsgBox "pMyVar = " &amp; pMyVar
     End Sub

</PRE><P><LI>To test this procedure, type the following line in the Debug window,
   and then press ENTER:
<P>
<P><PRE>       CreateNewProc
</PRE><P>
   Note that a form is created with an event procedure, followed by a
   message box that contains the contents of the public variable.

<P><LI>After the procedure has completed, type the following in the Debug
   window, and then press ENTER:
<P>
<P><PRE>       ?pMyVar
</PRE><P>
   Note that the public variable is reset and now contains an empty
   string.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about these methods, search the Help
Index for the method name or ask the Microsoft Access 97 Office Assistant.
<P>
For more information about class modules, search the Help Index for
"class modules, overview," or ask the Microsoft Access 97 Office Assistant.
<P>
For more information about library databases, search the Help Index for
"library databases," or ask the Microsoft Access 97 Office Assistant.
<P>
For more information about creating add-ins, please refer to "Building
Applications with Microsoft Access 97," Chapter 17, "Creating Wizards,
Builders, and Menu Add-Ins," pages 455-480.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: prb global public variables scope<BR>
Keywords          : MdlProb PgmObj<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>
Hardware          : x86<BR>
Issue type        : kbprb<BR>
Solution Type     : kbworkaround<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
