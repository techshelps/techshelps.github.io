

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: Optimizing for Client/Server Performance </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q128808">
<META NAME="KBModify" CONTENT="1998/02/04">
<META NAME="KBCreate" CONTENT="1995/04/11">
<META NAME="Keywords" CONTENT="OdbcOthr kbusage kbfaq">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  This article lists tips to help you optimize performance when you use Open Database Connectivity (ODBC) data sources with Microsoft Access.  This article assumes that you ar...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA1S,QDN9,QA5V,QABM,QA9E,QA39,QDMC,QDKY,QAPN,QABA,QA7O,QAXB,QA26,QBXS,QA7N P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: Optimizing for Client/Server Performance</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 4, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q128808</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 2.0, 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
This article lists tips to help you optimize performance when you use Open
Database Connectivity (ODBC) data sources with Microsoft Access.
<P>
This article assumes that you are familiar with client/server environments
and architectures.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Methods of Accessing Data</h3>
 
<P>
To access server data with a client/server application, you can use one or
more of the following methods:

<UL><LI>Attached tables and views
<LI>SQL pass-through queries to send SQL statements directly to the server
<P>
</UL><h3>Attached Tables and Views</h3>
 
<P>
The most efficient way to handle server data is to attach SQL tables and
views from the server. Microsoft Access stores field and index information
for attached tables. This improves performance when you open the tables.
Note that you must re-attach remote tables if you make changes to fields or
indexes on the server.
<P>
<P><h3>Using SQL Pass-Through Queries</h3>
 
<P>
In many applications, you can use both Microsoft Access queries based on
remote tables and SQL pass-through queries. Pass-through queries offer the
following advantages:

<UL><LI>Microsoft Access does not compile a pass-through query. It sends
   the query directly to the ODBC server, speeding up the application.

<LI>Microsoft Access sends the pass-through query to the server the way you
   enter it. Therefore, more processing occurs on the server and less data
   is exchanged over the network.

<LI>Forms, reports, and Microsoft Access queries can be based on pass-
   through queries using ODBC attached tables.

<LI>You can use SQL Server-specific functionality, such as stored procedures
   and server-based intrinsic functions that have no equivalent in code.

<LI>Update, delete, and append pass-through action queries are much faster
   than action queries based on attached remote tables, especially when
   many records are affected.
<P>
</UL>Pass-through queries have the following disadvantages:

<UL><LI>An SQL pass-through query always returns a snapshot that cannot be
   updated. A Microsoft Access query usually returns a dynaset that
   reflects other users' changes and can be updated.

<LI>You type the commands directly into the SQL Pass-Through Query
   window with the syntax that your server requires. You cannot use the
   graphical query by example (QBE) grid.

<LI>To use a parameter with a pass-through query, you must run the query
   in code and modify the query's SQL property. For an example of how to
   modify the SQL property, see "Building Applications with Microsoft
   Access 97," Chapter 19, "Developing Client/Server Applications," pages
   550-551.
<P>
</UL><h3>Request Less Data from the Server</h3>
 
<P>
Requesting data from the server costs processing time. To optimize
performance, request only those records and fields that you need.
<P>
Reduce the number of bound controls, such as text boxes, combo boxes,
list boxes, and subforms that you use. When a form is opened, each of
these controls requires a query to be sent to the server.
<P>
If the attached ODBC tables have Memo or OLE object fields, you can set
the Visible property of the fields to No and add a toggle button to set
the Visible property to Yes so that users can choose to view it.
<P>
Some attached tables (for example, a table containing the names and
abbreviations of the 50 states) do not change frequently. You can speed up
form loading and reduce server load by using a local copy of these tables.
You can also provide a way to update the local copy with more recent data
from the server.
<P>
<P><h3>Optimizing Queries</h3>
 
<P>
The principal method for optimizing queries (after adding appropriate
indexes on the server) is ensuring that processing takes place on the
server. You should avoid functionality that is not supported by the
server, such as functions specific to Microsoft Access or user-defined
functions. For detailed information about what must be processed locally,
see the Microsoft Jet Database Engine ODBC Connectivity white paper (for
more information about this white paper, see the "Microsoft Jet Database
Engine ODBC Connectivity White Paper" section later in this article).
<P>
To see the Select statement that is being sent to the server, you can
set the TraceSQLMode setting. In Microsoft Access 7.0 and 97, you have
to edit the Registry to add the option for TraceSQLMode.
<P>
For more information on editing the Registry to change ODBC settings,
please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   Article-ID:   <B><A HREF="../ACCESS/Q139044.htm">Q139044</A></B>
   Title:        ACC95: How to Add Former MSACC20.INI ODBC Section to
                 Registry

</PRE>For more information about the TraceSQLMode setting in Microsoft Access 97
search for "TraceSQLMode" using the Find option of the Microsoft Access 97
Help Topics.
<P>
For more information about the TraceSQLMode setting in Microsoft Access
2.0, search for "MSACC20.INI" then "Customizing MSACC20.INI Settings" using
the Microsoft Access Help Menu.
<P>
<P><h3>TryJetAuth Setting</h3>
 
<P>
The TryJetAuth setting controls whether Microsoft Access first attempts to
log on to your server using the Microsoft Access login ID and password. (By
default, the Microsoft Access login ID is "admin" and the password is
blank.) If this fails, Microsoft Access prompts you for a login ID and
password. Unless you have set up Microsoft Access to use the same login ID
and password as your ODBC server, add the line "TryJetAuth=0" to the
HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Office\8.0\Access\Jet\3.5\Engines
\ODBC key of the Windows Registry. This prevents Microsoft Access from
attempting to log on with the wrong ID.
<P>
NOTE: In Microsoft Access 2.0, add the line "TryJetAuth=0" to the
MSACC20.INI file.
<P>
<P><h3>Timestamps</h3>
 
<P>
On servers that support them (such as Microsoft SQL Server), timestamp
fields make updating records more efficient. Timestamp fields are
maintained by the server and are updated every time the record is updated.
If you have a timestamp field, Microsoft Access needs to check only the
unique index and the timestamp field to see whether the record has changed
since it was last retrieved from the server. Otherwise, Microsoft Access
must check all the fields in the record. If you add a timestamp field to an
attached table, re-attach the table in order to inform Microsoft Access of
the new field.
<P>
<P><h3>Transactions</h3>
 
<P>
Using transactions when you update or insert records on attached tables in
Access Basic can improve performance. Transactions enable the Jet database
engine to accumulate multiple updates and write them as a single batch.
With Microsoft SQL Server, keep transactions short because they generate
locks that prevent other users from reading data affected by the current
transaction. Although you can nest transactions using Visual Basic, most
servers do not support nested transactions. Microsoft Access sends only
the first-level transaction to the server.
<P>
<P><h3>Optimizing Recordsets and Code</h3>
 
<P>
You can store all or part of the data contained in Recordset objects of
the Dynaset type in local memory by setting the CacheSize and CacheStart
properties.
<P>
The cache size can be between 5 and 1200 records. If the size of the cache
exceeds available memory, the excess records spill into a temporary disk
file. Applying the FillCache method fills the cache with server data. To
recover the cache memory, set the CacheSize property to zero.
<P>
When you use Recordset variables, use only the functionality that you need.
For example, you can use the DB_APPENDONLY option on the OpenRecordset
method if you only need to add new records to a recordset. If you do not
need editing or updating ability, base your recordsets on SQL pass-through
queries. The fastest method to insert and update records is to use SQL
pass-through queries in code.
<P>
<P><h3>MSysConf Table</h3>
 
<P>
You can create a table named MSysConf on your server to control background
population (the rate at which Microsoft Access reads records from the
server during idle time). You can use this table to set the number of rows
of data that are retrieved at one time and the number of seconds of delay
between each retrieval. If you experience excessive read-locking on the
server, you can adjust the table settings to increase background population
speed. If too much network traffic is generated by background population,
you can adjust the settings to slow it down.
<P>
<P><h3>Microsoft Jet Database Engine ODBC Connectivity White Paper</h3>
 
<P>
An important source for additional information is the Jet Database Engine
ODBC Connectivity white paper. This document discusses the Microsoft Jet
database engine version 3.0 and how it uses ODBC.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information on optimizing client/server applications, see
Microsoft Access "Building Applications," Chapter 19, "Developing
Client/Server Applications," pages 523-556
<P>
For information on how to obtain the Jet Database Engine ODBC Connectivity
white paper, please see the following article in the Microsoft Knowledge
Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../ACCESS/Q128385.htm">Q128385</A></B>
   TITLE     : ACC95: Jet &amp; ODBC White Paper Available on MSL

</PRE>You can also obtain this article through Microsoft FastTips by ordering
item number 128385 from the FastTips Main Menu.
 
<PRE>Keywords          : OdbcOthr kbusage kbfaq
Version           : 2.0 7.0 97
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 4, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
