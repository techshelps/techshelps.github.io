

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC2: Form and Report Modules Have Local Scope </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q112726">
<META NAME="KBModify" CONTENT="1997/04/02">
<META NAME="KBCreate" CONTENT="1994/03/17">
<META NAME="Keywords" CONTENT="FmsOthr kbusage">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  This article describes the effect of  scope  of procedures and variables in form and report modules. Scope refers to the extent to which an identifier (that is, a constant, data ...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QAYL,QAB4,QAB9,QAY5,QBV8,QAGI,QA1S,QAAP,QAY2,QAI2,QAL3,QAJQ,QDN9,QBVV V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC2: Form and Report Modules Have Local Scope</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 2, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q112726</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access version 2.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
This article describes the effect of "scope" of procedures and variables in
form and report modules. Scope refers to the extent to which an identifier
(that is, a constant, data type, variable, or routine) can be referenced
in a program.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The procedures and variables defined in a form or report module have
"local" scope; that is, they and their values do not exist outside of that
object. Attempting to call a function in a form or report module outside
that form or report results in a "reference to undefined function or array"
error message or other "unknown function name..." type of error. A call
made to a subroutine from outside the form or report results in a "syntax
error" message.
<P>
A reference to one of the form's variables from a different module produces
unexpected results. Due to the nature of modules and procedures, a new
variable of the same name is implicitly created with an Empty value
(Variant type 0). If Option Explicit has been specified in the module that
refers to the form's variable, then a "Variable not Defined" compile error
occurs.
<P>
When you plan to create a procedure or variable in a form or report module,
first determine that nothing outside of that form or report will require
that the procedure or variable exist. Any variable or procedure you
write in a form or report module should be useful to that form or report
only.
<P>
If you need to call a procedure from multiple forms or reports, place the
procedure in a global module. Do the same for any variables your code needs
to access from more than one form or report.
<P>
The following example demonstrates the scope of a function in a form module
and the errors that can occur:

<OL><P><LI>Create a new database.

<P><LI>Create the following new form not based on any table and name it Form1:
<P>
<P><PRE>     Form1
     --------------------------
     Command button: Button0
<PRE></PRE>        Caption: Form1_SayHi
        OnClick: =Form1_SayHi()

</PRE><P><LI>In Form1's Design view, choose Code from the View menu. Form1's
   module will be displayed. Type the following function in the module:
<P>
<P><PRE>      Function Form1_SayHi()
<PRE></PRE>        MsgBox "Hi!"
      End Function

</PRE><P><LI>Create the following new form not based on any table, and call it Form2:
<P>
<P><PRE>      Form2
      --------------------------
      Command button: Button0
<PRE></PRE>         Caption: Form1_SayHi
         OnClick: =Form1_SayHi()

</PRE><P><LI>Create a new module and type the following function in the module:
<P>
<P><PRE>      Function Run_Form1_SayHi()
<PRE></PRE>        Run_Form1_SayHi = Form1_SayHi()
      End Function

</PRE><P><LI>Open both forms. Click the command button on Form1. Note thata message
   box with the text "Hi!" is displayed. This works because the function is
   in scope in Form1.

<P><LI>Click the command button on Form2. Note that an error message is
   displayed. This is because the function is out of scope for Form2.

<P><LI>In the module's Immediate window, type the following line, and then
   press ENTER:
<P>
<P><PRE>      ? Run_Form1_SayHi()
</PRE><P>
   Note that the error message, "Reference to undefined Function or array,"
   is displayed. The error occurs because the function is still out of
   scope. Calling the function from anywhere except Form1 results in an
   error.
<P>
</OL>NOTE: In Microsoft Access version 7.0, the scope of procedures and
variables has changed.
<P>
<P><h2>REFERENCES</h2>
 
<P>
Microsoft Access "Building Applications," version 2.0, pages 59-60
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: cbf code behind forms<BR>
Keywords            : FmsOthr kbusage<BR>
Version             : 2.0<BR>
Platform            : WINDOWS<BR>
Hardware            : X86<BR>
Issue type          : kbinfo<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 2, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
