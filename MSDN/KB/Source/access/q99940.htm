

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: How to Wait for a Shelled Process to Finish </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q99940 ">
<META NAME="KBModify" CONTENT="1997/06/08">
<META NAME="KBCreate" CONTENT="1993/06/10">
<META NAME="Keywords" CONTENT="IntpShell kbinterop kbprg PgmApi PgmOthr">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  When you are using the Shell() function or the RunApp macro action to run another program or process, Microsoft Access does not wait for the shelled process to finish before...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAY5,QA1S,QAB9,QBV8,QAH4,QDN9,QAIJ,QDL9,QBWO,QBWN,QBWS,QAUD,QAPN,QAGB,QDIV V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: How to Wait for a Shelled Process to Finish</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 8, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q99940 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 1.0, 1.1, 2.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
When you are using the Shell() function or the RunApp macro action to
run another program or process, Microsoft Access does not wait for the
shelled process to finish before processing the next line in the macro
or function. This causes problems for macros and functions whose
subsequent actions depend on the results of the shelled process.
<P>
This article demonstrates a Microsoft Access function called WaitShell()
that, given an application name or process to run, starts the process and
waits for it to terminate.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following Microsoft Access function, WaitShell(), uses
GetModuleUsage(), a Microsoft Windows API function, to determine if the
shelled process has terminated. The Shell() function, if it successfully
starts the process, returns a handle to the process module. If the process
is no longer running, the handle is invalid and the GetModuleUsage()
function returns a value of 0. The WaitShell() function simply loops until
the module is no longer valid.
<P>
NOTE: You may have the following GetModuleUsage() Windows API function
defined in an existing Microsoft Access library. If you receive a
duplicate procedure name error message, delete the Declare statement
from your code.
<P>
<PRE>   Option Explicit
   Declare Function GetModuleUsage% Lib "Kernel" (ByVal hModule%)

   Function WaitShell( AppName as String)
      Dim hMod as Integer
      hMod = Shell(AppName, 1)
      If (Abs(hMod) &gt; 32) then
         While (GetModuleUsage(hMod))
            DoEvents
         Wend
       Else
         MsgBox "Unable to start " &amp; AppName
      End If
   End Function

   To test the function, create and run the following Microsoft Access
   macro:

      Action
      ------
      RunCode
      MsgBox

      Macro Actions
      -------------------------------------------
      RunCode
         Function Name: =WaitShell("Command.com")
      MsgBox
         Message: Done!

   -or-

   run the following Microsoft Access function:

      Function TestWaitShell()
         x=WaitShell("Command.com")
         MsgBox "Done!"
      End Function

</PRE>Both examples above start instances of the MS-DOS prompt, which remain
until you terminate them by typing "exit" (without the quotations marks)
at the command line and pressing ENTER.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about using the Shell function in Microsoft Access 7.0 
and 97, please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../VBWIN/Q129796.htm">Q129796</A></B>
   TITLE     : How a 32-Bit App Can Determine When a Shelled Process Ends

</PRE>Microsoft Windows "Programmer's Reference, Volume 2: Functions,"
version 3.1, pages 403-404
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: terminate basic shell<BR>
Keywords            : IntpShell kbinterop kbprg PgmApi PgmOthr<BR>
Version             : 1.0 1.1 2.0<BR>
Platform            : WINDOWS<BR>
Hardware            : X86<BR>
Issue type          : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 8, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
