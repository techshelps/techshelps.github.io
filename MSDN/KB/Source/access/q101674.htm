

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC1x: How to Get a List of Object Names in Microsoft Access </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q101674">
<META NAME="KBModify" CONTENT="1997/06/06">
<META NAME="KBCreate" CONTENT="1993/07/20">
<META NAME="Keywords" CONTENT="kbprg PgmObj">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  There is no built-in mechanism in Microsoft Access version 1.x for enumerating a list of form, report, macro, or module names. This article demonstrates an Access Basic function, GetObjectNames(), that you can use to list the names of these objects...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAUJ,QA1S,QDN9,QAH4,QAY5,QABM,QARM,QAPN,QBV8,QAG8,QAB9,QAGX,QBWD,QAW6,QATX V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC1x: How to Get a List of Object Names in Microsoft Access</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 6, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q101674</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 1.0, 1.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
There is no built-in mechanism in Microsoft Access version 1.x for
enumerating a list of form, report, macro, or module names. This article
demonstrates an Access Basic function, GetObjectNames(), that you can use
to list the names of these objects as well as table and query names.
<P>
NOTE: The technique described below relies on the use of system
tables stored with your database. These tables are undocumented and
are subject to change in future versions of Microsoft Access.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
This article assumes that you are familiar with Access Basic and with
creating Microsoft Access applications with the programming tools
provided with Microsoft Access.
<P>
First, create a new module with the code listed below.
<P>
NOTE: In the following sample code, an underscore (_) is used as a
line continuation character. Remove the underscore from the end of the line
when re-creating this code in Access Basic.
<P>
<PRE> '********************************************************************
 ' MODULE DECLARATIONS
 '********************************************************************

 Option Explicit

 '********************************************************************
 ' FUNCTION: GetObjectNames
 '
 ' PURPOSE:
 '    Fills the string array passed as an argument with a list of names
 '    of objects of type ObjectType in the currently opened user
 '    database.
 '
 ' ARGUMENTS:
 '    ObjectType - A string representing the object whose names are to
 '                 be retrieved. ObjectType can be one of the
 '                 following:
 '
 '                 Tables, Queries, Forms, Reports, Macros, Modules
 '
 '    Names      - A single dimensional array of type string
 '
 ' RETURN:
 '    The number of names stored in the Names array. The names
 '    are stored beginning from 0 to GetObjectNames - 1.
 '
 ' NOTES:
 '    This function utilizes information stored in the MySysObject table
 '    of the currently opened user database. The system tables are
 '    undocumented and are subject to change in future versions of
 '    Access.
 '
 '********************************************************************
 Function GetObjectNames (ByVal ObjectType, Names() As String)
   Dim db As Database
   Dim ss As Snapshot
   Dim Count
   Dim SQL
   Dim Msg As String

    SQL = "Select Name,Type from MSysObjects Where Type="

   Select Case ObjectType
      Case "Tables"
         SQL = SQL &amp; "1 And Left(Name,1)&lt;&gt;'~' And Left(Name,4) &lt;&gt; _
                  ""MSys"" Order By Name;"
      Case "Queries"
         SQL = SQL &amp; "5 And Left(Name,1)&lt;&gt;'~' And Mid(Name, _
                  Len(Name) - 3) &lt;&gt; ""0000"" Order By Name;"
      Case "Forms"
         SQL = SQL &amp; "-32768 And Left(Name,1)&lt;&gt;'~' Order By Name;"
      Case "Reports"
         SQL = SQL &amp; "-32764 And Left(Name,1)&lt;&gt;'~' Order By Name;"
      Case "Macros"
         SQL = SQL &amp; "-32766 And Left(Name,1)&lt;&gt;'~' Order By Name;"
      Case "Modules"
         SQL = SQL &amp; "-32761 And Left(Name,1)&lt;&gt;'~' Order By Name;"
      Case Else
         Msg = "Object Name """ &amp; ObjectType &amp; """ is an invalid"
         Msg = Msg &amp; " argument to Function GetObjectNames!"
         MsgBox Msg, 16, "GetObjectNames"
         Exit Function
   End Select

   Set db = CurrentDB()
   Set ss = db.CreateSnapshot(SQL)

   ss.MoveLast
   If ss.RecordCount &gt; 0 Then
      ReDim Names(0 To ss.RecordCount - 1)
   Else
      GetObjectNames = 0
      Exit Function
   End If

   ss.MoveFirst
   Count = 0
   Do While Not ss.EOF
      Names(Count) = ss![name]
      Count = Count + 1
      ss.MoveNext
   Loop

   GetObjectNames = ss.RecordCount
 End Function

 '********************************************************************
 ' FUNCTION: TestGetObjectNames
 '
 ' PURPOSE: Used to demonstrate and test the GetObjectNames function
 '
 ' ARGUMENTS:
 '    ObjectType - A string representing the object whose names are to
 '                 be retrieved. ObjectType can be one of the following:
 '
 '                 Tables, Queries, Forms, Reports, Macros, Modules
 '
 '********************************************************************
 Function TestGetObjectNames (ObjectType)
   Dim Count, i
   ReDim Names(0) As String

   Count = GetObjectNames(ObjectType, Names())

   Debug.Print "Count: " &amp; Count

   For i = 0 To Count - 1
      Debug.Print Names(i)
   Next i

 End Function

</PRE><h3>How to Use the GetObjectNames() Function</h3>
 
<P>
The function TestGetObjectNames(), above, demonstrates how to use
the GetObjectNames() function.

<OL><P><LI>With the module open in Design view, choose Immediate Window from
   the View menu.

<P><LI>Type the following and press ENTER:
<P>
<P><PRE>      ? TestGetObjectNames("Forms")
</PRE><P>
</OL>Result: A list of forms in the currently-open database will print in
the Immediate window.
<P>
<P><h2>REFERENCES</h2>
 
<P>
Microsoft Access "Introduction to Programming," version 1.1, Chapter 8,
"Manipulating Data," pages 124-127
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : kbprg PgmObj<BR>
Version             : 1.0 1.1<BR>
Platform            : WINDOWS<BR>
Hardware            : X86<BR>
Issue type          : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 6, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
