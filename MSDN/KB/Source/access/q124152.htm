

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: Outer Join with WHERE Clause Returns Unexpected Records </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q124152">
<META NAME="KBModify" CONTENT="1997/07/18">
<META NAME="KBCreate" CONTENT="1994/12/20">
<META NAME="Keywords" CONTENT="kbusage QryJoin">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  When you run a query based on two tables (in this example, called table A and table B) with an outer join to include all the records from table A and apply a WHERE clause to tabl...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA5V,QBPJ,QDNB,QAUD,QAY2,QA7O,QA7N,QACF,QBWS,QARR,QAPN,QALW,QDMH,QAE1,QA9N P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: Outer Join with WHERE Clause Returns Unexpected Records</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q124152</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 1.0, 1.1, 2.0, 7.0, 97
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
When you run a query based on two tables (in this example, called table A
and table B) with an outer join to include all the records from table A and
apply a WHERE clause to table B, only those records from table B that have
a matching value in table A are returned. This seems to be the reverse of
what you expected.
<P>
<P><h2>CAUSE</h2>
 
<P>
When you run the query, the outer join is performed first, creating all the
records from table A. Then, the WHERE clause from table B is applied to all
the records, eliminating records from the query. The result set does not
contain all the records from table A, but contains only those where the
condition is met for table B.
<P>
Unlike Microsoft Access, SQL Server currently processes the WHERE before
the Join. This is because they implemented this feature before the ANSI
SQL-92 standard, and before then, there was no outer join spec at all.
Therefore, the same query could return different results against SQL Server
depending on whether you use a Select query or a SQL pass-through query
(in which case SQL Server would handle the query and simply return the
results.)
<P>
<P><h2>RESOLUTION</h2>
 
<P>
If you want to return all the records in table A, you can use two queries.
The first query should apply the WHERE clause to table B, and the second
query should combine table A with the first query to perform the outer
join.
<P>
<P><h2>STATUS</h2>
 
<P>
This type of query processing is by design and complies with the ANSI SQL
92 specification.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 

<OL><P><LI>Open the sample database Northwind.mdb (or NWIND.MDB in versions 1.x
   and 2.0).

<P><LI>Create a new query based on the Categories and the Products tables.
   The two tables should be joined on the CategoryID field (or Category ID
   in versions 1.x and 2.0).

<P><LI>Double-click the join line. In the Join Properties box, select the
   "Include ALL records from 'Categories'..." option button, and then
   click OK.

<P><LI>Drag the CategoryName field (or Category Name in versions 1.x and 2.0)
   from the Categories field list to the first column of the query grid.

<P><LI>Drag the ProductName field (or Product Name in versions 1.x and 2.0)
   field from the Products field list to the second column of the query
   grid.

<P><LI>In the Criteria row of the ProductName column, type "Like A*"
   (without the quotation marks).

<P><LI>Run the query. Note that not all the records from the Categories table
   are returned. Instead, only those records with a Product Name starting
   with the letter "A" are returned.
<P>
</OL><h3>Steps to Return the Expected Recordset</h3>
 

<OL><P><LI>Open the sample database Northwind.mdb.

<P><LI>Create a new query based on the Products table.

<P><LI>Drag the CategoryID and ProductName fields from the Products field
    list to the query grid.

<P><LI>In the Criteria row for the ProductName field, type "Like A*"
    (without the quotation marks).

<P><LI>Save the query as Query1, and then close it.

<P><LI>Create a new query based on the Categories table and the Query1
    query.

<P><LI>Drag the CategoryName field from the Categories field list to the
    query grid.

<P><LI>Drag the ProductName field from the Query1 field list to the query
    grid.

<P><LI>Double-click the join line. In the Join Properties box, select the
    "Include ALL records from 'Categories'..." option button, and then
    click OK.

<P><LI>Run the query. Note that all the records from the Categories table
    are returned, with the ProductName field filled in for records
    with a matching record in the Products table.
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : kbusage QryJoin<BR>
Version             : 1.0 1.1 2.0 7.0 97<BR>
Platform            : WINDOWS<BR>
Hardware            : X86<BR>
Issue type          : kbprb<BR>
Resolution Type     : Info_Provided<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
