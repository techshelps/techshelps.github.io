

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: FileCopy Statement May Not Copy Open Files </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q172711">
<META NAME="KBModify" CONTENT="1997/08/14">
<META NAME="KBCreate" CONTENT="1997/08/13">
<META NAME="Keywords" CONTENT="MdlGnrl kbprg">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  When you programmatically copy a file with the FileCopy statement in Visual Basic for Applications, you may receive the following error message:     Run-time error '70'     ...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QASB,QA9N,QA1S,QAB9,QBS0,QAY5,QAPN,QAGI,QDN9,QBN0,QDL9,QBWO,QBWN,QDNJ,QDKY P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: FileCopy Statement May Not Copy Open Files</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 14, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q172711</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 7.0, 97
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
When you programmatically copy a file with the FileCopy statement in Visual
Basic for Applications, you may receive the following error message:
<P>
<PRE>   Run-time error '70'

   Permission denied

</PRE>This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
<P><h2>CAUSE</h2>
 
<P>
The file is currently open, which prevents the FileCopy statement from
copying the file.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Instead of using the FileCopy statement, use one of the following methods
to programmatically copy the file.
<P>
WARNING: The following functions enable you to copy an open file. If the
source file is changed while the copy operation is in process, the
destination file may be incomplete or may become corrupted.
<P>
<P><h3>Method 1 - Calling the CopyFile() function from the Windows API</h3>
 
<P>
One method to programmatically copy a file is to call the CopyFile()
function from the Microsoft Windows API. To call the CopyFile() function
from the Microsoft Windows API, follow these steps:

<OL><P><LI>Repeat steps 1 - 4 from the "Steps to Reproduce Behavior" section later
   in this article.

<P><LI>Create a module and type the following lines in the Declarations
   section:
<P>
<P><PRE>      Option Explicit
</PRE><P>
<P><PRE>      Declare Function apiCopyFile Lib "kernel32" Alias "CopyFileA" _
      (ByVal lpExistingFileName As String, _
      ByVal lpNewFileName As String, _
      ByVal bFailIfExists As Long) As Long
</PRE>
<P><LI>Type the following procedure:
<P>
<PRE>      Sub CopyFile(SourceFile As String, DestFile As String)
      '---------------------------------------------------------------
      ' PURPOSE: Copy a file on disk from one location to another.
      ' ACCEPTS: The name of the source file and destination file.
      ' RETURNS: Nothing
      '---------------------------------------------------------------
        Dim Result As Long
         If Dir(SourceFile) = "" Then
            MsgBox Chr(34) &amp; SourceFile &amp; Chr(34) &amp; _
               " is not valid file name."
         Else
            Result = apiCopyFile(SourceFile, DestFile, False)
         End If
      End Sub

</PRE><P><LI>To test this procedure, type the following line in the Debug window,
   and then press ENTER:
<P>
<P><PRE>      CopyFile "&lt;path to Northwind.mdb&gt;", "C:\Northwind.mdb"
</PRE><P>
   Note that Northwind.mdb is copied to the root folder of drive C, even
   though it is currently open in another instance of Microsoft Access.
<P>
</OL><h3>Method 2 - Calling the MS-DOS Copy Command</h3>
 
<P>
Another method to programmatically copy a file is to call the MS-DOS Copy
command from a Shell() function in Visual Basic for Applications. To call
the MS-DOS Copy command, follow these steps:

<OL><P><LI>Repeat steps 1 - 4 from the "Steps to Reproduce Behavior" section later
   in this article.

<P><LI>Create a module and type the following line in the Declarations
   section if it is not already there:
<P>
<P><PRE>      Option Explicit
</PRE>
<P><LI>If you are using Microsoft Windows 95, type the following procedure:
<P>
<PRE>      Sub CopyFile(SourceFile As String, DestFile As String)
      '---------------------------------------------------------------
      ' PURPOSE: Copy a file on disk from one location to another.
      ' ACCEPTS: The name of the source file and destination file.
      ' RETURNS: Nothing
      '---------------------------------------------------------------
         Dim CopyString As String
         If Dir(SourceFile) = "" Then
            MsgBox Chr(34) &amp; SourceFile &amp; Chr(34) &amp; _
               " is not a valid file name."
         Else
            SourceFile = Chr(34) &amp; SourceFile &amp; Chr(34)
            DestFile = Chr(34) &amp; DestFile &amp; Chr(34)
            CopyString = "COMMAND.COM /C COPY " &amp; SourceFile &amp; _
               " " &amp; DestFile
            Call Shell(CopyString, 0)
         End If
      End Sub

   If you are using Microsoft Windows NT, use the same procedure, but
   change the line

      CopyString = "COMMAND.COM /C COPY " &amp; SourceFile &amp; _

   to:

      CopyString = "CMD.EXE /C COPY " &amp; SourceFile &amp; _

</PRE><P><LI>To test this procedure, type the following line in the Debug window,
   and then press ENTER:
<P>
<P><PRE>      CopyFile "&lt;path to Northwind.mdb&gt;", "C:\Northwind.mdb"
</PRE><P>
   Note that Northwind.mdb is copied to the root folder of drive C, even
   though it is currently open in another instance of Microsoft Access.
<P>
</OL><h2>STATUS</h2>
 
<P>
This behavior is by design.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 

<OL><P><LI>Start Microsoft Access.

<P><LI>Open the sample database Northwind.mdb.

<P><LI>Start a new instance of Microsoft Access.

<P><LI>Create a new blank database.

<P><LI>Create a module and type the following line in the Declarations
   section if it is not already there:
<P>
<P><PRE>      Option Explicit
</PRE>
<P><LI>Type the following procedure:
<P>
<PRE>      Sub CopyFile(SourceFile As String, DestFile As String)
         FileCopy SourceFile, DestFile
      End Function

</PRE><P><LI>To test this procedure, type the following line in the Debug window,
   and then press ENTER:
<P>
<P><PRE>      CopyFile "&lt;path to Northwind.mdb&gt;", "C:\Northwind.mdb"
</PRE><P>
   Note that you receive the error listed in the "Symptoms" section.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about the FileCopy statement, search the Help Index
for "FileCopy statement".
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: file copy<BR>
Keywords          : MdlGnrl kbprg<BR>
Version           : WINDOWS:7.0,97<BR>
Platform          : WINDOWS<BR>
Hardware          : x86<BR>
Issue type        : kbprb<BR>
Solution Type     : kbworkaround<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 14, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
