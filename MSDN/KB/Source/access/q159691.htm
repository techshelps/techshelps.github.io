

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: Procedure to Create Data Sources and Relink ODBC Tables </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q159691">
<META NAME="KBModify" CONTENT="1997/05/20">
<META NAME="KBCreate" CONTENT="1996/11/19">
<META NAME="Keywords" CONTENT="kbusage OdbcHowto TblDsign TblModfy">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  This article shows how to create a lookup table that contains the necessary information to register an Open Database Connectivity (ODBC) Data Source Name (DSN), and create n...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA9E,QAZV,QA7O,QA7N,QA1S,QAYY,QBS0,QAK6,QAUJ,QATX,QAY5,QDN9,QAPN,QAB9,QAMB P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: Procedure to Create Data Sources and Relink ODBC Tables</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  May 20, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q159691</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
This article shows how to create a lookup table that contains the necessary
information to register an Open Database Connectivity (ODBC) Data Source
Name (DSN), and create new or refresh existing ODBC tables in your
application.
<P>
This article assumes that you are familiar with using the tools supplied
for setting up and using ODBC Data Sources.
<P>
This article also assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
When you link a table to a Microsoft Access database using an ODBC Data
Source, the information regarding that connection is stored in the
Description property of the table. If you move the database to another
computer that does not contain the Data Source Name (DSN) for the ODBC
connection to the linked table, you receive the following error when you
try to open the table:
<P>
<PRE>   ODBC--connection to &lt;ServerName&gt; failed.

</PRE>Visual Basic for Applications supports the RegisterDatabase method to
create or modify the DSNs on a computer. Use it to refresh your existing
ODBC connections with new information, or create new TableDef objects based
on the DSN.
<P>
When you implement this technique in your database, you ensure that a code
mechanism exists that will set up and relink to any ODBC Data Sources you
use in your application.
<P>
The steps in the following example create a DSN for a SQL Server database:

<OL><P><LI>Create a new database called TestODBC.mdb

<P><LI>Create the following table to store SQL Server ODBC Data Source
   information. You can modify the fields in this table to store the DSN
   information for any ODBC driver:
<P>
<P><PRE>      Table: tblODBCDataSources
      -------------------------------
      Field Name: DataBase
<PRE></PRE>         Data Type: Text
         Field Size: 50
      Field Name: UID
         Data Type: Text
         Field Size: 50
      Field Name: PWD
         Data Type: Text
         Field Size: 50
      Field Name: Server
         Data Type: Text
         Field Size: 50
      Field Name: ODBCTableName
         Data Type: Text
         Field Size: 50
      Field Name: LocalTableName
         Data Type: Text
         Field Size: 50
      Field Name: DSN
         Data Type: Text
         Field Size: 50

      Table Properties: tblODBCDataSources
      ------------------------------------
      PrimaryKey: LocalTableName

</PRE><P><LI>Create a record in the tblODBCDataSources table with information about
   your ODBC databases. This example uses a SQL Server connection to the
   Authors table in the Pubs database; substitute the correct information
   for your environment, and add a record for each linked table in your
   database:
<P>
<PRE>      Field Name          Value
      -------------------------------------
      DataBase            Pubs
      UID                 sa
      PWD                 &lt;blank&gt;
      Server              SQLPUBS
      ODBCTableName       dbo.authors
      LocalTableName      Authors
      DSN                 Pubs

</PRE><P><LI>Create a module and type the following line in the Declarations
   section if it is not already there:
<P>
<P><PRE>      Option Explicit
</PRE>
<P><LI>Type the following procedures:
<P>
<P><PRE>      '***************************************************************
      'The DoesTblExist function validates the existence of a TableDef
      'object in the current database. The result determines if an
      'object should be appended or its Connect property refreshed.
      '***************************************************************
      Function DoesTblExist(strTblName As String) As Boolean
<PRE></PRE>         On Error Resume Next
         Dim db As Database, tbl As TableDef
         Set db = CurrentDb
         Set tbl = db.TableDefs(strTblName)
         If Err.Number = 3265 Then   ' Item not found.
            DoesTblExist = False
            Exit Function
         End If
         DoesTblExist = True
      End Function

      Function CreateODBCLinkedTables() As Boolean
         On Error GoTo CreateODBCLinkedTables_Err
         Dim strTblName As String, strConn As String
         Dim db As Database, rs As Recordset, tbl As TableDef
         ' ---------------------------------------------
         ' Register ODBC database(s)
         ' ---------------------------------------------
         Set db = CurrentDb
         Set rs = db.OpenRecordset("tblODBCDataSources")
         With rs
            While Not .EOF
               DBEngine.RegisterDatabase rs("DSN"), _
                        "SQL Server", _
                        True, _
                        "Description=VSS - " &amp; rs("DataBase") &amp; _
                        Chr(13) &amp; "Server=" &amp; rs("Server") &amp; _
                        Chr(13) &amp; "Database=" &amp; rs("DataBase")
               ' ---------------------------------------------
               ' Link table
               ' ---------------------------------------------
               strTblName = rs("LocalTableName")
               strConn = "ODBC;"
               strConn = strConn &amp; "DSN=" &amp; rs("DSN") &amp; ";"
               strConn = strConn &amp; "APP=Microsoft® Access;"
               strConn = strConn &amp; "DATABASE=" &amp; rs("DataBase") &amp; ";"
               strConn = strConn &amp; "UID=" &amp; rs("UID") &amp; ";"
               strConn = strConn &amp; "PWD=" &amp; rs("PWD") &amp; ";"
               strConn = strConn &amp; "TABLE=" &amp; rs("ODBCTableName")
               If (DoesTblExist(strTblName) = False) Then
                  Set tbl = db.CreateTableDef(strTblName, _
                                dbAttachSavePWD, rs("ODBCTableName"), _
                                strConn)
                  db.TableDefs.Append tbl
               Else
                  Set tbl = db.TableDefs(strTblName)
                  tbl.Connect = strConn
                  tbl.RefreshLink
               End If

               rs.MoveNext
            Wend
         End With
         CreateODBCLinkedTables = True
         MsgBox "Refreshed ODBC Data Sources", vbInformation
      CreateODBCLinkedTables_End:
         Exit Function
      CreateODBCLinkedTables_Err:
         MsgBox Err.Description, vbCritical, "MyApp"
         Resume CreateODBCLinkedTables_End
      End Function

</PRE><P><LI>To test this function, type the following line in the Debug window,
   and then press ENTER:
<P>
<P><PRE>       ?CreateODBCLinkedTables()
</PRE><P>
   Note that you receive the message "Refreshed ODBC Data Sources." Also
   note that a new linked table called Authors exists in your database, and
   a new User DSN called Pubs exists in the ODBC Administrator in Control
   Panel.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about the RegisterDatabase() function, search the Help
Index for "RegisterDatabase method," or ask the Microsoft Access 97 Office
Assistant.
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : kbusage OdbcHowto TblDsign TblModfy<BR>
Version             : 7.0 97<BR>
Platform            : WINDOWS<BR>
Hardware            : X86<BR>
Issue type          : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  May 20, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
