

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: How to Retrieve Windows for Workgroups User Information </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q101676">
<META NAME="KBModify" CONTENT="1997/06/06">
<META NAME="KBCreate" CONTENT="1993/07/20">
<META NAME="Keywords" CONTENT="kbprg PgmApi">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  Using the Microsoft Windows for Workgroups application programming interface (API), you can retrieve user information, such as user name, workgroup, domain, and computer nam...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAY5,QBWO,QAB9,QA1S,QBV8,QAIV,QDN9,QAB4,QAH4,QA5F,QATX,QAMA,QALW,QDL9,QBWN V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: How to Retrieve Windows for Workgroups User Information</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 6, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q101676</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 1.0, 1.1, 2.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
Using the Microsoft Windows for Workgroups application programming
interface (API), you can retrieve user information, such as user name,
workgroup, domain, and computer name, about the currently running computer.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Windows for Workgroups includes a function called NetWkstaGetInfo()
that returns information about a computer. This function is especially
useful for multiuser applications.
<P>
The following procedure explains how to use Access Basic and several
Windows API calls to gain access to the NetWkstaGetInfo() function:

<OL><P><LI>Create a new module containing the following declarations and
   functions:
<P>
   NOTE: In the following sample code, an underscore (_) is used as a line-
   continuation character. Remove the underscore from the end of the line
   when re-creating this code in Access Basic.
<P>
   NOTE: You may have some Microsoft Windows API functions defined in an
   existing Microsoft Access library; therefore, your declarations may be
   duplicates. If you receive a duplicate procedure name error message,
   remove or comment out the declarations statement in your code.
<P>
   NOTE: Make sure to choose the Compile All command from the Run menu to
   verify that you do not receive any compilation errors.
<P>
<P><PRE>      Option Explicit
      Declare Function NetWkstaGetInfo% Lib "NetAPI.DLL" (ByVal lServer&amp;, _
<PRE></PRE>         ByVal sLevel%, ByVal pbBuffer&amp;, ByVal cbBuffer%, pcbTotalAvail%)
      Declare Function GlobalAlloc% Lib "Kernel" (ByVal fFlags%, _
         ByVal nSize&amp;)
      Declare Function GlobalLock&amp; Lib "Kernel" (ByVal hMem%)
      Declare Function GlobalUnlock% Lib "Kernel" (ByVal hMem%)
      Declare Function GlobalFree% Lib "Kernel" (ByVal hMem%)
      Declare Sub lstrcpy Lib "Kernel" (ByVal dest As Any, _
         ByVal src As Any)
      Declare Sub hmemcpy Lib "Kernel" (ByVal dest As Any, _
         ByVal src As Any, ByVal size As Long)

      Function GetBinInt (sobj As String, off As Integer)
         If (Asc(Mid$(sobj, off + 1, 1)) &lt; 128) Then
            GetBinInt = Asc(Mid$(sobj, off, 1)) +_
                            Asc(Mid$(sobj, off + 1, 1)) * 256
         Else
            GetBinInt = ((&amp;HFF - Asc(Mid$(sobj, off + 1, 1))) * 256) - _
                          Asc(Mid$(sobj, off, 1))
         End If
      End Function

      Function GetWorkstationInfo (sComputer As String, _
         sUserName As String, sWorkgroup As String, sLogonDomain As String)
         Dim nRetSize As Integer, nStruct, ret As Integer, dummy As Integer
         Dim hMem As Integer, lpMem As Long, sTemp As String

         ' Get the size of the return structure.
         ret = NetWkstaGetInfo(0&amp;, 10, 0&amp;, 0, nRetSize)
         If (ret &lt;&gt; 0) And (ret &lt;&gt; 2123) Then
            GetWorkstationInfo = False
            Exit Function
         End If

         ' Allocate memory for the structure.
         hMem = GlobalAlloc(0, CLng(nRetSize))
         nStruct = nRetSize
         If (hMem &lt;&gt; 0) Then
            lpMem = GlobalLock(hMem)

            ' Read workstation information into structure.
            ret = NetWkstaGetInfo(0&amp;, 10, lpMem, nRetSize, nRetSize)
            If (ret = 0) Then
               sTemp = Space(100)
               hmemcpy sTemp, lpMem, nStruct

               ' Retrieve the computer name.
               sComputer = Space(100)
               lpMem = CLng(GetBinInt(sTemp, 1)) +_
                           (CLng(GetBinInt(sTemp, 3)) * CLng(&amp;H10000))
               lstrcpy sComputer, lpMem
               sComputer = Mid(sComputer, 1, InStr(sComputer, Chr(0)) - 1)

               ' Retrieve the user name.
               sUserName = Space(100)
               lpMem = CLng(GetBinInt(sTemp, 5)) +_
                           (CLng(GetBinInt(sTemp, 7)) * &amp;H10000)
               lstrcpy sUserName, lpMem
               sUserName = Mid(sUserName, 1, InStr(sUserName, Chr(0)) - 1)

               ' Retrieve the workgroup name.
               sWorkgroup = Space(100)
               lpMem = CLng(GetBinInt(sTemp, 9)) +_
                           (CLng(GetBinInt(sTemp, 11)) * &amp;H10000)
               lstrcpy sWorkgroup, lpMem
               sWorkgroup = Mid(sWorkgroup, 1, InStr(sWorkgroup, _
                                                     Chr(0)) - 1)

               ' Retrieve the logon domain name.
               sLogonDomain = Space(100)
               lpMem = CLng(GetBinInt(sTemp, 15)) +_
                           (CLng(GetBinInt(sTemp, 17)) * &amp;H10000)
               lstrcpy sLogonDomain, lpMem
               sLogonDomain = Mid(sLogonDomain, 1, InStr(sLogonDomain, _
                                  Chr(0)) - 1)
            End If
            ' Free the memory allocated.
            dummy = GlobalUnlock(hMem)
            dummy = GlobalFree(hMem)
         Else
            ret = -1
         End If
         GetWorkstationInfo = IIf(ret = 0, True, False)
      End Function

</PRE><P><LI>Test this function by creating the following Access Basic function:
<P>
<PRE>      Sub ShowInfo ()
         Dim a$, b$, c$, d$

         If GetWorkstationInfo(a$, b$, c$, d$) Then
            MsgBox a$ &amp; " " &amp; b$ &amp; " " &amp; c$ &amp; " " &amp; d$
         Else
            MsgBox "Unable to get information."
         End If
      End Sub

</PRE><P><LI>In the Immediate window, type the following, and the press ENTER:
<P>
<P><PRE>      ShowInfo
</PRE><P>
</OL>Note that either a dialog box displaying information about the computer,
or, if you are running this function on a non-Windows for Workgroups
computer, an error message stating "Unable to get information" is
displayed.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For an example of this article in Microsoft Access version 7.0, please see
the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q148835.htm">Q148835</A></B>
   TITLE:      ACC: How to Retrieve Workgroup Information Under Win32
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: user name networks<BR>
Keywords            : kbprg PgmApi<BR>
Version             : 1.0 1.1 2.0<BR>
Platform            : WINDOWS<BR>
Hardware            : X86<BR>
Issue type          : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 6, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
