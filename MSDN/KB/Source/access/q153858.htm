

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC95: How to Create a USysRegInfo Table for Installing Add-ins </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q153858">
<META NAME="KBModify" CONTENT="1997/06/04">
<META NAME="KBCreate" CONTENT="1996/07/19">
<META NAME="Keywords" CONTENT="kbusage WzAdmgr">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  You can create an add-in database for the purpose of storing a wizard (or builder) that provides additional functionality to Microsoft Access. In your add-in database, you c...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA5V,QA7O,QA7N,QAIK,QAKD,QA50,QAUJ,QA1S,QAH0,QAP2,QAGU,QDMH,QAKC,QAPN,QAA1 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC95: How to Create a USysRegInfo Table for Installing Add-ins</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 4, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q153858</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access version 7.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
You can create an add-in database for the purpose of storing a wizard (or
builder) that provides additional functionality to Microsoft Access. In
your add-in database, you can create a table called USysRegInfo that allows
your wizard (or builder) to be installed by the Add-in Manager and to be
opened from the Add-ins menu.
<P>
When you create the USysRegInfo table, you must follow strict guidelines
for the table's structure and the content of its records. This article
provides step-by-step instructions for creating the USysRegInfo table.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
When a wizard or builder is installed by the Add-in Manager, new entries or
keys are created in the Windows Registry. The values for these keys are
stored in the USysRegInfo table. For this reason, the USysRegInfo table
must have only four fields with the following names and data types:
<P>
<PRE>   Field Name   Data Type   Field Size
   ----------   ---------   ----------
   Subkey       Text        255
   Type         Number      Long Integer
   ValName      Text        255
   Value        Text        255

</PRE>The field named Type specifies the type of registry entry: key (0), string
(1), or DWORD (4).
<P>
The Subkey entries in the USysRegInfo table will always begin with either
HKEY_CURRENT_ACCESS_PROFILE or HKEY_LOCAL_MACHINE. If a user profile is in
use when Add-in Manager is invoked and the Subkey entries begin with
HKEY_CURRENT_ACCESS_PROFILE, then registry entries will be created under
the keys for that particular profile. If no profile is in use at the time,
then the registry entries will be created under HKEY_LOCAL_MACHINE. If
HKEY_LOCAL_MACHINE is used instead, registry entries will always be written
below HKEY_LOCAL_MACHINE.
<P>
NOTE: You do not have to create the USysRegInfo records in the same order
that the guidelines in this article present. However, the first record you
create for each wizard should always be the record that has a 0 in the Type
field and blanks in the ValName and Value fields.
<P>
<P><h3>Procedures to create USysRegInfo records for Menu Add-ins</h3>
 
<P>
NOTE: This article assumes that HKEY_CURRENT_ACCESS_PROFILE will be used to
begin the text for all the Subkey field values; but, if appropriate for
your wizard, this may be changed to HKEY_LOCAL_MACHINE.

<OL><P><LI>You must add three records to the USysRegInfo table. The values in the
   Subkey field for all three records should be
<P>
<P><PRE>      HKEY_CURRENT_ACCESS_PROFILE\Menu Add-ins\&lt;Menu Add-in Name&gt;
</PRE><P>
   where &lt;Menu Add-in Name&gt; is the name you want to appear in the Add-Ins
   submenu of the Microsoft Access user interface. This will also be the
   name of the registry key where values will be written to.

<P><LI>The first of the three records should have 0 for the Type field and the
   ValName, and Value fields should be blank. This record signifies to the
   Add-in Manager that registry keys will be added. This applies to each
   type of wizard described in this article.

<P><LI>The second record should have a 1 in the Type field and "Expression"
   (without the quotation marks) in the ValName field. The Value field
   should have an equal sign, followed by the name of the function that
   will start the Menu Add-in, for example:
<P>
<P><PRE>      =Sample_Menu_Addin()
</PRE><P>
   NOTE: If the equal sign is not present, Microsoft Access will try to
   run a macro in the user's database, rather than a function in the add-in
   database.

<P><LI>The third record should have a 1 in the Type field and "Library"
   (without the quotation marks) in the ValName field. The Value field
   should contain the path and name of the add-in database. The path is
   represented by "|ACCDIR\" (without the quotation marks), which signifies
   the path to the folder where Microsoft Access is installed, for example:
<P>
<P><PRE>      |ACCDIR\wzaddin.mda
</PRE><P>
</OL><h3>Procedures to create USysRegInfo records for Form and Report Wizards</h3>
 
<P>
NOTE: This article assumes that HKEY_CURRENT_ACCESS_PROFILE will be used to
begin the text for all the Subkey field values; but, if appropriate for
your wizard, this may be changed to HKEY_LOCAL_MACHINE.

<OL><P><LI>You must add seven records to the USysRegInfo table to define the
   registry values for form and report wizards. The values in the Subkey
   fields for all the records should be
<P>
<P><PRE>      HKEY_CURRENT_ACCESS_PROFILE\Wizards\&lt;WizardType&gt;\&lt;WizardName&gt;
</PRE><P>
   where &lt;WizardType&gt; can be Form Wizards or Report Wizards, and
   &lt;WizardName&gt; is the name that you want to display in the New Object
   dialog box (where the user chooses which wizard to run). &lt;WizardName&gt;
   is also the name of the registry key where values will be written.

<P><LI>The first of the seven records should have 0 for the Type field, and the
   ValName and Value fields should be blank. This record signifies to the
   Add-in Manager that registry keys will be added. This applies to each
   type of wizard described in this article.

<P><LI>The second record should have a 1 in the Type field, and the ValName
   field should be "Bitmap" (without the quotation marks). The Value field
   should contain the path to the bitmap (.bmp) that is displayed above the
   description on the left side of the New Object dialog box. The wizard
   will still install if this record is not included, but no graphic will
   appear in the New Object dialog box.

<P><LI>The third record should have a 4 in the Type field, and the ValName
   field should be "Datasource Required" (without the quotation marks). The
   Value field can be either 1 or 0, and it defines whether or not the user
   must choose a table or query from which the form or report wizard will
   obtain its data. A value of 1 signifies that the user must choose a
   table or query.

<P><LI>The fourth record should have a 1 in the Type field, and the ValName
   field should be "Description" (without the quotation marks). The value
   field should contain user-defined text that describes the wizard. The
   description is displayed on the left side of the New Object dialog box.

<P><LI>The fifth record should have a 1 in the Type field, and the ValName
   field should be "Function" (without the quotation marks). The value
   field should contain the name of the function that is used to start the
   wizard. Unlike with Menu Add-ins, an equal sign does not precede the
   function name, and opening and closing parentheses should not follow the
   function name.

<P><LI>The sixth record should have a 4 in the Type field, and the ValName
   field should be "Index" (without the quotation marks). The Value field
   should have a number that signifies the order in which the wizard will
   appear in the wizards list in the New Object Dialog box. A value of 0
   signifies the first item in the list.

<P><LI>The seventh record should have a 1 in the Type field, and the ValName
   field should be "Library" (without the quotation marks). The Value field
   should contain the path and name of the add-in database. The path is
   represented by "|ACCDIR\" (without the quotation marks), which signifies
   the path to the folder where Microsoft Access is installed, for example:
<P>
<P><PRE>      |ACCDIR\wzaddin.mda
</PRE><P>
</OL><h3>Procedures to create USysRegInfo records for Table and Query Wizards</h3>
 
<P>
NOTE: This article assumes that HKEY_CURRENT_ACCESS_PROFILE will be used to
begin the text for all the Subkey field values; but, if appropriate for
your wizard, this may be changed to HKEY_LOCAL_MACHINE.

<OL><P><LI>You must add six records to the USysRegInfo table to define the registry
   values for table and query wizards. The values in the Subkey fields for
   all records should be
<P>
<P><PRE>      HKEY_CURRENT_ACCESS_PROFILE\Wizards\&lt;WizardType&gt;\&lt;WizardName&gt;
</PRE><P>
   where &lt;WizardType&gt; can be Query Wizards or Table Wizards, and
   &lt;WizardName&gt; is the name that you want to display in the New Object
   dialog box (where the user chooses which wizard to run). &lt;WizardName&gt;
   is also the name of the registry key where values will be written.

<P><LI>The first of the six records should have 0 for the Type field, and the
   ValName and Value fields should be blank. This record signifies
   to the Add-in Manager that registry keys will be added. This applies to
   each type of wizard described in this article.

<P><LI>The second record should have a 1 in the Type field, and the ValName
   field should be "Bitmap" (without the quotation marks). The Value field
   should contain the path to the bitmap (.bmp) that is displayed above the
   description on the left side of the New Object dialog box. The wizard
   will still install if this record is not included, but no graphic will
   appear in the New Object dialog box.

<P><LI>The third record should have a 1 in the Type field, and the ValName
   field should be "Description" (without the quotation marks). The Value
   field should contain user-defined text that describes the wizard. The
   description is displayed on the left side of the New Object dialog box.

<P><LI>The fourth record should have a 1 in the Type field, and the ValName
   field should be "Function" (without the quotation marks). The Value
   field should contain the name of the function that is used to start the
   wizard. Unlike with Menu Add-ins, an equal sign does not precede the
   function name, and opening and closing parentheses should not follow the
   function name.

<P><LI>The fifth record should have a 4 in the Type field, and the ValName
   field should be "Index" (without the quotation marks). The Value field
   should have a number that signifies the order in which the wizard will
   appear in the wizards list in the New Object Dialog box. A value of 0
   signifies the first item in the list.

<P><LI>The sixth record should have a 1 in the Type field, and the ValName
   field should be "Library" (without the quotation marks). The Value field
   should contain the path and name of the add-in database. The path is
   represented by "|ACCDIR\" (without the quotation marks), which signifies
   the path to the folder where Microsoft Access is installed, for example:
<P>
<P><PRE>      |ACCDIR\wzaddin.mda
</PRE><P>
</OL>Procedures to create USysRegInfo records for Control Wizards, Property
Wizards, or OLE Custom Control Wizards
 
<P>
NOTE: This article assumes that HKEY_CURRENT_ACCESS_PROFILE will be used to
begin the text for all the Subkey field values; but, if appropriate for
your wizard, this may be changed to HKEY_LOCAL_MACHINE.

<OL><P><LI>You must add five records to the USysRegInfo table to define the
   registry values for Control Wizards, Property Wizards, or OLE Custom
   Control Wizards. The values in the Subkey fields for all four records
   should be
<P>
   HKEY_CURRENT_ACCESS_PROFILE\Wizards\&lt;WizardType&gt;\&lt;SubType&gt;\&lt;WizardName&gt;
<P>
   where &lt;WizardType&gt; can be Control Wizards, Property Wizards, or OLE
   CUSTOM CONTROL WIZARDS (must be in all uppercase); where &lt;SubType&gt;
   will depend upon the &lt;WizardType&gt;; and where &lt;WizardName&gt; is the name of
   the registry key where values will be written.
<P>
   The following are valid subtypes for Control Wizards:
<P>
<P><PRE>      Label, TextBox, OptionGroup, ToggleButton, OptionButton, CheckBox,
      ComboBox, ListBox, CommandButton, Image, UnboundObjectFrame,
      BoundObjectFrame, PageBreak, SubformSubreport, Line, Rectangle
</PRE><P>
   The following are examples of subtypes that can be used with Property
   Wizards:
<P>
<P><PRE>      BackColor, BorderColor, FieldName, ForeColor, InputMask,
      LinkChildFields, LinkMasterFields, MenuBar, Module, ODBCConnectStr,
      Picture, ShortcutMenuBar
</PRE><P>
   The subtype for OLE Custom Control Wizards is the Class property of the
   OLE custom control. To see this value, open a form or report in Design
   view, use the right mouse button to click the OLE custom control, click
   Properties, and then read the value in the Class box.

<P><LI>The first of the five records should have 0 for the Type field, and the
   ValName and Value fields should be blank. This record signifies to the
   Add-in Manager that registry keys will be added. This applies to each
   type of wizard described in this article.

<P><LI>The second record should have a 4 in the Type field, and the ValName
   field should be "Can Edit" (without the quotation marks). The Value
   field defines whether or not the wizard can be used to modify an
   existing control or property, or if it will only be used to write new
   ones. A value of 1 signifies that the wizard can be used to modify.

<P><LI>The third record should have a 1 in the Type field, and the ValName
   field should be "Description" (without the quotation marks). The Value
   field should contain user-defined text that describes the wizard. The
   description is displayed in the Choose Builder dialog box (if more than
   one wizard has been defined).

<P><LI>The fourth record should have a 1 in the Type field, and the ValName
   field should be "Function" (without the quotation marks). The Value
   field should contain the name of the function used to start the wizard
   or builder. Unlike with Menu Add-ins, an equal sign does not precede the
   function name, and opening and closing parentheses should not follow the
   function name.

<P><LI>The fifth record should have a 1 in the Type field, and the ValName
   field should be "Library" (without the quotation marks). The Value field
   should contain the path and name of the add-in database. The path is
   represented by "|ACCDIR\" (without the quotation marks), which signifies
   the path to the folder where Microsoft Access is installed, for example:
<P>
<P><PRE>      |ACCDIR\wzaddin.mda
</PRE><P>
</OL> 
<P>
After you create the USysRegInfo table, a user can use the Add-in manager
to install the wizards you have created. To install the wizards with the
Add-in Manager, follow these steps:

<OL><P><LI>On the Tools menu, point to Add-ins, and then click Add-in Manager.

<P><LI>Select the appropriate add-in from the list of available add-ins. If the
   add-in database had not been copied to the user's Microsoft Access
   folder, it will not appear in the list. However, you can click Add New
   to locate the add-in database and select it. It will be copied to the
   Microsoft Access folder and will subsequently appear in the available
   add-ins list.

<P><LI>Click Install. The Add-In manager will create registry entries based on
   the USysRegInfo table, and your wizards will be installed.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
"Building Applications with Microsoft Access for Windows 95," Chapter 16,
"Creating Wizards, Builders, and Add-ins", pages 359-375
<P>
For more information about creating and testing Add-ins, please see the
following articles in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../ACCESS/Q143270.htm">Q143270</A></B>
   TITLE     : ACC95: Creating and Testing Add-ins Paper Available on MSL

</PRE></OL>For more information about the UsysRegInfo table, search on "USysRegInfo"
using the Microsoft Access for Windows 95 Help Index.
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : kbusage WzAdmgr<BR>
Version             : 7.0<BR>
Platform            : WINDOWS<BR>
Hardware            : X86<BR>
Issue type          : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 4, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
