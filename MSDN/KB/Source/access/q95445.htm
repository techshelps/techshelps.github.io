

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC1x: Updating a Separate Table When a Value Changes on a Form </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q95445 ">
<META NAME="KBModify" CONTENT="1997/04/02">
<META NAME="KBCreate" CONTENT="1993/02/09">
<META NAME="Keywords" CONTENT="FmsEvnt kbusage">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  This article shows by example how to have Microsoft Access automatically update a field in a table when you use a form to change a related field in a different table. In other words, you can have Microsoft Access post your changes to a separate tab...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAXB,QAH4,QA4H,QBD2,QA7O,QAC1,QAPN,QBT6,QA1S,QBV4,QA7N,QAUJ,QAPF,QAJH,QAKD V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC1x: Updating a Separate Table When a Value Changes on a Form</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 2, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q95445 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 1.0, 1.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article shows by example how to have Microsoft Access automatically
update a field in a table when you use a form to change a related field
in a different table. In other words, you can have Microsoft Access post
your changes to a separate table that is not bound to the form.
<P>
To set this up, you need to:

<UL><LI>Add a text box control to the form.

<LI>Create a new macro group (UpdateOther) that contains two macros
   (SaveValue and ChgValue) to run the update query.

<LI>Create an update query (IDChgQuery in this example).

<LI>Change several properties to execute the macros.
<P>
</UL><h2>MORE INFORMATION</h2>
 
<P>
This example uses the Products form in the sample database NWIND.MDB. Here
is the step-by-step procedure:

<OL><P><LI>Open the NWIND.MDB database, and make a few modifications to set it up
   for this example. First, delete the relationship between the Products
   and Order Detail tables. Then, because you cannot update fields that
   have a Counter data type, change the following properties of the Product
   ID field in the Products table:
<P>
<P><PRE>      Table: Products
      --------------------------
      Field Name: Product ID
<PRE></PRE>         DataType: Number
         FieldSize: Long Integer

</PRE><P><LI>Open the Products form in Design view, and display the property sheet.
   Set the following form and control properties:
<P>
<P><PRE>      Form: Products
      ---------------------------------
      OnCurrent: UpdateOther.SaveValue
      AfterUpdate: UpdateOther.ChgValue
</PRE><P>
<P><PRE>      Field: Product ID
      -----------------
      Locked: No
</PRE><P>
   These actions activate the macros, which in turn run the update query.

<P><LI>Add an unbound text box control to the form, and give it the following
   properties:
<P>
<P><PRE>      Control: Text box
      ------------------------
      ControlName: Previous ID
      Visible: No
</PRE>
<P><LI>Create a new macro group (UpdateOther) to hold two macros (SaveValue and
   ChgValue) by first choosing to create a new macro. Next, choose Macro
   Names from the View menu or click the Macro Names button on the toolbar.
   Microsoft Access displays the Macro Name column.

<P><LI>Enter the two macro names along with their actions and action arguments.
   Each macro in the macro group begins on the line that contains that
   macro's name. Use the following table as a guide:
<P>
<PRE>      Macro Name   Action and Action Arguments
      ----------------------------------------
      SaveValue    SetValue
                      Item:        [Previous ID]
                      Expression:  [Product ID]

      ChgValue     SetWarnings
                      Warnings On: No
                   OpenQuery
                      Query Name:  IDChgQuery
                      View:        Datasheet
                      Data Mode:   Edit
                   SetValue
                      Item:        [Previous ID]
                      Expression:  [Product ID]

</PRE><P><LI>Save the macro group, and name it UpdateOther. Now UpdateOther appears
   in the list of macros in the Database window. You can use the following
   syntax to specify each macro in the macro group:
<P>
<P><PRE>      macrogroupname.macroname
</PRE><P>
   For example, UpdateOther.SaveValue specifies the save value macro.

<P><LI>Create a new update query called IDChgQuery. Add the table Order Details
   to the query. In the Field cell, enter Product ID. In the Update To
   cell, enter Forms![Products]![Product ID]. In the Criteria cell, enter
   Forms![Products]![Previous ID]. Here is a SUMMARY
<P>
<P><PRE>      Query: IDChgQuery
      --------------------------------------------
      Tables: Orders Detail
<PRE></PRE>         Field:     Product ID
         Update To: Forms![Products]![Product ID]
         Criteria:  Forms![Products]![Previous ID]

</PRE></OL>Now, when using the Products form, which is bound to the Products table, if
you enter a new value in the Product ID field, Microsoft Access updates the
Product ID column in the Orders Detail table automatically. It does it by
running the UpdateOther.SaveValue macro to save the previous value to use
as criteria and then the UpdateOther.ChgValue macro to run the IDChgQuery
update query. The IDChgQuery query updates the Product ID column in the
Orders Detail table overwriting the previous old value with the new value.
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : FmsEvnt kbusage<BR>
Version             : 1.0 1.1<BR>
Platform            : WINDOWS<BR>
Hardware            : X86<BR>
Issue type          : kbinfo<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 2, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
