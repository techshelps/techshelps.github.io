

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: Adding Dynamic Counter to Query to Count Records </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q94397 ">
<META NAME="KBModify" CONTENT="1997/12/15">
<META NAME="KBCreate" CONTENT="1993/01/06">
<META NAME="Keywords" CONTENT="QryOthr kbusage">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  This article describes how to use a dynamic counter value in a query field for the following purposes:   - Returning the top x number of records to ship in a Microsoft Acces...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA5V,QALX,QAM9,QBPM,QAY5,QA1S,QAB9,QBV8,QDN9,QACF,QAKC,QAWH,QBC6,QA2O,QABA P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: Adding Dynamic Counter to Query to Count Records</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 15, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q94397 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 1.0, 1.1, 2.0, 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
This article describes how to use a dynamic counter value in a query field
for the following purposes:

<UL><LI>Returning the top x number of records to ship in a Microsoft Access
   version 1.x query.
<P>
   NOTE: In Microsoft Access versions 2.0, 7.0, and 97, you can use the
   TopValues query property to accomplish this.

<LI>Displaying the record's position number on a form. For more information
   about this topic, query on the following words here in the Microsoft
   Knowledge base:
<P>
<P><PRE>      record and position and number and form
</PRE>
<LI>Printing the top x number of records on a report. For more information
   about this topic, query on the following words here in the Microsoft
   Knowledge Base:
<P>
<P><PRE>      top and 10 and records and report
</PRE><P>
   NOTE: If the report includes totals, totals will be displayed for all
   the records, not just the top x number of records. To total only the top
   x number of records, limit the records included in the report using the
   method described later in this article.
<P>
</UL>This article assumes that you are familiar with Access Basic and with
creating Microsoft Access applications using the programming tools provided
with Microsoft Access. For more information on Access Basic, please refer
to the "Introduction to Programming" manual in Microsoft Access version
1.x, or the "Building Applications" manual in version 2.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Sample code to implement a dynamic counter is described later in this
article. There are several limitations to this method, including the
following:

<UL><LI>You must reset the global counter to 0 before you run the query
   each time. You can use the function SetToZero() to do this.

<LI>Any scrolling, minimizing, maximizing, switching focus away and back,
   and so on, causes a repaint to occur, which in turn causes the query to
   call the function again. For this reason, you should not use this
   function in a select query. Instead, you should base a report on the
   select query or run a make-table query and view the resulting table.

<LI>When basing a report on a select query with this function, scrolling
   back through the pages will cause the function to be called multiple
   times, and the counter expression will be off by the total number of
   records in the recordset.

<LI>When you place criteria on the counter expression, the function
   will be called twice per record. For example, if you specify criteria of
   &lt;=10 to return the first 10 records, the recordset will contain 10
   records, but the counter expression will be off by the total number of
   records in the recordset.

<LI>Do not place the counter expression in the first column of the
   query; the number will be off by one.

<LI>Do not combine criteria and sorting in a query with the counter
   expression. The criteria will be applied before the sort. Instead, you
   must create a make-table query with the sort, and then base a second
   query containing the counter expression on the new table with sorted
   data.
<P>
</UL><h3>The Dynamic Counter Function</h3>
 
<P>
The following Access Basic functions, Qcntr() and SetToZero(), can be used
to implement a dynamic counter in a query. To use the Access Basic
functions do the following:

<OL><P><LI>Create a new module.

<P><LI>Type the following declarations in the Global Declarations section:
<P>
<P><PRE>      ' Global Declarations Section.
       Option Explicit
       Global Cntr
</PRE>
<P><LI>Type the following functions in the module:
<P>
<P><PRE>    '*************************************************************
    ' Function:  Qcntr()
    '
    ' Purpose: This function will increment and return a dynamic
    ' counter. This function should be called from a query.
    '*************************************************************
</PRE><P>
<P><PRE>     Function QCntr(x) As Long
<PRE></PRE>        Cntr = Cntr + 1
        QCntr = Cntr
     End Function

    '**************************************************************
    ' Function:  SetToZero()
    '
    ' Purpose: This function will reset the global Cntr to 0. This
    ' function should be called each time before running a query
    ' containing the Qcntr() function.
    '**************************************************************

     Function SetToZero()
        Cntr = 0
     End Function

</PRE></OL><h3>Returning the Top X Records</h3>
 
<P>
To return the 10 most expensive orders to ship, follow these steps:

<OL><P><LI>Open the sample Northwind database (In Access 1.x and 2.0, called NWIND.MDB and in all other versions, Northwind.mdb).

<P><LI>Create a new query based on the Orders table. Include the following
   fields:
<P>
<P><PRE>      Field: Order ID
      Field: Customer ID
      Field: Order Date
      Field: Freight
<PRE></PRE>         Sort: Descending
      Field: Expr1: Qcntr([order id])

</PRE><P><LI>From the Query menu, choose Make Table. When you are prompted for
   a table name, type "Sorted Orders" (without the quotation marks).

<P><LI>Save the query as Make Sorted Orders.

<P><LI>Create a new query that will be based on the Sorted Orders table after
   it is created. For now, close the Add Table dialog box without adding
   a table to the query. From the view menu, choose SQL, and then enter
   the following SQL statement:
<P>
<P><PRE>      Select * from [Sorted Orders] where [Expr1] &lt;= 10
</PRE>
<P><LI>Save this query as Top 10 Orders, and then close it.

<P><LI>Create the following macro:
<P>
<P><PRE>      Actions
      -----------
      RunCode
      SetWarnings
      OpenQuery
      OpenQuery
</PRE><P>
<P><PRE>      Macro Actions
      -----------------------------------
      RunCode
<PRE></PRE>         Function Name: SetToZero()
      SetWarnings
         Warnings On: No
      OpenQuery
         Query Name: [Make Sorted Orders]
      OpenQuery
         Query Name: [Top 10 Orders]

</PRE><P><LI>Run the macro. The table Sorted Orders will be created, and then the
   Top 10 Orders query will be displayed.
<P>
</OL>NOTE: Because the Top 10 Orders query is based on a table, you can scroll
through the records and use criteria on the counter expression without
causing the function to be called multiple times per record.
<P>
<P><h3>Creating a Top 10 Report That Includes Totals</h3>
 
<P>
To create a Top 10 Report that includes totals, follow these steps:

<OL><P><LI>Repeat steps 1-5 in the above section.

<P><LI>Create a new report called Top 10 Orders based on the Top 10 Orders
   query.

<P><LI>Create the following new macro:
<P>
<P><PRE>      Actions
      -----------
      RunCode
      SetWarnings
      OpenQuery
      OpenReport
</PRE><P>
<P><PRE>      Macro Actions
      -----------------------------------
      RunCode
<PRE></PRE>         Function Name: SetToZero()
      SetWarnings
         Warnings On: No
      OpenQuery
         Query Name: [Make Sorted Orders]
      OpenReport
         Report Name: [Top 10 Orders]

</PRE><P><LI>Run the macro.
<P>
</OL>NOTE: The counter expression will not renumber if you change the sort order
or add grouping in the report because it is calculated in the make-table
query. The counter expression is being used here to limit the recordset to
the top 10 orders.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For information about when functions are executed in queries, please
see the following article in the Microsoft Knowledge Base:
<P>
<PRE>    ARTICLE-ID: <B><A HREF="../vbapps/Q98788.htm">Q98788</A></B>
    TITLE     : ACC: Number of Times a Custom Function Executes in a Query
</PRE></OL> 
<PRE>Keywords          : QryOthr kbusage
Version           : 1.0 1.1 2.0
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 15, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
