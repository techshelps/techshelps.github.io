

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC2: How to Programmatically Embed or Link an Object in a Form </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q114214">
<META NAME="KBModify" CONTENT="1997/05/14">
<META NAME="KBCreate" CONTENT="1994/04/27">
<META NAME="Keywords" CONTENT="IntpOle">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  This article describes how to programmatically embed or link an object in an OLE object field on a form using the object frame properties in Microsoft Access version 2.0.  MORE I...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QAW6,QAIH,QBXS,QA1S,QDMF,QAIA,QAIB,QBVP,QA9Q,QA7O,QA7N,QBPG,QBBI,QDN9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC2: How to Programmatically Embed or Link an Object in a Form</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  May 14, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q114214</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access version 2.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
This article describes how to programmatically embed or link an object in
an OLE object field on a form using the object frame properties in
Microsoft Access version 2.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
You can set the object frame Action property at run time to perform a
number of operations on an object frame. These operations include the
ability to embed and link objects in an object frame, as well as other
operations for programmatic access to OLE functionality.
<P>
There are other object frame properties that need to be set as
prerequisites to setting the Action property. The properties that need to
be set are determined by the type of OLE object you are working with and
the type of action, using the Action property, you want to perform.
<P>
NOTE: The constants for use by the Action property are defined in the
CONSTANT.TXT file, which is included with Microsoft Access. To use the
constants in your code, you must either declare them yourself or copy them
from the CONSTANT.TXT file and paste them into the Declarations section of
your Access Basic module.
<P>
<P><h3>Linking an OLE Object</h3>
 
<P>
To link an object in an object frame on a form, first set the following
properties:

<UL><LI>OLETypeAllowed: Set to OLE_LINKED to indicate the OLE field
   will contain a linked object.

<LI>SourceDoc: Set to the path and filename of the file to be linked.

<LI>SourceItem: Indicates the data in the source document to link to. This
   could be a cell or cell range in a Microsoft Excel spreadsheet, or a
   bookmark in a Microsoft Word for Windows document. This property setting
   is optional.
<P>
</UL>Once you set these properties, you can set the Action property to
OLE_CREATE_LINK to link the object in the object frame.
<P>
The following sample code demonstrates how to programmatically link a range
of cells from a Microsoft Excel spreadsheet to an OLE object field named
Sales Totals bound to an object frame with the same name on a form:
<P>
<PRE>   ' Specify what kind of object can appear in the field.
   [Sales Totals].OLETypeAllowed = OLE_LINKED

   ' Specify the file to be linked.
   [Sales Totals].SourceDoc = "C:\EXCEL\SALES.XLS"

   ' Specify the (optional) cell range to link to.
   [Sales Totals].SourceItem = "R1C1:R5C5"

   ' Create the linked object.
   [Sales Totals].Action = OLE_CREATE_LINK

</PRE><h3>Embedding an OLE Object</h3>
 
<P>
To embed an object in an object frame on a form, first set the following
properties:

<UL><LI>OLETypeAllowed: Set to OLE_EMBEDDED to indicate the OLE field
   will contain an embedded object.

<LI>SourceDoc: Set to the path and filename of the file containing the
   information to embed.
<P>
</UL>Once you set these properties, you can set the Action property to
OLE_CREATE_EMBED to create an embedded object with a copy of the
information in the source document file.
<P>
The following sample code demonstrates how to embed a Word for Windows
document in an OLE object field named Word Documents bound to an object
frame with the same name on a form:
<P>
<PRE>   ' Specify what kind of object can appear in the field.
   [Word Documents].OLETypeAllowed = OLE_EMBEDDED

   ' Specify the file containing the information to embed.
   [Word Documents].SourceDoc = "C:\WINWORD\JONES.DOC"

   ' Create the embedded object.
   [Word Documents].Action = OLE_CREATE_EMBED

</PRE><h3>Creating an Empty Embedded Object</h3>
 
<P>
To create an empty embedded object in an object frame, first set the
following properties:

<UL><LI>Class: Set to the type of object you want to create. For a Microsoft
   Excel worksheet, use Excel.Sheet. For a Word for Windows document, use
   Word.Document.

<LI>OLETypeAllowed: Set to OLE_EMBEDDED to indicate the OLE field
   will contain an embedded object.
<P>
</UL>Once you set these properties, you can set the Action property to
OLE_CREATE_EMBED to create an empty embedded object of the type specified
in the Class property. Then, set the Action property again to invoke the
application for that object.
<P>
The following sample code demonstrates how to programmatically create new
Word for Windows documents in an OLE object field named Word Documents
bound to an object frame with the same name on a form:
<P>
<PRE>   ' Specify what kind of object can appear in the field.
   [Word Documents].Class = "Word.Document"

   ' Specify what kind of object can appear in the field.
   [Word Documents].OLETypeAllowed = OLE_EMBEDDED

   ' Create the embedded object.
   [Word Documents].Action = OLE_CREATE_EMBED

   ' Invoke Word for Windows to edit the empty embedded object.
   [Word Documents].Action = OLE_ACTIVATE

</PRE><h2>REFERENCES</h2>
 
<P>
Microsoft Access "Building Applications," version 2.0, Chapter 13,
"Communication With Other Applications," pages 295-297
<P>
For more information about the Action property, search for "Action," and
then "Action Property" using the Microsoft Access Help menu.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: automation insert<BR>
Keywords            : IntpOle<BR>
Technology          : kbole<BR>
Version             : 2.0<BR>
Platform            : WINDOWS<BR>
Hardware            : X86<BR>
Issue type          : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  May 14, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
