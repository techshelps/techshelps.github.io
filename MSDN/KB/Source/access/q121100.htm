

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC2: How to Get Form's Right and Down Measurements </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q121100">
<META NAME="KBModify" CONTENT="1997/04/25">
<META NAME="KBCreate" CONTENT="1994/09/26">
<META NAME="Keywords" CONTENT="FmsProp kbusage">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  This article describes how to create and use an Access Basic Sub procedure called GetFormDimensions to obtain a form window's right and down measurements for use in the Move...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA1S,QA4Q,QDN9,QAPN,QACI,QAGU,QAH4,QAUD,QAFF,QAI2,QAE8,QBJZ,QA01,QANF,QAB9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC2: How to Get Form's Right and Down Measurements</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 25, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q121100</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access version 2.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
This article describes how to create and use an Access Basic Sub procedure
called GetFormDimensions to obtain a form window's right and down
measurements for use in the MoveSize macro action. This article also
demonstrates how to position a form immediately below or to the right of a
second form.
<P>
This article assumes that you are familiar with Access Basic and with
creating Microsoft Access applications using the programming tools provided
with Microsoft Access. For more information on Access Basic, please refer
to the "Building Applications" manual.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
In Microsoft Access version 2.0, you can use the WindowWidth and
WindowHeight form properties to determine the current width and height of
the window a form is contained in. However, there are no properties to
determine the window's right and down measurements (these measurements are
commonly used in the MoveSize macro action to position a form window).
<P>
The right and down measurements, along with the width and height, are
useful if you want to position a form side-by-side with another form. The
following examples demonstrate how to create and use the GetFormDimensions
<PRE>Sub procedure to obtain these measurements and use them to position a form
</PRE>to the right of, and then below, another form using the MoveSize macro
action.
<P>
NOTE: In the following sample code, an underscore (_) at the end of a line
is used as a line-continuation character. Remove the underscore from the
end of the line when re-creating this code in Access Basic.
<P>
<P><h3>How to Create the Sub Procedure</h3>
 

<OL><P><LI>Open the sample database NWIND.MDB.

<P><LI>Create a new module and enter the following lines in the module's
   Declarations section:
<P>
<P><PRE>      Option Explicit
</PRE><P>
<P><PRE>      Type Rect
<PRE></PRE>         x1 As Integer
         y1 As Integer
         x2 As Integer
         y2 As Integer
      End Type

      Declare Sub GetWindowRect Lib "User" (ByVal hWnd As Integer, _
         lpRect As Rect)
      Declare Function GetDC Lib "User" (ByVal hWnd As Integer) _
         As  Integer
      Declare Function ReleaseDC Lib "User" (ByVal hWnd As Integer, _
         ByVal hDC As Integer) As Integer
      Declare Function GetDeviceCaps Lib "GDI" (ByVal hDC As Integer, _
         ByVal nIndex As Integer) As Integer
      Declare Function GetActiveWindow Lib "User" () As Integer
      Declare Function GetParent Lib "User" (ByVal hWnd As Integer) _
         As Integer
      Declare Function GetClassName Lib "User" (ByVal hWnd As Integer, _
         ByVal lpClassName As String, ByVal nMaxCount As Integer) _
         As Integer

      Global Const TWIPSPERINCH = 1440

</PRE><P><LI>Create the following procedures in the module:
<P>
<PRE>      Sub GetFormDimensions (F As Form, FRight, FDown, FWidth, FHeight)
      '*************************************************************
      ' PURPOSE: Returns the right, down, width, and height
      '          measurements of a form window in twips.
      ' ARGUMENTS:
      '    F: The form object whose measurements are to be determined.
      '    FRight, FDown, FWidth, FHeight: Measurement variables
      '    that will return the dimensions of form F "by reference."
      ' NOTE: The FWidth and FHeight values will be equivalent to
      '    those provided by the form WindowWidth and WindowHeight
      '    properties.
      '*************************************************************
         Dim FormRect As Rect
         Dim MDIClient As Rect
         Dim MDIClientRight, MDIClientDown

         ' Get the screen coordinates and window size of the form.
         ' The screen coordinates are returned in pixels measured
         ' from the upper-left corner of the screen.
         GetWindowRect F.hWnd, FormRect
         FRight = FormRect.x1
         FDown = FormRect.y1
         FWidth = FormRect.x2 - FormRect.x1
         FHeight = FormRect.y2 - FormRect.y1

         ' Convert the measurements from pixels to twips.
         ConvertPIXELSToTWIPS FRight, FDown
         ConvertPIXELSToTWIPS FWidth, FHeight

         ' If the form is not a pop-up form, adjust the screen
         ' coordinates to measure from the top of the Microsoft
         ' Access MDIClient window. Position 0,0 for a pop-up form
         ' is the upper left corner of the screen, whereas position
         ' 0,0 for a normal window is the upper left corner of the
         ' Microsoft Access client window below the menu bar.
         If GetWindowClass(F.hWnd) &lt;&gt; "OFormPopup" Then
            ' Get the screen coordinates and window size of the
            ' MDIClient window.
            GetWindowRect GetParent(F.hWnd), MDIClient
            MDIClientRight = MDIClient.x1
            MDIClientDown = MDIClient.y1
            ConvertPIXELSToTWIPS MDIClientRight, MDIClientDown

            ' Adjust the form dimensions from the MDIClient
            ' measurements.
            FRight = FRight - MDIClientRight
            FDown = FDown - MDIClientDown
         End If
      End Sub

      Sub ConvertPIXELSToTWIPS (X, Y)
      '*************************************************************
      ' PURPOSE: Converts the two pixel measurements passed as
      '          arguments to twips.
      ' ARGUMENTS:
      '    X, Y: Measurement variables in pixels. These will be
      '          converted to twips and returned through the same
      '          variables "by reference."
      '*************************************************************
         Dim hDC As Integer, hWnd As Integer, RetVal As Integer
         Dim XPIXELSPERINCH, YPIXELSPERINCH
         Const LOGPIXELSX = 88
         Const LOGPIXELSY = 90

         ' Retrieve the current number of pixels per inch, which is
         ' resolution-dependent.
         hDC = GetDC(0)
         XPIXELSPERINCH = GetDeviceCaps(hDC, LOGPIXELSX)
         YPIXELSPERINCH = GetDeviceCaps(hDC, LOGPIXELSY)
         RetVal = ReleaseDC(0, hDC)

         ' Compute and return the measurements in twips.
         X = (X / XPIXELSPERINCH) * TWIPSPERINCH
         Y = (Y / YPIXELSPERINCH) * TWIPSPERINCH
      End Sub

      Function GetWindowClass (hWnd) As String
      '*************************************************************
      ' PURPOSE: Retrieve the class of the passed window handle.
      ' ARGUMENTS:
      '    hWnd: The window handle whose class is to be retrieved.
      ' RETURN:
      '    The window class name.
      '*************************************************************
         Dim Buff As String
         Dim BuffSize As Integer
         Buff = String$(255, " ")
         BuffSize = GetClassName(hWnd, Buff, 255)
         GetWindowClass = Left$(Buff, BuffSize)
      End Function

</PRE></OL><h3>How to Use the GetFormDimensions Sub Procedure</h3>
 

<OL><P><LI>Open the sample database NWIND.MDB.

<P><LI>Add the following Sub procedure to the module that you created
   in step 2 above:
<P>
<PRE>      Sub MoveEmployeesAround ()
         Dim frmCust As Form, frmEmp As Form
         Dim CustRight, CustDown, CustWidth, CustHeight
         Dim EmpRight, EmpDown, EmpWidth, EmpHeight

         Set frmCust = Forms!Customers
         Set frmEmp = Forms!Employees

         GetFormDimensions frmCust, CustRight, CustDown, _
            CustWidth,  CustHeight
         GetFormDimensions frmEmp, EmpRight, EmpDown, _
            EmpWidth, EmpHeight

         frmEmp.SetFocus

         MsgBox "Move Employees to the right of Customers!"
         DoCmd MoveSize CustRight + CustWidth, CustDown

         MsgBox "Move Employees below Customers!"
         DoCmd MoveSize CustRight, CustDown + CustHeight
      End Sub

</PRE><P><LI>Open the Customers and Employees forms in Form view.

<P><LI>Select the module, and then choose Immediate Window from the View
   menu.

<P><LI>Type the following line in the Immediate window, and then press ENTER:
<P>
<P><PRE>      MoveEmployeesAround
</PRE>
<P><LI>In the message box that appears, choose OK. The Employees form will
   be positioned immediately to the right of the Customers form, and then
   another message box will appear.

<P><LI>In the second message box, choose OK. The Employees form will be
   positioned immediately below the Customers form.
<P>
</OL>NOTE: Depending on the position and size of the Customers form, the
Employees form may be positioned so that you cannot see it.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about how to get form window's right and down
measurements in Microsoft Access 7.0 or 97, please see the following
article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q143162.htm">Q143162</A></B>
   TITLE     : ACC: How to Get Form's Right and Down Measurements (95/97)

</PRE></OL>For more information about the MoveSize macro action, search for
"MoveSize," and then "MoveSize Action" using the Microsoft Access Help
menu.
<P>
For more information about the WindowHeight and WindowWidth properties,
search for "WindowHeight," and then "WindowHeight, WindowWidth Properties"
using the Microsoft Access Help menu.
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : FmsProp kbusage<BR>
Version             : 2.0<BR>
Platform            : WINDOWS<BR>
Hardware            : X86<BR>
Issue type          : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 25, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
