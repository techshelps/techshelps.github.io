

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: Flexible Input Mask for Entering 5- or 9-Digit ZIP Codes </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q120377">
<META NAME="KBModify" CONTENT="1998/02/18">
<META NAME="KBCreate" CONTENT="1994/09/08">
<META NAME="Keywords" CONTENT="FmsProp kbusage">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  This article describes a method of creating a flexible input mask for entering either 5- or 9-digit ZIP codes in a field on a form.  This article assumes that you are familiar with Visual Basic for Applications and with creating Microsoft Access ap...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QDOG,QBTQ,QA1S,QAH4,QDN9,QBS0,QA7O,QAY5,QA5F,QAMA,QAB5,QAOE,QAMN,QBV8,QAB9 P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: Flexible Input Mask for Entering 5- or 9-Digit ZIP Codes</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 18, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q120377</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 1.0, 1.1, 2.0, 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article describes a method of creating a flexible input mask for
entering either 5- or 9-digit ZIP codes in a field on a form.
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
NOTE: Visual Basic for Applications is called Access Basic in Microsoft
Access versions 1.x and 2.0. For more information about Access Basic,
please refer to the "Introduction to Programming" manual in Microsoft
Access version 1.x or the "Building Applications" manual in Microsoft
Access version 2.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The method demonstrated in this article uses three user-defined sample
Visual Basic (or Access Basic) functions that perform the following tasks:

<UL><LI>Convert the ZIP code into a text string.

<LI>Strip the text string of any parentheses, spaces, or dashes.

<LI>Determine whether the ZIP code contains any alphabetical characters,
   and if so, terminate the function and alert the user.
<P>
</UL>To set up the input mask, follow these steps:

<OL><P><LI>Create a new module and enter the following line in the Declarations
   section if it is not already there:
<P>
<P><PRE>      Option Explicit
</PRE>
<P><LI>Enter the following code in the module.
<P>
   NOTE: In the following sample code, an underscore (_) at the end of a
   line is used as a line-continuation character. Remove the underscore
   from the end of the line when re-creating this code in Access Basic.
<P>
<P><PRE>      Function Zip (zipcode As Control)
</PRE><P>
<PRE>        'Exit if a null is passed to the function.
        If IsNull(zipcode) Then
          Exit Function
        End If
        If IsThereAlpha(zipcode) Then
          Msgbox "Your Zip Code Contains Letters"
          Exit Function
        Else
          'Strip unwanted characters, leaving only numbers.
          zipcode = ZStrip(zipcode, "-")
          zipcode = ZStrip(zipcode, " ")
          zipcode = ZStrip(zipcode, ")")
          zipcode = ZStrip(zipcode, "(")

          'Reformat the character string.
          Select Case Len(zipcode)
            Case 5
              Screen.ActiveControl = Format(zipcode, "@@@@@")
            Case 9
              Screen.ActiveControl = Format(zipcode, "@@@@@-@@@@")
            Case Else
              MsgBox "This is not a valid ZIP Code."
              Screen.ActiveControl = zipcode
          End Select
        End If
      End Function

      Function ZStrip (InZip, StripZip)
        Do While InStr(InZip, StripZip)
          InZip = Mid(InZip, 1, InStr(InZip, StripZip) - 1) &amp; Mid _
          (InZip, InStr(InZip, StripZip) + 1)
        Loop
        ZStrip = InZip
      End Function

      Function IsThereAlpha (zipcode) As Integer
         Dim Pos, a_char$, Clean
         Pos = 1
         Clean = 0
         While (Pos &lt;= Len(zipcode) And (Clean = 0))
            a_char$ = Mid(zipcode, Pos, 1)
            If a_char$ &gt;= "0" And a_char$ &lt;= "9" Then
               Clean = 0
            Else
               If a_char$ &lt;&gt; "-" Then Clean = 1
            End If
            Pos = Pos + 1
         Wend
         IsThereAlpha = Clean
      End Function

</PRE><P><LI>Type the following in the ValidationRule property of the control that
   contains the zip code:
<P>
<P><PRE>      Len([Control name]) = 5 or Len([Control name]) = 9
</PRE>
<P><LI>Type the following for the validation text for the control:
<P>
<P><PRE>       This is not a valid zip code. Zip codes must be 5 or 9 characters in
       length. Please re-enter the correct zip code.
</PRE>
<P><LI>Set the AfterUpdate property of the control on your form that contains
   the ZIP codes to the expression
<P>
<P><PRE>      =Zip([&lt;controlname&gt;])
</PRE><P>
   where &lt;controlname&gt; is the name of the control that contains the zip
   codes.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about using input masks, search the Help Index for
"input masks," and then "Create an input mask to control how data is
entered in a field or control."
 
<PRE>Keywords          : FmsProp kbusage
Version           : 1.0 1.1 2.0 7.0 97
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbinfo</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 18, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
