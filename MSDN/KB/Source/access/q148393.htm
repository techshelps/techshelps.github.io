

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: How To Enumerate Selected Form Records </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q148393">
<META NAME="KBModify" CONTENT="1997/07/18">
<META NAME="KBCreate" CONTENT="1996/03/12">
<META NAME="Keywords" CONTENT="FmsHowto kbusage">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  In Microsoft Access, you can select multiple records in a form using the record selector at the left side of the form. In Microsoft Access 7.0 and 97, you can use the new SelTop ...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA5V,QA2Q,QAH4,QAPN,QBWS,QAG2,QAB9,QA1S,QA5D,QA01,QBV8,QADK,QDMH,QAI2,QANS P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: How To Enumerate Selected Form Records</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q148393</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
In Microsoft Access, you can select multiple records in a form using the
record selector at the left side of the form. In Microsoft Access 7.0 and
97, you can use the new SelTop and SelHeight form properties to specify or
determine the number of selected records in a continuous or Datasheet view
form.
<P>
The following information describes how you can use these new properties
to enumerate through the list of selected records in a form.
<P>
NOTE: SelLeft and SelWidth are new form properties that you can use to
determine the current columns selected in Datasheet view; however, this
article does not discuss these new form properties.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft Access 7.0 and 97 provide the SelTop and SelHeight properties to
enable you to determine which records are selected in a continuous or
Datasheet view form. You can use the SelTop property to determine which row
is the first in the selection. You can use the SelHeight property to
determine the number of rows in the current selection.
<P>
The following information describes how to use these properties to
enumerate the list of selected records from

<UL><LI>a macro run from a toolbar or AutoKeys macro.

<LI>code run from a command button in the header or footer section of the
   form.
<P>
</UL>The latter case presents some challenges and is a bit more difficult to
accomplish. Suppose you want to place a command button in the header or
footer section of a continuous form to enable your users to copy, move, or
print a report against the selected set of records. When your user presses
this button, the current selection of records disappears when the command
button receives focus. Information later in this article demonstrates how
to circumvent this behavior.
<P>
<P><h3>Enumerating Selected Records Using a Toolbar or AutoKeys Macro</h3>
 
<P>
The advantage to using a toolbar button or keyboard key to run your code
is that the current selection of records will not be lost, simplifying the
procedure:

<OL><P><LI>Open the sample database Northwind.mdb and create a new module with
   the following procedure:
<P>
<P><PRE>       Function DisplaySelectedCompanyNames()
<PRE></PRE>          Dim i As Long
          Dim F As Form
          Dim RS As Recordset

          ' Get the form and its recordset.
          Set F = Forms![Customers1]
          Set RS = F.RecordsetClone

          ' Move to the first record in the recordset.
          RS.MoveFirst

          ' Move to the first selected record.
          RS.Move F.SelTop - 1

          ' Enumerate the list of selected records presenting
          ' the CompanyName field in a message box.
          For i = 1 To F.SelHeight
            MsgBox RS![CompanyName]
            RS.MoveNext
          Next i

       End Function

</PRE><P><LI>Save the module with a unique name and close the module.

<P><LI>Create a new macro with the name AutoKeys as follows:
<P>
<PRE>       Macro Name     Action
       ----------------------
       {F5}           RunCode

       AutoKeys Actions
       ------------------------------------------------
       RunCode
          Function Name: =DisplaySelectedCompanyNames()

</PRE><P><LI>On the Insert menu, click Form to open the New Form dialog box.

<P><LI>Select AutoForm: Tabular from the list of available wizards, and
   Customers from the "Choose the table or query where the object's data
   comes from" box. Click OK.

<P><LI>On the File menu, click Save and save the form with the default name,
   Customers1.

<P><LI>Using the right mouse button, click the toolbar and click Customize.

<P><LI>Do one of the following for your version of Microsoft Access:
<P>
   In Microsoft Access 97:
<P>
<P><PRE>      In the Customize dialog box, click the Commands tab and select
      "All Macros." Under Commands, drag "AutoKeys.{F5}" from the Commands
      list to an empty space on the toolbar, and then click Close.
</PRE><P>
   In Microsoft Access 7.0:
<P>
<P><PRE>      In the Customize Toolbars dialog box, under Categories, select "All
      Macros." Under Objects, drag "AutoKeys.{F5}" from the Objects list to
      an empty space on the toolbar, and then click Close.
</PRE>
<P><LI>Select a record or a set of records from the form using the record
   selector buttons on the left side of the continuous form. Press the F5
   key or click the new toolbar button.
<P>
   Note that a message box appears for each selected record displaying the
   contents of the selected record's CompanyName field.
<P>
</OL><h3>Enumerating Selected Records Using a Command Button</h3>
 

<OL><P><LI>Follow steps 1 and 2 in the "How to Enumerate Selected Records Using a
   Toolbar or AutoKeys Macro" section above to create the module with the
   DisplaySelectedCompanyNames() procedure.

<P><LI>Open the module in Design view and add the following to the Declaration
   section:
<P>
<P><PRE>       Dim MySelTop As Long
       Dim MySelHeight As Long
</PRE><P>
<P><PRE>       Dim MySelForm As Form
       Dim fMouseDown As Integer
</PRE>
<P><LI>Create the following two procedures:
<P>
<P><PRE>       Function SelRecord(F As Form, MouseEvent As String)
<PRE></PRE>          Select Case MouseEvent
             Case "Move"
                ' Store the form and the form's Sel property settings
                ' in the MySel variables ONLY if mouse down has not
                ' occurred.
                If fMouseDown = True Then Exit Function
                Set MySelForm = F
                MySelTop = F.SelTop
                MySelHeight = F.SelHeight

             Case "Down"
                ' Set flag indicating the mouse button has been pushed.
                fMouseDown = True
             Case "Up"
                ' Reset the flag for the next time around.
                fMouseDown = False
          End Select
       End Function

       Public Sub SelRestore()
       Debug.Print "got into Restore"
          ' Restore the form's Sel property settings with the values
          ' stored in the MySel variables.
          MySelForm.SelTop = MySelTop
          MySelForm.SelHeight = MySelHeight

       End Sub

</PRE><P><LI>Save and close the module.

<P><LI>Follow steps 4 - 6 in the "How to Enumerate Selected Records Using a
   Toolbar or AutoKeys Macro" section above to create the Customers1 form.

<P><LI>Open the Customers1 form in Design view. Double-click the Form Footer
   section bar to bring up the Properties window (if it isn't already up),
   and change the Height property to .5 inches.

<P><LI>Add a command button to the Form Footer section with the following
   properties:
<P>
<P><PRE>       Name: cmdSelectedCompanyNames
       Caption: Display Selected Company Names
       Width: 2"
       OnClick: [Event Procedure]
       OnMouseDown: =SelRecord([Form],"Down")
       OnMouseMove: =SelRecord([Form],"Move")
<PRE></PRE>       OnMouseUp:   =SelRecord([Form],"Up")

</PRE><P><LI>Add the following code to the new cmdSelectedCompanyNames command
   button Click event:
<P>
<P><PRE>       Private Sub cmdSelectedCompanyNames_Click()
<PRE></PRE>          Dim X
          ' Restore the lost selection.
          SelRestore

          ' Enumerate the list of selected company names.
          X = DisplaySelectedCompanyNames()
       End Sub

</PRE><P><LI>View the form and select a record or a set of records using the record
   selector buttons on the left side of the continuous form. Click the new
   "Display Selected Company Names" command button.
<P>
   Note that a message box appears for each selected record displaying the
   contents of the selected record's company name field.
<P>
</OL>NOTE: If you want to use the command button to enumerate the list of
selected records in a subform, pass the subform as the argument to the
SelRecord() function from the command button's Mouse events. For example,
suppose your subform is called Orders Subform; the command button mouse
move properties would be set to the following:
<P>
<PRE>   OnMouseDown: =SelRecord([Orders Subform].[Form],"Down")
   OnMouseMove: =SelRecord([Orders Subform].[Form],"Move")
   OnMouseUp: =SelRecord([Orders Subform].[Form],"Up")

</PRE></OL><h2>REFERENCES</h2>
 
<P>
For more information about selected records in forms, search the Help Index
for the term "Selecting," and then view "Selecting fields and records."
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: multi-selection multiple<BR>
Keywords            : FmsHowto kbusage<BR>
Version             : 7.0 97<BR>
Platform            : WINDOWS<BR>
Hardware            : X86<BR>
Issue type          : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
