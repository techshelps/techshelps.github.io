

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC1x: Flexible Formatting of Phone Numbers </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q89685 ">
<META NAME="KBModify" CONTENT="1997/06/06">
<META NAME="KBCreate" CONTENT="1992/09/28">
<META NAME="Keywords" CONTENT="kbprg PgmHowTo PgmParse">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  This article describes sample functions that you can use to determine the format of a field or control.  MORE INFORMATION  This article assumes that you are familiar with Access Basic and with creating Microsoft Access applications using the progra...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QDL4,QAY5,QA1S,QBV8,QDN9,QAB9,QAMA,QDNG,QA5F,QAH4,QAKC,QA7O,QAGX,QAEF,QAB5 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC1x: Flexible Formatting of Phone Numbers</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 6, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q89685 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 1.0 and 1.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article describes sample functions that you can use to determine the
format of a field or control.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
This article assumes that you are familiar with Access Basic and with
creating Microsoft Access applications using the programming tools
provided with Microsoft Access. For more information on Access Basic,
please refer to the "Introduction to Programming" manual.
<P>
This example demonstrates a sample function to take the phone number value
entered by the user and determine if an area code was entered. If not, it
will not display the parentheses.
<P>
NOTE: This example does not take into account phone extensions or
international numbers.
<P>
By creating two functions, intelligent formatting is possible.
<P>
NOTE: In the following sample code, an underscore (_) is used as a
line-continuation character. Remove the underscore from the end of the
line when re-creating this code in Access Basic.
<P>
<P>
<PRE>   '**********************************************************
      'Declarations section of the module

   '**********************************************************
         Option Explicit

   '==========================================================
   'The following function is designed for use in the AfterUpdate
   'property of a Form control.
   '   AfterUpdate: =Format_Phone([&lt;control name&gt;])

   '==========================================================
     Function Format_Phone (PhoneNumber As Control)
        '* Exit the function if there is no information passed
        If IsNull(PhoneNumber) Then
           Exit Function
     End If

     '* Need to strip out unwanted characters leaving only numbers
     PhoneNumber = SStrip(PhoneNumber, "-")
     PhoneNumber = SStrip(PhoneNumber, " ")
     PhoneNumber = SStrip(PhoneNumber, ")")
     PhoneNumber = SStrip(PhoneNumber, "(")

     '* Reformat the character string
     Select Case Len(PhoneNumber)
        Case 7
         Screen.ActiveControl = Format(PhoneNumber, "@@@-@@@@")
        Case 10
         Screen.ActiveControl = Format(PhoneNumber, "(@@@) @@@-@@@@")
        Case 11
         'Note that this should be on one line.
        Screen.ActiveControl = Format(PhoneNumber, "@ (@@@) @@@-@@@@")
        Case Else
          MsgBox "This is not a valid phone number."
          Screen.ActiveControl = PhoneNumber
      End Select
     End Function

     Function SStrip (InWord, StripStr)
      Do While InStr(InWord, StripStr)
         'Note that this should be on one line
         InWord = Mid(InWord, 1, InStr(InWord, StripStr) - 1) &amp; _
                  Mid(InWord, InStr(InWord, StripStr) + 1)
      Loop
      SStrip = InWord
     End Function

</PRE>The Format_Phone() function massages the phone number into a common string
(void of parentheses, spaces, and dashes) and then determines the most
appropriate format. This function returns the phone number back to the
form in that format.
<P>
The SStrip() function is a very important concept. It continues to operate
until it eliminates a specified character (StripStr) from the string
(InWord). This is used to eliminate extra characters (dashes, spaces, and
so on) from the phone number.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: mask input format telephone<BR>
Keywords            : kbprg PgmHowTo PgmParse<BR>
Version             : 1.0 1.1<BR>
Platform            : WINDOWS<BR>
Hardware            : x86<BR>
Issue type          : kbinfo<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 6, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
