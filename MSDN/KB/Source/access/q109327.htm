

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC1x: How to Fill a Combo Box with Table Names (1.x) </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q109327">
<META NAME="KBModify" CONTENT="1997/05/14">
<META NAME="KBCreate" CONTENT="1994/01/02">
<META NAME="Keywords" CONTENT="FmsCmbo kbusage">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  This article describes how to create a combo box that will list the names of the tables in your Microsoft Access version 1.x database.  This article assumes that you are familiar with Access Basic and with creating Microsoft Access applications usi...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGX,QA1S,QAH4,QDN9,QAY5,QAE1,QA5V,QBBI,QBV8,QAKC,QBCF,QAZV,QAUJ,QAPN,QDPB V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC1x: How to Fill a Combo Box with Table Names (1.x)</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  May 14, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q109327</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 1.0, 1.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article describes how to create a combo box that will list the names
of the tables in your Microsoft Access version 1.x database.
<P>
This article assumes that you are familiar with Access Basic and with
creating Microsoft Access applications using the programming tools provided
with Microsoft Access.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following example demonstrates how to create a combo box that lists the
names of tables in your database:

<OL><P><LI>Add the following to the Declarations section of the Introduction to
   Programming module in the sample database NWIND.MDB:
<P>
<P><PRE>      Option Explicit
</PRE>
<P><LI>Enter the following sample function:
<P>
   NOTE: In the following sample code, an underscore (_) is used as a line-
   continuation character. Remove the underscore when re-creating this code
   in Access Basic.
<P>
<P><PRE>    Function TableList (Fld As Control, Id, Row, Col, Code)
      Static TbLst_Array(100), No_Entries
      Dim MyDB As Database
      Dim cnt As Integer
      Dim Returnval
      Dim SnapOfTables As Snapshot
</PRE><P>
<P><PRE>      Returnval = Null
</PRE><P>
<P><PRE>      Set MyDB = CurrentDB()
      Set SnapOfTables = MyDB.ListTables()
</PRE><P>
<P><PRE>      Select Case code
<PRE></PRE>         Case 0
         '------------------------------------------------------------
         '  CASE 0:  Initializes the function. Lets the function know
         '  how many elements will be in the list box. It also
         '  initializes the array that holds the elements.
         '------------------------------------------------------------
            SnapOfTables.MoveFirst
            No_Entries = 0
            TbLst_Array(No_Entries) = Null
            Do Until SnapOfTables.EOF
               If SnapOfTables.tabletype = db_table And_
               SnapOfTables.attributes = 0 Then
                  TbLst_Array(No_Entries) = SnapOfTables.Name
                  No_Entries = No_Entries + 1
               End If
               SnapOfTables.MoveNext
            Loop
            Returnval = No_Entries

         Case 1
         '------------------------------------------------------------
         ' Open. Provides a unique id number for the function. Most
         ' cases just use the following code in this case.
         '------------------------------------------------------------
            Returnval = Timer

         Case 2
         '------------------------------------------------------------
         ' (Reserved for future use.) This case should be omitted.
         '------------------------------------------------------------

         Case 3
         '------------------------------------------------------------
         ' Number of Rows. Lets the function know how many rows are
         ' going to be in the list (can be zero). Use -1 if number is
         ' unknown.
         '------------------------------------------------------------
            Returnval = No_Entries

         Case 4
         '------------------------------------------------------------
         ' Number of Columns. (CANNOT BE ZERO) Should match the value
         ' in the property sheet.
         '------------------------------------------------------------
            Returnval = -1

         Case 5
         '------------------------------------------------------------
         ' Column width. Width in twips of column specified by the col
         ' argument. Use -1 to use default widths.
         '------------------------------------------------------------
            Returnval = -1

         Case 6
         '------------------------------------------------------------
         ' List Entry. Gives element to be displayed in the row and
         ' column specified by the row and col arguments.
         '------------------------------------------------------------
            Returnval = TbLst_Array(row)

         Case 7
         '------------------------------------------------------------
         ' Format String. Format string to be used to format the list
         ' element displayed in the row and column specified by the
         ' row and col arguments. Use NULL to use the default format.
         '------------------------------------------------------------

         Case 8
         '------------------------------------------------------------
         '(Reserved for Future Use.) This case should be omitted.
         '------------------------------------------------------------

         Case 9
         '------------------------------------------------------------
         ' End. This is the last call to function. Always
         ' include this case. This is a good place for any
         ' cleanup code.
         '------------------------------------------------------------
            For No_Entries = 0 To cnt
               TbLst_Array(cnt) = ""
            Next
      End Select
      TableList = Returnval
    End Function

</PRE><P><LI>Save the module.

<P><LI>Create a new, unbound form.

<P><LI>Place a combo box with the following properties on the form:
<P>
<P><PRE>      Form: Form1
      ---------------------------
      Combo Box:
<PRE></PRE>         ControlName: Tablelist
         RowSourceType: TableList
         ColumnCount:    1
         BoundColumn:    1

</PRE><P><LI>View the form in Form view. Click the combo box.
<P>
</OL>The combo box will be filled with the names of the tables in the NWIND
database.
<P>
<P><h2>REFERENCES</h2>
 
<P>
Microsoft Access "User's Guide," Chapter 9, "Designing Forms"
<P>
Microsoft Access "Introduction to Programming," pages 82-85
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : FmsCmbo kbusage<BR>
Version             : 1.0 1.1<BR>
Platform            : WINDOWS<BR>
Hardware            : X86<BR>
Issue type          : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  May 14, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
