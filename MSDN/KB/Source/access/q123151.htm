

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: Why OLE Objects Cause Databases to Grow </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q123151">
<META NAME="KBModify" CONTENT="1997/04/02">
<META NAME="KBCreate" CONTENT="1994/11/22">
<META NAME="Keywords" CONTENT="IntpOle">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  A Microsoft Windows OLE object is stored as an OLE stream that consists of two portions:   - Information to render the object.   - Native data that can be modified by the OL...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA9Q,QAPN,QAW6,QAH2,QDNG,QA1S,QDL9,QBWO,QBWN,QDN9,QAYY,QBMR,QAIH,QBWQ,QDKW P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: Why OLE Objects Cause Databases to Grow</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 2, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q123151</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 1.0, 1.1, 2.0, 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
A Microsoft Windows OLE object is stored as an OLE stream that consists of
two portions:

<UL><LI>Information to render the object.

<LI>Native data that can be modified by the OLE server that created the
   object.
<P>
</UL>Microsoft Access stores the entire OLE stream in an OLE wrapper in a type
of Long Binary field.
<P>
The amount of information used to render the object is often greater than
the size of the object itself. Adding such OLE objects can increase the
size of a database significantly. To minimize size increases caused by
adding OLE objects to a database, use either of these methods:

<UL><LI>Make the object easier to render (by lowering the resolution of the
   object, or decreasing its physical size).

<LI>Display the object as an icon.
<P>
</UL><h2>MORE INFORMATION</h2>
 
<P>
An object's rendering information can be in any of the following formats:

<UL><LI>Windows Bitmap format (BMP)
<LI>Windows Metafile format (WMF)
<LI>Windows Device-Independent Bitmap format (DIB)
<P>
</UL>An OLE server offers formats in order from the server's most-to-least
preferred format. An OLE client enumerates the available formats and uses
the first compatible format. Generally, you can override the OLE client's
choice of formats with the Paste Special command.
<P>
Typically, either WMF or DIB is chosen, because OLE servers render these
formats most easily. For example, Microsoft Word for Windows typically
renders using WMF, while Windows Paintbrush renders using DIB. An OLE
client can always choose the format it prefers first. Because DIB is a form
of BMP, most servers that render in DIB also render in BMP, although DIB is
often offered first. Microsoft Access always chooses DIB over BMP.
<P>
OLE servers that can display pictures stored in other compressed formats,
such as the JPEG format (JPG), must still send the two portions of
information described earlier in this article. The server must send
information to render the object using BMP, WMF, or DIB, as well as native
data that can be used to edit the object. When this occurs, the compressed
format is converted to a format to be rendered. The size of the OLE stream
is the sum of the converted rendering object, the native data, and some OLE
overhead information. Because the OLE stream contains all of this
information, small objects in compressed formats can become quite large
when stored in a Microsoft Access database.
<P>
One way to work around this behavior is to store the object as an icon. If
you do not need to display the object in a Microsoft Access form or report,
you can store the object as an icon that represents the object type.
Storing an object as an icon causes the OLE server to send the object with
rendering information consisting of only the icon rather than the complete
object, using significantly less storage space in the database. When you
double-click the icon, the OLE server is launched with the native data that
the icon represents.
<P>
Another example of a small file growing to become a large OLE object is a
Microsoft Word file that contains complex text formatting or an image on
the first page of the document. The small amount of native data requires so
much information for rendering that the OLE object is quite large. To work
around this behavior, place a page with simple formatting at the beginning
of the document, or store the document as an icon.
<P>
OLE has a preferred order for using the standard presentation formats.
Regardless of where WMF appears in the format order, it is used if it is
available (metafiles provide better scaling than bitmaps). If WMF is not
available, DIB is preferred over BMP. OLE currently supports only WMF, DIB,
and BMP.
<P>
One of the options in the OLE Specification calls for OLE servers to add
more rendering formats to the three default formats that Windows supports.
Microsoft Access does not currently support this OLE feature.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about OLE Objects, search the Help Index for "OLE
Objects," or ask the Microsoft Access 97 Office Assistant.
<P>
"Microsoft Object Linking and Embedding Programmer's Reference," Volume 1,
pages 418-420
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: big<BR>
Keywords            : IntpOle<BR>
Technology          : kbole<BR>
Version             : 1.0 1.1 2.0 7.0 97<BR>
Platform            : WINDOWS<BR>
Hardware            : X86<BR>
Issue type          : kbinfo<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 2, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
