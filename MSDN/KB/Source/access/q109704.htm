

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: Storing Calculated Values Using ControlSource Property </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q109704">
<META NAME="KBModify" CONTENT="1998/02/04">
<META NAME="KBCreate" CONTENT="1994/01/06">
<META NAME="Keywords" CONTENT="FmsHowto kbusage kbfaq">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  This article describes the ControlSource property as it applies to controls and demonstrates how to use the SetValue macro action to store calculated values in a control's underl...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA7O,QAB5,QAMN,QAOE,QA7N,QAPN,QAH4,QAE5,QAUJ,QAKJ,QBWS,QAWH,QA1S,QAUR,QAHV P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: Storing Calculated Values Using ControlSource Property</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 4, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q109704</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 1.0, 1.1, 2.0, 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
This article describes the ControlSource property as it applies to
controls and demonstrates how to use the SetValue macro action to store
calculated values in a control's underlying table.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
A control can be classified as bound, unbound, or calculated depending on
the contents of its ControlSource property. A bound control on a form or
report is linked to a field in an underlying table or query. This type of
control is used to display, enter, and update data in a field. For example,
the following control is a bound control:
<P>
<PRE>   Name: Last Name
   ControlSource: LastName

   NOTE: In Microsoft Access version 1.x, the Name property is called the
   ControlName property.

</PRE>This control displays the data from the LastName field, and stores any
changes made in the control to the LastName field in the form's underlying
table.
<P>
A calculated control displays a value derived from data in one or more
fields from the underlying table or query or from other controls. The
calculation is the result of an expression assigned to the ControlSource
property for that control. A calculated control can display data that is
the result of an expression but cannot save data. For example, the
following control is a calculated control:
<P>
<PRE>   Name: MyControl
   ControlSource: =[LastName] &amp; ", " &amp; [FirstName]

</PRE>The MyControl control displays a full name derived from an expression
concatenating the last name and first name. The full name is not stored in
any table. Calculated controls are often used to display calculations on a
form that do not need to be stored in the underlying table.
<P>
An unbound control has a ControlSource property that is blank, meaning that
it is not connected to either a field from the underlying table, a query,
or an expression. An unbound control can display data, but cannot save
data. The data contained in an unbound control is temporary and is lost
when the form or report is closed.
<P>
<P><h3>Storing Calculations in a Field</h3>
 
<P>
The following example demonstrates how to use the SetValue macro action to
store calculated values in a control's underlying table.
<P>
CAUTION: Following the steps in this example will modify the sample
database Northwind.mdb (or NWIND.MDB in Microsoft Access 2.0 or earlier).
You may want to back up the Northwind.mdb file and perform these steps on a
copy of the database.

<OL><P><LI>Open the sample database Northwind.mdb.

<P><LI>Open the Order Details table in Design view.

<P><LI>Add the following field to the table:
<P>
<PRE>       Field Name:   Total
       Data Type:    Currency

</PRE><P><LI>Save and then close the table.

<P><LI>Create a new, blank form based on the Order Details table. Save the
    Form as Order Details Form.

<P><LI>If it is not displayed, open the field list by clicking Field List on
    the View menu.

<P><LI>Drag the Quantity, UnitPrice, and Total fields from the field list to
    the form. These are bound controls on the form. Note that each
    control's ControlSource property contains the name of the control's
    underlying field.
<P>
    NOTE: In Microsoft Access 2.0 or earlier, there is a space in
    Unit Price.

<P><LI>Create the following new macro, and then save it as Test1:
<P>
<PRE>       Macro Name      Action
       ------------------------
       Test1           SetValue

       Test1 Actions
       --------------------------------------------
       SetValue
          Item: [Total]
          Expression: Ccur([UnitPrice]*[Quantity])

    NOTE: In Microsoft Access 2.0 or earlier, there is a space in
    Unit Price.

    Note that this macro is equivalent to the expression:

       [Total]= Ccur([Unit Price]*[Quantity])

    When this macro runs, it will fill the Total field with the
    calculation's results.

</PRE><P><LI>Open the Order Details Form in Design View. Set the form's OnCurrent
    property to the Test1 macro. This causes the macro to run when the
    form is opened, and every time you move from one record to another.

<P><LI>Set the Quantity text box's AfterUpdate property to the Test1
    macro. This causes the Test1 macro to run whenever the contents of
    the Quantity control are modified.

<P><LI>Set the UnitPrice text box's AfterUpdate property to the Test1
    macro. This causes the Test1 macro to run whenever the contents of
    the UnitPrice control are modified.

<P><LI>View the form in Form view.
<P>
</OL>Note that the Test1 macro runs every time you move from one record to
another, or whenever you modify a value in the Quantity or UnitPrice
fields.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about the ControlSource property, type "controlsource"
in the Office Assistant, click Search, and then click to view
"ControlSource Property."
<P>
For more information about binding controls to fields, type "binding
controls" in the Office Assistant, click Search, and then click to view
"Bind an unbound control to a field."
<P>
For more information about creating calculated controls, type "calculated
controls" in the Office Assistant, click Search, and then click to view
"Create a calculated control."
 
<PRE>Keywords          : FmsHowto kbusage kbfaq
Version           : 1.0 1.1 2.0 7.0 97
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbinfo</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 4, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
