

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC1x: Error Messages When Concatenating Variables or Controls </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q96576 ">
<META NAME="KBModify" CONTENT="1997/06/08">
<META NAME="KBCreate" CONTENT="1993/03/22">
<META NAME="Keywords" CONTENT="kberrmsg kbprg PgmDecl PgmObj SynGnrl">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  When you are concatenating variables or controls in a function or CreateDynaset method, you may receive one of the following error messages:     Can't bind name '          '     ...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB4,QAML,QAY5,QAYL,QAUJ,QAPN,QAAP,QAB9,QAP2,QBXS,QAHE,QBV8,QA7O,QAR4,QAPF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC1x: Error Messages When Concatenating Variables or Controls</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 8, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q96576 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 1.0, 1.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
When you are concatenating variables or controls in a function or
CreateDynaset method, you may receive one of the following error messages:
<P>
<PRE>   Can't bind name '&lt;argument&gt;'

   -or-

   Type Mismatch

   -or-

   1 parameter expected only 0 supplied

</PRE>These error messages can result if one of the following is true:

<UL><LI>You have incorrectly declared the data type of the argument being
   passed to the function.

<LI>You are including a variable or control name in the function syntax
   and Microsoft Access is unable to recognize the data type.

<LI>You are using incorrect syntax to concatenate the variables.
<P>
</UL>This article presents examples in which these errors occur and explains
how to correct them.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>"Can't bind name '&lt;argument&gt;'Error message</h3>
 
<P>
You receive the "Can't bind name" error message when you concatenate a
variable or control that has a String data type in a method or function as
a Numeric data type. For example, the following function produces the
"Can't bind name 'Davolio'" error message:
<P>
<PRE>   Call the function as follows: MyFunction ("Davolio")

   Function MyFunction (DataToFind As String)
      Dim MyDB As Database, myset As Dynaset
      Set MyDB = CurrentDB()
      Set myset = MyDB.CreateDynaset("Employees")
      Myset.FindFirst "[Last Name]= " &amp; DataToFind
   End Function

</PRE>The correct syntax for the last line of code above is as follows:
<P>
<PRE>   MySet.FindFirst "[Last Name] = '" &amp; DataToFind &amp; "'"

</PRE><h3>"Type Mismatch" Error Message</h3>
 
<P>
You receive the "Type Mismatch" error message when you concatenate a
variable or control that has a Numeric data type in a method or function as
a String data type. For example, the following function produces the "Type
Mismatch" error message:
<P>
<PRE>   Call the function as follows: MyFunction (3).

   Function MyFunction (NumberToFind As integer)
      Dim MyDB As Database, MySet As Dynaset
      Set MyDB = CurrentDB()
      Set MySet = MyDB.CreateDynaset("Employees")
      MySet.FindFirst "[Employee ID] = '" &amp; NumberToFind &amp; "'"

</PRE>The correct syntax for the last line of code above is as follows:
<P>
<PRE>   MySet.FindFirst "[Employee ID] = " &amp; NumberToFind

</PRE>Keep the following requirements in mind:

<UL><LI>When the argument for an Access Basic function or method is a String
   data type, single quotation marks around the String variable are
   required.

<LI>Dates passed as a String require the number sign (#). For example:
<P>
<P><PRE>      MySet.FindFirst "[Hire Date] = #" &amp; DateToFind &amp; "#"
</PRE>
<LI>Numeric data types do not require delimiters, as in the following
   example:
<P>
<P><PRE>      MySet.FindFirst "[Employee ID] = " &amp; NumericDataToFind
</PRE><P>
</UL><h3>"1 Parameters Were Expected, But Only 0 Were Supplied" Error Message</h3>
 
<P>
You may receive this error message when you use the CreateDynaset method in
Access Basic on an existing query. If the query is a parameter query, you
need to explicitly declare the parameter and its data type and set the
parameter value for that query in the function. The following sample code
generates the error message when Query1 has the parameter "[Enter a Name]"
in the Criteria for the Last Name field:
<P>
<PRE>   Function TestQP ()
      Dim MyDB As Database, MySet As Dynaset
      Set MyDB = CurrentDB()
      Set MySet = MyDB.CreateDynaset("Query1")
      Debug.Print MySet![First Name]; Tab(10); MySet![Last Name]
   End Function

</PRE>When you refer to the parameter query, the correct syntax is as follows:
<P>
<PRE>   Function TestQP ()
      Dim MyDB As Database, MySet As QueryDef, MyDyna As Dynaset
      Set MyDB = CurrentDB()
      Set MySet = MyDB.OpenQueryDef("Query1")
      MySet![Enter a Name] = "Davolio"
      Set MyDyna = MySet.CreateDynaset()
      Debug.Print MyDyna![First Name]; Tab(10); MyDyna![Last Name]
      MyDyna.Close
      MySet.Close
   End Function

</PRE>The same error message may appear when you concatenate a variable in the
SQL SELECT statement of a CreateDynaset method. A syntactically correct
example is as follows.
<P>
NOTE: In the following example, an underscore (_) is used as a line-
continuation character. Remove the underscore from the end of the line when
re-creating this example.
<P>
<PRE>   Set MySet = MyDB.CreateDynaset("SELECT * FROM Employees WHERE _
                    [Employee ID] = " &amp; Forms!Form1!Field0 &amp; ";")

</PRE>This SELECT statement points to a control on a form for the WHERE clause.
[Employee ID] is a numeric field type and the contents of the control are
numeric.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: parameters<BR>
Keywords            : kberrmsg kbprg PgmDecl PgmObj SynGnrl<BR>
Version             : 1.0 1.1<BR>
Platform            : WINDOWS<BR>
Hardware            : X86<BR>
Issue type          : kbinfo<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 8, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
