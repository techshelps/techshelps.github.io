

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: Obtain Name of Current User Database Using Access Basic </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q89681 ">
<META NAME="KBModify" CONTENT="1997/06/06">
<META NAME="KBCreate" CONTENT="1992/09/28">
<META NAME="Keywords" CONTENT="kbprg PgmApi">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  Microsoft Access version 1.x does not have a built-in way to determine the name of the database that the user currently has open. This article lists a sample Access Basic fu...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA1S,QDN9,QAZV,QAUJ,QAY5,QA5F,QAMA,QAMB,QARM,QAGU,QBV8,QAB9,QAH4,QAPN,QATX V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: Obtain Name of Current User Database Using Access Basic</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 6, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q89681 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 1.0, 1.1, 2.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
Microsoft Access version 1.x does not have a built-in way to determine the
name of the database that the user currently has open. This article lists
a sample Access Basic function that you can use in Microsoft Access 1.x to
find the name of the database.
<P>
In Microsoft Access version 2.0, you can find the name of the database
using data access objects (DAO). With DAO, you can use the Name property
of the DBEngine object to find the path and name of the currently open
database. For more information about the DBEngine object, search for
"DBEngine," and then "DBEngine Object" using the Microsoft Access 2.0 Help
menu.
<P>
This article assumes that you are familiar with Access Basic and with
creating Microsoft Access applications using the programming tools
provided with Microsoft Access. For more information on Access Basic,
please refer to the "Introduction to Programming" manual in Microsoft
Access version 1.x, or the "Building Applications" manual in version 2.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Although you can obtain the object variable of the current user database
by using the CurrentDB() function, you are unable to obtain the text
representation of the database name. The following example shows how a
user- defined function called GetUserDBName() obtains a text
representation of the user database name.
<P>
The GetUserDBName() function returns the name of the database with no
path or extension. You must add your own path or extension string to
the result of the GetUserDBName() function when necessary.
<P>
NOTE: The code to determine the current database does not work with
run-time versions of Microsoft Access (MSARN110.EXE).

<OL><P><LI>Type the following sample code into a module.
<P>
   NOTE: In the following sample code, an underscore (_) is used as a
   line-continuation character. Remove the underscore from the end of the
   line when re-creating this code in Access Basic.
<P>
   NOTE: You may have some Microsoft Windows API functions defined in an
   existing Microsoft Access library; therefore, your declarations may be
   duplicates. If you receive a duplicate procedure name error message,
   remove or comment out the declarations statement in your code.
<P>
<P><PRE>      Option Compare Database  'Use database order for string comparisons.
</PRE><P>
<P><PRE>      Option Explicit
</PRE><P>
<P><PRE>      Declare Function GetWindow% Lib "USER" Alias "GetWindow" _
<PRE></PRE>                       (ByVal hwnd%, ByVal Relationship%)
      Declare Function GetClassName% Lib "USER" Alias "GetClassName" _
                       (ByVal hwnd%, ByVal ClassName$, ByVal Size%)
      Declare Function GetWindowText% Lib "User" Alias "GetWindowText" _
                       (ByVal hwnd%, ByVal StringText$, ByVal wInt%)
      Declare Function GetActiveWindow% Lib "USER" Alias _
                       "GetActiveWindow" ()
      Declare Function GetParent% Lib "USER" Alias "GetParent" (ByVal _
                       hwnd%)

      Const GW_HWNDNEXT = 2
      Const GW_CHILD = 5

      Const AccessDBC = "ODb"
      Const AccessMDICLIENT = "MDIClient"
      Const ACCESSMain = "OMain"

      Function GetDBName ()
         Dim hwnd As Integer
         Dim ClassName As String, ClassLen As Integer
         Dim Caption As String, CaptionLen As Integer
         Dim Start As Integer, fMDIClient As Integer
         Dim RetVal

         '
         ' Get the handle to the Microsoft Access window.
         '
         hwnd = GetActiveWindow()
         ClassName = Space(127)
         ClassLen = GetClassName(hwnd, ClassName, Len(ClassName))
         While ((Left$(ClassName$, ClassLen) &lt;&gt; "OMain"))
            hwnd = GetParent(hwnd)
            ClassLen = GetClassName(hwnd, ClassName, Len(ClassName))
         Wend

         '
         ' Traverse the children looking for the 'MDIClient' child.
         '
         hwnd = GetWindow(hwnd, GW_CHILD)
         Do While hwnd And Not fMDIClient
            ClassLen = GetClassName(hwnd, ClassName, Len(ClassName))
            If Left$(ClassName, ClassLen) = "MDIClient" Then
               fMDIClient = True
            Else
               hwnd = GetWindow(hwnd, GW_HWNDNEXT)
            End If
         Loop

         '
         ' Traverse children until we find the Database Window 'ODb' child
         ' .. which has a title of "Database: &lt;app name&gt;".
         '
         hwnd = GetWindow(hwnd, GW_CHILD)
         Do While hwnd
            ClassLen = GetClassName(hwnd, ClassName, Len(ClassName))
               ClassName = Mid$(ClassName, 1, ClassLen)
               If Left$(ClassName, ClassLen) = "ODb" Then
                  Caption = Space$(127)
                  RetVal = GetWindowText(hwnd, Caption, Len(Caption))
                  Start = InStr(Caption, ":") + 2
                  GetDBName = Mid$(Caption, Start)
                  Exit Function
               End If
               hwnd = GetWindow(hwnd, GW_HWNDNEXT)
         Loop

         GetDBName = "Not Found"

      End Function

</PRE><P><LI>Type the following line in the Immediate window, and then press ENTER:
<P>
<P><PRE>      ?GetDBName()
</PRE><P>
   Note that the name of the database is returned.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about using DAO, please see the following article in
the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q113919.htm">Q113919</A></B>
   TITLE     : ACC: How to Get the Name of the Current Database
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: dde dbname<BR>
Keywords            : kbprg PgmApi<BR>
Version             : 1.0 1.1 2.0<BR>
Platform            : WINDOWS<BR>
Hardware            : x86<BR>
Issue type          : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 6, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
