

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: Sample Function to Determine the Access Startup Directory </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q88174 ">
<META NAME="KBModify" CONTENT="1997/06/06">
<META NAME="KBCreate" CONTENT="1992/08/19">
<META NAME="Keywords" CONTENT="kbprg PgmApi">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  This article describes the steps involved in creating a function that returns the Microsoft Access startup directory.  Microsoft Access does not have a built-in command to r...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA1S,QAY5,QDN9,QBXB,QATJ,QAUD,QAB9,QBV8,QAFI,QAH4,QDL9,QBWO,QBWN,QDIV,QABY V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: Sample Function to Determine the Access Startup Directory</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 6, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q88174 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 1.0, 1.1, 2.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
This article describes the steps involved in creating a function that
returns the Microsoft Access startup directory.
<P>
Microsoft Access does not have a built-in command to return the Microsoft
Access startup directory. However, you can accomplish this by making
Windows application programming interface (API) calls in Access Basic.
<P>
NOTE: Microsoft Access 2.0 does include the function SysCmd() to return
the directory where the Msacess.exe file is located. See the bottom of
this article for more information.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The Access Basic CurDir$() function returns the current directory. Because
Microsoft Access can be started from a directory other than the current
directory or the current directory can be changed with the ChDir
statement, the CurDir$() function cannot be used to determine the startup
directory.
<P>
The following sample program module makes use of the Windows API functions
GetModuleHandle() and GetModuleFileName(). With the module handle, the
path can be obtained with the GetModuleFileName() function.
<P>
<P><h3>Creating the Module</h3>
 
<P>
The following steps demonstrate how to create the sample Access Basic
function that returns the startup directory:

<OL><P><LI>From the File menu, choose New, and select Module.

<P><LI>Type the following lines in the Declarations section.
<P>
   NOTE: In the following sample code, an underscore (_) is used as a
   line-continuation character. Remove the underscore from the end of the
   line when re-creating this code in Access Basic.
<P>
<P><PRE>      Option Explicit
      Declare Function GetModuleHandle% Lib "kernel" (ByVal FileName$)
      Declare Function GetModuleFileName% Lib "kernel" (ByVal hModule%, _
<PRE></PRE>                          ByVal FileName$, ByVal nSize%)

</PRE><P><LI>Type the following function:
<P>
<P><PRE>      Function StartUp_Dir ()
      Dim hModule%, Buffer$, Length%, Msg$
<PRE></PRE>         hModule% = GetModuleHandle("MSACCESS.EXE")
         Buffer$ = Space$(255)
         Length% = GetModuleFileName(hModule%, Buffer$, Len(Buffer$))
         Buffer$ = Left$(Buffer$, Length%)
         Msg$ = "Startup path and filename: " &amp; Buffer$
         MsgBox Msg$
      End Function

</PRE><P><LI>From the Run menu, choose Compile Loaded Modules in Microsoft Access
   version 1.x, or choose Compile All in version 2.0.

<P><LI>Save the module as Startup Directory.

<P><LI>From the View menu, choose Immediate window. Type the following line in
   the Immediate window, and then press ENTER:
<P>
<P><PRE>      ? StartUp_Dir()
</PRE><P>
   Note that the Microsoft Access startup directory is displayed in the
   Immediate window.
<P>
</OL><h3>Uses and Variations</h3>
 
<P>
The Startup directory is displayed when you type the following line in the
Immediate window:
<P>
<PRE>   ? StartUp_Dir()

</PRE></OL>This function can also be incorporated in other program modules and can be
used in expressions. For example, entering =Startup_Dir() as the OnPush or
OnClick property of a button on a form returns the startup directory of
Microsoft Access whenever the button is chosen.
<P>
NOTE: You can change the MSACCESS.EXE argument for the Windows API
GetModuleHandle() function so that the function returns the startup
directory of another program started in the Windows environment.
Furthermore, you can pass a program name as a variable to the Windows API
function, giving even more flexibility to the function.
<P>
<P><h3>SysCmd() Function</h3>
 
<P>
If all you need is the directory in which the Msacess.exe file is located,
you can use the SysCmd() function, as in the following example:
<P>
<PRE>   Function test()
      Dim AccDir As String
      AccDir = SysCmd(acSysCmdAccessDir)
      Debug.Print AccDir
   End Function

</PRE><h2>REFERENCES</h2>
 
<P>
"Microsoft Windows Software Development Kit," Microsoft Press, 1992
<P>
"Programming Windows: the Microsoft Guide to Writing Applications for
Windows 3," Charles Petzold, Microsoft Press, 1990
<P>
"Programmer's Reference Library: Microsoft Windows 3.1 Guide to
Programming Reference," Volumes 1 - 6, Microsoft Press, 1992
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : kbprg PgmApi<BR>
Version             : 1.0 1.1 2.0<BR>
Platform            : WINDOWS<BR>
Hardware            : x86<BR>
Issue type          : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 6, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
