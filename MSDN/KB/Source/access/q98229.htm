

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: How to Determine the View in Which a Form Is Displayed </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q98229 ">
<META NAME="KBModify" CONTENT="1997/06/08">
<META NAME="KBCreate" CONTENT="1993/05/02">
<META NAME="Keywords" CONTENT="kbprg PgmApi">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  Microsoft Access has no built-in functions or properties to determine if a form is displayed in Form view or Datasheet view. To determine this, you must call a series of Win...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA1S,QADK,QDN9,QAY5,QDL9,QBWO,QBWN,QAB9,QBV8,QA5F,QAMA,QAH4,QAEF,QAI2,QBWT V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: How to Determine the View in Which a Form Is Displayed</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 8, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q98229 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 1.0, 1.1, 2.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
Microsoft Access has no built-in functions or properties to determine if a
form is displayed in Form view or Datasheet view. To determine this, you
must call a series of Windows application programming interface (API)
functions.
<P>
This article assumes that you are familiar with Access Basic and with
creating Microsoft Access applications using the programming tools provided
with Microsoft Access. For more information on Access Basic, please refer
to the "Introduction to Programming" manual in Microsoft Access version
1.x, or the "Building Applications" manual in version 2.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To determine the current view of a form, call the function listed
below and pass the form as an argument to the function, for example:
<P>
<PRE>   X% = Is_FormView (Forms!Form)

</PRE>If the form is in Form view, the returned value is a nonzero number.
If the form is in Datasheet view, the returned value is zero.
<P>
NOTE: In the following sample code, an underscore (_) is used as a line-
continuation character. Remove the underscore from the end of the line when
re-creating this code  in Access Basic.
<P>
NOTE: You may have some Microsoft Windows API functions defined in an
existing  Microsoft Access library; therefore, your declarations may be
duplicates. If you receive a duplicate procedure name error message,
remove or comment out the declarations statement in your code.
<P>
<PRE>   Option Explicit
   Declare Function GetWindowWord% Lib "User" (ByVal hwnd%,_
                       ByVal nIndex%)
   Declare Function GetWindow% Lib "User" (ByVal hwnd%, ByVal wCmd%)
   Declare Function IsWindowVisible% Lib "User" (ByVal hwnd%)
   Declare Function GetClassName% Lib "User" (ByVal hwnd%,_
                       ByVal lpClassname$, ByVal nMaxCount%)

   Const GW_SiblingHwnd% = 2
   Const GW_CHILD = 5

   Function Is_FormView (F As Form)
      Dim SiblingHwnd%, CName$, CNameLen%

      ' Get the first child window of the specied form.
      SiblingHwnd% = GetWindow(F.hwnd, GW_CHILD)

      ' Enumerate through the forms child windows until exhausted
      ' or you find a visible sub-window with the classname of
      ' "OFormSub".

      Do While SiblingHwnd%
         'allocate temporary space.
         CName$ = Space$(128)

         ' Get the class name of the specified window.
         CNameLen% = GetClassName(SiblingHwnd%, CName$, Len(CName$))
         ' Peel off the extra characters in the padded string.
         CName$ = Mid$(CName$, 1, CNameLen%)

         ' If the window is visible, and the classname is OFormSub,
         ' then the form is either in Design view, or Form view and
         ' not in Datasheet view.
         If IsWindowVisible(SiblingHwnd%) And CName$ = "OFormSub" Then
            Exit Do
         End If

         ' Get the next sibling window.
         SiblingHwnd% = GetWindow(SiblingHwnd%, GW_SiblingHwnd%)

      Loop
      Is_FormView = SiblingHwnd%

   End Function

</PRE><h2>REFERENCES</h2>
 
<P>
"Microsoft Windows 3.1 Programmer's Reference," Volume 2
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : kbprg PgmApi<BR>
Version             : 1.0 1.1 2.0<BR>
Platform            : WINDOWS<BR>
Hardware            : X86<BR>
Issue type          : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 8, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
