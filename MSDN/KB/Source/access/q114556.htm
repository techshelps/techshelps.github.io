

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: How to Find a Record in a Form Using Access Basic </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q114556">
<META NAME="KBModify" CONTENT="1997/05/14">
<META NAME="KBCreate" CONTENT="1994/05/05">
<META NAME="Keywords" CONTENT="FmsEvnt kbusage">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  This article describes a method that you can use to find a record in a form using the form's recordset and a bookmark.  This article assumes that you are familiar with Access Bas...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA1S,QA5V,QDN9,QAPN,QAH4,QA5F,QAPF,QAMA,QAG2,QA2Q,QBWS,QA4H,QAY5,QAHH,QAJH V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: How to Find a Record in a Form Using Access Basic</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  May 14, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q114556</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 1.0, 1.1, 2.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
This article describes a method that you can use to find a record in a
form using the form's recordset and a bookmark.
<P>
This article assumes that you are familiar with Access Basic and with
creating Microsoft Access applications using the programming tools
provided with Microsoft Access. For more information on Access Basic,
please refer to the "Introduction to Programming" manual in Microsoft
Access version 1.x, or the "Building Applications" manual in version 2.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The Microsoft Access "User's Guide" demonstrates a method using the
FindRecord macro action that you can use to find records in a form by
selecting a key value from a list. (See the Microsoft Access "User's
Guide," version 1.0, pages 547-548, or version 1.1, pages 551-552, or
version 2.0, pages 651-652.) The method described in the User's Guide is
limited in the following ways:

<UL><LI>It requires that the key search field be located on the form.

<LI>You are limited to searching for a single key value.
<P>
</UL>The example below demonstrates a sample user-defined Access Basic function
called FindRecord_RS() that uses the FindFirst recordset method to find a
record in a form:
<P>
NOTE: In the following example, an underscore (_) at the end of a line
is used as a line-continuation character. Remove the underscores from
the end of the line when re-creating this example.

<OL><P><LI>Create a new module with the following line in the Declarations section:
<P>
<P><PRE>      Option Explicit
</PRE>
<P><LI>Add the following function to the module:
<P>
<P><PRE>      Function FindRecord_RS (SQLWhere)
<PRE></PRE>         Dim DS As Dynaset
         Set DS = Screen.ActiveForm.Dynaset
         DS.FindFirst SQLWhere
         If DS.NoMatch Then
            MsgBox "No record found!"
         Else
            Screen.ActiveForm.Bookmark = DS.Bookmark
         End If
      End Function

</PRE></OL>The FindRecord_RS() function's SQLWhere argument must be a string
expression that is any valid SQL WHERE clause (without the word WHERE).
<P>
The following are examples of valid SQL WHERE clauses:
<P>
<PRE>   "[Customer ID] = 3"

   "[Customer ID] = " &amp; [Find Customer]

</PRE>If the field is a text field, the WHERE clause may look like the
following examples:
<P>
<PRE>   "[Customer ID] = '3'"

   "[Customer ID] = '" &amp; [Find Customer] &amp; "'"

</PRE>NOTE: You can use single or double quotation marks to delimit text values.
The following examples are functionally identical to the two examples
above:
<P>
<PRE>   "[Customer ID] = ""3"""

   "[Customer ID] = """ &amp; [Find Customer] &amp; """"

</PRE>The SQL WHERE clause to find a record for a particular customer on a
given date might look like the following examples:
<P>
<PRE>   "[Customer ID] = 3 AND [Order Date] = #1/1/94#"

   "[Customer ID] = " &amp; [Find Customer] &amp; " AND [Order Date] = #" &amp;_
    [Find Order Date] &amp; "#"

</PRE><h3>Using the FindRecord_RS Function</h3>
 
<P>
Microsoft Access version 1.x:
<P>
The Suppliers form in the sample database NWIND.MDB has a combo box called
Select Company To Find that lists available suppliers. When you select a
supplier, the Find Company macro is run to find the supplier matching the
selection using the FindRecord action.
<P>
The following steps demonstrate how to use the FindRecord_RS() method
instead of the Find Company macro:

<OL><P><LI>Open the Suppliers form in Design view.

<P><LI>Select the Select Company To Find combo box in the form footer,
   and change the AfterUpdate property from
<P>
<P><PRE>      Find Company
</PRE><P>
   to:
<P>
<P><PRE>      =FindRecord_RS("[Company Name] = """ &amp; [Company Pick List] &amp; """")
</PRE><P>
</OL>When you make a selection in the combo box, the FindRecord_RS() function
will find a record in the Suppliers form whose Company Name field matches
your selection in the combo box.
<P>
Microsoft Access version 2.0:
<P>
The Products And Suppliers form in the sample database NWIND.MDB has a
combo box called Select Product To Find that lists the available products.
When you select a product, the Product Pick List.Find Product macro is run
to find the product record matching the selection using the FindRecord
macro action.
<P>
The following example demonstrates how to use the FindRecord_RS() method
instead of the Product Pick List.Find Product macro:

<OL><P><LI>Open the Products And Suppliers form in Design view.

<P><LI>Select the Select Product To Find combo box in the form header, and
   change the AfterUpdate property from
<P>
<P><PRE>      Product Pick List.Find Product
</PRE><P>
   to:
<P>
<P><PRE>      =FindRecord_RS("[Product Name] = """ &amp; [Product Pick List] &amp; """")
</PRE><P>
</OL>When you select an item in the combo box, the FindRecord_RS() function will
find a record in the Products And Suppliers form whose Product Name field
matches your selection in the Select Product To Find combo box.
<P>
<P><h2>REFERENCES</h2>
 
<P>
Microsoft Access "User's Guide," version 1.0, Chapter 22, "Using Macros
with Forms," pages 547-548
<P>
Microsoft Access "User's Guide," version 1.1, Chapter 22, "Using Macros
with Forms," pages 551-552
<P>
Microsoft Access "User's Guide," version 2.0, Chapter 25, "Using Macros
with Forms," pages 651-652
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : FmsEvnt kbusage<BR>
Version             : 1.0 1.1 2.0<BR>
Platform            : WINDOWS<BR>
Hardware            : X86<BR>
Issue type          : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  May 14, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
