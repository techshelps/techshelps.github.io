

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC95: FindNext Does Not Advance to Next Record to Search </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q150665">
<META NAME="KBModify" CONTENT="1997/05/30">
<META NAME="KBCreate" CONTENT="1996/05/07">
<META NAME="Keywords" CONTENT="kbusage McrArg">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  When the FindNext macro action is run from a command button on a form to find the next instance of the search criteria specified by the previous FindRecord action, the first instance is found repeatedly. The FindNext macro action fails to advance t...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QAH4,QA5D,QA5V,QBWS,QAJQ,QA1S,QBXS,QA2Q,QBDM,QANS,QAUJ,QAB9,QDN9,QBT6 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC95: FindNext Does Not Advance to Next Record to Search</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  May 30, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q150665</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access version 7.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When the FindNext macro action is run from a command button on a form to
find the next instance of the search criteria specified by the previous
FindRecord action, the first instance is found repeatedly. The FindNext
macro action fails to advance to the next record to find the next instance
of the search criteria.
<P>
NOTE: The same behavior can be demonstrated using the FindRecord macro
action with the FindFirst argument set to No.
<P>
<P><h2>CAUSE</h2>
 
<P>
Microsoft Access for Windows 95 and Microsoft Access version 2.0 behave
differently in regard to where the FindNext macro action begins the
search for the next instance of the search criteria.
<P>
The FindNext action in Microsoft Access version 2.0 always begins
searching starting with the next record in the recordset. In Microsoft
Access for Windows 95, if the currently selected text is the same as the
search text at the time the FindNext macro action is invoked, the search
begins immediately following the selection in the same field as the
selection, and in the same record. Otherwise, it begins searching at the
start of the current record.
<P>
The advantage to the Microsoft Access for Windows 95 behavior is that
you can repeatedly find multiple instances of the same search criteria
that might appear in a single record. The FindNext macro action in
Microsoft Access version 2.0 is limited to finding only the first instance
of the search criteria in a record, regardless of other instances of the
same search criteria in the record.
<P>
The problem occurs in Microsoft Access for Windows 95 when you push a
custom Find Next command button on a form. When this happens, focus
moves from the current control to the button. If text is selected in the
current control, it will not remain selected when the focus moves to the
button. The FindNext action will then begin searching from the start of the
record because the current selection is no recognized. The first
instance of the search criteria will be found repeatedly in the same
record.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Use one of the following techniques to work around this behavior:

<OL><P><LI>Use a different mechanism to invoke the FindNext action that allows
   focus to remain in the current control. This can be accomplished in
   one of the following ways:
<P>
<P><PRE>    - Use a custom Toolbar button rather than a command button.
</PRE><P>
<P><PRE>    - Use a function key or keystroke invoked by a AutoKeys macro.
</PRE>
<P><LI>Use Visual Basic code to reset focus back to the control that
   contains the selection before invoking the FindNext macro action.
<P>
</OL>For a detailed discussion of how to implement these techniques, please see
the "Workaround" sections following the "More Information" section.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 

<OL><P><LI>Open the sample database Northwind.mdb.

<P><LI>Create a new macro called "Find" with the following actions:
<P>
<PRE>      Macro Name    Macro Action
      --------------------------
      Company       GoToControl
                    FindRecord

      Company Actions
      --------------------------------------------
      GoToControl:
         ControlName: CompanyName
      FindRecord:
         Find What: =[Forms]![Customers]![txtFind]
         Match: Any Part of Field
         Match Case: No
         Search: All
         Search As Formatted: No
         Only Current Field: Yes
         Find First: Yes

      Macro Name     Macro Action
      ---------------------------
      NextCompany    GoToControl
                     FindNext

      NextCompany Actions
      ---------------------------
      GoToControl:
         ControlName: CompanyName

   NOTE: You can optionally use the FindRecord macro action in place of
   FindNext. Use the same arguments as the FindRecord macro action with
   the exception of the FindFirst argument, which should be set to No.

   NOTE: Do not omit the equals sign (=) to the left of
   [Forms]![Customers]![txtFind] in the FindWhat argument above.

</PRE><P><LI>Open the Customers form in Design view.

<P><LI>Add a new text box to the form with the following properties:
<P>
<P><PRE>      Name: txtFind
      ControlSource: &lt;leave empty&gt;
      DefaultValue: "a"
</PRE>
<P><LI>Add a command button to the form with the following properties:
<P>
<P><PRE>      Name: FindCompany
      Caption: Find Company
      OnClick: Find.Company
</PRE>
<P><LI>Create a second command button with the following properties:
<P>
<P><PRE>      Name: FindNextCompany
      Caption: Find Next Company
      OnClick: Find.NextCompany
</PRE>
<P><LI>View the Customers form in Form view.

<P><LI>Click the Find Company command button to find the first customer
   record that contains the letter "a". Note that the "A" in "Alfreds
   Futterkiske" is selected, as expected.

<P><LI>Click the Find Next Company command button to find the next instance
   of the letter "a" in the Company Name field. Note that the "A" in
   "Alfreds Futterkiske" is selected again. This is not expected.
<P>
</OL><h3>Workaround 1: Using a Custom Toolbar Button</h3>
 

<OL><P><LI>While the Customers form with the modifications made in the "Steps To
    Reproduce Behavior" section is open in Form view, using the right mouse
    button (right click), click the toolbar and choose Customize.

<P><LI>Choose "All Macros" from the Categories list.

<P><LI>Drag "Find.Company" from the Objects list to the toolbar.

<P><LI>Right click the new toolbar button and choose "Choose Button Image."

<P><LI>Click to select the "Text" check box and type "Find Company" in the
    text box to the right. Click OK.

<P><LI>Drag "Find.NextCompany" from the Objects list to the toolbar.

<P><LI>Right Click the new toolbar button and choose "Choose Button Image."

<P><LI>Click to select the "Text" check box and type "Find Next Company" in
    the text box to the right. Click OK.

<P><LI>Click the Close button in the Customize Toolbars dialog box to return
    to the Customers form.

<P><LI>Click the Find Company toolbar button. Note that the "A" in "Alfreds
    Futterkiske" is selected, as expected.

<P><LI>Click the Find Next Company toolbar button. Note that the first "A" in
    "Ana Trujillo Emparedados y helados" is selected, as expected.

<P><LI>Click the Find Next Company toolbar button again. Note that the second
    "a" in "Ana Trujillo Emparedados y helados" is selected, as expected.
<P>
</OL><h3>Workaround 2: Using the F3 Key</h3>
 

<OL><P><LI>Create the following new macro and name it AutoKeys:
<P>
<PRE>      Macro Name     Macro Action
      ---------------------------
      {F3}           FindNext

</PRE><P><LI>Open the modified Customers form from the "Steps To Reproduce Behavior
   Section" in Form view.

<P><LI>Click the Find Company command button to find the first customer
   record that contains the letter "a". Note that the "A" in "Alfreds
   Futterkiske" is selected, as expected.

<P><LI>Press the F3 key to repeat the search. Note that the "A" in "Ana
   Trujillo Emparedados y helados" is selected, as expected.
<P>
</OL><h3>Workaround 3: Using Visual Basic with a Command Button</h3>
 

<OL><P><LI>Open the modified Customers form from the "Steps To Reproduce Behavior"
   section in Design view.

<P><LI>Add a new command button to the form with the following properties:
<P>
<P><PRE>      Name: NewFindCompany
      Caption: New Find Company
</PRE><P>
   For the OnClick event procedure, click the Build button and choose
   Code Builder from the Choose Builder dialog box. Edit the procedure as
   follows:
<P>
<P><PRE>      Private Sub NewFindCompany_Click()
<PRE></PRE>         Me![CompanyName].SetFocus
         DoCmd.FindRecord Me![txtFind], acAnywhere
         RecordFind
      End Sub

</PRE><P><LI>Create a second command button with the following properties:
<P>
<P><PRE>      Name: NewFindNextCompany
      Caption: New Find Next Company
</PRE><P>
   For the OnClick event procedure, click the Build button and choose
   Code Builder from the Choose Builder dialog box. Edit the procedure as
   follows:
<P>
<P><PRE>      Private Sub NewFindNextCompany_Click()
<PRE></PRE>         RestoreFind
         DoCmd.FindNext
         RecordFind
      End Sub

</PRE><P><LI>In the Object box at the top of the code window, choose "(General)"

<P><LI>Add the following lines of code to the Declarations section of the
   form module:
<P>
<P><PRE>      Dim FoundControl As Control
      Dim FoundControlSelStart As Integer
      Dim FoundControlSelLength As Integer
</PRE>
<P><LI>Add the following procedures to the General section of the module:
<P>
<PRE>      Sub RestoreFind()
         FoundControl.SetFocus
         FoundControl.SelStart = FoundControlSelStart
         FoundControl.SelLength = FoundControlSelLength
      End Sub

      Sub RecordFind()
         Set FoundControl = Me.ActiveControl
         FoundControlSelStart = Me.ActiveControl.SelStart
         FoundControlSelLength = Me.ActiveControl.SelLength
      End Sub

</PRE><P><LI>View the form in Form view.

<P><LI>Click the Find Company command button to find the first customer
   record that contains the letter "a". Note that the "A" in "Alfreds
   Futterkiske" is selected, as expected.

<P><LI>Click the Find Next Company command button to find the next instance
   of the letter "a" in the Company Name field. Note that the "A" in "Ana
   Trujillo Emparedados y helados" is selected, as expected.
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : kbusage McrArg<BR>
Version             : 7.0<BR>
Platform            : WINDOWS<BR>
Hardware            : X86<BR>
Issue type          : kbprb<BR>
Resolution Type     : kbworkaround<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  May 30, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
