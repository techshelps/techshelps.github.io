

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC1x: How to Move List Box Selections to a Second List Box </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q97518 ">
<META NAME="KBModify" CONTENT="1997/05/14">
<META NAME="KBCreate" CONTENT="1993/04/13">
<META NAME="Keywords" CONTENT="FmsCmbo kbusage">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  This article describes how to create a pair of list boxes to imitate the multiple selection behavior used in Microsoft Access wizards.  MORE INFORMATION  The example below demonstrates how to create a new form that contains two list boxes and three...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVR,QA2Q,QA7O,QAY5,QAE1,QAEF,QBXS,QBV8,QA7N,QAB9,QAG2,QANF,QAMB,QA1S,QA4F V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC1x: How to Move List Box Selections to a Second List Box</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  May 14, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q97518 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 1.0, 1.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article describes how to create a pair of list boxes to imitate the
multiple selection behavior used in Microsoft Access wizards.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The example below demonstrates how to create a new form that contains two
list boxes and three command buttons. You can add items to or delete
items from the list using the command buttons or the properties of the
list boxes:

<OL><P><LI>Create the following new table:
<P>
<P><PRE>      Table: Table1
      -----------------------------------------------
      Field Name: List (primary key)
<PRE></PRE>         DataType: Text
         Field Size: 15
         Caption: Items that will be provided in list
      Field Name: Selected
         DataType: Text
         Field Size: 5
         Caption: Indicates if the item has been selected

</PRE><P><LI>View the table in Datasheet view. Add five records to the table. For
   each record, type any text in the List field (for example a list of
   colors or cities), and type "YES" (without quotation marks) in the
   Selected field.

<P><LI>Create the following two new queries based on Table1:
<P>
<P><PRE>      Query: Select Yes
      -------------------------------
      Field Name: List
<PRE></PRE>         Show: Yes
         Criteria: [selected] = "YES"

      Query: Select No
      ------------------------------
      Field Name: List
         Show: Yes
         Criteria: [selected] = "NO"

</PRE><P><LI>Enter the following three sample functions in a new or existing
   module:
<P>
<P><PRE>      '=======================================================
      'The following function opens the table and changes the
      'selected value from YES to NO, and then executes the
      'query for the two list boxes so that they will display
      'the updated values.
      '=======================================================
      Function ADD ()
<PRE></PRE>         Dim MyDB As Database
         Dim MyTable As Table
         Dim y As Control

         Set MyDB = CurrentDB()
         Set MyTable = MyDB.OpenTable("Table1")
         Set y = forms!SelectList!field0

         MyTable.index = "PrimaryKey"
         MyTable.Seek "=", y

         MyTable.Edit
         MyTable.[selected] = "no"
         MyTable.Update

         MyTable.Close

         DoCmd Requery "field0"
         DoCmd Requery "field1"
      End Function

      '=======================================================
      'The following function opens the table and changes the
      'selected value from NO to YES, and then executes the
      'query for the two list boxes so that they will display
      'the updated values.
      '=======================================================
      Function Del ()
         Dim MyDB As Database
         Dim MyTable As Table
         Dim y As Control

         Set MyDB = CurrentDB()
         Set MyTable = MyDB.OpenTable("Table1")
         Set y = forms!SelectList.field1

         MyTable.index = "primarykey"
         MyTable.Seek "=", y
         MyTable.Edit
         MyTable.[selected] = "yes"
         MyTable.Update
         MyTable.Close

         DoCmd Requery "field0"
         DoCmd Requery "field1"
      End Function

      '=======================================================
      'The following function sets all values in the Selected
      'field to YES, and then executes the query for the two
      'list boxes so that they will display the updated
      'values.
      '=======================================================
      Function Clear ()
         Dim MyDB As Database
         Dim MyTable As Table

         Set MyDB = CurrentDB()
         Set MyTable = MyDB.OpenTable("Table1")

         On Error GoTo erhandle
         MyTable.MoveFirst

         Do Until MyTable.EOF
            MyTable.Edit
            MyTable.[selected] = "yes"
            MyTable.Update
            MyTable.MoveNext
         Loop

      erhandle:
         Resume Next

         DoCmd Requery "field0"
         DoCmd Requery "field1"
      End Function

</PRE><P><LI>Create the following new, unbound form, and then save it as
   SelectList:
<P>
<P><PRE>      Object: list box
      -----------------------------
      ControlName: field0
<PRE></PRE>         ControlSource:
         RowSourceType: Table/Query
         RowSource: Select Yes
         OnDblClick: =ADD()

      Object: list box
      -----------------------------
      ControlName: field1
         ControlSource:
         RowSourceType: Table/Query
         RowSource: Select No
         OnDblClick: =Del()

      Object: command button
      -----------------------
      ControlName: Button One
         Caption: Clear
         OnPush: =Clear()

      Object: command button
      -----------------------
      ControlName: Button Two
         Caption: Add item
         OnPush: =Add()

      Object: command button
      -------------------------
      ControlName: Button Three
         Caption: Delete item
         OnPush: =Del()

</PRE></OL>The first list box, Field0, displays the items to be selected. The second
list box, Field1, displays the items that are selected.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about list boxes, search for "list box: creating"
then "List Box Control" using the Microsoft Access Help menu.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: listbox combo multiple fill function wizard<BR>
Keywords            : FmsCmbo kbusage<BR>
Version             : 1.0 1.1<BR>
Platform            : WINDOWS<BR>
Hardware            : X86<BR>
Issue type          : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  May 14, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
