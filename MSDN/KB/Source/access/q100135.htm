

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: How to Search for Characters or Strings in Records </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q100135">
<META NAME="KBModify" CONTENT="1998/02/10">
<META NAME="KBCreate" CONTENT="1993/06/16">
<META NAME="Keywords" CONTENT="QryOthr kbusage">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  Novice: Requires knowledge of the user interface on single-user computers.  This article demonstrates three methods that you can use to search for and identify records containing a particular character or string. The example in this article searche...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA1S,QATX,QAUD,QBSO,QA7O,QA7N,QAJQ,QBWS,QDN9,QA5V,QAPN,QAPF,QAJE,QAHH,QAUJ P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: How to Search for Characters or Strings in Records</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 10, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q100135</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 1.0, 1.1, 2.0, 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Novice: Requires knowledge of the user interface on single-user computers.
<P>
This article demonstrates three methods that you can use to search for and
identify records containing a particular character or string. The example
in this article searches for an asterisk (*) character.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Say, for example, that you have a table of names. Some of the names have an
asterisk character embedded in them, and you would like a list of all the
names containing asterisks.
<P>
<P><h3>First Method--Using the InStr() Function</h3>
 
<P>
One solution is to use the InStr() function. The InStr() function returns
the position of the first occurrence of a string within another string. The
example below uses the InStr() function to determine whether or not the
asterisk character exists in the names in the table. If it does, it becomes
a member of the query's recordset. To demonstrate this method, follow these
steps:

<OL><P><LI>Start Microsoft Access, open a database, and create a new table
   called Nametest.

<P><LI>Create a text field called FirstName and type the following data into
   the table:
<P>
<P><PRE>      FirstName
      ---------
      *Pat
      Pat*
      Tom
      Ri*ck
      Harry
</PRE>
<P><LI>Create a new query based on the Nametest table.

<P><LI>Drag the FirstName field from the field list box to the query grid.

<P><LI>In the Field row of the query grid, next to the FirstName column, type
   the following expression:
<P>
<P><PRE>      NewField: InStr(1,[FirstName],"*")
</PRE>
<P><LI>In the Criteria row of the same column, type:
<P>
<P><PRE>      &gt;0
</PRE>
<P><LI>Clear the Show check box of that column.

<P><LI>Run the query by clicking Run on the Query menu. Note that you receive
   the following results:
<P>
<P><PRE>      *Pat
      Pat*
      Ri*ck
</PRE><P>
</OL>You can use this method to obtain a recordset containing any sequence of
characters. To do so, just change the asterisk in the expression above to
match the string or character for which you want to search.
<P>
<P><h3>Second Method--Using the LIKE Operator</h3>
 
<P>
The LIKE operator returns a recordset that matches a pattern. The following
example uses the LIKE operator to determine whether or not the asterisk
character exists in the names in the table. If it does, it becomes a member
of the query's recordset. To demonstrate this method, follow these steps:

<OL><P><LI>Start Microsoft Access, open a database, and create a new table
   called Nametest.

<P><LI>Create a text field called FirstName and type the following data into
   the table:
<P>
<P><PRE>      FirstName
      ---------
      *Pat
      Pat*
      Tom
      Ri*ck
      Harry
</PRE>
<P><LI>Create a new query based on the Nametest table.

<P><LI>Drag the FirstName field from the field list box to the query grid.

<P><LI>In the Criteria row of the same column, type:
<P>
<P><PRE>      Like "*[*]*"
</PRE><P>
   The first and last * are wildcards, much like the MS-DOS asterisk
   wildcard. The [*] tells Microsoft Access to look for the character
   asterisk and not to use it as a wildcard.

<P><LI>Run the query. Note that you receive the following results:
<P>
<P><PRE>      *Pat
      Pat*
      Ri*ck
</PRE><P>
</OL>This is another method that you can use to obtain a recordset containing
any sequence of characters. To do so, just change the [*] in the criteria
in step 5 to match the string or character for which you want to search.
<P>
If you are searching for a character that Microsoft Access interprets as a
wildcard, such as *#?[]!-, it must be inside square brackets. For example:
<P>
<PRE>   * should be entered as [*]
   # should be entered as [#]
   ? should be entered as [?]
   [ should be entered as [[]
   ] should be entered as []]
   ! should be entered as [!]
   - should be entered as [-]

</PRE></OL><h3>Third Method--Using the Find Command</h3>
 
<P>
The Find command searches for the data you specify in the current table or
recordset. The find command is available in the Datasheet view of a table,
query, or form and in the Form view of a form. The Find dialog box remains
open after each search. This enables you to find as many occurrences as you
want without having to click Find repeatedly. This method finds each name
with an asterisk one at a time. To demonstrate this method, follow these
steps:

<OL><P><LI>Start Microsoft Access, open a database, and create a new table
   called Nametest.

<P><LI>Create a text field called FirstName and type the following data into
   the table:
<P>
<P><PRE>      FirstName
      ---------
      *Pat
      Pat*
      Tom
      Ri*ck
      Harry
</PRE>
<P><LI>On the Edit menu, click Find.

<P><LI>In the Find In Field: dialog box, under Find What, type [*], and then
   under Where: select Any Part Of Field.

<P><LI>Click the Find First button. Note that you receive the following
   result:
<P>
<P><PRE>      *Pat
</PRE>
<P><LI>Click the Find Next button. Note that you receive the following result:
<P>
<P><PRE>      Pat*
</PRE>
<P><LI>Click the Find Next button again. Note that you receive the following
   result:
<P>
<P><PRE>      Ri*ck
</PRE><P>
</OL>You can also use this method to find any sequence of characters. To do so,
just change the [*] in the Find What: to match the string or character for
which you want to search. Please see method two regarding searching for a
character that Microsoft Access interprets as a wildcard, such as *#?[]!-.
 
<PRE>Keywords          : QryOthr kbusage
Version           : 1.0 1.1 2.0 7.0 97
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 10, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
