

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC1x: How To Determine If a Record Is Being Edited </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q106298">
<META NAME="KBModify" CONTENT="1997/05/14">
<META NAME="KBCreate" CONTENT="1993/11/04">
<META NAME="Keywords" CONTENT="FmsProp kbusage">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  In Microsoft Access version 1.x, there is no built-in functionality to determine if the current record on a form is  dirty,  or being edited. This article demonstrates a method of determining if the current record is being edited.  Note that in Mic...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA5V,QAPN,QA1S,QA8N,QAY5,QDN9,QAB9,QBV8,QAMA,QAH4,QA5F,QBVV,QAVX,QAVW,QBWS V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC1x: How To Determine If a Record Is Being Edited</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  May 14, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q106298</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 1.0, 1.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Access version 1.x, there is no built-in functionality to
determine if the current record on a form is "dirty," or being edited. This
article demonstrates a method of determining if the current record is being
edited.
<P>
Note that in Microsoft Access version 2.0, you can use the Dirty property
to determine if a record is being edited.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
This article assumes that you are familiar with Access Basic and with
creating Microsoft Access applications using the programming tools provided
with Microsoft Access. For more information on Access Basic, please refer
to the "Introduction to Programming" manual.
<P>
When you are editing a record, the record selector on the left side of the
form becomes a pencil. The pencil indicates that changes have been made to
the record that have not yet been saved.
<P>
If the record is being edited, and you try to save it, Microsoft Access
will run the form's BeforeUpdate event before saving the record. Microsoft
Access will not run the BeforeUpdate event if the record is not dirty.
<P>
The following example demonstrates how to test whether Microsoft Access
needs to run the BeforeUpdate event to determine whether the record is
dirty:

<OL><P><LI>Create a new Access Basic module with the following functions and
   Declarations section:
<P>
<P><PRE>      *********************
      Declarations Section
      *********************
      Option Explicit
      Dim FormToTest As Form
      Dim fNotDirty
</PRE><P>
<P><PRE>      *********************
      Function IsDirty()
      *********************
      Function IsDirty (F As Form)
<PRE></PRE>         ' Store the form to test
         Set FormToTest = F

         ' Set the flag indicating we want to test to see
         ' if the form is dirty or not
         fNotDirty = True

         ' Activate the form so the DoMenuItem will work
         DoCmd SelectObject A_FORM, F.FormName

         ' Save the current record to see if BeforeUpdate event fires
         On Error Resume Next
         DoCmd DoMenuItem A_FORMBAR, A_FILE, A_SAVERECORD

         ' If record is dirty, control goes to TestIsDirty function

         ' Return the flag result; if dirty, TestIsDirty will have
         ' fired and toggled the flag to False and will have
         ' canceled the save record (BeforeUpdate) event.
         IsDirty = Not fNotDirty

         ' Reset the flag
         fNotDirty = False
      End Function

      **********************
      Function TestIsDirty()
      **********************
      Function TestIsDirty ()
         ' If flag is set, we are testing for Edit Mode
         If fNotDirty Then
            ' Indicate we are testing for Edit Mode
            TestIsDirty = True

            ' Toggle the flag to indicate to IsDirty that
            ' the form is, in fact, dirty
            fNotDirty = False

            ' Cancel the BeforeUpdate event
            DoCmd CancelEvent

            ' Control goes back to IsDirty function
        End If
      End Function

</PRE><P><LI>Open the form you want to test in Design view and examine the form's
   BeforeUpdate property. If the BeforeUpdate property is empty, add the
   following line to the property:
<P>
<P><PRE>      =TestIsDirty()
</PRE><P>
   If the BeforeUpdate property has a macro listed, open the macro and add
   the following action as the first action to be executed in the macro or
   the macro group. This action must appear above any other actions in the
   macro or group:
<P>
<PRE>      Condition       Action
      -------------------------
      TestIsDirty()   StopMacro

   If the BeforeUpdate property has an Access Basic function listed, open
   the function and add the following Access Basic statement as the first
   line in the function. This statement must run before any other statement
   in the function:

      If TestIsDirty() Then Exit Function

</PRE><P><LI>Call the IsDirty() function to test whether the record is dirty. With
   the form open in Design view, open an Immediate window and type the
   following, where &lt;FormName&gt; is the name of your form:
<P>
<P><PRE>      ?MsgBox (isdirty(Forms!&lt;FormName&gt;))
</PRE><P>
   A message box will display either a 1 (the form is dirty) or a 0 (the
   form is not dirty).
<P>
</OL><h3>How to Use the IsDirty() Function with a Command Button</h3>
 
<P>
The following example demonstrates how to add a command button to a form
that you can use to determine if the current record is being edited:

<OL><P><LI>Open the sample database NWIND.MDB. Open the Categories form in Design
   view, and make the changes listed above to the BeforeUpdate event. In
   step 2, modify the Validate Primary Keys.Categories macro so that the
   first lines of the macro are as follows:
<P>
<PRE>      Macro Name     Condition        Action
      -----------------------------------------
      Categories
                     TestIsDirty()    StopMacro

</PRE><P><LI>Create a new Access Basic function called IsCategoriesFormDirty() or a
   new macro called IsCategoriesFormDirty. Note that the function is the
   preferable method, as the macro method requires IsDirty() to run twice.
<P>
   To use the function method, create the following Access Basic function:
<P>
<P><PRE>      Function IsCategoriesFormDirty ()
<PRE></PRE>         If IsDirty(Forms!Categories) Then
            MsgBox "Dirty!"
         Else
            MsgBox "Not Dirty!"
         End If
      End Function

   To use the macro method, create the following macro:

      Condition                      Action    Described Below
      --------------------------------------------------------
      IsDirty(Forms!Categories)      MsgBox          1
      Not IsDirty(Forms!Categories)  MsgBox          2

      IsCategoriesFormDirty Macro Actions
      -----------------------------------
      1. MsgBox
            Message: Dirty!
      2. MsgBox
            Message: Not Dirty!

</PRE><P><LI>Create a new button on the Categories form with the following
   properties:
<P>
<P><PRE>      Caption: Is Dirty?
      OnPush: =IsCategoriesFormDirty()
</PRE><P>
   NOTE: If you use the macro method, the OnPush property should be set to:
<P>
<P><PRE>      OnPush: IsCategoriesFormDirty
</PRE>
<P><LI>Open the Categories form in Form view.

<P><LI>Click the Is Dirty? button. The result will be "Not Dirty!" since the
   record is not being edited.

<P><LI>Modify any field in the record, and then click the Is Dirty? button. The
   result will be "Dirty!" since the record is being edited.

<P><LI>From the Edit menu, choose Undo Record. Click the Is Dirty? button. The
   result will be "Not Dirty!"
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : FmsProp kbusage<BR>
Version             : 1.0 1.1<BR>
Platform            : WINDOWS<BR>
Hardware            : X86<BR>
Issue type          : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  May 14, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
