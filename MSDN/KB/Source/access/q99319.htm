

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: Finding the OLE ClassKey of an Embedded Object (1.x/2.0) </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q99319 ">
<META NAME="KBModify" CONTENT="1997/05/08">
<META NAME="KBCreate" CONTENT="1993/05/26">
<META NAME="Keywords" CONTENT="IntpOle">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  Microsoft Access places a wrapper of information around an OLE object before it stores the object in a table. The Name and ClassKey of the object start at byte count 21 and ...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QAW6,QA1S,QA9Q,QAY5,QDN9,QDL9,QBWO,QBWN,QA5F,QATX,QAMA,QAH4,QBV8,QAB9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: Finding the OLE ClassKey of an Embedded Object (1.x/2.0)</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  May 8, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q99319 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 1.0, 1.1, 2.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
Microsoft Access places a wrapper of information around an OLE object
before it stores the object in a table. The Name and ClassKey of the
object start at byte count 21 and are stored from there as two
zero-terminating strings. By reading the field as a text field, you
can parse out the ClassKey.
<P>
This article describes how to use Access Basic to find the ClassKey of
an embedded object with an OLE-Object data type.
<P>
NOTE: This technique does not work if the OLE object is larger than 64K. In
this case you'll see the error:
<P>
<PRE>   Object has no value

</PRE><h2>MORE INFORMATION</h2>
 
<P>
When an OLE object is stored in a table, the ClassKey is the second
null-terminated string after the 20th byte in the object. It can be
read as text with the following Access Basic code:
<P>
NOTE: In the following sample code, an underscore (_) is used as a
line-continuation character. Remove the underscore from the end of the line
when re-creating this code in Access Basic.
<P>
<PRE>   Function GetObjectClass$ ()
      If IsNull(screen.activeform!Photo) Then
         GetObjectClass$ = "n/a"
      Else
         MyChunk$ = Mid(screen.activeform!Photo, 21, 40)
         NullOne% = InStr(1, MyChunk$, Chr$(0))
         NullTwo% = InStr(NullOne% + 1, MyChunk$, Chr$(0))
         GetObjectClass$ = Mid(MyChunk$, NullOne% + 1, _
                               NullTwo% - NullOne% - 1)
      End If
   End Function

</PRE>The GetObjectClass$() function first checks to see if the object is
null and returns the value "n/a" if it is. If the object is not null,
it assigns bytes 21 through 40 of the OLE object to the string
MyChunk$ and then searches for the first null character, the next null
character, and so forth. Finally, it sets the GetObjectClass$()
function equal to the string between the two null characters.
<P>
Using the function provided above, a control on the Employees form of
the sample database NWIND.MDB, with the properties below, displays the
ClassKey for the Photo control:
<P>
<PRE>   ControlName: ObjClassKey
   ControlSource: =GetObjectClass()

</PRE>This example returns "PBRUSH" for the first photo in the Employees
table.
<P>
There are several different ways to use this information. RegQueryValue(),
a function contained in the Microsoft Windows SHELL.DLL file, uses the
ClassKey to obtain information about that class from the REG.DAT file.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about calling the RegQueryValue() function to get
the Class Name of an OLE object, please see the following article here in
the Microsoft Knowledge Base.
<P>
<PRE>    ARTICLE-ID: <B><A HREF="../ACCESS/Q99322.htm">Q99322</A></B>
    TITLE:      ACC: Calling RegQueryValue() to get an OLE Object Class
                Name

</PRE>Microsoft Windows "Programmer's Reference," version 3.1, Volume 2,
page 282
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: dll classname class key<BR>
Keywords            : IntpOle<BR>
Technology          : kbole<BR>
Version             : 1.0 1.1 2.0<BR>
Platform            : WINDOWS<BR>
Hardware            : X86<BR>
Issue type          : kbinfo<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  May 8, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
