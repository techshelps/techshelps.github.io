

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: AutoLookup Technique to Look Up Info. Automatically 1.x/2.0 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q95048 ">
<META NAME="KBModify" CONTENT="1997/05/08">
<META NAME="KBCreate" CONTENT="1993/01/31">
<META NAME="Keywords" CONTENT="kbusage QryJoin">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  You can create a query or form that automatically looks up information in the one-side table of a one-to-many relationship based on an entry in a many-side field. This process is...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA1S,QABO,QA4H,QDN9,QA7O,QA7N,QAY2,QA5V,QAYY,QAKD,QARR,QAPF,QAM2,QACF,QAXB V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: AutoLookup Technique to Look Up Info. Automatically 1.x/2.0</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  May 8, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q95048 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 1.0, 1.1, 2.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
You can create a query or form that automatically looks up information
in the one-side table of a one-to-many relationship based on an entry
in a many-side field. This process is sometimes called AutoLookup.
<P>
You can use AutoLookup to have a query automatically look up information
in other tables and display it on a form or report.
<P>
You can look up information by using any one of the following three
techniques:

<UL><LI>Use AutoLookup. For more information on AutoLookup, see the "More
   Information" section below.

<LI>Use multiple DLookup() functions in forms and reports.

<LI>Use the Column property of a multiple-column combo box to update a
   text box control with new information as focus moves from row to
   row in the combo box. For more information about using the Column
   property, please see the following article in the Microsoft Knowledge
   Base:
<P>
<P><PRE>      ARTICLE-ID: <B><A HREF="../ACCESS/Q93138.htm">Q93138</A></B>
<PRE></PRE>      TITLE     : ACC: Using the Column Property to Update Text Box

</PRE></UL><h2>MORE INFORMATION</h2>
 
<P>
Use AutoLookup when you want Microsoft Access to automatically look up
information in the one-side table based on an entry in a many-side field.
The AutoLookup technique works in a query or in a form. AutoLookup also
works with tables that have a one-to-one relationship if you use a left
outer join. For more information about what data is updatable, search for
"Underlying table or query," then "When is a query updatable?" using the
Microsoft Access Help menu.
<P>
For example, the Categories and Products tables in the sample database
NWIND.MDB have a one-to-many relationship. Each category may appear
several times in the Products table. The Products table contains the
Category ID field, which is the foreign key that identifies the
category for a product.
<P>
When AutoLookup updates records, Microsoft Access automatically
recalculates any totals or expressions that are dependent on the
updated information.
<P>
Microsoft Access version 1.1 has additional online Help topics for
AutoLookup issues. In this context, the term "AutoLookup" is synonymous
with the term "dynamic lookup." For more information, search for "dynamic
lookup", then "Displaying Fields from Another Table or Query (Common
Question)" using the Help menu. In Microsoft Access version 2.0, search for
"AutoLookup."
<P>
The following two examples demonstrate how AutoLookup works:
<P>
<P><h3>Example 1: Create a Query That Uses AutoLookup</h3>
 

<OL><P><LI>Start Microsoft Access and open the sample database NWIND.MDB.

<P><LI>Create a new query. Add the Products and Categories tables.
   Products is the many-side table and Categories is the one-side
   table. The two tables have a many-to-one relationship based on the
   Category ID field (meaning there are many identical Category ID
   values in Products for each unique Category ID value in
   Categories).

<P><LI>Add the following fields from the Products table:
<P>
<P><PRE>      Product ID
      Product Name
      Category ID
</PRE>
<P><LI>Add the following fields from the Categories table:
<P>
<P><PRE>      Category Name
      Description
</PRE>
<P><LI>Save the query as AutoLookup Example.

<P><LI>View the results of the query. To verify that the query performs
   AutoLookup, move to the end of the query and create a new record.
   Enter a valid Category ID value in the Category ID field. Microsoft
   Access will automatically look up the values associated with that
   Category ID value in the Categories table.
<P>
</OL>This process works because the Category ID field located in the query
comes from the many-side table (Products). Microsoft Access performs
AutoLookup on one-side tables when you enter identifying data in the
many-side table. When you enter a valid value in the Products table's
Category ID field, Microsoft Access knows that Category ID is the key
field for the one-side table (Categories), so it looks up the
information from Categories based on the Category ID value and
automatically displays it in the query.
<P>
<P><h3>Example 2: Create a Form That Uses AutoLookup</h3>
 

<OL><P><LI>Create a new form based on the query that you created in Example 1.

<P><LI>Locate the fields from the Products table on "one" side of the form
   and those from the Categories table on the "many" side of the form.

<P><LI>Create a combo box bound to the Category ID field. Set the
   RowSource property to the Categories table. Display a single
   column, [Category ID], in the combo box.

<P><LI>Switch the form to Form view. When you enter new records and select a
   category from the Category ID combo box, all related information
   about that Category is displayed.
<P>
</OL>Note that if you had included the primary key value from the one-side
table (Categories), you would not have been allowed to add new records
to the query or to change the Category ID value. For this reason, you
must drag the Category ID field from the Products table, rather than
from the Categories table.
<P>
<P>
<P><h2>REFERENCES</h2>
 
<P>
Microsoft Access "User's Guide," version 1.0, Chapter 10, "Creating
Forms Based on More than One Table," page 282
<P>
Microsoft Access "User's Guide", version 2.0, Chapter 11, "Designing Select
Queries"
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: how to<BR>
Keywords            : kbusage QryJoin<BR>
Version             : 1.0 1.1 2.0<BR>
Platform            : WINDOWS<BR>
Hardware            : X86<BR>
Issue type          : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  May 8, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
