

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC1x: How to Get SQL Pass-Through Functionality Using Q+E </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q90102 ">
<META NAME="KBModify" CONTENT="1997/06/06">
<META NAME="KBCreate" CONTENT="1992/10/08">
<META NAME="Keywords" CONTENT="IntpDde kbinterop ODBCSPT PgmHowTo QryPass">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  Microsoft Access does not directly support the use of pass-through SQL (the ability to pass SQL commands directly to a server). However, you can use Access Basic to perform dynamic data exchange (DDE) with the Q+E application, which does support pa...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB9,QABM,QBV8,QAY5,QA1S,QDN9,QBVP,QAMA,QAIJ,QAH6,QAI5,QAGB,QAD7,QBWS,QA5F V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC1x: How to Get SQL Pass-Through Functionality Using Q+E</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 6, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q90102 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 1.0, 1.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Microsoft Access does not directly support the use of pass-through SQL
(the ability to pass SQL commands directly to a server). However, you can
use Access Basic to perform dynamic data exchange (DDE) with the Q+E
application, which does support pass-through SQL. Using this method, you
can pass SQL commands to run stored procedures and other SQL commands.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To use Q+E's pass-through SQL capabilities in Microsoft Access, create
the following function in a new or existing module.
<P>
NOTE: In the following sample code, an underscore (_) is used as a
line-continuation character. Remove the underscore from the end of the
line when re-creating this code in Access Basic.
<P>
<PRE>   Function SQLPassThru (SQLCommandText, SQLDatabaseText)
      On Error Resume Next
      Err = 0
      chan = DDEInitiate("QE", "System")
      If Err Then
         Err = 0
         Result = Shell("QE", 2)
         If Err Then
             MsgBox "ERROR: Unable to start Q+E. Q+E must be in your _
                PATH statement", 16, "SQL PassThru"
             Exit Function
         End If
         chan = DDEInitiate("QE", "System")
      End If
      DDEExecute chan, "[LOGON(SQLServer)]"
      DDEExecute chan, "[OPEN('USE " &amp; SQLDatabaseText &amp; "; " &amp; _
         SQLCommandText &amp; "','SQLSERVER')]"
      DDEExecute chan, "[EXIT()]"
      DDETerminate chan
   End Function

</PRE>The SQLPassThru() function initiates a DDE channel with Q+E. If Q+E is
not available, the function attempts to start Q+E. If Q+E cannot be
started, the function displays an error message and ends. If Q+E can be
started, a DDE channel is initiated. The SQLPassThru() function then
directs Q+E to display its Logon dialog box so you can log on to SQL
Server. The SQL USE command is used to ensure that SQLPassThru() is in
the database you specify, and SQLPassThru() runs the SQL command. After
the command is run, SQLPassThru() exits the Q+E application and
terminates the DDE channel that the function established.
<P>
The following demonstrates a sample call to the SQLPassThru() function:
<P>
<PRE>   =SQLPassThru("sp_addlogin Ted, ted","master")

</PRE>In the above example, the SQLPassThru() function will start Q+E and
initiate a DDE channel, if possible. You will then be prompted to log on
to a SQL Server. After you log on, the function will use the master
database on the SQL Server and run the stored procedure sp_addlogin,
which will add a login for a user named Ted with a password of "ted."
After the command runs, the function will exit the Q+E application and
terminate the DDE channel.
<P>
NOTE: You must include quotation marks around both of the parameters to
ensure that they are used properly. You may also have to include
additional quotation marks in the SQL command you are sending to the
SQL Server to ensure that the command is being processed correctly.
For examples of the types of adjustments that you may need to make to
the SQL command string, see the "Q+E for Microsoft Excel User's Guide"
or the application note "A Practical Guide to Using Q+E," which can
be obtained by calling Microsoft Product Support at (425) 454-2030.
<P>
You can modify this function in many different ways, including:

<UL><LI>To accept additional parameters and have additional corresponding
   DDEExecute commands, thereby allowing the execution of multiple SQL
   commands with one function call

<LI>To use as a Sub procedure in which you can hard-code the parameters for
   the command and SQL database in the Access Basic code

<LI>To retrieve information from the SQL server, or send information to
   the SQL server using the DDERequest and DDEPoke commands

<LI>To use in conjunction with a form to allow on-line SQL command
   execution

<LI>To break into multiple functions with different capabilities, such as
   one function to initiate the channel, another function to execute
   the commands, and another function to terminate the channel

<LI>To access database types that Microsoft Access does not support but
   that Q+E does.
<P>
</UL><h2>REFERENCES</h2>
 
<P>
Microsoft Access "Language Reference," version 1.0, pages 115-126
<P>
Microsoft Access "Introduction to Programming," version 1.0, Chapter 2,
pages 1-8
<P>
Microsoft Excel "Q+E for Microsoft Excel User's Guide," version 4.0,
pages 101-102
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : IntpDde kbinterop ODBCSPT PgmHowTo QryPass<BR>
Version             : 1.0 1.1<BR>
Platform            : WINDOWS<BR>
Hardware            : x86<BR>
Issue type          : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 6, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
