

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: TransferSpreadsheet May Not Allow Table Append </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q153812">
<META NAME="KBModify" CONTENT="1997/06/03">
<META NAME="KBCreate" CONTENT="1996/07/18">
<META NAME="Keywords" CONTENT="IsmSetup kb3rdparty kberrmsg kbinterop">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  When you append data to an existing table from a spreadsheet using a TransferSpreadsheet macro action or a TransferSpreadsheet method in Visual Basic for Applications, you may re...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA1S,QAH4,QAUJ,QBVP,QA7O,QA7N,QDN9,QA5V,QAPN,QA5F,QAMA,QAY5,QAPF,QARR,QBXT P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: TransferSpreadsheet May Not Allow Table Append</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 3, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q153812</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 2.0, 7.0, 97
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
When you append data to an existing table from a spreadsheet using a
TransferSpreadsheet macro action or a TransferSpreadsheet method in Visual
Basic for Applications, you may receive the following error message:
<P>
<PRE>   Field 'F1' doesn't exist in destination table '&lt;table&gt;'.
   Microsoft Access was unable to append it.

   The destination table must contain the same fields as
   the table you are pasting from.

</PRE><h2>CAUSE</h2>
 
<P>
The first row of the spreadsheet file does not contain field names;
therefore, Microsoft Access assumes the fields are called "F1," "F2," and
so on.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
You can use one of the following two methods to work around this behavior.
You can import the spreadsheet into a new table and then append that data
in Microsoft Access; or you can change the spreadsheet to include field
names in the first row.
<P>
<P><h3>Method 1</h3>
 

<OL><P><LI>Import the spreadsheet into a new table named tblTemp.

<P><LI>Create an append query to append the data in the tblTemp table to your
   existing table.

<P><LI>Run the append query.

<P><LI>Delete the tblTemp table.
<P>
</OL><h3>Method 2</h3>
 

<OL><P><LI>In Microsoft Excel, insert a new first row in the spreadsheet. In this
   row, add field names that match the field names in the existing
   Microsoft Access table.

<P><LI>In the macro, change the Has Field Names argument to Yes, for example:
<P>
<P><PRE>      Transfer Type: Import
      Spreadsheet Type: &lt;your type&gt;
      Table Name: &lt;table in your database&gt;
      File Name: &lt;name of file, including path&gt;
      Has Field Names: Yes
</PRE>
<P><LI>If you are using code, the HasFieldNames argument should be set to True,
   for example:
<P>
   NOTE: In the following sample code, an underscore (_) at the end of a
   line is used as a line-continuation character. Remove the underscore
   from the end of the line when re-creating this code in Access Basic.
<P>
<P><PRE>      DoCmd.TransferSpreadsheet acImport, _
      &lt;number of type of file to import&gt;, "&lt;table in your database&gt;", _
      "&lt;name of file including path&gt;", True
</PRE><P>
</OL><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 
<P>
NOTE: This example uses the Shippers table from the Northwind sample
database (or NWIND.MDB in version 2.0).

<OL><P><LI>Open Microsoft Excel version 7.0, and create a spreadsheet with the
   following data:
<P>
<PRE>      9     Express      800-123-4567
     10     US Mail      800-569-4568

</PRE><P><LI>Save spreadsheet as c:\test1.xls.

<P><LI>Open the sample database Northwind.mdb (or NWIND.MDB in version 2.0).

<P><LI>Create a macro with the TransferSpreadsheet action, and the following
   values:
<P>
<P><PRE>      Transfer Type: Import
      Spreadsheet Type: Microsoft Excel 5-7
      Table Name: Shippers
      File Name: c:\test1.xls
      Has Field Names: No
</PRE>
<P><LI>Run the macro. Note that you receive the error mentioned in the
   "Symptoms" section.

<P><LI>Create a new module, and enter the following function.
<P>
   NOTE: In the following sample code, an underscore (_) at the end of a
   line is used as a line-continuation character. Remove the underscore
   from the end of the line when re-creating this code in Access Basic.
<P>
<P><PRE>      Function ImportTest()
      DoCmd.TransferSpreadsheet acImport, 5, "Shippers", " c:\test1.xls", _
<PRE></PRE>         False
      End Function

</PRE><P><LI>Open the Debug window (or the Immediate window in version 2.0), type
   the following line, and then press ENTER:
<P>
<P><PRE>     ?ImportTest()
</PRE><P>
   Note that you receive the error mentioned in the "Symptoms" section.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about unexpected behavior with TransferSpreadsheet,
see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../ACCESS/Q147785.htm">Q147785</A></B>
   TITLE     : ACC: Imported MS Excel Spreadsheet May Have Blank Columns
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : IsmSetup kb3rdparty kberrmsg kbinterop<BR>
Version             : 2.0 7.0 97<BR>
Platform            : WINDOWS<BR>
Hardware            : X86<BR>
Issue type          : kbprb<BR>
Resolution Type     : Info_Provided<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 3, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
