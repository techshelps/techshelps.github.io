

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC2: Moving List Box Items from One List Box to Another </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q132137">
<META NAME="KBModify" CONTENT="1997/07/18">
<META NAME="KBCreate" CONTENT="1995/06/29">
<META NAME="Keywords" CONTENT="FmsCmbo kbusage">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  This article describes how you can create a form that has two list boxes that imitate the multiple-selection capability reflected in Microsoft Access Wizards.  This method uses a Yes/No field in the table to indicate which records are selected. One...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVR,QA2Q,QAEF,QAE1,QA7O,QAG2,QBWS,QA5V,QA7N,QBV8,QBXS,QAY5,QAB9,QAMB,QAY2 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC2: Moving List Box Items from One List Box to Another</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q132137</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access version 2.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article describes how you can create a form that has two list boxes
that imitate the multiple-selection capability reflected in Microsoft
Access Wizards.
<P>
This method uses a Yes/No field in the table to indicate which records are
selected. One list box displays the Yes records and the other displays the
No records. To move items from one list box to the other, the Yes/No field
of the selected record is set to the appropriate state and the list boxes
are then requeried to update their respective lists.
<P>
Note that the method provided is suitable for single-user environments
only. If this method is used in a multiuser environment, what one user
does may interfere with the actions of another. See the "References"
section later in this article for more information on a multiuser
technique.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
In addition to the two list boxes, the form also contains three command
buttons. By using the command buttons, you can add items to, or delete
items from the list box. You can also double-click an item in a list box to
move it to the other list box. To create the form, follow these steps:

<OL><P><LI>Open the sample database NWIND.MDB and create the following new table:
<P>
<P><PRE>      Table: Table1
      ---------------------------------------------------
      Field Name: List
<PRE></PRE>         Data Type: Text
         Field Size: 15
         Caption: Items that will be provided in list
      Field Name: Selected
         Data Type: Text
         Field Size: 5
         Caption: Indicates if the item has been selected

      Table Properties: Table1
      ------------------------
      PrimaryKey: List

</PRE><P><LI>View the Table1 table in Datasheet view. Add five records to the table.
   For each record, type any text in the List field (for example, a list
   of colors or cities), and then type "YES" (without quotation marks) in
   the Selected field.

<P><LI>Create the following new query based on the Table1 table and save it as
   Select Yes:
<P>
<P><PRE>      Query: Select Yes
      -------------------------------
      Field: List
<PRE></PRE>         Show: Yes
         Criteria: [selected] = "YES"

</PRE><P><LI>Create another new query based on the Table1 table as follows and save
   it as Select No:
<P>
<P><PRE>      Query: Select No
      ------------------------------
       Field: List
<PRE></PRE>         Show: Yes
         Criteria: [selected] = "NO"

</PRE><P><LI>Create a new blank form and save it as SelectList.

<P><LI>With the SelectList form open in Design view, click Code on the
   View menu, and then type the following line in the form module's
   Declarations section:
<P>
<P><PRE>       Option Explicit
</PRE>
<P><LI>Type the following three functions in the form module:
<P>
<P><PRE>       '=======================================================
       ' The following function opens the table and changes the
       ' selected value from YES to NO, and then runs the
       ' query for the two list boxes so that they will display
       ' the updated values.
       '=======================================================
       Function Add ()
<PRE></PRE>          Dim MyDB As Database
          Dim MyTable As Recordset
          Dim y As Control

          Set y = Me![Field0]

          If IsNull(y) Then
             MsgBox "Please select something in the list."
          Else
             Set MyDB = DBEngine.Workspaces(0).Databases(0)
             Set MyTable = MyDB.OpenRecordset("Table1")

             MyTable.Index = "PrimaryKey"
             MyTable.Seek "=", y

             MyTable.Edit
             MyTable.[Selected] = "no"
             MyTable.Update

             MyTable.Close
             Me![Field0].Requery
             Me![Field2].Requery
          End If
       End Function

       '=======================================================
       ' The following function opens the table and changes the
       ' selected value from NO to YES, and then runs the
       ' query for the two list boxes so that they will display
       ' the updated values.
       '=======================================================

       Function Del ()
          Dim MyDB As Database
          Dim MyTable As Recordset
          Dim y As Control

          Set y = Me![Field2]

          If IsNull(y) Then
             MsgBox "Please select something in the list."
          Else
             Set MyDB = DBEngine.Workspaces(0).Databases(0)
             Set MyTable = MyDB.OpenRecordset("Table1")

             MyTable.Index = "PrimaryKey"
             MyTable.Seek "=", y

             MyTable.Edit
             MyTable.[Selected] = "yes"
             MyTable.Update

             MyTable.Close
             Me![Field0].Requery
             Me![Field2].Requery
          End If
       End Function

       '=======================================================
       ' The following function sets all values in the Selected
       ' field to YES, and then runs the query for the two list
       ' boxes so that they will display the updated values.
       '=======================================================
       Function Clear ()
          Dim MyDB As Database
          Dim MyTable As Recordset

          Set MyDB = DBEngine.Workspaces(0).Databases(0)
          Set MyTable = MyDB.OpenRecordset("Table1")

          On Error GoTo erhandle

          MyTable.MoveFirst
          Do Until MyTable.EOF
            MyTable.Edit
            MyTable.[Selected] = "yes"
             MyTable.Update
              MyTable.MoveNext
          Loop

          MyTable.Close
          Me![Field0].Requery
          Me![Field2].Requery

          erhandle:
             Resume Next

       End Function

</PRE><P><LI>Save and close the form module. Then, add the following list box and
   command button controls to the SelectList form:
<P>
<P><PRE>      List Box:
      -----------------------------
      Name: Field0
<PRE></PRE>         RowSourceType: Table/Query
         RowSource: Select Yes
         OnDblClick: =Add()

      List Box:
      -----------------------------
      Name: Field2
         RowSourceType: Table/Query
         RowSource: Select No
         OnDblClick: =Del()

      Command Button:
      --------------------
      Name: Button One
         Caption: Clear
         OnClick: =Clear()

      Command Button:
      --------------------
      Name: Button Two
         Caption: Add Item
         OnClick: =Add()

      Command Button:
      -----------------------
      Name: Button Three
         Caption: Delete Item
         OnClick: =Del()

</PRE><P><LI>View the SelectList form in Form view. Note that the first list box,
   Field0, displays all the items in Table1 you can select. You can
   use the Clear, Add Item, or Delete Item buttons to add or remove
   items from the second list box, Field2. You can also double-click
   an item in a list box to move it to the other list box.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about how to select more than one item from the
same list box (using an array), see the following article in the Microsoft
Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../ACCESS/Q121356.htm">Q121356</A></B>
   TITLE     : ACC2: How to Create a Multiple-Selection list box
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: combo  fill<BR>
Keywords            : FmsCmbo kbusage<BR>
Version             : 2.0<BR>
Platform            : WINDOWS<BR>
Hardware            : X86<BR>
Issue type          : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
