

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC1x: How to Implement a Timer Within MS Access Applications </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q95924 ">
<META NAME="KBModify" CONTENT="1997/06/08">
<META NAME="KBCreate" CONTENT="1993/03/01">
<META NAME="Keywords" CONTENT="kbprg PgmHowTo PgmOthr">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  There is no timer control built into Microsoft Access version 1.x. To implement a timer, you must create an Access Basic module that creates a timing sequence in your application.  MORE INFORMATION  To create a timer within your Microsoft Access ap...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA1S,QAY5,QBV8,QDN9,QAB9,QATK,QAGB,QAB5,QAXB,QA5F,QAMA,QAIJ,QAH4,QBXS,QBT6 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC1x: How to Implement a Timer Within MS Access Applications</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 8, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q95924 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 1.0, 1.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
There is no timer control built into Microsoft Access version 1.x. To
implement a timer, you must create an Access Basic module that creates a
timing sequence in your application.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To create a timer within your Microsoft Access application, you must
call two functions. One function starts the sequence, and another
function sets a global variable that tells the first function to stop
performing the timing iteration.
<P>
This article assumes you are familiar with Access Basic and with
creating Microsoft Access applications using the programming tools
provided with Microsoft Access. For more information on Access Basic,
please refer to the "Introduction to Programming" manual.
<P>
In the first function, called StartTimer(), you execute an endless
loop that performs the timing update and the DoEvents() function. The
DoEvents() function instructs the Access Basic function to release the
computer's CPU to other tasks, such as your form, other applications
within Microsoft Windows, and most importantly the StopTimer()
function. The StopTimer() function sets the global variable that the
StartTimer() function checks to determine when to stop looping.
<P>
To create an example, follow the instructions below. Once these are
done, open the form in Browse mode and press the Start Timer button.
You should see the timing being performed by the updating in the text
box. At any point you can stop the timing sequence by pressing the
Stop Timer button.

<OL><P><LI>Create the following controls on a form and set the appropriate
   properties:
<P>
<P><PRE>      Form: Form1
      ------------------------
      Control: Text Box
<PRE></PRE>         ControlName: Field0
      Control: Command Button
         Caption: Start Timer
         OnPush: =StartTimer()
      Control: Command Button
         Caption: Stop Timer
         OnPush: =StopTimer()

</PRE><P><LI>Create a new module and add the following code:
<P>
<P><PRE>      '---------------------------------------
      'GLOBAL DECLARATIONS SECTION
      '---------------------------------------
      Option Explicit
<PRE></PRE>      Dim StopTheTimer     'if set to TRUE, then exit StartTimer()
      Const INTERVAL = 1   'determine how often in seconds to update
                           'the screen

      '---------------------------------------------------
      'This function will start the timer, update
      'the display with the correct time unit,
      'and look to see if the StopTheTimer is
      'set to TRUE so as to determine when to
      'stop the process.
      '---------------------------------------------------
      Function StartTimer ()
         Static InHere  'stop re-entrant code
         Dim iLast, iNow, x%

         'this stops the user from pressing the command button
         'and re-entering this code again if it is already
         'running.
         If InHere = True Then Exit Function

         iLast = Timer
         Do
            'StopTheTimer is set in StopTimer()
            If StopTheTimer = True Then
               StopTheTimer = False
               Exit Function
            End If

            iNow = Timer

            'need to update display only if the interval
            'has been exceeded.
            If (iNow - iLast) &gt; INTERVAL Then
               Forms!Form1!Field0 = iNow
               iLast = iNow
            End If

            'release the CPU to other tasks, namely enable
            'the user to enter the StopTimer() function.
            x% = DoEvents()

         Loop
      End Function

      '---------------------------------------------------
      'This function will set the flag to let StartTimer()
      'stop execution.
      '---------------------------------------------------
      Function StopTimer ()
         StopTheTimer = True
      End Function
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : kbprg PgmHowTo PgmOthr<BR>
Version             : 1.0 1.1<BR>
Platform            : WINDOWS<BR>
Hardware            : X86<BR>
Issue type          : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 8, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
