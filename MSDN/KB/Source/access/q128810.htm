

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC2: Sample Function for Retrieving File Version Information </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q128810">
<META NAME="KBModify" CONTENT="1997/06/08">
<META NAME="KBCreate" CONTENT="1995/04/11">
<META NAME="Keywords" CONTENT="kbprg PgmApi">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  This article contains a sample user-defined Access Basic function you can use to check the file version information stored within most files.  This article assumes that you ...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA1S,QDN9,QAY5,QAH4,QAB9,QBE7,QBE6,QAMA,QBV8,QA2S,QA5F,QABH,QABI,QAPF,QDL9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC2: Sample Function for Retrieving File Version Information</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 8, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q128810</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access version 2.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
This article contains a sample user-defined Access Basic function you can
use to check the file version information stored within most files.
<P>
This article assumes that you are familiar with Access Basic and with
creating Microsoft Access applications using the programming tools provided
with Microsoft Access. For more information on Access Basic, please refer
to the "Building Applications" manual.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Most files used by Windows-based applications contain a version stamp. You
cannot check this version stamp within Microsoft Access, but you can check
it by using Windows API calls within Access Basic.
<P>
The following example demonstrates a sample user-defined function that you
can use to check the version number (if available) of a file.
<P>
NOTE: You may have some Microsoft Windows API functions defined in an
existing Microsoft Access library; therefore, your declarations may be
duplicates. If you receive a duplicate procedure name error message, remove
or comment out the declarations statement in your code.
<P>
NOTE: In the following sample code, an underscore (_) at the end of a line
is used as a line-continuation character. Remove the underscore from the
end of the line when recreating this code.

<OL><P><LI>Open the sample database NWIND.MDB.

<P><LI>Create a new module and add the following code to the Declarations
   section:
<P>
<P><PRE>      Type FileInfo
<PRE></PRE>         wLength            As Integer
         wValueLength       As Integer
         szKey              As String * 16
         dwSignature        As Long
         dwStrucVersion     As Long
         dwFileVersionMS    As Long
         dwFileVersionLS    As Long
      End Type

      Declare Function GetFileVersionInfo% Lib "Ver.dll" (ByVal FileName$,_
           ByVal dwHandle&amp;, ByVal cbBuff&amp;, ByVal lpvData$)
      Declare Function GetFileVersionInfoSize&amp; Lib "Ver.dll" (ByVal_
           FileName$, dwHandle&amp;)
      Declare Sub hmemcpy Lib "kernel" (hpvDest As Any, hpvSrc As Any,_
           ByVal cbBytes&amp;)

</PRE><P><LI>Add the following two functions in the module:
<P>
<P><PRE>      Function LOWORD (x As Long) As Integer
<PRE></PRE>         LOWORD = x And &amp;HFFFF&amp;
         'Low 16 bits contain Minor revision number.
      End Function

      Function HIWORD (x As Long) As Integer
         HIWORD = x \ &amp;HFFFF&amp;
         'High 16 bits contain Major revision number.
      End Function

</PRE><P><LI>Save the module and create a new form.

<P><LI>Add a text box called Fname to the form.

<P><LI>Add a command button to the form, and add the following code to the
   command button's OnClick event procedure:
<P>
<P><PRE>      Dim x As FileInfo
      Dim FileVer As String
      Dim FileName As String
</PRE><P>
<P><PRE>      '*** Get Version Information If Available ****
      FileVer = ""
      FileName = Me![FName]
      BufSize&amp; = GetFileVersionInfoSize(FileName, dwHandle&amp;)
      If BufSize&amp; = 0 Then
<PRE></PRE>         MsgBox "Invalid File Name or no Version information available"
         Exit Sub
      End If
      lpvData$ = Space$(BufSize&amp;)
      r% = GetFileVersionInfo(FileName, dwHandle&amp;, BufSize&amp;, lpvData$)
      hmemcpy x, ByVal lpvData$, Len(x)

      '**** Parse File Version Number ****
      FileVer = Trim$(Str$(HIWORD(x.dwFileVersionMS))) + "."
      FileVer = FileVer + Trim$(Str$(LOWORD(x.dwFileVersionMS))) + "."
      FileVer = FileVer + Trim$(Str$(HIWORD(x.dwFileVersionLS))) + "."
      FileVer = FileVer + Trim$(Str$(LOWORD(x.dwFileVersionLS)))

      MsgBox FileVer, 64, "Version of " &amp; FileName

</PRE><P><LI>To use the function, view the form in Form view and type a valid path
   and filename in the Fname text box. The following lines are examples of
   valid paths and filenames:
<P>
<P><PRE>      C:\WINDOWS\SYSTEM\USER.EXE
      C:\ACCESS\MSACCESS.EXE
</PRE>
<P><LI>Choose the command button to see the version displayed in a message box.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about using Windows API calls, please see the "Visual
Basic Programmer's Guide to the Windows API," pages 572-575.
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : kbprg PgmApi<BR>
Version             : 2.0<BR>
Platform            : WINDOWS<BR>
Hardware            : X86<BR>
Issue type          : kbinfo<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 8, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
