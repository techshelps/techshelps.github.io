

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC95: Using FindFirst Method to Find a GUID Generates an Error </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q155194">
<META NAME="KBModify" CONTENT="1997/05/30">
<META NAME="KBCreate" CONTENT="1996/08/23">
<META NAME="Keywords" CONTENT="FmsCmbo kbusage">
<META NAME="KBArea" CONTENT="Support; KB; access, convert, crossnet, dbweb, odbc, winprint, setup, vbapp, office, officevba">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  When you use the FindFirst method of a recordset to find a globally unique identifier (GUID), you may receive one of the following error messages:     Malformed GUID in expressio...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QAKD,QA5V,QAB4,QATX,QA1S,QAUR,QBWS,QAKC,QBV3,QAB9,QAPF,QAH4,QADK,QAHP V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC95: Using FindFirst Method to Find a GUID Generates an Error</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  May 30, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q155194</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access version 7.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
When you use the FindFirst method of a recordset to find a globally unique
identifier (GUID), you may receive one of the following error messages:
<P>
<PRE>   Malformed GUID in expression

   -or-

   GUID not allowed in Find method criteria expression

</PRE>If you use the Combo Box Wizard on a form to create a combo box that finds
a record based on a replication ID value, you may also receive this error.
This is because the wizard generates Visual Basic for Applications code
that uses the FindFirst method.
<P>
<P><h2>CAUSE</h2>
 
<P>
A GUID is a 16-byte array. In table Datasheet view, a GUID appears as a
string of hexadecimal numbers enclosed in braces. The value of an
unbound combo box whose bound column is a GUID will be a string of
hexadecimal numbers enclosed by braces. The FindFirst method will not be
able to find a record with a GUID equal to that string.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Create an AfterUpdate event procedure that moves through the form's
recordsetclone to find the record with the GUID that matches the value in
the combo box. Set the bookmark of the form to the bookmark of the
recordsetclone.
<P>
The following example shows you how to find a record on a form using a
combo box whose bound column is a GUID:

<OL><P><LI>Open the sample database Northwind.mdb.

<P><LI>Copy the Employees table and paste it as Employees1.

<P><LI>Open the Employees1 table in Design view.

<P><LI>Change the EmployeeID Field Size property to Replication ID and save the
   table.

<P><LI>Create a new form based on the Employees1 table using the AutoForm:
   Columnar wizard. Save the form as Employees1.

<P><LI>Open the Employees1 form in Design view.

<P><LI>Create an unbound combo box on the form with the following properties:
<P>
<P><PRE>    Combo box:  GUIDFind
    ---------------------
    Name: GUIDFind
    RowSource: Employees1
    ColumnCount: 2
    ColumnWidths: 0";1"
</PRE>
<P><LI>Set the AfterUpdate property of the combo box to the following event
   procedure:
<P>
<P><PRE>      Private Sub GUIDFind_AfterUpdate()
<PRE></PRE>         Dim rs as Recordset
         Dim findguid as String
         findguid = "{guid " &amp; Me!GUIDFind &amp; "}"
         Set rs = Me.RecordsetClone
         rs.MoveFirst
         Do Until rs.EOF
            If rs!EmployeeID = findguid Then
               Me.Bookmark = rs.Bookmark
               Exit Sub
            End If
            rs.MoveNext
         Loop
      End Sub

</PRE><P><LI>Open the form in Form view. Select a value from the combo box and
   notice that the form displays the correct record.
<P>
</OL><h2>MORE INFORMATION</h2>
 
<P>
Another way to represent a GUID is to convert it to a string using the
StringFromGUID() function.
<P>
For example, if you print the value of a text box bound to a GUID in the
Debug Window, you see a series of question marks because Microsoft Access
7.0 cannot display the 16-byte array. However, if you convert the value
with the StringFromGUID() function, you see a string of hex numbers
preceded by the word guid and enclosed by another set of curly braces. For
example:
<P>
<PRE>   debug.print StringFromGUID(Forms!formname!textboxname)

</PRE></OL>displays something like this:
<P>
<PRE>   {guid {3B9B63A3-863D-11CF-8CAE-00AA00C0016B}}

</PRE>The FindFirst method also does not work with strings like this. You cannot
use the StringFromGUID() function with an unbound combo box value because
the value is already a string expression. If you concatenate "{guid " to
the beginning of the combo box value and you concatenate "}" to the end of
the value, then you receive the following error message when you use the
FindFirst method:
<P>
<PRE>   GUID not allowed in Find method criteria expression

</PRE>You must use an AfterUpdate event procedure as described earlier.
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 

<OL><P><LI>Open the sample database Northwind.mdb.

<P><LI>Copy the Employees table and paste it as Employees1.

<P><LI>Open the Employees1 table in Design view.

<P><LI>Change the EmployeeID Field Size property to Replication ID and save
    the table.

<P><LI>Create a new form based on the Employees1 table using the AutoForm:
    Columnar wizard. Save the form as Employees1.

<P><LI>Open the Employees1 form in Design view.

<P><LI>Use the Combo Box Wizard to create a combo box on the form.

<P><LI>In the How do you want the combo box to get its values? dialog box,
    click Find a record on my form based on the value I selected in my
    combo box, then click Next.

<P><LI>In the Which fields contain the values you want included in your combo
    box? dialog box, add EmployeeID and LastName to the Selected Fields
    column, then click Next.

<P><LI>In the How wide would you like the columns in your combo box? dialog
    box, click Finish.

<P><LI>Switch to Form view and select a value from the combo box list. You
    receive the following error:
<P>
       Malformed GUID in expression
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about globally unique identifiers, search for "GUIDs,"
using the Microsoft Access 7.0 Help Index.
<P>
For more information about the StringFromGUID function, see the section
called "Referring to a Replication ID Field in Code" in the Acreadme.txt
file, which is located in the Microsoft Access 7.0 program folder.
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : FmsCmbo kbusage<BR>
Version             : 7.0<BR>
Platform            : WINDOWS<BR>
Hardware            : X86<BR>
Issue type          : kbprb<BR>
Resolution Type     : kbcode<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  May 30, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
