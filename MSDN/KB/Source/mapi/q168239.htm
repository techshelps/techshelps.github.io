

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Debugging a Transport Provider with Visual C++ </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q168239">
<META NAME="KBModify" CONTENT="1997/07/25">
<META NAME="KBCreate" CONTENT="1997/05/08">
<META NAME="Keywords" CONTENT="EDKAPI EMAPI MAPIIXP">
<META NAME="KBArea" CONTENT="Support; KB; mapi">
<META NAME="Description" CONTENT="  When trying to write a transport provider using MAPI, it may become necessary to trace the code in the provider. The following article outlines the steps necessary to accomplish this.  MORE INFORMATION  The reason debugging a transport seems diffic...">
<META NAME="Product" CONTENT="mapi">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QASC,QAH6,QBWS,QAVX,QAIJ,QBWB,QASR,QAIB,QABI,QAYC,QARL,QDMW,QDIV,QBXT V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Debugging a Transport Provider with Visual C++</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 25, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q168239</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Extended Messaging Application Programming Interface (MAPI), version
   1.0
<LI>Exchange Development Kit (EDK)
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
When trying to write a transport provider using MAPI, it may become
necessary to trace the code in the provider. The following article outlines
the steps necessary to accomplish this.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The reason debugging a transport seems difficult is because MAPISP32 loads
the transports. Most users try to associate the mail client as the
executable to run. The following steps allow you to debug a transport and
step through its code line by line:

<OL><P><LI>Close all instances of Mapisp32.exe.

<P><LI>Set a breakpoint within the code for the transport.

<P><LI>Go to the settings for the project and select the Debug Tab.  On the
   Debug Property Page, type Mapisp32.exe for the Executable for debug
   session.

<P><LI>Press F5 (Debug-Go) to start the debugger.

<P><LI>Start the mail client and select the profile that uses the transport.
<P>
</OL>When the spooler invokes the transport, you should be able to step through
your code. It is important to make sure Mapisp32.exe is not already running
when the debug session is started. If Mapisp32.exe is already running, the
client will use the already running spooler and your code will not be
shown.
 
<PRE>Keywords          : EDKAPI EMAPI MAPIIXP
Version           : 1.0
Platform          : WINDOWS
Issue type        : kbhowto
Solution Type     : kbservicepack</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 25, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
