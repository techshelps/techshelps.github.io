

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Embedding a Document in a Message using Active Messaging </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q169031">
<META NAME="KBModify" CONTENT="1997/11/21">
<META NAME="KBCreate" CONTENT="1997/05/23">
<META NAME="Keywords" CONTENT="kbcode ActMsg OLEMSG">
<META NAME="KBArea" CONTENT="Support; KB; mapi">
<META NAME="Description" CONTENT="  Using Active Messaging, it is possible to embed a file in a message so that the contents of the file are viewed when the message is opened--for example, embedding a bitmap into the message so that the actual bitmap appears when you open the message...">
<META NAME="Product" CONTENT="mapi">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QAEV,QAYC,QAW6,QA5T,QBXS,QBBI,QAV5,QBS0,QAGI,QA9Q,QA6A,QAK6,QA62,QAP2 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Embedding a Document in a Message using Active Messaging</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 21, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q169031</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Collaboration Data Objects (CDO), versions 1.0, 1.1
<LI>Microsoft Visual Basic Enterprise Edition for Windows, versions 4.0,
   5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Using Active Messaging, it is possible to embed a file in a message so that
the contents of the file are viewed when the message is opened--for
example, embedding a bitmap into the message so that the actual bitmap
appears when you open the message.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The code provided is a sample of performing this task in Microsoft Visual
Basic.
<P>
<P><h3>Steps to Embed a File in a Message</h3>
 

<OL><P><LI>Create a MAPI Session object and call the Logon method:
<P>
<P><PRE>      Dim oSession As Object
      Set oSession = CreateObject("MAPI.Session")
      oSession.Logon
</PRE>
<P><LI>Create a Message and Attachment object:
<P>
<P><PRE>      Dim oMessage As Object
      Set oMessage = oSession.Outbox.Messages.Add
</PRE><P>
<P><PRE>      Dim oAttachment As Object
      Set oAttachment = oMessage.Attachments.Add
      If oAttachment Is Nothing Then
<PRE></PRE>         MsgBox "Unable to create new Attachment object"
         Stop
      End If
      'Specify where to place the attachment in the message
      oAttachment.Position = 1

</PRE><P><LI>Set the Type property of the Attachment to indicate an OLE object:
<P>
<P><PRE>      ' Active Messaging 1.0
      oAttachment.Type = mapiOle
</PRE><P>
<P><PRE>      ' Active Messaging 1.1
      oAttachment.Type = ActMsgOle
</PRE>
<P><LI>Set the Source property of the Attachment to the class of the OLE
   object:
<P>
<P><PRE>      oAttachment.Source = "Paint.Picture"
</PRE>
<P><LI>Use the ReadFromFile method of the Attachment to load the contents of
   the file for the OLE object and the Update method of the Message to save
   both the Attachment and the message:
<P>
<P><PRE>      oAttachment.ReadFromFile "c:\test.bmp"
      oMessage.Update
</PRE>
<P><LI>Send the Message:
<P>
<P><PRE>      'Goto the next line if an error occurs on the Send (usually
      'caused by the user cancelling the message)
      On Error Resume Next
</PRE><P>
<P><PRE>      'Set ShowDialog to True because we have not set
      'the Recipient for the message
      oMessage.Send ShowDialog:=True
</PRE>
<P><LI>Call the Logoff method of the session:
<P>
<P><PRE>      oSession.Logoff
</PRE><P>
</OL><h3>Other Types of Message Attachments</h3>
 
<P>
Below are the four types of attachments that may be specified for a message
and the corresponding Active Messaging 1.1 constants used when assigning
the Type property of the attachment:

<UL><LI>The contents of a file (you see an icon in the message representing
   the data in the file), ActMsgFileData
<LI>A link to a file (usually on a file server), ActMsgFileLink
<LI>An OLE object (example above), ActMsgOLE
<LI>An embedded message, ActMsgEmbeddedMessage
<P>
</UL>The return value or setting of the Source property depends on the value of
the Type property, as described in the following table:
<P>
<PRE>   Type property            Source property
   ----------------         ---------------------------------------------
   ActMsgFileData           Not used. The source for this type of
                            attachment must be specified in the call to the
                            Add method or later with the ReadFromFile
                            method.

   ActMsgFileLink           Specifies a full path name in a universal
                            naming convention (UNC) format, such as
                            \\Sales\Info\Product\News.doc.

   ActMsgOLE                Specifies the registered OLE class name of the
                            attachment, such as Word.Document or
                            PowerPoint.Show. The actual file contents would
                            be loaded with the ReadFromFile method.

   ActMsgEmbeddedMessage    Specifies the unique identifier of the message
                            to be embedded; returns the embedded Message
                            object.

</PRE></OL><h2>REFERENCES</h2>
 
<P>
For additional information about Collaboration Data Objects versus Active
Messaging, please see the following article in the Microsoft Knowledge
Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../MAPI/Q176916.htm">Q176916</A></B>
   TITLE     : INFO: Active Messaging and Collaboration Data Objects (CDO)

</PRE>Microsoft Developer Network, Platform SDK, "Source Property (Attachment
Object)"
 
<PRE>Keywords          : kbcode ActMsg OLEMSG
Technology        : kbole
Version           : 1.0 1.1 4.0 5.0
Platform          : WINDOWS
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 21, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
