

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Use VB with Active Messaging to Add a New Folder </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q173056">
<META NAME="KBModify" CONTENT="1997/11/21">
<META NAME="KBCreate" CONTENT="1997/08/25">
<META NAME="Keywords" CONTENT="ActMsg">
<META NAME="KBArea" CONTENT="Support; KB; mapi">
<META NAME="Description" CONTENT="  This article describes how to use the Active Messaging library to add a new folder below an existing folder in a MessageStore.  MORE INFORMATION  This Visual Basic code sample assumes a reference to the Active Messaging Library version 1.1 (OLEMSG3...">
<META NAME="Product" CONTENT="mapi">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAFI,QBXS,QAPN,QANF,QAV5,QBS0,QA62,QAYC,QAH4,QBHQ,QAYY,QAVX,QAVW,QABH,QAD7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Use VB with Active Messaging to Add a New Folder</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 21, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q173056</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Collaboration Data Objects (CDO), version 1.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article describes how to use the Active Messaging library to add a new
folder below an existing folder in a MessageStore.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
This Visual Basic code sample assumes a reference to the Active Messaging
Library version 1.1 (OLEMSG32.DLL). For additional information on where to
obtain this library, please see the following article in the Microsoft
Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../MAPI/Q171440.htm">Q171440</A></B>
   TITLE     : INFO: Where to Acquire the Active Messaging Libraries

</PRE><h3>Sample Code</h3>
 
<P>
Paste the following code into a new Visual Basic Form:
<P>
<PRE>    Dim objSession As MAPI.Session
    Dim objMsgColl As Messages
    Dim objInfoStColl As InfoStores
    Dim objInfoStore As InfoStore
    Dim objRootFolder As Folder
    Dim objCurFolder As Folder
    Dim objFoldersColl As Folders
    Dim objNewFolder As Folder

    Private Sub Form_Load()
       '1. Create and Logon to a MAPI.Session
       '------------------------------------------------------------
       Set objSession = CreateObject("mapi.session")
       objSession.Logon "YourProfileNameHere"

       '------------------------------------------------------------
       '2. Move through Folders Coll to where you will add a new Folder
       'Get your InfoStore Collection
       Set objInfoStColl = objSession.InfoStores

       'Choose one of three methods to select the desired InfoStore here.
       '  1. Pass the explicit .Name of your InfoStore as a parameter.
       '  2. Enforce a fixed naming convention on the InfoStore and check
       '     the .Name property against it. The Exchange default is
       '     "Mailbox - " with the users displayname concatenated onto
       '     the end. This method is used below.
       '  3. Check the .Name of the RootFolder of the InfoStore. These
       '     should be unique to the type of the InfoStore and is not
       '     available to the user to modify.
       Set objInfoStore = objInfoStColl.Item("Mailbox - My DisplayName")

       'Get the Root Folder of your InfoStore
       Set objRootFolder = objInfoStore.RootFolder
       Set objFoldersColl = objRootFolder.Folders

       'Determine how many subfolders there are, and find your candidate
       'new parent Folder. This sample looks for "Temp" and will add
       '"Test" as a child folder of "Temp". "Temp" must exist before this
       'will run successfully.
       cntFolders = objRootFolder.Folders.Count
       incCurFold = 1
       Set objCurFolder = objFoldersColl.GetFirst
       Do While objCurFolder.Name &lt;&gt; "Temp"  'Temp = Cand new parent Folder
          Set objCurFolder = objFoldersColl.GetNext
          incCurFold = incCurFold + 1
          If incCurFold = cntFolders And objCurFolder.Name &lt;&gt; "Temp" Then
             MsgBox "The candidate parent folder wasn't found." &amp; vbCrLf _
                  &amp; "Handle error appropriate to your app."
             Exit Do
          End If
       Loop

       '------------------------------------------------------------
       '3. - Add a new Folder below the current Folder
       'Assume objCurFolder is the new candidate parent Folder
       'Note - Any action other than an Add will require an .Update
       'before changes take effect.
       Set objNewFolder = objCurFolder.Folders.Add("Test")

       'Clean up and bail out
       objSession.Logoff
       Set objSession = Nothing
       Set objMsgColl = Nothing
       Set objInfoStColl = Nothing
       Set objInfoStore = Nothing
       Set objRootFolder = Nothing
       Set objCurFolder = Nothing
       Set objFoldersColl = Nothing
       Set objNewFolder = Nothing

       Unload Me

   End Sub

</PRE>Please note that if you are attempting to add a Folder to the Public
Folders tree, you must have "Create Subfolder" rights on the Folder within
which you are attempting create the new folder.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For additional information about Collaboration Data Objects versus Active
Messaging, please see the following article in the Microsoft Knowledge
Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../MAPI/Q176916.htm">Q176916</A></B>
   TITLE     : INFO: Active Messaging and Collaboration Data Objects (CDO)
</PRE> 
<PRE>Keywords          : ActMsg
Version           : WINDOWS:1.1
Platform          : WINDOWS
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 21, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
