

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Creating a One-Off Address </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q170319">
<META NAME="KBModify" CONTENT="1997/06/18">
<META NAME="KBCreate" CONTENT="1997/06/18">
<META NAME="Keywords" CONTENT="EMAPI kbcode MAPIIAB">
<META NAME="KBArea" CONTENT="Support; KB; mapi">
<META NAME="Description" CONTENT="  This article explains how to programmatically call the CreateOneOff method of the IAddrBook::IMAPIProp interface and attach the newly created address to an existing message object.  MORE INFORMATION  Most address book providers support the ability ...">
<META NAME="Product" CONTENT="mapi">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAI4,QAR2,QAGB,QAC2,QAYC,QAPN,QAH4,QAGI,QAR5,QBW6,QBWD,QA5E,QAUJ,QAL7,QAJ6 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Creating a One-Off Address</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q170319</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Extended Messaging Application Programming Interface (MAPI), version 1.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article explains how to programmatically call the CreateOneOff method
of the IAddrBook::IMAPIProp interface and attach the newly created address
to an existing message object.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Most address book providers support the ability to create temporary e-mail
addresses so that users can send mail to a one-time recipient or to
recipients that do not appear in a read-only list or a Global Address List.
<P>
Messaging Application Programming Interface (MAPI) clients that want to
facilitate this feature should follow these steps and use similar code to
incorporate this feature. (NOTE: The following code segments assume an
existing connection to a MAPI session exists):
<P>
<PRE>    HRESULT TestAddress(LPMESSAGE pMsg)
    {
        HRESULT     hRes   = S_OK;      // Status code of MAPI calls
        LPADRLIST   pAdrList   = NULL;  // ModifyRecips takes LPADRLIST

        // Allocate memory for new SRowSet structure.
        hRes = MAPIAllocateBuffer(CbNewSRowSet(1),(LPVOID*) &amp;pAdrList)

        // If memory allocation fails, quit.
        if ( FAILED ( hres ) )
            goto Quit;

        // Zero out allocated memory.
        ZeroMemory ( pAdrList, CbNewSRowSet(1));

        // Allocate memory for SPropValue structure that indicates what
        // recipient properties will be set. NUM_RECIP_PROPS == 5.
        hRes = MAPIAllocateBuffer(NUM_RECIP_PROPS * sizeof(SPropValue),
                       (LPVOID*) &amp;(pAdrList-&gt;aEntries[0].rgPropVals);

        // If memory allocation fails, quit.
        if ( FAILED ( hRes ) )
            goto Quit;

        // Zero out allocated memory.
        ZeroMemory ( pAdrList -&gt; aEntries[0].rgPropVals,
                     NUM_RECIP_PROPS * sizeof(SPropValue) );

        // Setup the One Time recipient by indicating how many recipients
        // and how many properties will be set on each recipient.

        pAdrList-&gt;cEntries = 1;   // How many recipients.
        pAdrList-&gt;aEntries[0].cValues    = 5;  // How many properties
                                               // per recipient

        // Set the SPropValue members == the desired values.
        pAdrList-&gt;aEntries[0].rgPropVals[NAME].ulPropTag = PR_DISPLAY_NAME;
        pAdrList-&gt;aEntries[0].rgPropVals[NAME].lpszA =  "&lt;Display Name&gt;";

        pAdrList-&gt;aEntries[0].rgPropVals[ADDR].ulPropTag = PR_ADDRTYPE;
        pAdrList-&gt;aEntries[0].rgPropVals[ADDR].lpszA =  "SMTP";

        pAdrList-&gt;aEntries[0].rgPropVals[EMAIL].ulPropTag=PR_EMAIL_ADDRESS;
        pAdrList-&gt;aEntries[0].rgPropVals[EMAIL].lpszA = "&lt;email address&gt;";

        pAdrList-&gt;aEntries[0].rgPropVals[RECIP].ulPropTag=R_RECIPIENT_TYPE;
        pAdrList-&gt;aEntries[0].rgPropVals[RECIP].Value.l = MAPI_TO;

        pAdrList-&gt;aEntries[0].rgPropVals[EID].ulPropTag = PR_ENTRYID;

        // Create the One-off address and get an EID for it.
        hRes = m_pAddrBook-&gt;CreateOneOff(
                 pAdrList-&gt; aEntries[0].rgPropVals[NAME].Value.lpszA,
                 pAdrList-&gt; aEntries[0].rgPropVals[ADDR].Value.lpszA,
                 pAdrList-&gt; aEntries[0].rgPropVals[EMAIL].Value.lpszA,
                 0,
                 &amp;(pAdrList-&gt;aEntries[0].rgPropVals[EID].Value.bin.cb),
                 (LPENTRYID *)
                 (&amp;pAdrList-&gt;aEntries[0].rgPropVals[EID].Value.bin.lpb));

        // If the call to CreateOneOff fails, quit.
        if ( FAILED ( hRes ) )
            goto Quit;

        // Attempt to resolve the new address list. If the attempt fails,
        // quit.
        if ( FAILED ( hRes = m_pAddrBook -&gt; ResolveName ( 0L,
                                                          0L,
                                                          NULL,
                                                          pAdrList ) ) )
            goto Quit;

        // If everything goes right, add the new recipient to the message
        // object passed into us.
        hRes = pMsg-&gt;ModifyRecipients(MODRECIP_ADD,pAdrList);

    Quit:
        // Always release any newly created objects and allocated memory.
        FreePadrlist(pAdrList);

        return hRes;
    }

 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : EMAPI kbcode MAPIIAB<BR>
Version             : WINDOWS:1.0<BR>
Platform            : WINDOWS<BR>
Issue type          : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
