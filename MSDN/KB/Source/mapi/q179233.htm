

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: GetDefaultFolder Method of CDO Session Fails with VARIANT </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q179233">
<META NAME="KBModify" CONTENT="1998/01/13">
<META NAME="KBCreate" CONTENT="1998/01/13">
<META NAME="Keywords" CONTENT="kbcode cdo">
<META NAME="KBArea" CONTENT="Support; KB; mapi">
<META NAME="Description" CONTENT="  When writing a C++ program that uses the Collaboration Data Objects (CDO) library, the reference to a pointer to a folder declared as a VARIANT data type causes a system error in the program. The error that occurs is:     Unhandled Exception: Privi...">
<META NAME="Product" CONTENT="mapi">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAG1,QAYL,QASR,QAPN,QAH4,QAM9,QALX,QAKP,QAP2,QAO3,QAO2,QALZ,QAAP,QAYY,QDL9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: GetDefaultFolder Method of CDO Session Fails with VARIANT</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 13, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q179233</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Collaboration Data Objects (CDO), version 1.2
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When writing a C++ program that uses the Collaboration Data Objects (CDO)
library, the reference to a pointer to a folder declared as a VARIANT data
type causes a system error in the program. The error that occurs is:
<P>
<PRE>   Unhandled Exception: Privileged Instruction.

</PRE><h2>CAUSE</h2>
 
<P>
The GetDefaultFolder method returns a value of type variant_t on the stack.
This is copied to the VARIANT variable. The default constructor of the
VARIANT does not increment the reference counter for the dispval member so
that when the temporary variant_t is destroyed, dispatch member of the
VARIANT is no longer valid.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Declare the variable that holds the result of the GetDefaultFolder method
as variant_t rather than VARIANT. The constructor of the variant_t
increments the reference counter for the resulting folder pointer, so that
the dispatch member remains valid.
<P>
For example, in the code sample below, the variable vtFolder should be
declared as type variant_t not as type VARIANT.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft is researching this problem and will post new information here in
the Microsoft Knowledge Base as it becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 
<P>
The following portion of code illustrates the problem:
<P>
<PRE>   //----------------------------------------------------
   #import "cdo.dll"

    try {
         VARIANT vtCalendar;

         VARIANT vtFolder;  // To Correct Problem: Remark this line and
         //variant_t vtFolder; // un-remark this line.

         _SessionPtr pSession("MAPI.Session");
         pSession-&gt;Logon();

         vtCalendar.vt = VT_I4;
         vtCalendar.lVal = CdoDefaultFolderCalendar;

         vtFolder = pSession-&gt;GetDefaultFolder(vtCalendar);

         // The problem occurs in the "smart-pointer" FolderPtr
         // constructor that attempts to call QueryInterface
         // on the IDispatch pointer.
         FolderPtr pFolder = vtFolder.pdispVal;

         pSession-&gt;Logoff();

      } catch(_com_error e) {
          ....
    }
    //----------------------------------------------------

</PRE> 
<PRE>Keywords          : kbcode cdo
Version           : WINDOWS:1.2
Platform          : WINDOWS
Issue type        : kbprb</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 13, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
