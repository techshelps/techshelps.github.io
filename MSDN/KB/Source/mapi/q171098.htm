

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Sending a Message via Active Messaging with VC++ </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q171098">
<META NAME="KBModify" CONTENT="1998/03/02">
<META NAME="KBCreate" CONTENT="1997/07/08">
<META NAME="Keywords" CONTENT="kbcode ActMsg OLEMSG">
<META NAME="KBArea" CONTENT="Support; KB; mapi">
<META NAME="Description" CONTENT="  This article gives sample code written in Visual C++ that may be used to send a message with Active Messaging. This sample is based on the code provided with the Microsoft Visual C++ 5.0 COMMAIL sample project.  MORE INFORMATION  Before compiling a...">
<META NAME="Product" CONTENT="mapi">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBSO,QAYC,QAEV,QAV5,QAH6,QAH4,QBWP,QAO3,QAO2,QAPN,QBWQ,QA6A,QAMB,QA62,QAR2 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Sending a Message via Active Messaging with VC++</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 2, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q171098</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Collaboration Data Objects (CDO), versions 1.0, 1.0a, 1.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article gives sample code written in Visual C++ that may be used to
send a message with Active Messaging. This sample is based on the code
provided with the Microsoft Visual C++ 5.0 COMMAIL sample project.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Before compiling and running the following code, be sure to follow the
instructions given wherever the text "TO DO:" is found.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   /**********************************************************/
   // COMMAIL.CPP
   // This program sends a message with an attachment
   /**********************************************************/

   // TO DO: If you are using Active Messaging 1.0 or 1.0a,
   // unremark the following line:
   //#import &lt;mdisp32.tlb&gt; no_namespace
   // mdisp32.tlb is in \winnt\system32 on Windows NT or
   // \Win95\System directory on Windows 95 when Exchange is installed.

   // TO DO: If you are using Active Messaging 1.1,
   // unremark the following line:
   //#import &lt;olemsg32.dll&gt; no_namespace
   // olemsg32.dll is in \winnt\system32 on Windows NT or
   // \Win95\System directory on Windows 95 when Exchange is installed.

   #include &lt;stdio.h&gt;
   #include &lt;assert.h&gt;
   #include &lt;tchar.h&gt;

   void dump_com_error(_com_error &amp;e)
   {
     _tprintf(_T("Oops - hit an error!\n"));
     _tprintf(_T("\a\tCode = %08lx\n"), e.Error());
     _tprintf(_T("\a\tCode meaning = %s\n"), e.ErrorMessage());
     _bstr_t bstrSource(e.Source());
     _bstr_t bstrDescription(e.Description());
     _tprintf(_T("\a\tSource = %s\n"), (LPCTSTR) bstrSource);
     _tprintf(_T("\a\tDescription = %s\n"), (LPCTSTR) bstrDescription);
   }

   // If this is placed in the scope of the smart pointers, they must be
   // explicitly Release(d) before CoUninitialize() is called.  If any
   // reference count is non-zero, a protection fault will occur.
   struct StartOle {
     StartOle() { CoInitialize(NULL); }
     ~StartOle() { CoUninitialize(); }
   } _inst_StartOle;

   void main()
   {
     try
     {
       // Create a MAPI.Session pointer
       SessionPtr pSession("MAPI.Session");

       // Logon using the specified profile
       pSession-&gt;Logon("TO DO: Place profile name here");

       // Create pointer to the Outbox Folder
       FolderPtr   pFolder = pSession-&gt;Outbox;

       // Create pointer to the Messages Collection
       MessagesPtr pMessages = pFolder-&gt;Messages;

       // Create pointer to a new Message
       MessagePtr  pMessage = pMessages-&gt;Add();

       // Set the Subject of the message
       pMessage-&gt;Subject = "VCCOM: MAPI Example";

       // Set the Text of the message
       pMessage-&gt;Text = "This is my message text.";

       // Create pointer to Attachments collection
       AttachmentsPtr pAttachments = pMessage-&gt;Attachments;

       // Create new Attachment
       // TO DO: Change the absolute path (which must be used)
       pAttachments-&gt;Add("Mapi example source code.txt", 15000L,
                         (long) mapiFileData,
                         "c:\\mapitest\\commail\\commail.cpp");

       // Create pointer to Recipients Collection
       RecipientsPtr pRecipients = pMessage-&gt;Recipients;

       // Create pointer to a new Recipient
       RecipientPtr pRecipient = pRecipients-&gt;Add();

       // Set properties of the new recipient
       pRecipient-&gt;Name = "TO DO: Place email alias here";
       pRecipient-&gt;Type = (long) mapiTo;

       // Resolve the recipient address
       pRecipient-&gt;Resolve();

       _tprintf(_T("Sending message to %s.\n"),
                   (LPCTSTR) (bstr_t) pRecipient-&gt;Name);

       // Send the message
       pMessage-&gt;Send(false, false);

       // Logoff of the MAPI Session
       pSession-&gt;Logoff();

     }
     catch (_com_error &amp;e)
     {
         dump_com_error(e);
     }
   }

</PRE><h2>REFERENCES</h2>
 
<P>
For additional information about Collaboration Data Objects versus Active
Messaging, please see the following article in the Microsoft Knowledge
Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../MAPI/Q176916.htm">Q176916</A></B>
   TITLE     : INFO: Active Messaging and Collaboration Data Objects (CDO)

</PRE>For more information on Active Messaging Libraries please see the following
article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../MAPI/Q171440.htm">Q171440</A></B>
   TITLE     : INFO: Where to Acquire the Active Messaging Libraries

</PRE> 
<PRE>Keywords          : kbcode ActMsg OLEMSG
Technology        : kbole
Version           : WINDOWS:1.0,1.0a,1.1
Platform          : WINDOWS
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 2, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
