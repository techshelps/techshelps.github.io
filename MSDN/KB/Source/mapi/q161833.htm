

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Send Mail from Visual Basic Using OLE Messaging </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q161833">
<META NAME="KBModify" CONTENT="1997/11/21">
<META NAME="KBCreate" CONTENT="1997/01/06">
<META NAME="Keywords" CONTENT="kbprg ActMsg OLEMSG vbwin">
<META NAME="KBArea" CONTENT="Support; KB; mapi">
<META NAME="Description" CONTENT="  This article outlines the steps necessary to programmatically send an e-mail message from Visual Basic using the OLE Messaging Library. This example assumes that the OLE Messaging Library was properly installed on your computer (typically, by insta...">
<META NAME="Product" CONTENT="mapi">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAPN,QAYC,QAW6,QAV5,QA9Q,QBHQ,QAEV,QA5F,QAMA,QAH6,QABA,QBXS,QAY2,QAH4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Send Mail from Visual Basic Using OLE Messaging</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 21, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q161833</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Standard, Professional, and Enterprise Editions of Microsoft Visual
   Basic, 16-bit and 32-bit, for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article outlines the steps necessary to programmatically send an
e-mail message from Visual Basic using the OLE Messaging Library. This
example assumes that the OLE Messaging Library was properly installed on
your computer (typically, by installing Exchange).
<P>
The sample code can also be used from VBA, allowing Access, Excel, or
Project to send e-mail via the OLE Messaging Library.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
With the OLE Messaging Library, you can quickly and easily add e-mail
capabilities (that is, sending and receiving e-mail messages, and
interacting with folders and address books) to your Visual Basic
application. You can create programmable messaging objects, and then use
their properties and methods to meet the needs of your application.
<P>
The objects and methods exposed by the OLE Messaging Library are much more
robust than the MAPI controls that ship with Visual Basic, thus allowing
access to many MAPI properties that the MSMAPI OCX controls simply do not
address.
<P>
"Microsoft OLE Messaging Library Programmers Reference" is available in the
Microsoft Developer Network (MSDN), or the Olemsg.hlp file that installs
with Exchange Forms Designer 4.0.
<P>
NOTE: If this object library is not available in the References list, click
the Browse button and search your Windows\System folder for the file
Mdisp32.tlb.
<P>
<P><h3>Sample Code</h3>
 
<P>
To build a Visual Basic project that sends a simple message, follow
these steps:

<OL><P><LI>Open a new project in Visual Basic.

<P><LI>On the Tools menu, click References. Select "OLE/Messaging 1.0 Object
   Library."

<P><LI>Add a CommandButton to the default form. Accept the default name,
   Command1.

<P><LI>Copy the following code into the General Declarations section of the
   default form:
<P>
<P><PRE>     Option Explicit
</PRE><P>
<P><PRE>     Private Sub Command1_Click()
       Dim objSession As Object
       Dim objMessage As Object
       Dim objRecipient As Object
</PRE><P>
<P><PRE>       'Create the Session Object
       Set objSession = CreateObject("mapi.session")
</PRE><P>
<P><PRE>       'Logon using the session object
       'Specify a valid profile name if you want to
       'Avoid the logon dialog box
       objSession.Logon profileName:="MS Exchange Settings"
</PRE><P>
<P><PRE>       'Add a new message object to the OutBox
       Set objMessage = objSession.Outbox.Messages.Add
</PRE><P>
<P><PRE>       'Set the properties of the message object
       objMessage.subject = "This is a test."
       objMessage.Text = "This is the message text."
</PRE><P>
<P><PRE>       'Add a recipient object to the objMessage.Recipients collection
       Set objRecipient = objMessage.Recipients.Add
</PRE><P>
<P><PRE>       'Set the properties of the recipient object
       objRecipient.Name = "John Doe"  '&lt;---Replace this with a valid
<PRE></PRE>                                       'display name or e-mail alias
       objRecipient.Type = mapiTo
       objRecipient.Resolve

       'Send the message
       objMessage.Send showDialog:=False
       MsgBox "Message sent successfully!"

       'Logoff using the session object
       objSession.Logoff
     End Sub

</PRE><P><LI>Run the project. Click Command1. You have sent e-mail from Visual Basic.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
Microsoft OLE Messaging Library Programmers Reference
<P>
For additional information about Collaboration Data Objects versus Active
Messaging, please see the following article in the Microsoft Knowledge
Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../MAPI/Q176916.htm">Q176916</A></B>
   TITLE     : INFO: Active Messaging and Collaboration Data Objects (CDO)
</PRE></OL> 
<PRE>Keywords          : kbprg ActMsg OLEMSG vbwin
Technology        : kbole kbvba
Version           : WINDOWS:4.0
Platform          : WINDOWS
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 21, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
