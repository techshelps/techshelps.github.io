

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Send Mail to Remote Exchange Server in ASP with VB DLL </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q176914">
<META NAME="KBModify" CONTENT="1998/01/07">
<META NAME="KBCreate" CONTENT="1997/11/18">
<META NAME="Keywords" CONTENT="OLEMSG XWEB">
<META NAME="KBArea" CONTENT="Support; KB; mapi">
<META NAME="Description" CONTENT="  This article describes how to create a Web application that uses an Hypertext Markup Language (HTML) page, an Active Server Page (ASP) and a Visual Basic ActiveX .dll to send mail when Microsoft Exchange Server and Microsoft Internet Information Se...">
<META NAME="Product" CONTENT="mapi">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWA,QA2Q,QBWS,QAUJ,QAA1,QAVZ,QAYC,QAGU,QAG2,QAGI,QBS0,QAEB,QAPN,QDI2,QABO V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Send Mail to Remote Exchange Server in ASP with VB DLL</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 7, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q176914</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Collaboration Data Objects (CDO), versions 1.1, 1.2
<LI>Microsoft Visual Basic Learning, Professional, and Enterprise Editions
   for Windows, version 5.0
<LI>Microsoft Active Server Pages, version 1.0b
<LI>Microsoft Internet Information Server versions 3.0, 4.0
<LI>Microsoft Visual InterDev, version 1.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article describes how to create a Web application that uses an
Hypertext Markup Language (HTML) page, an Active Server Page (ASP) and a
Visual Basic ActiveX .dll to send mail when Microsoft Exchange Server and
Microsoft Internet Information Server are installed on separate machines.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To use an ActiveX .dll in an ASP page to send mail when the
Internet Information Server (IIS) and Exchange servers are not on the same
computer, you need to set up Windows NT and IIS security so the user can
log onto the Exchange server.
<P>
This article provides a step-by-step method that includes all source code
required.
<P>
<P><h3>PART 1</h3>
 
<P>
Create an NT user group that you grant access to the web.

<OL><P><LI>On the IIS machine, using "User Manager for Domains" from the
   Administrative Tools program group, select User and "New Local Group."

<P><LI>Type a Group Name (for example, WebBrowsers) and a Description.

<P><LI>Click the Add button, and select where you want to list the names from,
   "Add Individual Users" or Groups. Click OK to return to the main "User
   Manager" window.

<P><LI>Select the WebBrowsers group in the bottom part of the User Manager
   window.

<P><LI>From the User Manager menu, click "Policies", "User Rights."

<P><LI>Next to Rights, select "Log on Locally."

<P><LI>Click Add and use the "List Names From" drop-down list box to list names
   from MACHINENAME.

<P><LI>Select the WebBrowsers group and click Add.

<P><LI>Click OK to clear the "User Rights Policy" dialog box.
<P>
</OL>You have now created a user group that you will eventually give rights to
the web you will create later in this article.
<P>
<P>
<P><h3>PART 2</h3>
 
<P>
Create the Visual Basic .dll and install to the internet server.

<OL><P><LI>Create a new Visual Basic ActiveX .dll. Set the Project Properties as
   follows:
<P>
<P><PRE>      General tab:
</PRE><P>
<PRE>          Project Type:          ActiveX .dll
          Startup Object:        (None)
          Project Name:          CDOMail
          Project Description:   CDO .dll to send mail
          Unattended Execution:  Checked

      Make tab:

          Title:                 CDOMail
          All other settings as desired.

      Compile tab:

          All settings as desired.

      Component tab:

        Remote Server:          Unchecked
        Version Compatibility:  Project Compatibility (Change to
                                Binary Compatibility after compiling
                                to maintain client-server compatibility.)

</PRE><P><LI>Set the Class properties as follows:
<P>
<PRE>      Name:                       clsSendMail
      Instancing                  5 - MultiUse

</PRE><P><LI>Reference Olemsg32.dll version 5.0.1458.49 or later or Cdo.dll version
   5.5.1664.0 or later.

<P><LI>Paste the following code into the class module. This code defines a
   class with common messaging properties and contains a method that uses
   those properties to log onto the user's Exchange Server mailbox, then
   creates and sends mail.
<P>
<P><PRE>      Option Explicit
      'Requires a reference to OLEMSG32.DLL version 5.0.1458.49 or later
      'or CDO.DLL version 5.5.1664.0 or later.
      'Local variable(s) to hold property value(s).
</PRE><P>
<P><PRE>      Public Recipient As Variant
      Public Subject As Variant
      Public Text As Variant
      Public Mailbox As Variant
      Public Server As Variant
      Public Sub Send()
<PRE></PRE>        Dim objSession As MAPI.Session
        Dim objOutbox As Folder
        Dim objNewMessage As Message
        Dim objRecipients As Recipients
        Dim objOneRecip As Recipient

        Set objSession = New MAPI.Session
        objSession.Logon profileinfo:=Server &amp; _
                                    vbLf &amp; _
                                    Mailbox, _
                                    nomail:=True

        Set objOutbox = objSession.Outbox
        Set objNewMessage = objOutbox.Messages.Add
        Set objRecipients = objNewMessage.Recipients
        Set objOneRecip = objRecipients.Add
         With objOneRecip
          .Name = Recipient
          .Type = ActMsgTo
          .Resolve ' Get MAPI to determine complete E-mail address.
         End With
        With objNewMessage
          .Subject = Subject
          .Text = Text
          .Send
        End With
      End Sub

</PRE><P><LI>Compile to a .dll.

<P><LI>Create setup files using the Setup Wizard.

<P><LI>Install the .dll to your IIS computer.
<P>
<P>
</OL><h3>PART 3</h3>
 
<P>
Start Visual InterDev and create a new web on your IIS machine.

<OL><P><LI>On the Microsoft Visual InterDev or Microsoft Developer Studio menu
    select File, and then select New.

<P><LI>Select "Web Project Wizard" from the Projects tab.

<P><LI>Next, select the location for your Web Server. The location will be the
    Web server you intend users to log on to.

<P><LI>Give the Project a name (for example, KBCDOMail).

<P><LI>Select the "Create New Workspace" option and click OK.

<P><LI>Select the server name from the drop-down list. Click Next. The Wizard
    will contact the Web server. Depending on how you have authentication
    set up, you may be asked to supply a password.

<P><LI>Select "Create a New Web" and use KBCDOMail for the name. You do not
    have to select the "Enable full text searching for pages in this web"
    check box but it would be convenient if you plan to add this capability
    to the Web. Click Finish. The Wizard will create the web and some web
    files for you.

<P><LI>Select Project, Web Permissions from the Visual InterDev menu.

<P><LI>On the Settings tab, select "Use unique permissions for this Web", and
    then click Apply.

<P><LI>On the Groups tab, use the "Obtain list from" drop-down list box to
   select the IIS machine.

<P><LI>Add the WebBrowsers group and select the "Browse this Web" option.
   Click OK until all the dialog boxes are cleared.
<P>
<P>
</OL>PART 4
 
<P>
Add an HTML page to your project.

<OL><P><LI>Select File, then New from the menu.

<P><LI>Select HTML Page from the Files tab. Provide a name (for example
   Kbcdomail.HTM) and click OK.

<P><LI>Select "Kbcdomail.htm" and paste in the following code, replacing
   anything that is there.
<P>
<P><PRE>      &lt;HTML&gt;
      &lt;HEAD&gt;
      &lt;META NAME="GENERATOR" Content="Microsoft Developer Studio"&gt;
      &lt;META HTTP-EQUIV="Content-Type" content="text/html;
      charset=iso-8859-1"&gt;
      &lt;TITLE&gt;Document Title&lt;/TITLE&gt;
      &lt;/HEAD&gt;
      &lt;BODY BGCOLOR=White&gt;
</PRE><P>
<P><PRE>      &lt;H1&gt;&lt;CENTER&gt;Test&lt;/CENTER&gt;&lt;/H1&gt;
      &lt;P&gt;&lt;H2&gt;&lt;CENTER&gt;Enter Valid Logon and Exchange
      Server&lt;/CENTER&gt;&lt;/H2&gt;
      &lt;P&gt;
      &lt;FORM ACTION="KBCDOMail.asp" METHOD="POST" NAME="frmUserData"
      OnSubmit="return ValidateData()"&gt;
      &lt;TABLE&gt;
      &lt;TR&gt;
      &lt;TD&gt;Mailbox:&lt;/TD&gt;
      &lt;TD&gt;&lt;INPUT TYPE=TEXT VALUE="Mailbox" NAME="txtMailbox"
      ALIGN=LEFT&gt;&lt;/TD&gt;
      &lt;TR&gt;
      &lt;TD&gt;Exchange Server:&lt;/TD&gt;
      &lt;TD&gt;&lt;INPUT TYPE=TEXT VALUE="Exchange Server" NAME="txtServer"
      ALIGN=LEFT&gt;&lt;/TD&gt;
      &lt;TR&gt;
      &lt;TD&gt;Recipient:&lt;/TD&gt;
      &lt;TD&gt;&lt;INPUT TYPE=TEXT VALUE="Recipeint" NAME="txtRecipient"
      ALIGN=LEFT&gt;&lt;/TD&gt;
      &lt;TR&gt;
      &lt;TD&gt;Subject:&lt;/TD&gt;
      &lt;TD&gt;&lt;INPUT TYPE=TEXT VALUE="This is the subject."
      NAME="txtSubject" ALIGN=LEFT&gt;&lt;/TD&gt;
      &lt;TR&gt;
      &lt;TD&gt;Message:&lt;/TD&gt;
      &lt;TD&gt;&lt;TEXTAREA NAME="Name" ROWS=10 COLS=40
      WRAP=Physical&gt;&lt;/TEXTAREA&gt;&lt;/TD&gt;
      &lt;/TR&gt;
      &lt;/TABLE&gt;
      &lt;INPUT TYPE=HIDDEN VALUE="None" NAME="hidSource"&gt;&lt;BR&gt;&lt;P&gt;
      &lt;INPUT TYPE=SUBMIT VALUE="OK" NAME="btnSubmit" ALIGN=RIGHT&gt;
      &lt;INPUT TYPE="RESET" VALUE="Reset"&gt;
      &lt;/FORM&gt;
      &lt;/BODY&gt;
      &lt;/HTML&gt;
</PRE><P>
<P>
</OL><h3>PART 5</h3>
 
<P>
Add an .asp file to your project.

<OL><P><LI>Select File, then New from the menu.

<P><LI>Select "Active Server Page" from the Files tab. Provide a name (for
   example, Kbcdomail.asp) and click OK.

<P><LI>Select "Kbcdomail.asp" and paste in the following code replacing,
   anything that is there.
<P>
<P><PRE>      &lt;%@ LANGUAGE="VBSCRIPT" %&gt;
      &lt;%
      If Request.ServerVariables("LOGON_USER") = "" Then
      Response.Status = "401 access denied"
      Response.End
      End If
      %&gt;
</PRE><P>
<P><PRE>      &lt;%
      Response.Write("Logon User = " &amp;
      Request.ServerVariables("LOGON_USER") &amp;
      "&lt;br&gt;")
      bstrProfileInfo = Request.Form("txtServer") &amp; vbLf &amp;
      Request.Form("txtMailbox")
      response.write bstrProfileInfo %&gt;&lt;br&gt;&lt;%
      %&gt;
</PRE><P>
<P><PRE>      &lt;!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 3.2//EN"&gt;
      &lt;HTML&gt;
      &lt;HEAD&gt;
      &lt;/HEAD&gt;
      &lt;BODY&gt;
      &lt;%
      dim MyMail
      Response.Write("About to CreateObject CDOMail.clsSendMail.&lt;br&gt;")
      Set myMail = CreateObject ("CDOMail.clsSendMail")
      Response.Write("CDOMail.clsSendMail Created&lt;br&gt;")
      myMail.Server = Request.Form("txtServer")
      myMail.Mailbox = Request.Form("txtMailbox")
      myMail.Recipient = Request.Form("txtRecipient")
      myMail.Subject = Request.Form("txtSubject")  &amp; now
      myMail.Text=Request.Form("txtMessage")
      Response.Write("myMail.Server= " &amp; myMail.Server &amp; "&lt;br&gt;")
      Response.Write("myMail.Mailbox= " &amp; myMail.Mailbox &amp; "&lt;br&gt;")
      Response.Write("myMail.Recipient= " &amp; myMail.Recipient &amp; "&lt;br&gt;")
      Response.Write("myMail.Subject= " &amp; myMail.Subject &amp; "&lt;br&gt;")
      Response.Write("myMail.Text= " &amp; myMail.Text &amp; "&lt;br&gt;")
      myMail.Send
      set myMail = Nothing
      Response.Write("Message sent! Check your inbox.&lt;br&gt;")
      %&gt;
      &lt;/BODY&gt;
      &lt;/HTML&gt;
</PRE><P>
<P>
</OL><h3>PART 6</h3>
 
<P>
Make sure you have a mail CLIENT on the IIS machine.
<P>
If you do not have a mail CLIENT on the IIS machine the user's Web browser
reports this error:
<P>
<PRE>      CDOMail error '800a01ad'
      ActiveX component can't create object.

</PRE></OL>Installing either Outlook 8.01 or later or installing the Exchange Client
with the typical setup solves this problem.
<P>
<P><h3>PART 7</h3>
 
<P>
Test the application.
<P>
When you load Kbcdomail.htm into your browser, you will be prompted to
identify yourself. Provide your DOMAIN\UserName and password. Fill in the
text boxes on the page and click OK.
<P>
You should see the .asp file load and write out who the logged on user is,
the profile it is using, and information about the Visual Basic Class that
you previously installed on the IIS machine.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For additional information about Collaboration Data Objects versus Active
Messaging, please see the following article in the Microsoft Knowledge
Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../MAPI/Q176916.htm">Q176916</A></B>
   TITLE     : INFO: Active Messaging and Collaboration Data Objects (CDO)

</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: ActMsg CDO Active Messaging Collaboration Data<BR>
Keywords          : OLEMSG XWEB<BR>
Version           : WINDOWS:1.0,1.1,1.2,5.0; WINNT:1.0b,3.0,4.0<BR>
Platform          : WINDOWS winnt<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 7, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
