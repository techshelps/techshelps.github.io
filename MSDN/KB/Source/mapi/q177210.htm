

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Creating an Action for a Rule </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q177210">
<META NAME="KBModify" CONTENT="1998/01/07">
<META NAME="KBCreate" CONTENT="1997/11/24">
<META NAME="Keywords" CONTENT="kbcode XGEN">
<META NAME="KBArea" CONTENT="Support; KB; mapi">
<META NAME="Description" CONTENT="  Understanding the ACTIONS and ACTION structures make creating actions for rules much easier. This article describes both of these structures and provides a code example of a properly created ACTIONS and ACTION structure. The code provided is not co...">
<META NAME="Product" CONTENT="mapi">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QAEV,QAPF,QAUD,QAH4,QAFQ,QAI4,QAYC,QAIC,QATX,QAIB,QAAY,QAEF,QA9N,QACI V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Creating an Action for a Rule</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 7, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q177210</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Exchange Development Kit (EDK), version 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Understanding the ACTIONS and ACTION structures make creating actions for
rules much easier. This article describes both of these structures and
provides a code example of a properly created ACTIONS and ACTION structure.
The code provided is not complete. It assumes that you already have a
handle to a MAPI session, a pointer to the message store, a pointer to the
folder the rule is to be applied to, and that you will release the
appropriate structures before exiting the function.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The ACTIONS structure is a collection of ACTION structures. The ACTIONS
structure also contains version information and the number of ACTION
structures it contains.
<P>
The ACTION structure contains the action type. The following is a list of
some of the valid action types:

<UL><LI>OP_FORWARD: Forwards a message to another mailuser.

<LI>OP_MOVE: Moves a message to another folder.

<LI>OP_REPLY: Reply to a message with specific text or using a specific
   form.
<P>
</UL>The action structure also stores information about what to do with the
message. It stores the action flavor when the action is OP_FORWARD. The
following is a list of the valid values for action flavor:

<UL><LI>FWD_PRESERVE_SENDER: Preserves the sender information and indicates the
   message was autoforwarded.

<LI>FWD_DO_NOT_MUNGE_MSG: Forwards the message without making any changes
   to the message.

<LI>FWD_AS_ATTACHMENT: Makes the message an attachment to the forwarded
   message.
<P>
</UL><h3>Steps to Create an Action for a Rule</h3>
 
<P>
The following steps and code show how to create an action for a rule.

<OL><P><LI>Allocate memory for the ACTIONS structure.

<P><LI>Reset the memory to NULL.

<P><LI>Set the version, and the number of actions.

<P><LI>Set the pointer to the ACTION structure to zero.

<P><LI>Allocate memory for the ACTION structure.

<P><LI>Reset the ACTION to zero.

<P><LI>Allocate the memory for the action to be created and check success.

<P><LI>Copy the action string to variable.
<P>
</OL><h3>Sample Code</h3>
 
<P>
<P>
<PRE>   // lpActs should defined before the main function.
   static LPACTIONS     lpActs =       NULL;
   HRESULT              hr     =       NULL;
   hr = CreateAction()

   HRESULT CreateAction(void)
   {
    HRESULT       hr         =   NULL;
    LPSTR         lpszAction =   NULL;

    hr = MAPIAllocateBuffer(sizeof(ACTIONS), (void**)&amp;lpActs);
    if (FAILED(hr) || lpActs == 0)
    {
       MessageBox(NULL,
           "MAPIAllocateBuffer() for lpActs failed.",NULL,MB_OK);
       return 1;
    }

    memset(lpActs, 0, sizeof(ACTIONS));

    lpActs-&gt;ulVersion = EDK_RULES_VERSION;
    lpActs-&gt;cActions = 1;

    lpActs-&gt;lpAction = 0;

    hr = MAPIAllocateMore(sizeof(ACTION), lpActs,
                (LPVOID*)&amp;lpActs-&gt;lpAction);
    if (FAILED(hr) || lpActs-&gt;lpAction == 0)
    {
      MessageBox(NULL,
          "MAPIAllocateBuffer() for lpAct failed.",NULL,MB_OK);
      return 1;
    }
    memset(lpActs-&gt;lpAction, 0, sizeof(ACTION));

    /*
    // Example of Reply string.
    hr = MAPIAllocateBuffer(sizeof("Reply \"Reply Text\""),
                  (void**) &amp;lpszAction);

    // Example of Forward string.
    hr = MAPIAllocateBuffer(sizeof("Forward \"&lt;User Name&gt;\""),
                  (void**) &amp;lpszAction);
    */

    // Example of Move String.
    hr = MAPIAllocateBuffer(sizeof("Move Mailbox - &lt;User Name&gt;
           \\Top of Information Store\\Deleted Items"),
           (void**) &amp;lpszAction);

    if (FAILED(hr))
    {
       MessageBox(NULL,"Memory Allocation Failed",NULL,MB_OK);
       return 1;
    }
    // Reply:
    //wsprintf(lpszAction,"Reply \"Reply Text\"");

    // Forward:
    //wsprintf(lpszAction,"Forward \"&lt;User Name&gt;\"");

    // Move:
    wsprintf(lpszAction,"Move Mailbox - &lt;User Name&gt;
        \\Top of Information Store\\Deleted Items");

    hr = HrStringToAction(lpSession, lpFolder, lpszAction, lpActs,
                 &amp;lpActs-&gt;lpAction[lpActs-&gt;cActions-1]);

    if (FAILED(hr))
    {
        MessageBox(NULL,"Action Failed",NULL,MB_OK);
        return 1;
    }
    return 0;
   }

</PRE></OL>In order to use this code, the following libraries and headers are
required:

<UL><LI>Mapi32.lib
<LI>Uuid.lib
<LI>Version.lib
<LI>Edkmapi.lib
<LI>Edkutils.lib
<LI>Addrlkup.lib
<LI>Edkguid.lib
<LI>Rulecls.lib
<LI>Edk.h
<P>
</UL>NOTE: This is only one piece of the puzzle for creating rules for folders
programmatically. Restrictions are the other piece. This article will be
updated with the title and Knowledge Base Article ID discussing
restrictions, when it is available.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information, please see the following topics in the Microsoft
Developer Network Library (MSDN). These topics can be found in the Win32
Messaging Application Program Interface (MAPI) section of the Platform SDK.

<UL><LI>Starting a MAPI Session
<LI>Opening a Message Store
<LI>Opening the Default Message Store
<LI>Opening a Folder
</UL> 
<PRE>Keywords          : kbcode XGEN
Version           : WINDOWS:5.0
Platform          : WINDOWS
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 7, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
