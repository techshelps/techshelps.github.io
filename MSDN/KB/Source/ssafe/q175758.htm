

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Trapping Visual SourceSafe OLE errors </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q175758">
<META NAME="KBModify" CONTENT="1997/10/28">
<META NAME="KBCreate" CONTENT="1997/10/27">
<META NAME="Keywords" CONTENT="ssother ssvb ssvc">
<META NAME="KBArea" CONTENT="Support; KB; ssafe">
<META NAME="Description" CONTENT="  When writing an application that drives SourceSafe via OLE automation, you may want to trap the error codes defined in ssauterr.h. This file can be found at:     http://www.microsoft.com/SSAFE/download/ssauterr.h  This article describes how to trap...">
<META NAME="Product" CONTENT="Visual SourceSafe">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QBS0,QAAP,QAB4,QA56,QA55,QDML,QBFY,QA9Q,QAKP,QABG,QDL9,QBWQ,QBWO,QBWN V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Trapping Visual SourceSafe OLE errors</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 28, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q175758</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual SourceSafe, 32-bit, for Windows, version 5.0
<LI>Microsoft Visual Studio 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
When writing an application that drives SourceSafe via OLE automation, you
may want to trap the error codes defined in ssauterr.h. This file can be
found at:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/SSAFE/download/ssauterr.h">http://www.microsoft.com/SSAFE/download/ssauterr.h</A></B>

</PRE>This article describes how to trap these error codes from Visual Basic and
Visual C++.
<P>
NOTE: This cannot be done in C++ if you use the code generated by the Class
Wizard to generate a wrapper for SSAPI.DLL.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Visual Basic Code</h3>
 
<P>
In Visual Basic, the error code is returned as the HelpContext property of
the Err object.
<P>
An example of Visual Basic error handling code:
<P>
<PRE>   Private Sub DriveVss()

   Set oSSafe = CreateObject("SourceSafe") 'assume this succeeds
   On Error GoTo errlabel

   inipath = "c:\vss\srcsafe.ini"
   user = "FredA"
   pwrd = "TopHat"


   oSSafe.Open SrcSafeIni:= inipath, Username:= user, Password:= pwrd
   Set oProject = oSSafe.VSSItem("$/myproj")
   Exit Sub

   errlabel:
   errmsg = "Source: " &amp; Err.Source &amp; vbCrLf &amp; _
           "Error Number: " &amp; Err.HelpContext &amp; vbCrLf &amp; _
           "Please inform your SourceSafe Admin"

   MsgBox (errmsg)
   End Sub


</PRE><h3>Visual C++ Code</h3>
 
<P>
In Visual C++, the error code is a member of the HRESULT structure that is
returned from the call to the automation method. The DriveVSS function
below is based upon the code in the following article in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../SSAFE/Q169928.htm">Q169928</A></B>
   TITLE     : HOWTO: Open a SourceSafe Database with OLE Automation in C++

</PRE>where pVdb is a pointer to the IVSSDatabase interface.
<P>
You will need to add the following:
<P>
<PRE>   #include &lt;winerror.h&gt; //for HRESULT_CODE
   #include &lt;string.h&gt;   //for strcpy, strcat
   #include &lt;stdlib.h&gt;   // for itoa

</PRE>to the header files listed in <B><A HREF="../SSAFE/Q169928.htm">Q169928</A></B>.
<P>
<PRE>   void DriveVSS()
   {
      void ErrHand(HRESULT hr);

      IVSSItem *pIVSSItem;
      HRESULT hr;
      BSTR bstrPath = SysAllocString(L"c:\\vss\\srcsafe.ini");
      BSTR bstrUName = SysAllocString(L"FredA");
      BSTR bstrUPass = SysAllocString(L"TopHat");
      BSTR bstrVSSSpec = SysAllocString(L"$/myproj");


      if(!SUCCEEDED(hr = pVdb-&gt;Open(bstrPath,bstrUName, bstrUPass)))
         ErrHand(hr);
    else   if(!SUCCEEDED(hr = pVdb-&gt;get_VSSItem(bstrVSSSpec,0,&amp;pIVSSItem)))
         ErrHand(hr);
   }

   void ErrHand(HRESULT hr)
   {
   short sErrCode = HRESULT_CODE(hr);
   char cErrCode[6];
   char strMessage[50];

   strcpy(strMessage,"Error #: ");
   itoa(sErrCode, cErrCode, 10);
   strcat(strMessage, cErrCode);
   strcat(strMessage, "\n\n Please inform your SourceSafe Administrator");
   MessageBox(NULL, strMessage, NULL, MB_OK);
   }

</PRE>(c) Microsoft Corporation 1997, All Rights Reserved. Contributions by David
de Groot, Microsoft Corporation
 
<PRE>Keywords          : ssother ssvb ssvc
Version           : WINDOWS:5.0; WINNT:97
Platform          : WINDOWS winnt
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 28, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
