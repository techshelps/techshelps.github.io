

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How To Issue a Recursive GET Based on a Project Label </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q162114">
<META NAME="KBModify" CONTENT="1997/01/15">
<META NAME="KBCreate" CONTENT="1997/01/14">
<META NAME="Keywords" CONTENT="kbother kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; ssafe">
<META NAME="Description" CONTENT="  There are three methods in Visual SourceSafe that you can use to  Get  files based on a project-level label. This article discusses each of these methods and describes their respective results.  MORE INFORMATION  Of the three methods mentioned abov...">
<META NAME="Product" CONTENT="Visual SourceSafe">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAMB,QAC2,QAJN,QDML,QAVS,QA56,QA55,QBVV,QAUD,QAFI,QAG0,QAXC,QBXB,QATJ,QAKR V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How To Issue a Recursive GET Based on a Project Label</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 15, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q162114</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft SourceSafe for Windows, versions 3.04, 3.1
<LI>Microsoft Visual SourceSafe, 16-bit and 32-bit, for Windows,
   versions 4.0, 4.0a
<LI>Microsoft Visual SourceSafe, 32-bit, for Windows, versions 4.0,
   4.0a, 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
There are three methods in Visual SourceSafe that you can use to "Get"
files based on a project-level label. This article discusses each of these
methods and describes their respective results.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Of the three methods mentioned above, one uses the Visual SourceSafe
Explorer and the other two use the command line.
<P>
<P><h3>Using the Command Line</h3>
 
<P>
The two command line methods are:
<P>
<PRE>   SS GET $/&lt;path to project&gt;/*.* -r -gf -vl&lt;label&gt;

   -or-

   SS GET $/&lt;path to project&gt; -r -gf -vl&lt;label&gt;

</PRE>Where &lt;path to project&gt; is the Visual SourceSafe path to the desired
project and &lt;label&gt; is the project label against which the Get is executed.
The -gf switch tells Visual SourceSafe to Get the files into their working
directory, not the current DOS directory.
<P>
The results of these two examples are quite different. The command in the
first example yields all files and subprojects in &lt;path to project&gt; that
are currently in the project. The files are returned in the state at which
the label was applied. This means that any file or subproject that was
deleted (and not permanently destroyed) after the label was applied will
not be returned.
<P>
The command in the second example returns all files and subprojects in
&lt;path to project&gt; that were in the project at the time the label was
applied, except for those files that were deleted or permanently destroyed.
<P>
The following procedure illustrates this difference:

<OL><P><LI>Open or switch to Visual SourceSafe, and create a project called
   Vssrocks off of the root($/).

<P><LI>Create a subproject of Vssrocks called Vssrules.

<P><LI>Add two files, one to Vssrocks and the other to Vssrules.

<P><LI>Apply a project-level label called Label1 to Vssrocks. Note that this
   level is inherited by Vssrules.

<P><LI>Set the working directory of Vssrocks to C:\Vssrocks (create this
   directory if it does not already exist).

<P><LI>Delete, but do not destroy, the project Vssrules, and then close the
   Visual SourceSafe Explorer.

<P><LI>Open a DOS window and set your path to include \Vss\Win32.

<P><LI>Type the following command in the DOS window:
<P>
   SS GET $/VSSROCKS/*.* -r -vlLABEL1
<P>
   Note that only the file added to Vssrocks is returned.

<P><LI>Type the following command in the DOS window:
<P>
   SS GET $/VSSROCKS -r -vlLABEL1
<P>
   The error message "File or project not found" appears, but the contents
   of both Vssrocks and Vssrules are returned.
<P>
</OL><h3>Using the Visual SourceSafe Explorer</h3>
 
<P>
The following procedure describes how to use a recursive Get on a label to
return all files and subprojects in a project that were in the project at
the time the label was applied, except for those projects that have been
deleted or permanently destroyed.

<OL><P><LI>Open or switch to Visual SourceSafe and create a project called Vssrocks
   off of the root($/).

<P><LI>Create a subproject of Vssrocks called Vssrules.

<P><LI>Add two files, one to Vssrocks and the other to Vssrules.

<P><LI>Apply a project-level label called Label1 to Vssrocks. Note that this
   level is inherited by Vssrules.

<P><LI>Set the working directory of Vssrocks to C:\Vssrocks (create this
   directory if it does not already exist).

<P><LI>Delete, but do not destroy, the project Vssrules.

<P><LI>Right-click the Project Vssrocks and click Show History.

<P><LI>Select the version that the label was applied to and click Get.

<P><LI>Select the Recursive check box and click OK (do not select the Build
   Tree check box). Note that the contents of both Vssrocks and Vssrules
   are returned.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For additional information on project and file labels please see the
following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID:<B><A HREF="../SSAFE/Q139298.htm">Q139298</A></B>
   TITLE     :How to Include Specific File Revisions in a Project Label
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbother kbhowto<BR>
KBSubcategory: sscl ssother<BR>
Additional reference words: 3.04 3.10 4.0 4.0a 5.0 kbdss
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 15, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
