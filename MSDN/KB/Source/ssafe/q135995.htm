

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FAQ: Visual SourceSafe Integration with Visual Basic 4.0 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q135995">
<META NAME="KBModify" CONTENT="1997/06/02">
<META NAME="KBCreate" CONTENT="1995/08/30">
<META NAME="Keywords" CONTENT="SourceSafe ssvb kbfaq kbinterop kbref kbtshoot kbusage">
<META NAME="KBArea" CONTENT="Support; KB; ssafe">
<META NAME="Description" CONTENT="  This article covers some of the most frequently asked questions (FAQ) about the Visual Basic Add-In to Visual SourceSafe.  MORE INFORMATION  1. Q. I have installed Visual Basic and Visual SourceSafe, but Visual       SourceSafe is still not availab...">
<META NAME="Product" CONTENT="Visual SourceSafe">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QA55,QA56,QDML,QABI,QABH,QA5F,QAMA,QAA1,QDI2,QAEF,QBVV V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FAQ: Visual SourceSafe Integration with Visual Basic 4.0</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 2, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q135995</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Visual SourceSafe for Windows, versions 4.0, 5.0
<LI>Microsoft Visual SourceSafe for Windows NT, versions 4.0, 5.0
<LI>Microsoft Visual SourceSafe for Windows 95, versions 4.0, 5.0
<LI>Standard, Professional, and Enterprise Editions of Microsoft
   Visual Basic for Windows, 16-bit and 32-bit, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article covers some of the most frequently asked questions (FAQ) about
the Visual Basic Add-In to Visual SourceSafe.
<P>
<P><h2>MORE INFORMATION</h2>
 

<PRE>1. Q. I have installed Visual Basic and Visual SourceSafe, but Visual
      SourceSafe is still not available in the Visual Basic Add-In menu.
      Why?

   A. Make sure Visual SourceSafe was installed after you installed Visual
      Basic. If you install Visual SourceSafe before Visual Basic, Visual
      SourceSafe does not know you plan to use the add-in functionality
      because it does not find Visual Basic. Therefore, the installation
      does not install the add-in hooks. You must install Visual SourceSafe
      (Client, Custom, or preferably Netsetup.exe) after installing Visual
      Basic.

      If you install the custom version, you must select the "Visual Basic
      and Visual C++ Registration" check box in version 4.x, or "Enable
      SourceSafe Integration" for version 5.0. This is what installs the
      registry hooks necessary for Visual Basic to find SourceSafe.

      For more information about what the registry hooks are and how
      integration works, please see the following articles in the Microsoft
      Knowledge Base:

      ARTICLE-ID: <B><A HREF="../SSAFE/Q133018.htm">Q133018</A></B>
      TITLE     : Visual SourceSafe Setup Registration Settings

2. Q. I have a project under Visual SourceSafe control. Why can't I make
      any modifications to my files in this project now?

   A. When anything is under Visual SourceSafe control, the files must
      be checked out of Visual SourceSafe before they can be modified in
      Visual Basic. There are several easy ways to tell if the files are
      checked out:

      1. When viewing the project in Visual Basic, if a file is checked
         out, there will be a check mark in the box on the left side of the
         given file icon. When viewing the code, if the file is checked
         out, you will be able to make modifications. If the file is not
         checked out, you will see (read only) on the top.

         In addition, within Visual Basic, when you select any control,
         there will be a black stretch box instead of a white stretch box.

      2. In the Visual SourceSafe Explorer, if the files are checked
         out, there will be a check mark on top of the icon next to the
         file name and there will be a check-out directory specified.

3. Q. I have my Visual Basic project under Visual SourceSafe control. Now
      I see miniature icons appearing by my file names when I view the
      project. What are these and what do they mean?

   A. These miniature icons are called glyphs. There are a variety of
      glyphs used by Visual SourceSafe, Visual Basic, and other
      programs to let the user know the status of each and every file under
      Visual SourceSafe control.

      For files that are under SourceSafe control but not checked out, you
      will see a little red padlock on the corner of the icon for that
      file. This means that the files are under SourceSafe Control and are
      not checked out.

      The glyph you see when you check out a file is a check mark on the
      side next to the icon. This means the file is checked out of
      SourceSafe to you and that it is editable.

      The Visual SourceSafe Explorer uses these and a number of other
      different icons to represent different states of various files. See
      your Visual SourceSafe documentation for details.

4. Q. I have renamed a file in the Visual SourceSafe Explorer. Why is
      the file not renamed in Visual Basic?

   A. Visual SourceSafe doesn't have a way to tell Visual Basic to rename a
      file in a given project. On the other hand, Visual Basic, through the
      integration component, can tell SourceSafe that a file has been
      renamed. Therefore, the best way to rename a file is to do it within
      Visual Basic. This will update the Visual SourceSafe Explorer.
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: vss FAQ Q&amp;A vbwin VB Visual Basic<BR>
Keywords            : SourceSafe ssvb kbfaq kbinterop kbref kbtshoot kbusage<BR>
Version             : 4.00 5.00 | 4.00 5.00<BR>
Platform            : NT WINDOWS<BR>
Issue type          : kbinfo<BR>
Resolution Type     : Info_Provided<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 2, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
