

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Return ADO/RDS/OLE DB Interfaces from COM Objects </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q178841">
<META NAME="KBModify" CONTENT="1998/01/21">
<META NAME="KBCreate" CONTENT="1998/01/05">
<META NAME="Keywords" CONTENT="kbcode">
<META NAME="KBArea" CONTENT="Support; KB; mdac">
<META NAME="Description" CONTENT="  The OLE DB Software Development Kit (SDK) provides IDL files for OLE DB objects (in the directory \Oledbsdk\Unsupported\Idl), but not for ActiveX Data Objects (ADO) or the Remote Data Service (RDS). This makes it difficult to return these objects e...">
<META NAME="Product" CONTENT="mdac">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QBBS,QAW6,QAUD,QA9Q,QAYY,QAY2,QALW,QAPF,QAM7,QBXR,QAJQ,QA1S,QDMW,QDL9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Return ADO/RDS/OLE DB Interfaces from COM Objects</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 21, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q178841</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Data Access Components, version 1.5
<LI>Microsoft OLE DB, versions 1.0, 1.1, 1.5
<LI>Remote Data Service for ADO versions 1.0, 1.1, 1.5
<LI>ActiveX Data Objects (ADO), versions 1.0, 1.5
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The OLE DB Software Development Kit (SDK) provides IDL files for OLE
DB objects (in the directory \Oledbsdk\Unsupported\Idl), but not for
ActiveX Data Objects (ADO) or the Remote Data Service (RDS). This makes it
difficult to return these objects either as an argument within a method, or
as the return value of a method within a C++ COM object. This article
presents two techniques that can be used to accomplish either objective.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Method 1: Create Your Own IDL File
 
<P>
You can create your own .idl file by using the Oleview.exe application that
comes with Visual C++. For example, if you open the type library for ADO,
you see an .idl file for that type library in the OLEVIEW window.
<P>
Another way to handle this is to create a "dummy" .idl file for a given
MDAC interface. Within this .idl file you define an interface for each
object you want to use. Each interface uses the same UUID as the real
interface, and you will not define any methods or properties for these
dummy interfaces.
<P>
In the code below, a dummy interface is created for the ADODB.Recordset:
<P>
<P>
<PRE>   import "oaidl.idl";

   [
       object,
       uuid(00000243-0000-0010-8000-00AA006D2EA4),
       dual,
       pointer_default(unique)
   ]
   interface ADORecordset : IDispatch
   {
       // No methods defined. fake!
   };

</PRE>Now you can save this as a separate .idl file (Adiint.idl, for example.)
<P>
Below is a sample IDL snippet that demonstrates how it would be used:
<P>
<PRE>   import "adoint.idl";   // fake interfaces
   interface IServer : IDispatch
    {
        [id(1), helpstring("Send a recordset to the wire")]
        HRESULT SendRecordset( [in] ADORecordset *pIADORecordset,
                               [in, defaultvalue(1)] long lRows
                             );
        ...
    };


</PRE><h3>Method 2: Use IDispatch</h3>
 
<P>
You can avoid the need for creating your own .idl file by returning an
Idispatch pointer from your method instead of a custom interface. The
client will then QueryInterface() for the interface it needs or will invoke
methods using the IDispatch interface.
<P>
<P><h2>REFERENCES</h2>
 
<P>
<B><A HREF="http://www.microsoft.com/data">http://www.microsoft.com/data</A></B>
<P>
 
<PRE>Keywords          : kbcode
Technology        : ole
Version           : WINDOWS:1.0,1.1,1.5
Platform          : WINDOWS
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 21, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
