

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Implementing ComboBox in ASP Exported from Access Forms </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q172868">
<META NAME="KBModify" CONTENT="1997/12/11">
<META NAME="KBCreate" CONTENT="1997/08/18">
<META NAME="Keywords" CONTENT="VIASP VIMisc">
<META NAME="KBArea" CONTENT="Support; KB; istudio">
<META NAME="Description" CONTENT="  This article describes how to use a combo box in an Active Server Pages (ASP) page to return detailed information about the item selected in the combo box, and then use the detailed information to populate a form.  In addition, the following topics...">
<META NAME="Product" CONTENT="istudio">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QA1S,QDNQ,QBWS,QA5V,QDN9,QA3P,QA2Q,QAUJ,QAVZ,QAGI,QAPN,QAHP,QBWA,QAG2 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Implementing ComboBox in ASP Exported from Access Forms</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 11, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q172868</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual InterDev, version 1.0
<LI>Microsoft Access versions 7.0, 97
<LI>Microsoft Active Server Pages, version 1.0b
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article describes how to use a combo box in an Active Server Pages
(ASP) page to return detailed information about the item selected in the
combo box, and then use the detailed information to populate a form.
<P>
In addition, the following topics are covered:

<UL><LI>How to create an Access Form based on the Customers table in the
   Adventure Works database (AdvWorks.mdb) and add a combo box that allows
   the user to obtain detailed information about the selected item.

<LI>How to create a Form based on the Customers table in the AdvWorks.mdb
   database.

<LI>How to export the Form to Active Server Pages and add the exported
   Active Server Pages files to a Visual InterDev Web project.

<LI>How to modify the code to implement the combo box in the Active Server
   Pages.
<P>
</UL>To complete the sample tutorial the user will need the following:
<P>
- Visual InterDev 1.0.
<P>
- Internet Information Server 3.0
<P>
- Active Server Pages 1.0b with Adventure Works samples installed and
<PRE>  working.

</PRE>- Access 7.0 or Access 97.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
 
Additional Notes
 
<P>
- The files adovbs.inc and SessionVars.inc have been
<PRE>  renamed to adovbs.txt and SessionVars.txt to allow
  them to be sent via email. These files will need to
  be renamed back to the .inc extension to work inside
  the Web project. They needed to be renamed due to the
  fact that .inc files appear to be lost in the email.

</PRE>- If you have Access 7.0 (Win95) you will not need to
<PRE>  convert the database to Access 97 in step one below.
  This is done to allow editing of the database in
  Access 97.  To export the Form as an ASP file you
  must open the database in Access 97.

</PRE> 
<P>
<P>
<P><h3>Step One: Convert the AdvWorks.mdb database to Access 97</h3>
 
<P>
1) Open Access 97 and from the Tools &gt; Database Utilities
menue select Convert Database.
<P>
2) Locate the AdvWorks.mdb file located in the AdvWorks
directory ([drive]:\InetPub\ASPSamp\AdvWorks), select it
and click Convert.
<P>
3) Save the AdvWorks.mdb with the same name but to a
temporary location.
<P>
4) After saving the converted database to the temporary
location, copy it back into the AdvWorks directory replacing
the original AdvWorks.mdb file with the new Access 97
AdvWorks.mdb file.
<P>
<P>
<P><h3>Step Two: Create the frmCustomers Form</h3>
 
<P>
1) Open Access, open the AdvWorks database ([drive]:\InetPub \ ASPSamp \
AdvWorks)and select the Forms tab.  Click the New button. Select Form
Wizard and in the drop-down box in the bottom of the "New Form" dialog,
choose the Customers table from the listbox.  Click OK.
<P>
2) Click the &gt;&gt; button to select all the fields and then click Next. Accept
the defaults by clicking Next until you reach the dialog box asking you
to name the Form. Name the Form frmCustomers to distinguish it from the
existing Customers Form in the AdvWorks database.  Click "Finish".
<P>
3) When the form appears, select View / Design from the menu.  Move and
resize the controls on the Form so they are clearly visible.  Allow
approxiamately 1/4 of an inch between the controls and the left hand side
of the Form and the top of the Form so the controls will display correctly
on the HTML page generated by the exported ASP file.
<P>
5) Drag the Detail bar down until there is about 1/2 of an inch of Form
Header available. Make sure View / Toolbox is visible, and drop a ComboBox
control onto the Form Header. The Combo Box Wizard dialog box will appear.
Select the 'Find a record on my form based on the value I selected in my
combo box' option button and click Next.
<P>
6) Click the &gt; button and add the following fields: CustomerID and
CompanyName and click next.  On the next dialog box leave the 'Hide key
column' checked and click Next.
<P>
7) Enter 'Select Customer' for the combo box lable and click Finish.
<P>
8) Resize the combo box so it will display correctly in the ASP page as
described above.
<P>
9) Change the name property of the combo box label to lblSelectCustomers
and change the name property of the combo box to cboCustomers.  Rename each
of the controls accordingly, renaming the lables with the lbl prefix and
text boxes with the txt prefix (i.e., lblCustomerID and txtCustomerID).
<P>
10) Select Form View from the View menu and confirm that when a Customer is
selected in the combo box that their detail information is shown below
in the Detail section of the form. Close and save the changes made to
frmCustomers.
<P>
11) Close the Form and say "yes" to saving changes.
<P>
<P><h3>Step Three: Export the frmCustomers form to ASP</h3>
 
<P>
1) From within Access 97 select the Forms tab and select the frmCustomers
form.
<P>
2) From the File menu select Save As/Export.... Accept the default 'To an
External File or Database' and click OK.
<P>
3) The 'Save Form frmCustomers in' dialog box will appear.  In the 'Save as
type' listbox select 'Microsoft Active Server Pages (*.asp)' and then
browse to the wwwroot directory for the Web server (\InetPub\wwwroot for NT
Server 4.0 and Internet Information Server and \WebShare\wwwroot for
Windows 95 and Personal Web Server) for the "Save in:" box.  You want to
save/export the ASP files to the wwwroot directory of the respective Web
server.
<P>
4) After browsing to the wwwroot directory click the Export button.  The
Microsoft Active Server Pages Output Options dialog will appear.  In the
Data Source Name textbox enter the name of the System DSN for Adventure
Works (i.e. AdvWorks) and click OK.  Leave everything else blank.  The
files frmCustomers.asp and frmCustomersalx.asp will be exported to the
wwwroot directory.
<P>
5) To test the exported ASP pages Execute permissions will need to be set
on the wwwroot directory from within the Internet Service Manager. Open
the Internet Service Manager and double click on the www service to open
its Properties page.  Select the Directories tab and select the wwwroot
&lt;home&gt; diretory.  Click the Edit Properties button and check the Execute
checkbox under Access.  Start and stop the www service to assure that
the changes have taken effect.  Once this has been done attempt to
browse the frmCustomers.asp by entering the following URL in Internet
Explorer's Address textbox: <B>http://&lt;ServerName&gt;/frmCustomers.asp.</B>
<P>
At this point you should be able to view the form, but the combo box will
not function until some modifications are mde to the code in the ASP files.
<P>
<P>
<P><h3>Step Four: Add the exported ASP files to a Web project</h3>
 
<P>
1) Create a new Web project is Visual Interdev called Customers.
<P>
2) Add the files adovbs.inc (use Start/Find to locate the file).
<P>
3)Add the files frmCustomers.asp and frmCustomersalx.asp to the workspace.
<P>
4)Add a text file to the Web project named SessionVars and rename its file
extension from .txt to .inc (i.e. SessionVars.inc).  Open the
SessionVars.inc file in Notepad and copy the following lines into it:
<P>
<PRE>   &lt;%
   If Session("URLPathInfo") = "" Then

     Dim i
     Dim strTemp
     Dim nTrim
     Dim ServerName
     Dim PathInfo
     Dim FullPathInfo

     ServerName   = Request.ServerVariables("SERVER_NAME")
     PathInfo     = Request.ServerVariables("PATH_INFO")
     FullPathInfo = ServerName &amp; PathInfo

     For i = 1 To Len(PathInfo)
       strTemp = Right(PathInfo, i)
       If ( Left(strTemp, 1) = "/" ) Then
         nTrim = i - 1
    Session("URLPathInfo") = Left(FullPathInfo, _
            (Len(FullPathInfo) - nTrim))
    Exit For
       End If
     Next

   End IF
   %&gt;

</PRE>The code above uses the ServerVariables to obtain both the ServerName and
the relative path to the Web project. A string is then built which forms
the relative path to the ASP files regardless of where they are placed
inside the Web project. URLPathInfo is set to a string with the following
syntax: &lt;ServerName&gt;/&lt;WebProjecName&gt;/.  This string can then be dynamically
inserted via ASP into the two exported files, thereby allowing them to be
placed anywhere in the Web project and still be browsed.
<P>
<P>
<P><h3>Step Five: Modify frmCustomers.asp file</h3>
 
<P>
Open the frmCustomers.asp file and add the following line of code after the
opening &lt;BODY&gt; tag:
<P>
<PRE>   &lt;!--#INCLUDE FILE="adovbs.inc"--&gt;

   &lt;!--#INCLUDE FILE="SessionVars.inc"--&gt;

</PRE>The &lt;!--#INCLUDE FILE="filename.inc"--&gt; imports the text/code inside the
.inc file into frmCustomers.asp prior to processing it.  The adovbs.inc
file
declares various constants that are useful in ASP.
<P>
<P>
Change the line 'rs.Open sql, conn, 3, 3' to the following:
<P>
<PRE>   rs.Open sql, conn, adOpenStatic, adLockOptimistic

</PRE>By using the INCLUDE statement and including the adovbs.inc file the
constants can be referred to by name instead of by magic numbers.
<P>
<P>
Delete or comment out the following lines of code:
<P>
<PRE>   If cstr(Request.QueryString("CustomerID")) &lt;&gt; "" Then
     rs.Fields("CustomerID").Value = Request.QueryString("CustomerID")
   End If

</PRE>The above lines of code need to be deleted because CustomerID is an
AutoNumber primary key and will generate an error if an attempt is made to
manually update the field. Microsoft Access, by default, exports the above
code, so it will need to be removed or commented out.
<P>
<P>
Inside the frmCustomers.asp file locate the following lines of code:
<P>
<PRE>   tempVar = Request.QueryString("nav_btn")
   On Error Resume Next


</PRE>Add the following ASP code below immediately after the On Error Resume Next
statement:
<P>
<PRE>   If cstr(tempVar) = "nav_cbo_Customers" Then
     Dim strRecordsetCustomerID
     Dim strQueryStringCustomerID
     strQueryStringCustomerID = cstr(Request.QueryString("Customer_ID"))
     rs.MoveFirst
     For i = 1 To rs.RecordCount
       strRecordsetCustomerID   = cstr(rs("CustomerID"))
       If strRecordsetCustomerID &lt;&gt; strQueryStringCustomerID Then
         rs.MoveNext
    If rs.EOF Then
      rs.MovePrevious
      If rs.BOF Then
        rs.AddNew
      End If
    End If
       Else
         Exit For
       End If
     Next
   End If

</PRE>When the user selects an item in the combo box, a QueryString is set up
with two elements. The first element in the QueryString is called 'nav_btn'
and its value is set the name of the control selected by the user.  The
second element in the QueryString is called 'CustomerID' and its value is
set to the bound column of the combo box, which is the CustomerID of the
selected item. The returned 'CustomerID' value from the QueryString is then
compared record by record to the values in the recordset until a matching
record is found or the end of the recordset is reached.
<P>
<P>
Locate the &lt;OBJECT&gt; tag at the bottom of the frmCustomers.asp file and
replace the VALUE attribute with the following code:
<P>
<PRE>   VALUE="<B>http://&lt;%=</B> Session("URLPathInfo") %&gt;frmCustomersalx.asp"&gt;


</PRE>Back at the top of the code, find the closing &lt;/HEAD&gt; tag and insert the
following code just before it:
<P>
<PRE>   &lt;%
   Sub HandleError()
     Response.Write("Error Source: " &amp; Err.Source &amp; "&lt;br&gt;")
     Response.Write("Error Number: " &amp; Err.Number &amp; "&lt;br&gt;")
     Response.Write("Error Description: " &amp; Err.Description &amp; "&lt;br&gt;")
     Err.Clear
   End Sub
   %&gt;

</PRE>The above code allows the error checking code to be used below. Locate
the 'nav_btn_MoveCancelUpdate' line and insert the following line of
code after 'rs.CancelUpdate':
<P>
<PRE>   If Err.Number &lt;&gt; 0 Then HandleError

</PRE>This allows the error being generated by the rs.CancelUpdate to be
displayed. The rs.CancelUpdate will raise an error execpt in one
case; when the user clicks AddNew and then decides they don't want to
add a new record and immediatley clicks 'Cancel.' In this situation the
rs.CancelUpdate cancels the update and restores the recordset to the
state prior to the AddNew command.
<P>
At other times when the statement is executed there have been no changes
to the server side recordset.  The rs.Resync requeries the underlying
recordset and returns it to the client displaying the first record, which
makes it appear to the client that the changes were cancelled. In reality
no changes were ever made to the underlying recordset.
<P>
<P>
<P><h3>Step Six: Modify frmCustomersalx.asp file</h3>
 
<P>
Open the frmCustomersalx.asp file and locate the following line:
<P>
<PRE>   Set tempRS = Session("RS_frmCustomers_cboCustomers")

</PRE>Add the statement 'tempRS.Requery' immediately after it.
<P>
This requeries the recordset so added records are visible in the
combo box.
<P>
<P>
Locate the frmCustomersalx_OnLoad procedure:
<P>
<PRE>   Sub frmCustomersalx_OnLoad()
      cboCustomers.list = cboCustomers_tempList
   End Sub

</PRE>Edit the procedure adding the three lines of code shown below:
<P>
<PRE>   Sub frmCustomersalx_OnLoad()
     txtCustomerID.Locked   = True
     txtCustomerID.TabStop  = False
     cboCustomers.ListWidth = 150
     cboCustomers.list = cboCustomers_tempList
   End Sub

</PRE>Locked and TabStop are run-time properties that determine if the control
can be edited and receive tab focus respectively. ListWidth is a run-time
property that determines the width of the drop-down list for the combo box.
Depending on the number of columns displayed the width will need to be
adjusted accordingly.
<P>
<P>
Locate the nav_btn_MoveFirstRecord_Click event procedure, and just above
it, copy the cboCustomers_Click event procudure listed here:
<P>
<PRE>   Sub cboCustomers_Click()
    Call AddCtrlToList("cboCustomers", "Customer_ID")
    Window.Location.Href = "<B>http://</B>" &amp; _
          "&lt;%= Session("URLPathInfo") %&gt;" &amp; _
   frmCustomers.asp?nav_btn=nav_cbo_Customers&amp;"&amp; _
          GetCtrlQueryString()
   End Sub

</PRE>For each of the Click event procedures modify the URL path being assigned
to Window.Location.Href from:
<P>
<PRE>   ...Href = "frmCustomers.asp?...

</PRE>To:
<P>
<PRE>   ...Href = "<B>http://&lt;%=</B> Session("URLPathInfo") %&gt; "frmCustomers.asp?...

</PRE>Locate the &lt;OBJECT&gt; tag for the cboCustomers object and edit the following
line of code from:
<P>
<PRE>   &lt;PARAM NAME="Width" VALUE="0;n;n;"&gt;

</PRE>To:
<P>
<PRE>   &lt;PARAM NAME="Width" VALUE="0;2500;"&gt;

</PRE>Note: The Width parameter controls the width of the columns.
<P>
<P><h2>REFERENCES</h2>
 
<P>
<B><A HREF="http://microsoft.com/accessdev/accfeat/mar97feat.htm#asp">http://microsoft.com/accessdev/accfeat/mar97feat.htm#asp</A></B>
<P>
For the latest Knowledge Base articles and other support information on
Visual InterDev and Active Server Pages, see the following page on the
Microsoft Technical Support site:
<P>
<PRE>   <B><A HREF="http://support.microsoft.com/support/vinterdev/">http://support.microsoft.com/support/vinterdev/</A></B>

</PRE> 
<PRE>Keywords          : VIASP VIMisc
Technology        : internet
Version           : WINDOWS:1.0,7.0,97; WINDOWS NT:1.0b
Platform          : NT WINDOWS
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 11, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
