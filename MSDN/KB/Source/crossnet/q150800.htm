

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Domain Browsing with TCP/IP and LMHOSTS Files </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q150800">
<META NAME="KBModify" CONTENT="1997/04/30">
<META NAME="KBCreate" CONTENT="1996/08/28">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; crossnet">
<META NAME="Description" CONTENT="  In TCP/IP-based networks involving routers and multiple segments, it is generally recommended that you implement WINS for name resolution and browsing support. However, as an alternative to WINS, it is possible to have full domain browsing by using...">
<META NAME="Product" CONTENT="Networking Issues">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA9A,QBWO,QBW3,QBWP,QBWT,QAE1,QAUJ,QARL,QBWD,QAMA,QANN,QBVV,QDL9,QBWN,QAGI V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Domain Browsing with TCP/IP and LMHOSTS Files</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 30, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q150800</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
3.11 3.11b 3.50 3.51 4.00 95
WINDOWS
<P>
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Windows NT Workstation versions 3.5, 3.51 and 4.0
<LI>Microsoft Windows NT Server versions 3.5, 3.51 and 4.0
<LI>Microsoft Windows 95
<LI>Microsoft Windows for Workgroups version 3.11
<LI>Microsoft TCP/IP-32 for Windows for Workgroups version 3.11b
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In TCP/IP-based networks involving routers and multiple segments, it is
generally recommended that you implement WINS for name resolution and
browsing support. However, as an alternative to WINS, it is possible to
have full domain browsing by using only LMHOSTS files on all computers,
although there are some limitations that will be discussed in this article.
<P>
In either case, it is important to note that a client will only participate
in domain browsing when the client is using a workgroup name that is
equivalent to the domain name (WorkgroupName = DomainName). Windows NT
computers can also "join" the domain to gain this functionality, instead of
being in a workgroup.
<P>
This functionality of LMHOSTS-based domain browsing (over routers) has not
been formally documented or tested by Microsoft, and may not be available
in future versions of the client and server operating systems. Use this
information with discretion.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
"Browsing" in a Microsoft network should be considered a distributed
service provided by one or more computers. Each computer can fall into
several browser roles; however, this article will focus on the two most
important ones:

<UL><LI>Segment master browser (SegMB): This can be any Windows NT Server,
   Workstation, or domain controller. It can also be a Windows 95 or
   Windows for Workgroups 3.11 computer. It is responsible for maintaining
   a browse list of the computers on its local segment, forwarding that
   list to the domain master browser, and requesting the domain browse list
   from the domain master browser. The SegMB will merge the domain list
   with its local list, and make that list available to any local client
   that requests it.

<LI>Domain master browser (DomMB): This is the Windows NT primary domain
   controller (PDC). It is responsible for maintaining the browse list on
   its local segment (like a SegMB), as well as collecting browse lists
   from other (remote) segment master browsers with the same domain name
   (or WorkgroupName = DomainName). The DomMB will merge the lists it
   collects, along with its local list, then redistribute the combined list
   back to all the remote SegMBs. Thus it is the central hub for
   maintaining the domain-wide browse list.
<P>
</UL>NOTE: The Windows for Workgroups browser requires updated files. For more
information, please see the following articles in the Microsoft Knowledge
Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../CROSSNET/Q147795.htm">Q147795</A></B>
   TITLE     : Windows for Workgroups Can Share Windows NT Domain Browse
               List

   ARTICLE-ID: <B><A HREF="../WINNT/Q102878.htm">Q102878</A></B>
   TITLE     : Information on Browser Operation

</PRE>In order for this distributed browse service to work, the SegMBs need a way
to determine exactly who the DomMB is. They can determine this by locating
the computer that has registered the NetBIOS name "Domain&lt;1b&gt;", because
that is only registered by the PDC (which will also be the DomMB, as noted
above). For more information, please see the following article in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../WINNT/Q119495.htm">Q119495</A></B>
   TITLE     : List of Names Registered with WINS Service


</PRE><h3>Domain Browsing with WINS</h3>
 
<P>
In a WINS environment, a SegMB would query WINS to determine who registered
Domain&lt;1b&gt;. In this case WINS acts as a convenient central resource for
this information. There is one more benefit in having WINS to assist
browsing: multi-domain browsing.
<P>
<P><h3>Multi-Domain Browsing with WINS</h3>
 
<P>
A PDC that is set up to query WINS will periodically request the list of
all domains that are registered in the database. (A domain is identified by
a "Domain&lt;1b&gt;" registration in the database, and the associated IP address
of the PDC that registered it.) The PDC will combine this with its own
domain browse list, and thus has a complete list of computers in its
domain, as well as a list of other domains, all across the WAN. When the
PDC then interacts with its SegMB's, it gives them this complete list. You
then see the effect of this when you browse the network using File Manager
or Network Neighborhood.
<P>
NOTE: That is the extent of WINS involvement with browsing. It is not
involved in the browser election process, nor with helping a client
determine who its local segment master browser is, nor with helping the
DomMB determine who the SegMBs are; that is done in the process when the
SegMB first contacts the DomMB.
<P>
In certain networks it may not be valuable to use WINS; this can only be
determined on a case-by-case basis. You can then use either LMHOSTS or DNS
to resolve computer names; however, LMHOSTS will be required for domain
browsing, as well as other domain management issues such as database
replication and domain secure channels.
<P>
<P><h3>Domain Browsing with LMHOSTS</h3>
 
<P>
Without WINS, you will need special LMHOSTS entries that designate who all
the domain controllers are. This is done in the following convention:
<P>
<PRE> 199.199.199.1  ComputerName   #PRE  #DOM:DomainName

</PRE>When a computer is booted, it will read these entries and store them
permanently in the NetBIOS name cache until the computer is powered down.
(Because of this, it is best that these entries are last in the LMHOSTS
file, for subsequent LMHOSTS parsing efficiency.) All computers in the
domain will need one of these entries for each domain controller (in the
local domain), as well as one for the PDC. Also note the exact order of
#PRE #DOM, and that they are capitalized. The other names are not case
sensitive.
<P>
<P><h3>Windows NT Segment Master Browsers</h3>
 
<P>
Having the above entries will be sufficient for a Windows NT computer: Upon
becoming a Segment Master Browser, a Windows NT computer determines who the
PDC is by sending a query (using the NetGetDcName API) to all LMHOSTS
entries with the #DOM:&lt;localdomain&gt; designation. Only the PDC will respond.
The Windows NT computer then contacts the PDC, informs the PDC that it is a
master browser, then continues the process of getting the domain browse
list. The PDC then contacts the Windows NT computer to get its local
segment browse list. This process repeats every 12 to 15 minutes.
<P>
<P><h3>Windows 95 and Windows for Workgroups Segment Master Browsers</h3>
 
<P>
These do not perform the NetGetDcName API, so they need entries in the
LMHOSTS file that indicate who the PDC is. Assuming the example above is
the PDC of the domain, you would have two entries for a Windows 95 or
Windows for Workgroups client:
<P>
<PRE> 199.199.199.1  controller1   #PRE  #DOM:domainname
 199.199.199.1  "domainname,,,,,\0x1b"  #PRE

</PRE>The first entry allows the PDC to act as a logon domain controller for the
client, the second entry allows the client browser service to explicitly
find the PDC. Remember you will probably have multiple lines similar to the
first line (for multiple domain controllers), but only one line with the
\0x1b directive (to designate the PDC). Note that the domain name must be
in quotes, and padded with spaces for a total of 15 characters before the
\0x1b portion. (The example above shows commas for visual placeholders,
however in a real LMHOSTS file these commas would be replaced with spaces).
Also be aware that moving the PDC role to another Windows NT Server (via
promotion)
will cause your \0x1b entry to be invalid. Options to fix this:

<UL><LI>Switch IP addresses on the controllers, so effectively the PDC always
</UL>has the same address. You would not need to change anything in the LMHOSTS
file.

<UL><LI>Change the \0x1b IP address in all the LMHOSTS files on the clients, or
</UL>on the centrally distributed LMHOSTS file (if you are implementing that).
<P>
<P><h3>Note About NetBIOS Names</h3>
 
<P>
Every NetBIOS name is a full 16 characters in length; the first 15 are user
definable (or padded with spaces), and the 16th character is reserved to
identify the network service that registered the name.  The most familiar
example of a NetBIOS name is the ComputerName on any Microsoft networking
client.  When the client is booted, various client network services will
register the ComputerName along with their unique extension, such as
ComputerName&lt;00&gt; (workstation service), and ComputerName&lt;20&gt; (server
service).  In this case, the only difference between these two names is the
16th character - and that does make them individually identifiable.  A
client can register all of its names by broadcast, and by direct datagram
to WINS, depending on the client node type. Other companies may also
register NetBIOS extensions that are not reserved by Microsoft. For more
information, please see the following articles in the Microsoft Knowledge
Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../CROSSNET/Q119493.htm">Q119493</A></B>
   TITLE     : NetBIOS over TCP/IP Name Resolution and WINS

   ARTICLE-ID: <B><A HREF="../WINNT/Q119495.htm">Q119495</A></B>
   TITLE     : List of Names Registered with WINS Service

</PRE><h3>LMHOSTS Example</h3>
 
<P>
Your domain name is "Globe", your PDC NetBIOS name is "Mongo", and you have
other various backup domain controllers.  Your LMHOSTS file would look like
this:
<P>
<PRE> 199.199.199.1   "globe          \0x1b"  #PRE
  199.199.199.1   mongo      #PRE  #DOM:globe
  199.199.199.2   otherdc1   #PRE  #DOM:globe
  199.199.199.3   otherdc2   #PRE  #DOM:globe

</PRE>To verify that you've entered these correctly, open a command window (DOS
prompt) and look at your NetBIOS cache:
<P>
<PRE> c:\&gt; nbtstat -c

 NetBIOS Remote Cache Name Table

     Name              Type       Host Address    Life [sec]
 ------------------------------------------------------------
 globe          &lt;1B&gt;  UNIQUE      199.199.199.1       -1
 MONGO          &lt;03&gt;  UNIQUE      199.199.199.1       -1
 MONGO          &lt;00&gt;  UNIQUE      199.199.199.1       -1
 MONGO          &lt;20&gt;  UNIQUE      199.199.199.1       -1
 OTHERDC1       &lt;03&gt;  UNIQUE      199.199.199.2       -1
 OTHERDC1       &lt;00&gt;  UNIQUE      199.199.199.2       -1
 OTHERDC1       &lt;20&gt;  UNIQUE      199.199.199.2       -1
 OTHERDC2       &lt;03&gt;  UNIQUE      199.199.199.3       -1
 OTHERDC2       &lt;00&gt;  UNIQUE      199.199.199.3       -1
 OTHERDC2       &lt;20&gt;  UNIQUE      199.199.199.3       -1

</PRE>TIP: the &lt;1B&gt; entry will not show up if you do not have exactly 15
characters in the name, or if you do not use quotes, or if you enter the
forward slash "/0x1b" (as opposed to "\0x1b").
<P>
<P><h3>Multi-Domain Browsing with LMHOSTS</h3>
 
<P>
It is important to note that the main drawback to LMHOSTS browsing is that
it does not provide the automatic ability of multi-domain browsing.  As
previously mentioned, the PDC will query WINS for a list of remote domains
and include that information in its browse list.  However, the PDC will not
parse the LMHOSTS file for the same information, nor will it include other
\0x1b entries with the #PRE (cache) directive.  Effectively, if your PDC
does not query WINS, you will not see other domains through File Manager or
Network Neighborhood.  However, you can still browse other domains
manually, (provided that you know the domain name and that you have special
entries in your LMHOSTS file), and there is still a chance that you may
browse remote domains based on broadcasts.
<P>
Manual Method: this is accomplished by including a \0x1b entry for the PDC
of any remote domain you want to browse.  This technique applies to Windows
NT, Windows 95, and Windows for Workgroups. It is effective because of the
following sequence of events, necessary for remote domain browsing:

<OL><P><LI>The client determines who the PDC is of the remote domain via the
   domain&lt;1b&gt; name (for LMHOSTS this is done by having the \0x1b entry;
   for WINS it would be via query).
</OL>2. The client sends a GetBackupList API request to the remote PDC
3. The remote PDC responds with a list of up to three master browsers,
<PRE>   potentially including itself.
</PRE></OL>4. The client sends a NetServerEnum API request to one of the master
<PRE>   browsers
</PRE>5. The master browser responds with his domain-wide browse list.
<P>
The "manual way" of getting this browse list is via a command window:
<P>
<PRE>     For WinNT computers:      c:\net view  /domain:&lt;domainname&gt;
     For Win95 and WFW:        c:\net view  /workgroup:&lt;domainname&gt;

</PRE>Broadcast Method: This works in the case of any network segment that has
members of multiple domains.  There will be a SegMB of each domain on the
"mutual" segment, and each SegMB will announce its domain via broadcast to
a special NetBIOS name &lt;01&gt;&lt;02&gt;_MSBROWSE_&lt;02&gt;&lt;01&gt;.  This broadcast packet
includes the domain name and the computer name of the SegMB that announced
it.
<P>
The SegMBs of other domains (on this mutual segment) will listen for this
information, and add it to their local browse list.  A SegMB on this
segment has now "discovered" other domains, and will send the discovered
information to: the DomMB of his domain, and to local clients (in his
domain) that request a browse list.
<P>
A client will request the local domain browse list (from a local SegMB) and
see the discovered domains in File Manager and Network Neighborhood.  When
the client selects the discovered domain, he will actually request a browse
list directly from the SegMB that made the announcement in the
&lt;01&gt;&lt;02&gt;_MSBROWSE_&lt;02&gt;&lt;01&gt; packet.  Furthermore, since this information was
also sent to the client's DomMB, it will be propagated to SegMB's on other
segments that are part of this domain.
<P>
Clients on a remote segment can now leverage this information, and browse
the remote domain even though there is no remote domain member on their
segment.  However, this process is very volatile using LMHOSTS files,
because you are dependent on the "discovered remote SegMB's" still being
active.  In a WINS environment, this remote browsing feature is much more
stable because WINS provides information about the remote domains to your
PDC.
<P>
Things to consider:

<UL><LI>For domain logon and domain browsing to work via LMHOSTS, all computers
</UL>will require an LMHOSTS file that includes entries for all domain
controllers and proper \0x1b entries, and the PDC will require an entry for
each remote segment master browser (if they are not already listed).

<UL><LI>Most likely every WAN computer will be listed. This could be done most
</UL>efficiently by having one common LMHOSTS file that is distributed to all
clients and servers; however, you must keep it updated with all proper IP
address changes, and that could become an administrative burden.

<UL><LI>Seeing a computer in the browse list does not imply you can connect to
</UL>it.  If it is on your local segment, you can connect via broadcast; if it
is on a remote segment, you will need an LMHOSTS entry for it.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory:<BR>
KBSubcategory:<BR>
Additional reference words: 3.11 3.11b 3.50 3.51 95 winnt windows95<BR>
Version             : 3.11 3.11b 3.50 3.51 4.00 95<BR>
Platform            : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 30, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
