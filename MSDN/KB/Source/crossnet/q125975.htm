

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Automating Remote RAS Logons Using SWITCH.INF Scripts </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q125975">
<META NAME="KBModify" CONTENT="1996/12/10">
<META NAME="KBCreate" CONTENT="1995/02/09">
<META NAME="Keywords" CONTENT="kbnetwork kb3rdparty">
<META NAME="KBArea" CONTENT="Support; KB; crossnet">
<META NAME="Description" CONTENT="                                    SUMMARY                                    =======  You can use the SWITCH.INF file (or PAD.INF for X.25 networks) to automate the log on process to intermediary or remote third-party devices, instead of using the ...">
<META NAME="Product" CONTENT="Networking Issues">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QDNQ,QBWO,QAHE,QAKR,QBWP,QAB5,QAB9,QDL9,QBWQ,QBWN,QANN,QBXT,QBV8,QBVV,QA5V V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Automating Remote RAS Logons Using SWITCH.INF Scripts</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 10, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q125975</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows for Workgroups version 3.11
<LI>Microsoft Windows NT operating system version 3.1
<LI>Microsoft Windows NT Advanced Server version 3.1
<LI>Microsoft Windows NT Workstation versions 3.5, 3.51, and 4.0
<LI>Microsoft Windows NT Server versions 3.5, 3.51, and 4.0
</UL> 
<P>
<PRE>                                   SUMMARY
                                   =======

</PRE>You can use the SWITCH.INF file (or PAD.INF for X.25 networks) to automate
the log on process to intermediary or remote third-party devices, instead
of using the manual RAS Terminal screen. SWITCH.INF was designed for
automated communication with non-X.25 devices, such as intermediary, third-
party security devices, or in Windows NT RAS 3.5 or later, Internet access
providers (which usually require user identification before access to the
Internet is permitted).
<P>
All of the information pertaining to SWITCH.INF scripting also applies to
PAD.INF scripting. However, PAD.INF supports a few more features and has a
few more requirements that are not the subject of this article.
<P>
None of the information in this article applies to Windows 95, because it
does not support the script language used in the SWITCH.INF and PAD.INF
files. Therefore, the SWITCH.INF and PAD.INF files do not exist on Windows
95.
<P>
To get support for scripting under Windows 95, obtain Windows 95 Service
Pack 1 (SP1). In the Admin directory of SP1 you can find the scripting tool
Script.exe. The Admin directory also contains the Script.doc file that
describes the commands and syntax of that script language.
<P>
Note: Windows 95 was not tested with X.25 dial-up and therefore is not
supported as an X.25 client, however, it may work.
<P>
Note: Windows NT 4.0 supports the script language used in SWITCH.INF and
PAD.INF as well as the Windows 95 script language.
<P>
<PRE>                                 LIMITATIONS
                                 ===========

</PRE>RAS versions prior to 3.1 do not support SWITCH.INF scripting. However, you
may be able to obtain the same functionality by using the PAD.INF file with
RAS version 1.1x. For more information, refer to the "Using Scripts with
Other Microsoft RAS Clients" section below.
<P>
PAD.INF was designed for X.25 connectivity. Although using PAD.INF with non-
X.25 networks may work, it has not been tested by, and is not supported by
Microsoft. Before using PAD.INF on non-X.25 networks, study the syntax,
structure, and common command lines in the PAD.INF file that ships with
RAS. Also, refer to your RAS manuals on X.25 connectivity.
<P>
All of the information in this article applies to all RAS versions that
have PAD.INF file support. However, the syntax is different for the RAS
version 1.1x. Refer to your RAS version 1.1x PAD.INF, RAS manual, and
release notes for more information.
<P>
<PRE>                           CREATING SCRIPTS FOR RAS
                           ========================

</PRE>The SWITCH.INF file is like a set of small batch files or scripts, all
contained in one file. A SWITCH.INF script can contain six elements: a
section header, comments, commands, responses, response keywords, and
reserved macro keywords.
<P>
In addition to dividing the SWITCH.INF file into individual scripts,
section headers start the scripts. Comment lines are used to document the
script. Any other line in a script is either a command or a response. A
command is issued from the local RAS client. A response is received from
the remote device or computer.
<P>
To write an automatic script for your RAS client you must know the required
commands and corresponding responses for the intermediary device. The
commands and responses must be in the exact order that the device expects
to encounter them.
<P>
Branching statements, such as GOTO or IF command, are not supported by the
SWITCH.INF and PAD.INF script language. The required sequence of commands
and responses from intermediary devices should be in the device
documentation. If you are connecting to a commercial service, the required
sequence of commands and responses should also be available from the
service support staff.
<P>
The SWITCH.INF file can contain scripts for each intermediary device or
online service that the RAS user calls. The scripts are activated by
configuring Remote Access Phonebook entries as described below in the
"Activating SWITCH.INF Scripts" section.
<P>
<P><h2>SECTION HEADERS</h2>
 
<P>
A section header marks the beginning of a script, is enclosed in square
brackets, and cannot exceed 31 characters. For example:
<P>
<PRE>   [Route 66 Login]

</PRE>Each script requires one section header. The section header appears in the
RAS Phonebook field allowing you to select RAS Terminal or any other
SWITCH.INF script. For more information, see the "Activating SWITCH.INF
Scripts" section below.
<P>
<P>
<P><h2>COMMENTS</h2>
 
<P>
Comment lines are preceded by semicolons (;) in the left most margin
(column one), are optional, and can be placed anywhere in the file. For
example:
<P>
<PRE>   ; This script was created by Patrick on September 29, 1995

</PRE><h2>COMMANDS</h2>
 
<P>
A command comes from the local computer. A response comes from the remote
device or computer. The COMMAND= statement, which can be used in three
different ways, is used to send commands to the intermediary device.
<P>
NOTE: Use upper case for all SWITCH.INF commands.
<P>
<P><h3>COMMAND=</h3>
 
<P>
COMMAND= by itself causes an approximate two second delay, depending on CPU
speed and the presence of caching software (for example, SMARTDRV.EXE).
If the intermediary device cannot process all of the characters on a
COMMAND=&lt;CustomString&gt;&lt;cr&gt; line (because they are sent at once), use
multiple COMMAND= statements.
<P>
<P><h3>COMMAND=&lt;CUSTOM STRING&gt;</h3>
 
<P>
COMMAND=&lt;custom string&gt; sends the custom string and causes a slight delay
of several hundred milliseconds (depending on CPU speed and installed
caching software). The delay gives the intermediary device time to process
the custom string and prepare for the next command.
<P>
<P><h3>COMMAND=CUSTOM STRING &lt;cr&gt;</h3>
 
<P>
COMMAND=&lt;custom string&gt;&lt;cr&gt; sends the custom string immediately.
<P>
Consult the remote device documentation to determine which strings are
required.
<P>
<P><h2>RESPONSES</h2>
 
<P>
Each command line is followed by one or more response lines. Consult the
remote device documentation to determine which response strings and dialogs
are expected by the remote device. RAS compares responses received with
what you put on the response lines. If it matches, RAS uses the response
related keyword and macro.
<P>
<P><h2>RESPONSE KEYWORDS</h2>
 
<P>
The keyword in a response line specifies what your RAS client does with the
responses it receives from the remote computer.
<P>
The response strings your RAS client receives from the remote device or
online service can be used with one of the following keywords in response
lines:
<P>
<P><h3>OK= remote_device_response &lt;macro&gt;</h3>
 
<P>
The OK keyword indicates that RAS can execute the next script line if the
condition on the right side of the equal sign is met.
<P>
<P><h3>LOOP= remote_device_response &lt;macro&gt;</h3>
 
<P>
The LOOP keyword indicates to RAS to wait for a response that matches the
condition to the right of the equal sign and if that condition is met to
wait for the same response again. If a response does not meet the condition
on the right side of the equal sign RAS executes the next line.
<P>
<P><h3>CONNECT= remote_device_response &lt;macro&gt;</h3>
 
<P>
This keyword is used near the end of the script to indicate the end of the
script.
<P>
<P><h3>ERROR_NO_CARRIER= remote_device_response &lt;macro&gt;</h3>
 
<P>
This keyword is used to test for the presence of a carrier. Intermediary
devices report their presence in different ways.
<P>
<P><h3>ERROR_DIAGNOSTICS= remote_device_response &lt;macro&gt;</h3>
 
<P>
This keyword can be used in conjunction with the &lt;Diagnostics&gt; macro to
allow RAS to display a message box containing a problem cause and
diagnostic information.
<P>
These response related keywords are usually clustered, but do not have to
be. CONNECT= is usually the last line, unless it is followed by an ERROR_
line. For example:
<P>
<PRE>   CONNECT=&lt;match&gt;" CONNECT"
   ERROR_NO_CARRIER=&lt;match&gt;"NO CARRIER"
   ERROR_DIAGNOSTICS=&lt;cr&gt;&lt;lf&gt;&lt;Diagnostics&gt;
   ERROR_DIAGNOSTICS=&lt;lf&gt;&lt;cr&gt;&lt;lf&gt;&lt;Diagnostics&gt;

</PRE><h3>NORESPONSE</h3>
 
<P>
The RAS client always expects a response from the remote device. The client
waits until a response is received unless a NoResponse statement follows
the COMMAND= line. If there is no statement for a response following a
COMMAND= line, the COMMAND= line still executes, but the script does not
execute any further.
<P>
<P><h3>RESERVED MACRO KEYWORDS</h3>
 
<P>
The following table explains the function of each reserved macro keyword:
<P>
<PRE>   Macro           Function
   -----------------------------------------------------------------------

   &lt;cr&gt;            Inserts a carriage return.

   &lt;lf&gt;            Inserts a line feed.

   &lt;match&gt;         Reports a match if the string enclosed in quotation
                   marks is found in the device response. For example,
                   &lt;match&gt;"Smith" matches Jane Smith and John Smith III.

   &lt;?&gt;             Inserts a wildcard character. For example, CO&lt;?&gt;&lt;?&gt;2
                   matches COOL2 or COAT2, but not COOL3.

   &lt;hXX&gt;           Allows any hexadecimal character to appear in a string
                   including the zero byte, &lt;h00&gt;.
                   NOTE: XX represents hexadecimal digits.

   &lt;ignore&gt;        Ignores the rest of a response from the macro. For
                   example, &lt;cr&gt;&lt;lf&gt;CONNECTV-&lt;ignore&gt; reads the following
                   responses as the same: "crlfCONNECTV-1.1" and
                   "crlfCONNECTV-2.3."

                   If a lot of information is ignored, like a large welcome
                   banner, RAS might time out and move on to the next
                   script line. This usually causes problems. To avoid this
                   problem, use multiple pairs of COMMAND= followed by
                   OK=&lt;ignore&gt; to force RAS to wait longer and ignore
                   additional response stings. For example:

                      COMMAND=
                      OK=&lt;ignore&gt;

                      COMMAND=
                      OK=&lt;ignore&gt;

   &lt;diagnostics&gt;   This macro function can be used in conjunction with the
                   ERROR_DIAGNOSITICS= keyword macro to allow RAS to
                   display a message box containing a problem cause and
                   diagnostic information.


                       ACTIVATING SWITCH.INF SCRIPTS
                       =============================

</PRE>You can configure a RAS entry to run a SWITCH.INF script before dialing,
after dialing, or both. For example, to automate the task of logging onto a
remote host, create the script in the SWITCH.INF file and then configure
the RAS entry to use the created script after dialing.
<P>
To activate a script in Windows NT and Windows for Workgroups version 3.11:

<OL><P><LI>Run Remote Access and select an entry.

<P><LI>Choose the Edit button.

<P><LI>If the Security button is not available, choose the Advanced button.

<P><LI>Choose the Security button. (In Windows NT 3.1 and Windows for
   Workgroups 3.11 the button is labeled Switch).

<P><LI>In the After Dialing box, select the name of the script. The section
   header in the SWITCH.INF file is what appears as the name of the script.
   (In Windows NT 3.1 and Windows for Workgroups 3.11 this box is labeled
   Post-Connect).

<P><LI>Choose the OK button until you return to the main Remote Access Screen.
<P>
</OL>When you dial this entry, the selected script runs after RAS dials
and connects to the remote host.
<P>
<P>
<PRE>          Troubleshooting Scripts using DEVICE.LOG and RAS Terminal
          =========================================================

</PRE></OL>Before writing scripts to automate the process of logging onto an
intermediary device, use the RAS Terminal feature to familiarize yourself
with the logon sequence of events. For more information on activating the
RAS Terminal feature, refer to the "Configuring Windows RAS to Use RAS
Terminal After Dialing" section below.
<P>
To find errors that prevent your scripts from working, log all information
passed between RAS, the modem, and the intermediary device (including
errors reported by the intermediary device) by turning on logging.
<P>
After you enable logging, the DEVICE.LOG file is created (when you start
RAS) in the Windows NT %systemroot%\SYSTEM32\RAS subdirectory or the of
Windows for Workgroups \WINDOWS directory.
<P>
If an error is encountered during script execution, execution halts.
Determine the problem by looking at any RAS error messages you receive and
by looking at  the DEVICE.LOG file. Make necessary corrections to the
script and then restart RAS.
<P>
The DEVICE.LOG file appends any communication as long as RAS is not
restarted. If you restart RAS, the DEVICE.LOG file is erased and re-
created. Therefore, if you make changes to SWITCH.INF during your script
development that require you to restart RAS, and you wish to save the
current traces contained in the DEVICE.LOG file, rename the DEVICE.LOG file
before starting RAS again.
<P>
<P>
<PRE>                ENABLING LOGGING AND CREATING A DEVICE.LOG FILE
                ===============================================

</PRE>To enabling logging and creating a DEVICE.LOG file under Windows NT:
<P>
WARNING: Using Registry Editor incorrectly can cause serious, system-wide
problems that may require you to reinstall Windows NT to correct them.
Microsoft cannot guarantee that any problems resulting from the use of
Registry Editor can be solved. Use this tool at your own risk.

<OL><P><LI>Hang up any connections, and exit from Remote Access.

<P><LI>Run Registry Editor (REGEDT32.EXE).

<P><LI>From the HKEY_LOCAL_MACHINE subtree, go to the following key:
<P>
<P><PRE>      SYSTEM\CurrentControlSet\Services\RasMan\Parameters
</PRE>
<P><LI>Change the value of the Logging parameter to 1. For example:
<P>
<P><PRE>      Logging:REG_DWORD:0x1
</PRE><P>
</OL>Logging begins when you restart Remote Access or start the Remote Access
Server service (if your computer is receiving calls). You do not need
to shutdown and restart Windows NT.
<P>
To enabling logging and creating a DEVICE.LOG file under Windows for
Workgroups:

<OL><P><LI>Using a text editor such as Windows Notepad, edit the SYSTEM.INI file.

<P><LI>In the [Remote Access] section, add the following line:
<P>
<P><PRE>      LOGGING=1.
</PRE>
<P><LI>Save the file.
<P>
</OL>The DEVICE.LOG text file is created in the Windows directory when you
restart Windows and RAS.
<P>
<P>
<PRE>          CONFIGURING WINDOWS RAS TO USE RAS TERMINAL AFTER DIALING
          =========================================================

</PRE></OL>To configure a Windows NT RAS 3.5 or later entry to use Terminal after
dialing:

<OL><P><LI>In Remote Access, select an entry.

<P><LI>Choose the Edit button.

<P><LI>If the Security button is not available, choose the Advanced button.

<P><LI>Choose the Security button. (In Windows NT 3.1 and Windows for
   Workgroups 3.11 this button is labeled Switch).

<P><LI>In the After Dialing field, select Terminal. (In Windows NT 3.1 and
   Windows for Workgroups 3.11 this is labeled Post-Connect).

<P><LI>Choose the OK button until you return to the main Remote Access Screen.
<P>
<P>
<PRE>                 CREATING ONE SCRIPT FOR MULTIPLE SITUATIONS
                 ===========================================

</PRE></OL>A company with employees working at different locations may need to provide
employees with the ability to log on to an X.25 service from various
locations. The RAS script language does not provide any IF/ENDIF,
IF/ELSE/ENDIF, or GOTO statements. Therefore, you cannot test for logical
responses or errors received from intermediary devices (such as X.25
providers or third party security hosts) and then branch off to a different
execution path. However, the script language does allow you to catch errors
and display them on the screen using:
<P>
<PRE>   ERROR_DIAGNOSTICS=&lt;cr&gt;&lt;lf&gt;&lt;Diagnostics&gt;

</PRE>To provide a variety of RAS clients with an X.25 or other script you need
to write several scripts to manage all local logon dialog variations. For
example:
<P>
<PRE>   If you have a Windows for Workgroups 3.11 RAS client or Microsoft RAS
   1.1 client, set an environment variable to a value representing the
   local X.25 carrier. Then run a batch file that copies the correct script
   to the file name PAD.INF or SWITCH.INF (depending on the value of the
   environment variable) and then start Windows.

   If you have a Windows NT RAS client, create an icon that runs a similar
   batch file that tests the environment variable and then calls RAS. All
   scripts can be provided on one disk and all the user has to do is copy
   the files to a directory on their hard drive and set the environment
   variable. This can be automated as well to minimize user interaction.


                USING SCRIPTS WITH OTHER MICROSOFT RAS CLIENTS
                ==============================================

</PRE>Microsoft RAS version 1.0 does not have the capability to invoke RAS
Terminal or use scripts in .INF files. Upgrades to RAS 1.1a are free.
Microsoft RAS version 1.1 and 1.1a support only PAD.INF files. The syntax
used in the PAD.INF file differs slightly from subsequent versions of
Microsoft RAS. Microsoft RAS for Windows for Workgroups version 3.11,
Windows NT version 3.1, and Windows NT version 3.5, 3.51, and 4.0 support
RAS Terminal and scripts in SWITCH.INF and PAD.INF files. Windows NT 4.0
supports a new script language in addition to the old one. The new language
is more sophisticated and supports subroutines and If, While, and Goto
statements, and more.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kb3rdparty kbnetwork<BR>
KBSubcategory: ntras ntprotocol<BR>
Additional reference words: prodnt 3.10 3.11 3.50 1.10 1.10a 1.1x 1.x phone<BR>
book
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 10, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
