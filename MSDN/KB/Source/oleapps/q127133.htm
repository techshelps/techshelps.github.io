

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Unable to Pass Boolean Data Type with OLE Automation </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q127133">
<META NAME="KBModify" CONTENT="1996/09/09">
<META NAME="KBCreate" CONTENT="1995/03/13">
<META NAME="Keywords" CONTENT="kbprg kbmacro">
<META NAME="KBArea" CONTENT="Support; KB; oleapps">
<META NAME="Description" CONTENT="  When you use OLE Automation (an OLE service that allows documents to  drive  each other) to control Microsoft Excel, an OLE Automation error may occur.  Note that this error may occur even though the same code works perfectly well from within Micro...">
<META NAME="Product" CONTENT="OLE in Applications">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="OLE ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QAH6,QBXS,QAH7,QAD7,QBS0,QBVH,QAH4,QA9Q,QA2K,QAPN,QAPF,QBWA,QAU3,QANY V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Unable to Pass Boolean Data Type with OLE Automation</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 9, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q127133</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, versions 5.0, 5.0c
<LI>Microsoft Excel for Windows NT, version 5.0
<LI>Microsoft Access version 2.0
<LI>Microsoft Visual Basic, version 3.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When you use OLE Automation (an OLE service that allows documents to
"drive" each other) to control Microsoft Excel, an OLE Automation error may
occur.
<P>
Note that this error may occur even though the same code works perfectly
well from within Microsoft Excel.
<P>
<P><h2>CAUSE</h2>
 
<P>
This problem occurs when you attempt to pass the Boolean value FALSE to
Microsoft Excel. Unfortunately, under OLE Automation, there is no way to
send the Boolean data type to Microsoft Excel. Using OLE Automation to send
the values TRUE or FALSE from one of the applications mentioned at the
beginning of this article results in the following Integer data type values
being passed to Microsoft Excel: TRUE sends the value -1, and FALSE sends
the value 0.
<P>
<P><h2>WORKAROUNDS</h2>
 
<P>
In some cases, you can send an alternative command to Microsoft Excel that
will accomplish the desired result. Below are examples that use the
ExecuteExcel4Macro method instead of the Visual Basic, Applications
Edition, command.
<P>
Microsoft provides examples of Visual Basic procedures for illustration
only, without warranty either expressed or implied, including but not
limited to the implied warranties of merchantability and/or fitness for a
particular purpose. This Visual Basic procedure is provided 'as is' and
Microsoft does not guarantee that it can be used in all situations.
Microsoft does not support modifications of this procedure to suit customer
requirements for a particular purpose.
<P>
<P><h3>Example 1</h3>
 
<P>
The following code assumes Microsoft Excel is already running and that a
workbook is open.
<P>
Instead of using this
<P>
<PRE>   ' Set the Page Setup settings for the active sheet:
   ' Fit to 1 page wide by 1 page tall.
   Set XLObj = GetObject(, "excel.application.5")
   XLObj.ActiveSheet.PageSetup.Zoom = False
   Set XLObj = Nothing

</PRE>use this:
<P>
<PRE>   ' Set the Page Setup settings for the active sheet:
   ' Fit to 1 page wide by 1 page tall.
   Set XLObj = GetObject(, "excel.application.5")
   XLObj.application.ExecuteExcel4Macro "PAGE.SETUP(,,,,,,,,,,,,{1,1})"
   Set XLObj = Nothing

</PRE>Note that you could use TRUE instead of {1,1}, as in the following example:
<P>
<PRE>   XLObj.application.ExecuteExcel4Macro "PAGE.SETUP(,,,,,,,,,,,,TRUE)"

</PRE>Also, to alter the width or height of the Page Setup, use the following
substitutions:
<P>
<PRE>   To set the page for 3 wide by ___ tall, use {3,#N/A}
   To set the page for ___ wide by 3 tall, use {#N/A,3}

</PRE><h3>Example 2</h3>
 
<P>
The following code assumes Microsoft Excel is already running and that a
workbook is open.
<P>
Instead of using this
<P>
<PRE>   'Set the Zoom for the active window to 100%.
   Set XLObj = GetObject(, "excel.application.5")
   XLObj.ActiveWindow.Zoom = False
   Set XLObj = Nothing

</PRE>use this:
<P>
<PRE>   'Set the Zoom for the active window to 100%.
   Set XLObj = GetObject(, "excel.application.5")
   XLObj.application.ExecuteExcel4Macro "ZOOM(FALSE)"
   Set XLObj = Nothing

</PRE><h2>MORE INFORMATION</h2>
 
<P>
Using OLE Automation, it is possible to pass commands to Microsoft Excel
from the other applications listed at the beginning of this article.
<P>
Certain commands in Microsoft Excel behave differently, based on the data
type of the argument passed to the command. One example is the Zoom
property. The Zoom property applies to the Window and PageSetup classes in
Microsoft Excel. This property will behave differently depending upon
whether you send it an integer argument or the Boolean argument FALSE.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbprg kbmacro<BR>
KBSubcategory:
<P>

Additional reference words: 5.00 5.00c
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 9, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
