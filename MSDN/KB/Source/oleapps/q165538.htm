

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Error Message "Argument Not Optional" </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q165538">
<META NAME="KBModify" CONTENT="1997/03/21">
<META NAME="KBCreate" CONTENT="1997/03/20">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; oleapps">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  When you use Automation code in one of the products listed at the beginning of this article to manipulate an Automation server application that uses newer version type libra...">
<META NAME="Product" CONTENT="OLE in Applications">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="OLE ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAPN,QBHQ,QAW6,QAB4,QDKX,QBVP,QAH4,QAHE,QBJZ,QBVV,QAXB,QAPF,QAHT,QAC1 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Error Message "Argument Not Optional"</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 21, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q165538</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access 7.0
<LI>Microsoft Excel for Windows, versions 5.0, 5.0a, 5.0c
<LI>Microsoft Excel for Windows 95, versions 7.0, 7.0a
<LI>Microsoft Visual Basic Standard, Professional, and Enterprise Editions,
   16-bit and 32-bit, for Windows, version 4.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
When you use Automation code in one of the products listed at the beginning
of this article to manipulate an Automation server application that uses
newer version type libraries, such as those found in Microsoft Office 97
products, you may receive the following error message:
<P>
<PRE>   Argument not optional.

</PRE>This article assumes that you are familiar with Visual Basic for
Applications.
<P>
<P><h2>CAUSE</h2>
 
<P>
Versions of Visual Basic for Applications in Microsoft Visual Basic 4.0 and
Microsoft Office 95 Professional only allowed optional arguments that were
of type Variant. Versions of Visual Basic for Applications in Microsoft
Visual Basic 5.0 and Microsoft Office 97 Professional now allow optional
arguments of non-Variant types.
<P>
As an example, the Microsoft DAO 3.5 Object Library contains methods which
include non-Variant optional arguments. Because this is not recognized in
products using older versions of Visual Basic for Applications, these
arguments must be explicitly specified. If omitted, you will receive the
error, "Argument not optional."
<P>
<P><h2>RESOLUTION</h2>
 
<P>
There are two possible resolutions to this behavior:
<P>
<P><h3>Method 1</h3>
 
<P>
When you use earlier version Automation client applications, do not rely on
the newer type libraries for the Automation servers. Instead, reference the
older version type libraries.
<P>
For example, do not reference the Microsoft DAO 3.5 Object Library in
Microsoft Visual Basic 4.0. Instead, reference the Microsoft DAO 3.0 Object
Library. Similarly, if you are using Microsoft Access 7.0, create a
reference to the Microsoft Excel 7.0 Object library and not the Microsoft
Excel 8.0 Object library.
<P>
<P><h3>Method 2</h3>
 
<P>
Explicitly specify all arguments when you execute a method in the new type
libraries. For example, when calling the Update method in the Microsoft DAO
3.5 Object Library, be sure to include values for its two arguments. The
line of code will look similar to the following:
<P>
<PRE>   MyRec.Update dbUpdateRegular, False

</PRE>NOTE: The values dbUpdateRegular and False are the default values for the
Update method. By explicitly including them in the line of code, you will
not receive the "Argument not optional" error message.
<P>
For more information about the Update method, search the Help Index for
"Update method."
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Following are examples of Microsoft Office 97 type libraries that may cause
an error when referenced in earlier version Automation client applications:
<P>
<PRE>   Library Name                              File Name
   ----------------------------------------------------

   Microsoft Access 8.0 Object Library       Msacc8.olb
   Microsoft DAO 3.5 Object Library          Dao350.dll
   Microsoft Excel 8.0 Object Library        Excel8.olb
   Microsoft Graph 8.0 Object Library        Graph8.olb
   Microsoft Office 8.0 Object Library       Mso97.dll
   Microsoft Outlook 8.0 Object Library      Msoutl8.olb
   Microsoft PowerPoint 8.0 Object Library   Msppt8.olb
   Microsoft Word 8.0 Object Library         Msword8.olb

</PRE><h3>Steps to Reproduce Behavior</h3>
 
<P>
The following example demonstrates adding a new record to the Customers
table in the Northwind sample database shipped with Microsoft Access 97,
using the Microsoft DAO 3.5 Object Library.
<P>
Although this example could be used from most earlier version Automation
clients, this example specifically uses Microsoft Visual Basic 4.0 as an
Automation client running code in the Microsoft DAO 3.5 Object Library.

<OL><P><LI>Start Microsoft Visual Basic 4.0 and click New Project on the File menu
   to create a new Visual Basic project.

<P><LI>On the Tools menu, click References. Create a reference to the
   Microsoft DAO 3.5 Object Library, Dao350.dll, and then click OK.

<P><LI>On the Insert menu, click Module to create a new module.

<P><LI>Type the following procedure:
<P>
<P><PRE>      Function AddRec()
<PRE></PRE>         Dim DB as Database
         Dim r as Recordset
         Dim fname as String
         fname = "C:\Program Files\Microsoft Office\"
         fname = fname &amp; "Office\Samples\Northwind.MDB"
         Set DB = OpenDatabase(fname)
         Set r = DB.OpenRecordset("Customers")
         r.AddNew
           r![CustomerID] = "ZZZZZ"
           r![CompanyName] = "Z Test"
         r.Update
         r.Close
         DB.Close
      End Function

</PRE><P><LI>On the Run menu, click "Start with Full Compile." Note that you receive
   the error message on the line of code that executes the Update method.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about creating references to other applications,
search the Help Index for "setting references, to applications."
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 4.00 5.00 5.0a 5.0c 7.00 7.0a libraries Object<BR>
TypeLib Dynamic Link Library DLL OLB TLB OLE Automation VB VBA 8.0 8.0a 97<BR>
Project VBA332.DLL VBA232.DLL<BR>
Version             : 4.0 5.0 5.0a 5.0c 7.0 7.0a<BR>
Platform            : WINDOWS<BR>
Hardware            : x86<BR>
Issue type          : kberrmsg<BR>
Resolution Type     : kbcode<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 21, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
