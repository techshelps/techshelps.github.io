

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Definitions of the OLE 2.0 DLLs </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q108392">
<META NAME="KBModify" CONTENT="1996/09/09">
<META NAME="KBCreate" CONTENT="1993/12/09">
<META NAME="Keywords" CONTENT="kbtool kbref">
<META NAME="KBArea" CONTENT="Support; KB; oleapps">
<META NAME="Description" CONTENT="  Below is a listing of the OLE 2.0 dynamic link libraries (DLLs) that ship with Publisher 2.0 and what each is responsible for within the OLE 2.0 structure.  PUBOLE.DLL  PUBOLE.DLL provides a hierarchical OLE object model and file input/output suppo...">
<META NAME="Product" CONTENT="OLE in Applications">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="OLE ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA2R,QA9Q,QAPN,QDNN,QAW6,QAGI,QAH6,QAY5,QDO1,QBS0,QAH4,QAB9,QBHQ,QAPF,QAJH V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Definitions of the OLE 2.0 DLLs</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 9, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q108392</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Publisher version 2.0, 2.0a
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Below is a listing of the OLE 2.0 dynamic link libraries (DLLs) that ship
with Publisher 2.0 and what each is responsible for within the OLE 2.0
structure.
<P>
<P><h2>PUBOLE.DLL</h2>
 
<P>
PUBOLE.DLL provides a hierarchical OLE object model and file input/output
support that makes OLE 2.0 look more like OLE 1.0 than it otherwise would.
It also isolates much of the "default" OLE 2.0 behavior from the core of
Publisher, where we prefer not to have too much special-case code.
<P>
<P><h2>PUBOLEUI.DLL</h2>
 
<P>
Provides the Insert Object, Paste Special, Edit Links, Update Links,
Convert, and Change Icon dialog boxes. This code originated as OLE sample
code and is shipped in sample-code form with the OLE 2.0x SDK, which should
explain some of its unexpected behavior.
<P>
<P><h2>COMPOBJ.DLL</h2>
 
<P>
This library is the "glue" that holds all of OLE together. COMPOBJ provides
the services that "attach" or "bind" .DLL and .EXE objects to the
application that wants to use them (for example, COMPOBJ binds WORDART2.EXE
to MSPUB.EXE when we create a WordArt2 object) based on the "Global Unique
Identifiers" (guides--those long {"several numbered in the brackets"}
strings in REG.DAT) that are also called CLSIDs (Class Identifiers) and
IIDs (Interface Identifiers).
<P>
<P><h2>OLE2PROX.DLL</h2>
 
<P>
"OLE 2 Proxy DLL" This library marshalls conversations between .EXE
containers (such as Publisher) and .EXE servers (such as WordArt2). Due to
the architecture of Windows, Publisher cannot talk directly with WordArt2
or any other .EXE server by making function calls into it like it can with
.DLL objects; therefore, it instead makes function calls to dummy functions
inside OLE2PROX (Publisher actually doesn't know anything about this, it
simply makes function calls to talk with the object). OLE2PROX routes these
function calls and any data being passed from Publisher through a service
called lightweight remote procedure call (LRPC), which is provided by
COMPOBJ.DLL, and they are therefore transported into the WORDART2 EXE.
<P>
<P><h2>OLE2DISP.DLL</h2>
 
<P>
Provides some OLE Automation helper functions to applications that allow
Visual Basic for Applications to use the application from BASIC.
Specifically, this library gives applications some default behavior (that
is, extremely common code) which has been shown to be useful for the Office
applications, although it may not be useful to Publisher or other
applications in the future. This is not used currently by Publisher, but we
are required to ship it as an OLE 2.0 user.
<P>
<P><h2>OLE2CONV.DLL</h2>
 
<P>
OLE2CONV.DLL provides a conversion function to convert Macintosh PICT
format pictures into Windows metafiles. This is not currently used by
Publisher, but we are required to ship it as an OLE 2.0 user.
<P>
<P><h2>OLE2NLS.DLL</h2>
 
<P>
NLS - National Language Support. OLE2NLS.DLL provides functions for dealing
with unicode strings. These strings can be in multiple-character sets (for
example, Arabic and Chinese) and contain all the information relevant to
their language and their locale. This is not currently used by Publisher,
but we are required to ship it as an OLE 2.0 user.
<P>
<P><h2>STORAGE.DLL</h2>
 
<P>
STORAGE.DLL is used to provide us with a more abstract view of our files.
Instead of looking like a flat stream of bytes on the disk, STORAGE.DLL
lets us look at the file as if it were an entire file system, complete with
subdirectories and files that we can copy, delete, and move. Part of this
structuring is necessary so that we can have a nice place to put OLE
objects (each requires its own subdirectory inside our file), and part of
it is provided to help applications become a bit more compatible. (For
example, we each save our previews in a particular "file" inside our file,
which any application that uses STORAGE.DLL can find and use for previews
in their OpenFile or FindFile dialog boxes.) This structure can also help
applications be more robust and even faster.
<P>
<P><h2>TYPELIB.DLL</h2>
 
<P>
The TYPELIB.DLL file is a collection of type libraries that contain
information, such as properties, methods, procedures, and predefined
constants, about one or more objects which are available via OLE
Automation. For example, the Visual Basic objects and procedures library,
included in every Visual Basic project, is an example of a type library.
<P>
<P><h2>CTL3D.DLL</h2>
 
<P>
The CTL3D.DLL controls the three-dimensional look and feel of objects in
the Windows environment. This file was shipped with Publisher 2.0.
<P>
<P><h2>CTL3DV2.DLL</h2>
 
<P>
The CTL3DV2.DLL replaced the CTL3D.DLL file with the release of Publisher
2.0a.  Like the CTL3D.DLL, it controls the three-dimensional look and feel
of objects in Windows.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbtool kbref<BR>
KBSubcategory:
<P>

Additional reference words: 2.00 mspub ppt publisher powerpoint point power<BR>
macppt winppt works
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 9, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
