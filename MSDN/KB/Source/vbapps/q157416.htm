

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL97: How to Assign a Macro to an ActiveX Worksheet Control </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q157416">
<META NAME="KBModify" CONTENT="1998/02/27">
<META NAME="KBCreate" CONTENT="1996/10/10">
<META NAME="Keywords" CONTENT="kbcode kbprg xlvbahowto xlvbainfo">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel 97, there is no menu command that allows you to assign a macro to an ActiveX control that is on a worksheet. This article provides an example that demonstrates how to create an ActiveX control and assign a macro to the control.  ...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBM8,QAH4,QAMN,QA7O,QAOE,QAB5,QBS0,QBVP,QBWS,QAHV,QA5W,QDIZ,QBJZ,QAF0,QANS P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL97: How to Assign a Macro to an ActiveX Worksheet Control</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 27, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q157416</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Excel 97, there is no menu command that allows you to assign a
macro to an ActiveX control that is on a worksheet. This article provides
an example that demonstrates how to create an ActiveX control and assign a
macro to the control.
<P>
NOTE: If you drag the control to the worksheet from the Forms toolbar, you
can right-click the control and click Assign Macro on the shortcut menu.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft support engineers can help explain the
functionality of a particular macro, they will not modify these examples to
provide added functionality, nor will they help you construct macros to
meet your specific needs. If you have limited programming experience, you
may want to consult one of the Microsoft Solution Providers. Solution
Providers offer a wide range of fee-based services, including creating
custom macros. For more information about Microsoft Solution Providers,
call Microsoft Customer Information Service at (800) 426-9400.
<P>
<P><h3>Creating an ActiveX Control with an Assigned Macro</h3>
 
<P>
To add an ActiveX control to your worksheet and assign a macro to it, do
the following:

<OL><P><LI>Open a new workbook in Microsoft Excel.

<P><LI>If the Control Toolbox toolbar is not visible, point to Toolbars on the
   View menu, and then click Control Toolbox.

<P><LI>Click the Command Button control on the Control Toolbox toolbar and
   draw a command button anywhere on the worksheet.
<P>
</OL>At this point, you are in design mode, which is the time during which no
code is running. This is the mode in which you can make changes to the
properties of the ActiveX control on the worksheet. To verify that you
are in design mode, point to (do not click) Design Mode on the Control
Toolbox toolbar. If the ToolTip for this button is "Exit Design Mode,"
then you are in design mode. If the ToolTip for this button is "Design
Mode," then you are not in design mode. If this is the case, click the
button.

<OL><P><LI>On the Control Toolbox toolbar, click View Code.
<P>
</OL>This step starts the Visual Basic Editor and places the cursor in a new
module sheet with the following code:
<P>
<PRE>   Private Sub CommandButton1_Click()

   End Sub

</PRE><P><LI>Modify the macro so that it looks like the following example:
<P>
<PRE>   Private Sub CommandButton1_Click()

      MsgBox "hello"

   End Sub

</PRE><P><LI>On the File menu, click "Close and Return to Microsoft Excel."
<P>
</OL>You are still in design mode.

<OL><P><LI>Click Exit Design Mode on the Control Toolbox toolbar.

<P><LI>Click the command button you placed on the worksheet in Step 3.
<P>
</OL>A message box that displays "hello" appears.

<OL><P><LI>Click OK.
<P>
</OL><h3>Modifying the Control to Start the Macro When Other Events Occur</h3>
 
<P>
You can change the behavior of ActiveX controls such that the control
starts the macro when events, other than the Click event, occur. For
example, you can start the sample macro when you move the cursor over the
control instead of clicking it. To do this for the control you created in
the previous section, do the following:

<OL><P><LI>Click Design Mode on the Control Toolbox toolbar.

<P><LI>If it is not selected, click the command button you created in step 3 in
   the previous section

<P><LI>Click View Code on the Control Toolbox toolbar.
<P>
</OL>This step activates the Visual Basic Editor. The cursor is on the macro you 
created in the previous section.

<OL><P><LI>In the Procedure list, click MouseMove.

<P><LI>Modify the macro such that it looks like the following example:
<P>
<P><PRE>      Private Sub CommandButton1_MouseMove _
<PRE></PRE>          (ByVal Button As Integer, ByVal Shift As Integer, _
          ByVal X as Single, ByVal Y as Single)

          MsgBox "mouse moved over button"

      End Sub

</PRE><P><LI>On the File menu, click "Close and Return to Microsoft Excel."
<P>
</OL>You are still in design mode.

<OL><P><LI>Click Exit Design Mode on the Control Toolbox toolbar.

<P><LI>Move the pointer over the command button on the worksheet.
<P>
</OL>A message box that displays "mouse moved over button" appears.

<OL><P><LI>Click OK.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about ActiveX controls, click the Index tab in
Microsoft Visual Basic Help, type the following text
<P>
<PRE>   Toolbox

</PRE></OL>and then double-click the selected text to go to the "Toolbox" topic.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: XL97<BR>
Keywords          : kbcode kbprg xlvbahowto xlvbainfo<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 27, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
