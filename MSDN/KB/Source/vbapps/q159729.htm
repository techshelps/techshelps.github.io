

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL97: "255 Characters in Cell" Error when Copying Worksheet </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q159729">
<META NAME="KBModify" CONTENT="1998/03/13">
<META NAME="KBCreate" CONTENT="1996/11/20">
<META NAME="Keywords" CONTENT="xlvbainfo xlui">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  When you copy a worksheet in Microsoft Excel 97, you may receive the following error message:     The sheet you are copying contains cells that have more than 255    characters in them. Copying an entire sheet truncates cells that    contain more t...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA9N,QASB,QAB4,QBS0,QBJQ,QBVP,QDNM,QDNZ,QBVV,QAH4,QBJZ,QAPF,QAFO,QAX6,QAO4 P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL97: "255 Characters in Cell" Error when Copying Worksheet</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 13, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q159729</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When you copy a worksheet in Microsoft Excel 97, you may receive the
following error message:
<P>
<PRE>   The sheet you are copying contains cells that have more than 255
   characters in them. Copying an entire sheet truncates cells that
   contain more than 255 characters.

   To avoid truncation, copy the cells of the source sheet to the
   destination (rather than copying the entire sheet).

</PRE>Cells in the new worksheet are all truncated so that they contain no more
than 255 characters.
<P>
<P><h2>CAUSE</h2>
 
<P>
This will occur if one or both of the following conditions are true:

<UL><LI>One or more cells in the worksheet contains a string of characters
   that exceeds 255 characters in length. For example: a string of 300
   "x" characters or a very long sentence.
<P>
   -or-

<LI>One or more cells in the worksheet contains a formula whose length
   exceeds 255 characters. For example: =SUM(A1+A2+A3+...+A100)
<P>
</UL><h2>WORKAROUND</h2>
 
<P>
If you manually copy a worksheet and receive this error message, use the
following steps to make the new worksheet identical to the original
worksheet:

<OL><P><LI>In the error message dialog box, click OK.

<P><LI>Activate the original worksheet.

<P><LI>Press CTRL+a or click the Select All button in the upper-left corner
   of the worksheet.

<P><LI>On the Edit menu, click Copy.

<P><LI>Activate the new worksheet and select cell A1.

<P><LI>On the Edit menu, click Paste.
<P>
</OL>The new worksheet should now be identical to the original worksheet.
<P>
If cells in your worksheet are truncated when you use a Visual Basic macro
to copy a worksheet, you can modify the macro so that it copies the sheet
successfully. The following sample subroutine demonstrates how you can do
this.
<P>
Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft support engineers can help explain the
functionality of a particular macro, they will not modify these examples to
provide added functionality, nor will they help you construct macros to
meet your specific needs. If you have limited programming experience, you
may want to consult one of the Microsoft Solution Providers. Solution
Providers offer a wide range of fee-based services, including creating
custom macros. For more information about Microsoft Solution Providers,
call Microsoft Customer Information Service at (800) 426-9400.
<P>
<PRE>    Sub Test()

        'Turn off screen updating while the macro runs.
        Application.ScreenUpdating = False

        'xSheet is the sheet we want to copy.
        Set xSheet = ActiveSheet

        'Copy the worksheet to the desired destination. Cells with more
        'than 255 characters will be truncated by this step.
        xSheet.Copy Before:=Sheets(xSheet.Index)

        'ySheet is the new worksheet.
        Set ySheet = ActiveSheet

        'Copy all of the cells on the original worksheet...
        xSheet.Range("A:IV").Copy

        '...activate the new worksheet...
        ySheet.Range("A1").Select

        '...and paste the copied cells. All cells in the new worksheet
        'now have the correct contents.
        ySheet.Paste

        'Clear out the clipboard and select cell A1.
        Application.CutCopyMode = False
        Range("A1").Select

    End Sub

</PRE></OL><h2>STATUS</h2>
 
<P>
This behavior is by design of Microsoft Excel 97.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
If you use a Visual Basic macro to copy a worksheet, you do not receive the
error message shown above. However, cells in your worksheet are still
truncated to 255 characters.
<P>
Note that a short formula that returns a long string of characters does not
cause this problem to occur. For example: the formula =REPT("x",400)
returns a string of 400 "x" characters, but copying a sheet containing this
formula does not cause the problem to occur.
<P>
Note also that this problem does not occur if you move a worksheet from one
workbook to another, or if you move it within the same workbook. The
problem only occurs when you copy a worksheet.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: XL97 8.00<BR>
Keywords          : xlvbainfo xlui<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>
Issue type        : kbprb<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 13, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
