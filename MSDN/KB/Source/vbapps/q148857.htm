

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: How to Dial a Phone Number Using MS Access 95/97 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q148857">
<META NAME="KBModify" CONTENT="1997/08/28">
<META NAME="KBCreate" CONTENT="1996/03/25">
<META NAME="Keywords" CONTENT="kbprg PgmApi">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  This article describes a sample user-defined Visual Basic for Applications procedure, DialNumber(), that you can use to dial a telephone number from Microsoft Access using y...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QDL4,QA1S,QBXE,QAB9,QDN9,QAY5,QBWP,QAS6,QAKC,QDL9,QBWO,QBWN,QBV8,QDJ9,QAPN P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: How to Dial a Phone Number Using MS Access 95/97</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 28, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q148857</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
This article describes a sample user-defined Visual Basic for Applications
procedure, DialNumber(), that you can use to dial a telephone number from
Microsoft Access using your computer's modem. This method uses Microsoft
Windows application programming interface (API) procedure calls.
<P>
NOTE: Although this procedure works in Microsoft Access 7.0 and 97,
those versions have an AutoDialer feature that you can use for dialing
telephone numbers. Note, however, that the AutoDialer feature may not
work on all Windows NT systems because it uses telephony application
programming interface (TAPI) procedures to dial a phone, and TAPI is not
included with Windows NT 3.51. This article does not use TAPI; therefore,
the procedure in this article works on all Win32 systems.
<P>
For more information about the AutoDialer feature of Microsoft Access
7.0 and 97, search the Help Index for "AutoDialer."
<P>
For more information about using TAPI in Windows 95 and Windows NT 4.0,
please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q141625.htm">Q141625</A></B>
   TITLE:      ACC: Using TAPI to Dial a Phone Under Win95/NT 4.0 (95/97)

</PRE><h2>MORE INFORMATION</h2>
 
<P>
Communications under Win32 have been simplified to use standard Windows
file functions, such as CreateFile(), WriteFile(), and CloseHandle().
<P>
The following steps demonstrate how to create and use the DialNumber()
function in Microsoft Access.

<OL><P><LI>Open the sample database Northwind.mdb.

<P><LI>Create a module and type the following line in the Declarations
   section:
<P>
   NOTE: You may have some Microsoft Windows API functions defined in an
   existing Microsoft Access library; therefore, your declarations may be
   duplicates. If you receive a duplicate procedure name error message,
   remove or comment out the declarations statement in your code.
<P>
   NOTE: All Declare statements must be typed exactly as shown, including
   capitalization, because Win32 names are case-sensitive. To help
   eliminate errors by you or others who use your Declare statements,
   create Alias clauses for Declare statements that do not have an
   existing Alias. As long as the Alias is correctly spelled and
   capitalized, it doesn't matter how the function name is capitalized.
<P>
<P><PRE>      Option Explicit
      Declare Function WriteFile&amp; Lib "kernel32" _
<PRE></PRE>         (ByVal hFile As Long, lpBuffer As Any, _
         ByVal nNumberOfBytesToWrite&amp;, _
         lpNumberOfBytesWritten&amp;, ByVal lpOverlapped&amp;)
      Declare Function CreateFile&amp; Lib "kernel32" Alias "CreateFileA" _
         (ByVal lpFileName$, ByVal dwDesiredAccess&amp;, _
         ByVal dwShareMode&amp;, ByVal lpSecurityAttributes&amp;, _
         ByVal dwCreationDisposition&amp;, ByVal dwFlagsAndAttributes&amp;, _
         ByVal hTemplateFile&amp;)
      Declare Function CloseHandle&amp; Lib "kernel32" (ByVal hObject&amp;)
      Declare Function FlushFileBuffers&amp; Lib "kernel32" (ByVal hFile&amp;)

      ' The number of seconds to wait for the modem to dial before
      ' .. resetting the modem. If the phone hangs up prematurely
      ' .. try increasing this value by small increments.
      Public Const WAITSECONDS = 4

      Public Const ID_CANCEL = 2
      Public Const MB_OKCANCEL = 1
      Public Const MB_ICONSTOP = 16, MB_ICONINFORMATION = 64

</PRE><P><LI>Type the following procedure:
<P>
<P><PRE>      Function DialNumber(PhoneNumber, CommPort As String)
      ' PURPOSE: To dial a telephone number using the computer's modem
      ' ARGUMENTS:
<PRE></PRE>      '    PhoneNumber: The telephone number to dial
      '    CommPort: The communications port the modem is connected
      '              to. Typically, modems are found on COM2, however,
      '              they can be configured for any COM port.
      '
      ' EXAMPLE:
      '    Type the following in the Immediate window using a modem
      '    connected to the COM2 port:
      '
      '       ? DialNumber("555-1212", "COM2")
      '
      ' ***********************************************************

         Dim Msg As String, MsgBoxType As Integer, MsgBoxTitle As String
         Dim bModemCommand(256) As Byte, ModemCommand As String
         Dim OpenPort As Long
         Dim RetVal As Long, RetBytes as Long, i as integer
         Dim StartTime

         ' Ask the user to pick up the phone.
         Msg = "Please pickup the phone and choose OK to dial " _
            &amp; PhoneNumber
         MsgBoxType = MB_ICONINFORMATION + MB_OKCANCEL
         MsgBoxTitle = "Dial Number"
         If MsgBox(Msg, MsgBoxType, MsgBoxTitle) = ID_CANCEL Then
            Exit Function
         End If

         ' Open the communications port for read/write (&amp;HC0000000).
         ' Must specify existing file (3).
         OpenPort = CreateFile(CommPort, &amp;HC0000000, 0, 0, 3, 0, 0)
         If OpenPort = -1 Then
            Msg = "Unable to open communication port " &amp; CommPort
            GoTo Err_DialNumber
         End If

         ' Send the telephone number to the modem.
         ModemCommand = "ATDT" &amp; PhoneNumber &amp; vbCrLf
         ' Pack the string in a Byte array.
         For i = 0 To Len(ModemCommand) - 1
            bModemCommand(i) = Asc(Mid(ModemCommand, i + 1, 1))
         Next

         ' Write the string to the Com port.
         RetVal = WriteFile(OpenPort, bModemCommand(0), _
            Len(ModemCommand), RetBytes, 0)
         If RetVal = 0 Then
            Msg = "Unable to dial number " &amp; PhoneNumber
            GoTo Err_DialNumber
         End If

         ' Flush the buffer to make sure it actually wrote
         RetVal = FlushFileBuffers(OpenPort)

         ' Wait WAITSECONDS seconds for the phone to dial.
         StartTime = Timer
         While Timer &lt; StartTime + WAITSECONDS
            DoEvents
         Wend

         ' Reset the modem and take it off line.
         ModemCommand = "ATH0" &amp; vbCrLf
         ' Pack the byte array again.
         For i = 0 To Len(ModemCommand) - 1
            bModemCommand (i) = Asc(Mid(ModemCommand, i + 1, 1))
         Next
         RetVal = WriteFile(OpenPort, bModemCommand(0), _
            Len(ModemCommand), RetBytes, 0)

         'Flush the buffer again.
         RetVal = FlushFileBuffers(OpenPort)

         ' Close the communications port.
         RetVal = CloseHandle(OpenPort)

         Exit Function

      Err_DialNumber:      'This is not an On Error routine.
         Msg = Msg &amp; vbCr &amp; vbCr &amp; _
            "Make sure no other devices are using Com port " &amp; CommPort
         MsgBoxType = MB_ICONSTOP
         MsgBoxTitle = "Dial Number Error"
         MsgBox Msg, MsgBoxType, MsgBoxTitle

      End Function

</PRE><P><LI>Open the Employees form in Design view.

<P><LI>Add a command button next to the Home Phone field and set the following
   properties:
<P>
<P><PRE>      Command Button:
<PRE></PRE>         Name: btnDialPhone
         Caption: Dial
         OnClick: =DialNumber([HomePhone], "COM2")

</PRE><P><LI>View the form in Form view. To dial an employee's home phone number,
   click the Dial button.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For information about how to dial a phone number in Microsoft Access 1.x
and 2.0, please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../ACCESS/Q93696.htm">Q93696</A></B>
   TITLE     : ACC: How to Dial a Phone Number in Microsoft Access
               (1.x/2.0)
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: mapi<BR>
Keywords          : kbprg PgmApi<BR>
Version           : 7.0 97<BR>
Platform          : WINDOWS<BR>
Hardware          : x86<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 28, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
