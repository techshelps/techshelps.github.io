

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: How to Create Floating Pop-Up Menus (95/97) </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q148833">
<META NAME="KBModify" CONTENT="1997/08/28">
<META NAME="KBCreate" CONTENT="1996/03/25">
<META NAME="Keywords" CONTENT="kbprg PgmApi">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  This article describes how to create  floating  pop-up menus using a combination of Microsoft Windows application programming interface (API) calls and Visual Basic for Appl...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QAY5,QBS0,QA1S,QAF0,QAPN,QBVR,QAB9,QBV8,QDN9,QBWR,QAGI,QAB5,QDL9,QBWO P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: How to Create Floating Pop-Up Menus (95/97)</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 28, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q148833</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
This article describes how to create "floating" pop-up menus using a
combination of Microsoft Windows application programming interface (API)
calls and Visual Basic for Applications code.
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To create a floating pop-up menu, follow these steps:

<OL><P><LI>Create a new form called Pop-up Menu Form.

<P><LI>Add a list box control called Menu to the form. Make the control
   large enough to display each of the strings it contains without
   displaying a scroll bar. Set the control's properties as follows:
<P>
<PRE>      Name:          Menu
      RowSourceType: Value List
      RowSource:     String1;String2;String3;String4
      AfterUpdate:  =ItemSelected([Menu])
      Left:          0 in
      Top:           0 in
      FontName:      System
      FontSize:      8
      FontWeight:    Bold

   NOTE: Specify the menu strings in the RowSource property. Separate
   succeeding string values with a semicolon (;) character.

</PRE><P><LI>Change the properties of the Pop-up Menu Form as follows:
<P>
<P><PRE>      Pop-up Menu Form
      ---------------------------------------------------
<PRE></PRE>      ScrollBars:         Neither
      RecordSelectors:    No
      NavigationButtons   No
      PopUp:              Yes
      Width:              &lt;Width of the list box control&gt;

      Section Properties
      ----------------------------------------------------
      Height:             &lt;Height of the list box control&gt;

</PRE><P><LI>Save the form and close it.

<P><LI>Create a new module and type the following code in the Declarations
   section for the module.
<P>
<P><PRE>      'NOTE: Some of the following Windows API functions may be
      'defined in an existing Microsoft Access library. If so, the new
      'declarations would cause a duplication procedure name error. If
      'this error occurs, remove the offending declare statement from
      'your code or convert the declaration to a comment.
</PRE><P>
<P><PRE>      Option Explicit
      Type POINTAPI
<PRE></PRE>          x As Long
          y As Long
      End Type

      Global Const GWL_STYLE = (-16)
      Global Const WS_DLGFRAME = &amp;H400000

      Declare Function GetCursorPos Lib "user32" (lpPoint As POINTAPI) _
           As Long
      Declare Function GetWindowLong Lib "user32" Alias "GetWindowLongA" _
          (ByVal hwnd As Long, ByVal nIndex As Long) As Long
      Declare Function SetWindowLong Lib "user32" Alias "SetWindowLongA" _
          (ByVal hwnd As Long, ByVal nIndex As Long, ByVal dwNewLong _
          As  Long) As Long

</PRE><P><LI>Type the following functions:
<P>
<P><PRE>      Function ShowPopup ()
<PRE></PRE>         Dim coord As POINTAPI
         Dim attr&amp;

         GetCursorPos coord
         DoCmd.OpenForm "Pop-up Menu Form"

         attr&amp; = GetWindowLong(Forms![Pop-up Menu Form].hWnd, GWL_STYLE)
         attr&amp; = SetWindowLong(Forms![Pop-up Menu Form].hWnd, GWL_STYLE, _
                    attr&amp; And Not WS_DLGFRAME)

         DoCmd.MoveSize (coord.x * 14), (coord.y * 14), , 1100
      End Function

      Function ItemSelected (WhichItem As String)
         DoCmd.Close
         MsgBox "The selected item was " &amp; Trim(WhichItem)
      End Function

</PRE><P><LI>Compile this module by clicking Compile Loaded Modules on the Run menu.
   If you receive a compile error, you may have made a syntax error.

<P><LI>Choose the form in which you want the pop-up menu to appear. Open the
   form in Design view.

<P><LI>Select the event property that you want to use to activate the pop-up
   menu and specify the following function call:
<P>
<P><PRE>      =ShowPopup()
</PRE><P>
</OL>NOTE: To see how this works, you may want to specify the function for the
DblClick event of a text box.
<P>
When you open the form and cause the event assigned in Step 9 to execute,
the pop-up menu appears at the current mouse position. The menu remains on
the screen until you select an item from the pop-up menu.
 
<PRE>Keywords          : kbprg PgmApi
Version           : 7.0 97
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 28, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
