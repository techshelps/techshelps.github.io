

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL97: Deleting Cells with a For Each...Next Loop </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q159915">
<META NAME="KBModify" CONTENT="1998/02/27">
<META NAME="KBCreate" CONTENT="1996/11/25">
<META NAME="Keywords" CONTENT="kbcode kbprg xlvbainfo xl97vbmigrate">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  The way that Microsoft Excel 97 deletes cells in a For Each...Next loop in differs from the way that earlier versions of Microsoft Excel delete cells. This article describes the differences and provides a Visual Basic for Applications macro example...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QAH4,QDNZ,QAEF,QBCT,QAGC,QAGB,QAA7,QBE7,QBE6,QBS0,QDMR,QA5V,QDKD,QAPF P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL97: Deleting Cells with a For Each...Next Loop</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 27, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q159915</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The way that Microsoft Excel 97 deletes cells in a For Each...Next loop in
differs from the way that earlier versions of Microsoft Excel delete cells.
This article describes the differences and provides a Visual Basic for
Applications macro example that illustrates how to delete cells in a loop.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft support engineers can help explain the
functionality of a particular macro, they will not modify these examples to
provide added functionality, nor will they help you construct macros to
meet your specific needs. If you have limited programming experience, you
may want to consult one of the Microsoft Solution Providers. Solution
Providers offer a wide range of fee-based services, including creating
custom macros. For more information about Microsoft Solution Providers,
call Microsoft Customer Information Service at (800) 426-9400.
<P>
<P><h3>Typing Sample Data</h3>
 
<P>
To use the macro in this article, type the following sample data in a
worksheet:
<P>
<PRE>   A1:  a  B1:  1
   A2:  b  B2:  2
   A3:  x  B3:  3
   A4:  x  B4:  4
   A5:  c  B5:  5
   A6:  x  B6:  6
   A7:  d  B7:  7
   A8:  x  B8:  8
   A9:  x  B9:  9
   A10: e  B10: 10

</PRE><h3>Typing the Sample Macro</h3>
 
<P>
In a new macro module, type the following macro:
<P>
<PRE>   Sub DeleteCells()

       'Loop through cells A1:A10 and delete cells that contain an "x."
       For Each c in Range("A1:A10")
           If c = "x" Then c.EntireRow.Delete
       Next

   End Sub

</PRE><h3>Behavior of the Sample Macro in Microsoft Excel 97</h3>
 
<P>
When you run the macro DeleteCells in Microsoft Excel 97, only rows 3, 6
and 8 are deleted. Although rows 4 and 9 contain an "x" in column A, the
macro does not delete the rows. The results of the macro in Microsoft
Excel 97 are as follows:
<P>
<PRE>   A1: a   B1: 1
   A2: b   B2: 2
   A3: x   B3: 4
   A4: c   B4: 5
   A5: d   B5: 7
   A6: x   B6: 9
   A7: e   B7: 10

</PRE>When Microsoft Excel deletes row 3, all cells move up one row. For example,
cell A3 assumes the contents of cell A4, cell A4 assumes the contents of
cell A5, and so forth. After the For Each...Next loop evaluates a cell, it
evaluates the next cell; thus, when cells are shifted, they may be skipped
by the loop.
<P>
<P><h3>Behavior of the Sample Macro in Microsoft Excel 5.0 and 7.0</h3>
 
<P>
When you run the macro DeleteCells in Microsoft Excel 5.0 and 7.0, the
macro deletes all rows that contain an "x." The results of the macro in
Microsoft Excel 5.0 or 7.0 are as follows:
<P>
<PRE>   A1: a   B1: 1
   A2: b   B2: 2
   A3: c   B3: 5
   A4: d   B4: 7
   A5: e   B5: 10

</PRE>When row 3 is deleted, all cells move up one row; and cell A3 assumes the
contents of cell A4, cell A4 assumes the contents of cell A5, and so forth.
However, unlike the behavior of the loop in Microsoft Excel 97, when the
For Each...Next loop evaluates a cell in Microsoft Excel 5.0 and 7.0, it
reevaluates the cell if it is deleted in the loop; thus, the cells are not
skipped.
<P>
<P><h3>Recommended Method for Using a Loop to Delete Cells</h3>
 
<P>
Use the following macro when you want to use a loop to delete cells:
<P>
<PRE>   Sub DeleteCells2()

       Dim rng As Range
       Dim i As Integer, counter As Integer

       'Set the range to evaluate to rng.
       Set rng = Range("A1:A10")

       'initialize i to 1
       i = 1

       'Loop for a count of 1 to the number of rows
       'in the range that you want to evaluate.
       For counter = 1 To rng.Rows.Count

           'If cell i in the range contains an "x",
           'delete the row.
           'Else increment i
           If rng.Cells(i) = "x" Then
               rng.Cells(i).EntireRow.Delete
           Else
               i = i + 1
           End If

       Next

   End Sub

</PRE>The results of this macro in Microsoft Excel 97 and earlier versions are as
follows:
<P>
<PRE>   A1: a   B1: 1
   A2: b   B2: 2
   A3: c   B3: 5
   A4: d   B4: 7
   A5: e   B5: 10

</PRE><h3>Additional Method for Using a Loop to Delete Cells</h3>
 
<P>
This is an alternate method to the method shown above. It will produce the
same results.
<P>
<PRE>   Sub DeleteCells3()

       Dim rng As Range, i As Integer

       'Set the range to evaluate to rng.
       Set rng = Range("A1:A10")

       'Loop backwards through the rows
       'in the range that you want to evaluate.
       For i = rng.Rows.Count To 1 Step -1

           'If cell i in the range contains an "x", delete the entire row.
           If rng.Cells(i).Value = "x" Then rng.Cells(i).EntireRow.Delete
       Next

   End Sub

</PRE><h2>REFERENCES</h2>
 
<P>
For more information about looping in a macro, click the Index tab in
Visual Basic for Applications Help, type the following text
<P>
<PRE>   loops

</PRE>and then double-click the selected text to go to the "Looping Through Code"
topic.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: XL97 8.0 8.00<BR>
Keywords          : kbcode kbprg xlvbainfo xl97vbmigrate<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 27, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
