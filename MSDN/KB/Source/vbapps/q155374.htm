

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: How to Use the MultiPage Control in a UserForm </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q155374">
<META NAME="KBModify" CONTENT="1998/02/04">
<META NAME="KBCreate" CONTENT="1996/08/28">
<META NAME="Keywords" CONTENT="kbcode kbusage">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  This article explains how to use the MultiPage control in a UserForm and provides a Microsoft Visual Basic for Applications example.  MORE INFORMATION  Use a MultiPage control to work with a large amount of information that can be sorted into sever...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB5,QA7O,QAOE,QAMN,QAPN,QAAW,QAUJ,QA50,QBWS,QBWA,QAMB,QBJZ,QAHV,QBV4,QBVP P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: How to Use the MultiPage Control in a UserForm</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 4, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q155374</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
<LI>Microsoft Excel 98 Macintosh Edition
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article explains how to use the MultiPage control in a UserForm and
provides a Microsoft Visual Basic for Applications example.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Use a MultiPage control to work with a large amount of information that can
be sorted into several categories. The MultiPage control allows you to
visually combine and categorize this information on a single form.
<P>
The MultiPage control is a container for a collection of Page objects. Each 
Page object contains its own set of controls and does not necessarily rely 
on other Page objects for information. For example, you can add different 
controls in the client region for each Page object in the MultiPage 
control. By default, a MultiPage control contains two pages; you can add or 
remove pages as needed. 
<P>
<P><h3>Adding a MultiPage Control to a UserForm</h3>
 
<P>
To add a MultiPage control to a UserForm in the Visual Basic Editor, follow 
these steps:

<OL><P><LI>Click the UserForm to activate it.

<P><LI>On the View menu, click Toolbox to display the toolbox if it is not
   already displayed.

<P><LI>Click the MultiPage control button.

<P><LI>Draw the MultiPage control on the form.
<P>
</OL><h3>Working with the Individual Pages in a MultiPage Control</h3>
 
<P>
To select an individual page in a MultiPage control, first click the
MultiPage control, and then click the page.
<P>
NOTE: When you click the MultiPage control, the page at the front of the
control is automatically selected.
<P>
After you select a page, you can change its properties, delete it, add new 
pages, or move pages by right-clicking the page and clicking the 
appropriate command on the shortcut menu. 
<P>
<P><h3>Working Programmatically with the MultiPage Control</h3>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE></OL>Use the SelectedItem property of the MultiPage control to indicate which
Page object is selected in the MultiPage control at run time. For example,
if you create a  MultiPage control named MultiPage1, you can use the
following statement to display the caption of the selected page:
<P>
<PRE>   MsgBox MultiPage1.SelectedItem.Caption

</PRE>The SelectedItem property is read-only and cannot be set at run time. If
you need to programmatically set which page is selected, set the Value
property for the MultiPage control. The following example selects the third
page on MultiPage1:
<P>
<PRE>   MultiPage1.Value = 2

</PRE>NOTE: The values of the Pages in a MultiPage control start at zero. Thus,
if the control contains three Pages, their values are 0, 1, and 2.
<P>
<P><h3>Example</h3>
 
<P>
The following example describes how to create a simple UserForm that
implements a MultiPage control.

<OL><P><LI>In a new workbook in Microsoft Excel, point to Macro on the Tools menu,
    and then click Visual Basic Editor.

<P><LI>On the Insert menu, click UserForm. Press F4 to activate the Properties 
    window for the UserForm. Next to the Name property of the form, type 
    "frmMain" (without the quotation marks) and type "Customer Information" 
    (without the quotation marks) next to the Caption property.

<P><LI>Click the form to select it. Click the MultiPage control on the Toolbox
    window, and draw a MultiPage control on the form. With the MultiPage
    control selected, press F4 to activate the Properties window. Type
    "mpgCustomer" (without the quotation marks) next to the Name property
    of the MultiPage control.

<P><LI>Click the first page, and then activate the Properties window by
    pressing F4. Type "pgName" (without the quotation marks) next to the 
    Name property, and type "Name" (without the quotation marks) next to 
    the Caption property.

<P><LI>Click the second Page, and activate the Properties window by
    pressing F4. Type "pgLocation" (without the quotation marks) next to 
    the Name property, and type "Location" (without the quotation marks) 
    next to the Caption property.

<P><LI>Click the Name page, and add the following controls with the listed
    property settings:
<P>
<PRE>    Control Type          Property                Value
    ----------------------------------------------------------

    Label                 Name                    lblFirstName
                          Caption                 First Name

    TextBox               Name                    txtFirstName

    Label                 Name                    lblLastName
                          Caption                 Last Name

    TextBox               Name                    txtLastName

</PRE><P><LI>Click the Location page, and add the following controls with the
    listed property settings:
<P>
<PRE>    Control Type          Property                Value
    ----------------------------------------------------------

    Label                 Name                    lblRegion
                          Caption                 Region

    TextBox               Name                    txtRegion

</PRE><P><LI>Click the CommandButton on the Toolbox window, and add one
    CommandButton control on the form outside of the MultiPage control.
    Draw the CommandButton control in the upper right corner of the form.
    Type "OK" (without the quotation marks) next to the Caption property 
    for the CommandButton, and type "cmdOK" (without the quotation marks) 
    next to the Name property.

<P><LI>Right-click the OK CommandButton control, and click View Code. Type the
    following code:
<P>
       Private Sub cmdOK_Click()
<P>
<PRE>          ' Save the data in the TextBox controls to the
          ' active worksheet.

          With ActiveSheet
             .Range("A1") = Me.txtLastName.Text
             .Range("B1") = Me.txtFirstName.Text
             .Range("C1") = Me.txtRegion.Text
          End With

          ' Unload the form.
          Unload Me

       End Sub


</PRE><P><LI>On the Insert menu, click Module to insert a module into the project.

<P><LI>Type the following procedure in the Code window of the new module:
<P>
       Public Sub ShowForm()
<P>
<PRE>          ' This procedure displays the form named frmMain.
          frmMain.Show

       End Sub

</PRE><P><LI>With the insertion point in the procedure ShowForm, press F5 to run the
    macro.
<P>
</OL>After you type values into the text boxes on the two Pages, click OK. The
values from the text boxes will be inserted in the appropriate cells in the
worksheet, and the UserForm will be dismissed.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about the MultiPage Control:

<OL><P><LI>Create a MultiPage control on a UserForm.

<P><LI>Click the MultiPage control, and press F1.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: custom dialog tabbed xl97 XL98<BR>
Keywords          : kbcode kbusage<BR>
Version           : WINDOWS:97; MACINTOSH:98<BR>
Platform          : MACINTOSH WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 4, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
