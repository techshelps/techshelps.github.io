

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: Creating a PAUSE Button in Visual Basic for Applications </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q131847">
<META NAME="KBModify" CONTENT="1997/12/01">
<META NAME="KBCreate" CONTENT="1995/06/21">
<META NAME="Keywords" CONTENT="kbcode kbprg PgmHowto">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Visual Basic, Applications Edition, there is no built-in equivalent for the MS Excel 4.0 PAUSE() macro function. The Visual Basic code in this article provides an alternative.  You might want to use this code to pause execution of your macro whi...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QBS0,QAH4,QANS,QA2B,QAZR,QAFF,QAF0,QADN,QAB9,QACI,QA01,QABI,QA5D,QAML V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: Creating a PAUSE Button in Visual Basic for Applications</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 1, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q131847</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, versions 5.0, 5.0a, 5.0c
<LI>Microsoft Excel for Windows 95, version 7.0
<LI>Microsoft Excel for the Macintosh, versions 5.0, 5.0a
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Visual Basic, Applications Edition, there is no built-in equivalent for
the MS Excel 4.0 PAUSE() macro function. The Visual Basic code in this
article provides an alternative.
<P>
You might want to use this code to pause execution of your macro while a
user enters data directly in a sheet or manipulates menus.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>Microsoft Excel does not have a "Macro Paused" Toolbar that can be
invoked by a single command. This is true even when you run an MS Excel 4.0
macro. For more information on creating a macro-paused toolbar within the
MS Excel 4.0 macro language, please see the following article(s) in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q105543.htm">Q105543</A></B>
   TITLE     : XL5: No Resume Button or Key Command for Paused .XLM Macro

</PRE>The following Visual Basic code comprises two sub procedures that you can
modify to create the effect of pausing a macro.
<P>
If you have a single procedure within which you need to pause execution
until the user desires to resume execution, split your sub procedure into
two halves. On the last line of the first half of the sub procedure, call
the "First_Half" sub procedure. Within the "Second_Half" sub procedure,
substitute the name of the sub procedure that is the second half of your
original sub procedure on the line where the MsgBox is currently located.
<P>
<PRE>   ' This Sub procedure should be called on the last line of your original 
   ' Sub procedure.
   Sub First_Half()

      ' Create a toolbar.
      Toolbars.Add "resume"
      
      ' Add the button to the toolbar.
      ' Note that if you are using Microsoft Excel version 5.0,
      ' comment out the "StatusBar:" argument of the Add method and remove
      ' the comma and line-continuation character after "Enabled:=True"
      Toolbars("resume").ToolbarButtons.Add Button:=102, _
         OnAction:="Second_Half", Pushed:=False, Enabled:=True, _
         StatusBar:="Click here to resume macro"
   
      ' Name the button.
      Toolbars("resume").ToolbarButtons(1).Name = "Resume Macro"

      ' Make sure the bar is not docked.
      Toolbars("resume").Position = xlFloating

      ' Position the bar midway between the left and right of the window.
      Toolbars("resume").Left =  _
         (ActiveWindow.Width + Toolbars("resume").Width)/ 2

      ' Position the bar midway between the top and bottom of the window.
      Toolbars("resume").Top =  _
         (ActiveWindow.Height + Toolbars("resume").height)/ 2

      ' Make sure the bar is showing.
      Toolbars("resume").Visible = True

   End Sub

   Sub Second_Half()
  
      ' Delete the toolbar.
      Toolbars("resume").Delete

      ' Insert the name of the second half of your procedure in place of 
      ' this message box.
      '
      ' NOTE: Any variables dimensioned in the first half of your
      ' procedure may lose their values before this sub procedure is       
      ' executed. You will need to be certain any variables used by the 
      ' procedure you name in place of this message box are dimensioned at 
      ' the Module level.
      MsgBox "after"

   End Sub

</PRE><h2>REFERENCES</h2>
 
<P>
For more information, see the Visual Basic User's Guide, Chapter 12,
"Managing Toolbars and Toolbar buttons with Visual Basic"
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: <BR>
Keywords          : kbcode kbprg PgmHowto<BR>
Version           : WINDOWS: 5.0, 5.0c, 7.0; MACINTOSH: 5.0, 5.0a<BR>
Platform          : MACINTOSH WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 1, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
