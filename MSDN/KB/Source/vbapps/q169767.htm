

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL97: Using NoteText and Comment.Text to Apply Comments </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q169767">
<META NAME="KBModify" CONTENT="1998/03/13">
<META NAME="KBCreate" CONTENT="1997/06/06">
<META NAME="Keywords" CONTENT="kbcode xlvbahowto xlvbainfo">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel 97, the NoteText method of a cell is limited to a maximum length of 255 characters. This article explains how to work around this limitation and some of the related problems that you may encounter when you work with cell comments...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAMB,QAB4,QAH4,QANU,QBVP,QDNZ,QATX P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL97: Using NoteText and Comment.Text to Apply Comments</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 13, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q169767</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Excel 97, the NoteText method of a cell is limited to a
maximum length of 255 characters. This article explains how to work around
this limitation and some of the related problems that you may encounter
when you work with cell comments.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without 
warranty either expressed or implied, including, but not limited to, the 
implied warranties of merchantability and/or fitness for a particular 
purpose. This article assumes that you are familiar with the programming 
language being demonstrated and the tools used to create and debug 
procedures. Microsoft support engineers can help explain the functionality 
of a particular procedure, but they will not modify these examples to 
provide added functionality or construct procedures to meet your specific 
needs. If you have limited programming experience, you may want to contact 
the Microsoft fee-based consulting line at (800) 936-5200. For more 
information about the support options available from Microsoft, please see 
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE><h3>Working Around the 255 Character Limitation of the NoteText Method</h3>
 
<P>
Although the NoteText method of a cell is limited to a maximum of 255
characters, you can apply a comment that is up to 32,767 characters in
length to a cell. To do this, use the Text method of a Comment object that
is attached to the cell. For example, instead of the following code
<P>
<PRE>   ActiveCell.NoteText "This is a 1000 character comment."

</PRE>use a line of code similar to the following:
<P>
<PRE>   ActiveCell.Comment.Text "This is a 1000 character comment."

</PRE><h3>Using the NoteText Method with Comments Longer Than 255 Characters</h3>
 
<P>
If you use the NoteText method to apply a comment that is longer than 255
characters in length to a cell, the new comment is not applied to the cell,
and you do not receive an error message.
<P>
For example, if you run a macro with the following code
<P>
<PRE>   ActiveCell.NoteText String(256, "x")

</PRE>and the active cell does not already contain a comment, no comment is added
to the cell because the length of the new comment would exceed 255
characters.
<P>
If you run a macro with the following code
<P>
<PRE>   ActiveCell.NoteText ActiveCell.NoteText &amp; String(100, "x")

</PRE>and the length of the existing comment exceeds 155 characters, the comment
is not updated because the length of the new comment would exceed 255
characters.
<P>
NOTE: In earlier versions of Microsoft Excel, the first 255 characters of
text are applied to the comment; the remaining characters are truncated.
<P>
<P><h3>Using Comment.Text to Change the Comment Applied to a Cell</h3>
 
<P>
When you use Comment.Text to change the comment applied to a cell, the cell
must already have a comment applied to it. If no comment was previously
applied to the cell, you receive the following error message:
<P>
<PRE>   Run-time error '91':
   Object variable or With block variable not set

</PRE>To apply a comment to a cell, use code similar to the following:
<P>
<PRE>   ActiveCell.AddComment

</PRE>NOTE: If the active cell already has a comment applied to it, you receive
the following error message when you run the code:
<P>
<PRE>   Run-time error '1004':
   Application-defined or object-defined error

</PRE>To add a comment to a cell that may or may not contain a comment, use code
similar to the following:
<P>
<PRE>   Sub AddACommentToTheActiveCell()

       ' The following line suppresses the run-time error message when
       ' adding a comment to a cell.
       On Error Resume Next

       ' Add a comment to the cell. If the cell already contains a comment,
       ' this line does nothing.
       ActiveCell.AddComment

       ' Return to normal error handling.
       On Error GoTo 0

       ' Add the text to the comment. If the cell already contains a
       ' comment, this is all you actually need.
       ActiveCell.Comment.Text "This is a comment."

   End Sub

</PRE><h3>Using Comment.Text to Add New Text to an Existing Comment</h3>
 
<P>
If you want to add new text to an existing comment while preserving the
original comment text, use a line of code similar to the following:
<P>
<PRE>   ActiveCell.Comment.Text ActiveCell.Comment.Text &amp; "New Comment Text"

</PRE>Characters over the 32,767 character limit for comments are truncated.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information on using comments in Microsoft Excel 97, please see
the following articles in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../URJump.htm">Q158246</A></B>
   TITLE     : XL97: How to Determine if the Active Cell Contains a Comment

   ARTICLE-ID: <B><A HREF="../vbapps/Q160956.htm">Q160956</A></B>
   TITLE     : XL97: Cannot Remove User Name from Default Cell Comment
               Text

   ARTICLE-ID: <B><A HREF="../vbapps/Q156200.htm">Q156200</A></B>
   TITLE     : XL97: Sounds Not Converted with Cell Notes
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: XL97 32767<BR>
Keywords          : kbcode xlvbahowto xlvbainfo<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 13, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
