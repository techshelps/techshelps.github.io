

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: How to Concatenate DDE to MSQuery Statements </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q149248">
<META NAME="KBModify" CONTENT="1998/02/03">
<META NAME="KBCreate" CONTENT="1996/03/28">
<META NAME="Keywords" CONTENT="kbcode kbprg kbtool PgmHowto">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Query, to use concatenated variables, and to know where and how to break a line of code for Line Continuation, you need to know how dynamic data exchange (DDE) to Microsoft Query statements are formatted. This article provides an under...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBI0,QAYL,QATX,QBVP,QA50,QAPF,QBS0,QAPN,QAZ2,QAIB,QAMB,QBXT,QA5V,QA6N,QAB9 P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: How to Concatenate DDE to MSQuery Statements</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 3, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q149248</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, versions 5.0, 5.0c
<LI>Microsoft Excel for Windows 95, versions 7.0, 7.0a
<LI>Microsoft Excel 97 for Windows
<LI>Microsoft Query for Windows, version 1.0
<LI>Microsoft Query for Windows 95, version 2.0
<LI>Microsoft Query for Windows, version 8.0
<LI>Microsoft Excel for the Macintosh, versions 5.0, 5.0a
<LI>Microsoft Excel 98 Macintosh Edition
<LI>Microsoft Query for the Macintosh, version 1.0
<LI>Microsoft Query for the Macintosh, version 8.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Query, to use concatenated variables, and to know where and
how to break a line of code for Line Continuation, you need to know how
dynamic data exchange (DDE) to Microsoft Query statements are formatted.
This article provides an understanding of the rules governing manipulation 
of the DDE to Microsoft Query statements.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>For example, consider the following line of DDE to Microsoft Query code:
<P>
<PRE>   DDEExecute Chan, "[UserControl('&amp;Return to Excel',3)]"

</PRE>In this example, note the following:

<UL><LI>Everything within the outer quotation marks is a Visual Basic for
   Applications text string to be passed to the DDE Channel.

<LI>Everything within the square brackets is passed across the DDE
   channel to Microsoft Query.

<LI>Everything within the parentheses is a Microsoft Query function
   argument and must match the Query function's requirements.

<LI>Everything within the apostrophes is a string to Microsoft Query.
<P>
</UL>When you "break" a DDE to Microsoft Query statement for Concatenation, it 
is critical to preserve any apostrophes that are present. The following are 
two methods you can use to do this:
<P>
<P><h3>Concatenation Method 1: Leave the Apostrophes Within the Quotation Marks</h3>
 

<OL><P><LI>Before you can break a line inside a Visual Basic for Applications
   text string (within the outer quotation marks), you must "wrap" each
   section of the text string in quotation marks, removing the text that
   will be replaced by the concatenated variable.
<P>
   In the following example, the apostrophes are preserved within the
   string text:
<P>
<P><PRE>      DDEExecute Chan, "[UserControl('" &lt;break&gt; "',3)]"
</PRE>
<P><LI>Load the variable with the data to be concatenated, as illustrated
   below:
<P>
<P><PRE>      X = "&amp;Return to Excel"
</PRE>
<P><LI>At the point in the string where you need to insert the concatenation
   variable, use a concatenation character sequence (&lt;space&gt;&amp;&lt;space&gt;) on
   both sides of the inserted variable, as in the following example:
<P>
<P><PRE>      DDEExecute Chan, "[UserControl('" &amp; X &amp; "',3)]"
</PRE><P>
</OL><h3>Concatenation Method 2: Preserve the Apostrophes Within the Variable</h3>
 
<P>
To do this, perform the following steps:

<OL><P><LI>Before you can break a line inside a Visual Basic for Applications
   text string (within the outer quotation marks), you must "wrap" each
   section of the text string in quotation marks, and remove the text
   that will be replaced by the concatenated variable.
<P>
   If this option is used, the example would look like the following:
<P>
<P><PRE>      DDEExecute Chan, "[UserControl(" &lt;break&gt; ",3)]"
</PRE>
<P><LI>Load the variable with the data to be concatenated. Note that in this
   case the apostrophes are included in the variable. See the following
   example:
<P>
<P><PRE>      X = "'&amp;Return to Excel'"
</PRE>
<P><LI>At the point in the string where you need to insert the concatenation
   variable, use a concatenation character sequence (&lt;space&gt;&amp;&lt;space&gt;) on
   both sides of the inserted variable. Note that the apostrophes are
   NOT included in the statement, as illustrated below:
<P>
<P><PRE>      DDEExecute Chan, "[UserControl(" &amp; X &amp; ",3)]"
</PRE><P>
</OL><h3>Line Continuation Example</h3>
 
<P>
When you "break" a DDE to Microsoft Query statement for Line Continuation, 
use the following steps:

<OL><P><LI>Before you can break a line inside a Visual Basic for Applications
   text string (within the outer  quotation marks), you must "wrap" both
   sections of the text string in quotation marks. See the following
   example:
<P>
<P><PRE>      DDEExecute Chan, "[UserControl('&amp;Re" &lt;break&gt; "turn to Excel',3)]"
</PRE>
<P><LI>At the point in the string where the break is to occur, use a
   concatenation character sequence (&lt;space&gt;&amp;&lt;space&gt;) between each text
   string, as in this example:
<P>
<P><PRE>      DDEExecute Chan, "[UserControl('&amp;Re" &amp; "turn to Excel',3)]"
</PRE>
<P><LI>Add the line continuation character &lt;_&gt;, as in the following example:
<P>
<P><PRE>      DDEExecute Chan, "[UserControl('&amp;Re" &amp; _
<PRE></PRE>          "turn to Excel',3)]"

</PRE></OL><h3>Statement Formatting Example</h3>
 
<P>
When you concatenate variables, the format of the data used must match that 
which is required by Microsoft Query.
<P>
For example, when you return data to Microsoft Excel from Microsoft Query 
using DDE, you must address the worksheet range in which you want to place 
the requested data in the R1C1 reference style.
<P>
This example shows how to format the variable "FetchLoc" in the R1C1
reference style, as required by Microsoft Query:
<P>
<PRE>   FetchLoc = fetchdata.Address(referenceStyle:=xlR1C1) _
       &amp; ":" &amp; fetchdata.Offset(NumRows(1), _
       NumCols(1)).Address(referenceStyle:=xlR1C1)

</PRE>The variable "FetchLoc" can now be concatenated in the DDE to Microsoft
Query statement, as in the following example:
<P>
NOTE: Remember to retain the apostrophes.
<P>
<PRE>   DDEExecute Chan, ("[Fetch('Excel','Sheet1','" &amp; _
       FetchLoc &amp; "','All/Headers')]")
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 5.00 5.00a 5.00c 7.00 8.00 XL98 XL97 XL7 XL5 <BR>
msquery<BR>
Keywords          : kbcode kbprg kbtool PgmHowto<BR>
Version           : WINDOWS:5.x,7.0,97; MACINTOSH:5.0,5.0a,98<BR>
Platform          : MACINTOSH WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 3, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
