

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL97: Error When Passing an Array Value Between Macros </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q158746">
<META NAME="KBModify" CONTENT="1998/03/09">
<META NAME="KBCreate" CONTENT="1996/11/05">
<META NAME="Keywords" CONTENT="kberrmsg kbprg kbdta kbdtacode xlvbahowto xlvbainfo xl97vbmigrate">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  When you run a Visual Basic for Applications macro in Microsoft Excel 97, you may receive the following error message:     Run-time error '10':    This array is fixed or temporarily locked.  CAUSE =====  This behavior will occur if the following co...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QAH6,QAD7,QAH7,QBVP,QAYL,QAB4,QAKD,QBS0,QBVV,QAFF,QAY2,QAYV,QAPN,QAHT P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL97: Error When Passing an Array Value Between Macros</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 9, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q158746</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When you run a Visual Basic for Applications macro in Microsoft Excel 97,
you may receive the following error message:
<P>
<PRE>   Run-time error '10':
   This array is fixed or temporarily locked.

</PRE><h2>CAUSE</h2>
 
<P>
This behavior will occur if the following conditions are all true:

<UL><LI>You create two macros, where one macro passes a variable to the other
   macro.
<P>
<P><PRE>    -and-
</PRE>
<LI>The variable that is passed to the other macro is an element of an
   array.
<P>
<P><PRE>    -and-
</PRE>
<LI>The second macro accepts the variable by reference, not by value.
<P>
<P><PRE>    -and-
</PRE>
<LI>The second macro uses the ReDim method to redimension the array.
<P>
</UL><h2>WORKAROUND</h2>
 
<P>
Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft support engineers can help explain the
functionality of a particular macro, they will not modify these examples to
provide added functionality, nor will they help you construct macros to
meet your specific needs. If you have limited programming experience, you
may want to consult one of the Microsoft Solution Providers. Solution
Providers offer a wide range of fee-based services, including creating
custom macros. For more information about Microsoft Solution Providers,
call Microsoft Customer Information Service at (800) 426-9400.
<P>
The following workarounds assume that you created a Visual Basic module
with the following code:
<P>
<PRE>   Dim MyArray() As Integer

   Sub Macro1()     'The first macro
       ReDim MyArray(10)
       Macro2 MyArray(1)
   End Sub

   Sub Macro2(X)    'The second macro
       ReDim MyArray(20)
   End Sub

</PRE>The array MyArray is initialized at the module level; so, it is available
to all macros within the module. The first macro redimensions the array,
and then passes an element of the array to the second macro. The second
macro refers to the element in the array by reference, not by value.
<P>
NOTE: If you run Macro1, you receive the error message.
<P>
To prevent the problem from occurring, use either of the following methods.
<P>
Method 1:
<P>
In the second macro, use the keyword ByVal to force the macro to refer to
the element in the array by value, not by reference. For example, change
the second macro to the following:
<P>
<PRE>   Sub Macro2(ByVal X)    'Note the "ByVal" keyword.
       ReDim MyArray(20)
   End Sub

</PRE>Method 2:
<P>
Use an intermediate variable to pass the value from one macro to the other.
For example, change the first macro to the following:
<P>
<PRE>   Sub Macro1()
       ReDim MyArray(10)
       Z = MyArray(1)     'Set the intermediate variable value.
       Macro2 Z           'Run the second macro and pass the value.
   End Sub

</PRE>By using an intermediate variable to send the value to the second macro,
you prevent the second macro from referring to locations within the array's
memory. You can then redimension the array without receiving an error
message.
<P>
<P><h2>STATUS</h2>
 
<P>
This behavior is by design of Microsoft Excel 97.
<P>
NOTE: This behavior is a change from earlier versions of Microsoft Excel.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
When you pass a variable from one macro to another macro in Microsoft
Excel, the actual value of the variable is not passed between macros.
Instead, a reference to the value's location in memory is passed; this is
called passing a value by reference. You can also pass a value by value by
using the keyword ByVal.
<P>
If you pass an element of an array from one macro to another by reference,
and then attempt to redimension the array by using the ReDim method, you
receive the error message in this article. This behavior occurs because the
array's size is locked when a macro refers to it. Only when the reference
is released can the array be redimensioned.
<P>
Note that this limitation does not apply to earlier versions of Microsoft
Excel.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: XL97<BR>
Keywords          : kberrmsg kbprg kbdta kbdtacode xlvbahowto xlvbainfo xl97vbmigrate<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>
Issue type        : kbprb<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 9, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
