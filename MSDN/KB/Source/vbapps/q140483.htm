

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: Bound Multi-Selection List Box Always Returns Null </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q140483">
<META NAME="KBModify" CONTENT="1997/08/28">
<META NAME="KBCreate" CONTENT="1995/11/30">
<META NAME="Keywords" CONTENT="kbusage">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  A multiple-selection list box bound to a field in a form's underlying record source through the ControlSource property returns a Null value regardless of the selection or selecti...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVR,QA7O,QA7N,QA1S,QAGU,QAE1,QDN9,QBS0,QAZV,QAH4,QAFF,QAB5,QA5V,QAUD,QAPF P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: Bound Multi-Selection List Box Always Returns Null</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 28, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q140483</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 7.0, 97
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
A multiple-selection list box bound to a field in a form's underlying
record source through the ControlSource property returns a Null value
regardless of the selection or selections made in the list.
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
<P><h2>CAUSE</h2>
 
<P>
A bound control can only return and represent a single value stored in a
field in the form's underlying recordset. Because multiple selections
cannot be represented in a single field, a Null value is returned.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
The Selected property or ItemsSelected collection can be used to retrieve
information regarding which items are selected in a multiple-selection list
box.
<P>
You will find information below that demonstrates one way to simulate
binding a multiple-selection list box to a single field by storing and
managing a semicolon-delimited list of values. For example, if your list
box is filled with different fruits, one possible combination of selections
might be stored as "Apples;Oranges;Bananas."
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Drawbacks to Storing Multiple Selections in a Single Field</h3>
 
<P>
Although this article demonstrates how to store multiple selections from a
multiple-selection list box into a single field, you should realize that it
is not good database design, and you should explore alternatives. Storing
a list of values in a single field violates basic rules of database
normalization theory. First Normal Form in Normalization theory states that
all column (field) values must be atomic, or indivisible. For example, in a
single field you should not store a list of items such as "Apples, Oranges,
Bananas" because there is no simple way to manipulate, sort, or query on
these values independently of one another.
<P>
The following example demonstrates how to create a multiple-selection list
box in the sample database Northwind.mdb's Customers form that enables you
to select a list of "many" employees for each customer. Perhaps a customer
should only work with a set of specific employees assigned by this list
box. A new field called Employees is added to the Customers table to hold
a semicolon-delimited list of Employee ID numbers managed by a multiple-
selection list box to be added to the Customers form.
<P>
The disadvantage of this design is that you would not be able to determine
what customers are currently assigned to a particular employee, or vice
versa.
<P>
Ideally, because "many" selections need to be stored for the "one" record,
you might want to explore storing these selections in a separate "many"
table rather than in a single (or multiple fields) in the "one" table. The
assignment of employees to customers is a many-to-many relationship such
that "one" customer can have "many" employees and "one" employee can have
"many" customers. Good database design dictates that you should create a
third table, often called a "junction" or "assignment" table between the
many-to-many tables. In the Northwind database, the Order Details table
offers an excellent example of this. The Order Details table is positioned
between the Orders and Products tables. Rather than assigning many products
to one order using a multiple-selection list box, a subform is used in the
Orders form to edit the Order Details junction table.
<P>
<P><h3>How to Simulate Binding a Multiple-Selection List Box to a Field</h3>
 
<P>
When a control is bound to a field in the underlying recordset of the form,
Microsoft Access does two things automatically for you:

<UL><LI>When the data in the field changes, perhaps by moving from record to
   record, Microsoft Access synchronizes the data in the control with the
   data in the field.

<LI>When the data in the control changes, perhaps by the user, Microsoft
   Access saves the data from the control to the bound field.
<P>
</UL>The two Visual Basic procedures, mslbSyncList and mslbSaveList, provided
below, facilitate this functionality for a multiple-selection list
box.
<P>
CAUTION: Following the steps in this example will modify the sample
database Northwind.mdb. You may want to back up the Northwind.mdb file or
perform these steps on a copy of the Northwind database.

<OL><P><LI>Open the sample database Northwind, create a new module, and type the
   following line in the Declarations section if it isn't already there:
<P>
<P><PRE>      Option Explicit
</PRE>
<P><LI>Type the following procedures:
<P>
<PRE>      Sub mslbSyncList(ctlMSLB As Control, ctlBound As Control)
         Dim i As Integer
         Dim SourceList As String, SearchItem As String
      On Error Goto Err_mslbSyncList
         SourceList = ";" &amp; ctlBound &amp; ";"
         For i = 0 To ctlMSLB.ListCount - 1
            SearchItem = ";" &amp; ctlMSLB.ItemData(i) &amp; ";"
            ctlMSLB.Selected(i) = (InStr(SourceList, SearchItem) &gt; 0)
         Next i
      Bye_mslbSyncList:
         Exit Sub
      Err_mslbSyncList:
         Beep
         MsgBox Error$, 16
         Resume Bye_mslbSyncList
      End Sub

      Sub mslbSaveList(ctlMSLB As Control, ctlBound As Control)
         Dim MyList, i
         MyList = Null
      On Error Goto Err_mslbSaveList
         For Each i In ctlMSLB.ItemsSelected
            MyList = MyList &amp; ";" &amp; ctlMSLB.ItemData(i)
         Next
         If Len(MyList) &gt; 0 Then MyList = Mid(MyList, 2)
         ctlBound = MyList
      Bye_mslbSaveList:
         Exit Sub
      Err_mslbSaveList:
         Beep
         MsgBox Error$, 16
         Resume Bye_mslbSaveList
      End Sub

</PRE><P><LI>Open the Customers table in Design view. Add a new field called
   Employees with data type Text, and set the FieldSize property as
   follows:
<P>
<P><PRE>      FieldSize: 255
</PRE>
<P><LI>Save and close the table.

<P><LI>Open the Customer form and add a text box with the following
   properties:
<P>
<P><PRE>      Name: txtEmployees
      ControlSource: Employees
      Visible: No
</PRE><P>
   NOTE: For testing purposes, you may want to leave the Visible property
   set to Yes to examine the semicolon-delimited list being generated.

<P><LI>Add a new list box with the following properties:
<P>
<P><PRE>      Name: mslbEmployees
      RowSource: Employees
      ColumnCount: 2
      ColumnWidths: 0
      MultiSelect: Simple
</PRE>
<P><LI>On the View menu, click Code to invoke the form's module and type the
   following procedures:
<P>
<P><PRE>      Private Sub Form_Current()
<PRE></PRE>         mslbSyncList Me![mslbEmployees], Me![txtEmployees]
      End Sub

      Private Sub mslbEmployees_AfterUpdate()
         mslbSaveList Me![mslbEmployees], Me![txtEmployees]
      End Sub

      NOTE: The mslbSyncList procedure should be called from any code that
      changes the contents of the field the semicolon-delimited list is
      stored into. The mslbSaveListfield procedure should be called from
      any code that changes the contents of the multiple-selection list box
      itself.

</PRE><P><LI>View the form in Form view, move from customer to customer, and make
   different selections in the new multiple-selection list box.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about database normalization, please see the following
article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../ACCESS/Q100139.htm">Q100139</A></B>
   TITLE     : ACC: Database Normalization Basics

</PRE></OL>For more information about multiple-selection list boxes, search the Help
Index for "MultiSelect Property," or ask the Microsoft Access 97 Office
Assistant.
<P>
For more information about a multiple-selection, search the Help Index for
"Selected."
 
<PRE>Keywords          : kbusage
Version           : 7.0 97
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbprb
Solution Type     : kbcode</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 28, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
