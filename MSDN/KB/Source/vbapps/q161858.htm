

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL97: How to Trap Events for an Embedded Chart </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q161858">
<META NAME="KBModify" CONTENT="1998/03/13">
<META NAME="KBCreate" CONTENT="1997/01/07">
<META NAME="Keywords" CONTENT="kbcode kbprg xlvbahowto xlvbainfo xlchart">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel 97, you can associate a chart sheet in a workbook with a Visual Basic module. This means you can create a macro that runs when certain events occur on the chart sheet. However, this functionality does not apply to charts that are...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QBS0,QBJZ,QAPN,QBVP,QAO4,QDNX,QBWS,QA01,QAFF,QAQG,QBVV,QABO,QBXS,QA5F P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL97: How to Trap Events for an Embedded Chart</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 13, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q161858</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Excel 97, you can associate a chart sheet in a workbook with a
Visual Basic module. This means you can create a macro that runs when
certain events occur on the chart sheet. However, this functionality does
not apply to charts that are embedded on a worksheet.
<P>
This article contains sample macros that trap an event for an embedded
chart.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft support engineers can help explain the
functionality of a particular macro, they will not modify these examples to
provide added functionality, nor will they help you construct macros to
meet your specific needs. If you have limited programming experience, you
may want to consult one of the Microsoft Solution Providers. Solution
Providers offer a wide range of fee-based services, including creating
custom macros. For more information about Microsoft Solution Providers,
call Microsoft Customer Information Service at (800) 426-9400.
<P>
To trap an event for an embedded chart on a worksheet, use a WithEvents
declaration on a Class Module.
<P>
<P><h3>Setting Up a Sample Embedded Chart</h3>
 

<OL><P><LI>Save and close any open workbooks, and then create a new workbook.

<P><LI>Type the following data in Sheet1:
<P>
<P><PRE>      A1: 1
      A2: 2
      A3: 3
</PRE>
<P><LI>Select the range A1:A3 and click Chart on the Insert menu.

<P><LI>In the "Chart Wizard - Step 1 of 4 - Chart Type" dialog box, click
   Finish.
<P>
</OL>An embedded column chart appears on Sheet1.
<P>
<P><h3>Writing the Macro Code</h3>
 

<OL><P><LI>Start the Visual Basic Editor (press ALT+F11).

<P><LI>On the Insert menu, click Class Module.
<P>
</OL>This step inserts a class module called Class1 into your project.

<OL><P><LI>In this class module, type the following code:
<P>
       Public WithEvents EmbChart As Chart
<P>
    The WithEvents keyword makes the EmbChart variable available
    in the Object list in the Class1 (Code) module window.

<P><LI>In the Class1 (Code) window, click EmbChart in the Object list.
<P>
    The following code automatically appears in the class module:
<P>
       Private Sub EmbChart_Activate()
<P>
       End Sub
<P>
    NOTE: The Activate event is the default event for the object.

<P><LI>In the Class1 (Code) window, click Resize in the Procedure list.
<P>
    The following code automatically appears in the class module:
<P>
       Private Sub EmbChart_Resize()
<P>
       End Sub

<P><LI>Change the Resize event procedure so that it looks like the following:
<P>
       Private Sub EmbChart_Resize()
<PRE>           MsgBox "You are resizing the " &amp; EmbChart.Name &amp; " chart."
       End Sub

</PRE><P><LI>On the Insert menu, click Module.

<P><LI>In this module, type the following code:
<P>
       Dim mychart As New Class1
   
<PRE>       Sub Set_Chart()
   
           Set mychart.EmbChart = Sheet1.ChartObjects(1).Chart
   
       End Sub

</PRE><P><LI>Run the Set_Chart macro.
<P>
</OL>Whenever you resize the chart on Sheet1, a message box displays the
message in the EmbChart_Resize subprocedure.
<PRE>   
</PRE></OL>NOTE: If you have a Microsoft IntelliMouse and you use the scroll wheel
on the mouse to scroll up or down the worksheet, the Resize event occurs
if the chart is active and all or part of it is not visible on the
screen.

<OL><P><LI>Press ALT+F11 to switch to Microsoft Excel.

<P><LI>Click once on the embedded chart in Sheet1 to switch to it.

<P><LI>With your pointer, drag one of the handles on the border of the
<P><PRE>    chart in any direction.
</PRE><P>
</OL>A message box that displays the following message appears:
<PRE>   
   You are resizing the Sheet1 Chart 1 chart.
   
</PRE></OL>13. Click OK.
<P>
<P><h3>Disabling the Event Handler</h3>
 
<P>
If you close the workbook that contains the above project, the event
handler is disabled. To programmatically disable the event handler, use the
following steps:

<OL><P><LI>Start the Visual Basic Editor.

<P><LI>In the general module in which you typed the Set_Chart macro, add the
   following macro:
<P>
<PRE>      Sub Reset_Chart()
   
          Set mychart.EmbChart = Nothing
   
      End Sub

</PRE><P><LI>Run the Reset_Chart macro.

<P><LI>On the File menu, click "Close and Return to Microsoft Excel."

<P><LI>Select and resize the embedded chart.
<P>
</OL>The message box does not appear.
<P>
For additional information, please see the following article in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q158244.htm">Q158244</A></B>
   TITLE     : XL97: How to Create Application Level Event Handlers

</PRE></OL><h2>REFERENCES</h2>
 
<P>
For more information about using class modules in the Visual Basic Editor,
click the Index tab in Microsoft Visual Basic Help, type the following text
<P>
<PRE>   class module

</PRE>and then double-click the selected text to go to the "Module and Class
Module Commands (Insert Menu)" topic.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 97 XL97<BR>
Keywords          : kbcode kbprg xlvbahowto xlvbainfo xlchart<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 13, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
