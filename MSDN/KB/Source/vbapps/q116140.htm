

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: How to Pass an Array as an Argument to a Procedure </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q116140">
<META NAME="KBModify" CONTENT="1997/08/29">
<META NAME="KBCreate" CONTENT="1994/06/13">
<META NAME="Keywords" CONTENT="kbprg PgmHowTo SynFnc MdlOthr">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  In order for a procedure to accept an array as an argument, the procedure must declare the array argument, with opening and closing parentheses after the argument name. Additiona...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA1S,QBS0,QDN9,QA5F,QAMA,QAB9,QAH6,QAD7,QAH4,QAH7,QAGI,QAPF,QAY5,QATX,QAHE P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: How to Pass an Array as an Argument to a Procedure</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q116140</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 1.0, 1.1, 2.0, 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
In order for a procedure to accept an array as an argument, the procedure
must declare the array argument, with opening and closing parentheses after
the argument name. Additionally, when passing the array to the procedure,
you must include parentheses after the array name unless you are using
Visual Basic. Otherwise, the error message "Parameter type mismatch" or
"Duplicate definition" may occur.
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
NOTE: Visual Basic for Applications is called Access Basic in Microsoft
Access versions 1.x and 2.0. For more information about Access Basic,
please refer to the "Introduction to Programming" manual in Microsoft
Access version 1.x or the "Building Applications" manual in Microsoft
Access version 2.0
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following example demonstrates the correct syntax for procedure
declarations with an array:
<P>
<PRE>   Function YourFunctionName (InArray() As String) As Integer

   Sub YourSubName (InArray() As String)

</PRE>The following example demonstrates the correct syntax for procedure calls
with an array:
<P>
<PRE>   Result = YourFunctionName(YourArrayName())

   YourSubName YourArrayName()

</PRE>NOTE: When calling procedures in Visual Basic, you do not have to include
the opening and closing parentheses after "YourArrayName" in the above
example.
<P>
<P><h3>Example</h3>
 
<P>
The following example demonstrates a sample user-defined function that
loads an array with string values:

<OL><P><LI>Create a new module and enter the following code:
<P>
   NOTE: In the following sample code, an underscore (_) at the end of a
   line is used as a line-continuation character. Remove the underscore
   from the end of the line when re-creating this code in Access Basic.
<P>
<P><PRE>      '---------------------------------------------------------------
      'GLOBAL DECLARATIONS SECTION
      '---------------------------------------------------------------
      Option Explicit
</PRE><P>
<P><PRE>      '---------------------------------------------------------------
      'The function LoadArray() loads an array called MyArray
      'with string values. After loading the array, the function
      'calls a procedure that displays each array element
      'in a message box.
      '---------------------------------------------------------------
</PRE><P>
<P><PRE>      Function LoadArray()
<PRE></PRE>         Dim i as Integer
         ReDim MyArray(10) As String
         For i = 1 to 10
            MyArray(i) = "Test Value: " &amp; i
         Next i
         DisplayArray MyArray()
      End Function

      '---------------------------------------------------------------
      'LoadArray() Sub Procedure
      '---------------------------------------------------------------

      Sub DisplayArray (InArray() As String)
         Dim i as Integer
         For i = 1 to UBound(InArray)
            MsgBox InArray(i)
         Next i
      End Sub

</PRE><P><LI>On the View menu, click Debug Window (or Immediate Window in versions
   1.x and 2.0)

<P><LI>Type the following line, and then press ENTER:
<P>
<P><PRE>      ? LoadArray()
</PRE><P>
</OL><h2>REFERENCES</h2>
 
<P>
<P><h2>For more information about Arrays, search the Help Index for "Arrays."</h2>
 
<PRE>Keywords          : kbprg PgmHowTo SynFnc MdlOthr
Version           : 1.0 1.1 2.0 7.0 97
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
