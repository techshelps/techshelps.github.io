

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WD98: Inserting OLE Object in Header Opens OLE Application </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q182679">
<META NAME="KBModify" CONTENT="1998/03/18">
<META NAME="KBCreate" CONTENT="1998/03/18">
<META NAME="Keywords" CONTENT="kbdta kbmacroexample OffVBA macword98">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="   When you use Visual Basic for Applications to insert an OLE object, such as a Microsoft Excel Worksheet object, into the header or footer of a document, the object opens the application for editing instead of providing in-place editing within Word...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QAW6,QBS0,QA9Q,QBVP,QBXS,QACI,QA9N,QAA1,QANF,QDI2,QAVZ,QAMA,QAJH,QA6A V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>WD98: Inserting OLE Object in Header Opens OLE Application</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 18, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q182679</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Word 98 Macintosh Edition
</UL> 
<P>
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When you use Visual Basic for Applications to insert an OLE object, such
as a Microsoft Excel Worksheet object, into the header or footer of a
document, the object opens the application for editing instead of
providing in-place editing within Word.
<P>
<P><h2>CAUSE</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>The following example Visual Basic for Applications macro replicates this
behavior:
<P>
<PRE>   Sub Main()
     ' Set up object variables.
     Dim oDoc1 As Object
     Dim oRange1 As Object
     Dim oInlineShape As Object
     Set oDoc1 = Documents.Add
     Set oRange1 = oDoc1.Content
     Set oRange2 = oDoc1.Sections(1).Headers(1).Range
     ' Insert the OLE object
     Set oInlineShape1 = oDoc1.InlineShapes.AddOLEObject(Range:=oRange2, _
     ClassType:="Excel.Sheet.8", LinkToFile:=False, DisplayAsIcon:=False)
   End Sub

</PRE><h2>WORKAROUND</h2>
 
<P>
To provide in-place editing, the OLE object needs to know where it will be
inserted on the screen. When this position is unknown, the OLE server, in
this case, Microsoft Excel, operates in Open Mode.
<P>
To ensure that the OLE server is activated "in-place," view the header
before you insert the object. The following example Visual Basic for
Applications macro includes the commands for viewing the header prior to
inserting the OLE object:
<P>
<PRE>   Sub Main()
      ' Set up object variables.
      Dim oDoc1 As Object
      Dim oRange1 As Object
      Dim oInlineShape As Object
      Set oDoc1 = Documents.Add
      Set oRange1 = oDoc1.Content
      Set oRange2 = oDoc1.Sections(1).Headers(1).Range
      ' Must be in page layout to view header.
      If ActiveWindow.View.SplitSpecial &lt;&gt; wdPaneNone Then
         ActiveWindow.Panes(2).Close
      End If
      If ActiveWindow.ActivePane.View.Type = _
          wdNormalView Or ActiveWindow. _
          ActivePane.View.Type = wdOutlineView Or _
          ActiveWindow.ActivePane.View.Type = wdMasterView Then
          ActiveWindow.ActivePane.View.Type = wdPageView
       End If
       ' View the header.
      ActiveWindow.ActivePane.View.SeekView = wdSeekCurrentPageHeader
      ' Insert the OLE object
      Set oInlineShape1 = _
      oDoc1.InlineShapes.AddOLEObject(Range:=oRange2, _
      ClassType:="Excel.Sheet.8", LinkToFile:=False, DisplayAsIcon:=False)
   End Sub

</PRE><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in the Microsoft products
listed at the beginning of this article. We are researching this problem
and will post new information here in the Microsoft Knowledge Base as it
becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
For additional information, please see the following article in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q181058.htm">Q181058</A></B>
   TITLE     : OFF98: How to Run Sample Code from Knowledge Base Articles

</PRE><h2>REFERENCES</h2>
 
<P>
For more information about getting help with Visual Basic for Applications,
please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q163435.htm">Q163435</A></B>
   TITLE     : VBA: Programming Resources for Visual Basic for
               Applications
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: vb vba vbe<BR>
Keywords          : kbdta kbmacroexample OffVBA macword98<BR>
Version           : MACINTOSH:98<BR>
Platform          : MACINTOSH<BR>
Issue type        : kbbug<BR>
Solution Type     : kbpending<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 18, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
