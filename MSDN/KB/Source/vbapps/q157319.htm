

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL97: Problems When you use Macro to Add Control to UserForm </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q157319">
<META NAME="KBModify" CONTENT="1998/03/13">
<META NAME="KBCreate" CONTENT="1996/10/09">
<META NAME="Keywords" CONTENT="kbcode kbprg xlvbahowto xlvbainfo">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel 97, you may have difficulty adding a control to a UserForm programmatically. For example, if you run the following macro code:     Sub Add_Control_Test()         Set y = UserForm1.Controls.Add( Forms.CheckBox.1 , MyControl ,true)...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QABI,QABH,QA7O,QAOE,QAMN,QAB5,QBVP,QAFF,QBWS,QBS0,QBJZ,QADZ,QAVX,QAVW P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL97: Problems When you use Macro to Add Control to UserForm</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 13, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q157319</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
In Microsoft Excel 97, you may have difficulty adding a control to a
UserForm programmatically. For example, if you run the following macro
code:
<P>
<PRE>   Sub Add_Control_Test()

       Set y = UserForm1.Controls.Add("Forms.CheckBox.1","MyControl",true)

   End Sub

</PRE>you will not receive an error, but the checkbox control is not added to the
UserForm.
<P>
<P><h2>CAUSE</h2>
 
<P>
The aforementioned macro will not add the control to the UserForm because
this syntax for the Add method only applies during run-time. That means you
have to include this macro code in an event procedure tied to the UserForm.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft support engineers can help explain the
functionality of a particular macro, they will not modify these examples to
provide added functionality, nor will they help you construct macros to
meet your specific needs. If you have limited programming experience, you
may want to consult one of the Microsoft Solution Providers. Solution
Providers offer a wide range of fee-based services, including creating
custom macros. For more information about Microsoft Solution Providers,
call Microsoft Customer Information Service at (800) 426-9400.
<P>
If you want use the above macro to add a check box control to a UserForm
during run time, do the following:

<OL><P><LI>Open a new Microsoft Excel workbook.

<P><LI>In the Visual Basic Editor, insert a new UserForm.

<P><LI>With the UserForm active, click Code on the View menu.

<P><LI>Click the Procedure drop-down in the UserForm1(Code) window and
   select Initialize in the drop-down list.
<P>
</OL>The cursor will now be blinking in the middle of a UserForm_Initialize()
subroutine.

<OL><P><LI>Add code to this subroutine so it resembles the following:
<P>
<PRE>   Private Sub UserForm_Initialize()

       Set y = UserForm1.Controls.Add("Forms.CheckBox.1","MyControl",true)

   End Sub

</PRE></OL>To verify that the check box control called "MyControl" was added during
run time, add another on event procedure to the UserForm you inserted in
step 2.

<OL><P><LI>Click the Procedure drop-down in the UserForm1(Code) window and
   select AddControl in the drop-down list.

<P><LI>Add code to this subroutine so it resembles the following:
<P>
<PRE>   Private Sub UserForm_AddControl(ByVal Control As MSForms.Control)

       UserForm1.Controls(CheckBox1).Caption = "test"

   End Sub

</PRE><P><LI>Click the UserForm window to activate the UserForm.

<P><LI>Press the F5 key to run the UserForm.
<P>
</OL>The UserForm will appear in run time with a single check box displayed
(the caption on this check box will be "test", without quotation marks).
<P>
NOTE: When you dismiss the UserForm, the check box will not remain on the
UserForm.
<P>
To programmatically add a control to a UserForm so that it becomes part of
the UserForm, you must add it during Design Time. To programmatically add a
control during Design Time, do the following:

<OL><P><LI>Working with the same project from above, click Module on the Insert
   menu to add a module sheet to the project.

<P><LI>In the new module sheet, enter the following code:
<P>
<PRE>      Sub Design_time_control()

          Set x = Application.VBE.ActiveVBProject.VBComponents. _
              Item("UserForm1").Designer. _
              Controls.Add("Forms.CheckBox.1", "MyCheckbox", True)

          x.Caption = "test"

      End Sub

</PRE><P><LI>Place your cursor somewhere within the code you entered in Step 2.

<P><LI>Press the F5 key to run the macro.
<P>
</OL>Your UserForm will have a check box added to it and the caption on the
check box will be "test", without quotation marks.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in the Microsoft products
listed at the beginning of this article. We are researching this problem
and will post new information here in the Microsoft Knowledge Base as it
becomes available.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about adding controls to UserForms programmatically,
do the following:

<OL><P><LI>Insert a UserForm into your project.

<P><LI>Click Code on the View menu.

<P><LI>On a blank line on the UserForm(code) window type "Add", without
   quotation marks.

<P><LI>Highlight the word "Add" you typed in Step 3 and press F1.
<P>
</OL>The Add Method screen of the Microsoft Forms Reference will appear.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: XL97 vbe vba<BR>
Keywords          : kbcode kbprg xlvbahowto xlvbainfo<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 13, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
