

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: Using a Worksheet Function in a Visual Basic Macro </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q161120">
<META NAME="KBModify" CONTENT="1998/02/03">
<META NAME="KBCreate" CONTENT="1996/12/17">
<META NAME="Keywords" CONTENT="kbcode kbprg xlvbahowto xlvbainfo PgmOthr">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  You can call a built-in Microsoft Excel worksheet function directly from a  Microsoft Visual Basic for Applications macro. This article describes how  to use a built-in worksheet function in a macro.  MORE INFORMATION  Microsoft provides programmin...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QBS0,QAY5,QAB9,QBV8,QAH4,QABA,QAPN,QDNM,QAW6,QAGI,QA5F,QAMA,QA6A,QAJH P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: Using a Worksheet Function in a Visual Basic Macro</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 3, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q161120</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 98 Macintosh Edition
<LI>Microsoft Excel 97 for Windows
<LI>Microsoft Excel for Windows 95, versions 7.0, 7.0a
<LI>Microsoft Excel for Windows, versions 5.0, 5.0c
<LI>Microsoft Excel for Macintosh, versions 5.0, 5.0a
<LI>Microsoft Excel for Windows NT, version 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
You can call a built-in Microsoft Excel worksheet function directly from a 
Microsoft Visual Basic for Applications macro. This article describes how 
to use a built-in worksheet function in a macro.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>You can use a built-in worksheet function in a macro by calling the 
function as a method of the Application object (or the WorksheetFunction
object in Microsoft Excel 97 or Microsoft Excel 98). For example, to 
successfully call the ACOS worksheet function in a version of Microsoft 
Excel listed at the beginning of this article, you can use the following 
line of code in a macro:
<P>
<PRE>    X = Application.Acos (-1)

</PRE>If you are using Microsoft Excel 97 or Microsoft Excel 98, use the 
following line of code:
<P>
<PRE>    X = WorksheetFunction.Acos (-1)

</PRE>NOTE: If you attempt to use a built-in worksheet function without 
qualifying it with the Application or WorksheetFunction object, you may
receive the following error message:
<P>
<PRE>    Sub or Function Not Defined

</PRE>You are not able to use all built-in worksheet functions with the
Application or WorksheetFunction object. Visual Basic for Applications
provides many functions that are equivalent to the built-in worksheet
functions in Microsoft Excel. You cannot use a built-in worksheet functions
for which there is an equivalent in Visual Basic with the Application or
WorksheetFunction object.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For additional information about the worksheet functions that are not
supported with the Application or WorksheetFunction objects, please see the
following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q107564.htm">Q107564</A></B>
   TITLE     : XL: Not All Worksheet Functions Supported as Application

</PRE><h3>Microsoft Excel 97</h3>
 
<P>
For more information about using Microsoft Excel Worksheet Functions in
Visual Basic, click the Office Assistant in the Visual Basic Editor, type
"using built-in functions in a macro", click Search, and then click to view
"Using Microsoft Excel Worksheet Functions in Visual Basic."
<P>
<P><h3>Microsoft Excel 7.0</h3>
 
<P>
For a complete list of the worksheet functions that you can call with the
Application object, type the following text
<P>
<PRE>   worksheet functions, using

</PRE>and then double-click the selected text to go to the "List of Worksheet
Functions Available to Visual Basic" topic.
<P>
<P><h3>Microsoft Excel 5.0</h3>
 
<P>
For a complete list of the worksheet functions that can be called with the
Application object, choose the Search button in Visual Basic Help, and
type:
<P>
<PRE>   worksheet functions

</PRE>Choose the Show Topics button, select the topic "Using Worksheet Functions
in Visual Basic", and choose Go To.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: XL98 XL97 XL7 XL5 7.00 7.00a 5.00c 5.00 5.00a<BR>
Keywords          : kbcode kbprg xlvbahowto xlvbainfo PgmOthr<BR>
Version           : WINDOWS:5.0,5.0c,7.0,7.0a,97; MACINTOSH:5.0,98<BR>
Platform          : MACINTOSH WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 3, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
