

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OFF97: Custom Office Assistant Balloon Cannot Be Dismissed </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q164681">
<META NAME="KBModify" CONTENT="1998/02/27">
<META NAME="KBCreate" CONTENT="1997/03/06">
<META NAME="Keywords" CONTENT="kbcode kbinterop kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In the programs listed at the beginning of this article, if you run a Microsoft Visual Basic for Applications macro that displays a custom  Microsoft Office Assistant balloon, the following problems may occur:   - When you click OK in Microsoft Exc...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAKE,QAH4,QA0P,QA0O,QBS0,QBVP,QAUJ,QAPN,QAIH,QBVQ,QAJQ,QBWS,QAO4,QBXS,QBVV P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>OFF97: Custom Office Assistant Balloon Cannot Be Dismissed</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 27, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q164681</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
<LI>Microsoft Word 97 for Windows
<LI>Microsoft PowerPoint 97 for Windows
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
In the programs listed at the beginning of this article, if you run a
Microsoft Visual Basic for Applications macro that displays a custom 
Microsoft Office Assistant balloon, the following problems may occur:

<UL><LI>When you click OK in Microsoft Excel 97, the Office Assistant displays
   a balloon that contains an error message similar to the following:
<P>
<P><PRE>      Microsoft Excel
      The macro 'Module1.YourCustomMacro' cannot be found.
</PRE><P>
   When you click OK, the custom Office Assistant balloon appears again.

<LI>When you click OK in Microsoft Word 97 or Microsoft PowerPoint 97, the
   custom Office Assistant balloon remains on the screen, regardless of
   the number of times you click OK.

<LI>If you display the Office Assistant again, and then attempt to close
   it, the custom Office Assistant balloon appears. This behavior
   continues to occur until you quit and restart the program.
<P>
</UL><h2>CAUSE</h2>
 
<P>
These problems may occur when the following conditions are true:

<UL><LI>In the Visual Basic macro, you use the Callback property to set the
   name of a macro to run when a modeless custom Office Assistant balloon
   is displayed.
<P>
<P><PRE>    -and-
</PRE>
<LI>You set the Callback property to refer to a nonexistent macro, or you
   incorrectly use the Callback property to refer to a macro that does
   exist.
<P>
<P><PRE>    -and-
</PRE>
<LI>You run the Visual Basic macro, which then displays the custom Office
   Assistant balloon.
<P>
</UL><h2>RESOLUTION</h2>
 
<P>
To prevent these problems from occurring, do the following:

<UL><LI>Verify that you did not misspell the macro name that the Callback
   property refers to.
<P>
   For example, if you set the Callback property to refer to a macro named
   "Hello," make sure that the Hello macro exists in a project for the
   document.

<LI>If the macro that the Callback property refers to is in a different
   module in the same document, add the module name to the beginning of
   the macro name.
<P>
   For example, if you want the Callback property to refer to the macro
   named "Goodbye" in Module3, set the Callback property to
   Module3.Goodbye.
<P>
   NOTE: This requirement does NOT apply to Microsoft Excel 97.
<P>
</UL>If one of these problems already occurred, quit and restart the program in
which the problem occurs. After you do this, modify the Visual Basic for
Applications code so that the Callback property refers to the correct
macro name in a valid location.
<P>
Note that you can dismiss the Office Assistant window by clicking the Close 
button in the upper-right corner of the Office Assistant window while the 
custom Office Assistant balloon is displayed.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in the Microsoft products
listed at the beginning of this article. We are researching this problem
and will post new information here in the Microsoft Knowledge Base as it
becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without 
warranty either expressed or implied, including, but not limited to, the 
implied warranties of merchantability and/or fitness for a particular 
purpose. This article assumes that you are familiar with the programming 
language being demonstrated and the tools used to create and debug 
procedures. Microsoft support engineers can help explain the functionality 
of a particular procedure, but they will not modify these examples to 
provide added functionality or construct procedures to meet your specific 
needs. If you have limited programming experience, you may want to contact 
the Microsoft fee-based consulting line at (800) 936-5200. For more 
information about the support options available from Microsoft, please see 
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>In the Office 97 programs, you can create and display custom Office
Assistant balloons. To do this, use Visual Basic for Applications macros
that are similar to the following examples:
<P>
<PRE>   ' Both macros are contained in the same module, Module1.
   Sub BalloonTest()
       Dim Bln As Balloon
       Set Bln = Assistant.NewBalloon
       With Bln
           .Heading = "Heading"
           .Text = "Some text."
           .Mode = msoModeModeless   ' Make the balloon modeless.
           .Callback = "Goodbye"     ' Run this macro when OK is clicked.
           .Show                     ' Display the balloon.
       End With
   End Sub

   Sub Goodbye(Bln As Balloon, iBtn As Long, iPriv As Long)
       Assistant.Animation = msoAnimationSearching
       MsgBox "Goodbye!"
       Bln.Close
   End Sub

</PRE>When you run the BalloonTest Sub procedure, the Office Assistant window
appears and displays the custom balloon. When you click OK in the balloon,
the Goodbye Sub procedure runs and displays a message box. When you dismiss
the message box, the Office Assistant balloon disappears. This behavior is
correct.
<P>
If you set the Callback property so that it refers to a misspelled macro
name or an incorrect location, the problem described in this article 
occurs.
<P>
NOTE: In Microsoft Word 97 and Microsoft PowerPoint 97, if you set the
Callback property to refer to a macro that exists in another module, you 
must specify the module name before the macro name. For example, if you 
move the macro Goodbye to Module3, change the code to the following:
<P>
<PRE>  .Callback = "Module3.Goodbye"

</PRE>If you do not specify the module name, the problem occurs when you display
the custom Office Assistant balloon. In Microsoft Excel 97, this is not
required if the macro exists in the same workbook.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: OFF97 XL97 WORD97 PPT97 go away disappear vanish <BR>
xlvbahowto <BR>
Keywords          : kbcode kbinterop kbprg<BR>
Version           : 97<BR>
Platform          : WINDOWS<BR>
Issue type        : kbprb<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 27, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
