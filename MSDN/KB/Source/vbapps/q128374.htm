

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: Macro to Count the Number of Procedures on a Module Sheet </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q128374">
<META NAME="KBModify" CONTENT="1998/02/03">
<META NAME="KBCreate" CONTENT="1995/03/30">
<META NAME="Keywords" CONTENT="kbcode kbprg PgmHowto">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel, you can count the number of procedures on a module sheet by determining the number of times the word  Sub  appears as the first three characters on a line. Similarly, you can display each of the macro names that are on a module ...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBRZ,QAH4,QAG8,QBVP,QAFF,QAKC,QBC6,QBXT,QA5V,QAUR,QAIB,QAGB,QATX,QAEB,QAMB V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: Macro to Count the Number of Procedures on a Module Sheet</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 3, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q128374</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, versions 5.0, 5.0c
<LI>Microsoft Excel for the Macintosh, versions 5.0, 5.0a
<LI>Microsoft Excel for Windows NT, version 5.0
<LI>Microsoft Excel for Windows 95, versions 7.0, 7.0a
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Excel, you can count the number of procedures on a module
sheet by determining the number of times the word "Sub" appears as the
first three characters on a line. Similarly, you can display each of the
macro names that are on a module sheet.
<P>
One way to count the number of procedures on a module sheet is to create a
macro that saves the module sheet as a text file and then reads each line
of the text file to count the occurrences of the word "Sub." To return the
names of the macros on the module sheet, you can create a similar macro
that saves the module sheet as a text file and then displays the text that
follows each occurrence of the word "Sub" in the text file. This article
provides sample macros that demonstrate how each of these procedures can be
done.
<P>
<P><h3>Sample Visual Basic, Applications Edition, Macro Code</h3>
 
<P>
NOTE: Because of the design of the Visual Basic Editor in Microsoft
Excel 97 for Windows and Microsoft Excel 98 Macintosh Edition, the 
following code will not work in these versions of Microsoft Excel. More 
information will be added to this article as it becomes available.
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE><h3>Macro to Count Number of Procedures on a Module Sheet</h3>
 
<P>
The following macro saves a module sheet to a text file, opens the text 
file, counts the number of lines that start with "Sub" and then displays
this as the number of macros in the module:
<P>
<PRE>   Sub CountSubs()

       Dim Count As Integer, Filenum As Integer, textline As String

       ' Initialize the count of procedures to zero.
       Count = 0

       ' Save Module1 as a text file called TEMPFILE.TXT.
       Modules("Module1").Select
       ActiveWorkbook.SaveAs "TEMPFILE.TXT", xlText

       ' Retrieve the next available file number as FileNum and then open
       ' the text file with the file number.
       Filenum = FreeFile()
       Open "TEMPFILE.TXT" For Input As #Filenum
       On Error GoTo CloseFile

       ' Read each line of the text file until the end of the file is
       ' reached. If the first 3 characters of the line of text is equal to
       ' "Sub" after trimming excesses spaces, then increment count.

       Do While Not (EOF(Filenum))
           Line Input #Filenum, TextLine
           If Left(LTrim(TextLine), 3) = "Sub" Then Count = Count + 1
       Loop

       ' Close the file.
       Close #Filenum

       ' Display the count for the number of subs in the module sheet
       ' and Exit this procedure.

       MsgBox "There are " &amp; Count &amp; " Subs in Module1 of the " &amp; _
           "active workbook."
       Exit Sub

   CloseFile:

       ' Close the file and display a message that an error occurred.
       Close Filenum
       MsgBox "An error occurred"

   End Sub

</PRE>NOTE: If you want the macro to account for private, public, and static Sub
statements as well, replace the following line of the macro:
<P>
<PRE>   If Left(LTrim(TextLine), 3) = "Sub" Then Count = Count + 1

</PRE>with this code:
<P>
<PRE>   If Left(LTrim(TextLine), 3) = "Sub" Then Count = Count + 1
   If Left(LTrim(TextLine), 11) = "Private Sub" then Count = Count + 1
   If Left(LTrim(TextLine), 10) = "Public Sub" Then Count = Count + 1
   If Left(LTrim(TextLine), 10) = "Static Sub" Then Count = Count + 1

</PRE><h3>Macro to Display Macro Names Contained on a Module Sheet</h3>
 
<P>
The following macro saves a module sheet to a text file, opens the text
file, searches for lines that start with "Sub" and then strips out the
macro name to display it:
<P>
<PRE>   Sub DisplaySubs()

       Dim Filenum As Integer, textline As String
       Dim leftparen As Integer, macroname As String

       ' Save Module1 as a text file called TEMPFILE.TXT.
       Modules("Module1").Select
       ActiveWorkbook.SaveAs "TEMPFILE.TXT", xlText

       ' Retrieve the next available file number as FileNum and then open
       ' the text file with the file number.
       Filenum = FreeFile()
       Open "TEMPFILE.TXT" For Input As #Filenum
       On Error GoTo CloseFile

       ' Read each line of the text file until the end of the file is
       ' reached. If the first 3 characters of the line of text is equal to
       ' "Sub" after trimming excess spaces, get the macro name and display
       ' it.

       Do While Not (EOF(Filenum))
           Line Input #Filenum, TextLine
           If Left(LTrim(TextLine), 3) = "Sub" Then
               LeftParen = InStr(1, TextLine, "(")
               macroname = Mid(Left(TextLine, LeftParen - 1), 5)
               MsgBox macroname
           End If
       Loop

       ' Close the file.
       Close #Filenum

       Exit Sub

   CloseFile:

       ' Close the file and display a message that an error occurred.
       Close Filenum
       MsgBox "An error occurred"

   End Sub
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 5.00 5.00a 5.00c 7.00 list XL5 XL7<BR>
Keywords          : kbcode kbprg PgmHowto<BR>
Version           : WINDOWS:5.0,5.0c,7.0,7.0a; MACINTOSH:5.0,5.0a<BR>
Platform          : MACINTOSH WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 3, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
