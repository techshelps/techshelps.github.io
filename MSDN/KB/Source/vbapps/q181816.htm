

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WD97: How to Store and Retrieve Variables in Documents </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q181816">
<META NAME="KBModify" CONTENT="1998/03/13">
<META NAME="KBCreate" CONTENT="1998/02/26">
<META NAME="Keywords" CONTENT="kbdta kbdtacode word97 OffVBA">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  This article describes how to set and retrieve document variables using Microsoft Word.  MORE INFORMATION  Microsoft provides programming examples for illustration only, without warranty either expressed or implied, including, but not limited to, t...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAYL,QBS0,QAPN,QAKE,QAKD,QA6A,QBWS,QA7N,QBXS,QBWA,QAIH,QAPF,QA7O,QALW,QA5F P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>WD97: How to Store and Retrieve Variables in Documents</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 13, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q181816</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Word 97 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article describes how to set and retrieve document variables using
Microsoft Word.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>You can use the Microsoft Visual Basic for Applications Variables
collection to set and retrieve the contents of a string variable into a
Word document or template.
<P>
Also, you can use the DocVariable field to retrieve the value of a document
variable once it has been set.
<P>
<P><h3>To Set and Retrieve the Value of a Document Variable</h3>
 
<P>
The following sample macro uses the Variables property to store and then
retrieve the value of a string variable named "FullName" with the current
document.
<P>
<PRE>   Sub GetSetDocVars()

      Dim fName As String
      fName = "Joe Smith"

      ' Set contents of variable "fName" in a document using a document
      ' variable called "FullName".
      ActiveDocument.Variables.Add Name:="FullName", Value:=fName

      ' Retrieve the contents of the document variable.
      MsgBox ActiveDocument.Variables("FullName").Value

   End Sub

</PRE><h3>To Delete a Document Variable</h3>
 
<P>
The following sample macro uses the Variables property to first set and
retrieve the value of a document variable and then delete the variable from
the active document.
<P>
<PRE>   Sub GetSetDeleteDocVars()

      Dim fName As String
      fName = "Joe Smith"

      ' Set contents of variable "fName" in a document using a document
      ' variable called "FullName."
      ActiveDocument.Variables.Add Name:="FullName", Value:=fName

      ' Retrieve the contents of the document variable.
      MsgBox ActiveDocument.Variables("FullName").Value

      ' Delete the variable.
      ActiveDocument.Variables("FullName").Delete

   End Sub

</PRE><h3>To Retrieve the Value of a Document Variable Using the DocVariable Field</h3>
 
<P>
The following sample macro uses the Variables property to set a document
variable. Following the sample macro are steps to use the DocVariable field
to retrieve the value into the contents of the same document.
<P>
<PRE>   Sub GetSetDocVars()

      Dim fName As String
      fName = "Joe Smith"

      ' Set contents of variable "fName" in a document using a document
      ' variable called "FullName."
      ActiveDocument.Variables.Add Name:="FullName", Value:=fName

   End Sub

</PRE>To use the DocVariable field:

<OL><P><LI>On the Insert menu, click Field.

<P><LI>In the Categories list, click Document Automation.

<P><LI>In the Field Names list, click DocVariable.

<P><LI>Click in the Field codes box so the insertion point is one
   space past the word DocVariables.

<P><LI>In quotation marks, type the name of the document variable.
<P>
<P><PRE>      Example: "FullName"
</PRE>
<P><LI>Click OK.
<P>
</OL>If you need to preserve a value between sessions of a macro, you can store
values using any of the following methods:

<UL><LI>Use the PrivateProfileString property to store values to a private
   settings file.
<P>
   For more information about the PrivateProfileString property, click the
   Office Assistant while in the Visual Basic Editor, type
   "PrivateProfileString Property," click Search, and then click to view
   "PrivateProfileString Property."

<LI>Use the Variables property to store values in a document.
<P>
   For more information about the Variables property, click the Office
   Assistant while in the Visual Basic Editor, type "Variables Property,"
   click Search, and then click to view "Variables Property."

<LI>Use the Visual Basic for Applications Input/Output statements to
   write to a text file (for example, Write or Print statements).
<P>
   For more information about writing data to files, click the Office
   Assistant while in the Visual Basic Editor, type "Writing Data to
   Files," click Search, and then click to view "Writing Data to Files."

<LI>Use the AutoTextEntry Object to store values in an AutoText entry.
<P>
   For more information about the AutoTextEntry Object, click the Office
   Assistant while in the Visual Basic Editor, type "AutoTextEntry Object,"
   click Search, and then click to view "AutoTextEntry Object."
<P>
</UL>NOTE: If the Assistant is hidden, click the Office Assistant button on the
Standard toolbar. If the Assistant is not able to answer your query, please
see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q176476.htm">Q176476</A></B>
   TITLE     : OFF: Office Assistant Not Answering Visual Basic Questions

</PRE></OL><h2>REFERENCES</h2>
 
<P>
For additional information, please see the following articles in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../WORD/Q168923.htm">Q168923</A></B>
   TITLE     : WD97: Invalid Page Fault Using DocVariable Field

   ARTICLE-ID: <B><A HREF="../vbapps/Q173707.htm">Q173707</A></B>
   TITLE     : OFF97: How to Run Sample Code from Knowledge Base Articles

</PRE>For more information about getting help with Visual Basic for Applications,
please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q163435.htm">Q163435</A></B>
   TITLE     : VBA: Programming Resources for Visual Basic for
               Applications
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words:<BR>
Keywords          : kbdta kbdtacode word97 OffVBA<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 13, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
