

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL97: How to Move Between Custom UserForms with CommandButtons </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q161521">
<META NAME="KBModify" CONTENT="1998/03/13">
<META NAME="KBCreate" CONTENT="1996/12/26">
<META NAME="Keywords" CONTENT="kbcode kbprg xlvbahowto xlvbainfo">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  When you create a project with multiple UserForms, you can use CommandButtons to move between the UserForms. This article explains how to create two UserForms and includes a sample Visual Basic for Applications macro that moves between the UserForm...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QBS0,QBJZ,QBWS,QAYV,QAMB,QBV4,QACI,QA9N,QBVP,QAP2,QATX,QANJ,QAEF,QAHP P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL97: How to Move Between Custom UserForms with CommandButtons</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 13, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q161521</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
When you create a project with multiple UserForms, you can use
CommandButtons to move between the UserForms. This article explains how to
create two UserForms and includes a sample Visual Basic for Applications
macro that moves between the UserForms.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft support engineers can help explain the
functionality of a particular macro, they will not modify these examples to
provide added functionality, nor will they help you construct macros to
meet your specific needs. If you have limited programming experience, you
may want to consult one of the Microsoft Solution Providers. Solution
Providers offer a wide range of fee-based services, including creating
custom macros. For more information about Microsoft Solution Providers,
call Microsoft Customer Information Service at (800) 426-9400.
<P>
<P><h3>Creating the UserForms</h3>
 
<P>
To create the UserForms, use the following steps:

<OL><P><LI>Save and close any open workbooks, and then create a new workbook.

<P><LI>Start the Visual Basic Editor (press ALT+F11).

<P><LI>On the Insert menu, click UserForm.
<P>
</OL>This step inserts UserForm1 into the project.

<OL><P><LI>Add a TextBox and a CommandButton control to the UserForm.

<P><LI>Change the Caption property of the CommandButton to "show UserForm2"
   (without the quotation marks).

<P><LI>On the Insert menu, click UserForm.
<P>
</OL>This step inserts UserForm2 into the project.

<OL><P><LI>Add a TextBox and a CommandButton control to the UserForm.

<P><LI>Change the Caption property of the CommandButton to "show UserForm1"
   (without the quotation marks).
<P>
</OL><h3>Sample Macro for Moving Between UserForms</h3>
 

<OL><P><LI>Double-click the CommandButton on UserForm1.

<P><LI>Type the following code for the CommandButton1 Click event:
<P>
       Private Sub CommandButton1_Click()
<P>
<PRE>           'Set the text for TextBox1 in UserForm2 with the text in
           'TextBox1 in UserForm1.
           UserForm2.TextBox1.Text = TextBox1.Text

           UserForm1.Hide
           UserForm2.Show
       End Sub

</PRE><P><LI>Double-click the CommandButton on UserForm2.

<P><LI>Type the following code for the CommandButton1 Click event:
<P>
       Private Sub CommandButton1_Click()
<P>
<PRE>           'Set the text for the TextBox in UserForm1.
           UserForm1.TextBox1.Text = TextBox1.Text

           UserForm2.Hide
           UserForm1.Show
       End Sub

</PRE></OL>NOTE: Because the CommandButton and TextBox controls are on different
UserForms, you can use the same name for the controls.

<OL><P><LI>On the Insert menu, click Module.

<P><LI>Type the following code in this module:
<P>
<PRE>       Sub Show_UserForms()
           UserForm1.Show
       End Sub

</PRE><P><LI>Run the Show_UserForms macro.

<P><LI>Type any text in the TextBox on UserForm1, and then click the
    CommandButton.
<P>
</OL>UserForm1 is hidden. UserForm2 is displayed with the text you typed in
the TextBox on UserForm1.

<OL><P><LI>Type new text in the TextBox on UserForm2, and then click the
    CommandButton.
<P>
</OL>UserForm2 is hidden. UserForm1 is displayed with the text you typed in
the TextBox on UserForm2.

<OL><P><LI>Close the UserForm.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about Custom UserForms, click the Office Assistant,
type "custom dialog boxes", click Search, and then click to view "Creating
a custom dialog box".
<P>
NOTE: If the Assistant is hidden, click the Office Assistant button on the
Standard toolbar. If Microsoft Excel Help is not installed on your
computer, please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../OFFICE/Q120802.htm">Q120802</A></B>
   TITLE     : Office: How to Add/Remove a Single Office
               Program or Component
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: XL97<BR>
Keywords          : kbcode kbprg xlvbahowto xlvbainfo<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 13, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
