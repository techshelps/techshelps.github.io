

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: Multiple SendKeys Statements Turn Off NumLock Key </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q179987">
<META NAME="KBModify" CONTENT="1998/02/10">
<META NAME="KBCreate" CONTENT="1998/01/27">
<META NAME="Keywords" CONTENT="kbprg GnrlVB vbwin vb4win vb5all vb4all">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Executing at least two SendKeys statements in a row results in turning off the NumLock key. This problem may also affect the CapsLock and ScrollLock keys.  CAUSE =====  This problem deals with a nesting of capturing the keyboard state. The first Se...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAIJ,QAPN,QALS,QAB9,QABA,QBDT,QDIV,QAY5,QAH4,QA5F,QAMA,QDL9,QBXS,QBWQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: Multiple SendKeys Statements Turn Off NumLock Key</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 10, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q179987</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic for Applications version 5.0
<LI>Microsoft Visual Basic Standard, Professional, and Enterprise Editions,
   16-bit and 32-bit, for Windows, version 4.0
<LI>Microsoft Visual Basic Learning, Professional, and Enterprise Editions
   for Windows, version 5.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Executing at least two SendKeys statements in a row results in turning off
the NumLock key. This problem may also affect the CapsLock and ScrollLock
keys.
<P>
<P><h2>CAUSE</h2>
 
<P>
This problem deals with a nesting of capturing the keyboard state. The
first SendKeys statement takes a snapshot of the keyboard state and turns
off all toggles. The second SendKeys statement executes before the first
one played out all keys and restored the keyboard state. So, the keyboard
state is recorded again by the second SendKeys, this time with all toggles
still off. Eventually, the keyboard state is restored to the later state
(toggles off).
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To work around this problem, do one of the following:

<UL><LI>Send all the characters in a single SendKeys statement.
<P>
   -or-

<LI>Execute a DoEvents function between each SendKeys statement. However,
   depending on the complexity of the key strokes, this may not work in
   all cases.
<P>
   -or-

<LI>Determine the setting of the NumLock key prior to using SendKeys. Then,
   turn off the NumLock before using SendKeys. After using SendKeys, reset
   the NumLock to its previous setting. This is accomplished using the
   GetKeyboardState, keybd_event and SetKeyboardState API functions. See
   the REFERENCES section below for more information.
<P>
   -or-

<LI>Use API functions instead of SendKeys. See the REFERENCES section below
   for more information,
<P>
</UL><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products
listed at the beginning of this article. We are researching this
bug and will post new information here in the Microsoft Knowledge
Base as it becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 

<OL><P><LI>Start a new Standard EXE project in Visual Basic. Form1 is created by
   default.

<P><LI>Add a CommandButton to Form1.

<P><LI>Copy the following code to the Code window of Form1:
<P>
<P><PRE>      Option Explicit
</PRE><P>
<P><PRE>      Private Sub Command1_Click()
<PRE></PRE>         SendKeys "a"
         SendKeys "b"
      End Sub

</PRE><P><LI>On the Run menu, click Start or press the F5 key to start the program.
   If the NumLock light is off, turn on the NumLock light by pressing the
   NumLock key. Click the CommandButton and note that the NumLock light
   turns off.

<P><LI>Close Visual Basic and repeat the steps above; this time adding
   DoEvents, as follows:
<P>
<P><PRE>      Private Sub Command1_Click()
<PRE></PRE>         SendKeys "a"
         DoEvents
         SendKeys "b"
      End Sub

   NOTE: You should restart Visual Basic before trying the DoEvents
   solution. Otherwise, the keyboard state may be set incorrectly,
   preventing any workaround attempt from being successful.

</PRE></OL><h2>REFERENCES</h2>
 
<P>
"Visual Basic 5.0 Programmer's Guide to the Win32 API," by Dan Appleman
Chapter 6: Hardware and System Functions
<P>
For additional information, see the following article in the Microsoft
Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../VBWIN/Q177674.htm">Q177674</A></B>
   TITLE     : HOWTO: Toggle the NUM LOCK, CAPS LOCK, and SCROLL LOCK Keys
</PRE> 
<PRE>Keywords          : kbprg GnrlVB vbwin vb4win vb5all vb4all
Version           : WINDOWS:4.0,5.0
Platform          : WINDOWS
Issue type        : kbbug
Solution Type     : kbpending</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 10, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
