

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Retrieve Individual Bytes from a Multi-Byte Type in VB </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q171652">
<META NAME="KBModify" CONTENT="1997/09/29">
<META NAME="KBCreate" CONTENT="1997/07/18">
<META NAME="Keywords" CONTENT="PrgOther vb432 VB4WIN vb5all vb5howto VBKBWinAPI vbwin GnrlVb kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  This article demonstrates how to copy the individual bytes of data in a multi-byte data type, such as a long integer or a single-precision floating- point number, into a byte array. It also illustrates how to take an array of bytes and turn it into...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QALG,QDL9,QBWQ,QBWO,QBWN,QAY4,QAH4,QBVP,QA4Q,QAGI,QAP2,QA5F,QACI,QA9N P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Retrieve Individual Bytes from a Multi-Byte Type in VB</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q171652</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Learning, Professional, and Enterprise Editions
   for Windows, version 5.0
   on the following platform: x86
<LI>Microsoft Visual Basic Standard, Professional, and Enterprise Editions,
   32-bit only, for Windows, version 4.0
<LI>Microsoft Access versions 7.0, 97
<LI>Microsoft Excel 97 for Windows
<LI>Microsoft Excel for Windows 95, version 7.0
<LI>Microsoft Word 97 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article demonstrates how to copy the individual bytes of data in a
multi-byte data type, such as a long integer or a single-precision floating-
point number, into a byte array. It also illustrates how to take an array
of bytes and turn it into a specific data type that Visual Basic (and VBA)
will recognize.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
This code shows how to move the separate bytes of a long integer into a
four-element byte array and also how to turn the byte array back into a
long integer. In a Visual Basic project, place the following code in the
declarations section:
<P>
<PRE>   Private Declare Sub CopyMemory Lib "Kernel32" Alias "RtlMoveMemory" ( _
           ByRef Destination As Any, _
           ByRef Source As Any, _
           ByVal numbytes As Long)

</PRE>A long integer consists of four bytes. These four bytes are recognized by
Visual Basic to be one number. Use the following subroutine to move the
individual bytes into a byte array:
<P>
<PRE>   Public Sub LongToBytes(ByRef TheArray() As Byte, ByRef TheLong As Long)

     Call CopyMemory(TheArray(LBound(TheArray)), TheLong, 4)

   End Sub

</PRE>The first parameter passed to CopyMemory is the first element of the array
into which the bytes will be stored. (NOTE: The entire array is passed to
longToBytes.) The second parameter is the source variable. The third
parameter is how many bytes will be moved. Because a long integer consists
of four bytes, this parameter has been set to 4.
<P>
To go the other way, turning a byte array back into a long integer
variable, use the following code:
<P>
<PRE>   Public Function BytesToLong(TheArray() As Byte) As Long
   Dim TempLong As Long

     Call CopyMemory(TempLong, TheArray(LBound(TheArray)), 4)
     BytesToLong = TempLong

   End Function

</PRE>NOTE: As with any API call, passing improper memory addresses can cause
data corruption or could cause your program to terminate abnormally.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information on the use of the RtlMoveMemory function in Visual
Basic, please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>    ARTICLE ID: <B><A HREF="../VBWIN/Q129947.htm">Q129947</A></B>
    TITLE     : Win32 Replacement for the hmemcpy Function
</PRE> 
<PRE>Keywords          : PrgOther vb432 VB4WIN vb5all vb5howto VBKBWinAPI vbwin GnrlVb kbprg
Technology        : kbvba
Version           : WINDOWS:4.0 5.0 7.0 97
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
