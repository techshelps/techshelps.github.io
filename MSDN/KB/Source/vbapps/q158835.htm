

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL7: Get External Returns Incorrect Data and/or Blank Rows </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q158835">
<META NAME="KBModify" CONTENT="1998/02/05">
<META NAME="KBCreate" CONTENT="1996/11/06">
<META NAME="Keywords" CONTENT="kbtool xlquery xlvbainfo xldao">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  When you use the Get External Data command on the Data menu to return data from an external data source, the data that is returned is not correct. Some fields or rows that should contain data are blank; or some fields or rows contain incorrect data...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAUD,QAH4,QBJZ,QBI0,QBWS,QBVP,QAYY,QBS0,QAPN,QALW,QA5V,QANE,QAAP,QAIJ,QACF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL7: Get External Returns Incorrect Data and/or Blank Rows</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 5, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q158835</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows 95, versions 7.0, 7.0a
<LI>Microsoft Windows 95
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When you use the Get External Data command on the Data menu to return data
from an external data source, the data that is returned is not correct.
Some fields or rows that should contain data are blank; or some fields or
rows contain incorrect data.
<P>
<P><h2>CAUSE</h2>
 
<P>
This problem may occur when Microsoft Excel uses the Microsoft Query
dynamic data exchange (DDE) Fetch command to return the data to the
worksheet.
<P>
This problem occurs only under Windows 95. The problem does not occur when
you use Microsoft Windows NT 3.51 or later.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in the Microsoft products
listed at the beginning of this article. The problem has been corrected 
in Microsoft Excel 97 for Windows.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
For additional information on using DDE with Microsoft Query, please see
the following articles in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q149581.htm">Q149581</A></B>
   TITLE     : How to Retrieve Request Items Using DDERequest to MSQuery

   ARTICLE-ID: <B><A HREF="../vbapps/Q142357.htm">Q142357</A></B>
   TITLE     : XL: Visual Basic Example Using BuildSQL

   ARTICLE-ID: <B><A HREF="../vbapps/Q105953.htm">Q105953</A></B>
   TITLE     : MSQuery: Obtaining Login String from DDE Request to Query

</PRE>You can use the following workarounds to avoid the problem described above.
<P>
Microsoft provides examples of Visual Basic for Applications procedures 
for illustration only, without warranty either expressed or implied, 
including, but not limited to the implied warranties of merchantability 
and/or fitness for a particular purpose. The Visual Basic procedures in 
this article are provided 'as is' and Microsoft does not guarantee that 
they can be used in all situations. While Microsoft support engineers 
can help explain the functionality of a particular macro, they will not 
modify these examples to provide added functionality, nor will they 
help you construct macros to meet your specific needs. If you have 
limited programming experience, you may want to consult one of the 
Microsoft Solution Providers. Solution Providers offer a wide range of 
fee-based services, including creating custom macros. For more 
information about Microsoft Solution Providers, call Microsoft Customer 
Information Service at (800) 426-9400.
<P>
The following methods describe macros that you can use to successfully
return external data to your worksheet.
<PRE> 
</PRE><h3>Method 1: Using Data Access Objects (DAO)</h3>
 
<PRE> 
</PRE>You can use DAO in your macro to return the data to the worksheet. If 
you use this method, you must specify the path to the database, the 
Structured Query Language (SQL) statement for the query, and the 
destination cell for the data. The following macro example returns the 
data without any user interaction. To use this macro, use the following 
steps:
<PRE> 
</PRE><P><LI>On the Insert menu, point to Macro and click Module.
 
<P><LI>In the Visual Basic module, type the following code:
 
<PRE>      Sub GetDataUsingDAO()
 
          'Open the database.
          Set Db = opendatabase("c:\my documents\db1.mdb")

          'Create a recordset using a SQL statement.
          Set RS = Db.OpenRecordset("Select * from Table1")

          'Copy the field names starting at Sheet1!A1.
          For i = 1 To RS.Fields.Count
              Range("Sheet1!A1").Offset(, i - 1) = RS(i - 1).Name
          Next
 
          'Copy the results starting at Sheet1!A2.
          Range("Sheet1!A2").CopyFromRecordset RS

          Db.Close

      End Sub

</PRE><P><LI>Click References on the Tools menu, select "Microsoft DAO 3.0 Object
   Library", and then click OK.
 
</OL>The "Microsoft DAO 3.0 Object Library" check box should contain a check
mark.
<PRE> 
</PRE><P><LI>Click Macro on the Tools menu, click GetDataUsingDAO, and click Run to
   run the macro.
 
</OL><h3>Method 2: Using DDE with Microsoft Query</h3>
 
<PRE> 
</PRE></OL>You can use DDE with Microsoft Query to return the data to the worksheet.
When you use this method, you interactively select the data source, select
the database, and create the query. To use this macro, use the following
steps:
<PRE> 
</PRE><P><LI>On the Insert menu, point to Macro and click Module.
 
<P><LI>Type the following code in the module.
 
<PRE>      Sub GetDataUsingDDE()
 
          Dim chan As Integer
          Dim r As Variant, c As Variant
          Dim StartCell As Range
          Dim RowsToRetrieve As String
          Dim i As Integer
 
          'Activate query - if it is not running, an error occurs and the
          'error handler StartQuery will start Query.
          On Error GoTo StartQuery
          AppActivate "Microsoft Query"
          On Error GoTo 0

          'Initiate a channel to query and return control to the user.
          chan = DDEInitiate("MSquery", "system")
          DDEExecute chan, _
              "[UserControl('&amp;Return Data To Microsoft Excel', 3, true)]"

          'Prompt the user for the cell to return the data to.
          Set StartCell = Application.InputBox( _
              prompt:="Select the starting cell", Type:=8)

          'Obtain the number of rows and columns in the result.
          r = DDERequest(chan, "NumRows")
          c = DDERequest(chan, "NumCols")

          'Return the headers to the first row at the starting cell.
          DDEExecute chan, "[Fetch('Excel','" &amp; StartCell.Worksheet.Name &amp; _
              "','" &amp; StartCell.Resize(, c(1)).Address( _
              ReferenceStyle:=xlR1C1) &amp; "','R1:R1/Headers')]"

          'Return the data to the worksheet 100 rows at a time.
          For i = 1 To r(1) Step 100
              RowsToRetrieve = "R" &amp; i &amp; ":R" &amp; i + 100 - 1
              DDEExecute chan, "[Fetch('Excel','" &amp; StartCell.Worksheet.Name _
                  &amp; "','" &amp; StartCell.Offset(i).Resize(100, c(1)).Address( _
                  ReferenceStyle:=xlR1C1) &amp; "','" &amp; RowsToRetrieve &amp; "')]"
              DoEvents
          Next

          'Terminate the channel.
          DDETerminate chan

          Exit Sub

   StartQuery:
          Shell "c:\program files\common files\microsoft shared" &amp; _
              "\msquery\msqry32.exe", 2
          DoEvents
          Resume
   End Sub

</PRE></OL>NOTE: This example uses the DDE Fetch command to return the data to the
worksheet 100 rows at a time. To increase or decrease the number of rows
that are returned, modify the Step argument in the following line:
<PRE> 
   For i = 1 To r(1) Step 100
 
</PRE><P><LI>Click Macro on the Tools menu, click GetDataUsingDDE, and click Run to
   run the macro.
 
</OL>Microsoft Query starts.
<PRE> 
</PRE><P><LI>Create your query and then click "Return Data to Microsoft Excel" on the
   File menu.
 
<P><LI>When you are prompted, select a cell for the data and click OK.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about Data Access Objects, click the Index tab in
Microsoft Excel Help, type the following text
<P>
<PRE>   data access, using

</PRE></OL>and then double-click the selected text to go to the "Using Data Access"
topic.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: garbage character gap missing XL7<BR>
Keywords          : kbtool xlquery xlvbainfo xldao<BR>
Version           : 7.00 7.00a<BR>
Platform          : WINDOWS<BR>
Issue type        : kbprb<BR>
Solution Type     : kbcode<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 5, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
