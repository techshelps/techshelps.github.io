

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WD97: How to Implement a Delay in VB for Applications </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q162150">
<META NAME="KBModify" CONTENT="1998/03/13">
<META NAME="KBCreate" CONTENT="1997/01/14">
<META NAME="Keywords" CONTENT="kbdta kbdtacode kbwordvba kbmacroexample word8 word97 kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Word does not have a built-in method of delaying execution of a macro, but workarounds can be used to achieve this effect.  MORE INFORMATION  Microsoft provides programming examples for illustration only, without warranty either expressed or implie...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAH4,QAPN,QADN,QAKE,QAU3,QAMR,QAGI,QBWS,QAFH,QABA,QACE,QAVZ,QBVV,QA6A P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>WD97: How to Implement a Delay in VB for Applications</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 13, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q162150</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Word 97 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Word does not have a built-in method of delaying execution of a macro, but
workarounds can be used to achieve this effect.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>You can use one of the following methods to delay execution of a macro
using Visual Basic for Applications.
<P>
<P><h3>Method 1: Use an Empty For...Next Loop</h3>
 
<P>
A disadvantage to this method is that there is no direct way to determine
the exact amount of time the program will take to execute the loop. The
amount of time will be dependent on the speed of the user's computer. The
following code will execute a loop that does nothing but take up some time.
<P>
<PRE>   For iCount = 1 to 1000
   Next iCount

</PRE><h3>Method 2: Use an API Call to Suspend Word's Execution</h3>
 
<P>
Use an API call to suspend Word's execution for a fixed amount of time.
<P>
The Kernel32 contains a function that will pause an application's
execution for a specified amount of time, specified in milliseconds. To
use the function, it must first be declared in the General Declarations
section of the module in which it will be used:
<P>
<PRE>   Declare Sub Sleep Lib "kernel32" Alias "Sleep" _
   (ByVal dwMilliseconds As Long)

</PRE>Use the following syntax to call the Sleep function:
<P>
<PRE>   Sleep (1000)   '1 second delay

</PRE><h3>Method 3: Use the OnTime Method</h3>
 
<P>
Use the OnTime method to set an amount of time to pause.
<P>
The OnTime method uses the following syntax:
<P>
<PRE>   expression.OnTime(When, Name, Tolerance)

</PRE>Because the Name argument requires the name of a macro to run, you must
create two macros. The first macro to contain the OnTime Method call
and other commands relevant to your macro. The second macro to run when
the alloted time has passed. The second macro can be a 'dummy' macro
that does nothing.
<P>
This example runs the macro named "DummyMacro" 15 seconds from the time
the example is run.
<P>
<PRE>   Sub MyMainMacro()
      ' Pause for 15 seconds.
      Application.OnTime When:=Now + TimeValue("00:00:15"), _
         Name:="DummyMacro"
   End Sub

   Public Sub DummyMacro()
      ' This macro does nothing.
   End Sub

</PRE>For more information about the OnTime Method, click the Office Assistant
while in the Visual Basic Editor, type "OnTime Method," click Search, and
then click to view "OnTime Method."
<P>
NOTE: If the Assistant is hidden, click the Office Assistant button on the
Standard toolbar. If the Assistant is not able to answer your query, please
see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q176476.htm">Q176476</A></B>
   TITLE     : OFF: Office Assistant Not Answering Visual Basic Questions

</PRE>For additional information, please see the following article in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q173707.htm">Q173707</A></B>
   TITLE     : OFF97: How to Run Sample Code from Knowledge Base Articles

</PRE><h2>REFERENCES</h2>
 
<P>
For more information about getting help with Visual Basic for Applications,
please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q163435.htm">Q163435</A></B>
   TITLE     : VBA: Programming Resources for Visual Basic for
               Applications
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: vb vba vbe<BR>
Keywords          : kbdta kbdtacode kbwordvba kbmacroexample word8 word97 kbprg<BR>
Version           : 97<BR>
Platform          : WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 13, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
