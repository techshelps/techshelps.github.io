

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL Err Msg: "Not Enough Stack Space to Run Macro" </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q111867">
<META NAME="KBModify" CONTENT="1997/12/01">
<META NAME="KBCreate" CONTENT="1994/02/22">
<META NAME="Keywords" CONTENT="kbcode kbprg PgmOthr">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel, when you choose a control in a dialog box that is  assigned to an event macro when there are a total of three dialog boxes on  the screen that have not been dismissed, you may receive the following  error message(s):     Not Eno...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA01,QAH4,QBVP,QAGI,QBWS,QAB5,QAPN,QANX,QA7O,QAOE,QAMN,QBJZ,QBXS,QAG2,QA2Q V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL Err Msg: "Not Enough Stack Space to Run Macro"</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 1, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q111867</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, versions 5.0, 5.0c
<LI>Microsoft Excel for Windows 95, version 7.0
<LI>Microsoft Excel for the Macintosh, versions 5.0, 5.0a
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
In Microsoft Excel, when you choose a control in a dialog box that is 
assigned to an event macro when there are a total of three dialog boxes on 
the screen that have not been dismissed, you may receive the following 
error message(s):
<P>
<PRE>   Not Enough Stack Space to Run Macro

   -or-

   Error 28: Out of Stack Space

   -or-

   Run-time error '28':
   Out of stack space

</PRE><h2>WORKAROUND</h2>
 
<P>
To avoid receiving either of these error messages when you call nested
dialog boxes, do not assign a dialog control (such as a button or a check
box) to a macro event that calls another dialog box. Instead, assign the
control to first dismiss the active dialog box, then call the desired
dialog box from the same the macro that called the first dialog box. To
dismiss the active dialog box, do any of the following:

<UL><LI>Format the control with the Dismiss property:
<P>
   1. Select the control and choose Object from Format menu.
<P>
   2. In the Format Object dialog box, select the Dismiss check box on the
<P><PRE>      Control tab.
</PRE><P>
   -or-

<LI>Assign the control to a macro that contains the following command:
<P>
<P><PRE>      ActiveDialog.Hide
</PRE><P>
   -or-

<LI>Format the control with the Cancel property:
<P>
   1. Select the control and choose Object from Format menu.
<P>
   2. In the Format Object dialog box, Select the Cancel check box on the
<P><PRE>      Control tab.
</PRE>
<LI>For an additional workaround, please see the following article(s) in the
   Microsoft Knowledge Base:
<P>
<P><PRE>      ARTICLE-ID: <B><A HREF="../vbapps/Q125805.htm">Q125805</A></B>
<PRE></PRE>      TITLE     : XL: Displaying Several Dialog Boxes Without Looping

</PRE></UL><h2>MORE INFORMATION</h2>
 
<P>
A dialog box is not updated until after the event macro has finished. The
event macro is the code that is run when an action, such as choosing a
button, is taken in the dialog box. Because the dialog box is not updated,
if you call a dialog from another dialog, the first dialog is still loaded
(stacked) and is not released until the code that it ran (calling the
second dialog) has completed. This condition exists even if the property of
the button that called the second dialog is set to dismiss.
<P>
In Microsoft Excel 5.0, you can stack dialog boxes (that is, display more
than one dialog box on the screen at one time) with the top dialog box 
active. You can stack two dialog boxes, and still run code assigned to 
controls on the second dialog box. For example, you can call Dialog Two 
from Dialog One, and then run a macro assigned to a control on Dialog Two 
by choosing the control. In addition, you can call Dialog Three from Dialog 
Two, but you cannot run any event macros from this top level (Dialog Three) 
dialog box.
<P>
Note that you cannot hide a dialog box until the macro that hides the
dialog box ends.
<P>
<P><h3>Visual Basic Example</h3>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>In the following example, there are three dialog boxes. Each dialog
box can call either of the other two dialog boxes. Each button is
assigned to a macro that sets the value of a variable. The value of
the variable determines which dialog box to display next.

<OL><P><LI>Create three dialog sheets. Modify each dialog sheet to contain the
   following:
<P>
<P><PRE>      Dialog Sheet
<PRE></PRE>      Buttons        Dialog1  Dialog2  Dialog3
      ----------------------------------------

      OK               yes      yes      yes
      Cancel           yes      yes      yes
      Go_To_Dialog1    no       yes      yes
      Go_To_Dialog2    yes      no       yes
      Go_To_Dialog3    yes      yes      no

</PRE><P><LI>Set the dismiss property for each button by doing the following:
<P>
   a. Select the button on the dialog sheet.
<P>
   b. From the Format menu, choose Object. Select the Control tab, and
<P><PRE>      select the Dismiss check box. Choose OK.
</PRE>
<P><LI>In a new module in the same workbook, type the following:
<P>
<PRE>   ' Define the variable as Integer type
   Dim dialog_number As Integer

   Sub Main()
      dialog_number = 1                  'initialize the variable
      DialogSheets("Dialog1").Show       'display the first dialog sheet
      While dialog_number &gt; 0            'while variable is greater than 0
         Select Case dialog_number       'display a dialog based on the
                                         'value of dialog_number
            Case 1
                                              'dialog_number is 1
               DialogSheets("Dialog1").Show   'display dialog1
            Case 2
                                              'dialog_number is 2
               DialogSheets("Dialog2").Show   'display dialog2
            Case 3
                                              'dialog_number is 3
               DialogSheets("Dialog3").Show   'display dialog3

         End Select
      Wend
   End Sub

   'The following code sets the value of the dialog_number variable

   Sub Go_To_Dialog1()
      dialog_number = 1
   End Sub

   Sub Go_To_Dialog2()
      dialog_number = 2
   End Sub

   Sub Go_To_Dialog3()
      dialog_number = 3
   End Sub

   Sub OK_Or_Cancel()
      dialog_number = 0
   End Sub

</PRE><P><LI>Select the Dialog1 sheet tab. Select the Go_To_Dialog2 button, and
   choose Assign Macro from the Tools menu. From the Macro Name/Reference
   list, select Go_To_Dialog2() and choose OK.

<P><LI>Repeat step 4 for each button, assigning the corresponding macro to each
   button on each dialog sheet. Assign the OK_Or_Cancel macro to each OK
   and Cancel button.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
"Visual Basic User's Guide," version 5.0, page 219-239
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 7.00 5.00 5.0 overflow<BR>
Keywords          : kbcode kbprg PgmOthr<BR>
Version           : WINDOWS: 5.0, 5.0c, 7.0; MACINTOSH: 5.0, 5.0a<BR>
Platform          : MACINTOSH WINDOWS<BR>
Issue type        : kbprb<BR>
Solution Type     : kbworkaround<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 1, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
