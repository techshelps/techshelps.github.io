

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: How to Copy Text to TextBoxes Using the Characters Method </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q148815">
<META NAME="KBModify" CONTENT="1998/02/03">
<META NAME="KBCreate" CONTENT="1996/03/25">
<META NAME="Keywords" CONTENT="kbcode kbprg PgmHowto">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In a Microsoft Excel worksheet, you can use TextBox objects to add text that is not limited by the boundary of a cell. In Microsoft Excel, you can also use text boxes on dialog sheets and chart sheets when specially formatted text is required.  The...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBV4,QBT6,QAHP,QBVP,QATX,QAMB,QBS0,QAPN,QDNZ,QAFF,QBXS,QA9N,QAYL,QASB,QDMR P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: How to Copy Text to TextBoxes Using the Characters Method</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 3, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q148815</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, versions 5.0, 5.0c
<LI>Microsoft Excel for the Macintosh, versions 5.0, 5.0a
<LI>Microsoft Excel 98 Macintosh Edition
<LI>Microsoft Excel for Windows 95, version 7.0
<LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In a Microsoft Excel worksheet, you can use TextBox objects to add text
that is not limited by the boundary of a cell. In Microsoft Excel, you can
also use text boxes on dialog sheets and chart sheets when specially
formatted text is required.
<P>
The text string that is copied to or from a TextBox object has a 255-
character restriction when you use the Characters method in Visual Basic
for Applications. In other words, although a text box is capable of holding
approximately 2,000 characters, the text must be added in strings that are
no more that 255 characters in length. You can use the Sub procedures in 
the "More Information" section of this article to work around this 
restriction.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>The first Sub procedure (that is, TextBox_To_TextBox) demonstrates how to 
copy text from one TextBox DrawingObject into another text box. The second
<PRE>Sub procedure Cell_Text_To_TextBox, demonstrates a method that you can use 
</PRE>to copy the value of a range of cells into a text box.
<P>
The following Sub procedure copies the text from one text box on the active
sheet to another text box on the active sheet.
<P>
<P><h3>Sample Visual Basic Procedures</h3>
 
<P>
<PRE>   Sub TextBox_To_TextBox()

      ' Dimension the variables.
      Dim x As Integer
      Dim txtBox1 As TextBox, txtBox2 As TextBox
      Dim theText As String

      ' Set txtBox1 and txtBox2 equal to the active sheet's TextBox
      ' objects. Replace the ordinal number with your TextBox names
      ' in quotes. For example: ActiveSheet.DrawingObjects("Text 1")
      Set txtBox1 = ActiveSheet.DrawingObjects(1)
      Set txtBox2 = ActiveSheet.DrawingObjects(2)

      ' Create a For-Next construct that loops until there is no more
      ' text in txtBox1.
      For x = 1 To txtBox1.Characters.Count Step 250

         ' Place the first text box text into a variable called theText.
         theText = txtBox1.Characters(start:=x, Length:=250).Text

         ' Place the value of theText variable into second text box.
         txtBox2.Characters(start:=x, Length:=250).Text = theText

      Next
   End Sub

</PRE>The following Sub procedure copies the values from a range of cells that 
you specify into a text box on the active sheet.
<P>
<PRE>   Sub Cell_Text_To_TextBox()

      ' Dimension the variables.
      Dim txtBox1 As TextBox
      Dim theRange As Range, cell As Range
      Dim startPos As Integer

      ' Set txtBox1 equal to the active sheet's TextBox object. You can
      ' replace the ordinal number with your text box name in quotes.
      ' For example: ActiveSheet.DrawingObjects("Text 1")
      Set txtBox1 = ActiveSheet.DrawingObjects(1)

      ' Set a range on the active sheet equal to the range object text
      ' that you are interested in copying to the text box.
      Set theRange = ActiveSheet.Range("A1:A10")

      'Set the starting position for the text.
      startPos = 1

      ' Create a For-Each construct to loop through the cells in the range.
      For Each cell In theRange

         ' Populate the textbox with the cell values using the Characters 
         ' method.
         ' Note: Chr(10) can be used to add a new line in the textbox for 
         ' each cell.
         txtBox1.Characters(start:=startPos, _
            length:=Len(cell.Value)).Text = cell.Value &amp; Chr(10)

         ' Update the startPos variable to keep track of where the next 
         ' string of text will begin in the textbox.
         startPos = startPos + Len(cell.Value) + 1

      Next cell
   End Sub

</PRE><h2>REFERENCES</h2>
 
<P>
For additional information about getting help with Visual Basic for
Applications, please see the following article in the Microsoft Knowledge
Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q163435.htm">Q163435</A></B>
   TITLE     : VBA: Programming Resources for Visual Basic for
               Applications
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 5.00 5.00c 7.00 "characters method" "chr function" <BR>
"textbox control" textboxes "text boxes"<BR>
Keywords          : kbcode kbprg PgmHowto<BR>
Version           : WINDOWS: 5.0, 5.0c, 7.0, 97; MACINTOSH: 5.0, 5.0a, 98<BR>
Platform          : MACINTOSH WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 3, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
