

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: Automation Does Not Close Microsoft Excel </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q145770">
<META NAME="KBModify" CONTENT="1997/08/28">
<META NAME="KBCreate" CONTENT="1996/02/07">
<META NAME="Keywords" CONTENT="AutoGnrl kbinterop IntpOleA">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  Microsoft Excel does not automatically close after an application, such as one written in Microsoft Access, opens Microsoft Excel using Automation and then closes. Microsoft...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QA1S,QAGB,QDN9,QAPN,QA2K,QAAW,QBVV,QAH4,QBS0,QAIA,QAJH,QA5F,QAY5,QAMA P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: Automation Does Not Close Microsoft Excel</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 28, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q145770</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 2.0, 7.0, 97
<LI>Microsoft Excel versions 5.0, 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
Microsoft Excel does not automatically close after an application, such as
one written in Microsoft Access, opens Microsoft Excel using Automation
and then closes. Microsoft Excel will remain open. This article explains
how to close Microsoft Excel when using Automation from Microsoft Access.
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
NOTE: Visual Basic for Applications is called Access Basic in Microsoft
Access version 2.0. For more information about Access Basic, please refer
to the "Building Applications" manual.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
When you use Automation to control Microsoft Excel and you want the
instance of Microsoft Excel to close, you must use the Quit method.
Otherwise, the instance of Microsoft Excel will remain open.
<P>
If the instance of Microsoft Excel is hidden and remains open, a memory
shortage could result. For example, as a developer, you may create several
hidden instances of Microsoft Excel with the misunderstanding that the
instances will automatically close when your client application is closed.
It is not visibly apparent that hidden instances remain open and are using
memory. To avoid possible memory shortages, you should use the Quit method
to close the instance of Microsoft Excel, or you should unhide the instance
(see the examples later in this article) so that the user can manually
close it.
<P>
The syntax for the Quit method depends on your version of Microsoft Access.
<P>
<P><h3>Microsoft Access 2.0</h3>
 
<P>
In Microsoft Access 2.0, you must put brackets around methods that are
common to both Microsoft Access and the application your are controlling
through Automation in order for your code to compile. The Close and the
Quit methods are examples of this. The following function creates a new
instance of Microsoft Excel, unhides it, and then closes it with the Quit
method. Note that brackets are placed around the Quit method.
<P>
<PRE>   Function OLE_To_Excel ()
      Dim objExcel As Object
      Set objExcel = CreateObject("Excel.Application")
      objExcel.Visible = True
      objExcel.[Quit]           ' Brackets around Quit are required.
                                ' If you don't use brackets around Quit,
                                ' the code will not compile.

      Set objExcel = Nothing    'optional.
   End Function

</PRE><h3>Microsoft Access 7.0 and 97</h3>
 
<P>
Microsoft Access 7.0 and 97 do not require brackets around "common" methods
in order for your Automation code to compile. In fact, some methods (such
as the Close method) generate a run-time error if you enclose them in
brackets. Brackets around the Quit method will not generate an error;
however, with brackets around the Quit method, Microsoft Excel will not
close. Therefore, in Microsoft Access 7.0 and 97, you should not use
brackets in your Automation code. The following function creates a new
instance of Microsoft Excel, unhides it, and then closes it with the Quit
method.
<P>
<PRE>   Function OLE_To_Excel()
      Dim objExcel As Object
      Set objExcel = CreateObject("Excel.Application")
      objExcel.Visible = True
      objExcel.Quit             ' Must not use brackets around Quit.
                                ' If you put brackets around Quit,
                                ' Microsoft Excel will not close.

      Set objExcel = Nothing    ' optional.
   End Function

</PRE><h3>Converting from Microsoft Access 2.0</h3>
 
<P>
If you have a database application created in Microsoft Access 2.0 that
uses Automation and you want to use this application in Microsoft
Access 7.0 or 97, you should convert the database and manually remove any
brackets in your Automation code.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about Automation, search on "Automation," and then
"Automation with Microsoft Access" using the Microsoft Access 97 Help
Index.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: conversion issue<BR>
Keywords          : AutoGnrl kbinterop IntpOleA<BR>
Technology        : kbole<BR>
Version           : 2.0 7.0 97<BR>
Platform          : WINDOWS<BR>
Hardware          : x86<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 28, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
