

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Error Referencing Foreign Language Object Library </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q113987">
<META NAME="KBModify" CONTENT="1997/07/29">
<META NAME="KBCreate" CONTENT="1994/04/21">
<META NAME="Keywords" CONTENT="kberrmsg kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  If you use the References dialog box to add a reference to an object library (.OLB) file, such as VBAFR.OLB, in a Visual Basic module that is written in a different language, you receive the following error message:     Object library's language se...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QBVP,QAPN,QBWI,QBHQ,QAW6,QAWP,QBXS,QAH4,QAB4,QAFI,QA5F,QAB3,QDL9,QBWQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Error Referencing Foreign Language Object Library</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q113987</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Programming System, Applications Edition,
   version 1.0
<LI>Microsoft Project for Windows, version 4.0
<LI>Microsoft Excel for Windows, version 5.0
<LI>Microsoft Excel for Windows 95, version 7.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
If you use the References dialog box to add a reference to an object
library (.OLB) file, such as VBAFR.OLB, in a Visual Basic module that is
written in a different language, you receive the following error message:
<P>
<PRE>   Object library's language setting incompatible with current project

</PRE><h2>CAUSE</h2>
 
<P>
This is by design in Microsoft Visual Basic Programming System,
Applications Edition. You cannot reference a object library file in a
project that is using a different language. However, when you use the
References dialog box to reference an object library file for a different
language than the language your project is using, you "register" this
object library, even though you receive the error message listed above.
<P>
Once the different language version of the object library file is
registered, you can choose this Language setting from the Module General
tab in the Options dialog box and use this language version in any new
project. This setting determines the language that is used when you create
a new project.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
To register a different language version of an object library file and
reference this language version in a new Visual Basic project, do the
following:

<OL><P><LI>Copy the object library files (VBA*.OLB) to the SYSTEM subdirectory
   of your Windows directory (for example, C:\WINDOWS\SYSTEM). Copy
   the Microsoft Excel 5.0 object library files (XL*.OLB) to the
   directory in which you installed Microsoft Excel (wherever EXCEL.EXE is
   located).

<P><LI>Start the application that you are using to create the Visual Basic
   module, for example, Microsoft Excel version 5.0.

<P><LI>Create a new module. In the module, choose References from the Tools
   menu. Choose the Browse button. From the Directories list, select the
   Windows SYSTEM subdirectory.

<P><LI>From the File Name list, select the object library file (for example,
   XLFR50.OLB) and choose OK. Choose OK in the dialog box that appears with
   the error message above.

<P><LI>Repeat step 4 with the Visual Basic for Applications object library
   file (for example, VBAFR.OLB). In the References dialog box, choose OK.

<P><LI>From the Tools menu, choose Options. Select the Module General tab, and
   under International, select Default Settings. From the Language/Country
   list, select the language and country of the object library file you
   want to use. Choose OK.

<P><LI>Create a Visual Basic module in a new project.
<P>
</OL>Note that in Microsoft Excel, you must create a new workbook and then
create the new module to use the new default Language/Country option. In
Microsoft Project, you must create a new project and then create the new
macro, and the macro must be stored in the project file.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The English object library file, VBAEN.OLB, is located in the SYSTEM
subdirectory of your Windows directory. The Microsoft Project 4.0
object library file, PROJEN40.OLB, and the Microsoft Excel 5.0 object
library file, XLEN50.OLB, are located in the directories in which you
installed the respective applications.
<P>
These object libraries are automatically listed in the References
dialog box in Microsoft Project, and in Microsoft Excel, and provide
access to the methods and properties in the Microsoft Visual Basic
Programming System, Applications Edition and in the individual
applications.
<P>
Note that a Visual Basic module cannot have references to two different
language versions of the Visual Basic object library or the application
object library. The referenced languages must correspond to the
Language/Country setting for the module. You can, however, reference a
project using one language from a project written in another language.
<P>
<P><h2>REFERENCES</h2>
 
<P>
"Visual Basic User's Guide, Microsoft Excel," version 5.0, pages 281-286
 
<PRE>Keywords          : kberrmsg kbprg
Version           : 1.00
Platform          : WINDOWS</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
