

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MXL5: Option Button and Check Box Labels Don't Update Properly </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q147316">
<META NAME="KBModify" CONTENT="1998/02/03">
<META NAME="KBCreate" CONTENT="1996/02/22">
<META NAME="Keywords" CONTENT="kbcode kbprg PgmOthr">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  When you create a dynamic custom dialog box in Microsoft Excel for the Macintosh, versions 5.0 and 5.0a, and one action of the dynamic trigger control changes labels on option buttons or check boxes, you may notice that text from a previous label i...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAMB,QAC2,QABI,QAHP,QAB5,QBS0,QA7O,QAOE,QAMN,QAGI,QABH,QBVP,QAVS,QBJQ,QAB9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>MXL5: Option Button and Check Box Labels Don't Update Properly</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 3, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q147316</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel for the Macintosh, versions 5.0, 5.0a
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When you create a dynamic custom dialog box in Microsoft Excel for the
Macintosh, versions 5.0 and 5.0a, and one action of the dynamic trigger
control changes labels on option buttons or check boxes, you may notice
that text from a previous label is not replaced by the new label.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
Microsoft provides programming examples for illustration only, without 
warranty either expressed or implied, including, but not limited to, the 
implied warranties of merchantability and/or fitness for a particular 
purpose. This article assumes that you are familiar with the programming 
language being demonstrated and the tools used to create and debug 
procedures. Microsoft support engineers can help explain the functionality 
of a particular procedure, but they will not modify these examples to 
provide added functionality or construct procedures to meet your specific 
needs. If you have limited programming experience, you may want to contact 
the Microsoft fee-based consulting line at (800) 936-5200. For more 
information about the support options available from Microsoft, please see 
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>To work around this problem, have your dynamic dialog box redrawing Sub
procedures call the following Visual Basic for Applications routine (or
something similar) whenever you need to rewrite an option button or check
box label:
<P>
<PRE>   ' Make sure to call this procedure after assigning the new labels to the
   ' controls. This Sub Procedure has two arguments: Ctrl is the control 
   ' and NumToBlank is the number of spaces necessary to cover up the 
   ' longest possible caption for the control.

   Sub ClearLabels(Ctrl as Object, NumToBlank as Integer)
       ' Follow the current label with a lot of spaces.
       Ctrl.Caption = Ctrl.Caption &amp; _
           String(NumToBlank - Len(Ctrl.Caption), "    ")
   End Sub

</PRE>To call this procedure within a Visual Basic for Applications module and
have it apply to an option button named "Option1" (without the quotation
marks) on the Active Dialog, and to pad the label with 30 spaces, include a
call in the procedure that writes the labels as follows:
<P>
<PRE>   ClearLabels ActiveDialog.OptionButtons("Option1"), 30

</PRE>Keep in mind that with proportional fonts, it may take more than 10 spaces
to obscure 10 wider characters (such as the "#" character). Also keep in
mind that the ClearLabels procedure must be called after making the
assignment of the new label caption.
<P>
If you prefer to have one procedure fix all of the option buttons at once
by looping through them, you can create a procedure such as the following:
<P>
<PRE>   ' Make sure to call this after assigning the new labels to the controls.

   Sub Clear_Labels()
       ' Dimension a variable to hold the objects.
       Dim Control As Object
       ' Sets up a loop to run through every option button in the active
       ' dialog. Change ".OptionButtons" to ".CheckBoxes" if working with
       ' check boxes.
       For Each Control In ActiveDialog.OptionButtons
           ' Set the caption equal to itself with 35 spaces after it.
           ' You may need to edit this line to increase or decrease the
           ' number of characters in the final label. Keep in mind that
           ' with proportional fonts, it may take more than 10 spaces to
           ' cover up 10 other characters.
           Control.Caption = Control.Caption &amp; _
               String(35 - Len(Control.Caption), " ")
       ' Loop through the code.
       Next Control
   End Sub

</PRE><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in the products listed at the
beginning of this article. This problem was corrected in Microsoft Excel 98 
Macintosh Edition.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about affecting controls and dialog boxes in Visual
Basic for Applications, consult the "Visual Basic User's Guide," Chapter 11
"Controls and Dialog Boxes."
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 5.00 5.00a CheckBoxes Check Boxes Mac XL5<BR>
Keywords          : kbcode kbprg PgmOthr<BR>
Version           : MACINTOSH:5.0,5.0a<BR>
Platform          : MACINTOSH<BR>
Issue type        : kbbug<BR>
Solution Type     : kbpending<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 3, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
