

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: SQLRetrieve Defines Field Names on Active Workbook </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q117644">
<META NAME="KBModify" CONTENT="1997/12/01">
<META NAME="KBCreate" CONTENT="1994/07/05">
<META NAME="Keywords" CONTENT="kbcode kbprg xlquery SynFnc">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel, if you are using the Visual Basic, Applications Edition  SQLRetrieve command, and you want each column of results to be declared as  a named range on the worksheet, you can set the  NamedRngLogical  argument  to TRUE.  The name ...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QBS0,QAH4,QA5V,QBXT,QBXS,QAIB,QAUJ,QAPN,QAPF,QAB9,QAVZ,QAHE,QDMR,QAY2 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: SQLRetrieve Defines Field Names on Active Workbook</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 1, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q117644</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, versions 5.0, 5.0c
<LI>Microsoft Excel for Windows 95, version 7.0
<LI>Microsoft Excel for the Macintosh, versions 5.0, 5.0a
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Excel, if you are using the Visual Basic, Applications Edition 
SQLRetrieve command, and you want each column of results to be declared as 
a named range on the worksheet, you can set the "NamedRngLogical" argument 
to TRUE.
<P>
The name of each range is the field name of a column's result set. The
syntax for the SQLRetrieve statement is as follows:
<P>
<PRE>   SQLRetrieve(ConnectionNum, DestinationRef, MaxColumns, MaxRows,
     ColNamesLogical, RowNumsLogical, NamedRngLogical,
     FetchFirstLogical)

</PRE>When you execute the SQLRetrieve command with the argument 
"NamedRngLogical" set to TRUE, the column names in the result set will
always be defined on the active workbook regardless of what the
"DestinationRef" argument is set to. If no workbooks are active when you
run the SQLRetrieve command, and if "NamedRngLogical" is set to TRUE, you
will receive the #N/A error value; however, the records will still be
retrieved to the range specified by destination.
<P>
NOTE: The information in this article also applies to the Microsoft
Excel 4.0 command SQL.EXEC.QUERY.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Visual Basic Code Example</h3>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>Note that a line that is preceded by an apostrophe introduces a comment in 
the code--comments are provided to explain what the code is doing at a 
particular point in the procedure. Note also that an underscore character 
(_) indicates that code continues from one line to the next. You can type 
lines that contain this character as one logical line or you can divide the 
lines of code and include the line continuation character. For more 
information about Visual Basic for Applications programming style, see the 
"Programming Style in This Manual" section in the "Document Conventions" 
section of the "Visual Basic User's Guide."
<P>
The following sample Visual Basic code uses the CUSTOMER.DBF file included
with the sample data source NWind and assumes that:

<OL><P><LI>The NWind ODBC driver is installed and points to the Windows or a shared
   MSAPPS\MSQUERY directory.

<P><LI>The module sheet has references to XLODBC.XLA found in the
   EXCEL\LIBRARY\MSQUERY directory, under the TOOLS-REFERENCES menu.
<P>
</OL>To run the example, follow these steps:

<OL><P><LI>In a new module sheet, enter in the following code:
<P>
<PRE>      Sub GetData()

         ' To define the ranges for the column names in the workbook to 
         ' which the data is returned, use the following macro:

         Dim DestRange As Object
         Dim Chan, NumCols, NumRows As Variant
         Dim i As Integer

         Set DestRange = ThisWorkbook.Sheets("Sheet1").Range("A1")

         Chan = SQLOpen("DSN=NWind;FIL=dBase4;")

         ' Enter the following statement on a single line.
         NumCols = SQLExecQuery(Chan, "SELECT customer.CONTACT, " &amp; _
           "customer.COMPANY FROM customer.dbf")

         NumRows = SQLRetrieve(Chan, DestRange, , , True)

         SQLClose(Chan)

         DestRange.Resize(NumRows + 1, NumCols).CreateNames Top:=True, _
            Left:=False

      End Sub

</PRE><P><LI>Switch to a worksheet.

<P><LI>From the Tools menu, choose Macros, and then select the GetData macro.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 5.00 5.00a 5.00c 7.00<BR>
Keywords          : kbcode kbprg xlquery SynFnc<BR>
Version           : WINDOWS:5.0,5.0c,7.0; MACINTOSH:5.0,5.0a<BR>
Platform          : MACINTOSH WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 1, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
