

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: How to Get Red, Green, or Blue Components from RGB Value </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q112061">
<META NAME="KBModify" CONTENT="1997/08/29">
<META NAME="KBCreate" CONTENT="1994/03/01">
<META NAME="Keywords" CONTENT="kbprg PgmHowTo">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  This article describes a sample user-defined Visual Basic for Applications function, GetRGB(), that returns the red, green, or blue component from an RGB color value. Note that t...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAG9,QA1S,QBS0,QDN9,QAUD,QAPG,QA5F,QAMA,QAH4,QAJG,QAY5,QAKD,QAY2,QAPN,QAD2 P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: How to Get Red, Green, or Blue Components from RGB Value</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q112061</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 1.0, 1.1, 2.0, 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
This article describes a sample user-defined Visual Basic for Applications
function, GetRGB(), that returns the red, green, or blue component from an
RGB color value. Note that this behavior is the opposite of the Visual
Basic for Applications function RGB().
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
NOTE: Visual Basic for Applications is called Access Basic in Microsoft
Access versions 1.x and 2.0. For more information about Access Basic,
please refer to the "Introduction to Programming" manual in Microsoft
Access version 1.x or the "Building Applications" manual in Microsoft
Access version 2.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
RGB color values are mathematical combinations of red, green, and blue
components. The intensities of these components can range from 0 to 255.
For example, the RGB color value for white is 16777215, which has component
intensities of 255 for red, green, and blue.
<P>
The following example demonstrates how to use the GetRGB() function to
return the RGB color components from the RGB color value in the Order
form's detail section BackColor property:

<OL><P><LI>Open the sample database Northwind.mdb (or NWIND.MDB in versions 1.x
   and 2.0).

<P><LI>Create a module and type the following line in the Declarations section:
<P>
<P><PRE>      Option Explicit
</PRE>
<P><LI>Type the following procedure:
<P>
<P><PRE>      '-----------------------------------------------------------------
      'PURPOSE: Returns red/green/blue color from RGB color value.
      'ACCEPTS: RGB color value as Long, and component number as integer
<PRE></PRE>      '         that represents the component color to return (1=red,
      '         2=green, 3=blue).
      'RETURNS: The intensity of the color component (0 - 255) as an
      '         integer or -1 indicating that an argument was invalid.
      '-----------------------------------------------------------------
      Function GetRGB (RGBval As Long, Num As Integer) As Integer
         ' Check if Num, RGBval are valid.
         If Num &gt; 0 And Num &lt; 4 And RGBval &gt; -1 And RGBval &lt; 16777216 Then
           GetRGB = RGBval \ 256 ^ (Num - 1) And 255
         Else
           ' Return True (-1) if Num or RGBval are invalid.
           GetRGB = True
         End If
      End Function

</PRE><P><LI>Save the module as MyUtilities, and then close it.

<P><LI>Create the following macro with the actions listed:
<P>
<PRE>      Macro Name  Action   Comment
      ---------------------------------------------
      GetRGB      MsgBox   Display red component
                  MsgBox   Display green component
                  MsgBox   Display blue component

      GetRGB Actions
      -------------------------------------------------------------------
      MsgBox:
        Message: =GetRGB(Forms![Orders].Section(0).Backcolor,1) &amp; ": Red"
      MsgBox:
        Message: =GetRGB(Forms![Orders].Section(0).Backcolor,2) &amp; ": Green"
      MsgBox:
        Message: =GetRGB(Forms![Orders].Section(0).Backcolor,3) &amp; ": Blue"

</PRE><P><LI>Save the macro as GetRGB, and then close it.

<P><LI>Open the Orders form in Form view.

<P><LI>From the Database window, run the GetRGB macro. Note that you can change
   the BackColor property of the detail section of the Orders form, and
   then run the macro again to see the results change.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about the RGB() function, search the Help Index for
"RGB Function."
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: video screen<BR>
Keywords          : kbprg PgmHowTo<BR>
Version           : 1.0 1.1 2.0 7.0 97<BR>
Platform          : WINDOWS<BR>
Hardware          : x86<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
