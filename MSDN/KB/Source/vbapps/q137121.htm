

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: Do Not Jump into WITH Statement Blocks </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q137121">
<META NAME="KBModify" CONTENT="1997/08/28">
<META NAME="KBCreate" CONTENT="1995/09/20">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  The With statement enables you to perform a series of references to a specified object without having to repeat the name of the object. For example, if you have a number of ...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QAHC,QAB9,QAA8,QA1S,QBWS,QA2Q,QAGI,QAG2,QAY4,QAH4,QAEV,QAVX,QAVW,QBS0 P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: Do Not Jump into WITH Statement Blocks</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 28, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q137121</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
The With statement enables you to perform a series of references to a
specified object without having to repeat the name of the object. For
example, if you have a number of different properties to change on a single
object, it is more convenient to place the property assignment statements
inside the With control structure. In this manner, you have to refer to the
object only once instead of having to refer to it with each property
assignment.
<P>
The following example illustrates the use of the With statement to assign
values to several properties of the same object:
<P>
<PRE>   With MyLabel
      .Height = 2000
      .Width = 2000
      .Caption = "This is MyLabel"
   End With

</PRE>The With statement behaves differently than other block structures in
the Basic programming language. The With statement does not permit using a
GoTo statement to enter the With/End With statement block. Other block
structures like "If/End If" and "Select Case/End Select" in the Basic
programming language support the GoTo statement.
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To see the behavior of the With statement, follow these steps.
<P>
CAUTION: Following the steps in this example will modify the sample
database Northwind.mdb. You may want to back up the Northwind.mdb file or
perform these steps on a copy of the Northwind database.

<OL><P><LI>Open the sample database Northwind.mdb.

<P><LI>Create a module and type the following line in the Declarations
    section:
<P>
       Option Explicit

<P><LI>Type the following procedure:
<P>
<PRE>       Sub TestWith(MyControl As Control, Optional Action As Variant)
          On Local Error GoTo Tester_Err
             Dim MyAction As Integer
          Const JumpIn = 1
          Const JumpOut = 2
          Const JumpIntoIf = 3
          Const JumpIntoSelect = 4
          MyAction = CInt(Action)

          If MyAction = JumpIn Then ' Jump to the WITH block.
             GoTo Tester_Jump1
          ElseIf MyAction = JumpIntoIf Then ' Jump to the IF block.
             GoTo Tester_Jump2
          ElseIf MyAction = JumpIntoSelect Then ' Jump to SELECT block.
             GoTo Tester_Jump3
          End If

          ' Start With block.
          With MyControl
             .Caption = "Now Testing"
       Tester_Jump1:
             If MyAction = JumpOut Then ' Jump out of a WITH block
                GoTo Tester_End
             End If
             .ForeColor = 255
          End With

          ' If block test.
          If MyAction Then
       Tester_Jump2:
          End If

          ' Select case block test.
          Select Case MyAction
             Case JumpIntoSelect
       Tester_Jump3:
          End Select
       Tester_End:
          Exit Sub
       Tester_Err:
          MsgBox Error$
          Resume Tester_End
       End Sub

</PRE><P><LI>Save the module and close the Code window.

<P><LI>Create the following form with a command button and save it as Test1.
<P>
       Form: Test1
       ------------------------
       Caption: TestForm
       ControlSource: &lt;unbound&gt;
<P>
       Command Button:
<PRE>          Name: btnTest
          Caption: My Test
          OnClick: [Event Procedure]

</PRE><P><LI>Add the following code to the OnClick property of btnTest command
    button.
<P>
       Private Sub btnTest_Click()
<PRE>          Const JumpIn = 1
          Const JumpOut = 2
          Const JumpIntoIf = 3
          Const JumpIntoSelect = 4

          Call TestWith(ActiveControl)
          MsgBox "Normal Use of [WITH-END WITH] block"
          Call TestWith(ActiveControl, JumpIn)
          MsgBox "Jumped into [WITH-END WITH] block"
          Call TestWith(ActiveControl, JumpOut)
          MsgBox "Jumped out of [WITH-END WITH] block"
          Call TestWith(ActiveControl, JumpIntoIf)
          MsgBox "Jumped into a [IF-END IF] block"
          Call TestWith(ActiveControl, JumpIntoSelect)
          MsgBox "Jumped into a [SELECT-END SELECT] block"
       End Sub

</PRE><P><LI>Save the form and view the form in Form view.

<P><LI>Click the btnTest command button. Note that the following message
    appears:
<P>
       Normal Use of [WITH-END WITH] block
<P>
    This is the normal usage of the With statement. The Caption of
    the command button changes to "Now Testing," and the button's
    ForeColor property changes to red (255).

<P><LI>Click OK in the message box to continue the program. Note that
    the following error message appears:
<P>
       Object variable or With block variable not set
<P>
    This error indicates that the With statement does not support
    a GoTo entrance into the statement. The next message is:
<P>
       Jumped into [WITH-END WITH] block

<P><LI>Click OK in the message box to continue the program. The next
    message is:
<P>
       Jumped out of [WITH-END WITH] block
<P>
    This message indicates that you can use the GoTo statement to exit
    a With block.

<P><LI>Click the btnTest command button again. The next message is:
<P>
       Jumped into a [IF-END IF] block
<P>
    This message indicates that the If/End If block statement supports
    the use of the GoTo statement to enter the block.

<P><LI>Click the btnTest command button again. The next message is:
<P>
       Jumped into a [SELECT-END SELECT] block
<P>
    This message indicates that the Select/End Select block statement
    supports the use of the GoTo statement to enter the block.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about the With/End With statements, search the Help
Index for "With Statement," or ask the Microsoft Access 97 Office
Assistant.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: loop<BR>
Keywords          : kbprg<BR>
Version           : 7.0 97<BR>
Platform          : WINDOWS<BR>
Hardware          : x86<BR>
Issue type        : kbinfo<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 28, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
