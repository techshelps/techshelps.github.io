

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: Clarification of Caller Property Help </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q141784">
<META NAME="KBModify" CONTENT="1997/12/01">
<META NAME="KBCreate" CONTENT="1995/12/24">
<META NAME="Keywords" CONTENT="kbcode PgmOthr">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel, the Caller Property Help topic in Microsoft Visual  Basic for Applications Help contains the following statement:     If you need to write a macro which behaves differently based on whether    it is called from a button or a men...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QBVP,QAH4,QAHE,QAB9,QAH6,QAW6,QAD7,QBS0,QAY2,QAH7,QAGI,QAVZ,QAF0,QAVX V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: Clarification of Caller Property Help</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 1, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q141784</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, versions 5.0, 5.0c
<LI>Microsoft Excel for the Macintosh, versions 5.0, 5.0a
<LI>Microsoft Excel for the Power Macintosh, versions 5.0, 5.0a
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Excel, the Caller Property Help topic in Microsoft Visual 
Basic for Applications Help contains the following statement:
<P>
<PRE>   If you need to write a macro which behaves differently based on whether
   it is called from a button or a menu item, you should specify an
   argument for the macro in the Assign Macro To Object... dialog box.

</PRE>To help clarify this statement, follow the steps in the "Example" section
in the "More Information" section of this article. These steps show you how
to create a procedure that takes an argument. The steps also show you how
to specify a value for an argument when you assign the procedure to an
object.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE><h3>Example</h3>
 

<OL><P><LI>Enter the following code in a module sheet:
<P>
<PRE>      Sub MultiUse(fromMenu As Boolean)
         If fromMenu Then
            MsgBox "Called from a menu"
         Else
            MsgBox "Called from a button"
         End If
      End Sub

</PRE><P><LI>Switch to a worksheet and use the Forms toolbar to create an object on
   your sheet.

<P><LI>Select the object and click the right mouse button.

<P><LI>On the shortcut menu, click Assign Macro.

<P><LI>In the Macro Name/Reference box, type the appropriate command for the
   type of object.
<P>
<P><PRE>    - To assign the procedure to a menu bar, type:
</PRE><P>
<PRE>         'MultiUse true'

    - To assign the procedure to a button, type:

         'MultiUse false'

   NOTE: You must include the apostrophes around either statement. Note
   also that you can use other types of arguments; for example, you can use
   an integer rather than a Boolean argument. The following error message:

        Formula is too complex to be assigned to object.

   will be received if you try to pass an argument from within the Assign
   Macro dialog box using something like:

        test(1)

   where "test" is the name of your macro and you are trying to pass a
   value of 1 to the macro.

</PRE></OL>This method of determining how a macro was called can offer different
benefits than the Application.Caller method, which can return many
different data types such as a Range object, a string, an array of numbers,
an array of one number and a string, or an error.
<P>
You can use information functions such as IsObject or Isarray to check the
type of returned values to determine what called the macro.
<P>
When you use an argument to tell the procedure what called it (menu, tool,
or button), your code is designed such that it can tell what kind of result
it will get from Caller, and it can use that information to determine what
else to do.
<P>
<P><h2>REFERENCES</h2>
 
<P>
"Microsoft Excel 5 Visual Basic for Applications Reference," Microsoft
Press, pages 88-89
<P>
For more information about the Caller property, choose the Search
button in Help and type:
<P>
<PRE>   Caller Property
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 5.00 help file<BR>
Keywords          : kbcode PgmOthr<BR>
Version           : WINDOWS: 5.0, 5.0c; MACINTOSH: 5.0, 5.0a<BR>
Platform          : MACINTOSH WINDOWS<BR>
Issue type        : kbinfo<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 1, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
