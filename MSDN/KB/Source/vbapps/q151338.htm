

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: Visual Basic Function to Format Complex Numbers </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q151338">
<META NAME="KBModify" CONTENT="1998/02/03">
<META NAME="KBCreate" CONTENT="1996/05/21">
<META NAME="Keywords" CONTENT="kbcode kbprg PgmHowto">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Because Microsoft Excel stores complex numbers as text, complex numbers cannot be formatted like real numbers. This article provides sample code for a user-defined function that applies number formats to complex numbers.  MORE INFORMATION  Microsof...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QAKC,QBC6,QDNG,QABE,QBS0,QAG8,QAY5,QAPF,QAB9,QAJG,QBV8,QAVZ,QBVV,QATX P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: Visual Basic Function to Format Complex Numbers</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 3, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q151338</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 98 Macintosh Edition
<LI>Microsoft Excel 97 for Windows
<LI>Microsoft Excel for Windows 95, versions 7.0, 7.0a
<LI>Microsoft Excel for Windows NT, version 5.0
<LI>Microsoft Excel for Windows, versions 5.0, 5.0c
<LI>Microsoft Excel for Macintosh, versions 5.0, 5.0a
</UL> 
<P>
SUMMARY
 
<P>
Because Microsoft Excel stores complex numbers as text, complex numbers
cannot be formatted like real numbers. This article provides sample code
for a user-defined function that applies number formats to complex numbers.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>Complex numbers are real and imaginary coefficients which combine to form a
complex number. They are in the form of x+yi or x+yj where x is the real
coefficient and y is the imaginary coefficient. Complex numbers always
carry a suffix of the letter i or j.
<P>
The function in this article takes three arguments: the number to be
formatted, a format code for the real component, and a format code for the
imaginary component. For example, the function
<P>
<PRE>   =FormatComplex(A1,"0.00","0.0000")

</PRE>would display the complex number in cell A1 with two decimal places for the
real component and four decimal places for the imaginary component.
<P>
You can also use multisection formats to format positive, negative, and
zero components differently. For example, the function
<P>
<PRE>   =FormatComplex(A1,"0.00;-0.00;0","0.0000;-0.0000;0")

</PRE>would have the same result as the earlier example, but with zero components
displaying as "0" rather than including extra zeroes to the right of the
decimal point. If you use a multisection format, the formats for negative
numbers must begin with a "-" (minus sign) as in the example.
<P>
<P><h3>Sample Visual Basic Procedure</h3>
 
<P>
<PRE>   Option Explicit

   Function FormatComplex(NumToFormat As String, RealFormatCode As _
       String, ImagFormatCode As String)

       Dim PlusOrMinus As String
       Dim CharPosition As Integer

       ' Is NumToFormat real?
       If Right(NumToFormat, 1) &lt;&gt; "i" Then

           ' NumToFormat is real.
           FormatComplex = Format(NumToFormat, RealFormatCode)
       Else

           ' NumToFormat is either imaginary or complex.
           ' Search NumToFormat from right until + or - or left end is
           ' reached.
           PlusOrMinus = "not found"
           For CharPosition = Len(NumToFormat) - 1 To 1 Step -1
               PlusOrMinus = Mid(NumToFormat, CharPosition, 1)
               If PlusOrMinus = "+" Or PlusOrMinus = "-" Then Exit For
           Next

           ' Is NumToFormat complex or imaginary?
           If (PlusOrMinus = "+" Or PlusOrMinus = "-") And _
               CharPosition &lt;&gt; 1 Then

               ' NumToFormat is complex.
               ' Is imaginary component negative?
               If Mid(NumToFormat, CharPosition, _
                   Len(NumToFormat) - CharPosition) &lt; 0 Then

                   ' Imaginary component is negative, so "-" does not need
                   ' to be added.
                   FormatComplex = Format(Left(NumToFormat, _
                       CharPosition - 1), RealFormatCode) &amp; _
                       Format(Mid(NumToFormat, CharPosition, _
                       Len(NumToFormat) - CharPosition), _
                       ImagFormatCode) &amp; "i"
               Else

                   ' Imaginary component is not negative, so "+" needs to 
                   ' be added.
                   FormatComplex = Format(Left(NumToFormat, _
                       CharPosition - 1), RealFormatCode) &amp; "+" &amp; _
                       Format(Mid(NumToFormat, CharPosition, _
                       Len(NumToFormat) - CharPosition), _
                       ImagFormatCode) &amp; "i"
               End If
           Else
      
               ' NumToFormat is imaginary.
               FormatComplex = Format(Left(NumToFormat, _
                   Len(NumToFormat) - 1), ImagFormatCode) &amp; "i"
           End If

       End If

   End Function
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 5.00 5.00a 5.00c 7.00 8.00 XL98 XL97 XL7 XL5<BR>
Keywords          : kbcode kbprg PgmHowto<BR>
Version           : WINDOWS:5.0,5.0c,7.0,97; MACINTOSH:5.0,5.0a,98<BR>
Platform          : MACINTOSH WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 3, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
