

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: Validation Rule to Accept Only Alphabetic Characters </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q114554">
<META NAME="KBModify" CONTENT="1997/08/29">
<META NAME="KBCreate" CONTENT="1994/05/05">
<META NAME="Keywords" CONTENT="kbprg kbusage PgmHowTo PgmParse">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  This article demonstrates a sample user-defined Visual Basic for Applications function called IsAlpha() that you can use to validate a string to make sure that every character in...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA1S,QDN9,QBS0,QAPF,QATX,QAY5,QABI,QA5F,QAMA,QAKR,QBV8,QA7O,QAIB,QAB9,QBE7 P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: Validation Rule to Accept Only Alphabetic Characters</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q114554</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 1.0, 1.1, 2.0, 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
This article demonstrates a sample user-defined Visual Basic for
Applications function called IsAlpha() that you can use to validate a
string to make sure that every character in the string is a letter in the
English alphabet.
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
NOTE: Visual Basic for Applications is called Access Basic in Microsoft
Access versions 1.x and 2.0. For more information about Access Basic,
please refer to the "Introduction to Programming" manual in Microsoft
Access version 1.x or the "Building Applications" manual in Microsoft
Access version 2.0
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The IsAlpha() function accepts a string argument and checks each character
in the string to make sure it is a character in the English alphabet. The
function does this by checking the ASCII value of each character in the
string to see if it falls in the range from 65 to 90 (for uppercase
characters), or in the range from 97 to 122 (for lowercase characters), of
the ANSI character set. The function returns True if all the characters in
the string fall within one of these two ranges, or False if one or more
characters in the string do not fall within one of these two ranges. You
can use this function as a validation rule for a field in a table in
Microsoft Access version 1.x, or as a validation rule for a control on a
form in Microsoft Access 1.x, 2.0, 7.0, and 97.
<P>
The following example shows how to use the function as a validation rule
for a control on a form.
<P>
CAUTION: Following the steps in this example will modify the sample
database Northwind.Mdb (NWIND.MDB in 1.x or 2.0). You may want to back up
the Northwind.Mdb file, or perform these steps on a copy of the Northwind
database.

<OL><P><LI>Open the sample database Northwind.mdb (or NWIND.MDB).

<P><LI>Create a new module and enter the following code:
<P>
<P><PRE>      '**********************************
      'Declarations section of the module
      '**********************************
      Option Compare Database
      Option Explicit
</PRE><P>
<P><PRE>      '===============================================================
      ' The following function is named IsAlpha(). It accepts a string
      ' argument and returns either True (-1) or False (0).
      '===============================================================
</PRE><P>
<P><PRE>      Function IsAlpha (MyString As String) As Integer
      Dim LoopVar As Integer
      Dim SingleChar As String
</PRE><P>
<P><PRE>      LoopVar = 1
</PRE><P>
<P><PRE>      If IsNull(MyString) Then
<PRE></PRE>         IsAlpha = False
         Exit Function
      End If

      For LoopVar = 1 To Len(MyString)
         SingleChar = UCase(Mid$(MyString, LoopVar, 1))
         If SingleChar &lt; "A" Or SingleChar &gt; "Z" Then
            IsAlpha = False
            Exit Function
         End If
      Next LoopVar

      IsAlpha = True

      End Function

</PRE><P><LI>Open the Categories form in Design view.

<P><LI>Set the CategoryName field's ValidationRule property to:
<P>
<P><PRE>      IsAlpha([CategoryName]) = True
</PRE><P>
   NOTE: In versions 1.x and 2.0, there is a space in Category Name.

<P><LI>Save the Categories form, and then view the form in Form view.

<P><LI>On the Records menu, click Data Entry.

<P><LI>Type "ABCD" (without the quotation marks) in the CategoryName
   field.
<P>
   Note that the validation rule allows you to create this entry and
   to exit the field.

<P><LI>In another new record, type "AB,D" (without the quotation marks) in the
   CategoryName field. Note that the validation rule does not accept the
   entry.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about string manipulation, search the Help Index for
"strings, manipulating," or ask the Microsoft Access 97 Office Assistant.
 
<PRE>Keywords          : kbprg kbusage PgmHowTo PgmParse
Version           : 1.0 1.1 2.0 7.0 97
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbinfo</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
