

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL97: How to Create Application Level Event Handlers </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q158244">
<META NAME="KBModify" CONTENT="1998/03/13">
<META NAME="KBCreate" CONTENT="1996/10/25">
<META NAME="Keywords" CONTENT="kbcode kbprg xlvbahowto xlvbainfo kbfaq">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  If you want a particular event handler to run whenever a certain event is triggered, you can write an event handler for the Application object. Event handlers for the Application object are global, which means that as long as Microsoft Excel is ope...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QAPN,QAO4,QBVP,QBJZ,QBWS,QAYL,QAW6,QBS0,QA01,QAVX,QAVW,QAFF,QAJH,QAUD P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL97: How to Create Application Level Event Handlers</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 13, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q158244</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
If you want a particular event handler to run whenever a certain event is
triggered, you can write an event handler for the Application object. Event
handlers for the Application object are global, which means that as long as
Microsoft Excel is open, the event handler will run when the appropriate
event occurs, regardless of which workbook is active when the event occurs.
<P>
This article describes how to create an Application level event handler and
provides an example.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To create an Application-level event handler, you must use the following
basic steps:
<P>
- Declare a variable for the Application object using the WithEvents
<PRE>  keyword. The WithEvents keyword can be used to create an object variable
  that responds to events triggered by an ActiveX object (such as the
  Application object).

</PRE>NOTE: WithEvents is valid only in a class module.
<P>
- Create the procedure for the specific Application event. For example,
<PRE>  you could create a procedure for the WindowResize, WorkbookOpen, or
  SheetActivate event of the object you declared using WithEvents.

</PRE>- Create and run a procedure that starts the event handler.
<P>
The following example uses these steps to set up a global event handler
that displays a message box whenever you resize any workbook window (the
event firing the event handler).
<P>
<P><h3>Creating and initiating the event handler</h3>
 

<OL><P><LI>Open a new workbook.

<P><LI>Start the Visual Basic Editor.

<P><LI>Click Class Module on the Insert menu.
<P>
</OL>This will insert a module titled "&lt;book name&gt; - Class1 (Code)" into your
project.

<OL><P><LI>Enter the following line of code in the Class1 (Code) module:
<P>
       Public WithEvents appevent As Application
<P>
</OL>The WithEvents keyword makes the appevent variable available in the Object
drop-down in the Class1 (Code) module window.

<OL><P><LI>In the Class1 (Code) module window, click the Object drop-down and then
    click appevent in the list.

<P><LI>In the Class1 (Code) module window, click the Procedure drop-down and
    then click WindowResize in the list.
<P>
</OL>This will add the following to the Class1 (Code) module sheet:
<P>
<PRE>   Private Sub appevent_WindowResize(ByVal Wb As Excel.Workbook, _
       ByVal Wn As Excel.Window)

   End Sub

</PRE><P><LI>Add code to the Class1 (Code) module sheet so that it appears as
    follows:
<P>
       Public WithEvents appevent As Application
<P>
       Private Sub appevent_WindowResize(ByVal Wb As Excel.Workbook, _
<PRE>           ByVal Wn As Excel.Window)

           MsgBox "you resized a window"

       End Sub

</PRE></OL>Next, you have to create an instance of the class and then set the appevent
object of the instance of the Class1 to Application. This is because when
you declare a variable, WithEvents, at design time, there is no object
associated with it. A WithEvents variable is just like any other object
variable - you have to create an object and assign a reference to the
object to the WithEvents variable.

<OL><P><LI>On the Insert menu click Module to insert a general type module sheet
    into your project.

<P><LI>In this module sheet, enter the following code:
<P>
      Dim myobject As New Class1
<P>
<PRE>      Sub Test()
          Set myobject.appevent = Application
      End Sub

</PRE><P><LI>Run the "test" macro.
<P>
</OL>You have just set the event handler to run each time you resize a workbook
window in Microsoft Excel.

<OL><P><LI>On the File menu, click "Close and Return to Microsoft Excel".

<P><LI>Resize a workbook window.
<P>
</OL>A message box with "you resized a window" will be displayed.
<P>
<P><h3>How to turn off the event handler</h3>
 
<P>
If you close the workbook that contains the above project, the application
level event handler will be turned off. To programmatically turn off the
event handler, do the following:

<OL><P><LI>Start the Visual Basic Editor.

<P><LI>In the macro code you entered in Step 9, change the macro to:
<P>
<PRE>      Sub test()
          Set myobject.appevent = Nothing
      End Sub

</PRE><P><LI>Run the "test" macro again.

<P><LI>On the File menu, click "Close and Return to Microsoft Excel".

<P><LI>Resize a workbook window.
<P>
</OL>The message box will not display.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about Class Modules, in the Visual Basic Editor click
"Contents and Index" on the Help menu, click the Index tab, type the
following text
<P>
<PRE>   class module

</PRE></OL>and then double-click the selected text to go to the "Module and Class
Module Commands (Insert Menu)" topic.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: vbe 8.00 XL97<BR>
Keywords          : kbcode kbprg xlvbahowto xlvbainfo kbfaq<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 13, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
