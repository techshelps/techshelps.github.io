

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: ATP Functions Return Error When Created Through Automation </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q172107">
<META NAME="KBModify" CONTENT="1998/03/13">
<META NAME="KBCreate" CONTENT="1997/07/29">
<META NAME="Keywords" CONTENT="kbcode kbprg xlvbainfo">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  When you add an Analysis ToolPak function in a cell in a Microsoft Excel spreadsheet, the function returns the #NAME? error.  CAUSE =====  This problem occurs when the following conditions are true:   - You create a Microsoft Excel spreadsheet crea...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QAH4,QBS0,QAPN,QAW6,QBXS,QAY5,QAUD,QAIJ,QAB9,QBVV,QBFY,QAH0,QAKP P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: ATP Functions Return Error When Created Through Automation</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 13, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q172107</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
<LI>Microsoft Excel for Windows 95, version 7.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When you add an Analysis ToolPak function in a cell in a Microsoft Excel
spreadsheet, the function returns the #NAME? error.
<P>
<P><h2>CAUSE</h2>
 
<P>
This problem occurs when the following conditions are true:

<UL><LI>You create a Microsoft Excel spreadsheet created through Automation.
<P>
   -and-

<LI>You type an Analysis ToolPak function in a cell in the workbook.
<P>
</UL>This problem occurs even if the Analysis ToolPak add-in was selected in the
Add-Ins dialog box during the previous session of Microsoft Excel.
<P>
When you use Automation to start the versions of Microsoft Excel listed at
the beginning of this article, the Analysis ToolPak add-in is not loaded
even if you previously loaded it or you loaded it by running a macro.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft support engineers can help explain the
functionality of a particular macro, they will not modify these examples to
provide added functionality, nor will they help you construct macros to
meet your specific needs. If you have limited programming experience, you
may want to consult one of the Microsoft Solution Providers. Solution
Providers offer a wide range of fee-based services, including creating
custom macros. For more information about Microsoft Solution Providers,
call Microsoft Customer Information Service at (800) 426-9400.
<P>
To work around this problem, load the Analysis ToolPak. To do this, clear
the check box for the add-in in the Add-Ins dialog box in Microsoft Excel
or use code to unload it, and then use code to reload the add-in.
<P>
The following example is created in Visual Basic 4.0 and works with both
versions of Microsoft Excel listed at the beginning of this article. With
very little modification, you can use the code in Microsoft Access 97 and
Microsoft Word 97. The sample code creates a Microsoft Excel workbook and
places several Analysis ToolPak functions in cells. It does not make any
difference whether the Analysis ToolPak is selected in the last session of
Microsoft Excel. By using the Installed property of the AddIns class you
allow the Analysis ToolPak to be unloaded, and then loaded through code.
<P>
<PRE>   Sub Main()
   ' Declares all the variables to be used.
   Dim xlApp As Object     ' Will be used for the application object.
   Dim xlWB As Object      ' Will be used for the workbook object.
   Dim xlsheet As Object   ' Will be used for the spreadsheet object.

   ' Starts an instance of Microsoft Excel.
   Set xlApp = CreateObject("excel.application")

   ' Makes Microsoft Excel visible.
   xlApp.Visible = True

   ' Starts a new workbook.
   xlApp.workbooks.Add Template:="Workbook"

   ' Unloads and loads the Analysis Toolpak.
   xlApp.AddIns("Analysis ToolPak").Installed = False
   xlApp.AddIns("Analysis ToolPak").Installed = True

   ' Assigns the variables to their respective objects.
   Set xlWB = xlApp.ActiveWorkbook
   Set xlsheet = xlWB.activesheet

   ' Assigns formulas to cells on the spreadsheet.
   With xlsheet
       .Activate
       .range("A1").Formula = "1/1/97"
       .range("A2").Formula = "7/14/97"
       .range("A3").Formula = "=EDATE(R[-2]C,2)"
       .range("A4").Formula = "=EOMONTH(R[-3]C,3)"
       .range("A5").Formula = "=NETWORKDAYS(R[-4]C,R[-3]C,2)"
   End With

   ' Saves the file.
   xlApp.ActiveWorkbook.SaveAs filename:="C:\OLEtest.xls"

   ' Closes Microsoft Excel.
   xlApp.quit

   ' Clears the variables
   Set xlsheet = Nothing
   Set xlWB = Nothing
   Set xlApp = Nothing
   End Sub

</PRE>Open the Oletest.xls file to verify that values in cells A3:A5 are
calculated without error.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in the Microsoft products
listed at the beginning of this article. We are researching this problem
and will post new information here in the Microsoft Knowledge Base as it
becomes available.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: XL97 OLE Analysis ToolPak<BR>
Keywords          : kbcode kbprg xlvbainfo<BR>
Version           : WINDOWS:7.0,97<BR>
Platform          : WINDOWS<BR>
Issue type        : kbbug<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 13, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
