

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: How to Fill a Multiple-Column List Box Using Code </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q95903 ">
<META NAME="KBModify" CONTENT="1997/11/10">
<META NAME="KBCreate" CONTENT="1993/03/01">
<META NAME="Keywords" CONTENT="kbusage PgmObj FmsCmbo">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  This article demonstrates a technique to fill a list box or a combo box with values by setting the RowSourceType() function to the name of a custom procedure.  This article assum...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVR,QBCF,QA1S,QAE1,QAGX,QDN9,QAH4,QBS0,QDMN,QA5F,QAYZ,QAMA,QAM3,QAB9,QBCE P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: How to Fill a Multiple-Column List Box Using Code</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q95903 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 1.0, 1.1, 2.0, 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
This article demonstrates a technique to fill a list box or a combo box
with values by setting the RowSourceType() function to the name of a custom
procedure.
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
NOTE: Visual Basic for Applications is called Access Basic in Microsoft
Access versions 1.x and 2.0. For more information about Access Basic,
please refer to the "Introduction to Programming" manual in Microsoft
Access version 1.x or the "Building Applications" manual in Microsoft
Access version 2.0
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following example uses a list box control on a form, but you can
substitute a combo box with the same results. In order to create a multi-
column list box you must set Case 4 in the Select Case statement to the
number of columns you want in your list box. In Case 6 of the Select Case
statement, define the data that you want to display in each column and row
of the list box.

<OL><P><LI>Open an existing database or create a new one.

<P><LI>Create a module and type the following line in the Declarations section:
<P>
<P><PRE>      Option Explicit
</PRE>
<P><LI>Type the following procedure:
<P>
 '===================================================================
<P><PRE>      ' The following function uses a Select Case statement to fill a
      ' two-column and four-row list box. The function fills the first
      ' column of the list box with the dates of the next four Mondays. The
      ' second column is filled with the dates of the next four Tuesdays.
</PRE> '===================================================================
<P>
<P><PRE>      Function ListMonTuesdays(fld As Control, id, row, col, code)
<PRE></PRE>         Dim offset
         Select Case Code
            Case 0                          'Initialize.
               ListMonTuesdays=True
            Case 1                          'Open.
               ListMonTuesdays=id           'Unique ID number for control
            Case 3                          'Number of rows.
               ListMonTuesdays=4
            Case 4                          'Number of columns.
               ListMonTuesdays=2
            Case 5                          'Column width.
               ListMonTuesdays=-1           'Use default width.

 '===================================================================
      ' In the next Case statement:
      '
      ' Offset is the formula for finding the next four Mondays.
      ' If column=0, then fill in with the dates for the next four
      ' Mondays in column 1. If column=1, then fill in with the dates
      ' for the next four Tuesdays in column 2.
 '===================================================================
            Case 6                          'Get Date
               Offset=abs((9-Weekday(Now))Mod 7)
                  If col=0 then
                     ListMonTuesdays=Format(Now()+offset+7*row,"mmmm d")
                  Else
                     Offset=abs((10-Weekday(Now))Mod 7)
                     ListMonTuesdays=Format(Now()+offset+7*row,"mmmm d")
                  End if
         End Select
      End Function

</PRE><P><LI>Create a new form in Design view.

<P><LI>Add a list box control to the detail section of the form:
<P>
<P><PRE>      List Box:
<PRE></PRE>         Name: DisplayDates
         RowSourceType: ListMonTuesdays

</PRE><P><LI>Switch the form to Form view and note that the list box displays two
   columns of dates.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about the RowSourceType property of list boxes and
combo boxes, type "rowsourcetype" in the Office Assistant, click Search,
and then click to view "RowSourceType Property."
 
<PRE>Keywords          : kbusage PgmObj FmsCmbo
Version           : 1.0 1.1 2.0 7.0 97
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
