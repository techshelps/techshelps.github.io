

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL7: Visual Basic Example Logging on to Schedule+ </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q140542">
<META NAME="KBModify" CONTENT="1997/09/02">
<META NAME="KBCreate" CONTENT="1995/12/03">
<META NAME="Keywords" CONTENT="kbprg PgmHowTo xlwin kbhowto kbole kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel, you can programmatically control Microsoft Schedule+, through Visual Basic for applications using OLE Automation. To use the properties and methods in the object library provided by Schedule+, you will need to create an object v...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAL4,QBVP,QAPN,QAH4,QAW6,QAPF,QBW2,QBVV,QAYL,QDMH,QA5F,QAMA,QAJH,QBXS V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL7: Visual Basic Example Logging on to Schedule+</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 2, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q140542</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows 95, version 7.0
<LI>Microsoft Schedule+ for Windows 95, version 7.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Excel, you can programmatically control Microsoft Schedule+,
through Visual Basic for applications using OLE Automation. To use the
properties and methods in the object library provided by Schedule+, you
will need to create an object variable using the CreateObject function.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following example will log you on to Schedule+, display the path to the
schedule file, and then log you off.
<P>
Microsoft provides examples of Visual Basic for applications procedures for
illustration only, without warranty either expressed or implied, including
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. This Visual Basic procedure is provided 'as is'
and Microsoft does not guarantee that it can be used in all situations.
Microsoft does not support modifications of this procedure to suit customer
requirements for a particular purpose.
<P>
To use the macro, do the following:

<OL><P><LI>Open a new workbook, insert a module sheet.

<P><LI>In the new module sheet, type the following macro code:
<P>
<PRE>   ' In this example you will have to activate Microsoft Excel
   ' before issuing any commands that require user interaction.

   Sub Logging_On_To_SchedulePlus()

   Dim objSched As Object
   Dim CurApp As String
   Dim UserName as String

   'sets the caption of the active application to a variable
   CurApp = Application.Caption
   'creates the Schedule+ object
   Set objSched = CreateObject("scheduleplus.application.7")

      ' Checks to see if you are logged on to Schedule+
      If Not objSched.LoggedOn Then
          AppActivate CurApp 'activates Excel
         'prompts you for you email name
         UserName = Application.InputBox("Please Enter Your Email Name")
          objSched.Logon UserName, "", True   'logs you onto schedule+
      End If

   AppActivate CurApp  'activates excel
   MsgBox objSched.UserAddress ' Displays the path to the user's schedule
                               ' file

   objSched.Logoff 'logs off of schedule+
   Set objSched = Nothing ' clears the object

   End Sub

</PRE><P><LI>Run the macro.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
BackOffice Software Developer's Kit, version 1.5
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 7.00 SDK<BR>
Keywords          : kbprg PgmHowTo xlwin kbhowto kbole kbprg<BR>
Version           : 7.00<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 2, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
