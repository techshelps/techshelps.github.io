

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OL97: Working with Form Definitions and One-Off Forms </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q176567">
<META NAME="KBModify" CONTENT="1998/03/02">
<META NAME="KBCreate" CONTENT="1997/11/11">
<META NAME="Keywords" CONTENT="FmsOthr OffVBS ScriptGnrl">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  This article discusses how custom forms are implemented in Microsoft Outlook 97 and provides suggestions for addressing unexpected symptoms you may experience when creating a solution based on Outlook 97 forms.  The following topics are covered in ...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVO,QAYC,QAI2,QABA,QAEV,QDKS,QAUR,QBVV,QBUP,QABO,QA7O,QA7N,QA6A,QAU7,QAFI P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>OL97: Working with Form Definitions and One-Off Forms</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 2, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q176567</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Outlook 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article discusses how custom forms are implemented in Microsoft
Outlook 97 and provides suggestions for addressing unexpected symptoms you
may experience when creating a solution based on Outlook 97 forms.
<P>
The following topics are covered in this article:

<UL><LI>A "Typical" Custom Forms Solution
<LI>One-Off Forms
<LI>Standard Ways Forms Become One-Offs
<LI>Items One-Offed Unexpectedly
<LI>Additional Notes
<P>
</UL><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>NOTE: This article assumes a general working knowledge of Outlook 97 custom
forms. For information on getting started with customizing Outlook, refer
to the Microsoft Knowledge Base articles listed in the References section
of this article.
<P>
NOTE: There is a distinction between the terms "items" and "forms." An item
refers to a "record" of information (a group of fields) in a folder. A form
is basically a "front end" for the item and does not typically contain any
data. Instead, it is published in a folder or forms library for use with
items in the folder.
<P>
When creating custom form solutions with Microsoft Outlook 97, it is
important to be able to recognize how Outlook is using your custom form in
relation to the items in a folder.
<P>
<P><h3>A "Typical" Custom Forms Solution</h3>
 
<P>
If you want to create a custom contact form to replace the default Outlook
contact form, you would typically follow these steps:

<OL><P><LI>Start with a new, default Contact item to use as the basis for your
   custom form.

<P><LI>Customize the form to suit your needs.

<P><LI>Publish the form to the Contacts folder.

<P><LI>Set the form as the default form for the Contacts folder by changing
   the folder properties.
<P>
</OL>Each Outlook item has a standard Message Class field to keep track of which
form should be used to display the item. The default message class for a
contact is IPM.Contact, and when the form is published, the message class
is changed to reflect the name of the published form. So in the previous
steps, if the form was called MyForm when it was published, it would have a
message class of IPM.Contact.MyForm. When you create a new item based on
the published form, the Message Class field of the item is set to
IPM.Contact.MyForm.
<P>
For more information about working with Message Classes, please see the
following article in the Microsoft Knowledge Base:
<P>
<PRE>   Article-ID: <B><A HREF="../OUTLOOK/Q170301.htm">Q170301</A></B>
   Title     : OL97: How to Update Existing Items to Use a New Custom Form

</PRE></OL><h3>One-Off Forms</h3>
 
<P>
In the typical scenario above, information about the form (the "form
definition") is not saved with each item. The form is basically "linked"
using the Message Class field. The size of a typical item may be 300 or 500
bytes.
<P>
NOTE: For purposes of simplicity, this article will use the term "linked
form" to indicate a situation in which the form definition is not saved
within an item and the Message Class field is set to use a custom form.
However, it is possible to have the form definition saved with an item.
Items that have a custom form definition stored within them are referred to
as being "one-offed" or "a one-off."
<P>
When a form is one-offed, it will use the form definition that is stored
with the item instead of the published form. If a form definition is saved
with an item, the item's Message Class is changed back to the default
message class for that form type, such as IPM.Contact.
<P>
<P><h3>Standard Ways Forms Become One-Offs</h3>
 
<P>
Forms become one-offs:

<UL><LI>By default.
<P>
   Mail message forms are one-offs by default due to the nature of the
   item. If you open a default mail item, enter design mode, and click the
   Properties page of the form, you will see the "Save form definition with
   item" check box is automatically selected. This is not the case with
   other types of forms, but is by design for mail forms since these forms
   are routed to other individuals. If the form definition was not saved
   with the item, the item would not display properly when it is received,
   because the form would most likely be unavailable (unless it was
   published in the Organizational Forms Library on the Microsoft Exchange
   Server, making it available to everyone in the enterprise).

<LI>By design.
<P>
   When designing a custom form that is not a mail message form, you can
   select the "Save form definition with item" check box yourself. This
   would typically be undesirable, but may be desirable under certain
   circumstances.
<P>
</UL><h3>Items One-Offed Unexpectedly</h3>
 
<P>
Assume you have a linked forms scenario and you have 10 items already
created that are using your published custom form. If you open one of the
items, and the form definition is somehow changed for that one particular
item, Outlook will automatically one-off the item (create a one-off form)
and save the form definition with the item. The Message Class field will
change back to the default message class for that type of item, and the
size of the item will noticeably increase.
<P>
Following are known scenarios where items can be unexpectedly one-offed.

<UL><LI>You are in a typical linked forms scenario, open an existing item in
   a folder, make changes to the form in design mode, and save or send
   the item.
<P>
   If you want to change the form for all of the items in the folder,
   instead of opening an existing item, follow these steps:
<P>
   1. Open a new item based on your custom form.
<P>
   2. Makes form design changes to that item.
<P>
   3. Using that item, republish the form with the same name.
<P>
   4. Close and do not save changes to the item.
<P>
   All of the items in the folder will now use the updated custom form the
   next time the items are opened, because the Message Class still refers
   to the published form. The first time an item is opened after the form
   is changed, Outlook will briefly display a message indicating that the
   new form is being installed (copied to the forms cache).

<LI>You used Microsoft Visual Basic Scripting Edition (VBScript) code in the
   custom form and used some methods or commands that are causing the
   item's form definition to change. The following methods most commonly
   cause this behavior:
<P>
<P><PRE>    - ShowFormPage and HideFormPage
</PRE><P>
<P><PRE>    - Methods that exist for the FormDescription object
</PRE><P>
<P><PRE>    - The Delete method for the Action object
</PRE><P>
   For more information about the ShowFormPage and HideFormPage methods
   causing the Message Class field to reset, please see the following
   article in the Microsoft Knowledge Base:
<P>
<P><PRE>      Article-ID: <B><A HREF="../vbapps/Q174276.htm">Q174276</A></B>
<PRE></PRE>      Title     : OL97: ShowFormPage/HideFormPage Changes Form's Message
                  Class

</PRE><LI>You used a user-defined field on the form, but the field did not
   actually exist in the item when the form was published, but rather
   only existed in the folder. In this case, when you create a new item
   based on the custom form and enter a value into the field on the form,
   Outlook automatically adds the user-defined field to the item (changing
   the form definition) and therefore Outlook one-offs the form.
<P>
</UL><h3>Additional Notes</h3>
 

<UL><LI>If the "Save form definition with item" check box is not selected, that
   does not necessarily mean that the form definition is not saved with the
   item. If the Message Class field is the default message class for that
   type of form, and the form used to display the item is a custom form,
   the form is one-offed.

<LI>One-off forms are a common cause of the "Enable/disable" security
   warning Outlook displays if a form contains VBScript code. Because the
   code is not in a "registered" form, Outlook will always display the
   warning.
<P>
   For more information about the security warning, please see the
   following article in the Microsoft Knowledge Base:
<P>
<P><PRE>      Article-ID: <B><A HREF="../OUTLOOK/Q166780.htm">Q166780</A></B>
<PRE></PRE>      Title     : OL97: Why Outlook Displays a Security Warning Opening
                  an Item

</PRE><LI>If you programmatically change the message class of the item to try to
   "re-link" the item (changing the message class from IPM.Contact to
   IPM.Contact.MyForm), the form definition will still remain with the
   item, but will be inaccessible. There is no apparent way to remove
   the form definition from an item other than creating a new item without
   a form definition and copying the data from the old item to the new one.
<P>
</UL><h2>REFERENCES</h2>
 
<P>
For more information about creating solutions with Microsoft Outlook 97,
please see the following articles in the Microsoft Knowledge Base:
<P>
<PRE>   Article-ID: <B><A HREF="../vbapps/Q166368.htm">Q166368</A></B>
   Title     : OL97: How to Get Help Programming with Outlook

   Article-ID: <B><A HREF="../vbapps/Q170783.htm">Q170783</A></B>
   Title     : OL97: Q&amp;A: Questions about Customizing or
               Programming Outlook
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: OutSol OutSol97 workaround<BR>
Keywords          : FmsOthr OffVBS ScriptGnrl<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 2, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
