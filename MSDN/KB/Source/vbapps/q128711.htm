

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: Visual Basic Example Using the Verb Method </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q128711">
<META NAME="KBModify" CONTENT="1998/01/13">
<META NAME="KBCreate" CONTENT="1995/04/06">
<META NAME="Keywords" CONTENT="kbcode kbinterop kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel you can use the Verb method to activate an embedded OLE object. For example, you can use the verb Open or Primary (represented by the xlOpen and xlPrimary constants, respectively).  MORE INFORMATION  When you use the Open verb (x...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAIH,QBVP,QAMA,QA5F,QAPN,QAW6,QBXS,QBET,QAEF,QAJX,QAH4,QAFF,QADR,QAPF P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: Visual Basic Example Using the Verb Method</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 13, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q128711</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, versions 5.0, 5.0c
<LI>Microsoft Excel for Windows 95, versions 7.0, 7.0a
<LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Excel you can use the Verb method to activate an embedded OLE
object. For example, you can use the verb Open or Primary (represented by
the xlOpen and xlPrimary constants, respectively).
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
When you use the Open verb (xlOpen is the constant for this verb), it opens
the application in its own window. When you use the Primary verb (xlPrimary
is the constant for this verb) it activates the object and prepares it
for in-place editing. The following example uses a Microsoft Word version
6.0 object.
<P>
<P><h3>Sample Visual Basic Code</h3>
 
<P>
Microsoft provides examples of Visual Basic procedures for illustration
only, without warranty either expressed or implied, including but not
limited to the implied warranties of merchantability and/or fitness for a
particular purpose. This Visual Basic procedure is provided 'as is' and
Microsoft does not guarantee that it can be used in all situations.
Microsoft does not support modifications of this procedure to suit customer
requirements for a particular purpose. Note that a line that is preceded by
an apostrophe introduces a comment in the code--comments are provided to
explain what the code is doing at a particular point in the procedure. Note
also that an underscore character (_) indicates that code continues from
one line to the next. You can type lines that contain this character as one
logical line or you can divide the lines of code and include the line
continuation character. For more information about Visual Basic for
Applications programming style, see the "Programming Style in This Manual"
section in the "Document Conventions" section of the "Visual Basic User's
Guide."
<P>
The following Visual Basic procedures use both the xlOpen and xlPrimary
constants. The example also includes a subroutine that clears out the
embedded Word object.
<P>
<PRE>Sub Embedded_Ole_Object_Using_xlPrimary()
   'Activates the object
   ActiveSheet.DrawingObjects("Picture 1").Verb (xlPrimary)
      Set myobj = CreateObject("word.basic")  'Creates a Word Basic object
      With myobj
         .Insert "Hello"                      'Word Basic commands
         .Insertpara
         .Insertpara
         .Insert "Goodbye"
      End With

      Set myobj = Nothing                      'clears the object
      Range("a1").Select                       'selects cell A1
End Sub


Sub Embedded_Ole_Object_Using_xlOpen()
   'Opens up Word
   ActiveSheet.DrawingObjects("Picture 1").Verb (xlOpen)
      Set myobj = CreateObject("word.basic")  'creates a Word Basic object
      With myobj
          .Insert "Hello"                     'Word Basic commands
          .Insertpara
          .Insertpara
          .Insert "Goodbye"
      End With

   'Sends keystrokes to close Word
   SendKeys "%fx{TAB}{ENTER}", True
   Set myobj = Nothing                        'clears the object
   Range("a1").Select                         'selects cell A1
End Sub

Sub Clearit()
   'Activates the object
   ActiveSheet.DrawingObjects("Picture 1").Verb
   'Creates a Word Basic object
      Set myobj = CreateObject("word.basic")
      With myobj
         .EditSelectAll                       'Word Basic commands
         .EditClear
      End With

      Set myobj = Nothing 'clears the object
      Range("a1").Select 'selects cell A1
End Sub

</PRE>To use these subroutines, do the following to set up the workbook:

<OL><P><LI>In Microsoft Excel, from the Insert menu, choose Object.

<P><LI>Select the Create New tab. On the Create New tab, select Microsoft Word
   6.0 Document from the Object Type list, and choose OK.

<P><LI>To return focus to Microsoft Excel, click any cell on the worksheet.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
The Microsoft Press book: "Excel 5 Visual Basic for Applications
Reference," version 5.0, page 708
<P>
For more information about the Verb Method, choose Contents in Help, then
choose Programming With Visual Basic and choose Search, and type:
<P>
<PRE>   verb
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 5.00 7.00<BR>
Keywords          : kbcode kbinterop kbprg<BR>
Version           : 5.00 5.00c 7.00 7.00a<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 13, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
