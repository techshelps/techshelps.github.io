

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MSQuery: Obtaining Login String from DDE Request to Query </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q105953">
<META NAME="KBModify" CONTENT="1997/09/02">
<META NAME="KBCreate" CONTENT="1993/10/28">
<META NAME="Keywords" CONTENT="IntpDde kbprg kbtool kbusage">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  To automate the querying process between Microsoft Query and another program, you can create a macro that logs into a data source from within Microsoft Query. To do this, the macro must have the correct connection string. You can obtain this connec...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBI0,QAH4,QBVP,QBS0,QAI5,QAGI,QAZ2,QAUJ,QACF,QAY2,QAUD,QATX,QAPF,QAK6,QDL9 P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>MSQuery: Obtaining Login String from DDE Request to Query</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 2, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q105953</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Query for Windows, version 1.0
<LI>Microsoft Query for Windows 95, version 2.0
<LI>Microsoft Query 97 for Windows
<LI>Microsoft Excel for Windows, verison 5.0
<LI>Microsoft Excel for Windows 95, version 7.0
<LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
To automate the querying process between Microsoft Query and another
program, you can create a macro that logs into a data source from within
Microsoft Query. To do this, the macro must have the correct connection
string. You can obtain this connection string from an existing query
through a dynamic data exchange (DDE) channel to the query.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To obtain the connection string required by the Microsoft Query, call
ODBCLOGON by initiating a DDE session to a query that is currently
logged into a data source and perform a DDE request of the
connectionstring item:

<OL><P><LI>Start Microsoft Query and log on to a data source.

<P><LI>In Microsoft Query, create a query (QUERY1).

<P><LI>Start Microsoft Excel and create one of the following macros.
<P>
</OL><h3>Visual Basic Code Example</h3>
 
<P>
Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft support engineers can help explain the
functionality of a particular macro, they will not modify these examples to
provide added functionality, nor will they help you construct macros to
meet your specific needs. If you have limited programming experience, you
may want to consult one of the Microsoft Solution Providers. Solution
Providers offer a wide range of fee-based services, including creating
custom macros. For more information about Microsoft Solution Providers,
call Microsoft Customer Information Service at (800) 426-9400.
<P>
<PRE>   Sub get_connection()

      ' Open a DDE channel to MSQuery and return the channel number
      chan = Application.DDEInitiate("Msquery", "Query1")
      ' Return the array that contains the connection string
      connect = Application.DDERequest(chan, "ConnectionString")
      ' Terminate the DDE channel
      Application.DDETerminate chan

   End Sub

</PRE></OL>The DDERequest method returns the array "connect" that contains a
valid connection string that can be used by the ODBCLOGON command in
order to connect through a DDE control.
<P>
NOTE: If you are using Microsoft Query 97, you must modify the line that
initiates the DDE channel. This line must include the correct name for the
query. In Microsoft Query 97, the query name is similar to "Query 1 from
&lt;Data Source Name&gt;." For example, if the data source that the query uses is
named "My DataSource," change the DDEInitiate line to the following:
<P>
<PRE>   chan = Application.DDEInitiate("Msquery", "Query 1 from My DataSource")

</PRE><h3>Microsoft Excel Version 4.0 Macro Example</h3>
 
<P>
Microsoft provides macro examples for illustration only, without warranty
either expressed or implied, including but not limited to the implied
warranties of merchantability and/or fitness for a particular purpose.
This macro is provided as is and Microsoft in no way guaranties that the
following code can be used in all situations and will not support
modifications of the code to suit specific customer requirements.
<P>
<PRE>   =SET.NAME("CHAN",INITIATE("MSQUERY","QUERY1"))
   =SET.NAME("Connect",REQUEST(CHAN,"CONNECTIONSTRING"))
   =TERMINATE(CHAN)
   =RETURN()

</PRE>The defined name CONNECT will contain a valid connection string that
can be used by the ODBCLOGON command in order to connect through a DDE
control.
<P>
NOTE: If you are using Microsoft Query 97, you must modify the line that
initiates the DDE channel. This line must include the correct name for the
query. In Microsoft Query 97, the query name is similar to "Query 1 from
&lt;Data Source Name&gt;." For example, if the data source that the query uses
is named "My DataSource," change the DDEInitiate line to the following:
<P>
<PRE>    =SET.NAME("CHAN",INITIATE("MSQUERY","Query 1 from My DataSource"))

</PRE><h2>REFERENCES</h2>
 
<P>
"Microsoft Query User's Guide," pages 134-144
<P>
For more information about the DDERequest Method, click the Search
button in Visual Basic Reference Help and type:
<P>
<PRE>   DDERequest Method
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 2.00 5.00 7.00 8.00 97 xl97<BR>
Keywords          : IntpDde kbprg kbtool kbusage<BR>
Version           : 1.00 2.00 97<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 2, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
