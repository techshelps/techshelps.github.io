

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: VB Uses OLE Automation with Excel Version 5.0 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q112443">
<META NAME="KBModify" CONTENT="1997/09/29">
<META NAME="KBCreate" CONTENT="1994/03/09">
<META NAME="Keywords" CONTENT="IAPOLE vb416 VB4WIN vbwin GnrlVb kbprg kbfasttip">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  This article demonstrates how to embed a Microsoft Excel version 5.0 Worksheet object in a Visual Basic application, and then manipulate it by using OLE Automation and an MSOLE2.VBX control or an OLE Container Control. Microsoft Excel version 5.0 o...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QBVP,QAH4,QAPN,QBMH,QAW6,QBWS,QBXS,QDM0,QA9Q,QAMA,QA7O,QAMN,QAB5,QBJZ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: VB Uses OLE Automation with Excel Version 5.0</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q112443</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Professional and Enterprise Editions of Microsoft Visual Basic,
   16-bit only, for Windows, version 4.0
<LI>Standard and Professional Editions of Microsoft Visual Basic for
   Windows, version 3.0
<LI>Microsoft Excel, version 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article demonstrates how to embed a Microsoft Excel version 5.0
Worksheet object in a Visual Basic application, and then manipulate it by
using OLE Automation and an MSOLE2.VBX control or an OLE Container Control.
Microsoft Excel version 5.0 offers OLE objects that support Worksheet and
Chart functionality using Visual Basic for Applications.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
A worksheet in Excel is sometimes called a spreadsheet. It is the primary
document used in Excel to store and manipulate data. A worksheet consists
of cells organized into columns and rows and is always a part of a
workbook.
<P>
<P><h3>Step-by-Step Example</h3>
 
<P>
The following example shows how to use OLE automation to accomplish some
common tasks on a worksheet, such as adding data, computing a sum and
selecting cells.

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Add the following constant declarations, taken from the CONSTANT.TXT
   file, into the general declarations section of Form1:
<P>
   Const OLE_CREATE_EMBED = 0
   Const OLE_ACTIVATE = 7

<P><LI>Add the MSOLE2.VBX file to the project, using the Add File option in the
   File Menu. MSOLE2.VBX is found in the WINDOWS\SYSTEM directory. The OLE
   control will appear as an option on the Visual Basic toolbar. Add an OLE
   control (OLE1) to Form1. Cancel the Insert Object Dialog box that pops
   up. You will be left with an empty OLE1 object on Form1. Set the OLE1
   control's SizeMode property to Stretch.

<P><LI>Add a command button (Command1) to Form1. Set the Caption to: Embed
   Excel 5.0 Object. Add the following code to the Command1 Click event to
   embed an Excel version 5.0 worksheet into the OLE1 control. Because the
   SizeMode property is set to Stretch, the Worksheet automatically sizes
   itself in the OLE1 control when the code is executed.
<P>
<PRE>      Sub Command1_Click()
         ole1.Class = "Excel.Sheet.5"
         ole1.Action = OLE_CREATE_EMBED
      End Sub

</PRE><P><LI>Place another Command button (Command2) on Form1. Change the Command
   button's Caption to: Add Data. Add the following code to the Command2
   click event:
<P>
<PRE>      Sub Command2_Click ()
         ole1.Action = OLE_ACTIVATE
         ole1.Object.cells(1, 1).value = "Jan"
         ole1.Object.cells(2, 1).value = 3
         ole1.Object.cells(3, 1).value = 4
         ole1.Object.cells(4, 1).value = 6
      End Sub

   The "ole1.Object" part is Visual Basic code. The rest of the line
   (cells(2,1).value = 1) is Excel's Visual Basic for Applications code.

</PRE><P><LI>Choose Start from the Run menu or press the F5 key to run the program.
   Click Command1 to see the worksheet. Click Command2 to see the
   information added to the worksheet. Choose End from the Run menu to
   return to development.

<P><LI>Add another Command button (Command3) to experiment with functions. Add
   the following code to the Command3 Click event code. The SUM function is
   one of many Excel functions that you can use in an experiment. Run the
   application, and press the command buttons to see the effect.
<P>
<PRE>      Sub Command3_Click()
         ole1.Action = OLE_ACTIVATE
         ole1.Object.Range("A2:A4").Select
         ' Try any one of the following lines, or add some pauses between
         ' them to see the selections taking place and the active cell
         ' changing.

         ' To try a line, remove the single quotation mark to uncomment the
         ' line:
         ' ole1.Object.Range("C6").Activate
         ' ole1.Object.cells(6, 1).value = "=SUM(R2C:R4C)"
         ' ole1.Object.Range("A6").Select
      End Sub

</PRE></OL><h3>Find Out More</h3>
 
<P>
To find out more about Microsoft Excel's Visual Basic for Applications,
open a new module sheet in Excel, and choose Object Browser from the View
menu, or press the F2 key. The Object Browser lists all the objects in
Excel and their related objects and methods. The Object Browser
demonstrates the hierarchical nature of the object model.
<P>
If you want to try something new, but are unsure of the syntax, it is a
good idea to start the Macro recorder in Microsoft Excel, step through the
process manually, switch off the Macro recorder, and view the code in the
current module. Then cut and paste the code into the Visual Basic event
procedure. Usually all that is required is a prefix of ole1.object.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: W_VBApp<BR>
Keywords          : IAPOLE vb416 VB4WIN vbwin GnrlVb kbprg kbfasttip<BR>
Technology        : kbole kbvba<BR>
Version           : WINDOWS:3.0 4.0<BR>
Platform          : WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
