

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: Seek Method Is Faster Than Find Method </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q98806 ">
<META NAME="KBModify" CONTENT="1997/08/29">
<META NAME="KBCreate" CONTENT="1993/05/13">
<META NAME="Keywords" CONTENT="JetFind kbprg PgmObj">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  When you are using Visual Basic for Applications to find a record in an indexed field, the Seek method may be faster than the Find method, especially in a large table.  This arti...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA1S,QDN9,QBS0,QAPN,QAY5,QA5F,QAMA,QA5V,QA28,QATJ,QABU,QAD2,QBV8,QAUD,QAB9 P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: Seek Method Is Faster Than Find Method</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q98806 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 1.0, 1.1, 2.0, 7.0, 97
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
When you are using Visual Basic for Applications to find a record in an
indexed field, the Seek method may be faster than the Find method,
especially in a large table.
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
NOTE: Visual Basic for Applications is called Access Basic in Microsoft
Access versions 1.x and 2.0. For more information about Access Basic,
please refer to the "Introduction to Programming" manual in Microsoft
Access version 1.x or the "Building Applications" manual in Microsoft
Access version 2.0
<P>
RESOLUTION
 
<P>
Use the Seek method on indexed fields to optimize your search speed.
<P>
MORE INFORMATION
 
<P>
When you perform a Seek, you are opening a table directly and moving
to the record based on an index value. When you create a dynaset and
perform a Find, you are checking the value of the field in every
record until you find a match.
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 

<OL><P><LI>Open the sample database Northwind.mdb (or NWIND.MDB in Microsoft
   Access 2.0 or earlier).

<P><LI>Create a new module and enter the following two functions:
<P>
<P><PRE>      '*********************************************
      'Declarations section of the module.
      '*********************************************
      Option Explicit
</PRE><P>
<P><PRE>      '=============================================
      'The following function uses the Seek method.
      'It quickly returns the Customer ID where the
<PRE></PRE>      '   PrimaryKey field = 11070.
      '=============================================
      Function Faster ()
         Dim db As Database, tbl As Recordset

         Set db = CurrentDB()
         Set tbl = db.OpenRecordset("Orders", DB_OPEN_TABLE)

         tbl.Index = "PrimaryKey"
         tbl.Seek "=", 11070
         Debug.Print tbl("CustomerID")

         ' NOTE: In Microsoft Access 2.0 or earlier, there is a space in
         ' Customer ID.

         tbl.Close
      End Function

      '=============================================
      'The following function uses the Find method.
      'It is slightly slower in returning the Customer
      '   ID where the PrimaryKey field = 11070.
      '=============================================
      Function Slower()
         Dim Criteria As String, MyDB As Database, Myset As Recordset

         Set MyDB = CurrentDB()
         Set Myset = MyDB.OpenRecordset("Orders", DB_OPEN_DYNASET)
         Criteria = "[OrderID] =" &amp; 11070

         ' NOTE: In Microsoft Access 2.0 or earlier, there is a space in
         ' Order ID.

         Myset.FindNext Criteria
         Debug.Print Myset("Customerid")
      End Function

</PRE><P><LI>On the View menu, click Debug window (or Immediate window in
   Microsoft Access 2.0 or earlier).

<P><LI>In the Debug window, type the following line, and then press ENTER:
<P>
<P><PRE>      ?Faster()
</PRE><P>
   Then, type the following line, and press ENTER:
<P>
<P><PRE>      ?Slower()
</PRE><P>
   Notice that the Faster() function, which uses Seek, is slightly faster
   than the Slower() function, which uses FindNext.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about using the Seek method, search the Help Index
for "Seek."
<P>
For more information about using the Find method, search the Help Index
for "FindFirst."
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: seeking finding<BR>
Keywords          : JetFind kbprg PgmObj<BR>
Version           : 1.0 1.1 2.0 7.0 97<BR>
Platform          : WINDOWS<BR>
Hardware          : x86<BR>
Issue type        : kbprb<BR>
Solution Type     : kbcode<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
