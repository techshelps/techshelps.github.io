

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: Application.Interactive Value Not Reset When Macro Stops </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q151332">
<META NAME="KBModify" CONTENT="1998/02/03">
<META NAME="KBCreate" CONTENT="1996/05/21">
<META NAME="Keywords" CONTENT="kbcode kbole kbprg PgmOthr">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Application.Interactive does not reset itself to a default value after the end of the macro is reached.  CAUSE =====  The Interactive property of the Application object allows a macro to block all user input from both the keyboard and the mouse. Th...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QAH4,QBS0,QBWS,QAXT,QAPN,QBJZ,QAKR,QAHE,QAGU,QAJH P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: Application.Interactive Value Not Reset When Macro Stops</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 3, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q151332</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, versions 5.0, 5.0c
<LI>Microsoft Excel for Windows 95, version 7.0
<LI>Microsoft Excel for Windows NT, version 5.0
<LI>Microsoft Excel for the Macintosh, versions 5.0, 5.0a
<LI>Microsoft Excel for the Power Macintosh, versions 5.0, 5.0a
<LI>Microsoft Excel 97 for Windows
<LI>Microsoft Excel 98 Macintosh Edition
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Application.Interactive does not reset itself to a default value after the
end of the macro is reached.
<P>
<P><h2>CAUSE</h2>
 
<P>
The Interactive property of the Application object allows a macro to block
all user input from both the keyboard and the mouse. The property is useful
in situations where user input has the potential to disrupt macro
operations. However, unlike most of the Read/Write properties of the
Microsoft Excel Application object, Application.Interactive does not reset
itself to a default value after the end of the macro is reached. Because of
this, if the interactive property is not reset back to a true value in the
code of the macro, or an error occurs during execution of the macro,
Microsoft Excel will not respond to user input even though the macro has
technically stopped executing.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
In the case where the user forgets to reset the property back to true, or
the user encounters an error in the execution of the code, it will most
likely be necessary to shut down that instance of Microsoft Excel and fix
the line of code that caused the error.
<P>
Using CTRL+ALT+DELETE on Windows 95 and Windows NT and ending the Microsoft
Excel task will accomplish this.
<P>
On the Apple Macintosh, the user will need to use OPTION+COMMAND+ESCAPE to
force Microsoft Excel to quit.
<P>
Under Windows 3.x the user may be able to use CTRL+ALT+DELETE, but more
often than not, because no "error" has occurred, the user will have to
restart the machine.
<P>
<P><h3>Sample Visual Basic Procedure</h3>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, 
the implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the
functionality of a particular procedure, but they will not modify these
examples to provide added functionality or construct procedures to meet
your specific needs. If you have limited programming experience, you 
may want to contact the Microsoft fee-based consulting line at (800) 
936-5200. For more information about the support options available 
from Microsoft, please see the following page on the World Wide Web: 
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>In the event that it is necessary to enable user input to Microsoft Excel
without a restart of the application, there is a method to reset the
property using Automation through a Visual Basic for Applications macro.
<P>
NOTE:  The success of the following macro depends on the ability to open a
separate instance of Microsoft Excel. Under Windows 3.x, the number and 
complexity of applications that can be running concurrently is directly 
dependent on available System Resources. If the instance of Microsoft Excel 
that is not responding, or the instance the user is trying to open contains 
many worksheets, charts and so on, System Resources will be significantly 
reduced. In Microsoft Excel 98, you cannot start a separate instance of 
Microsoft Excel, and therefore must run the macro from another application.
<P>
The method for opening a separate instance of Microsoft Excel varies 
depending on the operating system.
<P>
<P><h3>Windows 3.x and Windows NT</h3>
 

<OL><P><LI>Use ALT+TAB to switch to Program Manager.

<P><LI>Either double click the Microsoft Excel icon or click Run on the
   File menu. Type the complete path to the Microsoft Excel executable
   file, for example, "c:\Excel\Excel.exe", and then press ENTER.
<P>
</OL><h3>Windows 95</h3>
 

<OL><P><LI>Click the Start button.

<P><LI>Click Run, type the full path to Microsoft Excel in the Open box, for
   example, "c:\Excel\Excel.exe", and then press ENTER.

<P><LI>In Microsoft Excel 97, point to Macro on the Tools menu, and then click 
   Visual Basic Editor.
<P>
</OL><h3>Microsoft Excel 5.0 on the Apple Macintosh</h3>
 

<OL><P><LI>Switch to Finder.
<P>
   Note: If you have Microsoft Office Manager installed from Microsoft 
   Office and you have QuickSwitch enabled for the Microsoft Office 
   Manager, you can press COMMAND+TAB to switch to Finder. Otherwise, you
   would have to click the Finder desktop or another program window
   in the background to switch to that application.

<P><LI>Double-click the hard drive and locate the Microsoft Excel icon.

<P><LI>Create a copy of the Microsoft Excel icon by holding down the Option
   button and dragging the icon to the desktop.

<P><LI>Double-click the Microsoft Excel icon.
<P>
</OL>Once a separate instance of Microsoft Excel has been started using one of 
the methods listed above, follow these steps:

<OL><P><LI>On the Insert menu, click Module.

<P><LI>Type the following code in the Module sheet.
<P>
<PRE>      Sub reset_interactive()

         Dim xlobj As Object

         ' The GetObject method will access the open instance of Microsoft 
         ' Excel, not a new one.
         Set xlobj = GetObject("Book1")

         ' Where book1 is the name of the Workbook that has stopped 
         ' responding to user input. Make sure to leave the extension, 
         ' .xls, .xlt, and so on, off.
         ' Because the above line assigns the first Worksheet of book1 to 
         ' xlobj, we must access the Application property of the object in 
         ' order to reset the Interactive property.

         xlobj.Application.Interactive = True

      End Sub

</PRE><P><LI>To run the macro, click the insertion point in the macro code, and then 
   press F5.
<P>
</OL><h3>Microsoft Excel 98 Macintosh Edition</h3>
 
<P>
As stated previously, you cannot start more than one instance of Microsoft 
Excel 98; therefore, you must run the Visual Basic for Applications Sub 
procedure from another Microsoft Office program. In this example, we will 
use Microsoft Word 98.

<OL><P><LI>Switch to Microsoft Word 98.
<P>
   Note: If you have Microsoft Office Manager installed from Microsoft 
   Office and you have QuickSwitch enabled for the Microsoft Office 
   Manager, you can press COMMAND+TAB to switch to Finder. Otherwise, you
   would have to click the Finder desktop or another program window
   in the background to switch to that application.

<P><LI>On the Tools menu, point to Macro, and then click Visual Basic Editor.

<P><LI>On the Insert menu, click Module.

<P><LI>Type the following code in the Module sheet:
<P>
<PRE>      Sub reset_interactive()

         Dim xlobj As Object

         ' The GetObject method will access the open instance of Microsoft 
         ' Excel.
         Set xlobj = GetObject(,"Excel.Application")

         ' Sets the Interactive property for the Excel application back to 
         ' True.
         xlobj.Interactive = True

      End Sub

</PRE><P><LI>To run the macro, click the insertion point in the macro code, and then 
   press F5.
<P>
</OL><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in the Microsoft products
listed at the beginning of this article. We are researching this problem
and will post new information here in the Microsoft Knowledge Base as it
becomes available.
<P>
REFERENCES
 
<P>
"Microsoft Excel 5 Visual Basic for Applications Reference", version 5.0,
page 342
<P>
"Microsoft Excel/Visual Basic Reference", second edition, page 394
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 5.00 5.00a 5.00c 7.00<BR>
Keywords          : kbcode kbole kbprg PgmOthr<BR>
Version           : MACTINTOSH:5.00,98; WINDOWS:5.00,5.00c,7.00,97<BR>
Platform          : MACINTOSH WINDOWS<BR>
Issue type        : kbprb<BR>
Solution Type     : kbworkaround<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 3, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
