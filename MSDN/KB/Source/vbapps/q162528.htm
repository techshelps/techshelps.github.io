

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WD97: Returning Object Counts for Parts of a Document </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q162528">
<META NAME="KBModify" CONTENT="1998/02/11">
<META NAME="KBCreate" CONTENT="1997/01/23">
<META NAME="Keywords" CONTENT="kbwordvba kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Visual Basic for Applications, an object represents an element of an application, such as a document, a paragraph, a sentence, a word, or a field.  A collection is an object that contains several other objects, usually, but not always, of the sa...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QAW6,QAUD,QBS0,QAG8,QAFF,QAPF,QAMA,QA07,QAMB,QANF,QAKJ,QAIH,QALW,QBVV P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>WD97: Returning Object Counts for Parts of a Document</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 11, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q162528</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Word 97 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Visual Basic for Applications, an object represents an element of an
application, such as a document, a paragraph, a sentence, a word, or a
field.
<P>
A collection is an object that contains several other objects, usually,
but not always, of the same type. In Microsoft Word, for example, the
Documents Collection object contains all the open Document objects.
<P>
At times it may be necessary when you write Visual Basic for Applications
macros to return the number of objects within a particular collection of
objects.
<P>
This article discusses methods that can be used to return the count of a
collection of objects for part or all of a document including but not
limited to objects located in headers, footers, and different sections of a
document.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides examples of Visual Basic for Applications procedures
for illustration only, without warranty either expressed or implied,
including, but not limited to the implied warranties of merchantability
and/or fitness for a particular purpose. The Visual Basic procedures in
this article are provided 'as is' and Microsoft does not guarantee that
they can be used in all situations. While Microsoft support engineers can
help explain the functionality of a particular macro, they will not modify
these examples to provide added functionality, nor will they help you
construct macros to meet your specific needs. If you have limited
programming experience, you may want to consult one of the Microsoft
Solution Providers. Solution Providers offer a wide range of fee-based
services, including creating custom macros. For more information about
Microsoft Solution Providers, call Microsoft Customer Information Service
at (800) 426-9400.
<P>
<P><h3>Method 1: To Return a Count of Objects for an Entire Document</h3>
 
<P>
To return a count of objects for an entire document including those
contained in headers, footers, comments, endnotes, footnotes and text
frames use the StoryRanges Collection object.
<P>
A Story object is contained within the Story Collection. Members of the
Story collection are
<P>
- The Main Text or Body of a Document
<P>
- First Page Header
<P>
- First Page Footer
<P>
- Primary Header
<P>
- Primary Footer
<P>
- Even Pages Headers
<P>
- Even Pages Footers
<P>
- Comments
<P>
- EndNotes
<P>
- Footnotes
<P>
- Text Frames
<P>
For example, to count the number of fields in all stories of a document,
use the following example:
<P>
<PRE>   Sub CountAllFields()
      Dim iCount As Integer
      Dim aStory As Object
      For Each aStory In ActiveDocument.StoryRanges
         iCount = iCount + aStory.Fields.Count
      Next
      MsgBox iCount
   End Sub

</PRE>To count the number of Shapes(Drawing Objects) in all stories of a
document, use the following example:
<P>
<PRE>   Sub CountAllShapes()
      Dim iCount As Integer
      Dim aStory As Object
      For Each aStory In ActiveDocument.StoryRanges
         iCount = iCount + aStory.Application.ActiveDocument.Shapes.Count
      Next
      MsgBox iCount
   End Sub

</PRE>To count the number of Hyperlinks in all stories of a document, use the
following example:
<P>
<PRE>   Sub CountAllHyperLinks()
      Dim iCount As Integer
      Dim aStory As Object
      For Each aStory In ActiveDocument.StoryRanges
         iCount = iCount + _
         aStory.Application.ActiveDocument.Hyperlinks.Count
      Next
      MsgBox iCount
   End Sub

</PRE><h3>Method 2: To Return a Count of Objects for Part of a Document</h3>
 
<P>
To return a count of items for a single member of the StoryRange, specify a
member of the story range with a wdStoryType constant.
<P>
In this example, the wdMainTextStory constant is used in conjunction with
the Paragraphs collection to return the count of paragraphs in the main
text or body of a document:
<P>
<PRE>   Sub CountParagraphs()
      MsgBox ActiveDocument.StoryRanges(wdMainTextStory).Paragraphs.Count
   End Sub

</PRE>In this example, the wdMainTextStory constant is used in conjunction with
the Sentences Collection to return the count of sentences in the main body
of a document:
<P>
<PRE>   Sub CountSentencesInMainDocBody()
      Dim MyStory As Object
      Set MyStory = ActiveDocument.StoryRanges(wdMainTextStory)
      MsgBox MyStory.Sentences.Count
   End Sub

</PRE>For more information about StoryRanges, from the Visual Basic for
Applications Editor, click the Office Assistant, type "story," click
Search, and then click to view "StoryRanges Collection Object."
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: word8 word97 8.0<BR>
Keywords          : kbwordvba kbprg<BR>
Version           : 97<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 11, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
