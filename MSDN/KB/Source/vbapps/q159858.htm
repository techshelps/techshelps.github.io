

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL97: Macro Error Accessing OLEObject on Worksheet </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q159858">
<META NAME="KBModify" CONTENT="1998/03/13">
<META NAME="KBCreate" CONTENT="1996/11/22">
<META NAME="Keywords" CONTENT="kbcode kberrmsg kbprg xlvbainfo xlui">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  You may receive the following error when you run a Visual Basic for Applications macro that accesses an OLEObject on a worksheet:     Run-time error '1004':    Unable to get the OLEObjects property of the Worksheet class  CAUSE =====  To access an ...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QBPV,QBJZ,QBWS,QAUJ,QBS0,QAPN,QABI,QABH,QBVP,QBQU,QBM8,QAAP,QA2Q,QAW6 P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL97: Macro Error Accessing OLEObject on Worksheet</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 13, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q159858</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
You may receive the following error when you run a Visual Basic for
Applications macro that accesses an OLEObject on a worksheet:
<P>
<PRE>   Run-time error '1004':
   Unable to get the OLEObjects property of the Worksheet class

</PRE><h2>CAUSE</h2>
 
<P>
To access an OLE object on a worksheet using the OLEObjects method, you
must specify the drawing object name for the object. The drawing object
name is the name that appears in the Name box when the worksheet object is
selected.
<P>
You may receive the error described if you do not use the "drawing object
name" with the OLEObjects method.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft support engineers can help explain the
functionality of a particular macro, they will not modify these examples to
provide added functionality, nor will they help you construct macros to
meet your specific needs. If you have limited programming experience, you
may want to consult one of the Microsoft Solution Providers. Solution
Providers offer a wide range of fee-based services, including creating
custom macros. For more information about Microsoft Solution Providers,
call Microsoft Customer Information Service at (800) 426-9400.
<P>
If you change the Name property for an OLE object on your worksheet, you
should also change the drawing object name so that the names are the same.
<P>
The following steps illustrate how this problem may occur and how you can
correct it.

<OL><P><LI>In Microsoft Excel 97, start a new workbook.

<P><LI>Point to Toolbars on the View menu and click Control Toolbox to display
    the Control Toolbox toolbar.

<P><LI>Click the Check Box control and drag over the worksheet to draw a check
    box.

<P><LI>Right-click the check box and click Properties on the shortcut menu.

<P><LI>Type "MyBox" (without quotation marks) as the Name property of the
    check box. Close the Properties window.

<P><LI>Press ALT+F11 to activate the Visual Basic Editor.

<P><LI>Click Module on the Insert menu.

<P><LI>Type the following code in the Code Window:
<P>
<PRE>       Sub Test()
           Activesheet.OLEObjects("MyBox").Object.Value = True
       End Sub

</PRE><P><LI>Click "Close and Return to Microsoft Excel" on the File menu.

<P><LI>Point to Macro on the Tools menu and click Macros. Select the macro
    named Test and click Run to run the macro. You will receive the run-
    time error described earlier in this article.
<P>
</OL>To correct the problem so that the macro runs successfully, you should
change the drawing object name of the check box to MyBox. To do this, use
the following steps:

<OL><P><LI>Click the Design Mode toolbar button on the Control Toolbox toolbar.

<P><LI>Select the check box.

<P><LI>Type MyBox in the Name box of the Formula bar and press Enter.

<P><LI>Point to Macro on the Tools menu and click Macros. Select the macro
   named Test and click Run to run the macro. The macro will run
   successfully.
<P>
</OL><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in the Microsoft products
listed at the beginning of this article. We are researching this problem
and will post new information here in the Microsoft Knowledge Base as it
becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The Name box is the box at the left end of the formula bar that identifies
the selected cell, chart item or drawing object. To display the Name box,
click Options on the Tools menu, click the View tab, select Formula Bar and
click OK.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: XL97 8.00 checkbox command button text box<BR>
textbox option optionbutton list listbox combo combobox toggle spin spinner<BR>
scroll scrollbar label image ActiveX<BR>
Keywords          : kbcode kberrmsg kbprg xlvbainfo xlui<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 13, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
