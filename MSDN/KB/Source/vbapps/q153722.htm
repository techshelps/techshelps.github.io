

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: GetOpenFilename Method Is Different </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q153722">
<META NAME="KBModify" CONTENT="1997/11/05">
<META NAME="KBCreate" CONTENT="1996/07/16">
<META NAME="Keywords" CONTENT="kbcode kbprg kbref">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  The Visual Basic for Applications GetOpenFilename method works differently in Microsoft Excel for Windows 95 and later than in Microsoft Excel version  5.0. Also, the Help file entry on GetOpenFilename in Microsoft Excel for Windows 95, version 7.0...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QBRZ,QDL9,QBWQ,QBWO,QBWN,QBS0,QA7N,QA7O,QAE1,QAPF P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: GetOpenFilename Method Is Different</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 5, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q153722</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
<LI>Microsoft Excel for Windows 95, versions 7.0, 7.0a
<LI>Microsoft Excel for Windows, versions 5.0, 5.0c
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The Visual Basic for Applications GetOpenFilename method works differently
in Microsoft Excel for Windows 95 and later than in Microsoft Excel version 
5.0. Also, the Help file entry on GetOpenFilename in Microsoft Excel for Windows
95, version 7.0 and Microsoft Excel 97, is not complete on how the FileFilter 
argument affects the method.
<P>
<P><h2>CAUSE</h2>
 
<P>
The FileFilter argument for the GetOpenFilename method contains two parts.
In Microsoft Excel, version 5.0, the first part, which is before the comma,
appears in the "List Files of Type:" field in the File Open dialog box. The
second filter, which is after the comma, appears in the File Name field of
the dialog box and is the part that actually affects what files are shown.
If you leave out the second part, the function shows all files. The first
part has no effect on what files are shown. It can be anything. Therefore,
you must make sure the two parts match, because you could have a filter in
the "List Files of Type:" field that does not match the list of files
shown.
<P>
In Microsoft Excel for Windows 95 and Microsoft Excel 97, the Filefilter 
argument affects the GetOpenFilename differently. The entire Filefilter 
string appears in the Files Of Type field. The first part has the effect 
of determining what files will be listed. The first part will do this even 
if the second part is different. The second part of the Filefilter argument 
(the part after the comma) does not determine the list of files displayed 
unless it is used by itself. The first part takes precedence.
<P>
Additionally, characters before a wildcard ("*") are fully recognized in
Microsoft Excel, version 5.0. In Microsoft Excel for Windows 95 and 
Microsoft Excel 97, characters before a wildcard are only recognized in the 
file extension, not in the file name. Any filter with characters before a 
wildcard in the file name is ignored. This means something like "Test*.*" 
does not work as a Filefilter in Microsoft Excel for Windows 95 and Microsoft
Excel 97. It shows no file filter in the open dialog box and lists all files 
in the current folder (directory).
<P>
<P><h2>WORKAROUND</h2>
 
<P>
For simplification, in Microsoft Excel for Windows 95 and Microsoft Excel 97, 
you can use the first filter as if it were the only filter. However, you must 
include the comma to avoid a syntax error. Also, you should avoid characters 
before a wildcard in the file name.
<P>
For example, use the following format in the module code:
<P>
<PRE>     fileFilter:="Text Files (*.txt),"

</PRE><h2>MORE INFORMATION</h2>
 
<P>
The examples below depict the differences between the two versions when
running variations of GetOpenFilename. Each example contains a macro that
can either be run in Microsoft Excel 5.0, Microsoft Excel for Windows
95, or in Microsoft Excel 97. The comments before each macro describe the 
results you receive in each of the three versions.
<P>
<P><h3>Visual Basic Code Examples</h3>
 
<P>
Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft support engineers can help explain the
functionality of a particular macro, they will not modify these examples to
provide added functionality, nor will they help you construct macros to
meet your specific needs. If you have limited programming experience, you
may want to consult one of the Microsoft Solution Providers. Solution
Providers offer a wide range of fee-based services, including creating
custom macros. For more information about Microsoft Solution Providers,
call Microsoft Customer Information Service at (800) 426-9400. To
illustrate, the following are a few examples of the various differences
between the two versions.
<P>
<P><h3>Example 1</h3>
 
<P>
Microsoft Excel version 5.0 shows "Text Files (test*.*)" in the "List Files
of Type" field and only lists files beginning with "test."
<P>
Difference: Microsoft Excel for Windows 95 and Microsoft Excel 97 show 
nothing in the "Files of Type" field and lists all files.
<P>
<PRE>   Sub Example1()
      x = Application.GetOpenFilename _
         (fileFilter:="Text Files (test*.*),test*.*")
   End Sub

</PRE><h3>Example 2</h3>
 
<P>
Microsoft Excel version 5.0 shows "Text Files (*.txt)" in the "List Files
of Type:" field and only lists files ending in "xls".
<P>
Difference: Microsoft Excel for Windows 95 and Microsoft Excel 97 show "Text 
Files (*.txt)" in the "Files of Type" field and displays files ending in 
".txt".
<P>
<PRE>   Sub Example2()
       x = Application.GetOpenFilename _
          (fileFilter:="Text Files (*.txt),*.xls")
   End Sub

</PRE><h3>Example 3</h3>
 
<P>
Microsoft Excel version 5.0 shows "Text Files (*.txt)" in the "List Files
of Type:" field and lists all files.
<P>
Difference: Microsoft Excel for Windows 95 and Microsoft Excel 97 show 
"Text Files (*.txt)" in the "Files of Type" field and displays files ending 
in ".txt".
<P>
<PRE>   Sub Example3()
      x = Application.GetOpenFilename _
         (fileFilter:="Text Files (*.txt),")
   End Sub

</PRE><h3>Example 4</h3>
 
<P>
Microsoft Excel version 5.0 shows "Text Files (bob*.txt)" in the "List
Files of Type:" field and displays files beginning with "bob" and ending
with "txt".
<P>
Difference: Microsoft Excel for Windows 95 and Microsoft Excel 97 show 
nothing in the "Files of Type" field and lists all files.
<P>
<PRE>   Sub Example4()
      x = Application.GetOpenFilename _
         (fileFilter:="Text Files (bob*.txt),bob*.txt")
   End Sub

</PRE><h3>Example 5</h3>
 
<P>
Microsoft Excel version 5.0 shows "Text Files (*.tx*)" in the "List Files
of Type:" field and displays files with ".tx" as part of the extension.
<P>
Difference: Microsoft Excel for Windows 95 and Microsoft Excel 97 show
"Text Files (*.tx*)" in the "Files of Type" field and displays files with 
".tx" as part of the extension.
<P>
<PRE>   Sub Example5()
      x = Application.GetOpenFilename _
         (fileFilter:="Text Files (*.tx*),*.tx*")
   End Sub

</PRE><h3>Example 6</h3>
 
<P>
Microsoft Excel version 5.0 shows  nothing in the "List Files of Type:"
field and displays files ending in ".txt".
<P>
Difference: Microsoft Excel for Windows 95 and Microsoft Excel 97 show 
"(*.txt)" in the "Files of Type" field and displays files ending in ".txt".
<P>
<PRE>   Sub Example6()
      x = Application.GetOpenFilename(",*.txt")
   End Sub

</PRE><h2>REFERENCES</h2>
 
<P>
<P><h3>Microsoft Excel 97</h3>
 
<P>
For more information about GetOpenFilename, click the Office Assistant,
type "GetOpenFilename," click Search, and then click to view 
"GetOpenFilename Method."
<P>
NOTE: If the Assistant is hidden, click the Office Assistant button on 
the Standard toolbar. If Microsoft Excel Visual Basic for Applications
Help is not installed on your computer, please see the following article 
in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../OFFICE/Q120802.htm">Q120802</A></B>
   TITLE     : Office: How to Add/Remove a Single Office
               Program or Component

</PRE><h3>Microsoft Excel for Windows 95</h3>
 
<P>
For more information about GetOpenFilename, in Microsoft Excel for Windows
95, click Answer Wizard on the Help menu and type:
<P>
<PRE>   GetOpenFilename

</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 5.00 5.00c 7.00 7.00a XL97 8.00<BR>
Keywords          : kbcode kbprg kbref<BR>
Version           : 5.00 5.00c 7.00 7.00a<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 5, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
