

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Can't Use SQLRetrieve/SQLRequest to Return Over 248 Columns </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q136819">
<META NAME="KBModify" CONTENT="1997/12/01">
<META NAME="KBCreate" CONTENT="1995/09/14">
<META NAME="Keywords" CONTENT="kbprg ODBCGen">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel, you can use the Xlodbc.xla add-in macro functions to return data from an external source to your worksheet. The XLODBC macro functions SQLRetrieve and SQLRequest may not behave as expected if you attempt to return more than 248 ...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QAUD,QBJQ,QAE1,QAH4,QALW,QDL9,QBWQ,QBWO,QBWN,QDMN,QAVX,QAPN,QBJZ,QBI0 P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Can't Use SQLRetrieve/SQLRequest to Return Over 248 Columns</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 1, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q136819</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
<LI>Microsoft Excel for Windows 95, version 7.0
<LI>Microsoft Excel for Windows, versions 5.0, 5.0a, 5.0c
<LI>Microsoft Excel for Windows NT, version 5.0
<LI>Microsoft Excel for the Macintosh, version 5.0, 5.0a
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
In Microsoft Excel, you can use the Xlodbc.xla add-in macro functions to
return data from an external source to your worksheet. The XLODBC macro
functions SQLRetrieve and SQLRequest may not behave as expected if you
attempt to return more than 248 columns of data. If the SQLExecQuery
function is used to create a query, this function will correctly return the
number of columns in the data set resulting from the query even if this
number exceeds 248.
<P>
In Microsoft Excel 5.0 for Windows, when you attempt to use SQLRetrieve or
SQLRequest to return more than 248 columns of data, you may receive the
error message:
<P>
<PRE>   Excel caused a General Protection Fault in module XLODBC.DLL at
   0001:52E3

</PRE>In Microsoft Excel 5.0 for Windows NT, Microsoft Excel 5.0 for the
Macintosh, Microsoft Excel 7.0 for Windows 95 and Microsoft Excel 97, if
you use SQLRetrieve or SQLRequest to return more than 248 columns of data,
you will receive only the first 248 columns of the result set but you will
not receive an error.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
To work around this problem, use any of the following methods.
<P>
Method 1: Using Xlodbc.xla
<P>
<PRE>          You cannot return more than 248 columns of data to Microsoft
          Excel using the Xlodbc.xla macro functions unless you execute
          two separate queries--one query to return the first 248
          columns and another query to return the remaining columns.

</PRE>Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>Method 2: Using Xlquery.xla
<P>
<PRE>          You can use the Microsoft Query add-in to return more than
          248 columns. The macro below demonstrates an example.

          Sub GetData()

          Dim ConStr As String
          Dim SQL As String

              'Open the Microsoft Query Add-in
              Workbooks.Open Application.LibraryPath &amp; _
                 "\msquery\xlquery.xla"

              'Define the Connection String and the SQL Query
              ConStr = "DSN=NWind"
              SQL = "Select * from c:\windows\msapps\msquery\test.dbf"

              'Execute the query and return the data to cell A1 on
              'Sheet1--
              'Include the field names and do not store the query on
              'the worksheet
              Run "QueryGetData", ConStr, SQL, False, True, False, _
                  Sheets("Sheet1").Range("A1"), True

          End Sub

</PRE>Method 3: Using Data Access Objects (DAO) in Microsoft Excel 7.0 and 97
<P>
<PRE>          You can use DAO to return more than 248 columns. The macro
          below demonstrates an example. To use DAO in a Microsoft
          Excel 7.0 macro, click References on the Tools menu while the
          module sheet is active and select Microsoft DAO 3.0 Object
          Library.

          To use DAO in a Microsoft Excel 97 macro, click References on
          the Tools menu in Visual Basic Editor and select Microsoft
          DAO 3.5 Object Library.

          Sub GetData()

          Dim db as Database
          Dim rs as Recordset

             'Open the dBASE database in the specified directory
             Set db = OpenDatabase("c:\windows\msapps\msquery", False,_
                   False, "dBASE IV;")

             'Create a recordset that contains all of the records in
             'the table Test.dbf
             Set rs = db.OpenRecordset("Select * from Test")

             'Copy the data in the recordset to Sheet1!A2
             Sheets("Sheet1").Range("A2").CopyFromRecordset rs

             'Return the field names in the recordset to row 1
             For I = 0 to rs.Fields.Count -1
                   Sheets("Sheet1").Cells(1,I +1) = rs.Fields(i).Name
               Next

          End Sub

</PRE><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in the Microsoft products
listed at the beginning of this article. We are researching this problem
and will post new information here in the Microsoft Knowledge Base as it
becomes available.
<PRE>          'number of rows in the result set
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 5.00 7.00 8.00 97 GP Fault GPF<BR>
Keywords          : kbprg ODBCGen<BR>
Version           : WINDOWS: 5.0, 5.0c, 7.0, 97; MACINTOSH: 5.0, 5.0a<BR>
Platform          : MACINTOSH WINDOWS<BR>
Issue type        : kbbug<BR>
Solution Type     : kbpending<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 1, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
