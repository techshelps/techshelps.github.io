

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: How to Return an UNC Path from an Existing Drive Letter </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q151027">
<META NAME="KBModify" CONTENT="1997/08/28">
<META NAME="KBCreate" CONTENT="1996/05/15">
<META NAME="Keywords" CONTENT="kbprg PgmApi">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  This article demonstrates how to return the Universal Naming Convention (UNC) path for a mapped drive letter.  This article assumes that you are familiar with Visual Basic f...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAUD,QAAP,QAB4,QA1S,QAGX,QAY5,QAC9,QATX,QA5J,QA5I,QBS0,QA01,QDN9,QAB9,QBV8 P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: How to Return an UNC Path from an Existing Drive Letter</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 28, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q151027</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
This article demonstrates how to return the Universal Naming Convention
(UNC) path for a mapped drive letter.
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To find the UNC path associated with a mapped network drive letter,
follow these steps:

<OL><P><LI>Create a module and type the following lines in the Declarations
   section:
<P>
<P><PRE>      Option Explicit
</PRE><P>
<P><PRE>      ' These represent the possible returns errors from API.
      Public Const ERROR_BAD_DEVICE = 1200&amp;
      Public Const ERROR_CONNECTION_UNAVAIL = 1201&amp;
      Public Const ERROR_EXTENDED_ERROR = 1208&amp;
      Public Const ERROR_MORE_DATA = 234
      Public Const ERROR_NOT_SUPPORTED = 50&amp;
      Public Const ERROR_NO_NET_OR_BAD_PATH = 1203&amp;
      Public Const ERROR_NO_NETWORK = 1222&amp;
      Public Const ERROR_NOT_CONNECTED = 2250&amp;
      Public Const NO_ERROR = 0
</PRE><P>
<P><PRE>      ' This API declaration is used to return the
      ' UNC path from a drive letter.
      Declare Function WNetGetConnection Lib "mpr.dll" Alias _
<PRE></PRE>                       "WNetGetConnectionA" _
                       (ByVal lpszLocalName As String, _
                       ByVal lpszRemoteName As String, _
                       cbRemoteName As Long) As Long

</PRE><P><LI>Type the following procedure:
<P>
<P><PRE>      Function GetUNCPath(strDriveLetter As String) As String
<PRE></PRE>         On Local Error GoTo GetUNCPath_Err
         Dim Msg As String, lngReturn As Long
         Dim lpszLocalName As String
         Dim lpszRemoteName As String
         Dim cbRemoteName As Long
         lpszLocalName = strDriveLetter
         lpszRemoteName = String$(255, Chr$(32))
         cbRemoteName = Len(lpszRemoteName)
         lngReturn = WNetGetConnection(lpszLocalName, _
                                       lpszRemoteName, _
                                       cbRemoteName)
         Select Case lngReturn
            Case ERROR_BAD_DEVICE
               Msg = "Error: Bad Device"
            Case ERROR_CONNECTION_UNAVAIL
               Msg = "Error: Connection Un-Available"
            Case ERROR_EXTENDED_ERROR
               Msg = "Error: Extended Error"
            Case ERROR_MORE_DATA
               Msg = "Error: More Data"
            Case ERROR_NOT_SUPPORTED
               Msg = "Error: Feature not Supported"
            Case ERROR_NO_NET_OR_BAD_PATH
               Msg = "Error: No Network Available or Bad Path"
            Case ERROR_NO_NETWORK
               Msg = "Error: No Network Available"
            Case ERROR_NOT_CONNECTED
               Msg = "Error: Not Connected"
            Case NO_ERROR
               ' all is successful...
         End Select
         If Len(Msg) Then
            MsgBox Msg, vbInformation
         Else
            ' Display the path in a Message box or return
            ' the UNC through the function.
            MsgBox Left$(lpszRemoteName, cbRemoteName)
            GetUNCPath = Left$(lpszRemoteName, cbRemoteName)
         End If
      GetUNCPath_End:
         Exit Function
      GetUNCPath_Err:
         MsgBox Err.Description, vbInformation
         Resume GetUNCPath_End
      End Function

</PRE><P><LI>To test this function, type the following line in the Debug
   window, and then press ENTER. A simple message box appears
   containing the UNC path of the specified network drive letter.
<P>
<P><PRE>      ?GetUNCPath("h:")
</PRE><P>
   NOTE: This example assumes that you have a mapped network drive
   assigned to driver letter H.
<P>
   Some of the possible return values for the GetUNCPath function include
   ERROR_BAD_DEVICE, ERROR_CONNECTION_UNAVAIL, and ERROR_NOT_CONNECTED.
<P>
   Other run-time errors could be returned from the function and error
   trapping should be implemented.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about Declaring API Functions, search the Help Index
for "Declare Statement," or ask the Microsoft Access 97 Office Assistant.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: net connected network remote connection<BR>
Keywords          : kbprg PgmApi<BR>
Version           : 7.0 97<BR>
Platform          : WINDOWS<BR>
Hardware          : x86<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 28, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
