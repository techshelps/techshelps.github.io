

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>VBA: Invalid Page Fault with More Than 411 Controls in UserForm </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q177842">
<META NAME="KBModify" CONTENT="1998/02/27">
<META NAME="KBCreate" CONTENT="1997/12/09">
<META NAME="Keywords" CONTENT="kbcode kbprg OffVBA">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  When a UserForm has more than 411 controls and any controls added after the 411th are addressed directly by name in a Microsoft Visual Basic for Applications macro or procedure (for example, UserForm1.Label412), you receive one of the following err...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAB5,QA7O,QAOE,QAMN,QAPN,QBJQ,QAB4,QBVQ,QA5F,QAC2,QDL9,QBWO,QBWN,QAH4 P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>VBA: Invalid Page Fault with More Than 411 Controls in UserForm</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 27, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q177842</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic for Applications version 5.0
<LI>Microsoft Excel 97 for Windows
<LI>Microsoft Word 97 for Windows
<LI>Microsoft PowerPoint 97 for Windows
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When a UserForm has more than 411 controls and any controls added after the
411th are addressed directly by name in a Microsoft Visual Basic for
Applications macro or procedure (for example, UserForm1.Label412), you
receive one of the following error messages.
<P>
<P><h3>In Microsoft Windows 95</h3>
 
<P>
<PRE>   This program has performed an illegal operation and will be shut down.
   If the problem persists, contact the program vendor.

</PRE>If you click Details, you receive an error message similar to the
following:
<P>
<PRE>   EXCEL caused an invalid page fault in module &lt;unknown&gt; at 0000:00000000.

   -or-

   WINWORD caused an invalid page fault in module &lt;unknown&gt; at
   0000:00000000.

</PRE>In Microsoft Powerpoint, you receive the following error message:
<P>
<PRE>    PowerPoint found an error that it can't correct. You should save
    presentations, exit, and then restart PowerPoint.

</PRE><h3>In Microsoft Windows NT</h3>
 
<P>
<PRE>   Dr. Watson for Windows NT

   An Application error has occurred and an application log is being
   generated.

   EXCEL.exe
   Exception: Access violation (0xc0000005), Address: 0x00000000

  -or-

   WINWORD.exe
   Exception: Access violation (0xc0000005), Address: 0x00000000

</PRE><h2>CAUSE</h2>
 
<P>
This behavior occurs when the following conditions are true:

<UL><LI>More than 411 controls of any type are created on a UserForm.
<P>
<P><PRE>    -and-
</PRE>
<LI>Controls created after the 411th are addressed directly by name (such as
   UserForm1.Label412) in a Visual Basic macro or procedure.
<P>
</UL><h2>WORKAROUND</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>Controls beyond the 411th control must be addressed as a member of the
Controls collection instead of addressed by name directly. You can use one
of the following methods to work around the problem.
<P>
<P><h3>Method 1: Using a For Each...Next Statement</h3>
 
<P>
Refer to the desired control using the Controls collection and a For
Each...Next statement. The following sample Sub procedure demonstrates this
method:
<P>
<PRE>   Sub Change_Caption()
      For each myControl in UserForm1.Controls
         x = x + 1
         myControl.Caption = x
      Next
   End Sub

</PRE><h3>Method 2: Using the Item Method</h3>
 
<P>
Use the Item method with the index number as the following sample Visual
Basic statements demonstrate:
<P>
<PRE>   UserForm1.Controls.Item(411).Caption = "joe"

   -or-

   UserForm1.Controls(411).Caption = "joe"

   -or-

   UserForm1.Controls("Label411").Caption = "joe"

</PRE>NOTE: The index starts at 0.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in the products listed above.
We are researching this problem and will post new information here in the
Microsoft Knowledge Base as it becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Deleting a control with a TabIndex property number less than 411 allows the
next named control above the previous 410 to be addressed without error,
but the error then occurs on the control that becomes the 411th after the
deletion. Changing the TabOrder property or TabIndex property number of a
control does not change the behavior; the behavior seems to be entirely
determined by the order in which the controls were created.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For additional information about getting help with Visual Basic for
Applications, please see the following article in the Microsoft Knowledge
Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q163435.htm">Q163435</A></B>
   TITLE     : VBA: Programming Resources for Visual Basic for
               Applications
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: XL97 8.0 form custom dialog box vbe<BR>
Keywords          : kbcode kbprg OffVBA<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>
Issue type        : kbbug<BR>
Solution Type     : kbworkaround<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 27, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
