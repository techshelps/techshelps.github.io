

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OFF97: Can't Dimension Word as Application from Other Program </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q165926">
<META NAME="KBModify" CONTENT="1997/11/10">
<META NAME="KBCreate" CONTENT="1997/03/26">
<META NAME="Keywords" CONTENT="kbinterop kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  When you create a Visual Basic for Applications macro that calls Visual Basic for Applications commands for Word from another program, such as Microsoft Excel or Microsoft PowerPoint, you may receive the following error message:     Run-time error ...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAIH,QAPN,QBS0,QAW6,QAH4,QDO7,QAPF,QAB3,QBXS,QBVQ,QBVP,QAY2,QAFF,QAB4,QAJH P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>OFF97: Can't Dimension Word as Application from Other Program</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q165926</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic for Applications included with:
   - Microsoft Word 97 for Windows
   - Microsoft PowerPoint 97 for Windows
   - Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When you create a Visual Basic for Applications macro that calls Visual
Basic for Applications commands for Word from another program, such as
Microsoft Excel or Microsoft PowerPoint, you may receive the following
error message:
<P>
<PRE>   Run-time error '13': Type mismatch

</PRE><h2>CAUSE</h2>
 
<P>
This problem may occur when you dimension the Word Object variable as
Application.
<P>
For example, the following example Visual Basic for Applications macro
causes the error message:
<P>
<PRE>   Sub GetWordObject()
      ' Dimension oWord97 as an Application object.
      Dim oWord97 As Application
      ' Type mismatch error occurs at this line.
      Set oWord97 = GetObject(, "Word.Application")
   End Sub

</PRE><h2>WORKAROUND</h2>
 
<P>
Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft support engineers can help explain the
functionality of a particular macro, they will not modify these examples to
provide added functionality, nor will they help you construct macros to
meet your specific needs. If you have limited programming experience, you
may want to consult one of the Microsoft Solution Providers. Solution
Providers offer a wide range of fee-based services, including creating
custom macros. For more information about Microsoft Solution Providers,
call Microsoft Customer Information Service at (800) 426-9400.
<P>
To workaround this problem, use one of the following methods.
<P>
<P><h3>Method 1: Dimension the Word Object Variable as Object</h3>
 
<P>
You can dimension the Word Object variable as an Object type. For example,
use the following macro:
<P>
<PRE>   Sub GetWordObject()
      ' Dimension oWord97 as Object.
      Dim oWord97 As Object
      Set oWord97 = GetObject(, "Word.Application")
      Set oWord97 = Nothing
   End Sub

</PRE><h3>Method 2: Add the Word 8.0 Object Library Reference</h3>
 
<P>
You can add a reference to the Word 8.0 Object Library and use one of the
following examples to call the Visual Basic for Applications commands for
Word.
<P>
Sample Macro That Creates a New Instance of Word:
<P>
The following sample macro uses the New keyword to create a new instance of
Word, adds a new document, inserts text, saves the document, and then quits
the new instance of Word:
<P>
<PRE>   Sub CreateNewWordObject()
      ' Dimension oWord97 as Word.Application object.
      Dim oWord97 As New Word.Application
      ' Add a new document.
      oWord97.Documents.Add
      oWord97.Selection.Text = "This is a test."
      oWord97.ActiveDocument.SaveAs ("ExcelTest")
      ' Quit the Word instance.
      oWord97.Quit
      ' Free the object reference from memory.
      Set oWord97 = Nothing
   End Sub

</PRE>NOTE: You must use the Quit method before the macro is finished or the Word
instance remains in memory. Setting the object reference equal to Nothing
does not remove the instance of Word from memory. However, setting the
Object reference equal to Nothing frees the referenced object from memory.
Microsoft recommends that you use both statements together to clear memory
when the macro is finished.
<P>
Sample Macro That Uses the Existing Instance of Word:
<P>
If Word is already running and you want to use the existing instance of
Word, use the following sample macro:
<P>
<PRE>   Sub GetWordObject()
      ' Dimension oWord97 as a Word.Application object.
      Dim oWord97 As Word.Application
      ' Set the Object reference.
      Set oWord97 = GetObject(, "Word.Application")
      ' Add a new document.
      oWord97.Documents.Add
      oWord97.Selection.Text = "This is a test."
      oWord97.ActiveDocument.SaveAs ("ExcelTest")
      ' Free the object reference from memory.
      Set oWord97 = Nothing
   End Sub

</PRE>To add the Word 8.0 Object Library from Microsoft Excel, Microsoft
PowerPoint, or Microsoft Access, use the following steps:

<OL><P><LI>On the Tools menu, click References to display the References dialog
   box.
<P>
   The References dialog box displays all object libraries and projects
   that are registered with the operating system.

<P><LI>Scroll down to see the Word 8.0 Object Library reference.
<P>
   References with check boxes that are selected are used by the project;
   items with check boxes that are cleared are not used. However, you can
   add the references.

<P><LI>Click the Word 8.0 Object Library reference in the Available References
   box and click OK.
<P>
</OL><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in the Microsoft products
listed at the beginning of this article. We are researching this
problem and will post new information here in the Microsoft Knowledge
Base as it becomes available.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: word8 word97 kbwordvba xlvbainfo 8.00 8.0 vb vba vbe<BR>
Keywords          : kbinterop kbprg<BR>
Version           : 97<BR>
Platform          : WINDOWS<BR>
Issue type        : kbbug<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
