

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: Macro to Extract Data from a Chart </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q137016">
<META NAME="KBModify" CONTENT="1998/02/03">
<META NAME="KBCreate" CONTENT="1995/09/19">
<META NAME="Keywords" CONTENT="kbcode kbprg xlchart PgmHowto">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel, you can retrieve data from a chart even when the data is in an external worksheet or workbook. This is useful in situations where the chart was created from, or linked to, another file that is unavailable or has been damaged in ...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QALX,QAM9,QAH4,QBE7,QBE6,QAY2,QDNX,QDNM,QAKD,QA3P,QAYY,QAQG,QAVZ,QAKC P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: Macro to Extract Data from a Chart</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 3, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q137016</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, versions 5.0, 5.0c
<LI>Microsoft Excel for the Macintosh, versions 5.0, 5.0a
<LI>Microsoft Excel 98 Macintosh Edition
<LI>Microsoft Excel for Windows 95, version 7.0
<LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Excel, you can retrieve data from a chart even when the data
is in an external worksheet or workbook. This is useful in situations where
the chart was created from, or linked to, another file that is unavailable
or has been damaged in some way. When the source data to a chart is lost,
the data can still be retrieved from the chart itself using a Microsoft 
Visual Basic for Applications macro.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>The following sample macros will place the chart's source data in a
worksheet called "ChartData" in the active workbook beginning in the first
column and first row.
<P>
<P><h3>Excel 97 for Windows and Excel 98 Macintosh Edition</h3>
 

<OL><P><LI>Enter the following macro code in a module sheet:
<P>
<PRE>      Sub GetChartVaules97()
         Dim NumberOfRows As Integer
         Dim X As Object
         Counter = 2

         ' Calculate the number of rows of data.
         NumberOfRows = UBound(ActiveChart.SeriesCollection(1).Values)

         Worksheets("ChartData").Cells(1, 1) = "X Values"

         ' Write x-axis values to worksheet.
         With Worksheets("ChartData")
            .Range(.Cells(2, 1), _
            .Cells(NumberOfRows + 1, 1)) = _  
            Application.Transpose(ActiveChart.SeriesCollection(1).XValues)
         End With

         ' Loop through all series in the chart and write their values to       
         ' the worksheet.
         For Each X In ActiveChart.SeriesCollection
            Worksheets("ChartData").Cells(1, Counter) = X.Name

            With Worksheets("ChartData")
               .Range(.Cells(2, Counter), _
               .Cells(NumberOfRows + 1, Counter)) = _
               Application.Transpose(X.Values)
            End With

            Counter = Counter + 1
         Next

      End Sub

</PRE><P><LI>Insert a new worksheet into your workbook and rename it to "ChartData"
   (without the quotation marks).

<P><LI>Select the chart from which you want to extract the underlying data
   values.
<P>
   NOTE: The chart can either be embedded on a worksheet or on a separate
   chart sheet.

<P><LI>Run the GetChartVaules97 macro.
<P>
   The data from the chart will be placed in the "ChartData" worksheet.
<P>
</OL><h3>Microsoft Excel version 5.0 or 7.0</h3>
 

<OL><P><LI>Enter the following macro code in a module sheet:
<P>
<PRE>      Sub GetChartVaules()
         Dim NumberOfRows As Integer
         Dim X As Object
         Counter = 2

         ' Calculate the number of rows of data.
         NumberOfRows = UBound(ActiveChart.SeriesCollection(1).Values)

         Worksheets("ChartData").Cells(1, 1) = "X Values"

         ' Write x-axis values to worksheet.
         With Worksheets("ChartData")
            .Range(.Cells(2, 1), .Cells(NumberOfRows + 1, 1)) _
            = ActiveChart.SeriesCollection(1).XValues
         End With

         ' Loop through all series in the chart and write their values to 
         ' the worksheet.
         For Each X In ActiveChart.SeriesCollection
            Worksheets("ChartData").Cells(1, Counter) = X.Name

            With Worksheets("ChartData")
             .Range(.Cells(2, Counter), _
             .Cells(NumberOfRows + 1, Counter)) = X.Values
            End With

            Counter = Counter + 1
         Next

      End Sub

</PRE><P><LI>Insert a new worksheet into your workbook and rename it to "ChartData"
   (without the quotation marks).

<P><LI>Select or activate the chart from which you want to extract the
   underlying data values.
<P>
   NOTE: The chart can either be embedded on a worksheet or on a separate
   chart sheet.

<P><LI>Run the GetChartVaules macro.
<P>
   The data from the chart will be placed in the "ChartData" worksheet.
<P>
</OL>For additional information about the Xvalues property and referencing the
values returned, please see the following article in the Microsoft
Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../EXCEL/Q139401.htm">Q139401</A></B>
   TITLE     : XL: "Subscript Out of Range" Error When XValues Referenced
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 5.00 7.00 8.00 link unlink recover corrupt damage<BR>
Keywords          : kbcode kbprg xlchart PgmHowto<BR>
Version           : WINDOWS: 5.0, 5.0c, 7.0, 97; MACINTOSH: 5.0, 5.0a, 98<BR>
Platform          : MACINTOSH WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 3, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
