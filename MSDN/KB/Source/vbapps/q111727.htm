

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: Order Data Is Entered Changes Results of STDEV() Function </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q111727">
<META NAME="KBModify" CONTENT="1997/09/02">
<META NAME="KBCreate" CONTENT="1994/02/16">
<META NAME="Keywords" CONTENT="kbprg PgmOthr">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel, the results you get when you use the STDEV() function may vary depending on the order in which you enter the values. This behavior is incorrect: the results of this function should not depend on the order in which you enter the ...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA70,QBS0,QAY5,QBVP,QAB9,QBV8,QAK2,QAHH,QAUD,QAH4,QAE5,QAYY,QAKC,QAL3,QAKD V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: Order Data Is Entered Changes Results of STDEV() Function</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 2, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q111727</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, version 5.0
<LI>Microsoft Excel for Windows 95, version 7.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
In Microsoft Excel, the results you get when you use the STDEV() function
may vary depending on the order in which you enter the values. This
behavior is incorrect: the results of this function should not depend on
the order in which you enter the values.
<P>
<P><h2>CAUSE</h2>
 
<P>
The process used to calculate the standard deviation involves the
subtraction of two values that may be very similar to each other. The
numbers may be calculated incorrectly because the two numbers may be
rounded incorrectly. This incorrect rounding occurs because of the way a
computer stores and manipulates numbers.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
To work around this problem, round the data when you calculate the
standard deviation.
<P>
The following is a sample Visual Basic function that you can use to round
the data as you calculate the standard deviation.
<P>
Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft support engineers can help explain the
functionality of a particular macro, they will not modify these examples to
provide added functionality, nor will they help you construct macros to
meet your specific needs. If you have limited programming experience, you
may want to consult one of the Microsoft Solution Providers. Solution
Providers offer a wide range of fee-based services, including creating
custom macros. For more information about Microsoft Solution Providers,
call Microsoft Customer Information Service at (800) 426-9400.
<P>
<P><h3>Visual Basic Example</h3>
 

<OL><P><LI>In a new Visual Basic module, enter the following macro code:
<P>
<PRE>   'Rounded_Stdev function to calculate the rounded standard deviation

   ' Define the Rounded_StDev function with a data type of Double.
   ' This data type is consistent with type that Microsoft Excel uses.

   Function Rounded_Stdev(x_values As Variant) As Double

     'Dimension memory for variables
     Dim n As Integer
     Dim sum_of_x As Double, sum_of_x_squared As Double

     'Initialize variables before For Each loop
     sum_of_x = 0
     sum_of_x_squared = 0

     'calculates count of x_values
     n = x_values.Count

     For Each cell In x_values
        sum_of_x = sum_of_x + cell.Value
        sum_of_x_squared = sum_of_x_squared + cell.Value ^ 2
     Next

     'Perform math necessary to calculate standard deviation.
     Rounded_Stdev = n * sum_of_x_squared - sum_of_x ^ 2

     'Round at this step to remove any possible mathematical discrepancies.
     Rounded_Stdev = Application.Round(Rounded_Stdev, 14)

     'Continue to perform math necessary to calculate standard deviation.
     Rounded_Stdev = Rounded_Stdev / (n * (n - 1))
     Rounded_Stdev = Rounded_Stdev ^ 0.5

   End Function

</PRE><P><LI>Select a cell in the worksheet on which you want the results of the
   STDEV() function to appear, and choose the Function Wizard button.

<P><LI>In the Function Wizard dialog box, under Function Category, select the
   User Defined category. Under function name, select Rounded_Stdev, and
   then choose the Next button.

<P><LI>In the Function Wizard--Step 2 of 2 dialog box, in the x_values box,
   enter the range that contains the values for which you want to calculate
   the standard deviation (you can enter these values by selecting them in
   the worksheet).

<P><LI>Choose the Finish button.
<P>
</OL><h2>MORE INFORMATION</h2>
 
<P>
For more information about Data Types, choose the Search button in Visual
Basic Help, and type the following:
<P>
<PRE>   data types
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 5.00 7.00<BR>
Keywords          : kbprg PgmOthr<BR>
Version           : 5.00 7.00<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 2, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
