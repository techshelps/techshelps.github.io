

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Null Character Truncates String in Visual Basic </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q112772">
<META NAME="KBModify" CONTENT="1997/06/05">
<META NAME="KBCreate" CONTENT="1994/03/20">
<META NAME="Keywords" CONTENT="kbcode kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In a Visual Basic procedure, if you use a string that contains the null value in either the SendKeys statement, the MsgBox function, or the Format function, the string is truncated at the null character.  NOTE: This situation is true for both the M...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAB9,QATX,QAVX,QAVW,QAY5,QA5F,QAMA,QBVV,QAI4,QBVP,QAH6,QAH4,QAFF,QDNG V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Null Character Truncates String in Visual Basic</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 5, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q112772</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00
WINDOWS
kbprg kbcode
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Programming System, Applications Edition,
   version 1.0
<LI>Microsoft Excel for Windows, version 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In a Visual Basic procedure, if you use a string that contains the null
value in either the SendKeys statement, the MsgBox function, or the Format
function, the string is truncated at the null character.
<P>
NOTE: This situation is true for both the Microsoft Excel 5.0 for Windows
SendKeys statement (using Application.SendKeys) and the Visual Basic,
Applications Edition, SendKeys (using just SendKeys) statement.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The SendKeys statement sends keystrokes to the active windows as if they
were typed on the keyboard. Attempting to send a null character causes the
string being sent to be truncated at the location of the null character.
<P>
You can use the MsgBox function to display a string expression as a
message. However, if you use a string expression that contains the null
character in the MsgBox function, the characters in the string after the
null character do not display in the message box.
<P>
The Format function allows you to return an expression such as a string in
a named or user-defined format. If you use the Format function in the Debug
window to format a string expression that contains the null character, and
if the null character is the first character in the string, the value 0 is
returned.
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 
<P>
The following Visual Basic procedure uses the SendKeys statement to send
the word "Testing" to the active window:
<P>
<PRE>   Sub Testing()
      SendKeys "Testing"
   End Sub

</PRE>If you add a null character before the word Testing, the word "Testing" is
not sent to the active window. In the following procedure, the keystrokes
are not sent to the active window.
<P>
<PRE>   Sub Testing()
      SendKeys Chr(0) + "Testing"
   End Sub

</PRE>If a null character is placed between two (or more) concatenated strings,
the string is truncated at the null character. In the following example,
the word "Testing" is sent to the active window, but the string "One, Two,
Three" is not.
<P>
<PRE>   Sub Testing()
      SendKeys "Testing" + Chr(0)+ "One, Two, Three"
   End Sub

</PRE>Microsoft provides examples of Visual Basic procedures for illustration
only, without warranty either expressed or implied, including but not
limited to the implied warranties of merchantability and/or fitness for a
particular purpose. This Visual Basic procedure is provided 'as is' and
Microsoft does not guarantee that it can be used in all situations.
Microsoft does not support modifications of this procedure to suit customer
requirements for a particular purpose. Note that a line that is preceded by
an apostrophe introduces a comment in the code--comments are provided to
explain what the code is doing at a particular point in the procedure. Note
also that an underscore character (_) indicates that code continues from
one line to the next. You can type lines that contain this character as one
logical line or you can divide the lines of code and include the line-
continuation character. For more information about Visual Basic for
Applications programming style, see the "Programming Style in This Manual"
section in the "Document Conventions" section of the "Visual Basic User's
Guide."
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about the Format Function, choose the Search button in
the Visual Basic Reference and type:
<P>
<PRE>   Format

</PRE>For more information about the Chr Function, choose the Search button in
the Visual Basic Reference and type:
<P>
<PRE>    Chr
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 5.00 Nul Chr$ vbappcode empty<BR>
Keywords            : kbcode kbprg<BR>
Version             : 1.00<BR>
Platform            : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 5, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
