

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC97: How to Create Shortcuts from a Field of Hyperlinks </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q181231">
<META NAME="KBModify" CONTENT="1998/02/17">
<META NAME="KBCreate" CONTENT="1998/02/17">
<META NAME="Keywords" CONTENT="kbdta IntLink PgmHowto">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multi-user skills.  This article demonstrates sample Visual Basic for Applications code that creates Internet shortcuts from a Microsoft Access 97 table containing a hyperlink field with one o...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAE2,QBWR,QAUJ,QAAP,QAB4,QAFI,QAVZ,QATX,QA5V,QA1S,QA7O,QBXS,QA7N,QBS0,QDN9 P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC97: How to Create Shortcuts from a Field of Hyperlinks</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 17, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q181231</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multi-user skills.
<P>
This article demonstrates sample Visual Basic for Applications code that
creates Internet shortcuts from a Microsoft Access 97 table containing a
hyperlink field with one or many records. The shortcuts are then placed in
a folder on your hard disk.
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to the "Building
Applications with Microsoft Access 97" manual.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>To create a directory of Internet shortcuts from a field of hyperlinks,
follow these steps:
<P>
<PRE>  1. In Windows Explorer, create the following folder:

       C:\MyShortcuts

  2. Start Microsoft Access 97, open a database and create the following
     table:

       Table: tblHyperlinks
       -----------------------
       Field Name: fldLink
          Data Type: Hyperlink

  3. Save the table as tblHyperlinks. When prompted to create a primary
     key, click Yes.

  4. Switch to Datasheet View and type a valid Internet address into the
     fldLink field of the first record.

  5. Right-click the address, point to Hyperlink, and type a descriptive
     name in the Display Text box. Although the displaytext portion of the
     Hyperlink data type is optional, you can hide the URL address and
     display a more user-friendly name for the hyperlink if you specify
     display text.

  6. Repeat steps 4 and 5 until you have added several records with
     different Internet addresses.

  7. Create a new module and type or paste the following code:

       Sub ProcessHyperlinkTable(strTableName As String, _
          strFieldName As String)

          ' Declare variables.
          Dim DBS As Database
          Dim RST As Recordset
          Dim strSQL As String
          Dim strAddress As String
          Dim strDisplayText As String
          Dim strDirectoryPath As String
          Dim varLink As Variant

          ' Set error trapping.
          On Error GoTo Error_handler

          ' Assign the current database to the database variable.
          Set DBS = CurrentDb

          ' Set the path to the existing directory
          ' where the shortcuts will be created.
          ' Note: the path should end with a backslash ("\").
          strDirectoryPath = "c:\MyShortcuts\"

          ' Set the SQL string to return the field
          ' containing the hyperlinks from the
          ' table you have specified.
          strSQL = "SELECT " &amp; strFieldName _
             &amp; " FROM " &amp; strTableName

          ' Open the Recordset.
          Set RST = DBS.OpenRecordset(strSQL)

          ' Move to the first record.
          RST.MoveFirst

          ' Loop until reaching the end of the table.
          Do Until RST.EOF
             ' Check to see if the HomePage field contains a link.
             If Not IsNull(RST!fldLink) Then

                ' Set varLink equal to the current Hypertext link field.
                varLink = RST!fldLink

                ' Pull the Address from varLink.
                strAddress = HyperlinkPart(varLink, acAddress)

                ' Pull the display text, if any, from varLink.
                strDisplayText = HyperlinkPart(varLink, acDisplayText)

                ' If there is no display text, set strDisplayText to
                ' be the same as the URL.
                If strDisplayText = "" Then

                   ' If strAddress starts with "Http://",
                   ' or "Ftp://", leave that out of strDisplayText.
                   If Left(strAddress, 7) = "Http://" Or _
                      Left(strAddress, 6) = "Ftp://" Then

                         strDisplayText = Right(strAddress, _
                            Len(strAddress) _
                            - (InStr(1, strAddress, "/") + 1))
                   Else
                   ' Otherwise, simply set strDisplayText
                   ' equal to strAddress.
                      strDisplayText = strAddress
                   End If

                End If

                ' Pass the URL, the link name, and the directory path to
                ' the function.
                Create_Hyperlink_Shortcut strAddress, strDisplayText, _
                   strDirectoryPath

             End If

             ' Move to the next record.
             RST.MoveNext

          Loop

       ' Error handling section

       ProcessHyperlinkTable_Exit:

          DBS.Close

          ' Exit the Procedure.
          Exit Sub

       Error_handler:
          MsgBox Err.Description
          Resume ProcessHyperlinkTable_Exit

       End Sub

       Function Create_Hyperlink_Shortcut(strAddress As String, _
          LinkFileName As String, LinkFilePath As String)

          ' Declare output file variable.
          Dim fileNum As Integer
          ' Declare counter variable.
          Dim i As Integer

          ' Set error trapping.
          On Error GoTo Error_handler

          ' Set fileNum to the next available file number.
          fileNum = FreeFile

          ' Create the new shortcut file.
          Open LinkFilePath &amp; LinkFileName &amp; ".url" For Output _
             As #fileNum
          Print #fileNum, "[InternetShortcut]"
          Print #fileNum, "URL=" &amp; strAddress
          Close #fileNum

          ' Exit the function when done.
          Exit Function

          ' Error handling section
       Error_handler:

          ' Trap for errors caused by a bad file name
          ' and prompt the user to correct it.
          Select Case Err
             ' "Bad file name or number" error caused by
             ' invalid characters in file name.
             Case 52
                LinkFileName = InputBox("Cannot create file for " _
                   &amp; strAddress &amp; Chr(13) _
                   &amp; "The Internet Shortcut Name shown below is invalid." _
                   &amp; Chr(13) &amp; Chr(13) _
                   &amp; "It contains one or more of the following: " _
                   &amp; "\ / : * ? " &amp; """" &amp; " &lt; &gt; |" &amp; Chr(13) &amp; Chr(13) _
                   &amp; Chr(13) &amp; "Please enter a valid Shortcut name.", _
                   "Invalid Shortcut Name", LinkFileName)

             ' "Path not found" error caused by slashes
             ' in the file name.
             Case 76
                LinkFileName = InputBox("Cannot create file for " _
                   &amp; strAddress &amp; Chr(13) &amp; Chr(13) _
                   &amp; "The shortcut name shown below is invalid. " _
                   &amp; "It may contain one or more slashes." _
                   &amp; Chr(13) &amp; Chr(13) _
                   &amp; "Please remove any slashes from the Shortcut name.", _
                   "Path not found", LinkFileName)

             ' If it is any other error, exit the function
             ' without creating the shortcut file.
             Case Else
                MsgBox "Error Number: " &amp; Err &amp; " while attempting to " _
                   &amp; "create" &amp; "shortcut for " &amp; strAddress
                Exit Function
          End Select

          ' If the user entered a blank shortcut name in the error dialog,
          ' prompt for a correct one, allowing for three tries.
          For i = 1 To 3
             If Len(LinkFileName) = 0 Then
                LinkFileName = InputBox("Cannot create file for " _
                   &amp; strAddress &amp; Chr(13) _
                   &amp; "The Internet Shortcut Name is blank" _
                   &amp; Chr(13) &amp; Chr(13) _
                   &amp; "Please enter a valid Shortcut name.", _
                   "Invalid Shortcut Name", LinkFileName)
             End If
          Next i

          ' If the user has still left the name blank, let the user know
          ' the shortcut will not be created and then exit the function.
          If Len(LinkFileName) = 0 Then
             MsgBox ("A shortcut will not be created for " _
                &amp; strAddress &amp; ".")
             Exit Function
          End If

          ' Resume at the line that generated the error.
          Resume

       End Function

  8. On the Debug menu, click "Compile and Save All Modules".

  9. Save the Module as HyperlinkCode.

 10. To test the code, type the following line in the Debug window,
     and then press ENTER:

       ProcessHyperLinkTable "tblHyperlinks", "fldLink"

 11. Check the C:\MyShortcuts folder and notice the new Internet shortcuts.

 12. Double-click any Internet shortcut to run your browser and move
     to the respective URL.

</PRE><h2>REFERENCES</h2>
 
<P>
For more information about the parts of a Hyperlink field, search the Help
Index for "hyperlinks, returning hyperlink information" or "hyperlinks,
addresses" and then choose the "About hyperlink addresses in hyperlink
fields and controls."
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: inf favorites browser<BR>
Keywords          : kbdta IntLink PgmHowto<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>
Hardware          : x86<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 17, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
