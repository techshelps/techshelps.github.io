

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WD97: Grouped Floating Option Buttons Not Mutually Exclusive </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q168851">
<META NAME="KBModify" CONTENT="1997/08/27">
<META NAME="KBCreate" CONTENT="1997/05/21">
<META NAME="Keywords" CONTENT="kbcode kbmacro kbprg kbtool PgmColl PgmHowTo kbmacroexample">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  When you group a series of ActiveX option buttons on a Microsoft Word document by setting the group name for each ActiveX option button to the same name, changing the value of one ActiveX option button within the group to TRUE does not toggle the v...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAHP,QABO,QBM8,QAPN,QBS0,QBVV,QAH4,QAHV P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>WD97: Grouped Floating Option Buttons Not Mutually Exclusive</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 27, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q168851</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Word 97 for Windows
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When you group a series of ActiveX option buttons on a Microsoft Word
document by setting the group name for each ActiveX option button to the
same name, changing the value of one ActiveX option button within the group
to TRUE does not toggle the values of the other ActiveX option buttons
within the same group to FALSE.
<P>
<P><h2>CAUSE</h2>
 
<P>
By Design, ActiveX option buttons, when inserted from the Control Toolbox,
are inserted as floating objects. Option buttons inserted as floating
objects are not mutually exclusive, even when their GroupName property is
identical.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
To work around this problem, use one of the following methods.
<P>
<P><h3>Method 1: Convert the ActiveX Option Buttons to Inline Objects</h3>
 
<P>
Converting the ActiveX option buttons to inline objects will allow you to
toggle the values of grouped option buttons.
<P>
To convert the ActiveX option buttons to inline objects:

<OL><P><LI>If the Control Toolbox is not visible, on the View menu, point to
   Toolbars, and click Control Toolbox.

<P><LI>On the Control Toolbox, click Design Mode.

<P><LI>Select an option button to convert to inline.

<P><LI>Right-click the option button to display the option button shortcut
   menu.

<P><LI>On the option button shortcut menu, point to OptionButton Object and
   click Convert.

<P><LI>On the Convert dialog box, clear the Float Over Text check box.

<P><LI>Click OK.

<P><LI>Repeat steps 3-7 for each option button you want to group.
<P>
</OL>To group the option buttons:

<OL><P><LI>Select an option button to group.

<P><LI>On the Control Toolbox, click Properties.

<P><LI>In the GroupName property text box, type a unique group name for each
   option button within the same grouping.
<P>
   For example, if you have inserted four option buttons onto a document
   and you want to have two separate groups consisting of
<P>
<P><PRE>      Group1: Option Buttons 1 and 2
      Group2: Option Buttons 3 and 4
</PRE><P>
   Type "Group1" (without the quotation marks), as the GroupName value for
   option buttons 1 and 2.
<P>
   Type "Group2" (without the quotation marks) as the GroupName value for
   option buttons 3 and 4.

<P><LI>Repeat steps 1-3 for each option button within similar groupings.
<P>
</OL><h3>Method 2: Use the Following Macro Examples to Toggle the Values</h3>
 
<P>
Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft support engineers can help explain the
functionality of a particular macro, they will not modify these examples to
provide added functionality, nor will they help you construct macros to
meet your specific needs. If you have limited programming experience, you
may want to consult one of the Microsoft Solution Providers. Solution
Providers offer a wide range of fee-based services, including creating
custom macros. For more information about Microsoft Solution Providers,
call Microsoft Customer Information Service at (800) 426-9400.
<P>
The following sample Visual Basic for Applications macro will allow you
to keep the option button float over text status and toggle the values
based on groupings.
<P>
Before running the macro examples, group the option buttons as detailed in
the steps "To group the option buttons" described earlier in this article.
<P>
Place the following procedure in the General Declarations section of the
Normal project.
<P>
<PRE>   Public Sub SetOptionGroupValues(sName As Object)
      Dim sGroup As String
      Dim oShape As Shapes
      Set oShape = ActiveDocument.Shapes
      For i = 1 To oShape.Count
         ' If the Shape is an Option Button.
         If oShape(i).OLEFormat.ClassType = "Forms.OptionButton.1" Then
            ' If the Option Button in the collection
            ' is NOT the selected option button.
            If oShape(i).OLEFormat.Object.name &lt;&gt; sName.name Then
               ' If the option button is in the defined group.
               If oShape(i).OLEFormat.Object.GroupName = _
               sName.GroupName Then
                  ' Make it's value false.
                  oShape(i).OLEFormat.Object.Value = False
               End If
            End If
         End If
      Next
   End Sub

</PRE></OL>For each option button in your group, place the following example code that
calls the SetOptionGroupValues sub-routine within each option button's
GotFocus event procedure.
<P>
<PRE>   SetOptionGroupValues &lt;OptionButtonName&gt;

</PRE>The argument, &lt;OptionButtonName&gt; must match the name of the option button.
<P>
For example,
<P>
<PRE>   Private Sub OptionButton1_GotFocus()
      SetOptionGroupValues OptionButton1
   End Sub

   Private Sub OptionButton2_GotFocus()
      SetOptionGroupValues OptionButton2
   End Sub

</PRE>To view the GotFocus event procedure for an option button:

<OL><P><LI>In design mode, double-click an option button.

<P><LI>In the Visual Basic for Applications Editor Code window, select GotFocus
   from the Procedures box.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: word97 word8 8.0 8.0 vb vbe vba<BR>
Keywords          : kbcode kbmacro kbprg kbtool PgmColl PgmHowTo kbmacroexample<BR>
Version           : 97<BR>
Platform          : WINDOWS<BR>
Issue type        : kbhowto<BR>
Solution Type     : kbworkaround<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 27, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
