

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL97: "Run-time error '4599'" Running DDE Macro to Control Excel </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q176265">
<META NAME="KBModify" CONTENT="1998/02/27">
<META NAME="KBCreate" CONTENT="1997/11/05">
<META NAME="Keywords" CONTENT="kbinterop xlwin offinterop xl97vbmigrate AutoGnrl">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  When you use dynamic data exchange (DDE) to control Microsoft Excel from another program, you will see the following error message when you try to rename a sheet in a workbook:     Run-time error '4599': Process failed in other application  When yo...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QBS0,QAH4,QBJZ,QBWS,QAZ2,QAIH,QAOE,QAB4,QAHT,QAJH,QA5F,QAB5,QAKE,QAMN P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL97: "Run-time error '4599'" Running DDE Macro to Control Excel</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 27, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q176265</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When you use dynamic data exchange (DDE) to control Microsoft Excel from
another program, you will see the following error message when you try to
rename a sheet in a workbook:
<P>
<PRE>   Run-time error '4599': Process failed in other application

</PRE>When you activate Microsoft Excel after the error, the sheet tab is
selected as if you are ready to change it.
<P>
<P><h2>CAUSE</h2>
 
<P>
This error occurs when you are trying to rename a sheet by using the
DDEExecute method with Workbook.Name() as the command in a Microsoft Visual
Basic for Applications procedure or macro from another program.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>If the application supports Automation, it is recommended that you use
Automation to control Microsoft Excel instead of DDE. For more information
about controlling programs through Automation, click the Office Assistant,
type "Automation," click Search, and then click to view "Controlling one
Microsoft Office application from another."
<P>
NOTE: If the Assistant is hidden, click the Office Assistant button on the
Standard toolbar. If Microsoft Excel or Visual Basic Help are not installed
on your computer, please see the following article in the Microsoft
Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../OFFICE/Q120802.htm">Q120802</A></B>
   TITLE     : Office: How to Add/Remove a Single Office
               Program or Component

</PRE>To work around this behavior using DDE, write a Visual Basic procedure or
macro in Microsoft Excel to rename the sheet and have the DDE procedure run
the Microsoft Excel procedure or macro to change the sheet name.
<P>
The following example uses Microsoft Word 97 as the program that contains
the DDE macro that controls Microsoft Excel. It assumes that you are
initiating a DDE channel to an existing workbook ("Book1.xls") and you are
changing "Sheet1" to "New."

<OL><P><LI>Start Microsoft Excel.

<P><LI>Save the new workbook as Book1.xls.
<P>
    Make sure that a sheet named Sheet1 exists.

<P><LI>Press ALT+F11 to start the Visual Basic Editor.

<P><LI>On the Insert menu, click Module.

<P><LI>Type the following code in the new module sheet:
<P>
<PRE>       Sub Change_Name()
          Sheets("Sheet1").Name = "New"
       End Sub

</PRE><P><LI>On the File menu, click "Close and Return to Microsoft Excel."

<P><LI>On the File menu, click Save. (Do not close Book1.xls.)

<P><LI>Leaving Microsoft Excel open, start Microsoft Word.

<P><LI>Repeat steps 3-4.

<P><LI>Type the following code in the new module sheet:
<P>
<PRE>       Sub DDE_to_XL()

          ' Opens a DDE channel to Book1.xls in Microsoft Excel.
          Chan = DDEInitiate(App:="Excel", Topic:="book1.xls")

          ' Sends a DDE command to Microsoft Excel to run the
          ' Change_Name macro.
          DDEExecute Channel:=Chan, Command:="[Run(" &amp; Chr(34) &amp; _
             "Change_Name" &amp; Chr(34) &amp; ")]"

          ' Closes the DDE channel to Book1.xls in Microsoft Excel.
          DDETerminate Channel:=Chan

       End Sub

</PRE><P><LI>On the File menu, click "Close and Return to Microsoft Word."

<P><LI>On the Tools menu, point to Macro, and then click Macros. In the Macros
    dialog box, click "DDE_to_XL," and then click Run.
<P>
    After the macro executes, "Sheet1" should be changed to "New" in the
    workbook.
<P>
</OL><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in Microsoft Excel 97 for
Windows. We are researching this problem and will post new information here
in the Microsoft Knowledge Base as it becomes available.
<P>
<P><h2>REFERENCES</h2>
 
<P>
"Visual Basic User's Guide," version 5.0, Chapter 10, "Controlling and
Communicating with Other Applications"
<P>
"Microsoft Excel/Visual Basic Programmer's Guide," version 7.0, Chapter 10,
"Communicating with Other Applications"
<P>
For additional information about getting help with Visual Basic for
Applications, please see the following article in the Microsoft Knowledge
Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q163435.htm">Q163435</A></B>
   TITLE     : VBA: Programming Resources for Visual Basic for
               Applications
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: XL97 kbmacro<BR>
Keywords          : kbinterop xlwin offinterop xl97vbmigrate AutoGnrl<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>
Issue type        : kbbug<BR>
Solution Type     : kbworkaround<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 27, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
