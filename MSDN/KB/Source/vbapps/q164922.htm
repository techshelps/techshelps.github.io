

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Fill the Microsoft Visual Basic 5.0 FlexGrid Control </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q164922">
<META NAME="KBModify" CONTENT="1997/08/28">
<META NAME="KBCreate" CONTENT="1997/03/10">
<META NAME="Keywords" CONTENT="kbprg PgmCtrlsStd PgmHowTo">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  This article includes a Visual Basic for Applications example macro that fills the Microsoft Visual Basic version 5.0 FlexGrid control with values from an external database using the DAO 3.5 Object Library reference.  MORE INFORMATION  Microsoft pr...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QA7O,QAZV,QA7N,QAH4,QAPF,QBCF,QBXS,QBHQ,QAKD,QAKC,QAB3,QA5F,QAW6,QAPN P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Fill the Microsoft Visual Basic 5.0 FlexGrid Control</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 28, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q164922</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic for Applications included with:
   - Microsoft Word 97 for Windows
   - Microsoft PowerPoint 97 for Windows
   - Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article includes a Visual Basic for Applications example macro that
fills the Microsoft Visual Basic version 5.0 FlexGrid control with values
from an external database using the DAO 3.5 Object Library reference.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides examples of Visual Basic for Applications procedures
for illustration only, without warranty either expressed or implied,
including, but not limited to the implied warranties of merchantability
and/or fitness for a particular purpose. The Visual Basic procedures in
this article are provided 'as is' and Microsoft does not guarantee that
they can be used in all situations. While Microsoft support engineers can
help explain the functionality of a particular macro, they will not modify
these examples to provide added functionality, nor will they help you
construct macros to meet your specific needs. If you have limited
programming experience, you may want to consult one of the Microsoft
Solution Providers. Solution Providers offer a wide range of fee-based
services, including creating custom macros. For more information about
Microsoft Solution Providers, call Microsoft Customer Information Service
at (800) 426-9400.
<P>
This Visual Basic for Applications example uses three routines for future
expansion and portability. To use the procedures, place them in the
UserForm module. These procedures are as follows:

<UL><LI>The UserForm Initialize procedure sets the database values to use, such
   as the database path and name values, and sets the table and field
   values in the selected table.

<LI>The DBConnect procedure makes the actual connections to the database,
   table, and fields that you want to use.

<LI>The PopulateGridControl procedure populates the FlexGrid control.
<P>
</UL><h3>Referencing the DAO 3.5 Object Library</h3>
 
<P>
For this example to work, you must add the DAO 3.5 Object Library
reference.
<P>
To add the DAO 3.5 Object Library reference, use the following steps:

<OL><P><LI>In the Visual Basic Editor, click References on the Tools menu to
   display the References dialog box.
<P>
   The References dialog box displays all object libraries and projects
   that are registered with the operating system.

<P><LI>Scroll through the list for the library you want to reference. If the
   application is not listed, click Browse to search for object library
   (.olb and .tlb) files or executable (.exe and .dll) files. References
   with check boxes that are selected are used by the project; references
   with check boxes that aren't selected are not used.

<P><LI>Click to select the check box for the reference in the Available
   References list and click OK.
<P>
</OL><h3>Typing the Code in the UserForm</h3>
 
<P>
Type the following code in the General Declarations section of the
UserForm:
<P>
<PRE>   Public oDataBase As Database
   Public oWorkSpace As Workspace
   Public oRecordSet As Recordset
   Public strDB As String
   Public strDBTable As String
   Dim strDBField() As String ' Array for DataBase field names.

</PRE></OL><h3>Sample Macro</h3>
 
<P>
The following example macro uses the Microsoft Access 97 Northwind.mdb
database, which is located in the default Office folder in the Samples
folder:
<P>
<PRE>   Private Sub UserForm_Initialize()
      ' ********************************************
      ' Form initialization.
      ' Enter all values here for Database, Table
      ' and Field to use.
      '
      ' An array is used in this example to store
      ' all fields used to obtain information
      ' from the database. The number of fields used
      ' must correspond to the number of columns
      ' in the Flexgrid control. That is, if you
      ' use three fields, you must have three columns.
      ' ********************************************
      ' DataBase To Use.
      strDB = Options.DefaultFilePath(wdProgramPath) &amp; _
      "\Samples\Northwind.mdb"
      ' Database Table To Use.
      strDBTable = "Customers"
      ' Database Field(s) To Use.
      ReDim strDBField(2)
      strDBField(0) = "CompanyName"
      strDBField(1) = "ContactName"
      strDBField(2) = "ContactTitle"
      DBConnect
      PopulateGridControl
   End Sub

   Sub DBConnect()
      ' ********************************************
      ' Initializes Jet workspace and opens a database
      ' ********************************************
      ' Establish database WorkSpace.
      Set oWorkSpace = CreateWorkspace(Name:="JetWorkspace", _
      UserName:="admin", Password:="", UseType:=dbUseJet)
      ' Open the database.
      Set oDataBase = OpenDatabase(strDB)
      ' Set the record set to the specified table.
      Set oRecordSet = oDataBase.OpenRecordset(strDBTable)
   End Sub

   Sub PopulateGridControl()
      ' ********************************************
      ' Populates the grid with data
      ' ********************************************
      Dim rownum As Integer
      Dim icount As Integer
      ' Create number of columns to equal, at least, number of fields.
      If MSFlexGrid1.Cols &lt; UBound(strDBField, 1) + 1 Then
         MSFlexGrid1.Cols = UBound(strDBField, 1) + 1
      End If
      ' Populate grid header with field names.
      For icount = 0 To UBound(strDBField, 1)
         MSFlexGrid1.TextMatrix(0, icount) = strDBField(icount)
      Next
      ' Fill grid with data from field(s) in the table.
      oRecordSet.MoveFirst
      Do Until oRecordSet.EOF
         rownum = rownum + 1
         MSFlexGrid1.AddItem ""
         For icount = 0 To UBound(strDBField, 1)
            MSFlexGrid1.TextMatrix(rownum, icount) = _
            oRecordSet.Fields(strDBField(icount))
         Next
         oRecordSet.MoveNext ' Move to next record in table.
      Loop
   End Sub

</PRE>NOTE: To use the example, change the values to the full database path and
name and change the values for the table and fields that you want to use.
<P>
For additional information, please see the following article in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q164815.htm">Q164815</A></B>
   TITLE     : How To Create And Display A Custom Dialog Box
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: word8 word97 8.00 8.0 vb vbe vba kbwordvba xlvbainfo<BR>
Keywords          : kbprg PgmCtrlsStd PgmHowTo<BR>
Version           : 97<BR>
Platform          : NT WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 28, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
