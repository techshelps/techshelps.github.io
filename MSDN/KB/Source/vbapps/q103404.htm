

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: How to Use the Status Bar Progress Meter </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q103404">
<META NAME="KBModify" CONTENT="1997/08/29">
<META NAME="KBCreate" CONTENT="1993/08/23">
<META NAME="Keywords" CONTENT="kbprg kbusage PgmHowTo SynFnc">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  You can use the SysCmd() function in Microsoft Access to create a progress meter in the status bar that gives a visual representation of the progress of an operation. When you pe...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QANO,QA1S,QBTL,QAY5,QA5V,QDN9,QAPN,QBS0,QAEF,QAB9,QBE7,QBE6,QAKD,QAXB,QA5F P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: How to Use the Status Bar Progress Meter</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q103404</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 1.0, 1.1, 2.0, 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
You can use the SysCmd() function in Microsoft Access to create a progress
meter in the status bar that gives a visual representation of the progress
of an operation. When you perform an operation with a known duration or
number of steps, you can use the SysCmd() function to visually represent
the operation's progress.
<P>
The following information documents the use of the SysCmd() function
in Microsoft Access to display a progress meter.
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
NOTE: Visual Basic for Applications is called Access Basic in Microsoft
Access versions 1.x and 2.0. For more information about Access Basic,
please refer to the "Introduction to Programming" manual in Microsoft
Access version 1.x or the "Building Applications" manual in Microsoft
Access version 2.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The syntax of the SysCmd() function is
<P>
<PRE>   SysCmd(&lt;action&gt; [, &lt;text&gt;][, &lt;value&gt;])

</PRE>where
<P>
<PRE>    - &lt;action&gt; is a numeric expression identifying the type of action
      to take. The expression is one of the following:

         1 - Initialize the progress meter.
         2 - Update the progress meter with the specified value.
         3 - Remove the progress meter.

    - &lt;text&gt; is a string expression identifying the text that will
      appear left-aligned in the status bar to the left of the
      progress meter.

    - &lt;value&gt; is a numeric expression that controls the display of the
      meter. This is required when the action is 1 or 2.

      When the action is 1, the value indicates the maximum number the
      meter should display, with the maximum value for the meter
      indicating 100 percent.

      When the action is 2, the value is used to calculate and update
      the percentage complete in the progress meter.

</PRE>NOTE: The SysCmd() function returns NULL, which is not used.
<P>
<P><h3>Initializing the Progress Meter</h3>
 
<P>
When the &lt;action&gt; argument is 1, the &lt;value&gt; argument is the maximum
value of the meter, or 100 percent. To display a progress meter with a
maximum value of 1000 initialized, type the following line in the Debug
window (or Immediate window in versions 1.x and 2.0):
<P>
<PRE>   ? SysCmd(1, "This is my meter!", 1000)

</PRE><h3>Updating the Progress Meter</h3>
 
<P>
When the &lt;action&gt; argument is 2, the &lt;value&gt; argument is used by
SysCmd() to calculate the percentage displayed by the meter. To update
the progress meter to 25 percent complete, type the following line in the
Debug window (or Immediate window in versions 1.x and 2.0):
<P>
<PRE>   ? SysCmd(2, 250)

</PRE><h3>Removing the Progress Meter</h3>
 
<P>
When the &lt;action&gt; argument is 3, the progress meter is removed from
the status bar. To remove the meter, type the following line in the Debug
window (or Immediate window in versions 1.x and 2.0):
<P>
<PRE>   ? SysCmd(3)

</PRE><h3>Using SysCmd() in a Visual Basic Function</h3>
 
<P>
The following sample function opens the Customers table in the sample
database Northwind.mdb (or NWIND.MDB in versions 1.x or 2.0). The function
displays a list of the contact names in the table. As the names display,
a meter progresses in the status bar indicating the relative progress of
the function.

<OL><P><LI>Open the sample database Northwind.mdb (or NWIND.MDB in versions
   1.x and 2.0)

<P><LI>Create a new module called "Meter Test."

<P><LI>Type the following line in the Declarations section if it is not
   already there:
<P>
<P><PRE>      Option Explicit
</PRE>
<P><LI>Type the following procedure:
<P>
   Function Meter ()
<P><PRE>      Dim MyDB As Database, MyTable As RecordSet
      Dim Count As Long
      Dim Progress_Amount As Integer, RetVal As Variant
</PRE><P>
<P><PRE>      Set MyDB = CurrentDB()
      Set MyTable = MyDB.OpenRecordSet("Customers")
</PRE><P>
<P><PRE>      ' Move to last record of the table to get the total
      ' number of records.
      MyTable.MoveLast
      Count = MyTable.RecordCount
</PRE><P>
<P><PRE>      ' Move back to first record.
      MyTable.MoveFirst
</PRE><P>
<P><PRE>      ' Initialize the progress meter.
      RetVal = SysCmd(1, "Reading Data...", Count)
</PRE><P>
<P><PRE>      ' Enumerate through all the records.
      For Progress_Amount = 1 To Count
<PRE></PRE>         ' Update the progress meter.
         RetVal = SysCmd(2, Progress_Amount)

         'Print the contact name in the Debug window (or Immediate window
         'in versions 1.x and 2.0).

         Debug.Print MyTable![ContactName]

         ' NOTE: In versions 1.x and 2.0, there is a space in Contact Name.

         ' Goto the next record.
         MyTable.MoveNext
      Next Progress_Amount

      ' Remove the progress meter.
      RetVal = SysCmd(3)
      End Function

</PRE></OL>To run the function, type the following line in the Debug window (or
Immediate window in versions 1.x and 2.0):
<P>
<PRE>   ? Meter()

</PRE><h2>REFERENCES</h2>
 
<P>
For more information about the SysCmd() function, search the Help Index
for "SysCmd."
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: thermometer statusbar<BR>
Keywords          : kbprg kbusage PgmHowTo SynFnc<BR>
Version           : 1.0 1.1 2.0 7.0 97<BR>
Platform          : WINDOWS<BR>
Hardware          : x86<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
