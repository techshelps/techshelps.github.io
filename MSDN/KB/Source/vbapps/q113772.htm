

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRJ: FilterApply Method Fails with Two Interactive Dialog Boxes </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q113772">
<META NAME="KBModify" CONTENT="1997/11/24">
<META NAME="KBCreate" CONTENT="1994/04/14">
<META NAME="Keywords" CONTENT="kbcode kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Project, when you use the FilterApply method in a macro to apply a filter that displays multiple interactive dialog boxes, tasks that meet the criteria are not displayed.  CAUSE =====  The syntax for the FilterApply method is as follow...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QBS0,QA01,QAPF,QAH4,QBJZ,QA7K,QBXS,QAUD,QBWS,QBVV,QAH6,QAG2,QANX,QDMR V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRJ: FilterApply Method Fails with Two Interactive Dialog Boxes</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 24, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q113772</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Project 98 for Windows
<LI>Microsoft Project for Windows 95, versions 4.1, 4.1a
<LI>Microsoft Project for Windows, version 4.0
<LI>Microsoft Project for the Macintosh, version 4.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
In Microsoft Project, when you use the FilterApply method in a macro to
apply a filter that displays multiple interactive dialog boxes, tasks that
meet the criteria are not displayed.
<P>
<P><h2>CAUSE</h2>
 
<P>
The syntax for the FilterApply method is as follows:
<P>
<PRE>   FilterApply name, highlight, value1, value2

</PRE>The value1 and value2 arguments of the FilterApply method are string
expressions that specify the first and second value to use when you apply
an interactive filter. However, these arguments represent values in the
same interactive filter dialog box in an interactive filter that displays
only two fields. These arguments do not work as the first and second values
for a filter that displays two different interactive dialog boxes. You
cannot specify values for more than one interactive dialog box using the
FilterApply method in a macro.
<P>
For example, when you apply the Date Range filter, one dialog appears
asking for the Start or Finish After criteria, and a second dialog appears
asking for the Before criteria. You cannot use the value1 argument of the
FilterApply method for the After criteria, and the value2 argument for the
Before criteria.
<P>
<P><h2>WORKAROUNDS</h2>
 
<P>
To apply a filter that uses multiple interactive dialog boxes, and to
supply the criteria using a macro, use either of the following workarounds.
<P>
<P><h3>To apply the filter and display the interactive dialog boxes</h3>
 
<P>
Use a SendKeys statement to enter the criteria values, as in the following
example:
<P>
<PRE>Sub Apply_Filter1()
   ' Send the criteria dates and ENTER keys
   ' to use with the Date Range filter
   SendKeys "11/1{ENTER}12/1{ENTER}"
   ' Apply the Date Range filter
   FilterApply Name:="Date Range..."
End Sub

</PRE><h3>To apply the filter without displaying dialog boxes</h3>
 
<P>
If you want to apply a filter without displaying the dialog boxes, use the
FilterEdit method to create a new filter or customize an existing filter.
Then, use the FilterApply method to apply this new or customized filter.
<P>
Microsoft provides examples of Visual Basic procedures for illustration
only, without warranty either expressed or implied, including but not
limited to the implied warranties of merchantability and/or fitness for a
particular purpose. This Visual Basic procedure is provided 'as is' and
Microsoft does not guarantee that it can be used in all situations.
Microsoft does not support modifications of this procedure to suit customer
requirements for a particular purpose.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 

<OL><P><LI>In a new project, enter a task T1. In the Start column for T1, type
   "11/15" (without the quotation marks).

<P><LI>From the Tools menu, choose Macros. Choose the New button. In the Macro
   Name box, type "Apply_Filter" (without the quotation marks). Choose the
   Options button, and under Store Macro In, select the Current Project
   File option and choose OK.

<P><LI>In the new module, enter the following macro:
<P>
<PRE>      Sub Apply_Filter
         FilterApply Name:="Date Range...", Value1:="11/1", Value2:="12/1"
      End Sub

</PRE><P><LI>From the View menu, choose Gantt Chart.

<P><LI>From the Tools menu, choose Macros. From the Macro Name list, select
   Apply_Filter and choose Run.
<P>
</OL>T1 is not displayed in the project, even though T1 meets the filter
criteria applied by the macro.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For additional information, please see the following article(s) in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q126941.htm">Q126941</A></B>
   TITLE     : Creating a Multi-Line Filter Using the FilterEdit Method

</PRE></OL>For more information about the FilterApply Method, choose the Search
button in the Visual Basic reference and type:
<P>
<PRE>   FilterApply

</PRE>For more information about the FilterEdit Method, choose the Search
button in the Visual Basic reference and type:
<P>
<PRE>   FilterEdit
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 4.00<BR>
Keywords          : kbcode kbprg<BR>
Version           : 4.0 4.1 4.1a 98<BR>
Platform          : MACINTOSH WINDOWS<BR>
Issue type        : kbprb<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 24, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
