

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Manipulate Object's Properties w/ Property Set/Let/Get </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q108731">
<META NAME="KBModify" CONTENT="1997/07/29">
<META NAME="KBCreate" CONTENT="1993/12/16">
<META NAME="Keywords" CONTENT="kbcode kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Visual Basic for Applications in Microsoft Excel version 5.0 for Windows, you can create your own objects by using modules and then manipulate the properties of those objects by using the Property Set, Property Get, and Property Let statements. ...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QAH4,QBXS,QBS0,QBWC,QBVP,QAW6,QAXC,QBJZ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Manipulate Object's Properties w/ Property Set/Let/Get</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q108731</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Programming System, Applications Edition,
   version 1.0
<LI>Microsoft Excel for Windows, version 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Visual Basic for Applications in Microsoft Excel version 5.0 for
Windows, you can create your own objects by using modules and then
manipulate the properties of those objects by using the Property Set,
Property Get, and Property Let statements. This article explains how to use
the Property Set/Let/Get syntax.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Usually, you will define either Property Let and Property Get or Property
Set and Property Get. If a property value stores an object reference, use
Property Set and Property Get. If a property value stores a variant
reference, use Property Let and Property Get.
<P>
In the following example, you'll create the object module SGLCount in step
2 and then create another module that uses SGLCount in step 3.

<OL><P><LI>Start Microsoft Excel version 5.0. A new Workbook (sheet1) is created by
   default.

<P><LI>Add a new module by using the Insert menu (ALT, I, M, M) or by clicking
   the Module button on the Visual Basic for Applications toolbar. Name the
   module SGLCount. Add the following code to the SGLCount module:
<P>
<P><PRE>    Option Explicit
    Private iMyCount As Integer
    Private rMyRange As Variant
</PRE><P>
<P><PRE>    ' Use Property Let for Variants
    Property Let MyCount(iCount As Variant)
       iMyCount = iCount
    End Property
</PRE><P>
<P><PRE>    Property Get MyCount()
       MyCount = iMyCount
    End Property
</PRE><P>
<P><PRE>    ' Use Property Set for Objects
    Property Set MyRange(rRange As Range)
       ' Use Set because rRange is a Range Object
       Set rMyRange = rRange
    End Property
</PRE><P>
<P><PRE>    Property Get MyRange()
       Set MyRange = rMyRange
    End Property
</PRE>
<P><LI>Add another new module by using the Insert menu (ALT, I, M, M) or by
   clicking the Module button on the Visual Basic for Applications toolbar.
   Use the default name for the module (module1). Add the following code to
   the module1 module:
<P>
<P><PRE>    Option Explicit
    Sub TestCount()
</PRE><P>
<P><PRE>      Dim rRange As Range
</PRE><P>
<P><PRE>      Set rRange = ActiveSheet.Range("B1")
      rRange.Value = 7777
</PRE><P>
<P><PRE>      ' Execute module SGLCount Property Set MyRange:
      Set SGLCount.MyRange = ActiveSheet.Range("B1")
      ActiveSheet.Range("A1").Select
</PRE><P>
<P><PRE>      ' Execute module SGLCount Property Set MyCount:
      SGLCount.MyCount = 5
</PRE><P>
<P><PRE>      ' Execute module SGLCount Property Get MyRange:
      rRange = SGLCount.MyRange
</PRE><P>
<P><PRE>      ' Execute module SGLCount Property Get MyCount:
      rRange.Value = SGLCount.MyCount
      rRange.Select
</PRE><P>
<P><PRE>    End Sub
</PRE>
<P><LI>Add a command button (Command1) to Sheet1 and assign the TestCount macro
   to the button. To assign a macro, place the mouse insertion point on
   the Command1 button and click the right mouse button. Then select Assign
   Macro.
</OL> 
<PRE>Keywords          : kbcode kbprg
Version           : 1.00
Platform          : WINDOWS</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
