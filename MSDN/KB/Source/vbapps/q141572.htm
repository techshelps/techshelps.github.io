

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: Sample Macro Code to Loop Through a List on a Worksheet </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q141572">
<META NAME="KBModify" CONTENT="1998/02/03">
<META NAME="KBCreate" CONTENT="1995/12/20">
<META NAME="Keywords" CONTENT="kbcode kbprg PgmHowto">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  When you write a Microsoft Visual Basic for Applications macro, you may  need to loop through a list of data on a worksheet. There are several  methods for performing this task. The  More Information  section of this  article contains information a...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QA5V,QAA7,QBVP,QAE1,QAGB,QDNZ,QBS0,QAKC,QAPF,QAEF,QDIJ,QBXS,QBC6,QAV1 P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: Sample Macro Code to Loop Through a List on a Worksheet</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 3, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q141572</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
<LI>Microsoft Excel for Windows 95, version 7.0
<LI>Microsoft Excel for Windows, versions 5.0, 5.0c
<LI>Microsoft Excel for the Macintosh, versions 5.0, 5.0a
<LI>Microsoft Excel 98 Macintosh Edition
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
When you write a Microsoft Visual Basic for Applications macro, you may 
need to loop through a list of data on a worksheet. There are several 
methods for performing this task. The "More Information" section of this 
article contains information about methods you can use to search the 
following types of lists:

<UL><LI>A list that contains a known, constant number of rows

<LI>A dynamic list or a list with an unknown number of rows

<LI>A list that contains a specific record
<P>
</UL><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>The following code samples assume that the list has a header row starting
in cell A1 and data starting in A2. The tilde (~) symbol indicates a step
to be performed on each line of the loop, or at a specified time.
<P>
<P><h3>To Search a List with a Constant, Known Number of Rows</h3>
 
<P>
This code moves down column A to the end of the list:
<P>
<PRE>   ' Set numrows = number of rows of data.
   NumRows = Range(Cells(2, "a"), Cells(2, "a").End(xldown)).Rows.Count

   ' Select cell a1.
   Cells(2, "a").Select

   ' Establish "For" loop to loop "numrows" number of times.
   For x = 1 To NumRows
      '
      ' Insert code here.
      '
      ' Selects cell down 1 row from active cell.
      ActiveCell.Offset(1, 0).Select
   ' End For loop.
   Next

</PRE><h3>To Search a Dynamic List or a List with an Unknown Number of Rows</h3>
 
<P>
This code moves down through column A to the end of the list. (This code
assumes that each cell in column A contains an entry until the end.)
<P>
<PRE>   ' Select cell A2, *first line of data*.
   Cells(2, "a").Select
   ' Set Do loop to stop when an empty cell is reached.
   Do Until IsEmpty(ActiveCell)
      '
      ' Insert code here.
      '
      ' Step down 1 row from present location.
      ActiveCell.Offset(1, 0).Select
   ' End Do loop.
   Loop

   NOTE: If there are empty cells in column A throughout the data, then
   you can modify this code to account for this condition, as long as
   empty cells are a consistent distance apart. For example, if every
   other cell in column A is empty (this might occur if every 'record'
   uses 2 rows, with the second row indented 1 cell, for example), this
   loop can be modified as follows:

      ' Set Do loop to stop when two consecutive empty cells are reached.
      Do Until IsEmpty(ActiveCell) and IsEmpty(ActiveCell.Offset(1, 0))
         '
         ' Insert code here.
         '
         ' Step down 2 rows from present location.
         ActiveCell.Offset(2, 0).Select

      ' End Do loop.
      Loop

</PRE><h3>To Search a List for a Specific Record</h3>
 
<P>
<PRE>   ' Select first line of data.
   Cells(2, "a").Select
   ' Set search variable value.
   x = "test"
   ' Set Boolean variable "found" to false.
   found = False
   ' Set Do loop to stop at empty cell.
      Do Until IsEmpty(ActiveCell)
      ' Check active cell for search value.
      If ActiveCell.Value = x Then
         found = TRUE
         ' Exit Do loop.
      Exit Do
         
      End If
   ' End Do loop.
   Loop
   ' Check for found.
   If found = True Then 
      ' If found, active cell will be that location.
      ' Add code for whatever you want to do if match is found.
   ' End if statement.
   End If

</PRE><h2>REFERENCES</h2>
 
<P>
For additional information about getting help with Visual Basic for
Applications, please see the following article in the Microsoft Knowledge
Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q163435.htm">Q163435</A></B>
   TITLE     : VBA: Programming Resources for Visual Basic for
               Applications
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 5.00 5.00a 5.00c 7.00 8.00 xl97<BR>
Keywords          : kbcode kbprg PgmHowto<BR>
Version           : WINDOWS: 5.0, 5.0c, 7.0, 97; MACINTOSH: 5.0, 5.0a, 98<BR>
Platform          : MACINTOSH WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 3, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
