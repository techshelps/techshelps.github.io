

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: How to Import a Microsoft Windows Cardfile Data File </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q98797 ">
<META NAME="KBModify" CONTENT="1997/08/29">
<META NAME="KBCreate" CONTENT="1993/05/13">
<META NAME="Keywords" CONTENT="IntpOthr kbinterop PgmHowTo PgmFilM">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  This article describes a sample user-defined function that you can use to import a Microsoft Windows Cardfile (.crd) file.  This article assumes that you are familiar with V...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA1S,QDN9,QDL9,QBWO,QBWN,QAY5,QBS0,QBV8,QAH4,QATX,QAB9,QANF,QAMB,QAH6,QBJZ P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: How to Import a Microsoft Windows Cardfile Data File</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q98797 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 1.0, 1.1, 2.0, 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
This article describes a sample user-defined function that you can use to
import a Microsoft Windows Cardfile (.crd) file.
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
NOTE: Visual Basic for Applications is called Access Basic in Microsoft
Access versions 1.x and 2.0. For more information about Access Basic,
please refer to the "Introduction to Programming" manual in Microsoft
Access version 1.x or the "Building Applications" manual in Microsoft
Access version 2.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The function below can be used to import a Microsoft Windows Cardfile
data file. To use this function, you need to add it to a new or
existing Microsoft Access module. The function is designed to work with
Cardfiles created with Microsoft Windows versions 3.0, 3.1, and 3.11 only.
In addition, you need to create the following table in your database before
you run the function:
<P>
<PRE>   Table Name: CardFile
   --------------------
   Field: Title
      Type: Text
      Length: 50
   Field: Comment
      Type: Text
      Length: 255

</PRE>You can run the function from the Debug window (Immediate window in
versions 1.x and 2.0) or you can call it from a command button by setting
a command button's OnClick property as follows:
<P>
<PRE>   =Import_CRD()

</PRE>NOTE: In Microsoft Access version 1.x, the OnClick property is called the
OnPush property.
<P>
Make sure to substitute the correct path and filename for the .crd file
you want to import in the function below. Or you can pass the path and
filename to the function as a string argument.
<P>
<PRE>   Code for the Import_CRD() Function
   ----------------------------------

      Option Compare Binary
      Option Explicit

      Type CRD_Record_Type
         Reserved As String * 6
         Position As Long
         Flag As String * 1
         Index As String * 40
         EndOfRecord As String * 1
      End Type

      Function Import_CRD ()
         Const VER30 = &amp;H474D&amp;
         Const VER31 = &amp;H5252&amp;
         Const VER30_NUMRECORDS_OFFSET = &amp;H4&amp;
         Const VER31_NUMRECORDS_OFFSET = &amp;H8&amp;
         Const VER30_FIRSTENTRY = &amp;H6&amp;
         Const VER31_FIRSTENTRY = &amp;HA&amp;

         Dim MyDB As Database
         Dim MyTable As Table

         Dim FileNum#
         Dim NumberOfCards%, NextRecord&amp;, I%, VersionInfo%, EntryLength%
         Dim CRD_Record As CRD_Record_Type
         Dim Message$
         Dim n As Integer

         Set MyDB = CurrentDB()
         Set MyTable = MyDB.OpenTable("CardFile") 'For MS Access 1.x, 2.0
         ' Set MyTable = MyDB.OpenRecordset("CardFile") 'For MS Access 7.0

         FileNum# = FreeFile
         ' Be sure to supply the correct path and filename for the .CRD
         ' file.
         Open "c:\my_cards.crd" For Binary As FileNum#

         'The number of files in the .CRD file is at the 4 bytes offset.
         Get #FileNum, , VersionInfo%
         If VersionInfo% = VER31 Then
            Get #FileNum, VER31_NUMRECORDS_OFFSET, NumberOfCards%
            NextRecord&amp; = VER31_FIRSTENTRY
         ElseIf VersionInfo% = VER30 Then
            Get #FileNum, VER30_NUMRECORDS_OFFSET, NumberOfCards%
            NextRecord&amp; = VER30_FIRSTENTRY
         End If

         For I% = 1 To NumberOfCards%

            Get #FileNum, NextRecord&amp;, CRD_Record
            Get #FileNum, CRD_Record.Position + 3, EntryLength%

            Message$ = Space$(EntryLength%)

            Get #FileNum, CRD_Record.Position + 5, Message$

             MyTable.AddNew
                n = InStr(CRD_Record.Index, Chr$(0))
                If n &gt; 1 Then
                   MyTable.Title = Left$(CRD_Record.Index, n - 1)
                ElseIf n = 1 Then
                   MyTable.Title = ""
                Else
                   MyTable.Title = CRD_Record.Index
                End If

                n = InStr(Message$, Chr$(0))
                If n &gt; 1 Then
                   MyTable.Comment = Left$(Message$, n - 1)
                ElseIf n = 1 Then
                   MyTable.Comment = ""
                Else
                   MyTable.Comment = Message$
                End If
             MyTable.Update

             NextRecord&amp; = NextRecord&amp; + Len(CRD_Record)

         Next I%
         Close
      End Function

</PRE>NOTE: To avoid compile errors when using this code in Microsoft Access
7.0 and 97:
<P>
In Microsoft Access 97, open a module in Design view and click References
on the Tools menu. Click Microsoft DAO 2.5/3.5 Compatibility Library. If
Microsoft DAO 3.5 Object Library is already selected, clear it first.
<P>
In Microsoft Access 7.0, open a module in Design view and click References
on the Tools menu. Click Microsoft DAO 2.5/3.0 Compatibility Library. If
Microsoft DAO 3.0 Object Library is already selected, clear it first.
<P>
<P><h2>REFERENCE</h2>
 
<P>
For more information about this topic, please see the following article
here in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID:  <B><A HREF="../WIN3X/Q75492.htm">Q75492</A></B>
   TITLE:       Converting Windows Cardfile Files to Text Format
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: .crd<BR>
Keywords          : IntpOthr kbinterop PgmHowTo PgmFilM<BR>
Version           : 1.0 1.1 2.0 7.0 97<BR>
Platform          : WINDOWS<BR>
Hardware          : x86<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
