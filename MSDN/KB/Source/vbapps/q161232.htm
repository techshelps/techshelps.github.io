

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Use Spaces in Enumerated Types </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q161232">
<META NAME="KBModify" CONTENT="1997/09/30">
<META NAME="KBCreate" CONTENT="1996/12/18">
<META NAME="Keywords" CONTENT="vb5all vb5howto VBKBProgramming vbwin GnrlVb kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Microsoft Visual Basic version 5.0 introduces the concept of Enumerated Types to the programming language. Enumerations provide a convenient way to work with sets of related constants and to associate constant values with identifiers. The identifie...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAFF,QAMA,QAUD,QBW5,QAG8,QAP2,QAKJ,QAKD,QAH4,QAB9,QAEX,QAYZ,QAYL,QAX6 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Use Spaces in Enumerated Types</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 30, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q161232</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Professional and Enterprise Editions,
   for Windows, version 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Microsoft Visual Basic version 5.0 introduces the concept of Enumerated
Types to the programming language. Enumerations provide a convenient way to
work with sets of related constants and to associate constant values with
identifiers. The identifier may be defined as either a normal identifier or
a more "friendly" identifier that can contain spaces.
<P>
NOTE: Other identifiers, such as variable names and procedure names, can
not contain spaces.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Because Enumerated types are defined at the module level, you need to do
the following:

<OL><P><LI>Start Microsoft Visual Basic version 5.0. Create a new Standard EXE.
   This will add Form1 to our new project.

<P><LI>From the Project menu, click Add Module.

<P><LI>Add the following enumerated type to Module1:
<P>
<P><PRE>      Enum SpecialCharacters1
<PRE></PRE>         TabKey = 12
         EnterKey = 13
         SpaceBar = 32
      End Enum

   This allows you to use the constant identifiers TabKey, EnterKey, and
   SpaceBar in place of the values 12, 13, and 32 respectively when you use
   the variable X. However, you are not limited to identifiers that have
   only one word (no spaces) in them. You can allow your enumerated type to
   have much more friendly names by doing the following:

</PRE><P><LI>Add the following enumerated type to Module1:
<P>
<P><PRE>      Enum SpecialCharacters2
<PRE></PRE>         [Tab Key] = 12
         [Enter Key] = 13
         [Space Bar] = 32
      End Enum

   By enclosing the identifier in opening and closing brackets ([]), you
   can define a much more readable identifier. You can now use these two
   different enumerated types by defining some procedures:

</PRE><P><LI>Add the following code to Module1:
<P>
<PRE>      Sub Main ()

      End Sub

      Sub Test1 (newVar as SpecialCharacters1)

      End Sub

      Sub Test2 (newVar as SpecialCharacters2)

      End Sub

</PRE><P><LI>Now add the statements "Test1" and "Test2" (without quotes) to the
   Main procedure, which should look like the following:
<P>
<PRE>      Sub Main ()
          Test1
          Test2
      End Sub

</PRE><P><LI>Press the spacebar to add the required parameter to the Test1
   and Test2 statements. You are provided with the following list of
   values:
<P>
<P><PRE>      Test1 EnterKey
<PRE></PRE>            SpaceBar
            TabKey

      Test2 Enter Key
            Space Bar
            Tab Key

   Note that there are no brackets shown in the list Test2's parameter.

</PRE><P><LI>Select the "SpaceBar" value for Test1 and the "Space Bar" value for
   Test2. Your Main procedure should look like the following:
<P>
<PRE>      Sub Main ()
          Test1 SpaceBar
          Test2 [Space Bar]
      End Sub

   Note that the brackets are automatically included for your second
   enumerated type. This is a crucial point. If an enumerated type contains
   friendly identifiers, the brackets must be used to evaluated the
   identifier.

</PRE><P><LI>Add a third line to the Main procedure as follows:
<P>
<PRE>      Sub Main ()
          Test1 SpaceBar
          Test2 [Space Bar]
          Test2 Space Bar  'No brackets
      End Sub

</PRE></OL>This code will generate a Compile Error on the second "Test2" line. This is
due to the compiler expecting an end-of-statement after the word "Space."
<P>
<P><h2>REFERENCES</h2>
 
<P>
Microsoft Visual Basic 5.0 Books Online
"Using Enumerations to Work with Sets of Constants"
<P>
Microsoft Visual Basic Online Help
"Enum Statement"
 
<PRE>Keywords          : vb5all vb5howto VBKBProgramming vbwin GnrlVb kbprg
Technology        : kbvba
Version           : WINDOWS:5.0
Platform          : WINDOWS
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 30, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
