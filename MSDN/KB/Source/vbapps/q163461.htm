

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PPT: How to Create a PowerPoint 97 Add-In </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q163461">
<META NAME="KBModify" CONTENT="1998/03/09">
<META NAME="KBCreate" CONTENT="1997/02/11">
<META NAME="Keywords" CONTENT="kbcode kbmacro kbprg kbdta kbdtacode kbpptvba">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  This article describes how to create an add-in for Microsoft PowerPoint using Microsoft Visual Basic for Applications. The sample macro (Sub procedure) adds a command to the Tools menu to allow you to change your view to slide sorter view if you ar...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QBJZ,QBS0,QBWS,QAH0,QBVQ,QDKP,QAEF,QABI,QABH,QBTI,QAUR,QASR,QAKE,QAPN P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PPT: How to Create a PowerPoint 97 Add-In</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 9, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q163461</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft PowerPoint 98 Macintosh Edition
<LI>Microsoft PowerPoint 97 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article describes how to create an add-in for Microsoft PowerPoint
using Microsoft Visual Basic for Applications. The sample macro (Sub
procedure) adds a command to the Tools menu to allow you to change your
view to slide sorter view if you are not already in slide sorter view.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE><h3>Step 1 - Create the Code for the Add-In</h3>
 

<OL><P><LI>Start PowerPoint and create a blank presentation.

<P><LI>On the Tools menu, point to Macro, and then click Visual Basic Editor.

<P><LI>In the Visual Basic Editor, click Module on the Insert menu.

<P><LI>Type the following code in the Module window.
<P>
   NOTE: You can substitute your code for the following code.
<P>
<PRE>      Sub ChangeView()

         ' Check to see whether a presentation is open.
         If Presentations.Count &lt;&gt; 0 Then
            If ActiveWindow.ViewType &lt;&gt; ppViewSlideSorter Then
               ActiveWindow.ViewType = ppViewSlideSorter
            End If
         Else
            MsgBox "No presentation open. Open a presentation and " _
               &amp; "run the macro again.", vbExclamation
         End If
      End Sub

   NOTE: A line that is preceded by an apostrophe (') introduces a
   comment in the code. Comments are provided to explain what the code
   is doing at a particular point in the procedure. This text is
   optional and may be excluded from your code.

</PRE></OL><h3>Step 2 - Create the Auto_Open Macro</h3>
 
<P>
The Auto_Open macro stores initialization code for your add-in and it is
automatically executed when the add-in is loaded by PowerPoint. The
following code, adds a command (Change to Slide Sorter) to the Tools menu
that executes your add-in code.
<P>
<PRE>   Sub Auto_Open()

      Dim NewControl As CommandBarControl

      ' Store an object reference to a command bar.
      Dim ToolsMenu As CommandBars

      ' Figure out where to place the menu choice.
      Set ToolsMenu = Application.CommandBars

      ' Create the menu choice. The choice is created in the first
      ' position in the Tools menu.
      Set NewControl = ToolsMenu("Tools").Controls.Add _
                       (Type:=msoControlButton, _
                        Before:=1)

      ' Name the command.
      NewControl.Caption = "Change to Slide Sorter"

      ' Connect the menu choice to your macro. The OnAction property
      ' should be set to the name of your macro.
      NewControl.OnAction = "ChangeView"

   End Sub

</PRE><h3>Step 3 - Create the Auto_Close Macro</h3>
 
<P>
The Auto_Close macro is executed when an add-in is unloaded by PowerPoint.
The Auto_Close macro stores your clean-up code. The following code removes
the command you added to the Tools menu in the "Create the Auto_Open Macro"
section of this article.
<P>
<PRE>   Sub Auto_Close()

      Dim oControl As CommandBarControl
      Dim ToolsMenu As CommandBars

      ' Get an object reference to a command bar.
      Set ToolsMenu = Application.CommandBars

      ' Loop through the commands on the tools menu.
      For Each oControl In ToolsMenu("Tools").Controls

            ' Check to see whether the comand exists.
            If oControl.Caption = "Change to Slide Sorter" Then

              ' Check to see whether action setting is set to ChangeView.
              If oControl.OnAction = "ChangeView" Then

                  ' Remove the command from the menu.
                  oControl.Delete
               End If
            End If
      Next oControl
   End Sub

</PRE><h3>Step 4 - Create the .ppa File</h3>
 

<OL><P><LI>On the Debug menu, click Compile VBAProject.
<P>
   If your code has compile errors, you will not be able to create the
   add-in.
<P>
   NOTE: This step is only required if the Auto Syntax Check option
   in the Visual Basic Editor is not selected. To turn this option on or
   off, use these steps:
<P>
   a. Click Options on the Tools menu, and then click the Editor tab.
<P>
   b. Clear or select the Auto Syntax Check check box, and then click OK.
<P>
<P><PRE>      If this option is currently selected, skip to step 2.
</PRE>
<P><LI>Save the presentation.
<P>
   a. On the File menu, click Close and Return to Microsoft PowerPoint.
<P>
   b. On the File menu, click Save As.
<P>
   c. Select Presentation (*.ppt) in the Save As Type list.
<P>
   d. Name the presentation, and then click Save.
<P>
<P><PRE>      Your add-in code is now saved in the presentation.
</PRE>
<P><LI>Create the .ppa file.
<P>
   a. On the File menu, click Save As.
<P>
   b. Select PowerPoint Add-In (*.ppa) in the Save As Type list.
<P>
   c. In the File Name box, type a name for your add-in, and then click
<P><PRE>      Save.
</PRE><P>
<P><PRE>      Typically, PowerPoint add-ins are placed in the c:\Program Files\
      Microsoft Office\Office folder. However, you can choose another
      folder if you want.
</PRE><P>
</OL><h3>Step 5 - Load the Add-In</h3>
 

<OL><P><LI>On the Tools menu, click Add-Ins.

<P><LI>Click Add New.

<P><LI>In the Add New PowerPoint Add-In dialog box, select the add-in file you
   created in the "Step 4 - Create the PPA File" section. Click OK.

<P><LI>In the macro warning message box, click Enable Macros.
<P>
   NOTE: If you received an add-in file from an unknown source, you should
   click Disable Macros.
<P>
   The Auto_Open macro now executes.
<P>
</OL>For information on how to use the PowerPoint object model to load add-ins,
click the Office Assistant, type "Loaded property," click Search, and then
click to view "Loaded Property."
<P>
NOTE: If the Assistant is hidden, click the Office Assistant button on the
Standard toolbar. If Visual Basic Help is not installed on your computer,
please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../OFFICE/Q120802.htm">Q120802</A></B>
   TITLE     : Office: How to Add/Remove a Single Office Program or
               Component

</PRE></OL><h3>Step 6 - Unload the Add-In</h3>
 
<P>
Use the following steps to unload an add-in:

<OL><P><LI>On the Tools menu, click Add-Ins.

<P><LI>From the Available Add-Ins list, select the add-in you want to unload,
   and then click Unload or Remove.
<P>
   When you click Unload, the add-in is unloaded but it remains on the
   Available Add-Ins list.  When you click Remove, the add-in is unloaded
   and it is removed from the Available Add-Ins list.
<P>
   The Auto_Close macro now executes.
<P>
</OL>For information on how to use the PowerPoint object model to load add-ins,
click the Office Assistant, type "Loaded property," click Search, and then
click to view "Loaded Property."
<P>
NOTE: If the Assistant is hidden, click the Office Assistant button on the
Standard toolbar. If Visual Basic Help is not installed on your computer,
please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../OFFICE/Q120802.htm">Q120802</A></B>
   TITLE     : Office: How to Add/Remove a Single Office Program or
               Component

</PRE></OL><h3>Step 7 - Protecting Your Add-In with a Password</h3>
 
<P>
When you save a presentation as an add-in, PowerPoint does not protect your
source code. You can protect your code with a password, using the following
steps.
<P>
NOTE: You must protect your project with a password before you save the
add-in.

<OL><P><LI>On the Tools menu, click VBAProject Properties, and then click the
   Protection tab.

<P><LI>Click to select the Lock Project For Viewing check box.

<P><LI>Under Password To View Project Properties, type the password you want in
   the Password and Confirm Password boxes.

<P><LI>Click OK.
<P>
   A password is now required to view your source code.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about getting help with Visual Basic for Applications,
please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q163435.htm">Q163435</A></B>
   TITLE     : VBA: Programming Resources for Visual Basic for
               Applications
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 8.00 ppt8 vba vbe addin addins macppt mac_ppt ppt98<BR>
powerpt<BR>
Keywords          : kbcode kbmacro kbprg kbdta kbdtacode kbpptvba<BR>
Version           : WINDOWS:97; MACINTOSH:98<BR>
Platform          : MACINTOSH WINDOWS<BR>
Hardware          : MAC x86<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 9, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
