

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL97: Watch Window Does Not Use Procedure Call Context </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q161736">
<META NAME="KBModify" CONTENT="1998/02/27">
<META NAME="KBCreate" CONTENT="1997/01/03">
<META NAME="Keywords" CONTENT="kbprg kbtool xlvbainfo">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  The Watch Window may not display the value of a watch expression in the appropriate context of the selected procedure call.  CAUSE =====  When you run a procedure in the Immediate Window as part of the debugging process for your macro, it will be a...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGI,QATL,QATK,QBJZ,QBWS,QAIF,QAB9,QAKD,QAKE,QAYL,QAH4,QBVV,QAGQ,QBVP,QA2Q P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL97: Watch Window Does Not Use Procedure Call Context</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 27, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q161736</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The Watch Window may not display the value of a watch expression in the
appropriate context of the selected procedure call.
<P>
<P><h2>CAUSE</h2>
 
<P>
When you run a procedure in the Immediate Window as part of the debugging
process for your macro, it will be added to the list of procedure calls in
the Call Stack dialog box. This functionality helps you trace the operation
of your code. However, if you select a procedure in the Call Stack dialog
box that is listed more than once and click Show, the current value of your
watch expression does not change to the context of the selected procedure.
<P>
For example, if your watch expression is a variable, and you run a
procedure in the Immediate Window multiple times, and you change the value
of the variable each time, the Call Stack dialog box cannot be used to
trace the different values of the variable. The value of the variable in
the Watch Window is the value at the last running of the procedure,
regardless of the instance of the procedure call selected in the Call Stack
dialog box.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in the Microsoft products
listed at the beginning of this article. We are researching this problem
and will post new information here in the Microsoft Knowledge Base as it
becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce Problem</h3>
 

<OL><P><LI>Close and save any open workbooks and then open a new workbook.

<P><LI>Start the Visual Basic Editor (press ALT+F11).

<P><LI>If the Immediate Window is not visible, click Immediate Window on
    the Insert menu (or press CTRL+G).

<P><LI>If the Watch Window is not visible, click Watch Window on the Insert
    Menu.

<P><LI>Click Module on the Insert menu.

<P><LI>In Module1, type the following code:
<P>
    Sub Initial()
<P>
<PRE>        'Calls the DoubleNum Function, and passes
        'the number 2 as the argument.
        DoubleNum 2

    End Sub

    Function DoubleNum(Arg1 As Integer)

        DoubleNum = Arg1 * 2

        'Sets a breakpoint, so we can use the debugging windows.
        Stop

    End Function

</PRE><P><LI>Click Add Watch on the Debug menu. In the Expression box, type
    "Arg1" (without the quotation marks). Select DoubleNum from the
    Procedure list, and then click OK.

<P><LI>Click Macros on the Tools menu. Click Initial in the Macro Name
    list, and then click Run.
<P>
</OL>The Initial procedure will call the DoubleNum function, passing a
value of 2 for the Arg1 argument. The Watch Window shows the value
of Arg1 equal to 2, and the context is listed as Module1.DoubleNum.

<OL><P><LI>Type the following expression in the Immediate Window
<P>
       DoubleNum 5
<P>
    and press the Enter key.
<P>
</OL>The value of Arg1 is shown as 5 in the Watch Window.

<OL><P><LI>Click Call Stack on the View menu. You will see the item
<P><PRE>    VBAProject.Module1.DoubleNum, listed twice in the
    Project.Module.Function list. Click the first listing,
    and then click Show.
</PRE><P>
</OL>The Watch Window still shows the value of Arg1 as 5, even though you
selected the first call to the DoubleNum function in the Call Stack dialog
box.
<P>
For additional information, please see the following article in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../URJump.htm">Q106498</A></B>
   TITLE     : XL: Watch Pane Does Not Use Procedure Call Context

</PRE></OL><h2>REFERENCES</h2>
 
<P>
For more information about the Watch window, click the Office Assistant,
type "watch", click Search, and then click to view "Watch Window".
<P>
For more information about the Immediate window, click the Office
Assistant, type "immediate", click Search, and then click to view
"Immediate Window".
<P>
For more information about the Call Stack Window, click the Office
Assistant, type "calls", click Search, and then click to view "Call Stack
Command (View Menu)".
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: XL97<BR>
Keywords          : kbprg kbtool xlvbainfo<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>
Issue type        : kbprb<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 27, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
