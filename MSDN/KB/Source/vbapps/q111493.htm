

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IS Operator Does Not Work with Microsoft Excel Objects </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q111493">
<META NAME="KBModify" CONTENT="1997/07/29">
<META NAME="KBCreate" CONTENT="1994/02/14">
<META NAME="Keywords" CONTENT="kbcode kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  If you use the Is operator in a Microsoft Visual Basic Programming System, Applications Edition module to compare Microsoft Excel objects, the comparison may return the value FALSE even if you are comparing an object to itself.  CAUSE =====  The Is...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QBVP,QAPN,QAUD,QAH4,QAW6,QAG7,QAJQ,QAPF,QANY,QAKM,QA5F,QAMA,QBXT,QA5V V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>IS Operator Does Not Work with Microsoft Excel Objects</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q111493</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Programming System, Applications Edition,
   version 1.0
<LI>Microsoft Excel for Windows, version 5.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
If you use the Is operator in a Microsoft Visual Basic Programming System,
Applications Edition module to compare Microsoft Excel objects, the
comparison may return the value FALSE even if you are comparing an object
to itself.
<P>
<P><h2>CAUSE</h2>
 
<P>
The Is operator compares two object reference variables. However, in some
cases, a different object is returned each time you use a property to
return an object. For example, when you use the Selection property to
return a selected Microsoft Excel object, a different object is returned by
each call to the Selection property.
<P>
<P><h2>EXAMPLE 1</h2>
 
<P>
If you use the Is operator to compare the Microsoft Excel object returned
by the Selection property to the same object returned by the Selection
property as in the following lines of code
<P>
<P><h3>In a Visual Basic Module in Microsoft Excel</h3>
 
<P>
<PRE>   If Selection Is Selection Then Beep

</PRE><h3>In a Visual Basic, Applications Edition Module</h3>
 
<P>
<PRE>   If Application.Selection Is _
      ActiveSheet.Range(Application.Selection.Address) Then Beep

</PRE>the comparison returns the value FALSE, and neither of these lines of code
causes the system to beep. In this case, the object does not know that a
reference has already been made to it and returns another reference.
<P>
<P><h2>EXAMPLE 2</h2>
 
<P>
The same issue occurs if you use the ActiveSheet property to return an
object such as a button, check box, or group box. In the following example,
the comparison also returns the value FALSE even though you are comparing a
button to itself.
<P>
<P><h3>In a Visual Basic Module in Microsoft Excel</h3>
 
<P>
<PRE>   If ActiveSheet.Buttons(1) Is ActiveSheet.Buttons("Button 1") _
      Then Beep

</PRE>and you do not receive a beep.
<P>
<P><h2>WORKAROUNDS</h2>
 
<P>
To use the Is operator to compare two Microsoft Excel objects that are the
same as in the above examples, use following examples:
<P>
<P><h2>EXAMPLE 1</h2>
 
<P>
<P><h3>In a Visual Basic Module in Microsoft Excel</h3>
 
<P>
<PRE>   ' Use the Address method and the equal sign (=) operator to
   ' compare range references
   If Selection.Address = Selection.Address Then Beep

</PRE><h3>In a Visual Basic, Applications Edition Module</h3>
 
<P>
<PRE>   ' Use the value of a unique property of an object for
   ' comparison as a workaround.
   If Application.Selection.Address = _
      ActiveSheet.Range(Application.Selection.Address).Address Then Beep

</PRE><h2>EXAMPLE 2</h2>
 
<P>
<P><h3>In a Visual Basic Module in Microsoft Excel</h3>
 
<P>
<PRE>   ' Use Name method and the equal sign (=) operator to
   ' compare button objects
   If ActiveSheet.Buttons(1).Name = ActiveSheet.Buttons("Button 1").Name _
      Then Beep

</PRE>Microsoft provides examples of Visual Basic procedures for illustration
only, without warranty either expressed or implied, including but not
limited to the implied warranties of merchantability and/or fitness for a
particular purpose. This Visual Basic procedure is provided 'as is' and
Microsoft does not guarantee that it can be used in all situations.
Microsoft does not support modifications of this procedure to suit customer
requirements for a particular purpose. Note that a line that is preceded by
an apostrophe introduces a comment in the code--comments are provided to
explain what the code is doing at a particular point in the procedure. Note
also that an underscore character (_) indicates that code continues from
one line to the next. You can type lines that contain this character as one
logical line or you can divide the lines of code and include the line
continuation character. For more information about Visual Basic for
Applications programming style, see the "Programming Style in This Manual"
section in the "Document Conventions" section of the "Visual Basic User's
Guide."
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about the Is Operator, choose the Search button
in the Visual Basic Reference and type:
<P>
<PRE>   is
</PRE> 
<PRE>Keywords          : kbcode kbprg
Version           : 1.00
Platform          : WINDOWS</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
