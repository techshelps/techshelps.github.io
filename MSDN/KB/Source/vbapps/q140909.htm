

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: How to Determine Startup Folder (Directory) of a Program </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q140909">
<META NAME="KBModify" CONTENT="1997/08/28">
<META NAME="KBCreate" CONTENT="1995/12/07">
<META NAME="Keywords" CONTENT="kbprg PgmApi PgmHowTo MdlGnrl">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  You can use the SysCmd() function to perform several functions. One of these functions is the acSysCmdAccessDir(), which returns the name (        \      \) of the folder (d...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA1S,QDN9,QAY5,QAFI,QAB9,QBV8,QAUD,QAH4,QBS0,QDIV,QACJ,QABY,QDL9,QBWO,QBWN P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: How to Determine Startup Folder (Directory) of a Program</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 28, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q140909</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 2.0, 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
You can use the SysCmd() function to perform several functions. One
of these functions is the acSysCmdAccessDir(), which returns the name
(&lt;Drive:&gt;\&lt;Path&gt;\) of the folder (directory) where Msaccess.exe is
located. It does not return the name of the executable file, Msaccess.exe.
This article includes two sample functions that you can use to return the
name of the folder and the name of the executable file for any program
running in the Microsoft Windows environment.
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
NOTE: Visual Basic for Applications is called Access Basic in Microsoft
Access version 2.0. For more information about Access Basic, please refer
to the "Building Applications" manual.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The CurDir() function returns the current folder. Because you can start
Microsoft Access from a folder other than the current folder, and because
you can change the current folder with the ChDir statement, you cannot
use the CurDir() function to determine the startup folder.
<P>
The following sample function uses the Windows API functions
GetModuleHandle() and GetModuleFileName(). With the module handle,
you can obtain the path with the GetModuleFileName() function.
<P>
<P><h3>In Microsoft Access 7.0 and 97</h3>
 

<OL><P><LI>Create a module and type the following lines in the Declarations
   section:
<P>
<P><PRE>      Option Explicit
</PRE><P>
<P><PRE>      Declare Function GetModuleHandle&amp; Lib "kernel32" Alias _
<PRE></PRE>         "GetModuleHandleA" (ByVal FileName$)

      Declare Function GetModuleFileName&amp; Lib "kernel32" Alias _
         "GetModuleFileNameA" (ByVal hModule&amp;, ByVal FileName$, ByVal _
            nSize&amp;)

      NOTE: Aliases used in Win32 are case-sensitive.

</PRE><P><LI>Type the following procedure:
<P>
<P><PRE>      Function StartUp_Dir()
<PRE></PRE>         Dim hModule&amp;, Buffer$, Length&amp;, Msg$
         hModule&amp; = GetModuleHandle("MSACCESS.EXE")
         Buffer$ = Space$(255)
         Length&amp; = GetModuleFileName(hModule&amp;, Buffer$, Len(Buffer$))
         Buffer$ = Left$(Buffer$, Length&amp;)
         Msg$ = "Startup path and filename: " &amp; Buffer$
         MsgBox Msg$
      End Function

</PRE><P><LI>To test this function, type the following line in the Debug Window,
   and then press ENTER.
<P>
<P><PRE>      ? StartUp_Dir()
</PRE><P>
   Note that the Microsoft Access startup folder and executable name are
   displayed in the Debug window.
<P>
</OL><h3>In Microsoft Access 2.0</h3>
 
<P>
NOTE: In the following sample code, an underscore (_) is used as a
line-continuation character. Remove the underscore from the end of the
line when re-creating this code in Access Basic.

<OL><P><LI>Create a module and type the following lines in the Declarations
   section:
<P>
<P><PRE>      Option Explicit
      Declare Function GetModuleHandle% Lib "kernel" (ByVal FileName$)
      Declare Function GetModuleFileName% Lib "kernel" (ByVal hModule%,_
<PRE></PRE>                       ByVal FileName$, ByVal nSize%)

</PRE><P><LI>Type the following procedure:
<P>
<P><PRE>      Function StartUp_Dir ()
<PRE></PRE>         Dim hModule%, Buffer$, Length%, Msg$
         hModule% = GetModuleHandle("MSACCESS.EXE")
         Buffer$ = Space$(255)
         Length% = GetModuleFileName(hModule%, Buffer$, Len(Buffer$))
         Buffer$ = Left$(Buffer$, Length%)
         Msg$ = "Startup path and filename: " &amp; Buffer$
         MsgBox Msg$
      End Function

</PRE><P><LI>On the Run menu, click Compile Loaded Modules.

<P><LI>On the View menu, click Immediate window. Type the following line in
   the Immediate window, and then press ENTER:
<P>
<P><PRE>      ? StartUp_Dir()
</PRE><P>
   Note that the Microsoft Access startup folder and executable name
   appear in the Immediate window.
<P>
</OL><h3>Uses and Variations</h3>
 
<P>
You can both incorporate this function in other program modules and
use it in expressions. For example, entering =Startup_Dir() as the
OnClick property of a button on a form returns the startup folder of
Microsoft Access whenever the button is clicked.
<P>
NOTE: You can change the MSACCESS.EXE argument for the Windows API
GetModuleHandle() function so that the function returns the startup
folder of another program started in the Windows environment.
Furthermore, you can pass a program name as a variable to the Windows
API function, giving even more flexibility to the function.
 
<PRE>Keywords          : kbprg PgmApi PgmHowTo MdlGnrl
Version           : 2.0 7.0 97
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 28, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
