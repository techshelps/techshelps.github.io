

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: Using Eval Function with Parameters in Parameter Queries </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q161013">
<META NAME="KBModify" CONTENT="1997/08/29">
<META NAME="KBCreate" CONTENT="1996/12/13">
<META NAME="Keywords" CONTENT="kbusage SynFnc QryParm">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  If you use the Eval() function with a parameter expression in the criteria of a query, you do not need to explicitly declare the parameter in order to run the query in code.  If ...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA1S,QDN9,QBT6,QBV4,QAHE,QBWS,QAB4,QAHP,QBS0,QACF,QA5F,QAMA,QAB9,QBVV,QAY5 P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: Using Eval Function with Parameters in Parameter Queries</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q161013</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 2.0, 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
If you use the Eval() function with a parameter expression in the criteria
of a query, you do not need to explicitly declare the parameter in order
to run the query in code.
<P>
If you do not use the Eval() function and you do not explicitly declare the
parameter, you may receive the following error message when you run the
query in code, where n represents a number of parameters.
<P>
<P><h3>In Microsoft Access 7.0 and 97</h3>
 
<P>
<PRE>      Run-time error 3061:
      Too few parameters. Expected n.

</PRE><h3>In Microsoft Access 2.0</h3>
 
<P>
<PRE>      n parameters were expected, but only 0 were supplied.

</PRE>This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
NOTE: Visual Basic for Applications is called Access Basic in Microsoft
Access version 2.0. For more information about Access Basic, please refer
to the "Building Applications" manual.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following example demonstrates how to use the Eval() function with a
parameter expression in a query:

<OL><P><LI>Open the sample database Northwind.mdb.

<P><LI>Create a new query based on the Orders table:
<P>
<P><PRE>      Query: QryEval
      -----------------------------------------------
      Type: Select Query
</PRE><P>
<P><PRE>      Field: OrderID (or Order ID in version 2.0)
<PRE></PRE>         Table: Orders
      Field: OrderDate (or Order Date in version 2.0)
         Table: Orders
         Criteria: =Eval("Forms!FrmEval!Text0")

</PRE><P><LI>Save the QryEval query and close it.

<P><LI>Create a new form not based on any table or query in Design view:
<P>
<P><PRE>      Form: FrmEval
      -----------------------------
      Caption: Eval Form
</PRE><P>
<P><PRE>      Text box:
<PRE></PRE>         Name: Text0
      Command button:
         Name: Command0
         Caption: Run Query
         OnClick: [Event Procedure]

</PRE><P><LI>Set the OnClick property of the command button to the following event
   procedure.
<P>
   In Microsoft Access 7.0 and 97:
<P>
<P><PRE>      Private Sub Command0_Click()
<PRE></PRE>         Dim MyDB As Database
         Dim MySet As RecordSet
         Set MyDB = CurrentDb()
         Set MySet = MyDB.OpenRecordSet("QryEval")
         MySet.MoveFirst
         MsgBox MySet!OrderID
         MySet.Close
      End Sub

   In Microsoft Access 2.0:

      Sub Command0_Click()
         Dim MyDB As Database
         Dim MySet As RecordSet
         Set MyDB = CurrentDb()
         Set MySet = MyDB.OpenRecordSet("QryEval")
         MySet.MoveFirst
         MsgBox MySet![Order ID]
         MySet.Close
      End Sub

</PRE><P><LI>Save the FrmEval form, and then open it in Form view.

<P><LI>In Microsoft Access 7.0 and 97, type 8/4/94 in the text box, and then
   click the Run Query button. In Microsoft Access 2.0, type 7/5/93 in the
   text box, and then click the Run Query button. Note that a message box
   appears that displays an Order ID number.
<P>
</OL>If you want to further test what happens when you do not use the Eval()
function and you do not explicitly declare the query parameter, follow
these steps:

<OL><P><LI>Open the QryEval query in Design view.

<P><LI>Change the OrderDate (or Order Date in version 2.0) criteria to
   [Forms]![FrmEval]![Text0].

<P><LI>Save the query and close it.

<P><LI>Open the FrmEval form in Form view.

<P><LI>In Microsoft Access 7.0 and 97, type 8/4/94 in the text box, and then
   click the Run Query button. In Microsoft Access 2.0, type 7/5/93 in the
   text box, and then click the Run Query button.
<P>
   Note that in Microsoft Access 7.0 and 97, you receive the following
   error message:
<P>
<P><PRE>      Run-time error 3061:
      Too few parameters. Expected 1.
</PRE><P>
   In Microsoft Access 2.0, you receive the following error message:
<P>
<P><PRE>      1 parameters were expected, but only 0 were supplied.
</PRE><P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about parameter queries, search the Help Index for
"parameter queries."
 
<PRE>Keywords          : kbusage SynFnc QryParm
Version           : 2.0 7.0 97
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
