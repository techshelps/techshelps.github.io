

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OFF97: Kill Statement May Delete All Files in a Folder </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q169093">
<META NAME="KBModify" CONTENT="1998/02/27">
<META NAME="KBCreate" CONTENT="1997/05/27">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In any of the programs listed at the beginning of this article, if you run a Visual Basic for Applications macro that includes the Kill statement, the macro may delete all of the files stored in a folder on a network server.  CAUSE =====  This beha...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGB,QAFI,QBS0,QAPN,QAEF,QBCT,QAGC,QAB9,QBVV,QAH4,QDKD,QDL9,QBWO,QBWN,QAYL P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>OFF97: Kill Statement May Delete All Files in a Folder</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 27, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q169093</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Office 97 for Windows
<LI>Microsoft Excel 97 for Windows
<LI>Microsoft Word 97 for Windows
<LI>Microsoft Access 97
<LI>Microsoft PowerPoint 97 for Windows
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
In any of the programs listed at the beginning of this article, if you run
a Visual Basic for Applications macro that includes the Kill statement, the
macro may delete all of the files stored in a folder on a network server.
<P>
<P><h2>CAUSE</h2>
 
<P>
This behavior may occur when all of the following conditions are true:

<UL><LI>A drive letter is mapped to a folder on a network server.
<P>
<P><PRE>    -and-
</PRE>
<LI>The network server is running Microsoft Windows NT Server, version
   3.51 or 4.0, or Microsoft Windows NT Workstation, version 3.51 or 4.0.
<P>
<P><PRE>    -and-
</PRE>
<LI>The current directory is the root directory of the mapped network drive.
<P>
<P><PRE>    -and-
</PRE>
<LI>You use syntax for the Kill statement that is similar to either of the
   following
<P>
<P><PRE>      Kill ""
</PRE><P>
<P><PRE>      -or-
</PRE><P>
<P><PRE>      Kill &lt;FileList&gt;
</PRE><P>
   where &lt;FileList&gt; is a variable that refers to nothing (""), a variable
   that is uninitialized, or a variable that refers to a path that does not
   include a file name.
<P>
</UL>If all of the above conditions are true, all of the files in the root
directory of the mapped network drive may be deleted without warning.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft support engineers can help explain the
functionality of a particular macro, they will not modify these examples to
provide added functionality, nor will they help you construct macros to
meet your specific needs. If you have limited programming experience, you
may want to consult one of the Microsoft Solution Providers. Solution
Providers offer a wide range of fee-based services, including creating
custom macros. For more information about Microsoft Solution Providers,
call Microsoft Customer Information Service at (800) 426-9400.
<P>
To prevent files from being deleted by the Kill statement, verify that the
Kill statements always refer to both a valid path and a valid file name.
The following examples demonstrate the syntax to use:
<P>
<PRE>   Kill "\\server\share\myfiles\*.old"

   Kill "E:\myfiles\*.old"

   Dim FileList As String
   FileList = "*.old"
   Kill "\\server\share\myfiles\" &amp; FileList

   Dim FileList As String, NetPath As String
   NetPath = "\\server\share\myfiles\"
   FileList = "*.old"
   Kill NetPath &amp; FileList

</PRE>These are all valid uses of the Kill statement.
<P>
You can also prevent this problem from occurring by making sure that there
are no drive letters that are mapped to shares on the network server. The
problem occurs only if a drive letter is mapped to the server.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in the Microsoft products
listed at the beginning of this article. We are researching this problem
and will post new information here in the Microsoft Knowledge Base as it
becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The Kill statement in Visual Basic for Applications allows you to delete
files from a disk. The syntax is as follows:
<P>
<PRE>   Kill &lt;pathname&gt;

</PRE>The variable &lt;pathname&gt; refers to the path and file name of the file (or
files) that you want to delete. You can use multiple character (*) and
single character (?) wildcards to specify multiple files that you want to
delete with the Kill statement.
<P>
If you want to delete all of the files in a folder, make sure that the
path name that is used by the Kill statement ends in "*.*." For example, to
delete all of the files in the folder E:\myfiles, you could use the
following code:
<P>
<PRE>   Kill "E:\myfiles\*.*"

   -or-

   Dim FileList As String
   FileList = "*.*"
   Kill "E:\myfiles\" &amp; FileList

</PRE>Do NOT use a path name without a valid file name. For example, the
following Kill statements may cause the problem described in this article
to occur:
<P>
<PRE>   Kill ""

   Kill "\\server\share\"

   Kill "\\server\share\myfiles\"

   Kill "E:\"

   Kill "E:\myfiles\"

   Dim FileList As String
   Kill FileList

   Dim FileList As String
   Kill "\\server\share\myfiles\" &amp; FileList

</PRE>If the current folder or the folder that is specified in the Kill statement
is stored on a computer running Microsoft Windows 95, or if the folder is
stored on a computer running Microsoft Windows NT, and no drive letter is
mapped to the server, you receive the following error message
<P>
<PRE>   Run-time error '53':
   File not found

</PRE>if the path name is invalid. In this case, no files are deleted.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about the Kill statement, click the Office Assistant
in the Visual Basic Editor, type "kill" (without the quotation marks),
click Search, and then click to view "Kill Statement."
<P>
NOTE: If the Assistant is hidden, click the Office Assistant button on the
Standard toolbar. If Microsoft Help is not installed on your computer,
please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../OFFICE/Q120802.htm">Q120802</A></B>
   TITLE     : Office: How to Add/Remove a Single Office
               Program or Component
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: XL97 xlvbainfo<BR>
Keywords          : kbprg<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>
Issue type        : kbbug<BR>
Solution Type     : kbworkaround<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 27, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
