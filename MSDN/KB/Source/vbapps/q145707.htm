

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: Using Automation to Print Microsoft Access Reports </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q145707">
<META NAME="KBModify" CONTENT="1997/10/24">
<META NAME="KBCreate" CONTENT="1996/06/12">
<META NAME="Keywords" CONTENT="kbole kbusage RptOthr">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  By carrying out the DoCmd object's OpenReport method, you can print Microsoft Access reports from any Automation client application, such as the Microsoft Visual Basic Progr...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA1S,QDN9,QAPN,QBS0,QAUR,QAOX,QA7H,QAY5,QAW6,QAH6,QANG,QA2K,QAZV,QBV8,QAU7 P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: Using Automation to Print Microsoft Access Reports</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 24, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q145707</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
By carrying out the DoCmd object's OpenReport method, you can print
Microsoft Access reports from any Automation client application, such
as the Microsoft Visual Basic Programming System, Microsoft Excel, or
Microsoft Project. This enables you to implement Microsoft Access as the
reporting component in your application solutions.
<P>
NOTE: This article explains a technique demonstrated in the sample
files, RptSampl.exe (for Microsoft Access for Windows 95 version 7.0)
and RptSmp97.exe (for Microsoft Access 97). For information about how
to obtain these sample files, please see the following articles in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../ACCESS/Q145777.htm">Q145777</A></B>
   TITLE     : ACC95: Microsoft Access Sample Reports Available on MSL

   ARTICLE-ID: <B><A HREF="../ACCESS/Q175072.htm">Q175072</A></B>
   TITLE     : ACC97: Microsoft Access 97 Sample Reports Available on MSL

</PRE><h2>MORE INFORMATION</h2>
 
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
CAUTION: Following the steps in this example will modify the sample
database Northwind.mdb. You may want to back up the Northwind.mdb file or
perform these steps on a copy of the Northwind database.
<P>
NOTE: The following code is designed for the retail version of Microsoft
Access. If you are using the run-time version of Microsoft Access, please
refer to the "Run-time Version of Microsoft Access" section later in this
article.
<P>
<P><h3>Retail Version of Microsoft Access</h3>
 

<OL><P><LI>Open Microsoft Access.

<P><LI>Create a new, blank database.

<P><LI>Create a module and type the following in the Declarations section:
<P>
<P><PRE>      Option Explicit
      ' In other applications like Microsoft Visual Basic,
      ' you can include a reference to Microsoft Access to
      ' gain the use of Access constants. Or, use the following
      ' constant values...
      ' Global Const acNormal = 0
      ' Global Const acDesign = 1
      ' Global Const acPreview = 2
      ' -----------------------------------------------------
      ' Application Quit options...
      ' saves all objects without displaying a dialog box:
      ' Global Const acSaveYes = 0
      ' displays a dialog box that asks whether you want to save any
      ' database objects that have been changed but not saved:
      ' Global Const acPrompt = 1
      ' quits Microsoft Access without saving any objects:
      ' Global Const acExit = 2
</PRE>
<P><LI>Type the following procedure:
<P>
<P><PRE>      Function OLEOpenReport(strDBName As String, _
<PRE></PRE>                             strRptName As String, _
                             Optional ByVal intDisplay As Variant, _
                             Optional ByVal strFilter As Variant, _
                             Optional ByVal strWhere As Variant) As Boolean

         On Error GoTo OLEOpenReport_Err

         ' Create Automation object.
         Dim objAccess As Object
         Set objAccess = CreateObject("Access.Application")

         ' Open the supplied database.
         ' Optional parameter at the end of statement
         ' indicates exclusive mode if set to True...
         objAccess.OpenCurrentDatabase strDBName, False

         ' The OpenReport method uses the following arguments...
         ' Report Name - Name of the report object.
         ' View - Display in Print Preview or send to printer.
         '        acNormal - Print report
         '        acDesign - open report in design (n/a in runtime)
         '        acPreview - open in preview window
         ' Filter Name - Name of a saved filter query.
         ' Where Condition = valid SQL where condition.

         If IsMissing(intDisplay) Then intDisplay = acNormal
         If IsMissing(strFilter) Then strFilter = ""
         If IsMissing(strWhere) Then strWhere = ""
         objAccess.DoCmd.OpenReport strRptName, intDisplay, strFilter, _
            strWhere

         ' Close Microsoft Access session instance...
         objAccess.Quit acExit

         Set objAccess = Nothing
         OLEOpenReport = True
      OLEOpenReport_End:
         Exit Function

      OLEOpenReport_Err:
         MsgBox Error$(), vbInformation, "Automation"
         Resume OLEOpenReport_End
      End Function

</PRE><P><LI>To test this function, type the following line in the Debug window, and
   then press ENTER.
<P>
<P><PRE>       ?OLEOpenReport("c:\MSOffice\Access\Samples\Northwind.mdb", _
<PRE></PRE>                      "Invoice", strWhere:="OrderId = 10251")

</PRE></OL>The function will open the Northwind database, open the Invoice report,
set the recordset to OrderId# 10251, and print the report to the printer.
<P>
NOTE: Make sure to supply the applicable path to files as defined on your
system.
<P>
<P><h3>Run-Time Version of Microsoft Access</h3>
 
<P>
The run-time version of Microsoft Access will only support the use of
the Automation GetObject() function.

<OL><P><LI>Open Microsoft Access.

<P><LI>Create a new, blank database.

<P><LI>Create a module and type the following in the Declarations section:
<P>
<P><PRE>      Option Explicit
      ' In other applications like Microsoft Visual Basic,
      ' you can include a reference to Microsoft Access to
      ' gain the use of Microsoft Access constants. Or, use the following
      ' constant values...
      ' Global Const acNormal = 0
      ' Global Const acDesign = 1
      ' Global Const acPreview = 2
      ' -----------------------------------------------------
      ' Application Quit options...
      ' saves all objects without displaying a dialog box:
      ' Global Const acSaveYes = 0
      ' displays a dialog box that asks whether you want to save any
      ' database objects that have been changed but not saved:
      ' Global Const acPrompt = 1
      ' quits Microsoft Access without saving any objects:
      ' Global Const acExit = 2
</PRE>
<P><LI>Type the following procedure:
<P>
<P><PRE>      Function OLEOpenReportRuntime(strDBName As String, _
<PRE></PRE>                                    strRptName As String, _
                                    Optional ByVal intDisplay As Variant, _
                                    Optional ByVal strFilter As Variant, _
                                    Optional ByVal strWhere As Variant _
                                    ) As Boolean

         On Error GoTo OLEOpenReportRuntime_Err

         Dim x As Long
         Dim objAccess As Object

         ' Open the run-time instance and database...
         ' ------------------------------------------
         ' The use of the Chr$(34) function supplies
         ' quotation marks around the database name which is
         ' required by Shell when the optional command
         ' line parameter contains spaces...

         x = Shell("c:\myapp\Office\msaccess.exe " &amp;_
         Chr$(34) &amp; strDBName &amp; Chr$(34) &amp; _
         "/Runtime /Wrkgrp " &amp; Chr$(34) &amp; _
         "c:\myapp\system.mdw" &amp; Chr$(34))

         ' If you are using Microsoft Access 97, msaccess.exe will be
         ' in the Office subfolder of the folder in which you
         ' installed your runtime application.

         ' If you are using Microsoft Access 7.0, use the following:

         ' x = Shell("c:\Program Files\Common Files\Microsoft Shared\" &amp; _
         ' "Microsoft Access Runtime\msaccess.exe " &amp; _
         ' Chr$(34) &amp; strDBName &amp; Chr$(34))

         Set objAccess = GetObject(strDBName)

         ' The OpenReport method uses the following arguments...
         ' Report Name - Name of the report object.
         ' View - Display in Print Preview or send to printer.
         '        acNormal - Print report
         '        acDesign - open report in design (n/a in runtime)
         '        acPreview - open in preview window
         ' Filter Name - Name of a saved filter query.
         ' Where Condition = valid SQL where condition.

         If IsMissing(intDisplay) Then intDisplay = acNormal
         If IsMissing(strFilter) Then strFilter = ""
         If IsMissing(strWhere) Then strWhere = ""
         objAccess.DoCmd.OpenReport strRptName, intDisplay, strFilter, _
            strWhere

         ' Close Microsoft Access session instance...
         objAccess.Quit acExit

         Set objAccess = Nothing
         OLEOpenReportRuntime = True
      OLEOpenReportRuntime_End:
         Exit Function

      OLEOpenReportRuntime_Err:
         MsgBox Error$(), vbInformation, "Automation"
         Resume OLEOpenReportRuntime_End
      End Function

</PRE><P><LI>To test this function, type the following line in the Debug window, and
   then press ENTER.
<P>
<P><PRE>      ?OLEOpenReportRuntime("c:\MSOffice\Access\Samples\Northwind.mdb", _
<PRE></PRE>                             "Invoice", strWhere:="OrderId = 10251")

</PRE></OL>The function will open the Northwind database, open the Invoice report,
set the recordset to OrderId# 10251, and print the report to the printer.
<P>
NOTE: Make sure to supply the applicable path to files as defined on your
system.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about Automation, please see the following article
in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q147816.htm">Q147816</A></B>
   TITLE       ACC: Using Microsoft Access as an Automation Server

</PRE>For more information about using Microsoft Access as an Automation
server, search on the phrase "Servers," and then "Automation" or ask the
Microsoft Access 97 Office Assistant.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: VB OLE Controlling Server<BR>
Keywords          : kbole kbusage RptOthr<BR>
Version           : 7.0 97<BR>
Platform          : WINDOWS<BR>
Hardware          : x86<BR>
Issue type        : kbinfo<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 24, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
