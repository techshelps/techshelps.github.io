

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC95: GetObject Sample Function Does Not Detect Excel 7.0 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q155201">
<META NAME="KBModify" CONTENT="1997/08/29">
<META NAME="KBCreate" CONTENT="1996/08/23">
<META NAME="Keywords" CONTENT="AutoGnrl DcmHlp kbinterop kbprg IntpOleA">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  The GetObject Function Example in online Help for Microsoft Access for Windows 95 states that you can use GetObject to test if a copy of Microsoft Excel is already running. ...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QAY5,QA1S,QBWS,QAB9,QBV8,QDN9,QBVV,QDO5,QDL9,QBWQ,QBWO,QBWN,QAB4,QAPF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC95: GetObject Sample Function Does Not Detect Excel 7.0</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q155201</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access version 7.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
The GetObject Function Example in online Help for Microsoft Access for
Windows 95 states that you can use GetObject to test if a copy of Microsoft
Excel is already running. This works fine with versions of Microsoft Excel
earlier than version 7.0. However, because Microsoft Excel version 7.0 does
not register itself in the running object table (ROT) by default on
startup, you must use a combination of Windows application programming
interface (API) functions and GetObject to be certain to detect an instance
of Microsoft Excel 7.0.
<P>
The following is an excerpt from the GetObject Function Example in
Microsoft Access for Windows 95 online Help:
<P>
<PRE>   ' Test to see if there is a copy of Microsoft Excel already running.
   On Error Resume Next   ' Defer error trapping.
   ' GetObject function called without the first argument returns a
   ' reference to an instance of the application. If the application
   ' is not running, an error occurs. Note the comma used as the first
   ' argument placeholder.

   Set MyXL = GetObject(, "Excel.Application")

</PRE>Notice that the comment states that Set MyXL = GetObject(,
"Excel.Application") will detect whether there is an instance of Excel
already open.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
In versions of Microsoft Excel prior to version 7.0, Excel was
automatically registered in the ROT when it opened. Microsoft Excel 7.0
doesn't automatically register in the ROT by default on startup. The
following sample code uses Windows API functions to detect if Microsoft
Excel 7.0 is running and to register it in the ROT.

<OL><P><LI>Create a module and type the following lines in the Declarations
   section:
<P>
<P><PRE>      Option Explicit
</PRE><P>
<P><PRE>      Const WM_USER = 1024
      Declare Function FindWindow Lib "user32" Alias _
<PRE></PRE>         "FindWindowA" (ByVal lpClassName As String, ByVal _
         lpWindowName As Long) As Long

      Declare Function SendMessage Lib "user32" Alias _
         "SendMessageA" (ByVal hwnd As Long, ByVal wMsg _
         As Long, ByVal wParam As Long, lParam As Long) As Long

</PRE><P><LI>Type the following procedure:
<P>
<PRE>      Sub DetectExcel()
      '=================================================================
      'This procedure detects if Excel7 is running and registers it.
      '=================================================================
      '
      Dim hwnd As Long
      'Find the windows handle for Excel.
      'This returns a valid handle number,
      'or zero if Excel is not running
      hwnd = FindWindow("XLMAIN", 0)
      If hwnd = 0 Then
         'Excel is not running
         Exit Sub
      End If
      'Excel is running
      'Registers Excel in the ROT
      SendMessage hwnd, WM_USER + 18, 0, 0
      End Sub

</PRE></OL>In the GetObject Function Example in Microsoft Access for Windows 95 online
Help, you can call the DetectExcel function before you run the GetObject
procedure to be certain Microsoft Excel 7.0 is detected. For example, you
can change the Help excerpt referenced earlier to:
<P>
<PRE>   ' Test to see if there is a copy of Microsoft Excel already running.
   On Error Resume Next   ' Defer error trapping.
   ' GetObject function called without the first argument returns a
   ' reference to an instance of the application. If the application
   ' is not running, an error occurs. Note the comma used as the first
   ' argument placeholder.
   DetectExcel
   Set MyXL = GetObject(, "Excel.Application")

</PRE><h2>REFERENCES</h2>
 
<P>
For more information about the GetObject function, search on the phrase
"GetObject," and then view "GetObject Function" using the Answer Wizard
from the Microsoft Access for Windows 95 Help menu.
<P>
For more information about GetObject not detecting Microsoft Excel Version
7.0, please see the following articles in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q138723.htm">Q138723</A></B>
   TITLE     : Code to Access MS Excel Doesn't Work in Version 7.0

   ARTICLE-ID: <B><A HREF="../ACCESS/Q153029.htm">Q153029</A></B>
   TITLE     : Microsoft Excel 95 Doesn't Respond Correctly to GetObject
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: started open<BR>
Keywords          : AutoGnrl DcmHlp kbinterop kbprg IntpOleA<BR>
Technology        : kbole<BR>
Version           : 7.0<BR>
Platform          : WINDOWS<BR>
Hardware          : x86<BR>
Issue type        : kbdocerr<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
