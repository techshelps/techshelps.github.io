

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: Creating a Dynamic List in a Custom Dialog Box </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q129072">
<META NAME="KBModify" CONTENT="1997/12/01">
<META NAME="KBCreate" CONTENT="1995/04/18">
<META NAME="Keywords" CONTENT="kbcode kbprg PgmCtrlsStd">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel, it is possible to create a dynamic list or a list in a custom dialog box that changes based on some control chosen in the dialog box, such as a button. The following example shows how you can change the list that is displayed in...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA01,QAE1,QBXS,QBJZ,QA2Q,QAG2,QBWS,QAYL,QANX,QAH4,QBVP,QAY2,QBVR,QAGB,QAFF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: Creating a Dynamic List in a Custom Dialog Box</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 1, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q129072</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, versions 5.0, 5.0c
<LI>Microsoft Excel for Windows 95, version 7.0
<LI>Microsoft Excel for the Macintosh, versions 5.0, 5.0a
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Excel, it is possible to create a dynamic list or a list in a
custom dialog box that changes based on some control chosen in the dialog
box, such as a button. The following example shows how you can change the
list that is displayed in a custom dialog box while the dialog box is still
displayed.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>In this example, the dialog box that you create displays an empty list
(List Box control) when you first run the dialog box. When you choose the
List One button, a list of different kinds of fruit is displayed in the
dialog box. When you choose the List Two button, a list of colors appears
in the dialog box.
<P>
<P><h3>To Create the Custom Dialog Box</h3>
 

<OL><P><LI>To add a new dialog sheet to your workbook, choose Macro from the Insert
   menu, and then choose Dialog.

<P><LI>Use the Forms toolbar to add a list box and two buttons to your dialog
   box.

<P><LI>Type the text you want to appear on the custom buttons, such as "List
   One" and "List Two" (without the quotation marks).

<P><LI>Select the list box. In the Name box, type "List" (without the quotation
   marks), and press ENTER.

<P><LI>Select one of the custom buttons (not OK or Cancel), and choose Object
   from the Format menu. In the Format Object dialog box, select the
   Control tab. Select the Dismiss check box, and then choose OK.

<P><LI>Repeat Step 4 with the second custom button.
<P>
</OL><h3>To Enter Data on the Worksheet</h3>
 

<OL><P><LI>On a worksheet in the workbook, enter the two different lists that you
   want displayed in the dialog box. For example, enter the following on
   Sheet1:
<P>
<PRE>      A1: Apple    B1: Red
      A2: Orange   B2: White
      A3: Banana   B3: Blue
      A4: Pear     B4: Green
      A5: Grapes   B5: Yellow

</PRE></OL><h3>To Create a Procedure to Run the Dialog Box</h3>
 

<OL><P><LI>Insert a new module sheet in your workbook by choosing Macro from the
   Insert menu, and then choosing Module.

<P><LI>In the new module, enter the following:
<P>
<P><PRE>      ' Dimension variables.
      Dim chosen As Integer, selected As Integer, MyList As Object
      Dim ListOneRange As String, ListTwoRange As String
</PRE><P>
<PRE>      Sub Main()
         ' Set value of variable 'chosen' to 1.
         chosen = 1

         ' Assign value of variable 'MyList' to listbox in dialog box.
         Set MyList = Application.DialogSheets("Dialog1").ListBoxes("List")

         ' Define variable 'ListOneRange' as the cell range
         ' that contains your first list on the worksheet.
         ListOneRange = "Sheet1!$A$1:$A$5"

         ' Define variable 'ListTwoRange' as the cell range
         ' that contains your second list on the worksheet.
         ListTwoRange = "Sheet1!$B$1:$B$5"

         ' Initialize the list displayed in dialog box to be empty.
         MyList.ListFillRange = ""

         ' Loop to display the dialog box.
         ' Loop displays the dialog box until it is canceled.
         While chosen &gt; 0

            show:

            ' Display the dialog box.
            DialogSheets("Dialog1").show

            ' If the value of 'chosen' is 1, the List One button was 
            ' chosen.
            If chosen = 1 Then

               ' Set range to first list on worksheet
               ' and display dialog box again.
               MyList.ListFillRange = ListOneRange
               GoTo show

            ' If the value of 'chosen' is 2, the List One button was 
            ' chosen.
            ElseIf chosen = 2 Then

               ' Set range to second list on worksheet
               ' and display dialog box again.
               MyList.ListFillRange = ListTwoRange
               GoTo show

            End If

         ' Repeat loop.
         Wend

      End Sub

      Sub OptionOne_Click()

         ' Set value of variable 'chosen' to 1.
         chosen = 1

      End Sub

      Sub OptionTwo_Click()

         ' Set value of variable 'chosen' to 2.
         chosen = 2

      End Sub

      Sub CancelChosen()

         ' Set value of variable 'chosen' to 0.
         chosen = 0

      End Sub

      Sub OKChosen()

         ' OK button was chosen.
         ' Set value of variable 'selected' to number
         ' corresponding to the item selected in the list.
         selected = MyList.ListIndex

         If selected = 0 Then

            ' Alert if no item is selected.
            MsgBox "nothing selected"

         Else

            ' Display selected item in message box.
            MsgBox MyList.List(selected)

         End If

      End Sub

</PRE><P><LI>Select the dialog sheet tab. On the dialog frame, select the OK button
   and choose Assign macro from the Tools menu. From the Macro
   Name/Reference list, select OKChosen, and choose OK.

<P><LI>Select the Cancel button and choose Assign macro from the Tools menu.
   From the Macro Name/Reference list, select CancelChosen, and choose OK.

<P><LI>Select the first custom button (List One in this example) and choose
   Assign macro from the Tools menu. From the Macro Name/Reference list,
   select OptionOne_Click, and choose OK.

<P><LI>Select the second custom button (List Two in this example) and choose
   Assign macro from the Tools menu. From the Macro Name/Reference list,
   select OptionTwo_Click, and choose OK.

<P><LI>To display the dialog box, choose Macro from the Tools menu. From the
   Macro Name/Reference list, select Main, and choose Run.
<P>
</OL>When you choose the List One button in the dialog box, the first list, the
list of fruit is displayed. When you select List Two button, the second
list, the list of colors, is displayed. When you choose OK, a dialog box
appears with the item that you selected in the list. To close the custom
dialog box, choose Cancel.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about the Control Properties Button or the List Box
Button, choose the Search button in Help and type:
<P>
<PRE>   custom dialogs, adding controls
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 5.00 5.00a 5.00c howto<BR>
Keywords          : kbcode kbprg PgmCtrlsStd<BR>
Version           : WINDOWS: 5.0,5.0c,7.0; MACINTOSH:5.0,5.0a<BR>
Platform          : MACINTOSH WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 1, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
