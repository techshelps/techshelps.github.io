

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: Parsing File Names Selected from Common Dialog Control </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q155980">
<META NAME="KBModify" CONTENT="1997/09/02">
<META NAME="KBCreate" CONTENT="1996/09/13">
<META NAME="Keywords" CONTENT="IntpCstm kbinterop kbprg PgmParse">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  The Common Dialog OLE custom control enables you to select multiple file names from the File Open dialog box. This article demonstrates how to determine which files the user...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAFI,QA2Q,QA7O,QA2S,QA1S,QA01,QAB5,QAOE,QAMN,QAUJ,QAG2,QATX,QBWS,QDN9,QBVR P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: Parsing File Names Selected from Common Dialog Control</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 2, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q155980</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
The Common Dialog OLE custom control enables you to select multiple file
names from the File Open dialog box. This article demonstrates how to
determine which files the user selects and to fill a list box with the
selected file names.
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
When using the Common Dialog control to select multiple files from the File
Open dialog box, the FileName property of the Common Dialog control will
return both the path and names of the selected files. If the Common Dialog
control only allows long file names to be selected, the path and file names
are returned in a null character delimited format, with the path listed
first, and the files listed subsequently as follows:
<P>
<PRE>   {Path}&lt;NULL&gt;{File1.EXT}&lt;NULL&gt;{File2.EXT}&lt;NULL&gt;...{FileN.EXT}

</PRE>For example, choosing the files Northwind.mdb, Solutions.mdb, and
Orders.mdb from the C:\MSOffice\Access\Samples folder results in:
<P>
<PRE>   C:\MSOffice\Access\Samples Northwind.mdb Solutions.mdb Orders.mdb

</PRE>If the Common Dialog control only allows short file names to be selected,
the path and file names are returned in a space delimited format,with the
path listed first, and the files listed subsequently as follows:
<P>
<PRE>   {Path}&lt;Space&gt;{File1.EXT}&lt;SPACE&gt;{File2.EXT}&lt;SPACE&gt;...{FileN.EXT}

</PRE>To determine the path and file name of each selected file, follow these
steps:

<OL><P><LI>Open the sample database Northwind.mdb.

<P><LI>Create a new table with the following structure:
<P>
       Table: SelectedFiles
       --------------------
       Field Name: FileName
<PRE>          Data Type: Text
          Field Size: 255
          Indexed: No

</PRE><P><LI>Save the table as SelectedFiles.

<P><LI>Create a new form in Design view.

<P><LI>On the Insert menu, click Custom Control, and select the Common Dialog
    control.

<P><LI>Set the Name property of the Common Dialog control to CmnDlg.

<P><LI>Add the following controls to the form:
<P>
       Form: FileList
       --------------
<P>
       Command button:
<PRE>          Name: Command0
          Caption: Select Files
          OnClick: [Event Procedure]

       List box:
          Name: FileList
          RowSource: SelectedFiles

</PRE><P><LI>On the View menu, click Code, and type the following text into the
    Form module:
<P>
       Option Compare Database
       Option Explicit
<P>
       Private Sub Command0_Click()
<PRE>           Dim MyString As String
           Dim Path As String
           Dim FileName As String
           Dim I As Integer, J As Integer
           Dim s As String
           ReDim filearray(1) As String

           '=============================================================
           '                    LONG FILE NAME USAGE
           '
           ' Use the following two lines of code for LONG file names only.
           ' If you will be using long file names, please unremark the
           ' following two lines and remark out the two lines under the
           ' Short File Name Usage section below.
           '
           Me!CmnDlg.flags = cdlOFNAllowMultiselect _
              + cdlOFNFileMustExist + cdlOFNHideReadOnly + _
              cdlOFNNoDereferenceLinks + cdlOFNLongNames + cdlOFNExplorer
           s = Chr(0)


           '=============================================================
           '                    SHORT FILE NAME USAGE
           ' Use the following two lines of code for SHORT file names only.
           ' If you will be using short file names, please unremark the
           ' following two lines and remark out the two lines under the
           ' Long File Name Usage section above.
           '
           '  Me!CmnDlg.flags = cdlOFNAllowMultiselect _
                + cdlOFNFileMustExist + cdlOFNHideReadOnly
           ' s = Chr(32)
           '==============================================================

           Me!CmnDlg.DialogTitle = "Select 1 or More Files"
           Me!CmnDlg.Filter = "All Files(*.*)|*.*|"
           Me!CmnDlg.FileName = ""
           Me!CmnDlg.CancelError = True
           On Error GoTo SampleFiles_Err
           Me!CmnDlg.MaxFileSize = 1024
           Me!CmnDlg.ShowOpen
           MyString = Me!CmnDlg.FileName

           If InStr(1, MyString, s) &gt; 0 Then
               If (InStr(MyString, "\") + 1) = InStr(MyString, s) Then
                  Path = Trim(Left$(MyString, InStr(1, MyString, s) - 1))
               Else
                  Path = Trim(Left$(MyString, InStr(1, MyString, s) - 1))_
                     &amp; "\"
               End If
               FileName = Right$(MyString, Len(MyString) _
                   - InStr(1, MyString, s))
               MyString = FileName
               J = 0

               For I = 1 To Len(FileName)
                   If Mid$(FileName, I, 1) = s Then
                       J = J + 1
                   End If
               Next
               J = J + 1
               ReDim filearray(1 To J) As String
               For I = 1 To UBound(filearray)
                   If I &lt; UBound(filearray) Then
                      FileName = Trim(Left$(MyString, InStr(1, MyString, _
                         s) - 1))
                      MyString = Trim(Right$(MyString, Len(MyString) _
                          - InStr(1, MyString, s)))
                   Else
                       FileName = MyString
                   End If
                   filearray(I) = FileName
               Next
           Else
               For I = 1 To Len(MyString)
                  If Mid$(MyString, I, 1) = "\" Then
                      Path = Left$(MyString, I)
                      FileName = Right$(MyString, Len(MyString) - I)
                  End If
               Next
               filearray(UBound(filearray)) = FileName
           End If
           DBEngine.Workspaces(0).BeginTrans
           For I = 1 To UBound(filearray)
              CurrentDb.Execute "INSERT INTO SelectedFiles(FileName)" _
              &amp; " VALUES ('" &amp; Path &amp; filearray(I) &amp; "');"
           Next
           DBEngine.Workspaces(0).CommitTrans
           ReDim filearray(1) As String
           Me!FileList.Requery

       SampleFiles_Exit_Sub:
           Exit Sub

       SampleFiles_Err:
           If Err.Number &lt;&gt; cdlcancel Then MsgBox Err.Description
           Resume SampleFiles_Exit_Sub
       End Sub

</PRE><P><LI>Save the form as FileList.

<P><LI>Open the form in Form view and click the Select Files button.

<P><LI>Select multiple files from the OpenFile dialog box. Note that the
    selected files are added to the list box.
<P>
</OL> 
<PRE>Keywords          : IntpCstm kbinterop kbprg PgmParse
Version           : 7.0
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbinfo</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 2, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
