

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: Sorting Alphanumeric Text as Numeric Values </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q126931">
<META NAME="KBModify" CONTENT="1998/02/03">
<META NAME="KBCreate" CONTENT="1995/03/07">
<META NAME="Keywords" CONTENT="kbcode kbprg kbualink97 PgmHowto">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel, the value in a cell will be sorted based on its  contents. That is, a value formatted as a number will be sorted differently than a number formatted as text. Because of this difference, you may receive unexpected results when yo...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QAB6,QAG8,QAU3,QAMR,QAKD,QAKC,QBS0,QAYL,QAFH,QATX,QACE,QAJQ,QAMB,QBJZ P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: Sorting Alphanumeric Text as Numeric Values</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 3, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q126931</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
<LI>Microsoft Excel for Windows 95, version 7.0
<LI>Microsoft Excel for Windows NT, version 5.0
<LI>Microsoft Excel for Windows, versions 5.0, 5.0c
<LI>Microsoft Excel for the Macintosh, versions 5.0, 5.0a
<LI>Microsoft Excel 98 Macintosh Edition
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Excel, the value in a cell will be sorted based on its 
contents. That is, a value formatted as a number will be sorted
differently than a number formatted as text. Because of this difference,
you may receive unexpected results when you mix numeric and text strings in 
a sort.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>When Microsoft Excel sorts text, it does so one character at a time from
left to right. For example, if you sort the values 1 and 1A, when these
values are formatted as text, the text with the fewest number of
characters is at the top (1) of the sorted values, while text with the
greatest number characters is at the bottom (1A). Each character is then
sorted from 0 to 9 and then from A to Z.
<P>
For example, suppose you have the following values in a worksheet:
<P>
<PRE>   A1:     1
   A2:     12
   A3:     1A1
   A4:     1A2
   A5:     2

</PRE>The desired sort result is 1, 1A1, 1A2, 2, 12. However, the actual result
will be 1, 2, 12, 1A1, 1A2.
<P>
The following Visual Basic custom function can be used to perform the
desired sort result.
<P>
<P><h3>Sample Visual Basic Procedure</h3>
 
<P>
Type the following code in a Visual Basic module:
<P>
<PRE>   ' Assume a cell entry of 1A 'myvalue' is the cell reference of the 
   ' number to be sorted.
   Function numsort(myvalue As Variant)

      ' Calculates the function any time the worksheet recalculates
      Application.Volatile

      ' Initializes the variable count as 0
      Count = 0

      ' If the cell is numeric, the variable 'count' is equal to the value 
      ' in the cell times 1000
      ' 1A is not numeric
      If IsNumeric(myvalue) Then
         Count = myvalue * 1000
      Else
         no_text_yet = True

         ' Sets a For-Next loop from 1 to the length of characters in the 
         ' cell.
         ' With 1A, the For-next loop will be from 1 to 2
         For x = 1 To Len(myvalue)

            ' Sets the variable 'current' to the character of position x, 
            ' for a length of 1 character.
            ' The first time through, 'current' will equal 1.
            ' The second time through, 'current' will equal A.
            current = Mid(myvalue, x, 1)
            If IsNumeric(current) Then

               ' If 'current' is numeric, then 'count' is equal to itself
               ' times ten plus 'current'.
               ' The first time through, 'count' is numeric and will equal 
               ' 1.
               ' (0 * 1 + 1).
               ' The second time through, A is not numeric.
               Count = Count * 10 + current

            ' If 'current' is not numeric, then 'count' is equal to itself
            ' times 1000 plus the ASCII value of the letter.
            ' The first time through, 1 is numeric.
            ' The second time through, 'count' equals itself(1) times 1000 
            ' + the ASCII character value of A(65), or 1065
         Else
            Count = Count * 1000 + Asc(current)

            ' Exits the For-Next loop as soon as we reach the first alpha
            ' character
            Exit For
         End If
      Next

      ' If the For-Next loop variable is not equal to the length of 
      ' characters of myvalue, then the last characters must be calculated.
      If x &lt;&gt; Len(myvalue) Then Count = _
         Count + Right(myvalue, Len(myvalue) - x) * 0.001

         ' This will happen as soon as we encounter the first alpha 
         ' character. In this is the case, 'count' equals itself plus the 
         ' right character of the total length minus the For-Next variable 
         ' "x".
      End If
      numsort = Count
   End Function

</PRE><h3>To Use the Custom Function</h3>
 

<OL><P><LI>Type the following in a worksheet:
<P>
<P><PRE>      A1: 1
      A2: 12
      A3: 1A1
      A4: 1A2
      A5: 2
</PRE>
<P><LI>Select the range A1:A5, and click Sort on the Data menu. Select the
   No Header Row option in the My List Has group box, and Sort By
   Column A in ascending order.

<P><LI>The worksheet will be sorted as follows:
<P>
<P><PRE>      A1: 1
      A2: 2
      A3: 12
      A4: 1A1
      A5: 1A2
</PRE>
<P><LI>Enter the following formula into cell B1:
<P>
<P><PRE>      B1: =numsort(A1)
</PRE><P>
   NOTE: This should return a numeric value of 1000 for the number 1
   in cell A1.

<P><LI>With cell B1 selected, click Copy on the Edit menu. Select cells
   B2:B5 and click Paste on the Edit menu.
<P>
   The worksheet should have the following information in it:
<P>
<PRE>      A1:     1     B1:     1000
      A2:     2     B2:     2000
      A3:     12    B3:     12000
      A4:     1A1   B4:     1065.001
      A5:     1A2   B5:     1065.002

</PRE><P><LI>Select the range A1:B5, and click Sort on the Data menu. Select the
   No Header Row option in the My List Has box, and Sort By Column B in
   ascending order. The sort should return the following:
<P>
<PRE>      A1:     1     B1:    1000
      A2:     1A1   B2:    1065.001
      A3:     1A2   B3:    1065.002
      A4:     2     B4:    2000
      A5:     12    B5:    12000
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 5.0 5.00 5.0a 5.00a 5.0c 5.00c 7.00 8.00 97<BR>
sort weird wrong incorrect XL97 alpha-numeric<BR>
Keywords          : kbcode kbprg kbualink97 PgmHowto<BR>
Version           : WINDOWS: 5.0, 5.0c, 7.0, 97; MACINTOSH: 5.0, 5.0a, 98<BR>
Platform          : MACINTOSH WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 3, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
