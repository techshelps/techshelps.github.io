

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL97: How to Place a Checkmark Next to a Menu Item </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q161926">
<META NAME="KBModify" CONTENT="1998/03/13">
<META NAME="KBCreate" CONTENT="1997/01/08">
<META NAME="Keywords" CONTENT="kbcode kbprg kbualink97 xlvbahowto xlvbainfo xlui">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  If you are working with menus programmatically, you may want to add a checkmark next to a particular menu item to show the item is active. For example, when you point to Filter on the Data menu and then click AutoFilter, a checkmark is placed next ...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAVI,QAAW,QABI,QBS0,QAF0,QBWS,QAH4,QBVP,QAYZ,QABH,QANS,QACI,QBJZ,QA01,QBWR P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL97: How to Place a Checkmark Next to a Menu Item</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 13, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q161926</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
If you are working with menus programmatically, you may want to add a
checkmark next to a particular menu item to show the item is active.
For example, when you point to Filter on the Data menu and then click
AutoFilter, a checkmark is placed next to AutoFilter to show that the
AutoFilter is currently turned on.
<P>
This article provides sample macros for programmatically adding a
checkmark next to a custom menu item using the new CommandBars object
model.
<P>
NOTE: There is no way to programmatically add a checkmark next to a
built-in menu item; you can add checkmarks only to custom items.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft support engineers can help explain the
functionality of a particular macro, they will not modify these examples to
provide added functionality, nor will they help you construct macros to
meet your specific needs. If you have limited programming experience, you
may want to consult one of the Microsoft Solution Providers. Solution
Providers offer a wide range of fee-based services, including creating
custom macros. For more information about Microsoft Solution Providers,
call Microsoft Customer Information Service at (800) 426-9400.

<OL><P><LI>Save and close any open workbooks and then open a new workbook.

<P><LI>Start the Visual Basic Editor (press ALT+F11).

<P><LI>On the Insert menu, click Module.

<P><LI>In the module, add the following code:
<P>
<PRE>      Sub checked_menuitem()

          'add a new docked CommandBar
          Set mybar = CommandBars.Add(Name:="my command bar", _
              Position:=msoBarTop)
          mybar.Visible = True

          'add a menu to the custom CommandBar
          Set mypopup = mybar.Controls.Add(Type:=msoControlPopup)
          mypopup.Caption = "my menu"

          'add a menu item to the menu just added to the CommandBar
          Set myitem = mypopup.Controls.Add(Type:=msoControlButton)
          myitem.Caption = "my menu item"
          myitem.OnAction = "check_item"

      End Sub

      Sub check_item()

          Set mypopup = CommandBars("my command bar").Controls("my menu")

          If mypopup.Controls("my menu item").State = msoButtonDown Then

              'remove check next to menu item
              mypopup.Controls("my menu item").State = msoButtonUp
              MsgBox "menu item is now unchecked"
          Else

              'add check next to menu item
              mypopup.Controls("my menu item").State = msoButtonDown
              MsgBox "menu item is now checked"
          End If
      End Sub

</PRE><P><LI>Run the checked_menuitem macro.
<P>
</OL>This will create a docked CommandBar with a single menu called "my menu".

<OL><P><LI>Activate Microsoft Excel (press ALT+F11).

<P><LI>Click the "my menu" drop-down and then click "my menu item".
<P>
</OL>A message box will display a message stating the menu is now checked
and the "my menu item" will have a checkmark placed next to it.

<OL><P><LI>Repeat Step 7.
<P>
</OL>A message box will display a message stating the menu is now unchecked
and the "my menu item" will not have a checkmark placed next to it.
<P>
<P><h3>Removing the Custom CommandBar</h3>
 

<OL><P><LI>On the Tools menu, click Customize.

<P><LI>On the Toolbars tab, scroll through the list of Toolbars and then
   select the "my command bar" item.

<P><LI>Click Delete and then click OK.

<P><LI>Click Close.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about CommandBars, click the Office Assistant, type
"commandbar", click Search, and then click to view "CommandBar Object".
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 97 XL97<BR>
Keywords          : kbcode kbprg kbualink97 xlvbahowto xlvbainfo xlui<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 13, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
