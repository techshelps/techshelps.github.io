

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>VARTYPE() Function Returns Value 8204 for Variant/Array </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q131336">
<META NAME="KBModify" CONTENT="1997/07/29">
<META NAME="KBCreate" CONTENT="1995/06/08">
<META NAME="Keywords" CONTENT="kbcode kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Visual Basic Programming System, Applications Edition, when you use the VarType function to return the value indicating the subtype of a variable, the function returns the value 8204 if your variable is defined as either of the followi...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAUD,QBS0,QAYL,QAKD,QAG1,QAY5,QALW,QAB9,QAP2,QA4Q,QBV8,QBVP,QAKC,QAJQ,QA5F V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>VARTYPE() Function Returns Value 8204 for Variant/Array</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q131336</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Programming System, Applications Edition,
   version 1.0
<LI>Microsoft Excel for Windows, versions 5.0, 5.0c
<LI>Microsoft Excel for the Macintosh, versions 5.0, 5.0a
<LI>Microsoft Project for Windows, version 4.0
<LI>Microsoft Project for the Macintosh, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Visual Basic Programming System, Applications Edition, when
you use the VarType function to return the value indicating the subtype of
a variable, the function returns the value 8204 if your variable is defined
as either of the following:

<UL><LI>A variant that contains an array.
<P>
   -or-

<LI>An array that contains variant data type.
<P>
</UL>Note that the VarType function never returns the value 8192 for the vbarray
subtype. This is by design, because if your variable is an array, the
VarType function returns a value indicating not only that the variable is
an array, but also the type of the elements that the array contains.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
When you use the VarType function to return the subtype of your variable,
the function returns the value 8204 for a variable that is an array of type
Variant (8192 for Array + 12 for Variant). If your variable is a Variant
that contains an array, the function also returns the value 8204. An array
of type Variant is exactly the same as a Variant that contains an array.
The following Visual Basic example demonstrates this:
<P>
Microsoft provides examples of Visual Basic procedures for illustration
only, without warranty either expressed or implied, including but not
limited to the implied warranties of merchantability and/or fitness for a
particular purpose. This Visual Basic procedure is provided 'as is' and
Microsoft does not guarantee that it can be used in all situations.
Microsoft does not support modifications of this procedure to suit
customer requirements for a particular purpose.
<P>
<P><h3>Visual Basic Example</h3>
 
<P>
The following procedure shows that the variable q, defined as a variant
containing an array of values, x, y, and z, is actually an array of
variant data types.
<P>
<PRE>Sub VarConArray()
   ' Dimension variables
   Dim x As Integer, y As Integer, z As Integer
   Dim q As Variant

   ' Set value of variable q equal to variant containing
   ' array of integer data type
   q = Array(x, y, z)

   MsgBox VarType(q)        ' returns value 8204
   MsgBox TypeName(q)       ' returns value Variant()
   MsgBox TypeName(q(1))    ' returns value Integer

   ' assign first element in array to string value "test"
   q(1) = "test"

   MsgBox VarType(q)        ' returns value 8204
   MsgBox TypeName(q)       ' returns value Variant()
   MsgBox TypeName(q(1))    ' returns value String

End Sub

</PRE>Even though each element of the array q is dimensioned as an Integer data
type, you can assign the value of any of the elements to a String type
variable without receiving an error message. Additionally, when you use the
TypeName function to return the type of one of the elements of q, the value
String is returned, instead of Integer.
<P>
Therefore, when you dimension an array as Variant data type, each element
of the array is Variant data type. That is, an array of variants is the
same as an array dimensioned as Variant data type as in the following
example:
<P>
<PRE>   Dim x(3) As Variant

</PRE><h2>REFERENCES</h2>
 
<P>
For more information about the VarType Function, choose the Search button
in Visual Basic Reference Help, and type:
<P>
<PRE>   VarType
</PRE> 
<PRE>Keywords          : kbcode kbprg
Version           : 1.00    | 1.00
Platform          : MACINTOSH WINDOWS</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
