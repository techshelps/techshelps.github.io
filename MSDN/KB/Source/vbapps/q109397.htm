

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: How to Run Visual or Access Basic Functions with DDE </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q109397">
<META NAME="KBModify" CONTENT="1997/08/29">
<META NAME="KBCreate" CONTENT="1994/01/02">
<META NAME="Keywords" CONTENT="IntpDde kbinterop">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  Microsoft Access does not have any facility for running Visual Basic for Applications functions as a dynamic data exchange (DDE) server. However, Visual Basic functions can ...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA1S,QBS0,QDN9,QAMA,QA5F,QAZ2,QAY5,QBWS,QAY2,QAB9,QBV8,QBVP,QAH4,QAIH,QAJH P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: How to Run Visual or Access Basic Functions with DDE</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q109397</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access 1.0, 1.1, 2.0, 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
Microsoft Access does not have any facility for running Visual Basic for
Applications functions as a dynamic data exchange (DDE) server. However,
Visual Basic functions can be run from a DDE client application if they
are contained in an SQL statement used to initiate a DDE conversation with
Microsoft Access using the SQL topic.
<P>
This article describes how to run Visual Basic functions from a DDE client
application.
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
NOTE: Visual Basic for Applications is called Access Basic in Microsoft
Access versions 1.x and 2.0. For more information about Access Basic,
please refer to the "Introduction to Programming" manual in Microsoft
Access version 1.x or the "Building Applications" manual in Microsoft
Access version 2.0
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
A DDE client application such as Microsoft Excel or Microsoft Word for
Windows can use DDE to run commands in Microsoft Access as a DDE server.
When it is used as a DDE server, Microsoft Access recognizes any of the
following as a valid command:

<UL><LI>The name of a macro in the currently open database

<LI>Any action that you can run in Visual Basic using the DoCmd object (or
   DoCmd statement in versions 1.x and 2.0).

<LI>The OpenDatabase and CloseDatabase commands, which are used only for
   DDE operations
<P>
</UL>Note that Microsoft Access does not have DDE server functionality for
running Visual Basic functions.
<P>
<P><h3>How to Run Visual Basic Functions from a DDE Client Application</h3>
 
<P>
The following examples demonstrate how to run Visual Basic functions from
DDE client applications. In both examples below, the MyFunct() function is
run against the None table in the sample database Northwind.mdb (or
NWIND.MDB in versions 1.x and 2.0).
<P>
NOTE: In the following sample code, an underscore (_) is used as a
line-continuation character. Remove the underscore from the end of
the line when re-creating this code in Access Basic.
<P>
This is the DDE command issued by Microsoft Excel or Word for Windows:
<P>
<PRE>   chan=DDEInitiate("MSACCESS", "Northwind;SQL SELECT MyFunct() _
      FROM None;")

</PRE>Note that you can name any table that exists in the database in the FROM
clause.
<P>
The following example demonstrates how to add a new customer to the
Customers table in the Northwind database by running a Visual Basic
function from a DDE client application:

<OL><P><LI>Open the sample database Northwind.mdb (or NWIND.MDB in version 2.0 and
   1.x) and create a new table called None with one field of any data type.

<P><LI>Create a module and type the following line in the Declarations section:
<P>
<P><PRE>      Option Explicit
</PRE>
<P><LI>Type the following procedure:
<P>
<P><PRE>      Function AddNewCust$ (CustomerID$, CompanyName$)
<PRE></PRE>         Dim MyDB As Database, MyRD as Recordset
         Set MyDB = CurrentDB()
         Set MyRD = MyDB.OpenRecordset("Customers") ' Open the table.
         MyRD.AddNew                                ' Prepare new record.
         MyRD("CustomerID") = CustomerID$           ' Set record key.
         MyRD("CompanyName") = CompanyName$         ' Set company name.
         MyRD.Update                                ' Save changes.
         MyRD.Close                                 ' Close the table.
      End Function

   NOTE: In versions 1.x and 2.0, there is a space in Customer ID
         and Company Name.

</PRE><P><LI>In the DDE client application, initiate a DDE conversation with
   MSACCESS as the application and an SQL statement that calls the
   AddNewCust() function you created in step 2 as the topic.
<P>
</OL>The following example demonstrates how to run the AddNewCust() function
from Microsoft Excel versions 5.0 and 7.0, Microsoft Excel 97, and
Microsoft Word 97:
<P>
NOTE: In the following sample code, an underscore (_) is used as a
line-continuation character. Remove the underscore from the end of
the line when re-creating this code in Access Basic.
<P>
<PRE>   Sub AddNewCustomer
      Dim chan as Integer
      chan=DDEInitiate("MSACCESS", "NorthWIND.MDB;SQL SELECT _
        AddNewCust$(""JOHNJ"",""John's Place"") FROM None;")
      DDETerminate chan
   End Sub

</PRE></OL>The following example demonstrates how to run the AddNewCust() function
from Word for Windows versions 6.0 and 7.0:
<P>
NOTE: In the following sample code, an underscore (_) is used as a
line-continuation character. Remove the underscore from the end of
the line when re-creating this code in Access Basic.
<P>
<PRE>   Sub MAIN
      DDETerminateAll
      qt$ = Chr$(34)
      Funct$ = "AddNewCust$(" + qt$ + "JOHNJ" + qt$ + "," + qt$ + _
         "John's Place" + qt$ + ")"
      Chan = DDEInitiate("MSACCESS", _
         "Northwind;SQL SELECT " + Funct$ + "FROM None;")
      DDETerminate Chan
   End Sub

</PRE><h2>REFERENCES</h2>
 
<P>
For more information about using Microsoft Access as a DDE server, search
for "DDE" using the Microsoft Access 97 Help Index.
 
<PRE>Keywords          : IntpDde kbinterop
Version           : 1.0 1.1 2.0 7.0 97
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
