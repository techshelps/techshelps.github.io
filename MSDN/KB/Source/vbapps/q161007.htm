

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: Use NotInList Event to Add a Record to Combo Box (95/97) </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q161007">
<META NAME="KBModify" CONTENT="1997/08/29">
<META NAME="KBCreate" CONTENT="1996/12/13">
<META NAME="Keywords" CONTENT="kbusage PgmHowTo FmsCmbo FmsEvnt FmrHowTo MdlRcd">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  This article demonstrates two methods of using the NotInList event to add a new record to a combo box on a form.  This article assumes that you are familiar with Visual Basic for...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QA5V,QAO4,QBXS,QA1S,QAB4,QBWS,QBS0,QAH4,QAFF,QDN9,QAPF,QAHE,QADZ,QAZV P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: Use NotInList Event to Add a Record to Combo Box (95/97)</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q161007</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
This article demonstrates two methods of using the NotInList event to add
a new record to a combo box on a form.
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following examples use the Orders form in the Northwind sample
database to demonstrate two methods of using the NotInList event to add a
record to a combo box. The NotInList event fires when you type a new
company in the CustomerID (labeled Bill To:) field on the Orders form.
<P>
The first method uses Visual Basic for Applications code to
programmatically add a new record to the Customers table. The second
method opens the Customers form and lets you add a new record yourself.
<P>
CAUTION: Following the steps in this example will modify the sample
database Northwind.mdb. You may want to back up the Northwind.mdb file or
perform these steps on a copy of the Northwind database.
<P>
<P><h3>Method 1: Using Code to Add a Record to a Table</h3>
 

<OL><P><LI>Open the sample database Northwind.mdb.

<P><LI>Open the Orders form in Design view.

<P><LI>Note that the LimitToList property of the CustomerID combo box is set
   to Yes.

<P><LI>Set the OnNotInList property of the CustomerID combo box to the
   following event procedure:
<P>
<P><PRE>      Private Sub CustomerID_NotInList (NewData As String, Response As _
<PRE></PRE>                                        Integer)
         Dim Db As Database
         Dim Rs As Recordset
         Dim Msg As String
         Dim CR As String

         CR = Chr$(13)

         ' Exit this subroutine if the combo box was cleared.
         If NewData = "" Then Exit Sub

         ' Confirm that the user wants to add the new customer.
         Msg = "'" &amp; NewData &amp; "' is not in the list." &amp; CR &amp; CR
         Msg = Msg &amp; "Do you want to add it?"
         If MsgBox(Msg, vbQuestion + vbYesNo) = vbNo Then
            ' If the user chose not to add a customer, set the Response
            ' argument to suppress an error message and undo changes.
            Response = acDataErrContinue
            ' Display a customized message.
            MsgBox "Please try again."
         Else
            ' If the user chose to add a new customer, open a recordset
            ' using the Customers table.
            Set Db = CurrentDB
            Set Rs = Db.OpenRecordset("Customers", DB_OPEN_TABLE)
            ' Let code execution continue if a run-time error occurs.
            On Error Resume Next
            ' Create a new record.
            Rs.AddNew
               ' Ask the user to input a new Customer ID.
               Msg = "Please enter a unique 5-character Customer ID."
               Rs![CustomerID] = InputBox(Msg)
               ' Assign the NewData argument to the CompanyName field.
               Rs![CompanyName] = NewData
            ' Save the record.
            Rs.Update

            If Err Then
               ' If a run-time error occurred while attempting to add a new
               ' record, set the Response argument to suppress an error
               ' message and undo changes.
               Response = acDataErrContinue
               ' Display a customized message.
               MsgBox Error$ &amp; CR &amp; CR &amp; "Please try again.",vbExclamation
            Else
               ' If a run-time error did not occur, set Response argument
               ' to indicate that new data is being added.
               Response = acDataErrAdded
            End If

         End If
      End Sub

</PRE><P><LI>Open the Orders form in Form view.

<P><LI>Add a new order, typing ABC Wholesalers in the Bill To field, and
   enter ABCWH when you are prompted for the Customer ID. The code in
   the OnNotInList event procedure runs and adds a new customer to the
   Customers table.
<P>
</OL><h3>Method 2: Using a Form to Add a New Record</h3>
 

<OL><P><LI>Open the sample database Northwind.mdb.

<P><LI>Open the Orders form in Design view.

<P><LI>Note that the LimitToList property of the CustomerID combo box is set
   to Yes.

<P><LI>Set the OnNotInList property of the CustomerID combo box to the
   following event procedure:
<P>
<P><PRE>      Private Sub CustomerID_NotInList (NewData As String, Response As _
<PRE></PRE>                                        Integer)
         Dim Result
         Dim Msg As String
         Dim CR As String

         CR = Chr$(13)

         ' Exit this subroutine if the combo box was cleared.
         If NewData = "" Then Exit Sub

         ' Ask the user if he or she wishes to add the new customer.
         Msg = "'" &amp; NewData &amp; "' is not in the list." &amp; CR &amp; CR
         Msg = Msg &amp; "Do you want to add it?"
         If MsgBox(Msg, vbQuestion + vbYesNo) = vbYes Then
            ' If the user chose Yes, start the Customers form in data entry
            ' mode as a dialog form, passing the new company name in
            ' NewData to the OpenForm method's OpenArgs argument. The
            ' OpenArgs argument is used in Customer form's Form_Load event
            ' procedure.
            DoCmd.OpenForm "Customers", , , , acAdd, acDialog, NewData
         End If

         ' Look for the customer the user created in the Customers form.
         Result = DLookup("[CompanyName]", "Customers", _
                  "[CompanyName]='" &amp; NewData &amp; "'")
         If IsNull(Result) Then
            ' If the customer was not created, set the Response argument
            ' to suppress an error message and undo changes.
            Response = acDataErrContinue
            ' Display a customized message.
            MsgBox "Please try again!"
         Else
            ' If the customer was created, set the Response argument to
            ' indicate that new data is being added.
            Response = acDataErrAdded
         End If
      End Sub

</PRE><P><LI>Save and close the Orders form.

<P><LI>Open the Customers form in Design view.

<P><LI>Set the form's OnLoad property to the following event procedure:
<P>
<P><PRE>      Private Sub Form_Load ()
<PRE></PRE>         If Not IsNull(Me.OpenArgs) Then
            ' If form's OpenArgs property has a value, assign the contents
            ' of OpenArgs to the CompanyName field. OpenArgs will contain
            ' a company name if this form is opened using the OpenForm
            ' method with an OpenArgs argument, as done in the Orders
            ' form's CustomerID_NotInList event procedure.
            Me![CompanyName] = Me.OpenArgs
         End If
      End Sub

</PRE><P><LI>Save and close the Customers form, and then open the Orders form in Form
   view.

<P><LI>Add a new Order, typing ABC Distributors in the Bill To field. When
   the Customers form opens, type ABCDI in the Customer ID field, and type
   anything you like for the remaining customer information.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about the NotInList event, search the Help Index for
"NotInList event," or ask the Microsoft Access 97 Office Assistant.
<P>
For more information about the LimitToList property, search the Help Index
for "LimitToList property," or ask the Microsoft Access 97 Office
Assistant.
<P>
You can find more information, instructions, and examples in the Developer
Solutions sample application (Solutions.mdb) included with Microsoft
Access 97. Open the database and click "Work with combo boxes, list boxes,
subforms, and subreports" in the Select a Category of Examples box; then
click "Add a new record to a list" in the Select an Example box.
 
<PRE>Keywords          : kbusage PgmHowTo FmsCmbo FmsEvnt FmrHowTo MdlRcd
Version           : 7.0 97
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
