

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FILE: Integrating a PowerPoint 7.0 Slide Show w/Visual Basic </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q143038">
<META NAME="KBModify" CONTENT="1998/03/11">
<META NAME="KBCreate" CONTENT="1996/01/24">
<META NAME="Keywords" CONTENT="kbinterop kbprg kbsample vbwin vb4win">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  This article describes how to perform some common integration tasks with Microsoft PowerPoint version 7.0 for Windows using Microsoft Visual Basic version 4.0 for Windows. It also discusses how to use OLE Automation with PowerPoint and how to use t...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QDKP,QBVQ,QBS0,QAJM,QDO6,QAPN,QAW6,QAH4,QAB4,QAGB,QBWS,QAMB,QBXS,QDL9,QBWQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FILE: Integrating a PowerPoint 7.0 Slide Show w/Visual Basic</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 11, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q143038</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Standard, Professional and Enterprise Editions of Microsoft Visual
   Basic for Windows, version 4.0
<LI>Microsoft PowerPoint for Windows, version 7.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article describes how to perform some common integration tasks with
Microsoft PowerPoint version 7.0 for Windows using Microsoft Visual Basic
version 4.0 for Windows. It also discusses how to use OLE Automation with
PowerPoint and how to use the PowerPoint Viewer.
<P>
<P><h3>Creating and Running a Simple Presentation</h3>
 

<OL><P><LI>Create a new project in Visual Basic.

<P><LI>On the Tools menu, click References, and check "PowerPoint 7.0 Object
   Library" in the list box.

<P><LI>Put a command button on Form1, and click View Code from the Project
   window.

<P><LI>Paste the following code in the General Declarations section:
<P>
<PRE>   '---------------------------------------------------------------------
   ' PPTester.frm - PowerPoint 7.0 OLE Automation tester.
   '---------------------------------------------------------------------
   Private PowerPoint As PowerPoint.Application
   Private mblnPowerPointStarted As Boolean

   '---------------------------------------------------------------------
   ' Creates and runs the presentation.
   '---------------------------------------------------------------------
   Private Sub Command1_Click()
       Dim pptPres As Presentation ' Presentation Object (your PPT file).
       Dim pptSlide As Slide       ' Slide Object (the current slide).

    '-----------------------------------------------------------------
    ' Establish a connection with PowerPoint.
    '-----------------------------------------------------------------
    mblnPowerPointStarted = _
    OLEConnect(PowerPoint, "PowerPoint.Application")

    '-----------------------------------------------------------------
    ' Make PowerPoint visible.
    '-----------------------------------------------------------------
    If MsgBox _
      ("Would you like to watch the building of the presentation?", _
       vbYesNo) = vbYes Then PowerPoint.AppWindow.Visible = True

    '-----------------------------------------------------------------
    ' Add a new (blank) presentation to PowerPoint.
    '-----------------------------------------------------------------
    Set pptPres = PowerPoint.Presentations.Add

    '-----------------------------------------------------------------
    ' Add the first slide to the empty presentation.
    '-----------------------------------------------------------------
    Set pptSlide = pptPres.Slides.Add(1, ppLayoutTitle)

    '-----------------------------------------------------------------
    ' Set the slide background to the Parchment shade that is built
    ' into PowerPoint.
    '-----------------------------------------------------------------
    pptSlide.Background.Fill.PresetShaded ppShadeFromTitle, 2, _
        ppPresetShadeParchment

    '-----------------------------------------------------------------
    ' Change the text, background, and text color of the first object.
    '-----------------------------------------------------------------
    With pptSlide.Objects(1)
        .Text = "Welcome to OLE Automation"
        .GraphicFormat.Fill.PresetTextured ppPresetTextureGreenMarble
        .Text.Font.Color.RGB = vbWhite
    End With

    '-----------------------------------------------------------------
    ' Configure this slide to display for 25 seconds, and disappear as
    ' it is displayed.
    '-----------------------------------------------------------------
    With pptSlide.SlideShowEffects
        .AdvanceTime = 5
        .EntryEffect = ppEffectDissolve
    End With

    '-----------------------------------------------------------------
    ' Add a second slide at the end.
    '-----------------------------------------------------------------
    Set pptSlide = pptPres.Slides.Add(2, ppLayoutTitleOnly)

    '-----------------------------------------------------------------
    ' Display the new slide.
    '-----------------------------------------------------------------
    PowerPoint.ActiveWindow.View.GotoSlide 2

    '-----------------------------------------------------------------
    ' Begin modifications to the new slide.
    '-----------------------------------------------------------------
    With pptSlide
        '-------------------------------------------------------------
        ' Set up the slide show effects for this slide.
        '-------------------------------------------------------------
        With .SlideShowEffects
            .AdvanceTime = 5
            .EntryEffect = ppEffectDissolve
        End With

        '-------------------------------------------------------------
        ' Change the background to a gradient fill.
        '-------------------------------------------------------------
        With .Background.Fill
            .ForeColor.RGB = RGB(128, 0, 0)
            .OneColorShaded ppShadeFromTitle, 4, -0.05
        End With

        '-------------------------------------------------------------
        ' Change the title (using the title object).
        '-------------------------------------------------------------
        .Objects.Title.Text = "Examples"

        '-------------------------------------------------------------
        ' Modify the title using Objects(1).
        '-------------------------------------------------------------
        With .Objects(1)
            '---------------------------------------------------------
            ' Change the text to embossed.
            '---------------------------------------------------------
            .Text.Font.Embossed = ppTrue

            '---------------------------------------------------------
            ' Add a shaded background for the slide.
            '---------------------------------------------------------
            .GraphicFormat.Fill.OneColorShaded ppShadeHorizontal, _
               4, -0.05

            '---------------------------------------------------------
            ' Change the object border to embossed.
            '---------------------------------------------------------
            .GraphicFormat.Shadow.Type = ppShadowEmbossed
        End With
    End With
    '-----------------------------------------------------------------
    ' Run the slide show.
    '-----------------------------------------------------------------
    With pptPres.SlideShow
        .AdvanceMode = ppSlideShowUseSlideTimings
        .Run ppSlideShowFullScreen
    End With

End Sub

   '---------------------------------------------------------------------
   ' Terminates PowerPoint if this application started it.
   '---------------------------------------------------------------------
   Private Sub Form_Unload(Cancel As Integer)
       If mblnPowerPointStarted Then PowerPoint.Quit
   End Sub

   '---------------------------------------------------------------------
   ' OLEConnect takes a pointer to an object variable and class name. If
   ' this function is successful, then the function returns true and the
   ' obj argument points to a valid OLE Automation object.
   '----------------------------------------------------------------------
   Private Function OLEConnect(obj As Object, sClass As String) As Boolean
    '------------------------------------------------------------------
    ' Temporarily turn off error handling.
    '-----------------------------------------------------------------
    On Error Resume Next
    Set obj = GetObject(, sClass)

    '-----------------------------------------------------------------
    ' If GetObject failed, then try Create.
    '-----------------------------------------------------------------
    If Err = 429 Then
        '-------------------------------------------------------------
        ' Resume Error Handling.
        '-------------------------------------------------------------
        On Error GoTo OLEConnect_Err
        Set obj = CreateObject(sClass)

        '-------------------------------------------------------------
        ' If this line was executed, then the app was started.
        '-------------------------------------------------------------
        OLEConnect = True

    '-----------------------------------------------------------------
    ' If any other error occurs, then display it and exit.
    '-----------------------------------------------------------------
    ElseIf Err &lt;&gt; 0 Then
        GoSub OLEConnect_Err
    End If

    Exit Function

   '---------------------------------------------------------------------
   ' Display error message and abort.
   '---------------------------------------------------------------------
   OLEConnect_Err:
       MsgBox Err.Description, vbCritical
       Unload Me
       Exit Function
   End Function

</PRE><P><LI>Run the program, and click Command1.
<P>
</OL><h3>Running a Presentation on Systems without PowerPoint</h3>
 
<P>
If you plan to distribute your application to systems that do not have
PowerPoint installed, then you cannot use OLE Automation. You can
work around this limitation by using the PowerPoint Viewer (PPTVIEW.EXE)
with the name of the slide. The following code demonstrates how to use the
PowerPoint Viewer to run a slide show from Visual Basic:
<P>
<PRE>   Private Sub Command1_Click
       '----------------------------------------------------------
       ' The following code assumes that PPTVIEW.EXE and your
       ' slides file are in the same directory as your EXE.
       '----------------------------------------------------------
       Shell App.Path &amp; "pptview.exe " &amp; App.Path &amp; "myslides.ppt"
   End Sub

</PRE></OL><h2>MORE INFORMATION</h2>
 
<P>
A complete (and enhanced) PowerPoint OLE Automation sample is available for
download from the Microsoft Software Library:
<P>
<PRE> ~ <A HREF="http://support.microsoft.com/download/support/mslfiles/Vbappt7.exe">Vbappt7.exe</A> <I>(size: 1828600 bytes)</I> 

</PRE>For more information about downloading files from the Microsoft Software
Library, please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../zMiscellaneous/Q119591.htm">Q119591</A></B>
   TITLE     : How to Obtain Microsoft Support Files from
               Online Services
</PRE> 
<PRE>Keywords          : kbinterop kbprg kbsample vbwin vb4win
Technology        : kbvba
Version           : WINDOWS:4.0
Platform          : WINDOWS
Hardware          : x86
Solution Type     : kbfile</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 11, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
