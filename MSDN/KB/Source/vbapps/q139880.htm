

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL7: Visual Basic Example for Creating a PowerPoint Slide Show </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q139880">
<META NAME="KBModify" CONTENT="1997/09/02">
<META NAME="KBCreate" CONTENT="1995/11/19">
<META NAME="Keywords" CONTENT="kbprg PgmHowTo xlwin kbcode kbhowto kbole kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel, you can programmatically control Microsoft PowerPoint, with a Visual Basic for Applications macro that uses OLE automation. To use the properties and methods in the object library provided by PowerPoint, you will need to create ...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QDKP,QBVQ,QBS0,QAH4,QAPN,QAJM,QBXS,QAW6,QBWS,QANF,QBVP,QAOB,QDO6,QBVV,QBHQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL7: Visual Basic Example for Creating a PowerPoint Slide Show</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 2, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q139880</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows 95, version 7.0
<LI>Microsoft PowerPoint for Windows 95, version 7.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Excel, you can programmatically control Microsoft PowerPoint,
with a Visual Basic for Applications macro that uses OLE automation. To use
the properties and methods in the object library provided by PowerPoint,
you will need to create an object variable using the CreateObject function.
Also, if you are planning to use the built-in constants provided by the
object library, you will need to make a reference to the library.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following example creates a presentation, adds graphics and text, and
then runs the slide show.
<P>
Microsoft provides examples of Visual Basic for applications procedures for
illustration only, without warranty either expressed or implied, including
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. This Visual Basic procedure is provided 'as is'
and Microsoft does not guarantee that it can be used in all situations.
Microsoft does not support modifications of this procedure to suit customer
requirements for a particular purpose.
<P>
To run the following macro you will need to perform the following steps:

<OL><P><LI>Open a new workbook and type the following macro code in a new module
   sheet:
<P>
<PRE>   Sub PowerPointOLEAutomation()
   Dim PPT As Object
   Dim Pres As PowerPoint.Presentation
   Dim Slide1 As PowerPoint.Slide
   Dim Slide2 As PowerPoint.Slide
   Dim Slide3 As PowerPoint.Slide
   Dim Slide4 As PowerPoint.Slide
   Dim i as integer

   'creates the PowerPoint Object
   Set PPT = CreateObject("powerpoint.application.7")
   PPT.AppWindow.Visible = True 'Makes PowerPoint visible

   Set Pres = PPT.Presentations.Add 'Adds a blank presentation

   'adds a blank slide
   Set Slide1 = Pres.Slides.Add(1, ppLayoutBlank)
   Set Slide2 = Pres.Slides.Add(2, ppLayoutBlank)
   Set Slide3 = Pres.Slides.Add(3, ppLayoutBlank)
   Set Slide4 = Pres.Slides.Add(4, ppLayoutBlank)

   'you can use universal naming convention (UNC) to point to network share
   'adds a graphic image to the slide
   'these need to be on a separate line
   Slide1.Background.Fill.PresetShaded ppPresetShadeEarlySunset, 1, 1
   Slide2.Background.Fill.PresetShaded ppPresetShadeDaybreak, 1, 1
   Slide3.Background.Fill.PresetShaded ppPresetShadeMahogany, 1, 1
   Slide4.Background.Fill.PresetShaded ppPresetShadeNightfall, 1, 1

   For i = 1 To 4 'starts a FOR loop

       With Pres.Slides(i)
               .Objects.AddTextFrame 5000, 0, 5000 'adds a text frame
               Select Case i
                   Case 1
                       'enters text into the text frame
   .Objects(1).Text = "Today is " &amp; _
   Format(Date, "mm/dd/yy")
                   Case 2
                       .Objects(1).Text = "This Is Just A Test"
                   Case 3
                      .Objects(1).Text = "Please Do Not Be Alarmed"
                   Case 4
                       .Objects(1).Text = "Everything Is OK"
               End Select

               'sets characteristics for the font
               With .Objects(1).Text.Font

                   'screen measurements are done in Twips,
                   'multiply by 20 to get normal pixel size
                       .Size = 50 * 20
                       .Bold = ppTrue
                       .Shadow = ppTrue
               End With
               'center aligns the text
               .Objects(1).Text.ParaFormat.Alignment = ppAlignCenter

       End With
   Next i

   'copies a chart
   ThisWorkbook.Worksheets(1).DrawingObjects("Chart 1").CopyPicture

   PPT.ActiveWindow.View.Paste 'pastes the chart

   'runs a Slide Show presentation
   Pres.SlideShow.Run (ppSlideShowFullScreen)

   'clears the object variable
   Set PPT = Nothing 'This does not close the application

   End Sub

</PRE><P><LI>Create a reference to the PowerPoint object library by activating the
   module sheet that contains the macro. Click References on the Tools menu
   and select the PowerPoint 7.0 Object Library check box, then click OK.

<P><LI>In Sheet1 of the workbook that contains the macro code, type the
   following:
<P>
<P><PRE>      A1: 1
      A2: 2
      A3: 3
</PRE>
<P><LI>Create any type of embedded chart on Sheet1 using the range of A1:A3 as
   the source data.

<P><LI>Run the macro
<P>
</OL><h2>REFERENCES</h2>
 
<P>
Getting Started Controlling Microsoft PowerPoint for Windows 95 Through OLE
Automation - White Paper
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 7.00 PUB_PP powerpt<BR>
Keywords          : kbprg PgmHowTo xlwin kbcode kbhowto kbole kbprg<BR>
Version           : 7.00<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 2, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
