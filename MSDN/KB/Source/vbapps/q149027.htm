

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: Using SQLRetrieve to Return Data to a Protected Worksheet </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q149027">
<META NAME="KBModify" CONTENT="1997/12/01">
<META NAME="KBCreate" CONTENT="1996/03/26">
<META NAME="Keywords" CONTENT="kbcode kbprg PgmOthr">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel, when you use the SQLRetrieve function in a Microsoft  Visual Basic for Applications procedure to return data from an ODBC data  source to a Microsoft Excel worksheet, you may receive the following error message twice and no data...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QBS0,QAB4,QAK7,QAUD,QAYY,QAVY,QAB9,QABH,QABI,QAAP,QALW,QAVZ,QAPF,QDNM P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: Using SQLRetrieve to Return Data to a Protected Worksheet</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 1, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q149027</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, versions 5.0
<LI>Microsoft Excel for Windows NT, version 5.0
<LI>Microsoft Excel for Windows 95, versions 7.0, 7.0a
<LI>Microsoft Excel 97 for Windows
<LI>Microsoft Excel for the Macintosh, versions 5.0, 5.0a
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
In Microsoft Excel, when you use the SQLRetrieve function in a Microsoft 
Visual Basic for Applications procedure to return data from an ODBC data 
source to a Microsoft Excel worksheet, you may receive the following error
message twice and no data will be retrieved:
<P>
<PRE>   Cannot paste data.

</PRE>This error only occurs when you use Microsoft Excel for Windows, version
5.0.
<P>
For all other versions of Microsoft Excel listed at the beginning of
this article, the SQLRetrieve function returns an Error 2015, which
indicates that the function was unable to paste the data to the
worksheet. Also, no data is returned to the worksheet.
<P>
<P><h2>CAUSE</h2>
 
<P>
The error message stated above occurs in Microsoft Excel version 5.0,
only when the destination worksheet has been protected and any or all
cells in the destination range have been locked.
<P>
For Microsoft Excel versions 5.0c and later, SQLRetrieve fails when you
attempt to retrieve data to a protected worksheet, regardless of whether
the cells have been locked or not.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
Microsoft provides programming examples for illustration only, without 
warranty either expressed or implied, including, but not limited to, the 
implied warranties of merchantability and/or fitness for a particular 
purpose. This article assumes that you are familiar with the programming 
language being demonstrated and the tools used to create and debug 
procedures. Microsoft support engineers can help explain the functionality 
of a particular procedure, but they will not modify these examples to 
provide added functionality or construct procedures to meet your specific 
needs. If you have limited programming experience, you may want to contact 
the Microsoft fee-based consulting line at (800) 936-5200. For more 
information about the support options available from Microsoft, please see 
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>To avoid this problem, unprotect the worksheet before you use the
SQLRetrieve function. The following macro example shows how to unprotect
a worksheet, retrieve the data, and then protect the sheet again.
<P>
<P><h3>Visual Basic Macro Code Example</h3>
 
<P>
<PRE>   Sub SQLOpen_Example()
      Dim Chan As Variant
      Dim NumberOfColumns As Variant, NumberOfRows As Variant
      Dim ContentsProtected As Boolean
      Dim ObjectsProtected As Boolean, ScenariosProtected As Boolean

      ' Open the Nwind data source and check for connection errors
      Chan = SQLOpen("DSN=Nwind")
      If IsError(channel) Then
         MsgBox SQLError()(3)
         Exit Sub
      End If

      ' Execute the query statement and check for SQL statement errors
      NumberOfColumns = SQLExecQuery(Chan, "SELECT * FROM Customer")
      If IsError(NumberOfColumns) Then
         MsgBox SQLError()(3)
         SQLClose channel
         Exit Sub
      End If

      ' Set an object variable to reference Sheet1
      Set thesheet = Worksheets("Sheet1")
      With thesheet
         ' If sheet is protected, then store the current values
         ' of the ProtectDrawingObjects and ProtectScenarios
         ' properties so they can be reset later.
         If .ProtectContents = True Then
            ContentsProtected = True
            ObjectsProtected = .ProtectDrawingObjects
            ScenariosProtected = .ProtectScenarios

            ' Unprotect the sheet and assume no password is needed
            .Unprotect
         End If
      End With

      ' Retrieve data to worksheet and check for retrieval errors
      NumberOfRows = SQLRetrieve(Chan, Range("Sheet1!A1"), , , True)
      If IsError(NumberOfRows) Then
         MsgBox SQLError()(3)
      End If

      ' Close the connection
      SQLClose Chan

      ' If the sheet was previously protected, then reprotect it
      ' with the original settings. No password is used in this
      ' example.
      If ContentsProtected = True Then
         thesheet.Protect DrawingObjects:=ObjectsProtected, _
            Contents:=True, Scenarios:=ScenariosProtected
      End If
   End Sub

</PRE><h2>STATUS</h2>
 
<P>
Microsoft is researching this problem and will post new information here
in the Microsoft Knowledge Base as it becomes available.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information on SQLRetrieve, click the Search button in
Microsoft Excel Visual Basic Help and type:
<P>
<PRE>   SQLRetrieve

</PRE>For more information on protecting and unprotecting a worksheet, click
the Search button in Microsoft Excel Visual Basic Help and type:
<P>
<PRE>   Protect

   -or-

   Unprotect
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 5.00 5.00a 5.00c 7.00 7.00a 8.00 97 sheet<BR>
protection book workbook<BR>
Keywords          : kbcode kbprg PgmOthr<BR>
Version           : WINDOWS: 5.0, 7.0, 7.0a, 97; MACINTOSH: 5.0, 5.0a<BR>
Platform          : MACINTOSH WINDOWS<BR>
Issue type        : kbprb<BR>
Solution Type     : kbpending<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 1, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
