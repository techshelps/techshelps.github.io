

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL97: How to Programmatically Perform a Web Query </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q162080">
<META NAME="KBModify" CONTENT="1998/02/27">
<META NAME="KBCreate" CONTENT="1997/01/13">
<META NAME="Keywords" CONTENT="kbcode kbprg kbualink97 xlquery xlvbahowto xlvbainfo">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  A Web query is a new feature in Microsoft Excel 97 that allows you to retrieve data stored on an intranet, the Internet, or the World Wide Web. A Web query can use static parameters, dynamic parameters, or a combination of both. Queries with static...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAHE,QAVZ,QA37,QALZ,QAH4,QBS0,QAPN,QACF,QAUD,QAPF,QAKR,QBVP,QBWS,QAH6,QAP2 P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL97: How to Programmatically Perform a Web Query</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 27, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q162080</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
A Web query is a new feature in Microsoft Excel 97 that allows you to
retrieve data stored on an intranet, the Internet, or the World Wide Web. A
Web query can use static parameters, dynamic parameters, or a combination
of both. Queries with static parameters send a query without any input;
queries with dynamic parameters prompt you for input. Regardless of the
type of parameters in the query, the requested information is pulled from
an Internet or an intranet site, and the results are placed in a worksheet.
<P>
Using a Hypertext Markup Language (HTML) form, you can use two methods to
send parameters to the server: GET and POST. Use GET when you are sending
small amounts of information and POST when you are sending larger amounts
of information. The GET method appends the parameters to the Uniform
Resource Locator (URL). The POST method sends the parameters as a separate
line of text in the query file.
<P>
This article provides example macros that run Web queries that use both the
GET and the POST methods.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft support engineers can help explain the
functionality of a particular macro, they will not modify these examples to
provide added functionality, nor will they help you construct macros to
meet your specific needs. If you have limited programming experience, you
may want to consult one of the Microsoft Solution Providers. Solution
Providers offer a wide range of fee-based services, including creating
custom macros. For more information about Microsoft Solution Providers,
call Microsoft Customer Information Service at (800) 426-9400.
<P>
<P><h3>Programmatically Running a Web Query</h3>
 
<P>
In order to programmatically run a Web query, you must use the Add method
of the QueryTables collection. When you use the Add method, it returns a
QueryTable object that represents the new query table. The syntax for the
Add method is as follows:
<P>
<PRE>   &lt;expression&gt;.Add(Connection, Destination, Sql)

</PRE>where &lt;expression&gt; is required and returns a QueryTable object. The
Connection argument is also required and is the data source for the query
table. In the context of Web queries, you can use one of two types of
Connection strings: URL or FINDER. When you specify the URL type, you use
the complete URL to the server on which you are performing the query (you
can copy the third line from any Web query (.iqy) file and use it as the
URL). When you specify the FINDER type, you use the complete path to an
existing Web query (.iqy) file.
<P>
<P><h3>Creating a Visual Basic Module</h3>
 
<P>
Before you use the examples in this article, you must create a module. To
do this, use the following steps:

<OL><P><LI>Save and close any open workbooks, and then create a new workbook.

<P><LI>Start the Visual Basic Editor (press ALT+F11).

<P><LI>On the Insert menu, click Module.
<P>
</OL><h3>URL Examples</h3>
 
<P>
Static Web Query (GET Method):
<P>
The following example uses static parameters; you are not prompted for the
values to send to the server. To create this macro, use the following
steps:

<OL><P><LI>In the module, type the following code:
<P>
<PRE>      Sub URL_Get_Query()
   
          With ActiveSheet.QueryTables.Add(Connection:= _
              "URL;<B>http://webservices.pcquote.com/cgi-</B>" &amp; _
              "bin/excelget.exe?TICKER=msft", _
              Destination:=Range("a1"))
   
              .BackgroundQuery = True
              .TablesOnlyFromHTML = True
              .Refresh BackgroundQuery:=False
              .SaveData = True
          End With
      End Sub

</PRE><P><LI>Switch to Sheet1 in the workbook.

<P><LI>Run the URL_Get_Query macro.
<P>
</OL>A detailed stock quote for MSFT is returned to Sheet1.
<P>
Dynamic Web Query (POST Method):
<P>
The following example uses dynamic parameters; you are prompted for the
values to send to the server. This example uses the POST method because the
parameters are contained in the query. To create the macro, use the
following steps:

<OL><P><LI>Switch to the Visual Basic Editor and type the following macro in the
   module sheet:
<P>
<PRE>      Sub URL_Post_Query()
   
          With ActiveSheet.QueryTables.Add(Connection:= _
              "URL;<B>http://webservices.pcquote.com/cgi-bin/excel.exe</B>", _
              Destination:=Range("a1"))
   
              .PostText = _
                  "QUOTE0=[""QUOTE0"",""Enter up to 20 symbols separated " 
</PRE></OL>&amp; _
<PRE>                  "by spaces.""]"
   
              .BackgroundQuery = True
              .TablesOnlyFromHTML = True
              .Refresh BackgroundQuery:=False
              .SaveData = True
          End With
      End Sub

</PRE><P><LI>Switch to Sheet2 in the workbook and run the URL_Post_Query macro.
<P>
</OL>Because this example uses dynamic parameters, are prompted for the
parameter values.

<OL><P><LI>In the Enter Parameter Value dialog box, type up to twenty valid stock
   symbols that are separated by a space; for example, type "msft" (without
   the quotation marks).

<P><LI>Click OK.
<P>
</OL>The stock quotes for the stock symbols you entered are returned to a
table in Sheet2.
<P>
<P><h3>FINDER Examples</h3>
 
<P>
Dynamic Query (GET Method):
<P>
With the FINDER type of connection, specify the full path to an existing
Web query (.iqy) file. This example uses the GET method because the Web
query file, "Detailed Stock Quote by PC Quote, Inc.iqy," uses the GET
method. That is, the parameters and the URL of the server are on the third
line in the file. To create the macro, use the following steps:

<OL><P><LI>Switch to the Visual Basic Editor and type the following macro in the
   module sheet:
<P>
<PRE>      Sub Finder_Get_Query()
   
          IQYFile = "c:\Program Files\Microsoft Office\Queries\" &amp; _
              "Detailed Stock Quote by PC Quote, Inc.iqy"
   
          With ActiveSheet.QueryTables.Add(Connection:= _
              "FINDER;" &amp; IQYFile, Destination:=Range("A1"))
   
              .BackgroundQuery = True
              .TablesOnlyFromHTML = True
              .Refresh BackgroundQuery:=False
              .SaveData = True
          End With
      End Sub

</PRE><P><LI>Switch to Sheet3 in the workbook and run the Finder_Get_Query macro.
<P>
</OL>Because this example uses a dynamic parameter, you are prompted for the
parameter value.

<OL><P><LI>In the Enter Parameter Value dialog box, type a valid stock symbol.

<P><LI>Click OK.
<P>
</OL>A detailed stock quote is returned to Sheet3 for the stock symbol you
entered in Step 3.
<P>
Dynamic Query (POST Method):
<P>
With the FINDER type of connection, specify the full path to an existing
Web query (.iqy) file. This example uses the POST method because the Web
query file, "Multiple Stock Quotes by PC Quote, Inc.iqy," uses the POST
method. That is, the parameters are on the fourth line, and the URL of the
server is on the third line in the file. To create the macro, use the
following steps:

<OL><P><LI>Switch to the Visual Basic Editor and type the following macro in the
   module sheet:
<P>
<PRE>      Sub Finder_Post_Query()
   
          IQYFile = "c:\program files\microsoft office\queries\" &amp; _
              "Multiple Stock Quotes by PC Quote, Inc.iqy"
   
          With ActiveSheet.QueryTables.Add(Connection:= _
              "FINDER;" &amp; IQYFile, Destination:=Range("A1"))
   
              .PostText = _
                  "QUOTE0=[""QUOTE0"",""Enter up to 20 symbols separated " 
</PRE></OL>&amp; _
<PRE>                  "by spaces.""]"
   
              .BackgroundQuery = True
              .TablesOnlyFromHTML = True
              .Refresh BackgroundQuery:=False
              .SaveData = True
          End With
      End Sub

</PRE><P><LI>Switch to Sheet4 in the workbook and run the Finder_Post_Query macro.
<P>
</OL>Because this example uses dynamic parameters, you are prompted for the
parameter values.

<OL><P><LI>In the Enter Parameter Value dialog box, type up to twenty valid stock
   symbols that are separated by a space; for example, type "msft" (without
   the quotation marks).

<P><LI>Click OK.
<P>
</OL>The stock quotes for the stock symbols you entered are returned to a
table in Sheet4.
<P>
For additional information, please see the following article in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../EXCEL/Q157482.htm">Q157482</A></B>
   TITLE     : XL97: How to Create Web Query (.iqy) Files

</PRE></OL><h2>REFERENCES</h2>
 
<P>
For more information about Web queries, click the Index tab in Microsoft
Excel Help, type the following text
<P>
<PRE>   web, queries

</PRE>and then double-click the selected text to go to the "Create a Web
query" topic.
<P>
For more information about the Add Method, click the Office Assistant, type
"querytable", click Search, and then click to view "Add Method (QueryTables
Collection)".
<P>
NOTE: If the Assistant is hidden, click the Office Assistant button on the
Standard toolbar. If &lt;Product&gt; Help is not installed on your computer,
please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../OFFICE/Q120802.htm">Q120802</A></B>
   TITLE     : Office: How to Add/Remove a Single Office
               Program or Component
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 97 XL97<BR>
Keywords          : kbcode kbprg kbualink97 xlquery xlvbahowto xlvbainfo<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 27, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
