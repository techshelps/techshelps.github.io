

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: How to Create a Schema.ini File Programmatically </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q155512">
<META NAME="KBModify" CONTENT="1997/08/29">
<META NAME="KBCreate" CONTENT="1996/08/30">
<META NAME="Keywords" CONTENT="kbprg PgmHowTo IsmSetup IntpOff">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  This article describes how to write a procedure that creates a Schema.ini file based on an existing table in your database.  This article assumes that you are familiar with Visua...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA1S,QBRZ,QDN9,QAGX,QATX,QA0B,QAOX,QAB4,QBS0,QAJQ,QDKY,QAMB,QA8T,QA4Q,QAYY P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: How to Create a Schema.ini File Programmatically</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q155512</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
This article describes how to write a procedure that creates a Schema.ini
file based on an existing table in your database.
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
In Microsoft Access 7.0 and Microsoft Access 97, you can link or open
delimited and fixed-length text files. Microsoft Access can read a text
file directly, or it can use an information file called Schema.ini to
determine the characteristics of the text file, such as column names,
field lengths, and data types. A Schema.ini file is required when you
link or open fixed-length text files; it is optional for delimited text
files. The Schema.ini file must reside in the same folder as the text
file(s) it describes.
<P>
The procedure in the following example accepts four parameters:
<P>
<PRE>   Parameter        Value
   ------------------------------------------------------------------------
   bIncFldNames     True/False, stating if the first row of the text file
                    has column names
   sPath            Full path to the folder where Schema.ini will reside
   sSectionName     Schema.ini section name; must be the same as the name
                    of the text file it describes
   sTblQryName      Name of the table or query for which you want to
                    create a Schema.ini file

</PRE>WARNING: The procedure in this example will overwrite an existing
Schema.ini file in the same destination folder without warning.

<OL><P><LI>Open the sample database Northwind.mdb.

<P><LI>Create a module and type the following line in the Declarations section
   if it is not already there:
<P>
<P><PRE>      Option Explicit
</PRE>
<P><LI>Type the following procedure:
<P>
<P><PRE>      Public Function CreateSchemaFile(bIncFldNames As Boolean, _
<PRE></PRE>                                       sPath As String, _
                                       sSectionName As String, _
                                       sTblQryName As String) As Boolean
         Dim Msg As String ' For error handling.
         On Local Error GoTo CreateSchemaFile_Err
         Dim ws As Workspace, db As DATABASE
         Dim tblDef As TableDef, fldDef As Field
         Dim i As Integer, Handle As Integer
         Dim fldName As String, fldDataInfo As String
         ' -----------------------------------------------
         ' Set DAO objects.
         ' -----------------------------------------------
         Set db = CurrentDB()
         ' -----------------------------------------------
         ' Open schema file for append.
         ' -----------------------------------------------
         Handle = FreeFile
         Open sPath &amp; "schema.ini" For Output Access Write As #Handle
         ' -----------------------------------------------
         ' Write schema header.
         ' -----------------------------------------------
         Print #Handle, "[" &amp; sSectionName &amp; "]"
         Print #Handle, "ColNameHeader = " &amp; _
                         IIf(bIncFldNames, "True", "False")
         Print #Handle, "CharacterSet = ANSI"
         Print #Handle, "Format = TabDelimited"
         ' -----------------------------------------------
         ' Get data concerning schema file.
         ' -----------------------------------------------
         Set tblDef = db.TableDefs(sTblQryName)
         With tblDef
            For i = 0 To .Fields.Count - 1
               Set fldDef = .Fields(i)
               With fldDef
                  fldName = .Name
                  Select Case .Type
                     Case dbBoolean
                        fldDataInfo = "Bit"
                     Case dbByte
                        fldDataInfo = "Byte"
                     Case dbInteger
                        fldDataInfo = "Short"
                     Case dbLong
                        fldDataInfo = "Integer"
                     Case dbCurrency
                        fldDataInfo = "Currency"
                     Case dbSingle
                        fldDataInfo = "Single"
                     Case dbDouble
                        fldDataInfo = "Double"
                     Case dbDate
                        fldDataInfo = "Date"
                     Case dbText
                        fldDataInfo = "Char Width " &amp; Format$(.Size)
                     Case dbLongBinary
                        fldDataInfo = "OLE"
                     Case dbMemo
                        fldDataInfo = "LongChar"
                     Case dbGUID
                        fldDataInfo = "Char Width 16"
                  End Select
                  Print #Handle, "Col" &amp; Format$(i + 1) _
                                  &amp; "=" &amp; fldName &amp; Space$(1) _
                                  &amp; fldDataInfo
               End With
            Next i
         End With
         MsgBox sPath &amp; "SCHEMA.INI has been created."
         CreateSchemaFile = True
      CreateSchemaFile_End:
         Close Handle
         Exit Function
      CreateSchemaFile_Err:
         Msg = "Error #: " &amp; Format$(Err.Number) &amp; vbCrLf
         Msg = Msg &amp; Err.Description
         MsgBox Msg
         Resume CreateSchemaFile_End
      End Function

</PRE><P><LI>To test this function, type the following line in the Debug window,
   and then press ENTER:
<P>
<P><PRE>    ?CreateSchemaFile(True,"c:\MSOffice\Access\","EMP.TXT","Employees")
</PRE>
<P><LI>Open the Schema.ini file that you created with a text editor, such as
   Notepad or Wordpad. Note that the file contains the following
   information:
<P>
<P><PRE>      [EMP.TXT]
      ColNameHeader = True
      CharacterSet = ANSI
      Format = TabDelimited
      Col1=EmployeeID Integer
      Col2=LastName Char Width 20
      Col3=FirstName Char Width 10
      Col4=Title Char Width 30
      Col5=TitleOfCourtesy Char Width 25
      Col6=BirthDate Date
      Col7=HireDate Date
      Col8=Address Char Width 60
      Col9=City Char Width 15
      Col10=Region Char Width 15
      Col11=PostalCode Char Width 10
      Col12=Country Char Width 15
      Col13=HomePhone Char Width 24
      Col14=Extension Char Width 4
      Col15=Photo OLE
      Col16=Notes LongChar
      Col17=ReportsTo Integer
</PRE><P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about the Schema.ini file and the information it
contains, search for "initializing drivers," and then "Initializing the
Text Data Source Driver," using the Microsoft Access 97 Help Index.
<P>
For more information about the Schema.ini file and its relationship to
Microsoft Access and the Microsoft Jet database engine, refer to the
"Microsoft Jet Database Engine Programmer's Guide", pages 306 - 312.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: Text Import Export INI<BR>
Keywords          : kbprg PgmHowTo IsmSetup IntpOff<BR>
Version           : 7.0 97<BR>
Platform          : WINDOWS<BR>
Hardware          : x86<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
