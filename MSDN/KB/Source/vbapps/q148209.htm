

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: How to Create a Temporary Message Box While Macro Runs </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q148209">
<META NAME="KBModify" CONTENT="1998/02/03">
<META NAME="KBCreate" CONTENT="1996/03/07">
<META NAME="Keywords" CONTENT="kbcode kbprg PgmHowto">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel, you cannot display a message box at the same time a second macro is running. However, you can simulate a message box with a text box when using a Visual Basic for Applications macro. To do this, you would create a text box and p...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBT6,QBV4,QAHP,QAH4,QBVP,QA01,QBWS,QABI,QAMB,QATX,QAFF,QBS0,QBJZ,QAJZ,QA2Q V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: How to Create a Temporary Message Box While Macro Runs</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 3, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q148209</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, versions 5.0, 5.0c
<LI>Microsoft Excel for Windows 95, version 7.0
<LI>Microsoft Excel for Windows NT, version 5.0
<LI>Microsoft Excel for the Macintosh, version 5.0, 5.0a
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Excel, you cannot display a message box at the same time a
second macro is running. However, you can simulate a message box with a
text box when using a Visual Basic for Applications macro. To do this, you
would create a text box and position it on the screen at an appropriate
location. With code, you can present the text box, run your second
subroutine, and, at the conclusion of the subroutine, delete the text box.
The example in this article demonstrates this process. You can change the
design of the text box to look anyway you want. The following example gives
you just one way to display it.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without 
warranty either expressed or implied, including, but not limited to, the 
implied warranties of merchantability and/or fitness for a particular 
purpose. This article assumes that you are familiar with the programming 
language being demonstrated and the tools used to create and debug 
procedures. Microsoft support engineers can help explain the functionality 
of a particular procedure, but they will not modify these examples to 
provide added functionality or construct procedures to meet your specific 
needs. If you have limited programming experience, you may want to contact 
the Microsoft fee-based consulting line at (800) 936-5200. For more 
information about the support options available from Microsoft, please see 
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>For information about showing a message box in Excel 97 for Windows and 
Excel 98 Macintosh Edition, please see the following article in the 
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q162257.htm">Q162257</A></B>
   TITLE     : OFF97: How to Show a "Now Processing" Dialog While Macro 
               Runs

</PRE><h3>Visual Basic Code Example</h3>
 

<OL><P><LI>Type your name in cell A1 of Sheet1 in a new workbook.

<P><LI>On the Insert menu, click Macro, and then Module.

<P><LI>On the new module sheet, type the following two subroutines:
<P>
<PRE>      Sub DisplayTextMsgBox()
         ' Select the first worksheet.
         Worksheets(1).Select

         ' Create a text box on the active worksheet.
         ActiveSheet.TextBoxes.Add(215, 195, 91.5, 60).Select

         ' Store the name of Worksheet in variable StoreWSNM.
         StoreWSNM = ActiveSheet.Name

         ' Store the name of Text Box in variable StoreNM
         StoreNM = Selection.Name

         ' Set the Font and Border properties of the text box.
         With Selection
            With Selection.Characters.Font
               .Name = "Arial"
               .FontStyle = "Bold"
               .Size = 20
            End With
            With Selection.Border
               .LineStyle = xlContinuous
               .ColorIndex = 1
               .Weight = xlThick
            End With

            'Set round corners for the text box.
            .RoundedCorners = True

            'Set message text color to black.
            .Interior.ColorIndex = 15

            'Assign message text to the text box.
            .Characters.Text = "Please Wait..."
         End With

         ' Actual macro that will run while Please Wait...
         ' message is being displayed.
         Second_Macro

         ' Makes sure the proper Worksheet is selected.
         Worksheets(StoreWSNM).Select

         ' Makes sure the proper text box is selected.
         ActiveSheet.TextBoxes(StoreNM).Select

         ' Deletes the Please Wait... text box.
         Selection.Delete
      End Sub

      ' Note that the Please Wait... text box will be displayed
      ' until this macro has completed.

      Sub Second_Macro()

         ' Select A1 and copies it.
         Range("a1").Select
         ActiveCell.Copy

         ' Set loop to occur 5 times.
         For LoopIt = 1 To 5

            ' Move down one row and paste the contents of A1.
            ActiveCell.Offset(1, 0).Select
            ActiveSheet.Paste

            ' Waits one second before looping.
            ' NOTE: This is only done for demonstration purposes to
            ' slow down the macro so the Please Wait text box will
            ' be displayed for at least 5 seconds.
            Application.Wait Now + TimeValue("00:00:01")
         Next
      End Sub

</PRE><P><LI>On the Tools menu, click Macro. In the Macro box, select the macro
   called DisplayTextMsgBox, and click the Run button.
<P>
</OL>NOTE: If your second macro will be selecting other worksheets while
running, you may want to turn off screen updating at the beginning
of the second macro. This will make sure the Please Wait text box
remains on screen while that macro runs. You can use
Application.ScreenUpdating = False to turn off screen updating.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 5.00 5.00a 5.00c 7.00<BR>
Keywords          : kbcode kbprg PgmHowto<BR>
Version           : WINDOWS: 5.0, 5.0c, 7.0; MACINTOSH: 5.0, 5.0a<BR>
Platform          : MACINTOSH WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 3, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
