

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL5: OLE Automation Example: Running Macro in Visual Basic 3.0 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q124494">
<META NAME="KBModify" CONTENT="1997/09/02">
<META NAME="KBCreate" CONTENT="1995/01/03">
<META NAME="Keywords" CONTENT="AutoGnrl kbinterop kbprg PgmHowTo kbcode kbinterop kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  The following procedure demonstrates how you can use Microsoft Visual Basic version 3.0 and OLE Automation to run a Visual Basic, Applications Edition, procedure created in Microsoft Excel.  MORE INFORMATION  Microsoft provides examples of Visual B...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QBVP,QAH4,QBWS,QA5F,QAMA,QDMR,QAB9,QDNX,QBXS,QA9Q,QAPF,QAIJ,QAGB,QAFF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL5: OLE Automation Example: Running Macro in Visual Basic 3.0</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 2, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q124494</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
5.00 5.00c
WINDOWS
kbinterop kbprg kbcode
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, versions 5.0, 5.0c
<LI>Microsoft Visual Basic version 3.0, Standard and Professional Editions
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The following procedure demonstrates how you can use Microsoft Visual Basic
version 3.0 and OLE Automation to run a Visual Basic, Applications Edition,
procedure created in Microsoft Excel.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft support engineers can help explain the
functionality of a particular macro, they will not modify these examples to
provide added functionality, nor will they help you construct macros to
meet your specific needs. If you have limited programming experience, you
may want to consult one of the Microsoft Solution Providers. Solution
Providers offer a wide range of fee-based services, including creating
custom macros. For more information about Microsoft Solution Providers,
call Microsoft Customer Information Service at (800) 426-9400.
<P>
Follow the steps below to create a Visual Basic, Applications Edition,
procedure and then run it from Visual Basic 3.0.

<OL><P><LI>Type the following code into a new Microsoft Excel module sheet in a new
   workbook.
<P>
<PRE>' This procedure creates a new workbook, enters some numbers in a
' worksheet, creates a chart, rotates the chart, and then closes
' Microsoft Excel.

      Sub SpinIt()

      Dim ExcelChart As Object
      Dim i As Integer

         'Create a new workbook, type in three numbers, create a chart,
         'and change the chart type to 3-D Column

         Workbooks.Add
            Range("a1").Value = 3
            Range("a2").Value = 2
            Range("a3").Value = 1
            Range("a1:a3").Select
         Set ExcelChart = Charts.Add()
         ExcelChart.Type = xl3DColumn

         'Rotate chart
         For i = 30 To 180 Step 10
            ExcelChart.Rotation = i
         Next

         'Close all open files and quit Microsoft Excel.
         Application.DisplayAlerts = False
         ActiveWorkbook.Close (False)
         Application.Quit

      End Sub

</PRE><P><LI>Save the workbook as VB3OLE.XLS in your root directory.

<P><LI>Start Visual Basic 3.0, and on a new form, create a button.

<P><LI>Double click the button and type the following code into the procedure
   window:
<P>
<PRE>      Sub Command2_Click ()
          Dim ExcelApp As Object
          'Opens Excel OLE Object
          Set ExcelApp = CreateObject("excel.application")
          ExcelApp.Visible = True
          'Opens the previously saved Excel workbook and runs the macro
          ExcelApp.Workbooks.Open ("c:\vb3ole.xls")
          ExcelApp.run ("spinit")
          Set ExcelApp = Nothing
          End
      End Sub

</PRE><P><LI>Close the procedure window, and choose Start from the Run menu.
<P>
</OL>To see the rotating chart, click the button in your form.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 5.00<BR>
Keywords          : AutoGnrl kbinterop kbprg PgmHowTo kbcode kbinterop kbprg<BR>
Version           : 5.00 5.00c<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 2, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
