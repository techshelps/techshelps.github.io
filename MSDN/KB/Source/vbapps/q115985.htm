

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Invoke Word 6.0 Font Dialog for Word Object from VB </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q115985">
<META NAME="KBModify" CONTENT="1997/09/29">
<META NAME="KBCreate" CONTENT="1994/06/09">
<META NAME="Keywords" CONTENT="IAPOLE vbwin GnrlVb kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  This article shows by example how to show the Word font dialog directly in Visual Basic without using a Word macro.  You cannot run macros in Word for Windows while a Word object is activated in a container application. When you attempt to run the ...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAIH,QBS0,QAH4,QBWS,QADF,QDMY,QA01,QDO7,QAW6,QAPN,QAGI,QAQT,QAMA,QBJZ,QBV8 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Invoke Word 6.0 Font Dialog for Word Object from VB</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q115985</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:
<P>
- Standard and Professional Editions of Microsoft Visual Basic for
<PRE>  Windows, version 3.0
</PRE>- Microsoft Word version 6.0
 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article shows by example how to show the Word font dialog directly
in Visual Basic without using a Word macro.
<P>
You cannot run macros in Word for Windows while a Word object is activated
in a container application. When you attempt to run the ToolsMacro command,
you are doing essentially the same thing as choosing Macro... from Word's
Tools menu. When a Word object is active in a container, Word enables only
those menu items that apply to editing in a container application; the
Macro... item is not one of those. However, there are techniques you can
use to run a Word macro while editing a Word object in Visual Basic, so if
you want to know how to run Word macros, please see the following Microsoft
Knowledge Base article:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q116040.htm">Q116040</A></B>
   TITLE     : HOWTO: Run a Word Macro While Editing a Word Object in VB

</PRE>It contains three examples that show you:

<OL><P><LI>How to place a button on a toolbar in a Visual Basic application to run
   a macro.

<P><LI>How to call an assigned shortcut key in a Word macro from Visual Basic.

<P><LI>How to call the nested main macro that calls the other macros from
   Visual Basic.
<P>
</OL><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Step-by-Step Example Calls Pre-Assigned Shortcut Key for Font Dialog</h3>
 
<P>
To show the Word font dialog directly without using a Word macro, call a
pre-assigned shortcut key. Because the shortcut key for showing the font
dialog is CTRL+SHIFT+F, you can use the Visual Basic SendKeys function to
activate it. Documentation for the shortcut keys is in the Word Help menu
under the "Keyboard Shortcuts" topic.
<P>
The following steps show the font dialog when the user clicks a Visual
Basic command button:

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Add a command button (Command1) and one MSOLE2.VBX control to Form1.

<P><LI>Select the Create from File option in the Insert Object window.
   Then click the Browse button and locate a document. Next, select the
   Display As Icon option, and click the OK button.

<P><LI>Add the following code to the Command1_Click event procedure:
<P>
<PRE>   Sub Command1_Click()
      ole1.action = 7
      SendKeys "^+F" '** note: you may need to send a second SendKeys "^+F"
   End Sub

</PRE><P><LI>Press the F5 key to run the application. Click the Command1 button to
   see if the font dialog window and Formatting toolbar appear.
<P>
</OL><h3>Alternative Code for Step 3 to Hide the Formatting Toolbar</h3>
 
<P>
If the Word Formatting Toolbar is showing, the code shown above will
actually select the Edit Font dialog box, so you'll need to hide the
Toolbar first if this is the case. The following code demonstrates how to
hide the Format Toolbar and show it again after the user clicks the command
button and chooses a font:

<OL><P><LI>Add the following code to the Command1_Click event procedure:
<P>
<PRE>   Sub Command1_Click()
      Dim Wordobj as Object
      ole1.action = 7
      Set Wordobj = ole1.Object.application.wordbasic
      Wordobj.ViewToolbars "Formatting",,,,,,,,True     ' Eight commas
      SendKeys "^+F"
      DoEvents   ' Pause to let the sendkeys go through to Word.
      Wordobj.ViewToolbars "Formatting",,,,,,,True      ' Seven commas
      Set Wordobj = Nothing
   End Sub

</PRE><P><LI>Run the application, and click the Command1 button to see if the
   font dialog window appears without the Formatting toolbar.
<P>
</OL>NOTE: The user can click the MSOLE2 control by using the right mouse button
to bring up a menu of Word options. One of the options is to change the
font. By choosing this option, the user invokes the Font dialog box. This
is yet another way for the user to get to the font dialog.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: officeinterop w_VBApp W_Word WM_OLE OA OLE<BR>
Automation<BR>
Keywords          : IAPOLE vbwin GnrlVb kbprg<BR>
Technology        : kbole kbvba<BR>
Version           : WINDOWS:3.0<BR>
Platform          : WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
