

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OL97: How to Programmatically Set TextBox and CheckBox Values </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q161924">
<META NAME="KBModify" CONTENT="1998/02/27">
<META NAME="KBCreate" CONTENT="1997/01/08">
<META NAME="Keywords" CONTENT="kbcode kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  You can customize Microsoft Outlook forms by using Microsoft Visual Basic Script and\or ActiveX controls. This article illustrates how to add Outlook form controls and VBScript to an Outlook form. The example in this article uses the TextBox and Ch...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA7O,QBWS,QAB5,QAOE,QAMN,QAHP,QBVO,QBV4,QBJZ,QDNQ,QAI2,QDMZ,QAKD,QAYC,QA7N P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>OL97: How to Programmatically Set TextBox and CheckBox Values</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 27, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q161924</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Outlook 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
You can customize Microsoft Outlook forms by using Microsoft Visual Basic
Script and\or ActiveX controls. This article illustrates how to add
Outlook form controls and VBScript to an Outlook form. The example in this
article uses the TextBox and CheckBox controls, and with VBScript
programmatically populates those controls when you open the form.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE><h3>Customizing the Form and Adding Controls</h3>
 
<P>
The following steps demonstrate how to customize a message form by making a
new page visible and adding a TextBox and CheckBox control on the new page:

<OL><P><LI>In Outlook open a new message. On the Form Design toolbar, click "Design
   Outlook Form."

<P><LI>Click the (P.2) tab to select the second page of the form. On the Form
   menu, click Form and then click "Display This Page." This will remove
   the parentheses from around P2 and make the P2 page viewable when the
   form is done.

<P><LI>On the Form Design toolbar, click "Control Toolbox" and on the Controls
   tab click the TextBox control. Drag a TextBox onto the form. Repeat
   the process to place a CheckBox on the form.
<P>
</OL><h3>Binding a Field to Each Control</h3>
 
<P>
While you can manipulate the appearance of a control (color, font, etc.)
with Advanced Properties, you must use a field to manipulate the value of a
control (Is the CheckBox checked? What text appears inside the TextBox?).
<P>
The following steps bind custom fields to each control. In this case
TextBoxField is the name of the field bound to the TextBox control.
CheckBoxField is the name of the field bound to the CheckBox control.

<OL><P><LI>On the form, right-click the TextBox and on the shortcut menu, click
   Properties.

<P><LI>Under the Value tab, click New.

<P><LI>In the Name box, type TextBoxField. By default, the Type and Format
   lists should display Text.

<P><LI>Click OK and OK to close the Properties dialog box for the TextBox
   control.

<P><LI>On the form, right-click the CheckBox and on the shortcut menu, click
   Properties.

<P><LI>Under the Value tab, click New.

<P><LI>In the Name box, type CheckBoxField. In the Type list, click Yes/No.
   In the Format list, click True/False.

<P><LI>Click OK and OK to close the Properties dialog box for the CheckBox
   control.
<P>
</OL><h3>Adding VBScript to Populate the Controls</h3>
 
<P>
The following steps programmatically change each control when the form
opens by changing the value of the fields to which each control is bound.
The value of TextBoxField changes to: "New text." The value of
CheckBoxField changes to True. Therefore, the CheckBox appears checked.

<OL><P><LI>On the Form Design toolbar, click View Code to start the Script
   Editor. On the Script menu, click Event and click to select Open in the
   Events list and then click Add.

<P><LI>Type the following code between "Function Item_Open()" and "End
   Function":
<P>
<P><PRE>     Set MyTextBoxField = Item.UserProperties.Find("TextBoxField")
     If MyTextBoxField.Value = "" Then MyTextBoxField.Value = "New text"
     End If
</PRE><P>
<P><PRE>     Set MyCheckBoxField = Item.UserProperties.Find("CheckBoxField")
     If MyCheckBoxField.Value = 0 Then MyCheckBoxField.Value = 1
     End If
</PRE><P>
   NOTE: The names used in quotation marks are the names of the fields
   which you bound to each control. The value assigned to the TextBoxField
   field determines what appears inside the TextBox control. The value
   assigned to the CheckBoxField field determines if the CheckBox control
   has a check.

<P><LI>On the Script Editor's File menu, click Close.
<P>
</OL><h3>Exiting the Form Design Mode and Publishing the Form</h3>
 
<P>
Because the programming code in this example is in the Item_Open function,
it executes when you open the form. You should publish the form so that you
can see the results when you open a new form.
<P>
You can publish forms several ways. This example shows how to publish your
form in your Inbox folder. Follow these steps to exit the design mode and
publish the form:

<OL><P><LI>On the form's Tools menu, click "Design Outlook Form" to exit the design
   mode.

<P><LI>On the form's File menu, click "Publish Form As."

<P><LI>In the "Form name" box, type MyForm and click "Publish In."

<P><LI>In the "Set Library To" dialog box, click "Folder Forms Library."

<P><LI>In the folder list, click to select your Inbox folder and click OK.

<P><LI>Click Publish to publish MyFrom in your Inbox folder.

<P><LI>On the form's File menu, click Close. When prompted, "Do you want to
   save changes?" click No.
<P>
</OL><h3>Using the Form</h3>
 
<P>
You published the form in your Inbox folder, so you must open your Inbox to
use the form. Follow these steps to use the form:

<OL><P><LI>Open your Inbox.

<P><LI>On the Compose menu, click "New MyForm" to open an untitled message
   based on your custom form.

<P><LI>Inside the form, click the P.2 tab.
<P>
   Note: if you do not see a P.2 tab, you skipped step 2 in the section
   titled, "Customizing the Form and Adding Controls."
<P>
</OL>The TextBox should contain the text "New text" and the CheckBox should
contain a check.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about creating solutions with Microsoft Outlook 97,
please see the following articles in the Microsoft Knowledge Base:
<P>
<PRE>   Article-ID: <B><A HREF="../vbapps/Q166368.htm">Q166368</A></B>
   Title     : OL97: How to Get Help Programming with Outlook

   Article-ID: <B><A HREF="../vbapps/Q170783.htm">Q170783</A></B>
   Title     : OL97: Q&amp;A: Questions about Customizing or
               Programming Outlook
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: OutSol OutSol97 exfaq<BR>
Keywords          : kbcode kbprg<BR>
Version           : 97<BR>
Platform          : winnt<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 27, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
