

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: How to Use a Multi-Select List Box to Filter a Form </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q135546">
<META NAME="KBModify" CONTENT="1998/02/04">
<META NAME="KBCreate" CONTENT="1995/08/23">
<META NAME="Keywords" CONTENT="kbusage FmsHowTo FmsCmbo kbfaq">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  This article demonstrates two methods for using a multiple selection list box to restrict records in a recordset. These methods are more flexible than other techniques, such as a...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVR,QAPN,QAPF,QA5V,QA1S,QBS0,QAE1,QBWS,QA2Q,QBXS,QDN9,QAH4,QAX6,QAK9,QBJZ P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: How to Use a Multi-Select List Box to Filter a Form</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 4, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q135546</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
This article demonstrates two methods for using a multiple selection list
box to restrict records in a recordset. These methods are more flexible
than other techniques, such as applying a query or an SQL WHERE clause
because they enable you to choose at random which records are displayed.
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Method 1</h3>
 
<P>
This method uses the Filter property of a form. It restricts the records in
a recordset based on the selected items in a multiple selection list box.
This is done by using Visual Basic code for the OnClick event of a command
button.
<P>
To create this method, follow these steps:

<OL><P><LI>Open the sample database Northwind.mdb.

<P><LI>Create a new, blank form based on the Customers table and open it in
   Design view.

<P><LI>On the View menu, click Field List and drag the CustomerID and
   CompanyName fields from the field list to the Detail section of the
   form.

<P><LI>Add an unbound list box to the form's Detail section and set its
   properties as follows:
<P>
<P><PRE>      Name: List0
      Row Source: Customers
      Column Count: 2
      Column Widths: .5";2"
      Multi Select: Extended
      Width: 2.5"
</PRE>
<P><LI>Add a command button to the form. Set the Name property to Command2, and
   set the OnClick property to [Event Procedure]. On the View menu, click
   Code, and type the following text in the Form module:
<P>
<P><PRE>      Option Compare Database
      Option Explicit
</PRE><P>
<P><PRE>      Private Sub Command2_Click()
<PRE></PRE>         Dim Criteria As String
         Dim i As Variant

         ' Build criteria string from selected items in list box.
         Criteria = ""
         For Each i In Me![List0].ItemsSelected
            If Criteria &lt;&gt; "" Then
                  Criteria = Criteria &amp; " OR "
            End If
            Criteria = Criteria &amp; "[CustomerId]='" _
               &amp; Me![List0].ItemData(i) &amp; "'"
         Next i

         ' Filter the form using selected items in the list box.
         Me.Filter = Criteria
         Me.FilterOn = True

      End Sub

</PRE><P><LI>Open the form in Form view.

<P><LI>Select multiple items in the list box: click the first item, then
   hold down the CTRL key, and click subsequent items.

<P><LI>Click the command button. Note that the form's recordset is restricted
   to the records selected in the list box. If you clear the items and
   click the button again, you remove the filter and restore all the
   records.
<P>
</OL><h3>Method 2</h3>
 
<P>
This method modifies the Querydef object of a query. It restricts the
records in a recordset based on the selected items in a multiple selection
list box. This is done by using Visual Basic code for the OnClick event of
a command button.
<P>
To create this method, follow these steps:

<OL><P><LI>Open the sample database Northwind.mdb.

<P><LI>Create a new query based on the Orders table and include all the fields.
   Save the query as "MultiSelect Criteria Example."

<P><LI>Create a new, blank form based on the Customers table and open it in
   Design view.

<P><LI>Add an unbound list box to the form's Detail section and set its
   properties as follows:
<P>
<P><PRE>      Name: List0
      RowSource: Customers
      ColumnCount: 2
      ColumnWidths: .5";2"
      Multiselect: Extended
</PRE>
<P><LI>Add a command button to the form.  Set the Name property to Command4 and
   set the OnClick property to the following event procedure:
<P>
   Note: This example uses the ItemData property to return values from
<PRE>         the Bound Column of the ListBox. To return a value from a
         column other than the Bound Column use the Column property
         instead of the ItemData property.

      Private Sub Command4_Click()
      Dim Q As QueryDef, DB As DATABASE
      Dim Criteria As String
      Dim ctl As Control
      Dim Itm As Variant

      ' Build a list of the selections.
      Set ctl = Me![List0]

      For Each Itm In ctl.ItemsSelected
         If Len(Criteria) = 0 Then
            Criteria = Chr(34) &amp; ctl.ItemData(Itm) &amp; Chr(34)
         Else
            Criteria = Criteria &amp; "," &amp; Chr(34) &amp; ctl.ItemData(Itm) _
            &amp; Chr(34)
           End If
         Next Itm

         If Len(Criteria) = 0 Then
            Itm = MsgBox("You must select one or more items in the_
            list box!", 0,"No Selection Made")
         Exit Sub
         End If

      ' Modify the Query.
      Set DB = CurrentDb()
      Set Q = DB.QueryDefs("MultiSelect Criteria Example")
      Q.SQL = "Select * From Orders Where [CustomerID] In(" &amp; Criteria &amp;_
         ");"
      Q.Close

      ' Run the query.
      DoCmd.OpenQuery "MultiSelect Criteria Example"

      End Sub

</PRE><P><LI>Open the form in Form view.

<P><LI>Select multiple items in the list box by holding down the CTRL key and
   clicking the different items.

<P><LI>Click the command button. Note that the query is restricted to the
   selected records in the list box.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about the MultiSelect property of a list box, search
for "MultiSelect property" using the Microsoft Access 97 Help Index.
<P>
For more information about the ItemData property of a list box, search
for " ItemData property" using the Microsoft Access 97 Help Index.
<P>
For more information about the Column property of a list box, search
for "Column property" using the Microsoft Access 97 Help Index.
 
<PRE>Keywords          : kbusage FmsHowTo FmsCmbo kbfaq
Version           : 7.0 97
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 4, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
