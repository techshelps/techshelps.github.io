

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC97: How to Create Hyperlink Fields in ASP Forms </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q166413">
<META NAME="KBModify" CONTENT="1997/08/29">
<META NAME="KBCreate" CONTENT="1997/04/04">
<META NAME="Keywords" CONTENT="kbinterop FmsOthr IntAsp">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  This article discusses the behavior of Hyperlink fields on ASP forms that you create in Microsoft Access 97.  Three main problems you may encounter when you export a Microso...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAE2,QDNQ,QBT6,QA1S,QBMD,QBV4,QDN9,QAHP,QA7O,QAVZ,QAH4,QA7N,QBWA,QAUD,QA3N P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC97: How to Create Hyperlink Fields in ASP Forms</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q166413</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
This article discusses the behavior of Hyperlink fields on ASP forms that
you create in Microsoft Access 97.
<P>
Three main problems you may encounter when you export a Microsoft Access 97
form with a Hyperlink field to ASP format are as follows:

<UL><LI>When you enter a valid uniform resource locator (URL) in the Hyperlink
   field on an ASP form, it does not create a valid hyperlink in the
   Microsoft Access table.

<LI>Hyperlink fields on ASP forms are not live. In other words, nothing
   happens when you click the hyperlink.

<LI>Hyperlink fields on ASP forms display the hyperlink as text separated
   by number signs (#).
<P>
</UL>This article first discusses the causes for this behavior; it then provides
an example that works around all three problems.
<P>
NOTE: This article contains information about editing ASP files. It
assumes that you are familiar with Active Server, Visual Basic Scripting,
and editing HTML files. Microsoft Access Technical Support engineers do not
support modification of any HTML, HTX, IDC, or ASP files.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Entering a Valid URL on the ASP Form Does Not Create a Valid Hyperlink</h3>
 
<P>
If you enter hyperlink data in your ASP form using the correct syntax for
DisplayText, Address, and Subaddress, then Microsoft Access stores the data
as a valid hyperlink in the Microsoft Access table, for example:
<P>
<PRE>   Microsoft Home Page#<B><A HREF="http://www.microsoft.com#">http://www.microsoft.com#</A></B>

</PRE>However, users who are familiar with entering hyperlink data in Microsoft
Access will be accustomed to entering URLs in the format:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com">http://www.microsoft.com</A></B>

   -or-

   www.microsoft.com

</PRE>Then Microsoft Access parses the data and creates the correct Hyperlink
field. In the example in the "An Example That Works Around All Three
Problems" section, you create VB Script with your ASP form that checks what
the user types and adds the number signs and <B>http://</B> if necessary to create
a valid hyperlink in the Microsoft Access table.
<P>
<P><h3>Hyperlink Fields on ASP Forms Are Not Live</h3>
 
<P>
This behavior occurs because ASP forms you create with Microsoft Access 97
use the HTML Layout Control to display text boxes. You must write VB Script
to get a Web browser to follow hyperlinks displayed in the text boxes;
Microsoft Access 97 was not designed to create VB Script that achieves this
functionality when it creates ASP forms. The example in the "An Example
That Works Around All Three Problems" section walks you through creating
the VB Script to parse the actual URL from the parts of the Hyperlink
field, and then to set the window.location.href property to this URL in the
MouseUp event of the text box that contains the hyperlink.
<P>
<P><h3>Hyperlink Fields on ASP Forms Display Text Separated with Number Signs (#)</h3>
 
<P>
In Microsoft Access 97, all Hyperlink fields consist of three distinct
parts separated by number signs: DisplayText, Address, and Subaddress. The
DisplayText is what you see in the table or form in your database; the
Address and Subaddress information tells Microsoft Access what you want to
view when you click the hyperlink. For example, the following hyperlink
uses the first and second parts of the hyperlink field:
<P>
<PRE>   Microsoft Home Page#<B><A HREF="http://www.microsoft.com#">http://www.microsoft.com#</A></B>

</PRE>This hyperlink displays the text "Microsoft Home Page" in a Microsoft
Access 97 table or form, and it opens <B><A HREF="http://www.microsoft.com">http://www.microsoft.com</A></B> when you
click the link. The following example uses only one of the parts of the
Hyperlink field:
<P>
<PRE>   #<B><A HREF="http://www.microsoft.com/accessdev#">http://www.microsoft.com/accessdev#</A></B>

</PRE>In this case, the Microsoft Access 97 table or form displays
<B><A HREF="http://www.microsoft.com/accessdev">http://www.microsoft.com/accessdev</A></B> by default because there is no specific
DisplayText portion of the hyperlink field; it also opens
<B><A HREF="http://www.microsoft.com/accessdev">http://www.microsoft.com/accessdev</A></B> when you click the link.
<P>
An ASP form opened in your Web browser displays all three parts of the
hyperlink information that is stored in your table, including the number
signs. The example in the "An Example That Works Around All Three Problems"
section shows you how to write VB Script that causes the Web browser to
show only the DisplayText, or to show the Address and Subaddress if there
is no DisplayText. The VB Script checks if a number sign (#) is the first
character of the field's value. If so, then the Address and Subaddress is
parsed and displayed on the ASP form. If not, then the Displaytext is
parsed and displayed.
<P>
<P><h2>An Example That Works Around All Three Problems</h2>
 

<OL><P><LI>Start Microsoft Access 97 and open the sample database Northwind.mdb.

<P><LI>Export the Suppliers form to ASP format in a folder on your Web server
   where you have Execute permission. This step creates two files:
   Suppliers.asp and Suppliersalx.asp.

<P><LI>Use Notepad or another text editor to open the Suppliersalx.asp file,
   and make the changes described below.
<P>
</OL><h3>Modification #1: Saving a Valid Hyperlink in the Microsoft Access 97 Table</h3>
 
<P>
Near the top of the Suppliersalx.asp file, you will see the following code:
<P>
<PRE>   Function GetCtrlQueryString()
      Dim szRet
      Dim i
      for i = 1 to cMaxCtrls
         if rgszCtrls(i, 1) = "" Then Exit For
         szRet = szRet &amp; rgszCtrls(i, 2) &amp; "=" &amp; _
         MakeHTMLValue(Suppliersalx.Controls(rgszCtrls(i, 1)).Value) &amp; "&amp;"
      next
      GetCtrlQueryString = szRet
   End Function

</PRE></OL>Modify this function so it looks like the function below. The code checks
to see if number signs are in the text that is entered in the hyperlink
text box. If no number signs are entered, the function concatenates number
signs before and after the text. The code also checks to see if <B>http://</B> is
entered, and adds it to the beginning of the URL if necessary.
<P>
NOTE: If number signs are entered, the code does not check to see if
<B>http://</B> is entered. This allows a user to explicitly enter a URL that may,
for example, point to an Office Object, which is a valid URL in Microsoft
Access 97.
<P>
<PRE>   Function GetCtrlQueryString()
      Dim szRet
      Dim i
      Dim HomePageValue
      Dim PoundLoc
      for i = 1 to cMaxCtrls
      if rgszCtrls(i, 1) = "" Then Exit For
         if rgszCtrls(i,2)="HomePage" then
            HomePageValue = Suppliersalx.Controls(rgszCtrls(i, 1)).Value
            PoundLoc = instr(HomePageValue,"#")
            if poundloc = 0 then 'NO # SIGNS WERE ENTERED.
               'CHECK IF HTTP:// WAS ENTERED. IF NOT, CONCATENATE IT.
               if instr(HomePageValue,"<B>http://</B>") = 0 then
                  HomePageValue = "<B>http://</B>" &amp; HomePageValue
               end if
               'CONCATENATE # SIGNS BEFORE AND AFTER THE INTERNET ADDRESS
               HomePageValue = "#" &amp; HomePageValue &amp; "#"
            else
               'CHECK IF ONLY ONE # WAS ENTERED. IF SO, POP UP A MESSAGE.
               if poundloc+InStr(StrReverse(HomePageValue),"#") = _
                  len(HomePageValue)+1 then
               msgbox "Hyperlinks should have two # signs."
            end if
         end if
         szRet = szRet &amp; rgszCtrls(i, 2) &amp; "=" &amp; _
         MakeHTMLValue(HomePageValue) &amp; "&amp;"
      else
         szRet = szRet &amp; rgszCtrls(i, 2) &amp; "=" &amp; _
         MakeHTMLValue(Suppliersalx.Controls(rgszCtrls(i, 1)).Value) &amp; "&amp;"
      end if
      next
      GetCtrlQueryString = szRet
   End Function

</PRE><h3>Modification #2: Making the Hyperlink Live</h3>
 
<P>
Further down in the Suppliersalx.asp file, after the last Sub Procedure but
before the --&gt;&lt;/SCRIPT&gt; tag, add the following code. This code parses the
Address portion of the Hyperlink field and saves it in a variable. The
HomePage_MouseUp Sub Procedure executes when the hyperlink text box is
clicked and causes the Web browser to navigate to the URL saved in the
AddrPart variable.
<P>
<PRE>   &lt;%If Not IsNull(rs.Fields("HomePage").Value) Then%&gt;
      'SAVE THE ADDRESS PORTION OF THE HYPERLINK IN A VARIABLE IN CASE
      'MODIFICATION 3 WAS IMPLEMENTED AND THE HOMEPAGE TEXT BOX ONLY
      'DISPLAYS THE DISPLAYTEXT PORTION OF THE HYPERLINK
      Dim AddrPart
      AddrPart = "&lt;%=rs.Fields("HomePage").Value%&gt;"
      AddrPart = Right(AddrPart,Len(AddrPart)-InStr(AddrPart, "#"))
   &lt;%End If%&gt;

   Sub HomePage_MouseUp(Button, Shift, X, Y)
      window.location.href = AddrPart
   End Sub

</PRE><h3>Modification #3: Displaying the DisplayText or the Address and Subaddress</h3>
 
<P>
In the Suppliersalx.asp file, find the &lt;OBJECT&gt; tag for the HomePage text
box. It will be beneath the last Sub Procedure you wrote. Look for the
following code which sets the Value property for the text box:
<P>
<PRE>   &lt;%If Not IsNull(rs.Fields("HomePage").Value) Then%&gt;
   &lt;PARAM NAME="Value"
   VALUE="&lt;%=Server.HTMLEncode(rs.Fields("HomePage").Value)%&gt;"&gt;
   &lt;%End If%&gt;

</PRE>Modify the code to match the code below. This code makes the text box in
the HTML Layout Control display the DisplayText portion of the hyperlink if
there is DisplayText. It will display the Address and Subaddress portion of
the hyperlink if there is no DisplayText:
<P>
<PRE>   &lt;%If Not IsNull(rs.Fields("HomePage").Value) Then%&gt;
   &lt;PARAM NAME="Value" VALUE="&lt;%
   Dim GetPart
   GetPart = rs.Fields("HomePage").Value
   If left(GetPart, 1) = "#" then
      'THERE IS NO DISPLAYTEXT, SO DISPLAY THE ADDRESS AND SUBADDRESS
      GetPart = Mid(GetPart,2)
   Else
      If instr(GetPart, "#") = 0 then
         'THERE ARE NO # SIGNS, SO DISPLAY EVERYTHING
         GetPart=GetPart
      Else
         'DISPLAYTEXT IS EVERYTHING TO THE LEFT OF THE FIRST # SIGN
         GetPart = Left(GetPart,InStr(GetPart, "#")-1)
      End If
   End If
   Response.Write Server.HTMLEncode(GetPart)
   %&gt;"&gt;
   &lt;%End If%&gt;

</PRE>Save and close the Suppliersalx.asp file.
<P>
<P><h3>Testing the ASP Form</h3>
 

<OL><P><LI>Start Microsoft Internet Explorer 3.0.

<P><LI>Type the URL in the address box of your Web browser to view
   Suppliers.asp. For example, if you saved your ASP files in a folder
   called Test in the wwwroot folder of your Web Server, type:
<P>
<P><PRE>      <B>http://&lt;servername&gt;/test/Suppliers.asp</B>
</PRE><P>
   Note that the URL depends upon where your files are located on the Web
   Server and that Internet Explorer 3.0 with the HTML Layout Control is
   required to view forms exported to ASP.

<P><LI>The Suppliers.asp form opens in your Web browser with a text box that
   displays the HomePage Internet addresses for various companies. Note
   that some of the hyperlinks point to Office documents and are not valid
   Internet Addresses. SupplierID 6, Mayumi's, contains a valid Internet
   address. If you move to that record and then click on the HomePage
   text box, Internet Explorer automatically moves to that home page.
<P>
   Note that if you want to enter a new URL, you must click in a different
   text box on the form, and then press TAB until you get to the
   HomePage text box. This avoids following the hyperlink, which is what
   happens if you click directly in the field. Once the pointer is in the
   HomePage text box you will be able to type in URLs such as
   <B><A HREF="http://www.microsoft.com">http://www.microsoft.com</A></B> or www.microsoft.com. You can also explicitly
   type the number signs (#)that Microsoft Access needs, but if you type
   only one number sign (#), a message box appears warning you that
   Microsoft Access hyperlinks require two number signs (#).
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about the parts of a Hyperlink field, search the Help
Index for "hyperlinks, returning hyperlink information."
<P>
For more information about exporting ASP files, search the help Index for
"ASP files," or ask the Microsoft Access 97 Office Assistant.
<P>
For information about using hyperlink fields with queries or tables
exported to ASP, please see the following article in the Microsoft
Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q163706.htm">Q163706</A></B>
   TITLE     : ASP Files Display Hyperlinks as Text in Web Browser
</PRE></OL> 
<PRE>Keywords          : kbinterop FmsOthr IntAsp
Version           : 97
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
