

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FILE: VB4 16-Bit OLE Clients Receive Error -2147319784 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q165490">
<META NAME="KBModify" CONTENT="1998/01/16">
<META NAME="KBCreate" CONTENT="1997/03/20">
<META NAME="Keywords" CONTENT="kbpatch kbprg kbtool vbwin vb4win vb5all vb4all VBKBAutomation">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  When using an existing 16-bit application compiled with Microsoft Visual Basic version 4.0, the following error message may be displayed if you are working with a Visual Basic 4.0 16-bit-built OLE client:      OLE Automation Error. -2147319784 (800...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAA1,QAB4,QAPN,QA5F,QAH4,QDKW,QAMA,QDI2,QA2K,QARL,QBWS,QAY2,QAH6,QAD7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FILE: VB4 16-Bit OLE Clients Receive Error -2147319784</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 16, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q165490</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Standard, Professional, and Enterprise Editions,
   16-bit and 32-bit, for Windows, version 4.0, 5.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When using an existing 16-bit application compiled with Microsoft Visual
Basic version 4.0, the following error message may be displayed if you are
working with a Visual Basic 4.0 16-bit-built OLE client:
<P>
<PRE>   "OLE Automation Error. -2147319784 (80028018)"

</PRE><h2>CAUSE</h2>
 
<P>
During the installation of Microsoft Office 97 and Microsoft Visual Basic
5.0, updated components and registrations entries may cause the above error
message only if you are using early binding and passing Collections from a
Visual Basic 4.0 16-bit Automation client to a Visual Basic 4.0 Automation
server. The server can be either 16-bit or 32-bit.
<P>
This applies to any combination of 16-bit / 32-bit collection interaction.
This means that the same problem will occur if the collection originates
and is passed from a 32-bit application to a 16-bit server as well.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
There are two ways to work around this behavior:
<P>
<P><h3>Workaround 1 - When Source Code is Available (Best Solution)</h3>
 
<P>
To work around this behavior when you have the source code available, you
can re-write portions of the client that deal with collections to use late
binding rather of early binding. For example, a change you would make to
the Automation Client is:
<P>
<PRE>  instead of:

      Dim X as Collection

  use:

      Dim X as Object
      Set X = VBA.Collection

</PRE><h3>Workaround 2 - Existing Applications and No Access to Source Code</h3>
 
<P>
To work around this behavior in the situation where an existing, compiled
application is affected, certain changes must be made to the Registration
Database. These changes force TYPELIB.DLL to use the earlier versions of
the type libraries that released with Microsoft Visual Basic 4.0. A
registry file has been created by Microsoft that will change the
registration automatically.
<P>
The following file is available for download from the Microsoft
Software Library:
<P>
<PRE> ~ <A HREF="http://support.microsoft.com/download/support/mslfiles/Vb416fix.exe">Vb416fix.exe</A> <I>(size: 15986 bytes)</I> 

</PRE>For more information about downloading files from the Microsoft Software
Library, please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../zMiscellaneous/Q119591.htm">Q119591</A></B>
   TITLE     : How to Obtain Microsoft Support Files from Online Services

</PRE><h3>Updating an Individual System</h3>
 
<P>
To update any single system, do the following:

<OL><P><LI>Copy the VB416FIX.EXE to a directory on the target system.
   C:\TEMP works well.

<P><LI>Double-click on VB416FIX.EXE to extract the file VB416FIX.REG.

<P><LI>Double-click on the VB416FIX.REG.
<P>
   The following message should be displayed:
<P>
   "Information in &lt;filename&gt; has been successfully entered into the
   registry."
<P>
</OL><h3>Including the VB416FIX.REG File in New Setups</h3>
 
<P>
To include the VB416FIX.REG file with the other components of a Visual
Basic 4.0 16-bit application, you must use the Application Setup Wizard to
build the distribution diskettes. Use the following steps:

<OL><P><LI>Run the Application Setup Wizard for Microsoft Visual Basic 4.0
   (16-bit).

<P><LI>Proceed through step 6 in the Setup Wizard as you normally would.

<P><LI>In step 7 in the Setup Wizard, click Add Files.

<P><LI>Select the VB416FIX.REG file from the folder or diskette where it is
   stored.

<P><LI>Click OK, and then click Finish.
<P>
   The Setup Wizard will generate the compressed files for all of your
   components, including the VB416FIX.REG file you included. When Setup
   Wizard is complete, you must alter the SETUP.LST file.

<P><LI>Edit SETUP.LST in a text editor such as NotePad.

<P><LI>In the section labeled [Files], you will find a line that lists the
   VB416FIX.REG file The line will look similar to the following sample:
<P>
<P><PRE>      File2=1,,VB416FIX.RE_,VB416FIX.REG,$(AppPath),,,3/6/1997,247
</PRE>
<P><LI>Edit the sixth (6) field to include the name of the .REG file.
   The line should look like the following:
<P>
   File2=1,,VB416FIX.RE_,VB416FIX.REG,$(AppPath),VB416FIX.REG,,3/6/1997,247

<P><LI>Save the SETUP.LST file.
<P>
   When a user runs the SETUP.EXE, the VB416FIX.REG file will be
   registered automatically on the user's system.
<P>
</OL><h2>STATUS</h2>
 
<P>
Microsoft is researching this problem and will post new information here in
the Microsoft Knowledge Base as it becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
During the installation of Microsoft Office 97 and Microsoft Visual Basic
5.0, updated components and registrations entries may cause the above error
message only if you are using early binding and passing Collections from a
Visual Basic 4.0 16-bit Automation client to a Visual Basic 4.0 Automation
server. The server can be either 16-bit or 32-bit. This is limited to
Visual Basic 4.0 16-bit built clients that use early binding and pass a
Collection to an Automation server.
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 

<OL><P><LI>Create a new project in Visual Basic 4.0 16-bit:
<P>
<PRE>      (ProjectName="TestServer",    StartMode= OLE Server)

</PRE><P><LI>Add a Class module:
<P>
<P><PRE>      (Instancing = Multi-Use, Name = "Class1", Public = True)
</PRE>
<P><LI>Add the following code to Class1:
<P>
<PRE>        Private gTstCol as New Collection

        Public Function fTstCol(ByRef ParCol As Collection) As Long
           Set ParCol = gTstCol 'Return some global collection object
           fTstCol = 0  'just return 0, nothing special.
        End Function

</PRE><P><LI>Run Project.

<P><LI>Start another instance of Visual Basic 4.0 16-bit.

<P><LI>Add a reference to TestServer to the project.

<P><LI>Add the following code to the project:
<P>
<PRE>        Sub Form_Load ()
           Dim gTstObj As TestServer.Class1
           Dim Res As Long
           Dim tmpCol As Collection
           Set gTstObj =  new "TESTSERVER.CLASS1"
           Res = gTstObj.fTstCol(tmpCol)
          'The Automation Error message is displayed in the line above.
        End Sub

</PRE><P><LI>Run the Project.
</OL> 
<PRE>Keywords          : kbpatch kbprg kbtool vbwin vb4win vb5all vb4all VBKBAutomation
Technology        : kbvba
Version           : WINDOWS:4.0 5.0
Platform          : WINDOWS
Issue type        : kbprb
Solution Type     : kbfile</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 16, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
