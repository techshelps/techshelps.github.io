

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: Programmatically Link or Embed an Object in a Form (95/97) </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q158929">
<META NAME="KBModify" CONTENT="1997/08/29">
<META NAME="KBCreate" CONTENT="1996/11/07">
<META NAME="Keywords" CONTENT="kbole kbprg PgmHowTo FmsHowTo IntpOle">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  This article describes how to programmatically link or embed an object in an unbound object frame on a form using the object frame properties in Microsoft Access 7.0 and 97.  MOR...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QAW6,QAIH,QBVP,QBXS,QAIA,QAIB,QA9Q,QAIJ,QA1S,QAUR,QAE2,QBWS,QAUJ P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: Programmatically Link or Embed an Object in a Form (95/97)</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q158929</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
This article describes how to programmatically link or embed an object in
an unbound object frame on a form using the object frame properties in
Microsoft Access 7.0 and 97.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
You can set the object frame Action property at run time to perform a
number of operations on an object frame. These operations include the
ability to link and embed objects in an object frame, as well as other
operations for programmatic access to OLE functionality.
<P>
There are other object frame properties that you must set before you set
the Action property. Those other properties depend on the type of OLE
object you are working with, and the type of action you want to perform
using the Action property.
<P>
<P><h3>Linking or Embedding an OLE Object</h3>
 
<P>
To link or embed an OLE object in an unbound object frame on a form, first
set the following properties of the frame:

<UL><LI>OLETypeAllowed: Set to acOLELinked to indicate the OLE field will
   contain a linked object, acOLEEmbedded for an embedded object, or
   acOLEEither for either linked or embedded.

<LI>SourceDoc: Set to the path and file name of the file to be linked or
   embedded. Do not set this property if you are creating an empty OLE
   object.

<LI>Class: Set to the class name of the file extension. You can get the
   class from the Windows registry file in HKEY_CLASSES_ROOT listed
   under the file extension. You can also find the information in the
   documentation for the application supplying the object. This property
   may not be required, depending upon the OLE server and object being
   used.

<LI>SourceItem: Indicates the portion of data in the source document to
   link to. For example, it can be a cell or cell range in a Microsoft
   Excel spreadsheet or a bookmark in a Microsoft Word for Windows
   document. This property setting is optional.
<P>
</UL>Once you set these properties, you can set the Action property to
acOLECreateLink to link an object in the object frame, or acOLECreatEmbed
to embed an object.
<P>
The following methods show examples of both linking and embedding an OLE
object in an unbound object frame.
<P>
<P><h3>Method to Link an OLE Object</h3>
 

<OL><P><LI>Start Microsoft Excel.

<P><LI>Create a new spreadsheet with the following entries:
<P>
<PRE>       A1 : Name             B1 : Salary  C1 : Dept.   D1 :  Qty Sold
       A2 : Nancy Davolio    B2 : 16,000  C2 :     9   D2 :        19
       A3 : Andrew Fuller    B3 : 25,000  C3 :     3   D3 :       129
       A4 : Michael Suyama   B4 : 28,500  C4 :     3   D4 :       234
       A5 : Janice Leverling B5 : 30,000  C5 :    12   D5 :       199
       A6 : Linda Callahan   B6 : 50,000  C6 :     9   D6 :       126
       A7 : Johnathan King   B7 : 50,000  C7 :    12   D7 :        45

</PRE><P><LI>Save the spreadsheet as TestOLEAuto.xls, and then quit Microsoft
   Excel.

<P><LI>Start Microsoft Access.

<P><LI>Create a new form not based on any table or query in Design view.

<P><LI>Add an unbound object frame control to the detail section of the form.

<P><LI>In the Insert Object dialog box, click Create New, and then select
   Microsoft Excel Worksheet in the Object Type box. Click OK, and then
   quit Microsoft Excel when it starts.

<P><LI>Set the Name property of the unbound object frame to OLEExcelSheet.

<P><LI>Add a command button to the form, and set its Name property to
   cmdOLEAuto.

<P><LI>Set the OnClick property of the cmdOLEAuto command button to the
<P><PRE>    following event procedure:
</PRE><P>
<P><PRE>       Private Sub cmdOLEAuto_Click()
</PRE><P>
<PRE>          On Error GoTo Error_cmdOleAuto_Click
          With Me![OLEExcelSheet]
             .Enabled = True
             .Locked = False
             ' Specify what kind of object can appear in the field.
             .OLETypeAllowed = acOLELinked
             ' Class statement--optional for Excel worksheet.
             .Class = "Excel.Sheet"
             ' Specify the file to be linked.
             ' Type the correct path name.
             .SourceDoc = "c:\&lt;pathname&gt;\TestOLEAuto.xls"
             ' Range statement--optional for Excel worksheet.
             .SourceItem = "R1C1:R7C4"
             ' Create the linked object.
             .Action = acOLECreateLink
             ' Optional size adjustment.
             .SizeMode = acOLESizeZoom
          End With
       Exit_cmdOLEAuto_Click:
          Exit Sub
       Error_cmdOleAuto_Click:
          MsgBox CStr(Err) &amp; " " &amp; Err.Description
          Resume Exit_cmdOLEAuto_Click
       End Sub

</PRE><P><LI>Save the form as frmOLEAutoLink.

<P><LI>Open the form in Form view and click the cmdOLEAuto command button.
<P><PRE>    Note that the TestOLEAuto.xls spreadsheet appears in the form.
</PRE><P>
</OL><h3>Method to Embed an OLE Object</h3>
 

<OL><P><LI>Start Microsoft Word.

<P><LI>Create a new document and type some text into it.

<P><LI>Save the document as TestOLEAuto.doc, and then quit Microsoft Word.

<P><LI>Start Microsoft Access.

<P><LI>Create a new form not based on any table or query in Design view.

<P><LI>Add an unbound object frame control to the detail section of the form.

<P><LI>In the Insert Object dialog box, click Create New, and then select
   Microsoft Word Document in the Object Type box. Click OK, and then
   quit Microsoft Word when it starts.

<P><LI>Set the following properties for the unbound object frame:
<P>
<P><PRE>      Unbound Object Frame
      --------------------
      Name: OLEWordDoc
      Height: 11"
</PRE>
<P><LI>Add a command button to the form, and set its Name property to
   cmdOLEAuto.

<P><LI>Set the OnClick property of the cmdOLEAuto command button to the
<P><PRE>    following event procedure:
</PRE><P>
<P><PRE>       Private Sub cmdOLEAuto_Click()
<PRE></PRE>          On Error GoTo Error_cmdOLEAuto_Click
          With Me![OLEWordDoc]
             .Enabled = True
             .Locked = False
             ' Specify what kind of object can appear in the field.
             .OLETypeAllowed = acOLEEmbedded
             ' Class statement for Word document.
             .Class = "Word.Document"
             ' Specify the file to be embedded.
             ' Type the correct path name.
             .SourceDoc = "c:\&lt;pathname&gt;\TestOLEAuto.doc"
             ' Create the embedded object.
             .Action = acOLECreateEmbed
             ' Optional size adjustment.
             .SizeMode = acOLESizeZoom
          End With
       Exit_cmdOLEAuto_Click:
          Exit Sub
       Error_cmdOLEAuto_Click:
          MsgBox CStr(Err) &amp; " " &amp; Err.Description
          Resume Exit_cmdOLEAuto_Click
       End Sub

</PRE><P><LI>Save the form as frmOLEAutoEmbed.

<P><LI>Open the form in Form view and click the cmdOLEAuto command button.
<P><PRE>    Note that the TestOLEAuto.doc document appears in the form.
</PRE><P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about the Action property, search the Help Index for
"Action property," or ask the Microsoft Access 97 Office Assistant.
<P>
For more information about OLE linking and embedding, please see the
following articles in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q123859.htm">Q123859</A></B>
   TITLE     : ACC: Sample OLE Automation for MS Word and MS Excel

   ARTICLE-ID: <B><A HREF="../vbapps/Q132003.htm">Q132003</A></B>
   TITLE     : ACC: How to Save a Copy of an Embedded MS Word Document

   ARTICLE-ID: <B><A HREF="../ACCESS/Q114214.htm">Q114214</A></B>
   TITLE     : ACC2: How to Programmatically Embed or Link an Object in a
               Form
</PRE></OL> 
<PRE>Keywords          : kbole kbprg PgmHowTo FmsHowTo IntpOle
Version           : 7.0 97
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
