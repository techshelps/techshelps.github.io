

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL97: Error Passing Objects to Subroutine </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q157407">
<META NAME="KBModify" CONTENT="1998/03/13">
<META NAME="KBCreate" CONTENT="1996/10/10">
<META NAME="Keywords" CONTENT="kbcode kberrmsg kbprg xlvbahowto xlvbainfo">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  When you run a macro in Microsoft Excel 97, you may receive the following error message:     Run-time error '424':    Object required  and the macro ends.  CAUSE =====  This problem may occur when all of the following conditions are true:   - You p...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGI,QAH6,QAFF,QAH7,QAPN,QAD7,QBVP,QAIF,QAW6,QBV3,QAB4,QBS0,QBVV,QAH4,QAB9 P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL97: Error Passing Objects to Subroutine</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 13, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q157407</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When you run a macro in Microsoft Excel 97, you may receive the following
error message:
<P>
<PRE>   Run-time error '424':
   Object required

</PRE>and the macro ends.
<P>
<P><h2>CAUSE</h2>
 
<P>
This problem may occur when all of the following conditions are true:

<UL><LI>You pass an object, such as a drop-down list, to a subroutine.
<P>
   -and-

<LI>You do not use the Call statement in the statement that calls the
   subroutine
<P>
   -and-

<LI>You enclose the object that is being passed in parentheses in the
   statement that calls the subroutine.
<P>
</UL>NOTE: This problem does not occur in Microsoft Excel 5.0 and 7.0.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft support engineers can help explain the
functionality of a particular macro, they will not modify these examples to
provide added functionality, nor will they help you construct macros to
meet your specific needs. If you have limited programming experience, you
may want to consult one of the Microsoft Solution Providers. Solution
Providers offer a wide range of fee-based services, including creating
custom macros. For more information about Microsoft Solution Providers,
call Microsoft Customer Information Service at (800) 426-9400.
<P>
The following subroutine generates a run-time error in Microsoft Excel 97:
<P>
<PRE>   Sub Passing_Routine()

       'Pass the drop-down object that is on Sheet1 of your workbook
       'to the subroutine called "Populate_Dropdown"

       Populate_Dropdown (Sheets("sheet1").DropDowns("Drop Down 1"))

   End Sub

   '-------------------------------------------------------------------
   'This is the subroutine that is being called by the above subroutine
   'and takes the drop-down that is being passed as its argument.

   Sub Populate_Dropdown(mydropdown as DropDown)

       mydropdown.List = Array("a", "b", "c")

   End Sub

</PRE>To resolve this problem, use either of the following methods.
<P>
<P><h3>Method 1</h3>
 
<P>
Use the Call statement to call the subroutine. For example, the following
macro illustrates how to call the subroutine Populate_Dropdown:
<P>
<PRE>   Sub Passing_Routine()

       'Pass the drop-down object that is on Sheet1 of your workbook
       'to the subroutine called "Populate_Dropdown".

       Call Populate_Dropdown (Sheets("sheet1").DropDowns("Drop Down 1"))

   End Sub

</PRE><h3>Method 2</h3>
 
<P>
Remove the parentheses that are around the object that is passed to the
subroutine. In the following example, the parentheses are removed:
<P>
<PRE>   Sub Passing_Routine()

       'Pass the drop-down object that is on Sheet1 of your workbook
       'to the subroutine called "Populate_Dropdown".

       Populate_Dropdown Sheets("sheet1").DropDowns("Drop Down 1")

   End Sub

</PRE><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in the Microsoft products
listed at the beginning of this article. We are researching this problem
and will post new information here in the Microsoft Knowledge Base as it
becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
You are not required to use the Call keyword when calling a procedure.
However, if you use the Call keyword to call a procedure that requires
arguments, these arguments must be enclosed in parentheses. If you omit the
Call keyword, omit the parentheses that are around the argument list. To
pass an array to a procedure, use the array name followed by empty
parentheses.
<P>
For additional information about passing arguments to subroutines, please
see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../zMiscellaneous/Q41535.htm">Q41535</A></B>
   TITLE     : Syntax Differs When Calling a SUB without the CALL Keyword
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: XL97 dropdown drop down byref byval parameter<BR>
Keywords          : kbcode kberrmsg kbprg xlvbahowto xlvbainfo<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 13, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
