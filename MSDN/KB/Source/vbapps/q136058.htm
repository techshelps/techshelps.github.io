

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: Converting Macros to MS Visual Basic for Applications </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q136058">
<META NAME="KBModify" CONTENT="1997/08/29">
<META NAME="KBCreate" CONTENT="1995/08/31">
<META NAME="Keywords" CONTENT="kbprg PgmHowTo">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  With macros, you can accomplish many tasks, such as opening and closing forms, showing and hiding toolbars, and running reports. However, if you want more control over your appli...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAH4,QAPN,QA1S,QA5F,QAMA,QAB9,QBWS,QAEQ,QBTI,QDN9,QAY5,QAMB,QAJQ,QAIK P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: Converting Macros to MS Visual Basic for Applications</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q136058</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
With macros, you can accomplish many tasks, such as opening and closing
forms, showing and hiding toolbars, and running reports. However, if you
want more control over your application's behavior, you can convert your
macros to procedures using Visual Basic for Applications. To help you
convert existing macros to Visual Basic code, you can use the Microsoft
Access for Windows 95 version 7.0 Macro Conversion Wizard. This article
explains how to use the Macro Conversion Wizard, and how it converts your
macro actions.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To convert a macro to Visual Basic code, follow these steps:

<OL><P><LI>Open the sample database Northwind.mdb.

<P><LI>In the Database window, click the Macros tab, and select the Customer
   Labels Dialog macro.

<P><LI>On the File menu, click Save As/Export.

<P><LI>In the SaveAs box, click Save as Visual Basic Module, and then click OK.

<P><LI>In the Convert macro box, select the "Add error handling/trapping to
   generated functions" option and the "Include macro comments"
   option.

<P><LI>Click Convert.
<P>
</OL>The Macro Conversion Wizard performs the following tasks when it converts a
macro to Visual Basic code:

<UL><LI>It creates a new module of procedures using the same names from the
   Macro Names column in the original macro.

<LI>It converts macro actions to appropriate DoCmd methods in Visual Basic.
   For the several macro actions that do not have a DoCmd equivalent, the
   Macro Conversion Wizard does the following:
<P>
<PRE>    No DoCmd Equivalent   Solution
    -----------------------------------------------------------------------

    AddMenu               The wizard comments out these lines in the code
                          and notifies the user.

    MsgBox                Uses the MsgBox function.

    RunApp                Uses the Shell function to run another
                          application.

    RunCode               Uses the Call statement and runs the function
                          directly in Visual Basic.

    SendKeys              Uses the SendKeys statement.

    SetValue              Sets the value directly in Visual Basic.

    StopAllMacros         Uses the End statement.

    StopMacro             Uses the Exit Function statement.

</PRE><LI>Expressions in the macro's Condition column are converted into If...Then
   statements.

<LI>If the Condition column contains a full reference to a control in a form
   or report (for example, Forms!MyForm![LastName]), Microsoft Access uses
   If...Then statements. If the reference refers to a control name only
   (for example, [LastName]), then Microsoft Access uses a With...End With
   or a CodeContextObject statement.
<P>
</UL><h2>REFERENCES</h2>
 
<P>
For more information about converting macros to Visual Basic for
Applications code, search in the Help Index for "converting macros," or
ask the Microsoft Access 97 Office Assistant.
 
<PRE>Keywords          : kbprg PgmHowTo
Version           : 7.0 97
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbinfo</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
