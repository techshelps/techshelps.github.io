

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: Visual Basic Macro to Convert Lotus Files to MS Excel </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q115343">
<META NAME="KBModify" CONTENT="1997/09/10">
<META NAME="KBCreate" CONTENT="1994/05/24">
<META NAME="Keywords" CONTENT="kbprg PgmHowTo xlwin kbcode kbhowto kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Microsoft Excel versions 5.0 and later can read Lotus 1-2-3 worksheets. In addition, you can create a Visual Basic for Applications procedure to automatically open each Lotus 1-2-3 file in a specified folder (directory) and save it as a Microsoft E...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QBS0,QAH4,QBJZ,QAFI,QBWS,QBQU,QAJC,QABM,QA5F,QAMA,QANE,QABA,QABI,QACI P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: Visual Basic Macro to Convert Lotus Files to MS Excel</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q115343</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, version 5.0
<LI>Microsoft Excel for Windows 95, version 7.0
<LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Microsoft Excel versions 5.0 and later can read Lotus 1-2-3 worksheets. In
addition, you can create a Visual Basic for Applications procedure to
automatically open each Lotus 1-2-3 file in a specified folder (directory)
and save it as a Microsoft Excel workbook file (.XLS).
<P>
The macro example in the "More Information" section of this article
demonstrates a looping procedure you can use to perform this action. The
example provided does not delete the original Lotus files, and it will
prompt you if a file with the same name is about to be overwritten.
<P>
NOTE: If you are using Microsoft Excel version 5.0 or 5.0c, you need to use
the "Lotus 1-2-3 WK4 File Converter" in order to read Lotus 1-2-3 version
4.0 files. This converter is available as an Application Note. For
additional information, please see the following article in the Microsoft
Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../EXCEL/Q122583.htm">Q122583</A></B>
   TITLE     : XL5: AppNote: Lotus 1-2-3 WK4 File Converter (WE1130)

</PRE><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides examples of Visual Basic procedures for illustration
only, without warranty either expressed or implied, including but not
limited to the implied warranties of merchantability and/or fitness for a
particular purpose. This Visual Basic procedure is provided 'as is' and
Microsoft does not guarantee that it can be used in all situations.
Microsoft does not support modifications of this procedure to suit customer
requirements for a particular purpose.
<P>
To insert a Visual Basic module into a workbook in Microsoft Excel versions
5.x and 7.x, click the Insert menu, point to Macro, and click Module.
<P>
To insert a Visual Basic module into a workbook in Microsoft Excel 97, click
the Tools menu, point to Macro, and click Visual Basic Editor. Then, click
Module on the Insert menu.
<P>
Once you have inserted a module into your workbook, enter the following code
into the module:
<P>
<PRE>   Sub LotusConverter()

       'Set "filenam" to the first matching file in the current folder.
       filenam = Dir("*.wk*")

       'Loop to open each matching file in the current folder.
       Do While Len(filenam) &gt; 0
 
           On Error Resume Next

           'Opens the file.
           Workbooks.Open Filename:=filenam

           'Continues execution if there was no error opening the file.
           If Err = 0 Then

               'Creates "newname" based on original Lotus file name.
               newnam = Left(filenam, InStr(1, filenam, ".") - 1) &amp; ".xls"
               'Saves the new file as a Microsoft Excel normal file.
               ActiveWorkbook.SaveAs Filename:=newnam, FileFormat:=xlNormal
               'Closes the current file.
               ActiveWorkbook.Close
           Else

               'Display message if opening filenam was unsuccessful.
               MsgBox "Unable to Open file: " &amp; CurDir() &amp; "\" &amp; filenam
               'Resets error checking.
               Err = 0

           End If
   
           'Gets the next file name
           filenam = Dir()
           'Repeats the loop for all matching files in the current folder.
       Loop

   End Sub

</PRE>Before you run the macro, make sure the folder where the Lotus 1-2-3 files
are located is set as the current folder. In Microsoft Excel 97, on the
Tools menu, point to Macro, and click Macros. Then, click LotusConverter in
the list of macros, and click Run. In Microsoft Excel version 5.0 or 7.0,
on the Tools menu, click Macro, click LotusConverter in the list of macros,
and then click Run.
<P>
The macro will proceed without your intervention unless a duplicate
file name is found (in which case you will be prompted to change the
duplicate file name).
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 7.00 5.00 97 batch converter multiple files<BR>
Keywords          : kbprg PgmHowTo xlwin kbcode kbhowto kbprg<BR>
Version           : 5.00 5.00c 7.00 97<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
