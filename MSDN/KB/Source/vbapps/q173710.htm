

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Assigning Help Files and Topic IDs in a Visual Basic Project </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q173710">
<META NAME="KBModify" CONTENT="1998/02/27">
<META NAME="KBCreate" CONTENT="1997/09/11">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  This article describes how to configure a Visual Basic for Applications project to use a specific Help file. The ActiveX and Forms controls in a UserForm can use context-sensitive Help to display Help topics in the Help file.  MORE INFORMATION  Ass...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAMN,QA6A,QAPN,QAB5,QA7O,QAOE,QAHV,QAJN,QAH4,QBWS,QA4H,QAW6,QA5F,QAMA P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Assigning Help Files and Topic IDs in a Visual Basic Project</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 27, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q173710</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article describes how to configure a Visual Basic for Applications
project to use a specific Help file. The ActiveX and Forms controls in a
UserForm can use context-sensitive Help to display Help topics in the Help
file.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Assigning a Help File to a Project</h3>
 
<P>
Configuring a Visual Basic project to use a particular Help file allows you
to assign a Help topic identification number to a control on a UserForm.
When you select the control and press F1, the topic in the Help file
appears. To assign a Help file to a project, follow these steps:

<OL><P><LI>In the Visual Basic Editor (press ALT+F11), right-click any object in
   the project in the Project Explorer and click VBAProject Properties.

<P><LI>In the "VBAProject - Project Properties" dialog box, type the path and
   file name of the Help file in the Help File Name box or click the
   button to the right of the box to find the Help file. Click OK.
<P>
</OL><h3>Assigning a Help Topic to an Office Form Control</h3>
 
<P>
To assign a Help topic ID to an existing Office form control, follow these
steps:

<OL><P><LI>In the Visual Basic Editor (press ALT+F11), display the UserForm with
   the control, and then right-click the control and click Properties.

<P><LI>In the Properties window, set the HelpContextId property to the topic
   ID for the topic you want to appear when F1 is pressed.
<P>
<P>
</OL><h3>Assigning a Help File and Topic at Run Time</h3>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/supportnet/refguide/">http://www.microsoft.com/supportnet/refguide/</A></B>

</PRE></OL>You can also assign the Help file and Help topic ID at run time by
specifying the HelpFile property for the project and the HelpContextId
property for the control. To assign a Help file and topic, follow these
steps:

<OL><P><LI>Display the Code window for the UserForm by right-clicking the UserForm
   and clicking View Code. Click UserForm in the Object list. Click
   Activate in the Procedure list and type the following code in a Sub
   procedure
<P>
<P><PRE>      Application.VBE.VBProjects&lt;project&gt;.HelpFile = &lt;help file&gt;
      &lt;object&gt;.HelpContextId = &lt;value&gt;
</PRE><P>
   where &lt;project&gt; is the name of the Visual Basic project.
<P>
   NOTE: You can use the ActiveProject property instead as in the following
   example:
<P>
<P><PRE>      Application.VBE.ActiveProject.HelpFile = "C:\myHelp.hlp"
</PRE><P>
   Note that &lt;help file&gt; is the path and file name of the Help file and
   &lt;object&gt; is the object name of the ActiveX control on the UserForm. For
   example, if you are using the Toolbar control, the statement is similar
   to the following:
<P>
<P><PRE>      Toolbar1.HelpContextId = 1
</PRE><P>
   Also, &lt;value&gt; is the Help topic ID you want to appear when Help is
   displayed.
<P>
</OL><h3>Assigning a Help Topic to an ActiveX Control</h3>
 
<P>
To assign a Help topic ID to an ActiveX control, use the HelpCommand and
HelpContext properties. To assign a Help topic ID to an ActiveX control,
follow these steps:

<OL><P><LI>In the Visual Basic Editor (press ALT+F11), display the UserForm with
   the ActiveX control, and then double-click the UserForm.

<P><LI>In the Code window for the UserForm, click UserForm in the Object list.
   Click Activate in the Procedure list. Type the following code
   in a Sub procedure
<P>
<P><PRE>      Application.VBE.VBProjects&lt;project&gt;.HelpCommand = cdlHelpContext
      &lt;control&gt;.HelpContext = &lt;value&gt;
</PRE><P>
   where &lt;project&gt; is the name of the Visual Basic project.
<P>
   NOTE: You can use the ActiveProject object instead as in the following
   example:
<P>
<P><PRE>      Application.VBE.ActiveProject.HelpCommand = cdlHelpContext
</PRE><P>
   Note that &lt;control&gt; is the name of the ActiveX control. For example if
   you are using the Slider control, the statement is similar to the
   following:
<P>
<P><PRE>      Slider1.HelpContext = 10
</PRE><P>
   Also, &lt;value&gt; is the Help topic ID you want to appear when Help is
   displayed.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about context-sensitive Help in a project, click
the Index tab in Microsoft Visual Basic Help, type the following text
<P>
<PRE>   helpcontextid

</PRE></OL>and then double-click the selected text to go to the "HelpContextId
Property" topic.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: XL97 helpid vbaxl8.hlp xlmain8.hlp<BR>
Keywords          : kbprg<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 27, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
