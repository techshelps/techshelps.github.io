

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: How to Determine If a Form Exists in a Database </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q92825 ">
<META NAME="KBModify" CONTENT="1997/08/29">
<META NAME="KBCreate" CONTENT="1992/11/16">
<META NAME="Keywords" CONTENT="kbprg PgmHowTo PgmObj">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  This article demonstrates how to create a Visual Basic for Application function to determine if a form exists in a database. If the form is in the database, the function ope...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA1S,QDN9,QAZV,QBS0,QAH4,QBE7,QBE6,QAHD,QAUJ,QA5F,QAMA,QAD2,QBXS,QBVV,QAPN P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: How to Determine If a Form Exists in a Database</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q92825 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access 1.0, 1.1, 2.0, 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
This article demonstrates how to create a Visual Basic for Application
function to determine if a form exists in a database. If the form is in
the database, the function opens it; otherwise you get a message box
stating the form does not exist in this database.
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
NOTE: Visual Basic for Applications is called Access Basic in Microsoft
Access versions 1.x and 2.0. For more information about Access Basic,
please refer to the "Introduction to Programming" manual in Microsoft
Access version 1.x or the "Building Applications" manual in Microsoft
Access version 2.0
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Microsoft Access 2.0, 7.0 and 97</h3>
 
<P>
<PRE>   Option Explicit
   Sub DAOFormOpener (FormToOpen as String)
      Dim mydb As Database, x As Integer
      Set mydb = CurrentDB()

      For x = 0 To mydb.containers("forms").documents.count - 1
         If FormToOpen = mydb.containers("forms").documents(x).name Then
            DoCmd.OpenForm FormToOpen 'Version 7.0 and 97 syntax
            'DoCmd OpenForm FormToOpen 'Version 2.0 syntax
            Exit Sub
         End If
      Next x
      MsgBox FormToOpen &amp; " does not exist in this database."
   End Sub

</PRE><h3>Microsoft Access 1.x</h3>
 
<P>
If you want to obtain a complete list of forms, whether or not they are
active, you can create a dynaset that queries MSysObjects for all the
forms stored in the current database. MSysObjects stores the names of
every object in a database, and each record includes the type of object
represented by a code and stored in a field called Type. The code that
represents forms in the Type field is -32768. Given this information, you
can create a dynaset that obtains the names of all the form objects in
MSysObjects.
<P>
NOTE: In the following sample code, an underscore (_) at the end of a
line is used as a line-continuation character. Remove the underscore
from the end of the line when re-creating this code.
<P>
<PRE>   Dim DB As Database, S As Dynaset
   Set DB = CurrentDB()
   Set S = DB.CreateDynaset("SELECT Name FROM MSysObjects _
     WHERE Type = -32768;")

</PRE>After running the code above, a dynaset called S is created. This dynaset
contains the names of all the forms in the current user database. You can
then process the information as shown in the example below. The procedure
below accepts a form name and opens it if it exists in the database, or
presents a message indicating that it does not exist in the database:
<P>
<PRE>   Option Explicit
   Sub FormOpener (FormToOpen$)
      Dim DB As Database
      Dim S As Dynaset
      Set DB = CurrentDB()
      Set S = DB.CreateDynaset("SELECT Name FROM MSysObjects _
         WHERE Type = -32768;")

      S.FindFirst "Name = '" &amp; FormToOpen$ &amp; "'"
      If S.NoMatch Then
         MsgBox FormToOpen$ &amp; " does not exist in this database"
      Else
         DoCmd OpenForm FormToOpen$
      End If
   End Sub

</PRE>NOTE: This code applies only to Microsoft Access 1.x and 2.0 because
later versions lack the Dynaset object and CreateDynaset method.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: vt<BR>
Keywords          : kbprg PgmHowTo PgmObj<BR>
Version           : 1.0 1.1 2.0 7.0 97<BR>
Platform          : WINDOWS<BR>
Hardware          : x86<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
