

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL97: Limitations for Naming Visual Basic Modules </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q158632">
<META NAME="KBModify" CONTENT="1998/03/09">
<META NAME="KBCreate" CONTENT="1996/11/01">
<META NAME="Keywords" CONTENT="kbprg kbdta kbdtacode xlvbainfo xlui xl97vbmigrate">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel 97, the names of Visual Basic for Applications modules are subject to certain limitations. This article explains these limitations how to avoid problems when module names include illegal characters.  MORE INFORMATION  Microsoft p...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QBVP,QAUJ,QBS0,QBJZ,QARM,QAO1,QBS8,QBWS,QBVV,QBWD,QABN,QAB4,QBTC,QAPF P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL97: Limitations for Naming Visual Basic Modules</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 9, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q158632</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Excel 97, the names of Visual Basic for Applications modules
are subject to certain limitations. This article explains these limitations
how to avoid problems when module names include illegal characters.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/supportnet/refguide/">http://www.microsoft.com/supportnet/refguide/</A></B>

</PRE><h3>Changing the Name of a Module in Microsoft Excel 97</h3>
 
<P>
In Microsoft Excel 97, you can rename a module by activating the module,
clicking to the right of "(Name)" in the Properties window of the Visual
Basic Editor, typing a new module name, and pressing ENTER.
<P>
You can also programmatically change the name of a module by using code
similar to the following:
<P>
<PRE>   ActiveWorkbook.Modules("Module1").Name = "Module7"

</PRE><h3>Limitations for Naming Modules in Microsoft Excel 97</h3>
 
<P>
In Microsoft Excel 97, module names can include the following characters:

<UL><LI>Alphanumerics (A-Z, a-z, 0-9)

<LI>Underscore characters (_)
<P>
</UL>Illegal characters (characters that cannot be used in module names) include
the following:

<UL><LI>Spaces ( )

<LI>Exclamation points (!)

<LI>Periods (.)

<LI>Question marks (?)

<LI>Commas (,)

<LI>Any other nonalphanumeric characters
<P>
</UL>NOTE: Some characters that are illegal in Microsoft Excel 97 are acceptable
in earlier versions of Microsoft Excel.
<P>
Module names cannot exceed 31 characters in length.
<P>
Module names cannot start with a numeric character (0-9) or an underscore
character (_). Module names must start with an alphabetical character (A-Z,
a-z).
<P>
If you try to rename a module so that its name includes illegal characters,
you will receive the following error message:
<P>
<PRE>   Not a legal object name: '&lt;module name&gt;'

</PRE>where &lt;module name&gt; is the name of the active module sheet.
<P>
<P><h3>Names of Modules That You Created in Earlier Versions of Microsoft Excel</h3>
 
<P>
If you open a workbook that contains modules with names that include
characters that are illegal in Microsoft Excel 97, the modules and the
macros they contain are still available.
<P>
None of the modules are renamed by Microsoft Excel 97. However, if a
module's name contains an exclamation point, the exclamation point is
replaced on the screen by a question mark. However, the actual name of the
module does not change.
<P>
For example, if you open a Microsoft Excel 5.0 or 7.0 workbook that
contains the following three modules, Microsoft Excel 97 may change the
module names. The following table illustrates how the module names would
appear.
<P>
<PRE>   Original             Module name that appears
   module name          in the Project Window
   ---------------------------------------------

   Module!1             Module?1
   My Module            My Module
   xyz.Module           xyz.Module

</PRE>Microsoft strongly recommends that you rename such modules so that their
names do not include any illegal characters. For example, in the table
above, rename the module from Module!1 to Module1 or Module_1.
<P>
For more information, see the following article in the Microsoft Knowledge
Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q159465.htm">Q159465</A></B>
   TITLE     : XL97: "Module not Found" Error Opening Workbook

</PRE>Note that renaming modules may require that you modify your Visual Basic
macro code wherever it refers to a module by name.
<P>
<P><h3>Exporting or Importing Modules with Names That Contain Illegal Characters</h3>
 
<P>
In Microsoft Excel 97, you can export a Visual Basic module to a separate
file by activating the module and clicking Export File on the File menu.
This works even if the module name includes illegal characters.
<P>
However, when you click Import File on the File menu and attempt to import
a file, you may receive the following error message:
<P>
<PRE>   Not a legal object name: '&lt;module name&gt;'

</PRE>where &lt;module name&gt; is the name of the module.
<P>
This problem occurs if the VB_Name attribute in the file contains any
illegal characters.
<P>
To prevent this problem from occurring, use the following steps:

<OL><P><LI>On the Start menu, click Run. In the Open box, type "Notepad"
   (without the quotation marks), and click OK.

<P><LI>In Notepad, click Open on the File menu. Select the file you want
   to import into Microsoft Excel, and click Open.
<P>
   The first line of the file should look similar to the following example:
<P>
<P><PRE>      Attribute VB_Name = "Module 1"
</PRE>
<P><LI>Change the name inside the quotation marks to a name that does not
   contain any illegal characters. For example, use Module1 or Module_1.

<P><LI>When you are done, click Save on the File menu. Then, click Exit on
   the File menu.
<P>
</OL>NOTE: If your Visual Basic module is very large, you may need to edit it
using Wordpad or another text editor.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: XL97<BR>
Keywords          : kbprg kbdta kbdtacode xlvbainfo xlui xl97vbmigrate<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 9, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
