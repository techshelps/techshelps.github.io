

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: How to Fill a Combo Box with Table Names </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q126946">
<META NAME="KBModify" CONTENT="1997/11/10">
<META NAME="KBCreate" CONTENT="1995/03/07">
<META NAME="Keywords" CONTENT="kbprg PgmObj FmsHowTo">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  This article demonstrates a sample user-defined Visual Basic for Applications function that you can use to fill a combo box or list box with the names of all the tables in the cu...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA1S,QDN9,QBS0,QAH4,QA5F,QAMA,QAGX,QBCF,QA5V,QAZV,QAJH,QAY5,QAX6,QANF,QAB5 P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: How to Fill a Combo Box with Table Names</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q126946</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 2.0, 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
This article demonstrates a sample user-defined Visual Basic for
Applications function that you can use to fill a combo box or list box
with the names of all the tables in the current database.
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
NOTE: Visual Basic for Applications is called Access Basic in Microsoft
Access version 2.0. For more information about Access Basic, please refer
to the "Building Applications" manual.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following steps demonstrate how to create and use the sample
ListAllTables() function:

<OL><P><LI>Start Microsoft Access and open the sample database Northwind.mdb
   (or NWIND.MDB. in Microsoft Access 2.0).

<P><LI>Create a new module and enter the following code in the module.
<P>
   NOTE: In the following sample code, an underscore (_) at the end of a
   line is used as a line-continuation character. Remove the underscore
   from the end of the line when re-creating this code in Access Basic.
<P>
<P><PRE>      Function ListAllTables (fld As Control, id As Long, row As _
      Long, col As Long, code As Integer)
<PRE></PRE>         Dim db As Database
         Dim tbdf As TableDef
         Static tbls(256) As String
         Static Entries As Integer
         Dim i As Integer
         Dim ReturnVal
         ReturnVal = Null
         Select Case code
            Case LB_INITIALIZE         ' Initialize database.
               Set db = DBEngine.Workspaces(0).databases(0)
               Entries = 0
               For i = 0 To db.tabledefs.count - 1
                  tbls(Entries) = db.tabledefs(i).name
                  Entries = Entries + 1
               Next i
               ReturnVal = Entries
            Case LB_OPEN               ' Open.
               ReturnVal = Timer       ' Unique ID number for control.
            Case LB_GETROWCOUNT        ' Number of rows.
               ReturnVal = Entries
            Case LB_GETCOLUMNCOUNT     ' Number of columns.
               ReturnVal = 1
            Case LB_GETCOLUMNWIDTH     ' Column width.
               ReturnVal = -1          ' Use the default width.
            Case LB_GETVALUE           ' Get the data.
               ReturnVal = tbls(row)
            Case LB_END                ' End.
               For Entries = 0 To 256
                  tbls(Entries) = ""
               Next
         End Select
         ListAllTables = ReturnVal
      End Function

</PRE><P><LI>Create a blank new form that is not based on any table or query.

<P><LI>Add a combo box control to the form.

<P><LI>Set the combo box's RowSourceType property to ListAllTables.

<P><LI>View the form in Form view. Note that the combo box lists all the tables
   in the current database.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about DAO, search the Help Index for "DAO
collections," or ask the Microsoft Access 97 Office Assistant.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: tablenames<BR>
Keywords          : kbprg PgmObj FmsHowTo<BR>
Version           : 2.0 7.0 97<BR>
Platform          : WINDOWS<BR>
Hardware          : x86<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
