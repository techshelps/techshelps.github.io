

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL7: MS Access DDEPoke Help Example Fails If Run from MS Excel </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q151269">
<META NAME="KBModify" CONTENT="1997/09/03">
<META NAME="KBCreate" CONTENT="1996/05/20">
<META NAME="Keywords" CONTENT="PgmOthr kbcode kbinterop kbprb kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  The Microsoft Access version 7.0 Visual Basic online Help Example for the DDEPoke Statement will fail if run from a Microsoft Excel module. It works when run from Microsoft Access, and there are no error messages or other indications of failure whe...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QBS0,QAB4,QA1S,QAAP,QAY2,QAPN,QAH4,QAPF,QDN9,QA5V,QAGB,QBWS,QBVV,QAA1 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL7: MS Access DDEPoke Help Example Fails If Run from MS Excel</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 3, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q151269</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows 95, version 7.0
</UL> 
<P>
SYMPTOMS
 
<P>
The Microsoft Access version 7.0 Visual Basic online Help Example for the
DDEPoke Statement will fail if run from a Microsoft Excel module. It works
when run from Microsoft Access, and there are no error messages or other
indications of failure when run from Microsoft Excel. The data is simply
not passed as expected.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following example works in Microsoft Access, but not in Microsoft
Excel:
<P>
<PRE>   On Error Resume Next             ' Set up error handler.
   Dim Chan, SheetName, I, TopicList         ' Declare variables.
   Chan = DDEInitiate("Excel", "System")     ' Establish spreadsheet link.
   If Err Then                   ' If error occurs, spreadsheet
      Err = 0                    ' isn't running. Reset error
      I = Shell("Excel", 1)            ' and start spreadsheet.
      If Err Then Exit Sub          ' If another error, exit.
      Chan = DDEInitiate("Excel", "System")  ' Establish spreadsheet link.
   End If
   DDEExecute Chan, "[New(1)]"            ' Create new worksheet.
   TopicList = DDERequest(Chan, "Selection") ' Get topic list, worksheet
                              ' name.
   SheetName = Left(TopicList, InStr(1, TopicList, "!") - 1)
   DDETerminate Chan                ' Terminate DDE link.
   Chan = DDEInitiate("Excel", SheetName)       ' Establish link with new
                              ' worksheet.
   For I = 1 To 10                  ' Put some values into
      DDEPoke Chan, "R1C" &amp; I, I       ' first row.
   Next I
   DDEExecute Chan, "[Select(""R1C1:R1C10"")][New(2,2)]" ' Make chart.
   DDETerminateAll                  ' Terminate all links.

</PRE>CAUSE
 
<P>
The DDEPoke command contains three arguments: ChannelNumber, Item, and
Data. In Microsoft Excel the Data argument may only refer to text or
numbers represented by a range object or reference. The Microsoft Access
example fails in Microsoft Excel because the Data argument refers to the
variable "I," which is not an object or cell reference. Also, Microsoft
Excel does not support the DDETerminateAll method; Microsoft Excel uses the
DDETerminate method.
<P>
WORKAROUND
 
<P>
Microsoft provides examples of Visual Basic procedures for illustration
only, without warranty either expressed or implied, including but not
limited to the implied warranties of merchantability and/or fitness for a
particular purpose. This Visual Basic procedure is provided 'as is' and
Microsoft does not guarantee that it can be used in all situations.
Microsoft does not support modifications of this procedure to suit customer
requirements for a particular purpose. Note that a line that is preceded by
an apostrophe introduces a comment in the code-- comments are provided to
explain what the code is doing at a particular point in the procedure. Note
also that an underscore character (_) indicates that code continues from
one line to the next. You can type lines that contain this character as one
logical line or you can divide the lines of code and include the line-
continuation character. For more information about Visual Basic for
Applications programming style, see the "Programming Style in This Manual"
section in the "Document Conventions" section of the "Visual Basic User's
Guide."
<P>
The following modified example will work from a Microsoft Excel module:
<P>
<PRE>   On Error Resume Next                ' Set up error handler.
   Dim chan, SheetName, I, TopicList, rangeToPoke    ' Declare variables.
   chan = DDEInitiate("Excel", "System")     ' Establish spreadsheet link.
   If Err Then                         ' If error occurs, spreadsheet
     Err = 0                           ' isn't running. Reset error
     I = Shell("Excel", 1)             ' and start spreadsheet.
     If Err Then Exit Sub              ' If another error, exit.
     chan = DDEInitiate("Excel", "System")   ' Establish spreadsheet link.
   End If
   DDEExecute chan, "[New(1)]"            ' Create new worksheet.
   TopicList = DDERequest(chan, "Selection") ' Get topic list, worksheet
                              ' name.
   SheetName = Left(TopicList, InStr(1, TopicList, "!") - 1)
   DDETerminate chan                      ' Terminate DDE link.
   chan = DDEInitiate("Excel", SheetName)    ' Establish link with new
                              ' worksheet.
     For I = 1 To 10
       Set rangeToPoke = ThisWorkbook.Worksheets(1).Range("a1")
       rangeToPoke.Value = I           ' Put some values into
       DDEPoke chan, "R1C" &amp; I, rangeToPoke  ' first row.
     Next I
   DDEExecute chan, "[Select(""R1C1:R1C10"")][New(2,2)]" ' Make chart.
   DDETerminate chan                ' Terminate link.

</PRE>The following changes were made to the original example:

<OL><P><LI>Changed the Dim statement from
<P>
<P><PRE>      Dim chan, SheetName, I, TopicList
</PRE><P>
<P><PRE>      to:
</PRE><P>
<P><PRE>      Dim chan, SheetName, I, TopicList, rangeToPoke
</PRE><P>
<P><PRE>    adding rangeToPoke.
</PRE>
<P><LI>Changed the For..Next loop from
<P>
<P><PRE>    For I = 1 To 10
    DDEPoke Chan, "R1C" &amp; I, I
    Next I
</PRE><P>
<P><PRE>    to:
</PRE><P>
<P><PRE>    For I = 1 To 10
    Set rangeToPoke = ThisWorkbook.Worksheets(1).Range("a1")
    rangeToPoke.Value = I
    DDEPoke chan, "R1C" &amp; I, rangeToPoke
    Next I
</PRE>
<P><LI>Changed DDETerminate line from:
<P>
<P><PRE>    DDETerminateAll
</PRE><P>
<P><PRE>    to:
</PRE><P>
<P><PRE>    DDETerminate chan
</PRE><P>
</OL><h2>MORE INFORMATION</h2>
 
<P>
For additional information, please see the following article in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q139881.htm">Q139881</A></B>
   TITLE     : XL: Sample Code Demonstrating DDEPoke and POKE()

</PRE></OL>REFERENCES
 
<P>
Microsoft Excel, version 5.0, "Visual Basic User's Guide," Chapter 10,
"Using DDE"
<P>
For more information about DDEPoke in Microsoft Excel version 7.0, search
on the word DDEPoke, using the Microsoft Excel Help Index.
<P>
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 7.00 7.00a<BR>
Keywords          : PgmOthr kbcode kbinterop kbprb kbprg<BR>
Version           : 7.0<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 3, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
