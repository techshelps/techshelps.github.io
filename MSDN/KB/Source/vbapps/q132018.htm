

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: How to Use OpenDatabase to Open 3rd Party Database Files </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q132018">
<META NAME="KBModify" CONTENT="1997/08/29">
<META NAME="KBCreate" CONTENT="1995/06/26">
<META NAME="Keywords" CONTENT="kb3rdparty kbprg PgmHowTo">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  The OpenDatabase method in Visual Basic for Applications enables you to open an external database file and to work with data access objects (DAO) in that database. The OpenD...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA1S,QAZV,QAFI,QDN9,QBS0,QAPN,QDI1,QBFY,QAGU,QA5F,QAMA,QAPF,QATJ,QABM,QBWS P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: How to Use OpenDatabase to Open 3rd Party Database Files</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q132018</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 2.0, 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
The OpenDatabase method in Visual Basic for Applications enables you to
open an external database file and to work with data access objects (DAO)
in that database. The OpenDatabase method supports Microsoft Access
databases and a number of third-party databases including any database
that supports ODBC.
<P>
The OpenDatabase method supports opening third-party databases in their
native file formats in much the same way that you can link (attach) a
table in Microsoft Access.
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
NOTE: Visual Basic for Applications is called Access Basic in Microsoft
Access version 2.0. For more information about Access Basic, please refer
to the "Building Applications" manual.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The "Connect Property" topic in Help (or the "OpenDatabase Method
(Data Access)" in Microsoft Access version 2.0) states that you use
the following settings to connect to the supported database formats.
<P>
<PRE>   NOTE: The following table is an excerpt from Help. Please see the
   Help topic above in your version of Microsoft Access for a full list.

   Database Type  Specifier                   Example
   ------------------------------------------------------
   dBASE IV       dBASE IV;                   drive:\path
   dBASE 5        dBASE 5.0;                  drive:\path
   Paradox 5.x    Paradox 5.x;                drive:\path
   FoxPro 2.5     FoxPro 2.5;                 drive:\path
   FoxPro 2.6     FoxPro 2.6;                 drive:\path
   Text           Text;                       drive:\path
   ODBC           ODBC;                       None
                  DATABASE=defaultdatabase;
                  UID=user;
                  PWD=password;
                  DSN=datasourcename
                  [LOGINTIMEOUT=seconds]

</PRE>The Example column lists the drive and the path, but not the file name.
A file name is not required for these database formats because the folder
(directory) in which the files are stored is considered to be the database.
If you do list a file name, you may receive unexpected results.
<P>
For example, to open a Microsoft FoxPro file named Employee.dbf located in
the C:\Foxnwind folder, use the following syntax
<P>
NOTE: In the following sample code, an underscore (_) at the end of a line
is used as a line-continuation character. Remove the underscore from the
end of the line when re-creating this code.
<P>
<PRE>   Set db = OpenDatabase("C:\FOXNWIND", True, False, _
                         "FoxPro 2.5;")

</PRE>instead of:
<P>
<PRE>   Set db = OpenDatabase("C:\FOXNWIND\EMPLOYEE.DBF", True, False, _
                         "FoxPro 2.5;")

</PRE>The first example (without the file name) is the correct one to use. It
sets the C:\Foxnwind folder as a database and sets the db variable to a
valid Database object. The DBF files contained in the directory are
considered in the database's TableDef objects.
<P>
Be aware that the second example (with the file name) is successful if you
use it. The OpenDatabase method opens a database and returns a valid value
without returning any errors or warnings. You can even use the database;
however, the database has no TableDefs collection.
<P>
To use the OpenDatabase method to open a FoxPro 2.5 database, follow these
steps:

<OL><P><LI>Create a C:\Foxnwind folder.

<P><LI>Start Microsoft Access and open the sample database Northwind.mdb (or
   Nwind.mdb in version 2.0).

<P><LI>Export the Employees table as a FoxPro 2.5 file to the C:\Foxnwind
   folder and name it Employee.dbf. (The Employees table contains memo
   fields and indexes and creates other supporting files in the same
   directory.)

<P><LI>Export the Customers table as a FoxPro 2.5 file to the C:\Foxnwind
   folder and name it Customer.dbf.

<P><LI>Create a module and type the following line in the Declarations section
   if it isn't already there:
<P>
<P><PRE>      Option Explicit
</PRE>
<P><LI>Type the following procedure:
<P>
<PRE>      Sub OpenDatabaseTest ()
         On Local Error GoTo OpenDatabaseTest_Err
         Dim i As Integer
         Dim db As Database
         ' Open the database with the directory specified.
         Set db = OpenDatabase("C:\FOXNWIND", True, False, "FoxPro 2.5;")
         ' Loop and print the TableDefs collection.
         For i = 0 To db.tabledefs.count - 1
            Debug.Print db.tabledefs(i).name
         Next i
      OpenDatabaseTest_End:
         Exit Sub
      OpenDatabaseTest_Err:
         MsgBox Error$
         Resume OpenDatabaseTest_End
      End Sub

</PRE><P><LI>To test the procedure, type the following line in the Debug window
   (or Immediate Window in version 2.0), and then press ENTER:
<P>
<P><PRE>      OpenDatabaseTest
</PRE><P>
   Note that "EMPLOYEE" and "CUSTOMER" appear in the Debug window.
<P>
</OL>The third-party products discussed here are manufactured by vendors
independent of Microsoft; we make no warranty, implied or otherwise,
regarding these products' performance or reliability.
 
<PRE>Keywords          : kb3rdparty kbprg PgmHowTo
Version           : 2.0 7.0 97
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
