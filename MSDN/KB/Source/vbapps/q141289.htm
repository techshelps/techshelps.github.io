

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: How to Use a Custom Dialog Box for Data Entry </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q141289">
<META NAME="KBModify" CONTENT="1998/01/09">
<META NAME="KBCreate" CONTENT="1995/12/14">
<META NAME="Keywords" CONTENT="kbcode kbprg PgmHowto">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  The following Microsoft Visual Basic for Applications procedure uses edit boxes on a custom dialog sheet to receive your data and place that data on a worksheet.  MORE INFORMATION  After you have entered the data into the edit boxes, press ENTER or...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBV4,QAHP,QA01,QBVP,QBJZ,QBWS,QAUJ,QAH4,QBS0,QACI,QAML,QAMB,QAYY,QA5V,QAIB V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: How to Use a Custom Dialog Box for Data Entry</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 9, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q141289</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, version 5.0, 5.0c
<LI>Microsoft Excel for Windows 95, version 7.0
<LI>Microsoft Excel for the Macintosh, versions 5.0, 5.0a
<LI>Microsoft Excel for Windows NT, version 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The following Microsoft Visual Basic for Applications procedure uses edit
boxes on a custom dialog sheet to receive your data and place that data on
a worksheet.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
After you have entered the data into the edit boxes, press ENTER or click
the OK button on the custom dialog box to enter the data on the worksheet,
reinitialize the dialog box, and display it for the next record. Click
Cancel to halt the macro.
<P>
<P><h3>Sample Visual Basic Procedure</h3>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>To create the procedure, follow these steps:

<OL><P><LI>Open a new workbook and rename Sheet1 to Data.
<P>
   This sheet will hold the entered data.

<P><LI>On the Data sheet, type the following text:
<P>
<PRE>      A1: First Name   B1: Last Name   C1: Department

</PRE><P><LI>Select cells A1:C1, and click Cells on the Format menu. Click the Format
   tab and, under Font Style, click Bold. Click the Border tab, and click
   the Left, Right, Top, and Bottom boxes to format these cells with
   borders on all four sides of the cell. Adjust column widths as
   necessary.

<P><LI>To insert a dialog sheet, click Macro on the Insert menu, and then
   click Dialog. Rename the sheet to Dialog.

<P><LI>Use the Forms toolbar to place three edit boxes on the dialog box. Then,
   place a label above each edit box. The first label should be First Name,
   the second should be Last Name, and the third label should be
   Department.

<P><LI>To Assign a name to each edit box, select the edit box, click the Name
   Box on the far left of the Formula Bar, type the appropriate name,
   and press ENTER (you must press ENTER or the name will not be defined).
   Name the edit boxes as follows:
<P>
<P><PRE>    - Define First Name as "fname" (without the quotation marks)
    - Define Last Name as "lname" (without the quotation marks)
    - Define Department as "dept" (without the quotation marks)
</PRE>
<P><LI>Insert a module sheet by clicking Macro on the Insert menu and then
   clicking Module.

<P><LI>Type the following Visual Basic for Applications macros on the Module
   sheet. Lines preceded by the apostrophe (') are comments.
<P>
<P><PRE>      ' Dimension the variables to be used to control the procedures.
      Dim StopFlag As Integer 'Used to control the loop
<PRE></PRE>      Dim RowNum As Single    'Used to determine data input line

      ' Controlling procedure that sets up initial values of variables and
      ' holds the loop that calls the actual working procedures.

      Sub Main_Procedure()

         ' Determine the current number of rows on the Data worksheet.
         RowNum = ThisWorkbook.Worksheets("data").Range("a1" _
            ).CurrentRegion.Rows.Count

         ' Set the flag used to control the loop to it's initial value.
         StopFlag = 0

         ' This loop blanks the edit boxes on the dialog sheet, shows the
         ' dialog box, and enters the data to the worksheet.
         Do Until StopFlag = 1
            Initialize_Dialog
            DialogSheets("Dialog").Show
            Enter_Data_on_Worksheet
         Loop
      End Sub

      ' This procedure sets the edit boxes on the dialog sheet as empty.

      Sub Initialize_Dialog()
         With DialogSheets("Dialog")
            .EditBoxes("fname").Text = ""
            .EditBoxes("lname").Text = ""
            .EditBoxes("dept").Text = ""
         End With
      End Sub

      ' Place data in worksheet on row indicated by RowNum.

      Sub Enter_Data_on_Worksheet()
         With Worksheets("Data")
            .Range("a1").Offset(RowNum, 0) = _
               DialogSheets("Dialog").EditBoxes("fname").Text
            .Range("a1").Offset(RowNum, 1) = _
               DialogSheets("Dialog").EditBoxes("lname").Text
            .Range("a1").Offset(RowNum, 2) = _
               DialogSheets("Dialog").EditBoxes("dept").Text
         End With
         RowNum = RowNum + 1     ' Shift indicator to next line.
      End Sub

      Sub Stop_Loop()
         StopFlag = 1     ' Set flag to halt loop.
      End Sub

</PRE><P><LI>On the Dialog sheet, use the right mouse button to click the Cancel
   button and click Assign Macro on the shortcut menu. Choose the Stop_Loop
   macro and click OK.
<P>
</OL>To run this macro, click Macro on the Tools menu, select the Main Procedure
macro, and click Run.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 5.00 5.00a 5.00c 7.00<BR>
Keywords          : kbcode kbprg PgmHowto<BR>
Version           : WINDOWS:5.0,5.0c,7.0; MACINTOSH:5.0,5.0a<BR>
Platform          : MACINTOSH WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 9, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
