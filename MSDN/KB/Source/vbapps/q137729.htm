

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INFO: LenB Returns in-Memory Size of User-Defined Type </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q137729">
<META NAME="KBModify" CONTENT="1997/09/29">
<META NAME="KBCreate" CONTENT="1995/10/05">
<META NAME="Keywords" CONTENT="PrgOther vb432 VB4WIN vbwin GnrlVb kbenv kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  LenB function returns the in-memory size of a user-defined type (UDT).  MORE INFORMATION  Visual Basic 32-bit structures are DWORD aligned (four bytes) when stored in memory. Fixed-length strings use two bytes for every character to account for UNI...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QALG,QBS0,QATX,QAML,QAUD,QAP2,QAWH,QAPF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INFO: LenB Returns in-Memory Size of User-Defined Type</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q137729</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Standard, Professional, and Enterprise Editions of Microsoft
   Visual Basic, 32-bit only, for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
LenB function returns the in-memory size of a user-defined type (UDT).
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Visual Basic 32-bit structures are DWORD aligned (four bytes) when stored
in memory. Fixed-length strings use two bytes for every character to
account for UNICODE. String descriptors use four bytes each. Integers use
two bytes. Please refer to the Visual Basic Help file for the lengths of
all the other data types.
<P>
<P><h3>Example One</h3>
 
<P>
Consider this example UDT:
<P>
<PRE>   Type Generic
     FirstName as String * 5
     LastName as String
     ChildrenAges (1 to 5) as Byte
   End Type

</PRE>This UDT requires the following number of bytes:

<UL><LI>FirstName uses 10 bytes (UNICODE).
<LI>LastName uses 4 bytes (String descriptor).
<LI>ChildrenAges uses 5 bytes (5-element byte array).
<P>
</UL>Applying DWORD alignment gives a total of 21 bytes as follows:

<UL><LI>8 bytes for the first 8 bytes of FirstName.
<LI>8 bytes for the last 2 bytes of FirstName, 2 bytes of padding, 4 bytes
   for LastName.
<LI>5 bytes for the 5 bytes needed for ChildrenAges.
<P>
</UL>Therefore:
<P>
<PRE>   LenB(Generic) = 21
   Len (Generic) = 14

</PRE><h3>Example Two</h3>
 
<P>
Consider this example UDT:
<P>
<PRE>   Type Generic
     FirstName as String * 7
     LastName as String * 6
     ChildrenAges (1 to 5)  as Byte
     Address * String
   End Type

</PRE>This UDT requires the following number of bytes:

<UL><LI>FirstName uses 14 bytes (UNICODE).
<LI>LastName uses 12 bytes (UNICODE).
<LI>ChildrenAges uses 5 bytes (5-element byte array).
<LI>Address uses 4 bytes (string descriptor)
<P>
</UL>Applying DWORD alignment gives a total of 36 bytes as follows:

<UL><LI>8 bytes for the first 8 bytes of FirstName.
<LI>8 bytes for the last 6 bytes of FirstName, 2 bytes of padding, 2 bytes
   for LastName.
<LI>8 bytes for the next 8 bytes of LastName.
<LI>8 bytes for the last 2 bytes of LastName, 5 bytes for ChildrenAges,
   and 1 byte of padding.
<LI>4 bytes for Address for the string descriptor.
<P>
</UL>Therefore:
<P>
<PRE>   LenB(Generic) = 36
   Len (Generic) = 22
</PRE> 
<PRE>Keywords          : PrgOther vb432 VB4WIN vbwin GnrlVb kbenv kbprg
Technology        : kbvba
Version           : WINDOWS:4.0
Platform          : WINDOWS
Issue type        : kbinfo</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
