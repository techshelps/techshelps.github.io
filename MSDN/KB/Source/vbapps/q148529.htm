

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: Same Named Module &amp; Function Cause Error After Conversion </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q148529">
<META NAME="KBModify" CONTENT="1997/08/28">
<META NAME="KBCreate" CONTENT="1996/03/15">
<META NAME="Keywords" CONTENT="CnvProb kberrmsg kbprg MdlGnrl">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  If a database that has been converted from Microsoft Access 2.0 to Microsoft Access 7.0 or Microsoft Access 97 contains a user-defined procedure and a module with identical names...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA1S,QDN9,QAB4,QAH4,QAY5,QAB9,QAUJ,QAAP,QAPN,QBV8,QBWS,QAVX,QAO4,QAJQ,QAZV P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: Same Named Module &amp; Function Cause Error After Conversion</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 28, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q148529</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 7.0, 97
</UL> 
<P>
SYMPTOMS
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
If a database that has been converted from Microsoft Access 2.0 to
Microsoft Access 7.0 or Microsoft Access 97 contains a user-defined
procedure and a module with identical names, you may receive the following
error message when the procedure is run from an object's events.
<P>
In Microsoft Access 97:
<P>
<PRE>   The expression [event name] you entered as the event property setting
   produced the following error: The expression you entered has a function
   name that Microsoft Access can't find.

</PRE>In Microsoft Access 7.0:
<P>
<PRE>   The expression [event name] you entered as the event property setting
   produced an error. There was an error compiling this function.

</PRE>If you use the RunCode action in a macro to call the function, then you may
receive the following error message:
<P>
In Microsoft Access 97:
<P>
<PRE>   The expression you entered has a function name that Microsoft Access
   can't find.

</PRE>In Microsoft Access 7.0:
<P>
<PRE>   There was an error compiling this function. The Visual Basic module
   has a syntax error. Solution: Check the code and then recompile it.

</PRE>If you try to run the procedure from the Debug window, then you may receive
the following error message:
<P>
<PRE>   Expected variable or procedure, not module.

</PRE>These errors occur even if the procedure is not contained in the module
with the same name.
<P>
NOTE: All the modules in the converted database will appear to compile
successfully.
<P>
NOTE: This behavior is exposed only when the function is initially run
because Microsoft Access 7.0 and 97 do not load a module until a function
or subroutine within the module is called.
<P>
<P><h2>CAUSE</h2>
 
<P>
This behavior is likely to occur after you convert a database from
Microsoft Access version 2.0, which does allow a user-defined function and
module to have the same name.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 

<OL><P><LI>Create a new Microsoft Access 2.0 database, create a module, and type
   the following line in the Declarations section:
<P>
<P><PRE>      Option Explicit
</PRE>
<P><LI>Type the following procedure:
<P>
<P><PRE>      Function Test()
<PRE></PRE>         MsgBox "I am working correctly"
      End Function

</PRE><P><LI>Save the module as Test.

<P><LI>Create the following blank form and save it as Test1:
<P>
<P><PRE>      command button:
<PRE></PRE>         Name: Button0
         Caption: My Button
         OnClick: =Test()

</PRE><P><LI>Switch the Test1 form to Form view. Note that the button behaves
   as expected by displaying a message box when you click the button.

<P><LI>Quit Microsoft Access version 2.0.

<P><LI>Start Microsoft Access 97.

<P><LI>On the File menu, click Open, and select the database you created in
   step 1.

<P><LI>When prompted to Open or Convert the database, select Convert.

<P><LI>Open the Test1 form in Form view.

<P><LI>Click My Button. Note that you receive the error message mentioned
<P><PRE>    in the "Symptoms" section.
<P></BLOCKQUOTE>
</OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: conversion name<BR>
Keywords          : CnvProb kberrmsg kbprg MdlGnrl<BR>
Version           : 7.0 97<BR>
Platform          : WINDOWS<BR>
Hardware          : x86<BR>
Issue type        : kbprb<BR>
Solution Type     : Info_Provided<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 28, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
