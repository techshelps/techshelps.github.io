

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL5: Macro to Find Directory in WIN.INI for an Application </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q110692">
<META NAME="KBModify" CONTENT="1997/09/02">
<META NAME="KBCreate" CONTENT="1994/01/26">
<META NAME="Keywords" CONTENT="kbprg PgmOthr">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel 5.0 for Windows, you can create a macro to find the default directory of any application that registers itself in the [EXTENSIONS] section of the WIN.INI file. Given the three-character extension for the application’s file, the m...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAH4,QDL9,QBWO,QBWN,QAFI,QBXB,QBVP,QATJ,QAOG,QAJH,QAUD,QATX,QAGI,QA5F V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL5: Macro to Find Directory in WIN.INI for an Application</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 2, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q110692</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, version 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Excel 5.0 for Windows, you can create a macro to find the
default directory of any application that registers itself in the
[EXTENSIONS] section of the WIN.INI file. Given the three-character
extension for the application’s file, the macro below uses the Microsoft
Windows dynamic-link libraries (DLLs) to return the default directory
information.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft support engineers can help explain the
functionality of a particular macro, they will not modify these examples to
provide added functionality, nor will they help you construct macros to
meet your specific needs. If you have limited programming experience, you
may want to consult one of the Microsoft Solution Providers. Solution
Providers offer a wide range of fee-based services, including creating
custom macros. For more information about Microsoft Solution Providers,
call Microsoft Customer Information Service at (800) 426-9400.
<P>
NOTE: It may be possible to work around this situation by creating a macro
that makes calls to the Windows application programming interface (API).
This type of programming is supported by the Windows Software Development
Kit (SDK) and the Visual Basic, Professional Edition, support groups. The
level of support you can receive from these groups depends on the
individual support policies of the group. (Microsoft support engineers may
not be able to assist in specific construction of macros that use API
programming.) If you have limited programming experience, you may want to
consult one of the Microsoft Solution Providers. Solution Providers offer a
wide range of fee-based services, including creating custom macros. For
more information about Microsoft Solution Providers, call Microsoft
Customer Information Service at (800) 426-9400.
<P>
<P><h3>Sample Macro Code</h3>
 
<P>
Option Explicit
<P>
<PRE>'Enter the following declare statement needs as a single line.

Declare Function GetProfileString Lib "KERNEL" (ByVal lpAppName As _
   String, ByVal lpKeyName As String, ByVal lpDefault As String, _
   ByVal lpReturnedString As String, ByVal nSize As Integer) As Integer

Sub Application_Directory()
   Dim Path As String * 255, Ext As String, Directory As String
   Dim Back_Slash As Integer, Length As Integer
   Ext = InputBox("Enter the 3 letter extension of the application.")
   'If Cancel was chosen then end procedure
   If Len(Ext) = 0 Then Exit Sub
   'Gets information from the WIN.INI file and stores in the "path"
   'variable
   Length = GetProfileString("Extensions", Ext, "", Path, Len(Path))
   'Tests for no application found
   If InStr(Path, "\") = 0 Then
       MsgBox "Application not found."
   Else
       Back_Slash = 255
       While Mid(Path, Back_Slash, 1) &lt;&gt; "\"
           Back_Slash = Back_Slash - 1
       Wend
       Directory = Left(Path, Back_Slash - 1)
       MsgBox "The directory of the application which uses the " &amp; _
          "extension '" &amp; Ext &amp; "' is " &amp; Directory &amp; "."
   End If
End Sub

</PRE>To run this macro, place the insertion point anywhere in the Sub
Application_Directory() line and either press F5 or choose Start from the
Run menu.
<P>
When you are prompted to enter a three-letter extension, enter an extension
and choose OK. The macro will use the Microsoft Windows API to determine
which directory contains the application that uses that three-letter
extension. For example, if you enter "xls" (without the quotation marks),
the message box will tell you where the Microsoft Excel application is
installed.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
For information about creating a similar Visual Basic macro to find the
default printer and port assignments, query on the following words in the
Microsoft Knowledge Base:
<P>
<PRE>   device and port and visual and basic and printer

</PRE><h2>REFERENCES</h2>
 
<P>
Microsoft Windows SDK
Microsoft Visual Basic 3.0 Professional - WINAPI31.HLP help file
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 5.00 5.0 call register<BR>
Keywords          : kbprg PgmOthr<BR>
Version           : 5.00<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 2, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
