

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: How to Use a Custom Function in Another Workbook </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q141288">
<META NAME="KBModify" CONTENT="1998/02/03">
<META NAME="KBCreate" CONTENT="1995/12/14">
<META NAME="Keywords" CONTENT="kbcode kbprg PgmHowto">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel, you can create custom Microsoft Visual Basic for  Applications functions to perform calculations. By default, these custom  functions are available to all worksheets in the workbook that contains the  custom function. Therefore,...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBJZ,QBVP,QAY5,QAH4,QAGI,QAB9,QBV8,QBS0,QBWS,QAVX,QAVW,QDNM,QAIF,QDL9,QBWQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: How to Use a Custom Function in Another Workbook</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 3, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q141288</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows 95, version 7.0
<LI>Microsoft Excel for Windows, versions 5.0, 5.0c
<LI>Microsoft Excel for the Macintosh, versions 5.0, 5.0a
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Excel, you can create custom Microsoft Visual Basic for 
Applications functions to perform calculations. By default, these custom 
functions are available to all worksheets in the workbook that contains the 
custom function. Therefore, you can call them just as you call built-in 
functions in Microsoft Excel. However, if you attempt to call a custom 
function from outside of the workbook that contains the code, you must 
first make a reference to the workbook that contains the custom function.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>The following steps show you how to create a simple custom function, how to
call the function from the workbook that contains the code, and how to call
this custom function from another workbook.
<P>
<P><h3>To Create a Custom Function</h3>
 

<OL><P><LI>Open a new workbook.

<P><LI>Insert a module sheet. Follow the appropriate directions below:
<P>
   Excel 98 Macintosh Edition
   --------------------------
<P>
   a. Start the Visual Basic Editor (press OPTION+F11).
<P>
   b. On the Insert menu, click Module.
<P>
   Excel 97 for Windows 
   ---------------------
<P>
   a. Start the Visual Basic Editor (press ALT+F11).
<P>
   b. On the Insert menu, click Module.
<P>
   Excel versions 5.0, 7.0 for Windows, version 5.0 for Macintosh
   ----------------------------------------------------------------
<P>
   On the Insert menu, point to Macro, and then click Module.

<P><LI>On the module sheet, enter the following code:
<P>
<P><PRE>      Function myfunction(x)
<PRE></PRE>         myfunction = x * 2
      End Function

</PRE><P><LI>Save this workbook as Test.xls.
<P>
</OL>To Call the Function from the Workbook That Contains the Function Code
 
<P>
To call this function from within Test.xls, type the following formula in
cell A1 on Sheet1:
<P>
<PRE>   =myfunction(3)

</PRE></OL>Cell A1 should display the value 6, because the custom function doubled the
value that was sent to it.
<P>
<P><h3>To Call the Function from Another Workbook</h3>
 
<P>
In order to call the function from a workbook, you must create a reference
to the workbook that contains the code. To create a reference, follow these 
steps:

<OL><P><LI>Open another new workbook.

<P><LI>Save this workbook as Test2.xls.

<P><LI>Insert a module sheet. Follow the appropriate directions below:
<P>
   Excel 98 Macintosh Edition
   --------------------------
<P>
   a. Start the Visual Basic Editor (press OPTION+F11).
<P>
   b. On the Insert menu, click Module.
<P>
   Excel 97 for Windows 
   --------------------
<P>
   a. Start the Visual Basic Editor (press ALT+F11).
<P>
   b. On the Insert menu, click Module.
<P>
   Excel versions 5.0, 7.0 for Windows, version 5.0 for Macintosh
   --------------------------------------------------------------
<P>
   On the Insert menu, point to Macro, and then click Module.
<P>

<P><LI>Create a reference to Text.xls. Follow the appropriate directions below:
<P>
   Excel 98 Macintosh Edition 
   --------------------------
<P>
   a. Press COMMAND+R to activate the Project Explorer window.
<P>
   b. Select "VBAProject (Test.xls)," and then click VBAProject Properties 
<P><PRE>      on the View menu.
</PRE><P>
   c. In the Project Name box, type "Myfunction" (without the quotation 
<P><PRE>      marks), and then click OK.
</PRE><P>
   d. Select "VBAProject (Test2.xls)" in the Project Explorer window.
  
   e. On the Tools menu, click References. Click Myfunction, and then click 
<P><PRE>      OK.
</PRE><P>
   Excel 97 for Windows 
   --------------------
<P>
   a. Press CTRL+R to activate the Project Explorer window.
<P>
   b. Select "VBAProject (Test.xls)," and then click VBAProject Properties 
<P><PRE>      on the View menu.
</PRE><P>
   c. In the Project Name box, type "Myfunction" (without the quotation 
<P><PRE>      marks), and then click OK.
</PRE><P>
   d. Select "VBAProject (Test2.xls)" in the Project Explorer window.
  
   e. On the Tools menu, click References. Click Myfunction, and then click 
<P><PRE>      OK.
</PRE><P>
   Excel versions 5.0, 7.0 for Windows, version 5.0 for Macintosh
   --------------------------------------------------------------
<P>
<PRE>   On the Tools menu, click References. Click Test.xls, and then click OK.   

</PRE></OL>You should now have a reference to the workbook that contains the custom
function. You can now call this custom function the same way you would call
it if the workbook contained the code. For example, in cell A1, type the
formula:
<P>
<PRE>   =myfunction(5)

</PRE>Cell A1 should display a value 10.
<P>
NOTE: If the reference is not made as outlined in steps 1-4, cell A1 will
display the #NAME? error value because Microsoft Excel does not know where
to find the "myfunction" custom function. Note also that you cannot create
a reference to an unsaved workbook, so if you encounter an error when you
try to create the reference, make sure the workbook that contains the
custom function has been saved.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about Custom Functions, click Answer Wizard on the
Help menu and type:
<P>
<PRE>   tell me how to create a user-defined function
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 5.00 5.00a 5.00c 7.00<BR>
Keywords          : kbcode kbprg PgmHowto<BR>
Version           : WINDOWS:5.0,5.0c,7.0,97; MACINTOSH:5.0,5.0a,98<BR>
Platform          : MACINTOSH WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 3, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
