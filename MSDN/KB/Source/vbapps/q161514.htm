

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL97: How to Use a UserForm for Entering Data </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q161514">
<META NAME="KBModify" CONTENT="1998/02/27">
<META NAME="KBCreate" CONTENT="1996/12/26">
<META NAME="Keywords" CONTENT="kbcode kbprg kbualink97 xlvbahowto xlui">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel, you can create a custom UserForm that provides a simple interface for entering data. This article includes steps for creating a custom UserForm and a sample Visual Basic for Applications macro that places the data you enter on a...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QBS0,QBVP,QAMB,QAMN,QA7O,QA5V,QBWS,QBJZ,QAOE,QAB5,QAUD,QAPN,QAYY,QBV4 P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL97: How to Use a UserForm for Entering Data</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 27, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q161514</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Excel, you can create a custom UserForm that provides a simple
interface for entering data. This article includes steps for creating a
custom UserForm and a sample Visual Basic for Applications macro that
places the data you enter on a worksheet.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Creating a Custom UserForm</h3>
 
<P>
To create a custom UserForm, use the following steps:

<OL><P><LI>Save and close any open workbooks, and then create a new workbook.

<P><LI>Type the following in Sheet1:
<P>
<PRE>      A1: Name     B1: ID     C1: Phone

</PRE><P><LI>Start the Visual Basic Editor (press ALT+F11).

<P><LI>On the Insert menu, click UserForm.

<P><LI>Add three TextBox controls (TextBox1, TextBox2, and TextBox3) to the
   UserForm and space them out vertically so that you can add a Label
   control above each TextBox control.

<P><LI>Add three Label controls (Label1, Label2, and Label3), one above each of
   the TextBox controls you added.

<P><LI>Change the Caption properties for each of the Label controls to the
   following.
<P>
<PRE>      Control   Caption property
      --------------------------

      Label1    Name
      Label2    ID
      Label3    Phone

</PRE><P><LI>Add two CommandButtons (CommandButton1 and CommandButton2) to the
   UserForm.

<P><LI>Change the Caption properties for each of the CommandButton controls to
   the following.
<P>
<PRE>      Control          Caption property
      ---------------------------------

      CommandButton1   Add Record
      CommandButton2   Exit

</PRE></OL><h3>Sample Macro for Adding UserForm Data to a Worksheet</h3>
 
<P>
Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft support engineers can help explain the
functionality of a particular macro, they will not modify these examples to
provide added functionality, nor will they help you construct macros to
meet your specific needs. If you have limited programming experience, you
may want to consult one of the Microsoft Solution Providers. Solution
Providers offer a wide range of fee-based services, including creating
custom macros. For more information about Microsoft Solution Providers,
call Microsoft Customer Information Service at (800) 426-9400.
<P>
To attach macro code to the controls on the UserForm, use the following
steps:

<OL><P><LI>Double-click the UserForm to display the code module that is associated
   with the UserForm.

<P><LI>Type the following code for the CommandButton1 Click event:
<P>
<P><PRE>      Private Sub CommandButton1_Click()
<PRE></PRE>          Dim LastRow As Object

          Set LastRow = Sheet1.Range("a65536").End(xlUp)

          LastRow.Offset(1, 0).Value = TextBox1.Text
          LastRow.Offset(1, 1).Value = TextBox2.Text
          LastRow.Offset(1, 2).Value = TextBox3.Text

          MsgBox "One record written to Sheet1"

          response = MsgBox("Do you want to enter another record?", _
              vbYesNo)

          If response = vbYes Then
              TextBox1.Text = ""
              TextBox2.Text = ""
              TextBox3.Text = ""

              TextBox1.SetFocus

          Else
              Unload Me
          End If

      End Sub

</PRE><P><LI>Type the following code for the CommandButton2 Click event:
<P>
<P><PRE>      Private Sub CommandButton2_Click()
<PRE></PRE>          End
      End Sub

</PRE><P><LI>On the Insert menu, click Module.

<P><LI>In this module, type the following code:
<P>
<PRE>      Sub Show_UserForm()
          UserForm1.Show
      End Sub

</PRE></OL><h3>Using the UserForm for Data Entry</h3>
 
<P>
To use the UserForm, use the following steps:

<OL><P><LI>In the Visual Basic Editor, click "Close and Return to Microsoft Excel"
   on the File menu.

<P><LI>Save the workbook.

<P><LI>Run the Show_UserForm macro (press ALT+F8, and then double-click
   Show_UserForm in the list of macros).
<P>
</OL>The UserForm is displayed, and you can start typing data in the three
text boxes.

<OL><P><LI>After typing the data, click Add Record on the UserForm.
<P>
</OL>The data you typed is placed in Sheet1 under the field headers in row 1.

<OL><P><LI>When you are prompted whether to add another record, click Yes to
   continue or No to exit the UserForm.
<P>
</OL>For additional information, please see the following article in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q141289.htm">Q141289</A></B>
   TITLE     : XL: How to Use a Custom Dialog Box for Data Entry

</PRE></OL><h2>REFERENCES</h2>
 
<P>
For more information about Custom UserForms, click the Office Assistant,
type "custom dialog boxes", click Search, and then click to view "Creating
a custom dialog box".
<P>
NOTE: If the Assistant is hidden, click the Office Assistant button on the
Standard toolbar. If Microsoft Excel Help is not installed on your
computer, please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../OFFICE/Q120802.htm">Q120802</A></B>
   TITLE     : Office: How to Add/Remove a Single Office
               Program or Component
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: XL97<BR>
Keywords          : kbcode kbprg kbualink97 xlvbahowto xlui<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 27, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
