

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WD98: Form Fields Lose Text When Protected for Forms </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q181109">
<META NAME="KBModify" CONTENT="1998/03/03">
<META NAME="KBCreate" CONTENT="1998/02/13">
<META NAME="Keywords" CONTENT="kbdta kbdtacode OffVBA macword98">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  This article describes methods that allow you to:     - Retain information you type into a form field when you protect a form.     - Unprotect a forms document, perform a spell check, and retain      information in the form fields when you reprotec...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA7O,QAVY,QBS0,QAK7,QAH4,QAFF,QA5D,QA7N,QAXM,QABH,QABI,QBJZ,QBI4,QAI2,QAXB V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>WD98: Form Fields Lose Text When Protected for Forms</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 3, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q181109</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Word 98 Macintosh Edition
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article describes methods that allow you to:
<P>
<PRE>   - Retain information you type into a form field when you protect a form.

   - Unprotect a forms document, perform a spell check, and retain
     information in the form fields when you reprotect the form.

</PRE><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE><h3>Method 1: Alter the Protect/Unprotect Command Functionality</h3>
 
<P>
The following sample Microsoft Visual Basic for Applications macros (Sub
procedures) protect your form without causing you to lose the text that you
entered into a form field. The macros can be stored in the actual form
template to allow you to manually unprotect and reprotect the form while
preserving the form field contents.
<P>
The following three Visual Basic macros can be used to ensure that your
form field values are not reset to their defaults when you reprotect the
form.

<UL><LI>The first macro runs when you click the Protect Form button on the Forms
   toolbar.

<LI>The second macro runs when you click either Protect Document or
   Unprotect Document on the Tools menu.

<LI>The third macro allows you to specify which sections to protect while
   maintaining previous form field values.
<P>
</UL>NOTE: The name of this macro must be ProtectForm.
<P>
<PRE>   Sub ProtectForm()

      ' ******************************************
      ' ProtectForm Macro.
      ' Toggles protection for the active document
      ' when the Protect Form button on the forms
      ' toolbar is clicked.
      ' ******************************************
      If ActiveDocument.ProtectionType = wdNoProtection Then
         ActiveDocument.Protect Type:=wdAllowOnlyFormFields, NoReset:=True
      Else
         ActiveDocument.Unprotect Password:=""
      End If

   End Sub

</PRE>The following sample Visual Basic macro protects the active document
without displaying the Protect dialog box. When you run this macro, it will
reprotect the active document while maintaining previous form field values.
<P>
NOTE: The name of this macro must be ToolsProtectUnprotectDocument.
<P>
<PRE>   Sub ToolsProtectUnprotectDocument()

      ' ******************************************
      ' ToolsProtectUnprotectDocument Macro
      ' Sets protection for the active document
      ' when Protect Document or Unprotect Document
      ' is clicked on Tools menu
      ' ******************************************
      If ActiveDocument.ProtectionType = wdNoProtection Then
         ActiveDocument.Protect Type:=wdAllowOnlyFormFields, NoReset:=True
      Else
         ActiveDocument.Unprotect Password:=""
      End If

   End Sub

</PRE>The following sample Visual Basic macro allows you to specify which
sections to protect while maintaining previous form field values. You can
assign this macro to a toolbar button or menu.
<P>
<PRE>   Sub ProtectNoReset()

      Dim pDoc As Dialog
      Dim x As Integer
      On Error GoTo ProtectNoResetErr

      ' If the document is protected…
      If ActiveDocument.ProtectionType &lt;&gt; wdNoProtection Then

         ' Unprotect the document.
         ActiveDocument.Unprotect

      End If

      ' Display the Protect dialog box.
      Set pDoc = Dialogs(wdDialogToolsProtectDocument)
      x = pDoc.Display

      ' If Cancel was chosen, exit this procedure.
      If x = 0 Then Exit Sub

      ' Protect the document.
      ActiveDocument.Protect Password:=pDoc.DocumentPassword, _
         NoReset:=True, Type:=2

   ProtectNoResetErr: 'NOTE: This line MUST be left aligned.
      If Err &lt;&gt; 0 Then MsgBox Err.Description

   End Sub

</PRE><h3>Method 2: Create a Macro to Protect/Unprotect Your Document</h3>
 
<P>
The following examples protect the active document for forms without
resetting the contents of the form fields. Create the macro and assign the
macro to a key, menu, or toolbar button for easy access.
<P>
<PRE>   If ActiveDocument.ProtectionType = wdNoProtection Then
      ActiveDocument.Protect Type:=wdAllowOnlyFormFields, NoReset:=True
   End If

</PRE><h3>Method 3: Unprotect, Check Spelling or Update a Field, Reprotect a Document</h3>
 
<P>
Because form field text is formatted for No Proofing, you can use the
following macro to:

<UL><LI>Temporarily Unprotect the form.

<LI>Change the language of the form fields.

<LI>Perform a spell check or update a field.

<LI>Reprotect the form while preserving the text you've typed into the form
   fields.
<P>
</UL>You can use this macro as an On Exit macro for the last form field so you
can check the spelling or update a field before you save the form.
<P>
<PRE>   Sub FormsSpellCheck()

      ' If document is protected, Unprotect it.
      If ActiveDocument.ProtectionType &lt;&gt; wdNoProtection Then
         ActiveDocument.Unprotect Password:=""
      End If

      ' Set the language for the document.
      Selection.WholeStory
      Selection.LanguageID = wdEnglishUS

      ' Perform Spelling/Grammar check.
      If Options.CheckGrammarWithSpelling = True Then
         ActiveDocument.CheckGrammar
      Else
         ActiveDocument.CheckSpelling
      End If

      ' ReProtect the document.
      If ActiveDocument.ProtectionType = wdNoProtection Then
         ActiveDocument.Protect Type:=wdAllowOnlyFormFields, NoReset:=True
      End If

   End Sub

</PRE><h2>REFERENCES</h2>
 
<P>
For more information about getting help with Visual Basic for Applications,
please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q163435.htm">Q163435</A></B>
   TITLE     : VBA: Programming Resources for Visual Basic for
               Applications
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words:<BR>
Keywords          : kbdta kbdtacode OffVBA macword98<BR>
Version           : MACINTOSH:98<BR>
Platform          : MACINTOSH<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 3, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
