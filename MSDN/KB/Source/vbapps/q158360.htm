

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL97: PasteSpecial Method Activates Target Sheet </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q158360">
<META NAME="KBModify" CONTENT="1998/03/13">
<META NAME="KBCreate" CONTENT="1996/10/29">
<META NAME="Keywords" CONTENT="kbprg xlvbahowto xlvbainfo xl97vbmigrate">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel 97, if you run a Visual Basic for Applications macro that uses the PasteSpecial method, you may find that the wrong worksheet becomes activated. This may cause problems if your macro assumes that a particular sheet is still activ...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QAH4,QBS0,QBXT,QA9N,QA5V,QAPN,QAIB,QABA,QBXV,QAJ2,QAY4,QAYY,QAPF,QDNY P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL97: PasteSpecial Method Activates Target Sheet</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 13, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q158360</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
In Microsoft Excel 97, if you run a Visual Basic for Applications macro
that uses the PasteSpecial method, you may find that the wrong worksheet
becomes activated. This may cause problems if your macro assumes that a
particular sheet is still active.
<P>
<P><h2>CAUSE</h2>
 
<P>
This occurs because, in Microsoft Excel 97, the PasteSpecial method
activates the sheet into which you are pasting information (the "target
sheet"). In earlier versions of Microsoft Excel, the PasteSpecial method
does NOT activate the target sheet.
<P>
Note that this problem occurs only when information is pasted into a sheet
other than that from which it was copied.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
If you need your Visual Basic macro to copy information from one sheet,
PasteSpecial the information into another sheet, and keep the original
sheet active, you will need to add two lines of code to the macro. These
lines of code keep track of the original sheet and reactivate it after the
PasteSpecial method is complete.
<P>
For example, if your original macro looks like this:
<P>
<PRE>   Sub CopyAndPasteSpecial1()
       Sheets("Sheet1").Range("A1:B5").Copy
       Sheets("Sheet2").Range("A1").PasteSpecial xlValues
   End Sub

</PRE>You will need to add two lines to the macro:
<P>
<PRE>   Sub CopyAndPasteSpecial2()

       'This new line remembers the name of the original sheet.
       Set xOriginalSheet = ActiveSheet

       Sheets("Sheet1").Range("A1:B5").Copy
       Sheets("Sheet2").Range("A1").PasteSpecial xlValues

       'This new line activates the original sheet.
       xOriginalSheet.Activate

   End Sub

</PRE>The modified code will work in all versions of Microsoft Excel, including
Microsoft Excel 97.
<P>
Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft support engineers can help explain the
functionality of a particular macro, they will not modify these examples to
provide added functionality, nor will they help you construct macros to
meet your specific needs. If you have limited programming experience, you
may want to consult one of the Microsoft Solution Providers. Solution
Providers offer a wide range of fee-based services, including creating
custom macros. For more information about Microsoft Solution Providers,
call Microsoft Customer Information Service at (800) 426-9400.
<P>
<P><h2>STATUS</h2>
 
<P>
This behavior is by design of Microsoft Excel 97.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
In Microsoft Excel, you can use the PasteSpecial method in a Visual Basic
macro when you want to paste copied information in a certain way. For
example, if you copy a range of cells that contains formulas, and then you
want to paste just the results of the formulas, you could use a line of
code similar to the following:
<P>
<PRE>   Range("A1").PasteSpecial xlValues

</PRE>You can even paste information into a different sheet or into a sheet in
another workbook, by adding a reference to the sheet and/or workbook to the
line of code. For example:
<P>
<PRE>   Workbooks("Book2").Sheets("Sheet3").Range("A1").PasteSpecial xlValues

</PRE>If you do this in Microsoft Excel 97, the target sheet (in this case,
[Book2]Sheet3) will be activated. This may cause problems if your macro
assumes that the original sheet is still active.
<P>
If this change in behavior causes problems, use the information in the
Workaround section to force your macro to reactivate the original sheet.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 8.00 97 XL97<BR>
Keywords          : kbprg xlvbahowto xlvbainfo xl97vbmigrate<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>
Issue type        : kbprb<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 13, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
