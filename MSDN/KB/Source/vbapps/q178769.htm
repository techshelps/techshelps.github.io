

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL98: Using VbConstants in Text Strings in MS Excel 98 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q178769">
<META NAME="KBModify" CONTENT="1998/02/03">
<META NAME="KBCreate" CONTENT="1998/01/02">
<META NAME="Keywords" CONTENT="xlvbahowto xlvbainfo">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Microsoft Visual Basic for Applications includes a number of constants that  you can use in code to represent certain  untypeable  characters, such as  tabs, line feeds, and carriage returns. This article contains information  about using these con...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAKJ,QAH4,QBT6,QA01,QATX,QBV4,QAUD,QBVP,QAK4,QAHP,QBXT,QA5V,QAIB,QAMB,QAEF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL98: Using VbConstants in Text Strings in MS Excel 98</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 3, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q178769</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 98 Macintosh Edition
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Microsoft Visual Basic for Applications includes a number of constants that 
you can use in code to represent certain "untypeable" characters, such as 
tabs, line feeds, and carriage returns. This article contains information 
about using these constants and information about problems that you may 
encounter when you use them. 
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The constants are listed in the following table.
<P>
<PRE>   Constant       Definition
   -------------------------------------------------------------------
   vbBack         A backspace character [Chr(8)]
   vbCr           A carriage return [Chr(13)]
   vbCrLf         A carriage return and line feed [Chr(13) + Chr(10)]
   vbLf           A linefeed [Chr(10)]
   vbNewLine      A platform-specific new line character, either
                  [Chr(13) + Chr(10)] or [Chr(13)]
   vbNullChar     A null character of value 0 [Chr(0)]
   vbNullString   A string of value 0 [no Chr code]; note that this is
                  not the same as ""
   vbTab          A tab character [Chr(9)]

</PRE>You can use these constants anywhere in Visual Basic code where you want
them to appear. For example, you can use them to display a multiline
message in a message box as in the following example:
<P>
<PRE>   MsgBox "Hello" &amp; vbCr &amp; "World!"

</PRE>Make sure that you do not enclose the constants within quotation marks; if
you do, the constant appears in the text string instead of the character it
represents.
<P>
When you use these constants, you may notice the following problems.
<P>
<P><h3>Text Boxes and Cells</h3>
 

<UL><LI>In Microsoft Excel 98 Macintosh Edition, if you use these constants when
   you insert text into a text box or into a cell, a square character may
   appear in the text box or cell. This problem occurs if you use either
   of the following constants:
<P>
<PRE>      vbBack   vbCrLf

   For example, this behavior occurs if you execute the following line of
   code:

      ActiveCell.Value = "AAA" &amp; vbBack &amp; "BBB"

   The cell displays the following value:

      AAA[square character]BBB

   You can remove the square character by manually editing the cell.

</PRE><LI>If you use the vbNullChar constant, text following the constant may be
   cut off. For example, if you execute the following line of code:
<P>
<P><PRE>      ActiveCell.Value = "AAA" &amp; vbNullChar &amp; "BBB"
</PRE><P>
   the cell displays only "AAA."

<LI>The vbCr, vbLf, vbNewLine, vbNullString, and vbTab constants work
   correctly when you use them with text boxes and cells. For example, if
   you execute the following line of code:
<P>
<P><PRE>      ActiveCell.Value = "AAA" &amp; vbLf &amp; "BBB"
</PRE><P>
   the cell displays the value:
<P>
<P><PRE>      AAA
      BBB
</PRE><P>
   If you execute following line of code:
<P>
<P><PRE>      ActiveCell.Value = "AAA" &amp; vbNullString &amp; "BBB"
</PRE><P>
   the cell displays the following value:
<P>
<P><PRE>      AAABBB
</PRE><P>
   because vbNullString creates a string of value 0 (the string has no
   length, so nothing appears in the cell).
<P>
</UL><h3>Message Boxes (MsgBox)</h3>
 
<P>
All of the constants listed in this article work correctly when used in a
MsgBox, with just two exceptions.

<UL><LI>If you use the vbBack constant, the character does not appear in the
   message box. For example, if you execute the following line of code
<P>
<P><PRE>      MsgBox "AAA" &amp; vbBack &amp; "BBB"
</PRE><P>
   the message box displays the message:
<P>
<P><PRE>      AAABBB
</PRE>
<LI>If you use the vbNullChar constant, text following the constant is
   cut off.
<P></UL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: XL98 square rectangle box<BR>
Keywords          : xlvbahowto xlvbainfo<BR>
Version           : MACINTOSH:98<BR>
Platform          : MACINTOSH<BR>
Issue type        : kbinfo<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 3, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
