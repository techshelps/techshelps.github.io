

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PPT97: How to use the Presentations.Open Method </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q162555">
<META NAME="KBModify" CONTENT="1998/03/10">
<META NAME="KBCreate" CONTENT="1997/01/23">
<META NAME="Keywords" CONTENT="kbcode kbmacro kbprg kbdta kbdtacode kbpptvba">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  This article describes how to use the Microsoft Visual Basic for Applications Presentations.Open method. The Open method opens an existing Microsoft PowerPoint presentation.  MORE INFORMATION  Microsoft provides programming examples for illustratio...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAVX,QAVW,QAPN,QAJM,QAB4,QBS0,QAFF,QAAP,QAHE,QBWS,QBVQ,QBFY,QAPF,QBVV,QBXS P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PPT97: How to use the Presentations.Open Method</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 10, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q162555</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft PowerPoint 97 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article describes how to use the Microsoft Visual Basic for
Applications Presentations.Open method. The Open method opens an existing
Microsoft PowerPoint presentation.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE><h3>Parameters</h3>
 
<P>
There are four parameters that you can use to control the behavior of the
Open method:
<P>
<PRE>   Name          Data Type    Required
   ----          ---------    --------
   FileName      String       Yes
   ReadOnly      Long         Optional
   Untitled      Long         Optional
   WithWindow    Long         Optional

</PRE>FileName:
<P>
The FileName parameter is the path and name of the presentation you wish to
open. The following Visual Basic example opens a file named test.ppt
located in the C:\ root directory.
<P>
<PRE>   Sub OpenPresentation()
      Presentations.Open "c:\test.ppt"
   End Sub

</PRE>ReadOnly:
<P>
The ReadOnly parameter is used to open a presentation as Read-Only. The
following example opens a file named test.ppt as Read-Only.
<P>
<PRE>   Sub OpenPresentationReadOnly()
      Presentations.Open "c:\test.ppt", msoTrue
   End Sub

</PRE>The parameter, msoTrue, tells PowerPoint to open the presentation
ReadOnly. When test.ppt is open, the following text appears in the title
bar:
<P>
<PRE>   [test.ppt[Read-Only]]

</PRE>If you do not specify the msoTrue parameter, it is set to msoFalse (the
default), and the presentation opens as read/write.
<P>
Untitled:
<P>
The Untitled parameter is used to create a copy of the presentation. The
following example opens a copy of test.ppt.
<P>
<PRE>   Sub OpenCopy()
      Presentations.Open "c:\test.ppt", Untitled:=msoTrue
   End Sub

</PRE>If you do not specify the msoTrue parameter, it is set to msoFalse (the
default), and the file name only appears in the title bar:
<P>
<PRE>   [test.ppt]

</PRE>WithWindow:
<P>
The WithWindow parameter open a presentation without making it
visible. The following example opens test.ppt, does not show it, and then
closes it.
<P>
<PRE>   Sub OpenInvisible()

      Dim MyPres As Presentation

      Set MyPres = Presentations.Open("c:\test.ppt", _
                                       WithWindow:=msoFalse)

      ' Close the presentation.
      MyPres.Close

   End Sub

</PRE>NOTE: When you are finished with the invisible presentation, make sure
you close the presentation.
<P>
If you do not specify the msoFalse parameter, it is set to msoTrue (the
default).
<P>
This code example:
<P>
<PRE>   Presentations.Open "c:\test.ppt", WithWindow:=msoTrue

</PRE>is equivalent to this code example:
<P>
<PRE>   Presentations.Open "c:\test.ppt"

</PRE><h3>Using the Return Value</h3>
 
<P>
The Open method returns a reference to a presentation object. Once you have
the object reference, you can use it to access methods and properties of
the presentation.
<P>
<PRE>   Sub GetReturnValue()

      Dim MyPres As Presentation

      Set MyPres = Presentations.Open("c:\test.ppt")

      ' This counts the number of slides in test.ppt.
      MsgBox MyPres.Slides.Count

   End Sub

</PRE>NOTE: To use the return value of a method, set the method to a variable and
enclose the parameters in parentheses.
<P>
<P><h3>Error Trapping the Open Method</h3>
 
<P>
The following sample code demonstrates how you can trap errors that may
occur when using the Open method:
<P>
<PRE>   Sub ErrorTrapOpen()

      On Error Resume Next

      ' Clear all values in the Err object.
      Err.Clear

      Dim MyPres As Presentation

      Set MyPres = Presentations.Open("c:\file does not exist.ppt")

      ' If error occurred when opening the file, display the error message.
      If Err.Number &lt;&gt; 0 Then
         MsgBox Err.Description, vbCritical, "Error " &amp; Err.Number
      End If

   End Sub

</PRE>The On Error Resume Next statement allows the macro to continue to execute
beginning with the statement that immediately follows the statement that
generated the error. If you do not use the On Error Resume Next statement,
you will receive a run-time error if the file cannot be opened and the
macro halts. When a run-time error occurs, information about that error is
stored in the Err object.
<P>
For more information about the Err object, search the Help Index for "Err,"
or ask the Microsoft PowerPoint 97 Office Assistant.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For additional information about getting help with Visual Basic for
Applications, please see the following article in the Microsoft Knowledge
Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q163435.htm">Q163435</A></B>
   TITLE     : VBA: Programming Resources for Visual Basic for
               Applications
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 97 8.00 kbmacro kbpptvba ppt8 vba vbe 8.0 kbhowto<BR>
Keywords          : kbcode kbmacro kbprg kbdta kbdtacode kbpptvba<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>
Hardware          : x86<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 10, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
