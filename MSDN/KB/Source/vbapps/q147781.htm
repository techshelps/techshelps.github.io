

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: How to Convert API Calls from 16-bit to 32-bit </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q147781">
<META NAME="KBModify" CONTENT="1998/02/04">
<META NAME="KBCreate" CONTENT="1995/12/15">
<META NAME="Keywords" CONTENT="kbprg kbfaq">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  Because the architecture of Windows 95 and Windows NT is 32-bit, there are several differences in the application programming interface (API) from the 16-bit API of Windows ...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA4Q,QAY5,QAB9,QBV8,QATX,QARM,QA2P,QACJ,QAGU,QA1S,QDIT,QAGI,QDN9,QAPN,QAH4 P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: How to Convert API Calls from 16-bit to 32-bit</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 4, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q147781</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
Because the architecture of Windows 95 and Windows NT is 32-bit, there
are several differences in the application programming interface (API)
from the 16-bit API of Windows 3.x. This article discusses how to convert
code containing 16-bit API calls to 32-bit API calls so that the code
will run successfully in a 32-bit operating environment. This article
discusses the following topics:

<UL><LI>Why 16-bit API calls do not work in a 32-bit operating environment

<LI>Tips on how to make the conversion process easier

<LI>List of converted declaration statements for common API functions
   that you can copy into your modules.
<P>
</UL><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Why 16-bit API Calls Do Not Work in a 32-bit Operating Environment</h3>
 
<P>
You cannot use a 16-bit API call in the Windows 95 or Windows NT 32-bit
operating environment for the following reasons:

<UL><LI>The API library names (dll) are different, for example:
<P>
<PRE>      16-bit       32-bit
      -------------------------
      User.dll     User32.dll
      Kernel.dll   Kernel32.dll
      GDI.dll      GDI32.dll

</PRE><LI>Parameter data types are often different, for example:
<P>
<PRE>      16-bit       32-bit
      -------------------
      Integer      Long
      Integer      Byte
      Double       Long

   NOTE: This not a complete list. You should watch closely for different
   parameter data types when converting code that makes an API call or
   supplies parameters to an API call.

</PRE><LI>API function names are case-sensitive. This differs from the 16-bit API,
   which is not case-sensitive. For example, in a 16-bit API call, the
   following statements are equivalent:
<P>
<P><PRE>      Declare Function GetVersion Lib "KERNEL" () as Long
      Declare Function gEtVeRsIoN Lib "KERNEL" () as Long
</PRE><P>
   However, when converted to a 32-bit API, these statements are not
   equivalent because the function names are case-sensitive:
<P>
<P><PRE>      Declare Function GetVersion Lib "KERNEL32" () as Long
      Declare Function gEtVeRsIoN Lib "KERNEL32" () as Long
</PRE>
<LI>Some API functions have different versions to accommodate ANSI and
   UniCode strings. If an API listed in this article is limited to use
   under a specific operating system in 32-bit, it will be noted with
   the API function.
<P>
</UL><h3>Tips on How to Make the Conversion Process Easier</h3>
 
<P>
You can reduce the amount of work involved with converting your existing
code by adopting these practices:

<UL><LI>When you declare an API procedure, use an alias for the procedure
   name. The alias must be unique from the function name. If it is not,
   the alias will be deleted automatically.

<LI>When you declare the data type returned by the function or the data
   type of parameters passed to the function, use an As clause rather
   than the type declaration characters (%, $, and so on).
<P>
</UL>There is also a helpful utility included with the Microsoft Access
Developers Toolkit for Windows 95, Microsoft Office 97 Developer Edition,
and Visual Basic 4.0 that makes working with APIs easier. It is called the
API Viewer. It enables you to browse through Declares, Constants, and
Types that are included in any text file or in a Microsoft Jet database
that contains API information. You can copy these items to the Clipboard
and then paste them into your code.
<P>
<P><h3>List of Converted Declaration Statements for Common API Functions</h3>
 
<P>
Following is a listing of 16-bit and 32-bit Declare statements for common
API calls that you can use as reference when converting your code to 32-
bit.
<P>
NOTE: If you use any of the following 16-bit declarations in Microsoft
Access 2.0 or earlier, an underscore (_) at the end of a line is used
as a line-continuation character. Remove the underscore from the end of
the line when re-creating these declarations.
<P>
<P><h3>BitBlt</h3>
 
<P>
<PRE> 16-bit: Declare Function BitBlt Lib "GDI" (ByVal hDestDC As Integer, _
         ByVal X As Integer, ByVal Y As Integer, ByVal nWidth As _
         Integer,  ByVal nHeight As Integer, ByVal hSrcDC As Integer, _
         ByVal XSrc As Integer, ByVal YSrc As Integer, ByVal dwRop As _
         Long) As Long

 32-bit: Declare Function apiBitBlt Lib "gdi32" Alias "BitBlt" (ByVal _
         hDestDC As Long, ByVal X As Long, ByVal Y As Long, ByVal nWidth _
         As Long, ByVal nHeight As Long, ByVal hSrcDC As Long, ByVal _
         XSrc  As Long, ByVal YSrc As Long, ByVal dwRop As Long) As Long

</PRE><h3>CheckMenuItem</h3>
 
<P>
<PRE> 16-bit: Declare Function CheckMenuItem Lib "User" (ByVal hMenu As _
         Integer, ByVal wIDCheckItem As Integer, ByVal wCheck As _
         Integer) As Integer

 32-bit: Declare Function apiCheckMenuItem Lib "user32" Alias _
         "CheckMenuItem" (ByVal hMenu As Long, ByVal wIDCheckItem _
         As Long, ByVal wCheck As Long) As Long

</PRE>NOTE: In Microsoft Access for Windows 95 version 7.0, you can use the
SetMenuItem macro action to set the state of menu items (enabled or
disabled, checked or unchecked) on a custom menu bar or the global menu
bar for the active window. For more information about the SetMenuItem
action, search the Help Index for "SetMenuItem Action."
<P>
In Microsoft Access 97, you can use the SetMenuItem macro action only
with custom menu bars and global menu bars created using menu bar
macros. The SetMenuItem action is included in Microsoft Access 97 for
compatibility with earlier versions. To implement the same functionality
with the CommandBars collection in Microsoft Access 97, use the Enabled
and State properties of command bars in Visual Basic for Applications to
enable or disable, check or uncheck items on menu bars, toolbars, and
shortcut menus. For more information about these properties, search the
Help Index for "Enabled" or "State," or ask the Microsoft Access 97
Office Assistant.
<P>
<P><h3>ChooseColor</h3>
 
<P>
<PRE> 16-bit: Declare Function ChooseColor_API Lib "COMMDLG.DLL" Alias _
         "ChooseColor" (pCHOOSECOLOR As ChooseColor) As Integer

 32-bit: Type CHOOSECOLOR
            lStructSize As Long
            hwndOwner As Long
            hInstance  As Long
            RgbResult As Long
            lpCustColors As Long
            Flags As Long
            lCustData As Long
            lpfnHook As Long
            lpTemplateName As Long
         End Type

         Declare Function apiChooseColor Lib "comdlg32.dll" Alias _
         "ChooseColorA" (pChoosecolor As CHOOSECOLOR) As Long

</PRE>NOTE: You can use the ChooseColor functionality of this API by using
the Common Dialog ActiveX control included with the Microsoft Access
Developer's Toolkit for Windows 95 and Microsoft Office 97 Developer
Edition.
<P>
<P><h3>CloseClipboard</h3>
 
<P>
<PRE> 16-bit: Declare Function CloseClipboard Lib "User" () As Integer

 32-bit: Declare Function apiCloseClipboard Lib "user32" Alias _
         "CloseClipboard" () As Long

</PRE><h3>CommDlgExtendedError</h3>
 
<P>
<PRE> 16-bit: Declare Function CommDlgExtendedError Lib "COMMDLG.DLL" () _
         As Long

 32-bit: Declare Function apiCommDlgExtendedError Lib "comdlg32.dll" _
         Alias "CommDlgExtendedError" () As Long

</PRE><h3>CopyFile</h3>
 
<P>
<PRE> 16-bit: Not available in 16-bit.

 32-bit: Declare Function apiCopyFile Lib "kernel32" Alias "CopyFileA" _
         (ByVal lpExistingFileName As String, ByVal lpNewFileName As _
         String, ByVal bFailIfExists As Long) As Long

</PRE>NOTE: File attributes (FILE_ATTRIBUTE_*) for the existing file are copied
to the new file. For example, if an existing file has the
FILE_ATTRIBUTE_READONLY file attribute, a copy created through a call to
CopyFile will also have the FILE_ATTRIBUTE_READONLY file attribute. For
further information on file attributes, see CreateFile.
<P>
NOTE: To achieve the same results, you can use the FileCopy Statement from
within Microsoft Access 7.0 or 97.
<P>
<P><h3>CopyMemory</h3>
 
<P>
<PRE> 16-bit: Declare Sub hmemcpy Lib "kernel" (hpvDest As Any, hpvSrc As _
         Any, ByVal cbBytes As Long)

 32-bit: Global Const GMEM_MOVEABLE = &amp;H2
         Global Const GMEM_ZEROINIT = &amp;H40
         Global Const GHND = (GMEM_MOVEABLE Or GMEM_ZEROINIT)

         Declare Sub CopyMemory Lib "kernel32" Alias "RtlMoveMemory" _
         (hpvDest As Any, hpvSource As Any, ByVal cbCopy As Long)

</PRE><h3>CreateCompatibleBitmap</h3>
 
<P>
<PRE> 16-bit: Declare Function CreateCompatibleBitmap Lib "GDI" (ByVal _
         hDC As Integer, ByVal nWidth As Integer, ByVal nHeight As _
         Integer) As Integer

 32-bit: Declare Function apiCreateCompatibleBitmap Lib "gdi32" Alias _
         "CreateCompatibleBitmap" (ByVal hdc As Long, ByVal nWidth As _
         Long, ByVal nHeight As Long) As Long

</PRE><h3>CreateCompatibleDC</h3>
 
<P>
<PRE> 16-bit: Declare Function CreateCompatibleDC Lib "GDI" (ByVal hdc As _
         Integer) As Integer

 32-bit: Declare Function apiCreateCompatibleDC Lib "Gdi32" (ByVal hdc _
         As Long) As Long

</PRE><h3>DeleteDC</h3>
 
<P>
<PRE> 16-bit: Declare Function DeleteDC Lib "GDI" (ByVal hDC As Integer) _
         As Integer

 32-bit: Declare Function apiDeleteDC Lib "gdi32" Alias "DeleteDC" _
         (ByVal hdc As Long) As Long

</PRE><h3>DrawMenuBar</h3>
 
<P>
<PRE> 16-bit: Declare Sub DrawMenuBar Lib "User" (ByVal hWnd As Integer)

 32-bit: Declare Function apiDrawMenuBar Lib "user32" Alias _
         "DrawMenuBar" (ByVal hwnd As Long) As Long

</PRE><h3>EmptyClipboard</h3>
 
<P>
<PRE> 16-bit: Declare Function EmptyClipboard Lib "User" () As Integer

 32-bit: Declare Function apiEmptyClipboard Lib "user32" Alias _
         "EmptyClipboard" () As Long

</PRE><h3>EnableMenuItem</h3>
 
<P>
<PRE> 16-bit: Declare Function EnableMenuItem Lib "User" (ByVal hMenu As _
         Integer, ByVal wIDEnableItem As Integer, ByVal wEnable _
         As Integer) As Integer

 32-bit: Declare Function apiEnableMenuItem Lib "user32" Alias _
         "EnableMenuItem" (ByVal hMenu As Long, ByVal wIDEnableItem _
         As Long, ByVal wEnable As Long) As Long

</PRE><h3>ExitWindows</h3>
 
<P>
<PRE> 16-bit: Declare Function ExitWindows Lib "User" (ByVal dwReturnCode _
         As Long, ByVal wReserved As Integer) As Integer

 32-bit: Declare Function apiExitWindows Lib "user32" Alias _
         "ExitWindows" (ByVal dwReserved As Long, ByVal uReturnCode _
         As Long) As Long

</PRE><h3>FindExecutable</h3>
 
<P>
<PRE> 16-bit: Declare Function FindExecutable Lib "Shell" (ByVal _
         lpszFile As String, ByVal lpszDir As String, ByVal _
         lpszResult As String) As Integer

 32-bit: Declare Function apiFindExecutable Lib "shell32.dll" Alias _
         "FindExecutableA" (ByVal lpFile As String, ByVal lpDirectory _
         As String, ByVal lpResult As String) As Long

</PRE><h3>FindWindow</h3>
 
<P>
<PRE> 16-bit: Declare Function FindWindow Lib "user"(ByVal lpclassname As _
         Any, ByVal lpCaption As Any) As Integer

 32-bit: Declare Function apiFindWindow Lib "User32" Alias "FindWindowA" _
         (ByVal lpclassname As Any, ByVal lpCaption As Any) as Long

</PRE><h3>fRead</h3>
 
<P>
<PRE> 16-bit: Declare Function fRead Lib "kernel" Alias "lread" (ByVal _
         hFile As Integer, ByVal lpBuff As Long, ByVal nBuff _
         As Integer) As Long

 32-bit: Use the FileCopy Statement within Microsoft Access 7.0 and 97, or
         see the CopyFile API call above.

</PRE><h3>Fwrite</h3>
 
<P>
<PRE> 16-bit: Declare Function fWrite Lib "kernel" Alias "_lwrite" (ByVal _
         hFile As Integer, ByVal lpBuff As Long, ByVal nBuff As Integer) _
         As Long

 32-bit: Use the FileCopy Statement within Microsoft Access 7.0, or
         see the CopyFile API call above.

</PRE><h3>GetActiveWindow</h3>
 
<P>
<PRE> 16-bit: Declare Function GetActiveWindow Lib "User" () As Integer

 32-bit: Declare Function apiGetActiveWindow Lib "user32" Alias _
         "GetActiveWindow" () As Long

</PRE><h3>GetClassName</h3>
 
<P>
<PRE> 16-bit: Declare Function GetClassName Lib "User" (ByVal hWnd _
         As Integer, ByVal lpClassName As String, ByVal nMaxCount _
         As Integer) As Integer

 32-bit: Declare Function apiGetClassName Lib "user32" Alias _
         "GetClassNameA" (ByVal hwnd As Long, ByVal lpClassName _
         As String, ByVal nMaxCount As Long) As Long

</PRE><h3>GetClipboardData</h3>
 
<P>
<PRE> 16-bit: Declare Function GetClipboardData Lib "User" (ByVal _
         wFormat As Integer) As Integer

 32-bit: Declare Function apiGetClipboardData Lib "user32" Alias _
         "GetClipboardDataA" (ByVal wFormat As Long) As Long

</PRE><h3>GetCursorPos</h3>
 
<P>
<PRE> 16-bit: Declare Sub GetCursorPos Lib "User" (lpPoint As POINTAPI)

 32-bit: Type POINTAPI
            x as Long
            y as Long
         End Type

         Declare Sub apiGetCursorPos Lib "User32" (lpPoint _
         As POINTAPI)

</PRE><h3>GetDC</h3>
 
<P>
<PRE> 16-bit: Declare Function GetDC Lib "User" (ByVal hWnd As Integer) _
         As Integer

 32-bit: Declare Function apiGetDC Lib "user32" Alias "GetDC" (ByVal _
         hwnd As Long) As Long

</PRE><h3>GetDesktopWindow</h3>
 
<P>
<PRE> 16-bit: Declare Function GetDesktopWindow Lib "User" () As Integer

 32-bit: Declare Function apiGetDesktopWindow Lib "user32" Alias _
         "GetDesktopWindow" () As Long

 NOTE: You can also use GetWindow to perform the same function.

</PRE><h3>GetDeviceCaps</h3>
 
<P>
<PRE> 16-bit: Declare Function GetDeviceCaps Lib "GDI" (ByVal hDC _
         As Integer, ByVal nIndex As Integer) As Integer

 32-bit: Declare Function apiGetDeviceCaps Lib "gdi32" Alias _
         "GetDeviceCaps" (ByVal hdc As Long, ByVal nIndex As Long) _
         As Long

</PRE><h3>GetDriveType</h3>
 
<P>
<PRE> 16-bit: Declare Function GetDriveType Lib "Kernel" (ByVal nDrive _
         As Integer) As Integer

 32-bit: Declare Function apiGetDriveType Lib "kernel32" Alias _
         "GetDriveTypeA" (ByVal nDrive As String) As Long

</PRE><h3>GetFileVersionInfo</h3>
 
<P>
<PRE> 16-bit: Declare Function GetFileVersionInfo Lib "VER.DLL" _
         (ByVal lpszFileName As String, ByVal lpdwHandle As Long, _
         ByVal cbbuf As Long, ByVal lpvdata As String) As Integer

 32-bit: Declare Function apiGetFileVersionInfo Lib "version.dll" _
         Alias "GetFileVersionInfoA" (ByVal lptstrFilename As _
         String, ByVal dwHandle As Long, ByVal dwLen As Long, _
         lpData As Any) As Long

</PRE><h3>GetFileVersionInfoSize</h3>
 
<P>
<PRE> 16-bit: Declare Function GetFileVersionInfoSize Lib "VER.DLL" _
         (ByVal lpszFileName As String, lpdwHandle As Long) As Long

 32-bit: Declare Function apiGetFileVersionInfoSize Lib _
         "version.dll" Alias "GetFileVersionInfoSizeA" _
         (ByVal lptstrFilename As String, lpdwHandle As Long) As Long

</PRE><h3>GetKeyState</h3>
 
<P>
<PRE> 16-bit: Declare Function GetKeyState Lib "User" (ByVal nVirtKey _
         As Integer) As Integer

 32-bit: Declare Function apiGetKeyState Lib "user32" Alias _
         "GetKeyState" (ByVal nVirtKey As Long) As Integer

</PRE><h3>GetMenu</h3>
 
<P>
<PRE> 16-bit: Declare Function GetMenu Lib "User" (ByVal hWnd As _
         Integer) As Integer

 32-bit: Declare Function apiGetMenu Lib "user32" Alias "GetMenu" _
         (ByVal hwnd As Long) As Long

</PRE><h3>GetMenuState</h3>
 
<P>
<PRE> 16-bit: Declare Function GetMenuState Lib "User" (ByVal hMenu _
         As Integer, ByVal wId As Integer, ByVal wFlags As _
         Integer) As Integer

 32-bit: Declare Function apiGetMenuState Lib "user32" Alias _
         "GetMenuState" (ByVal hMenu As Long, ByVal wID As Long, _
         ByVal wFlags As Long) As Long

</PRE><h3>GetModuleFileName</h3>
 
<P>
<PRE> 16-bit: Declare Function GetModuleFileName Lib "Kernel" (ByVal _
         hModule As Integer, ByVal lpFilename As String, ByVal _
         nSize As Integer) As Integer

 32-bit: Declare Function apiGetModuleFileName Lib "kernel32" Alias _
         "GetModuleFileNameA" (ByVal hModule As Long, ByVal _
         lpFileName As String, ByVal nSize As Long) As Long

</PRE><h3>GetModuleHandle</h3>
 
<P>
<PRE> 16-bit: Declare Function GetModuleHandle Lib "Kernel" (ByVal _
         lpModuleName As String) As Integer

 32-bit: Declare Function apiGetModuleHandle Lib "kernel32" Alias _
         "GetModuleHandleA" (ByVal lpModuleName As String) As Long

</PRE><h3>GetModuleUsage</h3>
 
<P>
<PRE> 16-bit: Declare Function GetModuleUsage Lib "Kernel" (ByVal _
         hModule As Integer) As Integer

 32-bit: This function has been deleted. Each Win32 application
         runs in its own address space.

</PRE><h3>GetOpenFileName</h3>
 
<P>
<PRE> 16-bit: Declare Function GetOpenFileName Lib "COMMDLG.DLL" _
         (OPENFILENAME As tagOPENFILENAME) As Integer

 32-bit: Type tagOPENFILENAME
            lStructSize As Long
            hwndOwner As Long
            hInstance As Long
            lpstrFilter As String
            lpstrCustomFilter As String
            nMaxCustFilter As Long
            nFilterIndex As Long
            lpstrFile As String
            nMaxFile As Long
            lpstrFileTitle As String
            nMaxFileTitle As Long
            lpstrInitialDir As String
            lpstrTitle As String
            flags As Long
            nFileOffset As Integer
            nFileExtension As Integer
            lpstrDefExt As String
            lCustData As Long
            lpfnHook As Long
            lpTemplateName As String
         End Type

         Declare Function apiGetOpenFileName Lib "comdlg32.dll" _
            Alias "GetOpenFileNameA" (OPENFILENAME as tagOPENFILENAME) _
            As Long

</PRE><h3>GetParent</h3>
 
<P>
<PRE> 16-bit: Declare Function GetParent Lib "User" (ByVal hWnd As _
         Integer) As Integer

 32-bit: Declare Function apiGetParent Lib "user32" Alias _
         "GetParent" (ByVal hwnd As Long) As Long

</PRE><h3>GetPrivateProfileString</h3>
 
<P>
<PRE> 16-bit: Declare Function GetPrivateProfileString Lib "Kernel" _
         (ByVal lpApplicationName As String, ByVal lpKeyName As _
         Any, ByVal lpDefault As String, ByVal lpReturnedString As _
         String, ByVal nSize As Integer, ByVal lpFileName As String) _
         As Integer

 32-bit: Declare Function apiGetPrivateProfileString Lib "kernel32" _
         Alias "GetPrivateProfileStringA" (ByVal lpApplicationName _
         As String, ByVal lpKeyName As Any, ByVal lpDefault As _
         String, ByVal lpReturnedString As String, ByVal nSize As _
         Long, ByVal lpFileName As String) As Long

</PRE><h3>GetSaveFileName</h3>
 
<P>
<PRE> 16-bit: Declare Function GetSaveFileName Lib "COMMDLG.DLL" _
         (OPENFILENAME As tagOPENFILENAME) As Integer

 32-bit: Type OPENFILENAME
            lStructSize As Long
            hwndOwner As Long
            hInstance As Long
            lpstrFilter As String
            lpstrCustomFilter As String
            nMaxCustFilter As Long
            nFilterIndex As Long
            lpstrFile As String
            nMaxFile As Long
            lpstrFileTitle As Long
            nMaxFileTitle As Long
            lpstrInitialDir As String
            lpstrTitle As String
            Flags As Long
            nFileOffset As Integer
            nFileExtension As Integer
            lpstrDefExt As String
            lCustData As Long
            lpfnHook As Long
            lpTemplateName As String
         End Type

         Declare Function apiGetSaveFileName Lib "comdlg32.dll" _
         Alias "GetSaveFileNameA" (pOpenfilename as OPENFILENAME) _
         As Long

</PRE>NOTE: You can achieve the same functionality with the Common Dialog
OLE control included with the Microsoft Access Developer's Toolkit for
Windows 95 and Microsoft Office 97 Professional Edition.
<P>
<P><h3>GetSubMenu</h3>
 
<P>
<PRE> 16-bit: Declare Function GetSubMenu Lib "User" (ByVal hMenu _
         As Integer, ByVal nPos As Integer) As Integer

 32-bit: Declare Function apiGetSubMenu Lib "user32" Alias _
         "GetSubMenu" (ByVal hMenu As Long, ByVal nPos As Long) _
         As Long

</PRE><h3>GetSystemDirectory</h3>
 
<P>
<PRE> 16-bit: Declare Function GetSystemDirectory Lib "Kernel" _
         (ByVal lpBuffer As String, ByVal nSize As Integer) As _
         Integer

 32-bit: Declare Function apiGetSystemDirectory Lib "kernel32" _
         Alias "GetSystemDirectoryA" (ByVal lpBuffer As String, _
         ByVal nSize As Long) As Long

</PRE><h3>GetSystemMenu</h3>
 
<P>
<PRE> 16-bit: Declare Function GetSystemMenu Lib "user" (ByVal _
         hWnd As Integer, ByVal flag As Integer) As Integer

 32-bit: Declare Function apiGetSystemMenu Lib "user32" Alias _
         "GetSystemMenu" (ByVal hWnd As Long, ByVal flag As Long) _
         As Long

</PRE><h3>GetSystemMetrics</h3>
 
<P>
<PRE> 16-bit: Declare Function GetSystemMetrics Lib "User" (ByVal _
         nIndex As Integer) As Integer

 32-bit: Declare Function apiGetSystemMetrics Lib "user32" Alias _
         "GetSystemMetrics" (ByVal nIndex As Long) As Long

</PRE><h3>GetVersion</h3>
 
<P>
<PRE> 16-bit: Declare Function GetVersion Lib "Kernel" () As Long

 32-bit: Declare Function apiGetVersion Lib "kernel32" Alias _
         "GetVersion" () As Long

</PRE><h3>GetWindow</h3>
 
<P>
<PRE> 16-bit: Declare Function GetWindow Lib "User" (ByVal hWnd As _
         Integer, ByVal wCmd As Integer) As Integer

 32-bit: Declare Function apiGetWindow Lib "user32" Alias _
         "GetWindow" (ByVal hwnd As Long, ByVal wCmd As Long) As Long

</PRE><h3>GetWindowLong</h3>
 
<P>
<PRE> 16-bit: Declare Function GetWindowLong Lib "User" (ByVal hWnd _
         As Integer, ByVal nIndex As Integer) As Long

 32-bit: Declare Function apiGetWindowLong Lib "user32" Alias _
         "GetWindowLongA" (ByVal hwnd As Long, ByVal nIndex As _
         Long) As Long

</PRE><h3>GetWindowRect</h3>
 
<P>
<PRE> 16-bit: Declare Sub GetWindowRect Lib "GDI" (ByVal hWnd As _
         Integer, lpRect As RECT)

 32-bit: Type RECT_Type
            left As Long
            top As Long
            right As Long
            bottom As Long
         End Type

         Declare Function apiGetWindowRect Lib "user32" Alias _
         "GetWindowRect" (ByVal hwnd As Long, lpRect As RECT_Type) _
         As Long

</PRE><h3>GetWindowText</h3>
 
<P>
<PRE> 16-bit: Declare Function GetWindowText Lib "User" (ByVal hWnd As _
         Integer, ByVal lpString As String, ByVal aint As Integer) As _
         Integer

 32-bit: Declare Function apiGetWindowText Lib "user32" Alias _
         "GetWindowTextA" (ByVal hwnd As Long, ByVal lpString _
         As String, ByVal cch As Long) As Long

</PRE><h3>GetWindowWord</h3>
 
<P>
<PRE> 16-bit: Declare Function GetWindowWord Lib "User" (ByVal _
         hWnd As Integer, ByVal nIndex As Integer) As Integer

 32-bit: Declare Function apiGetWindowWord Lib "user32" Alias _
         "GetWindowWord" (ByVal hwnd As Long, ByVal nIndex As _
         Long) As Integer

</PRE><h3>GetWindowsDirectory</h3>
 
<P>
<PRE> 16-bit: Declare Function GetWindowsDirectory Lib "Kernel" _
         (ByVal lpbuffer As String, ByVal nsize As Integer) As Integer

 32-bit: Declare Function apiGetWindowsDirectory Lib _
         "Kernel32" Alias "GetWindowsDirectoryA" (ByVal _
         lpbuffer As String, ByVal nsize As Long) As Long

</PRE><h3>GlobalAlloc</h3>
 
<P>
<PRE> 16-bit: Declare Function GlobalAlloc Lib "Kernel" (ByVal _
         wFlags As Integer, ByVal dwBytes As Long) As Integer

 32-bit: Declare Function apiGlobalAlloc Lib "kernel32" Alias _
         "GlobalAlloc" (ByVal wFlags As Long, ByVal dwBytes _
         As Long) As Long

</PRE><h3>GlobalFree</h3>
 
<P>
<PRE> 16-bit: Declare Function GlobalFree Lib "Kernel" (ByVal hMem _
         As Integer) As Integer

 32-bit: Declare Function apiGlobalFree Lib "kernel32" Alias _
         "GlobalFree" (ByVal hMem As Long) As Long

</PRE><h3>GlobalLock</h3>
 
<P>
<PRE> 16-bit: Declare Function GlobalLock Lib "Kernel" (ByVal hMem _
         As Integer) As Long

 32-bit: Declare Function apiGlobalLock Lib "kernel32" Alias _
         "GlobalLock" (ByVal hMem As Long) As Long

</PRE><h3>GlobalSize</h3>
 
<P>
<PRE> 16-bit: Declare Function GlobalSize Lib "Kernel" (ByVal hMem _
         As Integer) As Long

 32-bit: Declare Function apiGlobalSize Lib "kernel32" Alias _
         "GlobalSize" (ByVal hMem As Long) As Long

</PRE><h3>GlobalUnlock</h3>
 
<P>
<PRE> 16-bit: Declare Function GlobalUnlock Lib "Kernel" (ByVal _
         hMem As Integer) As Integer

 32-bit: Declare Function apiGlobalUnlock Lib "kernel32" Alias _
         "GlobalUnlock" (ByVal hMem As Long) As Long

</PRE><h3>hmemcpy</h3>
 
<P>
<PRE> 16-bit: Declare Sub hmemcpy Lib "kernel" (hpvDest As Any, _
         hpvSrc As Any, ByVal cbBytes As Long)

 32-bit: This subfunction is not available in 32-bit environments.
         The function CopyMemory is the replacement for hmemcpy.

</PRE><h3>IsIconic</h3>
 
<P>
<PRE> 16-bit: Declare Function IsIconic Lib "User" (ByVal hWnd As _
         Integer) As Integer

 32-bit: Declare Function apiIsIconic Lib "user32" Alias _
         "IsIconic" (ByVal hwnd As Long) As Long

</PRE><h3>IsWindowVisible</h3>
 
<P>
<PRE> 16-bit: Declare Function IsWindowVisible Lib "User" (ByVal _
         hWnd As Integer) As Integer

 32-bit: Declare Function apiIsWindowVisible Lib "user32" Alias _
         "IsWindowVisible" (ByVal hwnd As Long) As Long

</PRE><h3>IsZoomed</h3>
 
<P>
<PRE> 16-bit: Declare Function IsZoomed Lib "User" (ByVal hWnd As _
         Integer) As Integer

 32-bit: Declare Function apiIsZoomed Lib "user32" Alias _
         "IsZoomed" (ByVal hwnd As Long) As Long

</PRE><h3>lstrcpy</h3>
 
<P>
<PRE> 16-bit: Declare Function lstrcpy Lib "Kernel" (ByVal lpString1 As _
         Any, ByVal lpString2 As Any) As Long

 32-bit: Declare Function apilstrcpy Lib "kernel32" Alias "lstrcpyA" _
         (ByVal lpString1 As Any, ByVal lpString2 As Any) As Long

</PRE><h3>NetWkstaGetInfo</h3>
 
<P>
<PRE> 16-bit: Declare Function NetWkstaGetInfo Lib "NetAPI.DLL" _
         (ByVal lServer As Long, ByVal sLevel As Integer, _
         ByVal pbBuffer As Long, ByVal cbBuffer As Integer, _
         pcbTotalAvail As Integer) As Integer

 32-bit: Declare Function apiNetWkstaGetInfo Lib "NetAPI32.dll"_
         Alias NetWkstaGetInfo (ByVal lServer as Integer, ByVal _
         sLevel as Integer, ByVal pbBuffer as Long, cbBuffer as _
         Integer, pcbTotalAvail as Integer) As Integer

</PRE>NOTE: This function is available only in the Windows NT environment.
<P>
NOTE: In Microsoft Access 7.0 and 97, you can use the CurrentUser()
function to obtain the currently logged on user.
<P>
<P><h3>OpenClipboard</h3>
 
<P>
<PRE> 16-bit: Declare Function OpenClipboard Lib "User" (ByVal _
         hWnd As Integer) As Integer

 32-bit: Declare Function apiOpenClipboard Lib "user32" Alias _
         "OpenClipboard" (ByVal hwnd As Long) As Long

</PRE><h3>Playsound</h3>
 
<P>
<PRE> 16-bit: Declare Function sndplaysound Lib "mmsystem" (ByVal _
         filename as String, ByVal snd_async as Integer) As Integer

 32-bit: Declare Function apisndPlaySound Lib "winmm" Alias _
         "sndPlaySoundA" (ByVal filename As String, ByVal snd_async _
         As Long) As Long

</PRE><h3>ReleaseDC</h3>
 
<P>
<PRE> 16-bit: Declare Function ReleaseDC Lib "User" (ByVal hWnd _
         As Integer, ByVal hDC As Integer) As Integer

 32-bit: Declare Function apiReleaseDC Lib "user32" Alias _
         "ReleaseDC" (ByVal hwnd As Long, ByVal hdc As Long) _
         As Long

</PRE><h3>SelectObject</h3>
 
<P>
<PRE> 16-bit: Declare Function SelectObject Lib "GDI" (ByVal hDC _
         As Integer, ByVal hObject As Integer) As Integer

 32-bit: Declare Function apiSelectObject Lib "GDI32" Alias _
         "SelectObject" (ByVal hdc As Long, ByVal hObject As _
         Long) As Long

</PRE><h3>SetActiveWindow</h3>
 
<P>
<PRE> 16-bit: Declare Function SetActiveWindow Lib "User" (ByVal _
         hWnd As Integer) As Integer

 32-bit: Declare Function apiSetActiveWindow Lib "user32" _
         Alias "SetActiveWindow" (ByVal hwnd As Long) As Long

</PRE><h3>SetClipBoardData</h3>
 
<P>
<PRE> 16-bit: Declare Function SetClipboardData Lib "User" _
         (ByVal wFormat As Integer, ByVal hMem As Integer) As Integer

 32-bit: Declare Function apiSetClipboardData Lib "User32.dll" _
         Alias "SetClipboardData" (ByVal wFormat as Long, _
         ByVal hMem as Long) as Long

</PRE><h3>SetKeyboardState</h3>
 
<P>
<PRE> 16-bit: Declare Sub SetKeyboardState Lib "User" (lpKeyState As Any)

 32-bit: Declare Function apiSetKeyboardState Lib "user32" Alias_
         "SetKeyboardState" (lppbKeyState As Byte) As Long

</PRE><h3>SetSysModalWindow</h3>
 
<P>
<PRE> 16-bit: Declare Function SetSysModalWindow Lib "User" _
         (ByVal hwnd As Integer) As Integer

 32-bit: This function has been deleted.

</PRE><h3>SetWindowLong</h3>
 
<P>
<PRE> 16-bit: Declare Function SetWindowLong Lib "User" (ByVal hWnd _
         As Integer, ByVal nIndex As Integer, ByVal dwNewLong _
         As Long) As Long

 32-bit: Declare Function apiSetWindowLong Lib "user32" Alias _
         "SetWindowLongA" (ByVal hwnd As Long, ByVal nIndex _
         As Long, lNewLong as Long) As Long

</PRE><h3>SetWindowPos</h3>
 
<P>
<PRE> 16-bit: Declare Sub SetWindowPos Lib "User" (ByVal hWnd As Integer,_
         ByVal hWndInsertAfter As Integer, ByVal X As Integer, _
         ByVal Y As Integer, ByVal cx As Integer, ByVal cy _
         As Integer, ByVal wFlags As Integer)

 32-bit: Declare Function apiSetWindowPos Lib "user32" Alias _
         "SetWindowPos" (ByVal hwnd As Long, ByVal _
         hWndInsertAfter As Long, ByVal x As Long, ByVal y _
         As Long, ByVal cx As Long, ByVal cy As Long, _
         ByVal wFlags As Long) As Long

</PRE><h3>ShellExecute</h3>
 
<P>
<PRE> 16-bit: Declare Function ShellExecute Lib "SHELL" (ByVal _
         hwnd As Integer, ByVal lpszOp As String, ByVal lpszFile _
         As String, ByVal lpszParams As String, ByVal lpszDir As _
         String, ByVal fsShowCmd As Integer) As Integer

 32-bit: Declare Function apiShellExecute Lib "shell32.dll" Alias _
         "ShellExecuteA" (ByVal hwnd As Long, ByVal lpOperation As _
         String, ByVal lpFile As String, ByVal lpParameters As _
         String, ByVal lpDirectory As String, ByVal nShowCmd As _
         Long) As Long

</PRE><h3>ShowWindow</h3>
 
<P>
<PRE> 16-bit: Declare Function ShowWindow Lib "User" (ByVal hWnd _
         As Integer, ByVal nCmdShow As Integer) As Integer

 32-bit: Declare Function apiShowWindow Lib "user32" Alias _
         "ShowWindow" (ByVal hwnd As Long, ByVal nCmdShow As _
         Long) As Long

</PRE><h3>WNetAddConnection</h3>
 
<P>
<PRE> 16-bit: Declare Function WNetAddConnection Lib "User" (ByVal _
         lpszNetPath As String, ByVal lpszPassword As String, _
         ByVal lpszLocalName As String) As Integer

 32-bit: Declare Function apiWNetAddConnection Lib "mpr.dll" Alias _
         "WNetAddConnectionA" (ByVal lpszNetPath As String, ByVal _
         lpszPassword As String, ByVal lpszLocalName As String) As Long

</PRE><h3>WNetCancelConnection</h3>
 
<P>
<PRE> 16-bit: Declare Function WNetCancelConnection Lib "User" (ByVal _
         lpszName As String, ByVal bForce As Integer) As Integer

 32-bit: Declare Function apiWNetCancelConnection Lib "mpr.dll" _
         Alias "WNetCancelConnectionA" (ByVal lpszName As _
         String, ByVal fForce As Long) As Long

</PRE><h3>WNetGetUser</h3>
 
<P>
<PRE> 16-bit: Declare Function WNetGetUser Lib "USER.EXE" (ByVal _
         szUser As String, lpnBufferSize As Integer) As Integer

 32-bit: Declare Function apiWNetGetUser Lib "mpr.dll" Alias _
         "WNetGetUserA" (ByVal lpName As String, ByVal _
         lpUserName As String, lpnLength As Long) As _
         Long

         Declare Function WNetGetUser Lib "mpr" Alias _
         "WNetGetUserA" (ByVal lpName As String, ByVal _
         lpUserName As String, lpnLength As Long) As Long

</PRE><h3>WritePrivateProfileString</h3>
 
<P>
<PRE> 16-bit: Declare Function WritePrivateProfileString Lib _
         "Kernel" (ByVal lpApplicationName As String, ByVal _
         lpKeyName As Any, ByVal lpString As Any, ByVal _
         lplFileName As String) As Integer

 32-bit: Declare Function apiWritePrivateProfileString Lib _
         "kernel32" Alias "WritePrivateProfileStringA" _
         (ByVal lpApplicationName As String, ByVal lpKeyName _
         As Any, ByVal lpString As Any, ByVal lpFileName As _
         String) As Long

</PRE><h2>REFERENCES</h2>
 
<P>
Win32 API Declarations File and Viewer
<P>
"Microsoft Windows 3.1 Programmer's Reference," Volume 2, "Functions"
<P>
"Microsoft Win32 Programmer's Reference," Volumes 1-4
 
<PRE>Keywords          : kbprg kbfaq
Version           : 7.0 97
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 4, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
