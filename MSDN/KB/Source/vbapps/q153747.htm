

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: How to Create a Top N Values per Group Query </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q153747">
<META NAME="KBModify" CONTENT="1997/08/28">
<META NAME="KBCreate" CONTENT="1996/07/17">
<META NAME="Keywords" CONTENT="kbusage PgmHowTo">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  This article describes two methods for creating queries that list only the top N items per group. Using either one of these methods, you can create a query that displays only the...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAUD,QABM,QABO,QAPF,QAPN,QBWS,QA1S,QAB6,QA7O,QA7N,QACF,QALW,QAB9,QA5V,QAY5 P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: How to Create a Top N Values per Group Query</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 28, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q153747</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
This article describes two methods for creating queries that list only
the top N items per group. Using either one of these methods, you can
create a query that displays only the top five salespeople for each region.
<P>
The second method described in this article assumes that you are familiar
with Visual Basic for Applications and with creating Microsoft Access
applications using the programming tools provided with Microsoft Access.
For more information about Visual Basic for Applications, please refer to
your version of the "Building Applications with Microsoft Access" manual.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
In order to list only the top N items within a group in a query, you must
specify a criteria that dynamically reads the grouping column in the query
and limits the item column to the top N values within each group. Method 1
uses a SQL subquery to dynamically generate a list of the top N items
for each group, and then uses this list as the criteria for the item column
using the IN operator.
<P>
Method 2 uses a user-defined function to return the Nth item within a
specific group, which is then used with the &gt;= operator to return the Nth
and greater items.
<P>
<P><h3>Method 1</h3>
 
<P>
The following example demonstrates how to create a query in the Northwind
sample database that displays the top three UnitsInStock per CategoryID.
The query uses a SQL subquery, which returns the top three UnitsInStock
given a specific CategoryID, and then uses the IN operator to limit the
records in the main query.
<P>
NOTE: In the criteria example below, an underscore (_) at the end of a
line is used as a line-continuation character. Remove the underscore
from the end of the line when re-creating the criteria.

<OL><P><LI>Open the sample database Northwind.mdb.

<P><LI>Click the Queries tab, and then click New.

<P><LI>Click Design View, and then click OK.

<P><LI>In the Show Table dialog box, add the Categories and the Products
   tables, and then click Close.

<P><LI>Add the following fields to the query grid:
<P>
<P><PRE>      Field: CategoryName
      Sort: Ascending
</PRE><P>
<P><PRE>      Field: ProductName
</PRE><P>
<P><PRE>      Field: UnitsInStock
      Sort: Descending
      Criteria: In (Select Top 3 [UnitsInStock] From Products Where _
      [CategoryID]=[Categories].[CategoryID] Order By [UnitsInStock] Desc)
</PRE>
<P><LI>Run the query. Note that the query returns the top three UnitsInStock
   for each category.
<P>
</OL><h3>Method 2</h3>
 
<P>
The following example demonstrates how to create a query in the Northwind
sample database that displays the last five orders placed per customer.
The query uses a criteria function called NthInGroup() that returns the
fifth most recent OrderDate given a specific CustomerID. Using the &gt;=
operator along with this function returns all orders that were ordered
on or after the fifth most recent OrderDate for each customer:

<OL><P><LI>Open the sample database Northwind.mdb.

<P><LI>Create a new module with the following in the Declaration section:
<P>
<P><PRE>      Option Explicit
</PRE>
<P><LI>Create the following procedure:
<P>
<P><PRE>      Function NthInGroup(GroupID, N)
      ' Returns the Nth Item in GroupID for use as a Top N per group
      ' query criteria.
      Static LastGroupId, LastNthInGroup
      Dim ItemName, GroupIDName, GDC, SearchTable
      Dim SQL As String, rs As Recordset, db As DATABASE
</PRE><P>
<P><PRE>      If (LastGroupId = GroupID) Then
<PRE></PRE>         ' Returned saved result if function is called with the
         ' same GroupID more than once in a row.
         NthInGroup = LastNthInGroup
      Else
         ' Set the SQL statement parameters. These are the only items
         ' that need to be customized in this function.
         ' Set to Item field name.
         ItemName = "OrderDate"
         ' Set to Group ID field name.
         GroupIDName = "CustomerID"
         ' GroupID Delimiter Character:
         ' For Text use "'" (Note that this is a quotation mark, a space,
         ' an apostrophe, a space, and then a quotation mark. The spaces
         ' are necessary for SQL statements), Date "#", Numeric ""
         GDC = "'"
         ' Set to search table.
         SearchTable = "Orders"
         ' Build a Top N SQL statement dynamically given N and
         ' GroupID as parameters. Note that the sort is by the
         ' item in descending order, in order to get the Top N
         ' largest items.
         SQL = "Select Top " &amp; N &amp; " [" &amp; ItemName &amp; "] "
         SQL = SQL &amp; "From [" &amp; SearchTable &amp; "] "
         SQL = SQL &amp; "Where [" &amp; GroupIDName &amp; "]=" &amp; GDC &amp; GroupID &amp; GDC _
            &amp; " "
         SQL = SQL &amp; "Order By [" &amp; ItemName &amp; "] Desc"
         ' Open up recordset on Top N SQL statement and read the
         ' last record to get the smallest item in the Top N.
         Set db = CurrentDb()
         Set rs = db.OpenRecordset(SQL)
         If (rs.BOF And rs.EOF) Then
            ' No matches found, return a null.
            LastNthInGroup = Null
            LastGroupId = GroupID
            NthInGroup = LastNthInGroup
            Else
               ' Return the smallest Top N item in the group.
               rs.MoveLast
               LastNthInGroup = rs(ItemName)
               LastGroupId = GroupID
               NthInGroup = LastNthInGroup
             End If
          End If

       End Function

</PRE><P><LI>Compile the module and then close and save the module as "basTopN"
   (without the quotation marks).

<P><LI>Click the Queries tab, and then click New.

<P><LI>Click Design View, and then click OK.

<P><LI>In the Show Table dialog box, add the Customers and the Orders tables.
   Click Close.

<P><LI>Add the following fields to the query grid:
<P>
<P><PRE>      Field: CustomerID
      Sort: Ascending
</PRE><P>
<P><PRE>      Field: OrderID
</PRE><P>
<P><PRE>      Field: Order Date
      Sort: Descending
      Criteria: &gt;= NthInGroup([Customers].[CustomerID],5)
</PRE>
<P><LI>Run the query. Note that for all customers who have at least five
   orders, the query returns the five most recent orders. For customers
   with fewer than five orders, the query returns all orders.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about subqueries, search for "subqueries," and then
"SQL subqueries" using the Microsoft Access 97 Help Index.
 
<PRE>Keywords          : kbusage PgmHowTo
Version           : 7.0 97
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 28, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
