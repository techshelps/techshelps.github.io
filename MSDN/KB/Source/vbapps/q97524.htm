

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: Round or Truncate Values to Desired Number of Decimals </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q97524 ">
<META NAME="KBModify" CONTENT="1997/08/29">
<META NAME="KBCreate" CONTENT="1993/04/13">
<META NAME="Keywords" CONTENT="kbprg kbusage PgmHowTo SynFnc">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  The Format property of a control can round a Number or Currency field to the desired number of decimal places. However, this does not change the underlying data, which may contai...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA1S,QAY5,QA7O,QAB5,QAK2,QAB9,QAKC,QAOE,QAMN,QDN9,QAKD,QBV8,QBE7,QBE6,QAPF P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: Round or Truncate Values to Desired Number of Decimals</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q97524 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 1.0, 1.1, 2.0, 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
The Format property of a control can round a Number or Currency field to
the desired number of decimal places. However, this does not change the
underlying data, which may contain additional digits that the control does
not display. If you add the values in this control, the sum is based on
the actual values and not on the displayed values. This may make the total
seem inaccurate.
<P>
This article describes four user-defined functions that you can use to
round or truncate data to two decimal places so that the displayed and
formatted value and the actual numeric or currency data are the same.
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
NOTE: Visual Basic for Applications is called Access Basic in Microsoft
Access versions 1.x and 2.0. For more information about Access Basic,
please refer to the "Introduction to Programming" manual in Microsoft
Access version 1.x or the "Building Applications" manual in Microsoft
Access version 2.0
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The functions are presented in two styles. The first style is appropriate
for the AfterUpdate property of a form control to ensure that the data
entered matches the data that is displayed. The second style is for use in
expressions and calculated controls.
<P>
To round or truncate numbers to two decimal places, create a new module
and add the following functions.
<P>
<PRE>   '******************************************************
   ' Declarations section of the module
   '******************************************************

   Option Explicit
   Const Factor = 100

   '=====================================================
   ' RoundAU and TruncAU are designed to be added to the
   ' AfterUpdate property on a form control.
   '=====================================================
   Function RoundAU(X As Control)
      X = Int(X * Factor + .5) / Factor
   End Function

   Function TruncAU(X As Control)
      X = Int(X * Factor) / Factor
   End Function

   '=====================================================
   ' RoundCC and TruncCC are designed to be used in
   ' expressions and calculated controls on forms and reports.
   '=====================================================
   Function RoundCC(X)
      RoundCC = Int (X * Factor + 0.5) / Factor
   End Function

   Function TruncCC(X)
      TruncCC = Int (X * Factor) / Factor
   End Function

</PRE><h3>Examples of Using the Round and Truncate Functions</h3>
 
<P>
The following examples use the sample database Northwind.mdb (or NWIND.MDB
in version 2.0 or earlier).
<P>
CAUTION: Following the steps in these examples will modify the sample
database Northwind.mdb (or NWIND.MDB in version 2.0 or earlier). You may
want to back up the Northwind.mdb (or NWIND.MDB) file and perform these
steps on a copy of the database.
<P>
<P><h3>Example 1</h3>
 
<P>
Use the TruncAU() function to the AfterUpdate property of a form:

<OL><P><LI>Open the sample database Northwind.mdb.

<P><LI>Create a new module called Rounding, and type the procedures in the
   preceding section.

<P><LI>Open the Products form in Design view, and add the TruncAU() function to
   the AfterUpdate property of the UnitPrice field (or Unit Price field in
   version 2.0 or earlier):
<P>
<P><PRE>      Form: Products
      --------------
      Control Name: Unit Price
<PRE></PRE>         AfterUpdate: =TruncAU([UnitPrice])

   If a user accidentally enters $23.055 instead of $23.05, the TruncAu()
   function catches the mistake and changes the value to $23.05. If you
   use the RoundAu() function instead, the function changes the value to
   $23.06. If you use neither function, the value is displayed as $23.06,
   but the entered value, $23.055, is used in any calculations.

</PRE></OL><h3>Example 2</h3>
 
<P>
Use the RoundCC() function with an expression in a report's group footer.
This example assumes that you have already created the Rounding module in
step 2 of Example 1:

<OL><P><LI>Open the sample database Northwind.mdb.

<P><LI>Open the Summary Of Sales By Year report in Design view and use the
   RoundCC() function in the ControlSource property of two controls in the
   report's group footer:
<P>
<P><PRE>      In Microsoft Access 7.0 and 97:
</PRE><P>
<P><PRE>      Report: Summary of Sales By Year
      --------------------------------
      Control Name: QuarterSales
<PRE></PRE>         ControlSource: =Sum(RoundCC([SubTotal]))

      Control Name: YearTotal
         ControlSource: =Sum(RoundCC([SubTotal]))

      In Microsoft Access 1.x and 2.0:

      Report: Summary of Sales By Year
      --------------------------------
      Control Name: Total Sales for Quarter
         ControlSource: =Sum(RoundCC([Order Amount]))

      Control Name: Total Sales for Year
         ControlSource: =Sum(RoundCC([Order Amount]))

   If you use RoundCC(), the report sums the values displayed in the
   report, even though the actual values may contain hidden digits.

</PRE></OL>NOTE: To change the number of decimal places that the functions use, open
the Rounding module in Design view and change the value of the global
constant, Factor, as follows:
<P>
<PRE>      10 = 1 decimal place
     100 = 2 decimal places
    1000 = 3 decimal places, etc.

</PRE><h3>Limitations</h3>
 
<P>
These functions should only be used with Currency data. If used with
Double or Single numbers, you may still receive minor rounding errors.
The reason for this is that Single and Double numbers are floating point.
They cannot store an exact binary representation of decimal fractions.
Therefore there will always be some error. However, Currency values are
scaled integers and can store an exact binary representation of fractions
to 4 decimal places.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: int trunc precision rounding<BR>
Keywords          : kbprg kbusage PgmHowTo SynFnc<BR>
Version           : 1.0 1.1 2.0 7.0 97<BR>
Platform          : WINDOWS<BR>
Hardware          : x86<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
