

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC97: How to Modify ASP Forms to Allow Deleting from Text Boxes </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q166911">
<META NAME="KBModify" CONTENT="1997/08/29">
<META NAME="KBCreate" CONTENT="1997/04/14">
<META NAME="Keywords" CONTENT="kbinterop IntpWeb IntAsp">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  When you delete the contents of a text box on an ASP form, and then click the Commit button, the data reappears. This article demonstrates how you can modify the ASP form to...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGI,QDNQ,QBT6,QBV4,QA7O,QA7N,QAYL,QA4C,QAH4,QA1S,QAXB,QAI4,QBXS,QAHP P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC97: How to Modify ASP Forms to Allow Deleting from Text Boxes</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q166911</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
When you delete the contents of a text box on an ASP form, and then click
the Commit button, the data reappears. This article demonstrates how you
can modify the ASP form to allow you to delete data from a text box.
<P>
NOTE: This article contains information about editing ASP files. It
assumes that you are familiar with Active Server, Visual Basic Scripting,
and editing HTML files. Microsoft Access Technical Support engineers do not
support modification of any HTML, HTX, IDC, or ASP files.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The VB Script that Microsoft Access generates when you export a form to ASP
format performs tests on each field to determine which ones it will update
when you click Commit. One of the tests checks whether or not a QueryString
variable is equal to a zero length string (""). If it is not equal to "",
the field is updated. However, deleting the data in a text box causes its
QueryString variable to equal "", so the field is not updated.
<P>
You can modify the ASP script that Microsoft Access generates so that it
checks for the existence of the QueryString variable. If it exists and it
is equal to a zero length string, the field will be updated with a NULL
value. If it does not exist, the field will not be updated.
<P>
The steps in the following example show you how to modify the ASP file that
Microsoft Access generates:

<OL><P><LI>Start Microsoft Access 97 and open the sample database Northwind.mdb.

<P><LI>Export the Customers form to ASP format in a folder on your Web server
   where you have Execute permission. This step creates two files:
   Customers.asp and Customersalx.asp.
<P>
   For more information about exporting forms to ASP format, search the
   Help Index for "ASP files."

<P><LI>Use Notepad or another text editor to open the Customers.asp file. In
   the middle of the script you will see the following lines of code:
<P>
<P><PRE>      If cstr(Request.QueryString("Country")) &lt;&gt; "" Then
<PRE></PRE>         rs.Fields("Country").Value = Request.QueryString("Country")
      End If
      If cstr(Request.QueryString("Fax")) &lt;&gt; "" Then
         rs.Fields("Fax").Value = Request.QueryString("Fax")
      End If
      If cstr(Request.QueryString("Phone")) &lt;&gt; "" Then
         rs.Fields("Phone").Value = Request.QueryString("Phone")
      End If
      If cstr(Request.QueryString("PostalCode")) &lt;&gt; "" Then
         rs.Fields("PostalCode").Value = Request.QueryString("PostalCode")
      End If
      If cstr(Request.QueryString("Region")) &lt;&gt; "" Then
         rs.Fields("Region").Value = Request.QueryString("Region")
      End If
      If cstr(Request.QueryString("City")) &lt;&gt; "" Then
         rs.Fields("City").Value = Request.QueryString("City")
      End If
      If cstr(Request.QueryString("Address")) &lt;&gt; "" Then
         rs.Fields("Address").Value = Request.QueryString("Address")
      End If
      If cstr(Request.QueryString("ContactTitle")) &lt;&gt; "" Then
         rs.Fields("ContactTitle").Value = _
            Request.QueryString("ContactTitle")
      End If
      If cstr(Request.QueryString("ContactName")) &lt;&gt; "" Then
         rs.Fields("ContactName").Value = _
            Request.QueryString("ContactName")
      End If
      If cstr(Request.QueryString("CompanyName")) &lt;&gt; "" Then
         rs.Fields("CompanyName").Value = _
            Request.QueryString("CompanyName")
      End If
      If cstr(Request.QueryString("CustomerID")) &lt;&gt; "" Then
         rs.Fields("CustomerID").Value = Request.QueryString("CustomerID")
      End If

</PRE><P><LI>Modify the code to appear as it does below. The nested If...End If
   blocks in this example are not required; they allow you to choose
   setting the field value to either NULL or "", depending on the
   requirements of the field in your table. You can simplify the code by
   just setting the value of the field equal to the value of the
   QueryString variable, whatever it is. For example, if the QueryString
   variable "Country" exists, you can set rs.Fields("Country").Value =
   Request.QueryString("Country"); if the variable contains nothing, the
   field is updated to a zero length string:
<P>
<P><PRE>      ' If the QueryString variable has been set
      If Request.QueryString("Country").count &lt;&gt; 0 Then
<PRE></PRE>         ' Update the field with the QueryString value.
         rs.Fields("Country").Value = Request.QueryString("Country")
      End If

   NOTE: The following code assumes that the fields in your Microsoft
   Access 97 table have their Required property set to No. If Required is
   set to Yes, the update will fail because you are trying to set the
   value of a required field to NULL. If the fields in the table have their
   AllowZeroLength property set to Yes, you can set the fields equal to a
   zero length string.

   Replace the code in step 3 with the modified code below:

      ' If the QueryString variable has been set
      If Request.QueryString("Country").count &lt;&gt; 0 Then
         ' And if the QueryString variable is not a zero length string
         If cstr(Request.QueryString("Country")) &lt;&gt; "" Then
            ' Then update the field with the new data.
            rs.Fields("Country").Value = Request.QueryString("Country")
         Else
            ' Otherwise set the value of the field to NULL.
            rs.Fields("Country").Value = NULL
         ' If you are updating a required field, you can use the following
         ' line of code instead of the one above, as long as the
         ' AllowZeroLength property of the required field is set to Yes:
         '
         '  rs.Fields("Country").Value = ""
         End If
      End If

      ' Repeat the pattern for the remaining fields on the form.
      If Request.QueryString("Fax").count &lt;&gt; 0 Then
         If cstr(Request.QueryString("Fax")) &lt;&gt; "" Then
            rs.Fields("Fax").Value = Request.QueryString("Fax")
         Else
            rs.Fields("Fax").Value = NULL
         End If
      End If
      If Request.QueryString("Phone").count &lt;&gt; 0 Then
         If cstr(Request.QueryString("Phone")) &lt;&gt; "" Then
            rs.Fields("Phone").Value = Request.QueryString("Phone")
         Else
            rs.Fields("Phone").Value = NULL
         End If
      End If
      If Request.QueryString("PostalCode").count &lt;&gt; 0 Then
         If cstr(Request.QueryString("PostalCode")) &lt;&gt; "" Then
            rs.Fields("PostalCode").Value = _
               Request.QueryString("PostalCode")
         Else
            rs.Fields("PostalCode").Value = NULL
         End If
      End If
      If Request.QueryString("Region").count &lt;&gt; 0 Then
         If cstr(Request.QueryString("Region")) &lt;&gt; "" Then
            rs.Fields("Region").Value = Request.QueryString("Region")
         Else
            rs.Fields("Region").Value = NULL
         End If
      End If
      If Request.QueryString("City").count &lt;&gt; 0 Then
         If cstr(Request.QueryString("City")) &lt;&gt; "" Then
            rs.Fields("City").Value = Request.QueryString("City")
         Else
            rs.Fields("City").Value = NULL
         End If
      End If
      If Request.QueryString("Address").count &lt;&gt; 0 Then
         If cstr(Request.QueryString("Address")) &lt;&gt; "" Then
            rs.Fields("Address").Value = Request.QueryString("Address")
         Else
            rs.Fields("Address").Value = NULL
         End If
      End If
      If Request.QueryString("ContactTitle").count &lt;&gt; 0 Then
         If cstr(Request.QueryString("ContactTitle")) &lt;&gt; "" Then
            rs.Fields("ContactTitle").Value = _
               Request.QueryString("ContactTitle")
         Else
            rs.Fields("ContactTitle").Value = NULL
         End If
      End If
      If Request.QueryString("ContactName").count &lt;&gt; 0 Then
         If cstr(Request.QueryString("ContactName")) &lt;&gt; "" Then
            rs.Fields("ContactName").Value = _
               Request.QueryString("ContactName")
         Else
            rs.Fields("ContactName").Value = NULL
         End If
      End If
      If Request.QueryString("CompanyName").count &lt;&gt; 0 Then
         If cstr(Request.QueryString("CompanyName")) &lt;&gt; "" Then
            rs.Fields("CompanyName").Value = _
               Request.QueryString("CompanyName")
         Else
            rs.Fields("CompanyName").Value = NULL
         End If
      End If
      If Request.QueryString("CustomerID").count &lt;&gt; 0 Then
         If cstr(Request.QueryString("CustomerID")) &lt;&gt; "" Then
            rs.Fields("CustomerID").Value = _
               Request.QueryString("CustomerID")
         Else
         'CustomerID cannot be blank, so there is no other option
         End If
      End If

</PRE><P><LI>Save and close the Customers.asp file.

<P><LI>Start Microsoft Internet Explorer and open the Customers.asp file on
   your Web server by typing the Uniform Resource Locator (URL) in the
   Address box, for example:
<P>
<P><PRE>      <B>http://&lt;ServerName&gt;/Test/Customers.asp</B>
</PRE>
<P><LI>Delete the text from the Title box on the form, and then commit the
   record. Note that when the form is refreshee, the text box remains
   empty.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information on how to create and modify ASP files, please refer
to your Microsoft ASP online documentation.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: delete clear remove control empty save<BR>
Keywords          : kbinterop IntpWeb IntAsp<BR>
Version           : 97<BR>
Platform          : WINDOWS<BR>
Hardware          : x86<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
