

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WD98: Converted WordBasic On Error Statements May Fail </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q181064">
<META NAME="KBModify" CONTENT="1998/03/03">
<META NAME="KBCreate" CONTENT="1998/02/13">
<META NAME="Keywords" CONTENT="kbdta kbdtacode OffVBA macword98">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  When you run a Microsoft Visual Basic for Applications procedure or macro that was converted from a WordBasic procedure or macro that contained error trapping, the error trap is ignored though it worked as expected when run in WordBasic.  CAUSE ===...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAAP,QAB4,QBS0,QAKP,QA5F,QAPN,QAB9,QBAD,QAO4,QAJX,QAEF,QADR,QAH4,QAKE,QAMA V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>WD98: Converted WordBasic On Error Statements May Fail</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 3, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q181064</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Word 98 Macintosh Edition
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When you run a Microsoft Visual Basic for Applications procedure or macro
that was converted from a WordBasic procedure or macro that contained error
trapping, the error trap is ignored though it worked as expected when run
in WordBasic.
<P>
<P><h2>CAUSE</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>By design, the On Error statement in Visual Basic works differently from
WordBasic. In Visual Basic, On Error is not cleared when an error occurs,
while in WordBasic, the On Error statement is cleared, the error trap is
reset, and your code continues to run.
<P>
Therefore, the following sample converted WordBasic code fails when an
error occurs the second time.
<P>
<PRE>   Sub Main()

      ' Clear error trap. Set error trap.
      On Error GoTo -1: On Error GoTo ErrorTrap

      ' Loop 10 times.
      For i = 1 To 10

         ' Artificially raise an error.
         Err.Raise 5

   ErrorTrap:

        ' Decision tree based on error returned.
        If Err.Number = 0 Then

            ' If no error occurred, do this...
            count_ = count_ + 1

        Else

            ' Else, if error occurred, do this...
            Err.Number = 0

        End If
      Next

   End Sub

</PRE><h2>RESOLUTION</h2>
 
<P>
To resolve this issue, make the On Error statement the first statement
inside the loop.
<P>
<PRE>   Sub Main()

      ' Loop 10 times.
      For i = 1 To 10

      ' Clear error trap. Set error trap.
      On Error GoTo -1: On Error GoTo ErrorTrap

         ' Artificially raise an error.
         Err.Raise 5

   ErrorTrap:

        ' Decision tree based on error returned.
        If Err.Number = 0 Then

            ' If no error occurred, do this...
            count_ = count_ + 1

        Else

            ' Else if error occurred, do this...
            Err.Number = 0

        End If
      Next

   End Sub

</PRE>In this example, the Err.Raise statement artificially raises an error for
demonstration purposes. When the error occurs and the next iteration of the
loop occurs, the "On Error GoTo -1" statement clears the error trap and the
"On Error GoTo ErrorTrap" statement resets the error trap. The loop
continues to process without interruption until it completes the designated
number of iterations (10).
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in the Microsoft products
listed at the beginning of this article. We are researching this problem
and will post new information here in the Microsoft Knowledge Base as it
becomes available.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about the On Error Statement, click the Office
Assistant in the Visual Basic Editor, type "On Error," click Search, and
then click to view "On Error Statement."
<P>
NOTE: If the Assistant is hidden, click the Office Assistant button on the
Standard toolbar. If Word Help is not installed on your computer, please
see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../OFFICE/Q179216.htm">Q179216</A></B>
   TITLE     : OFF98: How to Use the Microsoft Office Installer Program

</PRE>For more information about getting help with Visual Basic for Applications,
please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q163435.htm">Q163435</A></B>
   TITLE     : VBA: Programming Resources for Visual Basic for
               Applications
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: OFF98 vba<BR>
Keywords          : kbdta kbdtacode OffVBA macword98<BR>
Version           : MACINTOSH:98<BR>
Platform          : MACINTOSH<BR>
Issue type        : kbbug<BR>
Solution Type     : kbnofix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 3, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
