

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: VB Code for Working with List Box Items in a Dialog Box </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q126794">
<META NAME="KBModify" CONTENT="1998/02/20">
<META NAME="KBCreate" CONTENT="1995/03/02">
<META NAME="Keywords" CONTENT="kbcode kbprg PgmCtrlsStd PgmHowto">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel, you can use the list box control on a dialog sheet to present a user with a list of items that can be scrolled and selected. You can use Visual Basic, Applications Edition code to add items to (populate) this list and to retriev...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVR,QBVP,QBS0,QAH4,QAM9,QALX,QAFF,QA2Q,QAE1,QAY2,QANF,QAPN,QA01,QAYY,QAPF P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: VB Code for Working with List Box Items in a Dialog Box</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 20, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q126794</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, versions 5.0, 5.0c
<LI>Microsoft Excel for Windows NT, version 5.0
<LI>Microsoft Excel for Windows 95, versions 7.0, 7.0a
<LI>Microsoft Excel 97 for Windows
<LI>Microsoft Excel for the Macintosh, version 5.0, 5.0a
<LI>Microsoft Excel 98 Macintosh Edition
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Excel, you can use the list box control on a dialog sheet to
present a user with a list of items that can be scrolled and selected. You
can use Visual Basic, Applications Edition code to add items to (populate)
this list and to retrieve items from it.
<P>
The following Visual Basic macro code examples demonstrate a few of the
more common tasks that you may want to perform when you add items to or
retrieve data from a list box.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE><h2>SAMPLE VISUAL BASIC CODE TO ADD ITEMS TO A LIST</h2>
 
<P>
<P><h3>To populate a list box with data from cells on a worksheet</h3>
 
<P>
<PRE>   Sub Example1()
      DialogSheets(1).ListBoxes(1).ListFillRange = "MyWorksheet!A2:A15"
   End Sub

</PRE>NOTE: "MyWorksheet" is the name of the worksheet that contains the data you
would like placed in the list box.
<P>
<P><h3>To populate a list box using an array</h3>
 
<P>
<PRE>   Sub Example2()
      DialogSheets(1).ListBoxes(1).List = _
         Array("Mon", "Tue", "Wed", "Thu", "Fri")
   End Sub

</PRE><h3>To populate the list box with data from a horizontal array of cells</h3>
 
<P>
Ordinarily, list boxes are populated with a column of data. If you need to
populate a list box with a row of data, use this code:
<P>
<PRE>   Sub Example3()
      DialogSheets(1).ListBoxes(1).List = _
         Worksheets("Sheet1").Range("A1:F1")
   End Sub

</PRE>NOTE: "Sheet1" is the worksheet that contains your data.
<P>
<P><h2>SAMPLE VISUAL BASIC CODE TO REMOVE ITEMS FROM A LIST</h2>
 
<P>
<P><h3>To clear all items in a list box with RemoveAllItems</h3>
 
<P>
<PRE>   Sub Example4()
      DialogSheets(1).ListBoxes(1).RemoveAllItems
   End Sub

</PRE>For additional information, please see the following article in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q105877.htm">Q105877</A></B>
   TITLE     : XL: RemoveItem and RemoveAllItems Methods May Not Work

</PRE>SAMPLE VISUAL BASIC CODE TO RETRIEVE ITEMS FROM A LIST
 
<P>
<P><h3>To retrieve the selected item in a single-select list box</h3>
 
<P>
<PRE>   Sub Example5()

      Dim theContents As String

      ' Define a With statement to optimize code.
      With DialogSheets(1).ListBoxes(1)

         ' Define theContents equal to the selected item.
         theContents = .List(.ListIndex)

         ' End the With Statement.
      End With

      ' Display the selected item.
      MsgBox theContents

   End Sub

</PRE>For additional information, please see the following article in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q124214.htm">Q124214</A></B>
   TITLE     : XL: Returning a Value from a List Box in Visual Basic

</PRE><h3>To retrieve the selected items from a multi-select list box</h3>
 
<P>
<PRE>   Sub Example6()

      Dim LTemp As Variant
      Dim LItem As Variant
      Dim Counter As Integer
      Dim CurList as ListBox

      ' Set an object name for easy referencing of the list box.
      Set CurList = DialogSheets(1).ListBoxes(1)

      ' Put the Selected array into the variable LTemp.
      LTemp = CurList.Selected

      ' Initialize a Counter variable.
      Counter = 1

      ' Iterate through the loop once for each item in the array.
      For Each LItem In LTemp

         ' If the value of the current item is True...
         If LItem = True Then

            ' Show a message box indicating the item is selected.
            MsgBox CurList.List(Counter) &amp; " is selected."

         End If

         ' Increment the Counter to get next selected item.
         Counter = Counter + 1
      Next

   End Sub

</PRE>For additional information, please see the following article in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q111564.htm">Q111564</A></B>
   TITLE     : XL: Determining Which Items Are Selected in a List Box

</PRE><h3>To retrieve all items in a list box using a For-Each statement</h3>
 
<P>
<PRE>   Sub Example7()

      Dim mtemp As Object
      Dim myList
      Dim LItem As Variant

      ' Set mtemp as a ListBox object.
      Set mtemp = DialogSheets(1).ListBoxes(1)

      ' Set mtemp = myList.
      myList = mtemp.List

      ' Create a For-Each Loop.
      For Each LItem In myList

         ' Display the selected item.
         MsgBox Litem

      Next

   End Sub

</PRE><h2>REFERENCES</h2>
 
<P>
"Visual Basic User's Guide," pages 226, 231
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 7.00 5.00 5.00a 5.00c Dialogs ListBox XL98<BR>
XL97 XL7 XL5<BR>
Keywords          : kbcode kbprg PgmCtrlsStd PgmHowto<BR>
Version           : WINDOWS:5.0,5.0c,7.0; MACINTOSH:5.0,5.0a<BR>
Platform          : MACINTOSH WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 20, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
