

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: How to Copy One of Each Record Type to Another Worksheet </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q151344">
<META NAME="KBModify" CONTENT="1998/02/03">
<META NAME="KBCreate" CONTENT="1996/05/21">
<META NAME="Keywords" CONTENT="kbcode kbprg PgmHowto">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Using Microsoft Visual Basic for Applications in Microsoft Excel, you can  copy a single instance of a record type to another worksheet.  MORE INFORMATION  Microsoft provides programming examples for illustration only, without warranty either expre...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA5V,QBVP,QBS0,QA9N,QDNZ,QAML,QA2Q,QDMR,QASB,QDMH,QAHE,QAH4,QAFO,QAVZ,QBVV P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: How to Copy One of Each Record Type to Another Worksheet</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 3, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q151344</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 98 Macintosh Edition
<LI>Microsoft Excel 97 for Windows
<LI>Microsoft Excel for Windows 95, versions 7.0, 7.0a
<LI>Microsoft Excel for Windows, versions 5.0, 5.0c
<LI>Microsoft Excel for the Macintosh, versions 5.0, 5.0a
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Using Microsoft Visual Basic for Applications in Microsoft Excel, you can 
copy a single instance of a record type to another worksheet.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>To illustrate this, in a new workbook on Sheet1, enter the following:
<P>
<PRE>   A1:  Part no.    B1:  Description     C1:  On Hand       D1:  Store
   A2:  10AB        B2:  Nuts            C2:  1             D2:  1
   A3:  11AB        B3:  Bolts           C3:  2             D3:  2
   A4:  10AB        B4:  Nuts            C4:  3             D4:  3
   A5:  12AB        B5:  Nuts            C5:  4             D5:  4
   A6:  11AB        B6:  Bolts           C6:  5             D6:  5

</PRE>On Sheet2, enter the following:
<P>
<PRE>   A1:  Part no.    B1:  Description     C1:  On Hand       D1:  Store

</PRE>The following macro searches the "Part no." field and copies each non-
duplicate "Part no." to a second worksheet. The first unique "Part no."
will be copied to Sheet2.
<P>
<P><h3>Sample Visual Basic Procedure</h3>
 
<P>
Type the following macro in a new module sheet:
<P>
<PRE>   Sub CopyNoDupes()

       ' Selects sheet1.
       Worksheets("sheet1").select
       ' Selects cell A2.
       Range("a2").Select
       ' Turns off screen updating, which helps macro run faster.
       Application.ScreenUpdating = False

       ' Will run the below code until the active cell is blank.
       Do While ActiveCell.Value &lt;&gt; ""
           ' Flag is used to determine whether the record should be pasted
           ' to Sheet2.
           flag = True
           ' The variable value1 is assigned the value in the currently
           ' selected cell, initially cell A2.
           valuea = ActiveCell.Value
           ' Valueb is assigned the value in the cell one column to the
           ' right of the activecell, initially cell B2.
           valueb = ActiveCell.Offset(0, 1).Value

           ' Beginaddrs is assigned the address of the activecell.
           beginaddrs = ActiveCell.Address
           ' Endaddrs is assigned the address of the last contiguous cell
           ' of data on the active row.
           endaddrs = ActiveCell.End(xlToRight).Address

           ' Copies the current row's record to Clipboard.
           Range(beginaddrs &amp; ":" &amp; endaddrs).Copy
           ' Selects sheet2.
           Sheets("sheet2").Select
           ' Selects cell A2.
           Range("a2").Select

           ' Determine if the record type has already been copied to
           ' Sheet2.
           Do While ActiveCell.Value &lt;&gt; ""

               ' If valuea, which contains the value from sheet1, equals
               ' the active cell's value in sheet2, and valueb equals
               ' the value in the cell immediately to the right of the
               ' active cell, then do the lines before the Else.
               If valuea = ActiveCell.Value And valueb = _
                   ActiveCell.Offset(0, 1).Value Then

                   ' Flag used in a if statement below. False indicates do
                   ' not paste record.
                   flag = False

                   ' Rowcount is assigned the current number of contiguous
                   ' rows of records.
                   rowcount = Range("a1").CurrentRegion.Rows.Count

                   ' Selects a blank row to exit out of Do While.
                   Range("a" &amp; rowcount).Offset(1, 0).Select

               Else

                   ' Otherwise, select next record on Sheet2.
                   ActiveCell.Offset(1, 0).Select

               End If

           ' Check next record for a duplicate.
           Loop

           ' If flag was not set to False in the previous Do While Loop,
           ' for example, record type not in sheet2, then do the lines
           ' before the End If.
           If flag Then

               ' Rowcount is assigned the current number of contiguous rows
               ' of records.
               rowcount = Range("a1").CurrentRegion.Rows.Count

               ' Pastes the new record type after the last record.
               Range("a" &amp; rowcount).Offset(1, 0).PasteSpecial
           End If

           ' Selects sheet1.
           Sheets("sheet1").Select
           ' Selects the next record on Sheet1.
           Range(beginaddrs).Offset(1, 0).Select

       ' Returns back to first Do While to repeat the above process.
       Loop

       ' Turns ScreenUpdating back on.
       Application.ScreenUpdating = True

       ' Removes the marquee around last copied record.
       Application.CutCopyMode = False

   End Sub

</PRE><h2>REFERENCES</h2>
 
<P>
In Microsoft Excel version 5.0, for more information about any of the
Visual Basic for Applications commands used in this article, click Help,
Contents, Programming with Visual Basic, Programming Language Summary.
Click the appropriate letter to look up the command.
<P>
In Microsoft Excel version 7.0, for more information about any of the
Visual Basic for Applications commands used in this article, click
Help, Contents, Microsoft Visual Basic Excel Reference.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 5.00 5.00a 5.00c 7.00 8.00 XL98 XL97 XL7 XL5<BR>
Keywords          : kbcode kbprg PgmHowto<BR>
Version           : WINDOWS:5.0,7.0,97; MACINTOSH:5.0,98<BR>
Platform          : MACINTOSH WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 3, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
