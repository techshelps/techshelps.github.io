

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WD98: How to Create and Display a Custom Dialog Box </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q182426">
<META NAME="KBModify" CONTENT="1998/03/13">
<META NAME="KBCreate" CONTENT="1998/03/12">
<META NAME="Keywords" CONTENT="kbcode kbprg kbdta kbdtacode kbmacroexample OffVBA macword98">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="   This article contains step by step instructions for creating and displaying a Visual Basic for Applications custom dialog box (User Form).  MORE INFORMATION  Microsoft provides programming examples for illustration only, without warranty either ex...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAH4,QBJZ,QBWS,QAB5,QABA,QBV4,QA7O,QAOE,QAMN,QBT6,QASR,QAKE,QAHP,QAMB V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>WD98: How to Create and Display a Custom Dialog Box</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 13, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q182426</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Word 98 Macintosh Edition
</UL> 
<P>
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article contains step by step instructions for creating and displaying
a Visual Basic for Applications custom dialog box (User Form).
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE><h3>Creating the User Form</h3>
 
<P>
The following example creates a user form with a TextBox control and two
CommandButton controls (an "OK" button and a "Cancel" button).
<P>
Create the form using the following steps:

<OL><P><LI>On the Tools menu, point to Macro, and then click Visual Basic Editor.

<P><LI>In the Visual Basic project window, click Normal.
<P>
    By clicking Normal, the form will be available to all documents. To
    create the user form in a custom template, make sure the template is
    currently open and select the template project name instead of Normal.
    For example, if the custom template name is "My Template," in the
    Visual Basic project window select "TemplateProject(My Template)."
    The user form will be available only when the custom template is
    open, available as an add-in, or attached to an open document.

<P><LI>On the Insert menu, click UserForm.

<P><LI>Click the TextBox control on the Toolbox toolbar, and then click the
    form.
<P>
    The TextBox control appears in the default size. Drag a sizing
    handle to resize the control or drag the control to move it to a new
    location.

<P><LI>Click the CommandButton control on the Toolbox toolbar and then click
    the form.
<P>
    The CommandButton control appears in the default size. Drag a sizing
    handle to resize the control or drag the control to move it to a new
    location.
<P>
    Repeat this step to add a second CommandButton control.

<P><LI>Select the first command button control and then click Code on the
    View menu.

<P><LI>In the Code window, type "Selection.TypeText TextBox1.Text" (without
    the quotation marks), so that your code looks like this:
<P>
      Private Sub CommandButton1_Click ()
<PRE>         Selection.TypeText TextBox1.Text
      End sub

    NOTE: When you click this button on the form, the contents of the text
    box is inserted into the active document at the location of the
    insertion point.

</PRE><P><LI>On the View menu, click Object to return to the form.

<P><LI>Select the second command button control and then click Code on the
    View menu.

<P><LI>In the Code window, type "End" (without the quotation marks), so that
    your code looks like this:
<P>
      Private Sub CommandButton2_Click ()
<PRE>         End
      End sub

   When you click this button after you click the first command button, the
   form is closed. If you click this button instead of the first command
   button, the form is canceled.

</PRE><P><LI>On the File menu, click Save Normal.
<P>
</OL><h3>Displaying the Form</h3>
 
<P>
To display the form, switch to Word, and then do the following:

<OL><P><LI>On the Tools menu, point to Macro, and then click Macros.

<P><LI>In the Macro Name box, type FillInForm and then click Create.

<P><LI>In the Code window, type "UserForm1.Show" (without the quotation
   marks), so that your code looks like this:
<P>
<P><PRE>     Sub FillInForm()
<PRE></PRE>        UserForm1.Show
     End Sub

</PRE><P><LI>Save and close the macro.

<P><LI>Close the Visual Basic Editor.

<P><LI>You can now run the macro from Word to display the form.
<P>
</OL>If you want default text to appear in the text box, create an "initialize"
event for the UserForm object. To do this, use the following steps:

<OL><P><LI>Double-click the form.

<P><LI>From the Object list, select UserForm.

<P><LI>From the Procedure list, select Initialize.

<P><LI>In the Code window, type the following code
<P>
<P><PRE>      Private Sub UserForm_Initialize()
<PRE></PRE>         TextBox1.Text = "&lt;default text&gt;"
      End Sub

   where &lt;default text&gt; is the text you want to appear in the text box when
   the form appears.

</PRE></OL>For more information about User Forms, click the Office Assistant while in
the Visual Basic Editor, type "UserForm," click Search, and then click to
view "UserForm Object."
<P>
NOTE: If the Assistant is hidden, click the Office Assistant button on the
Standard toolbar. If the Assistant is not able to answer your query, please
see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q176476.htm">Q176476</A></B>
   TITLE     : OFF: Office Assistant Not Answering Visual Basic Questions

</PRE>For additional information, please see the following article in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q181058.htm">Q181058</A></B>
   TITLE     : OFF98: How to Run Sample Code from Knowledge Base Articles

</PRE><h2>REFERENCES</h2>
 
<P>
For more information about getting help with Visual Basic for Applications,
please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q163435.htm">Q163435</A></B>
   TITLE     : VBA: Programming Resources for Visual Basic for
               Applications
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: vb vba vbe<BR>
Keywords          : kbcode kbprg kbdta kbdtacode kbmacroexample OffVBA macword98<BR>
Version           : MACINTOSH:98<BR>
Platform          : MACINTOSH<BR>
Hardware          : MAC<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 13, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
