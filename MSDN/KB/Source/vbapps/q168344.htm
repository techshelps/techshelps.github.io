

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: Using the Imp Operator for Binary Comparison </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q168344">
<META NAME="KBModify" CONTENT="1998/02/27">
<META NAME="KBCreate" CONTENT="1997/05/09">
<META NAME="Keywords" CONTENT="kbprg kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  The Visual Basic for Applications Imp operator is used to perform a logical implication on two expressions. If you are using the Imp operator with two numeric expressions as arguments, Microsoft Excel performs a bit-wise comparison of identically p...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QBS0,QAL3,QAKC,QANY,QAKM,QBC6,QAPF,QAG8,QAG7,QAKD,QAH4,QA4F,QAIB,QAB9 P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: Using the Imp Operator for Binary Comparison</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 27, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q168344</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
<LI>Microsoft Excel for Windows 95, version 7.0
<LI>Microsoft Excel for Windows, version 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The Visual Basic for Applications Imp operator is used to perform a logical
implication on two expressions. If you are using the Imp operator with two
numeric expressions as arguments, Microsoft Excel performs a bit-wise
comparison of identically positioned bits.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The syntax for the Imp operator is as follows
<P>
<PRE>   &lt;result&gt; = &lt;expression1&gt; Imp &lt;expression2&gt;

</PRE>where &lt;expression1&gt; and &lt;expressions2&gt; are any expressions and &lt;result&gt; is
any numeric variable.
<P>
When you use the Imp operator to perform a bit-wise comparison of
identically positioned bits in two numeric expressions, the result of the
bit-wise comparison is determined using the rules in the following table.
<P>
<PRE>   Bit in Expression1   Bit in Expression2   Bit in Result
   -------------------------------------------------------

           1                     1                 1
           1                     0                 0
           0                     1                 1
           0                     0                 1

</PRE>Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft support engineers can help explain the
functionality of a particular macro, they will not modify these examples to
provide added functionality, nor will they help you construct macros to
meet your specific needs. If you have limited programming experience, you
may want to consult one of the Microsoft Solution Providers. Solution
Providers offer a wide range of fee-based services, including creating
custom macros. For more information about Microsoft Solution Providers,
call Microsoft Customer Information Service at (800) 426-9400.
<P>
For example, if you run the following macro, a message box displays the
value of -11:
<P>
<PRE>   Sub Imp_Example()

   Dim a As Integer
   Dim b As Integer
   Dim result As Integer

      a =10
      b = 4

      result = a Imp b

      MsgBox result

   End Sub

</PRE>The value -11 is returned because the macro follows the rules in the table
and uses twos complement notation. Using twos complement notation, the
leftmost bit represents the sign bit. If this bit is one, the number is
negative; if this bit is zero, the number is positive. To convert a
negative number from binary back to decimal, complement all of the bits (1
becomes 0 and 0 becomes 1), convert that number to decimal, change the sign
of the decimal number, and then subtract 1.
<P>
In the example, the Imp operator is used with the two numeric values 10 and
4. In binary form (2 bytes), these two numbers appear as follows:
<P>
<PRE>   10:   0000000000001010
    4:   0000000000000100

</PRE>Using the bit-wise comparison rules from the table yields the result value
in binary form:
<P>
<PRE>   10:   0000000000001010
    4:   0000000000000100
   --------------------------

   result:   1111111111110101

</PRE>To determine the decimal equivalent of result, use the twos complement
rules of conversion as follows:
<P>
<PRE>                                     Result: 1111111111110101
                        Complement each bit: 0000000000001010
   Decimal equivalent of this binary number: 10
                    Opposite of this number: -10
       Subtract 1 (decimal value of result): -11

</PRE><h2>REFERENCES</h2>
 
<P>
For more information about the Imp Operator, click the Index tab in
Visual Basic for Applications Help, type the following text
<P>
<PRE>   imp

</PRE>and then double-click the selected text to go to the "Imp Operator"
topic.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 5.00 7.00 97 XL97<BR>
Keywords          : kbprg kbhowto<BR>
Version           : WINDOWS:5.0,7.0,97<BR>
Platform          : WINDOWS<BR>
Issue type        : kbinfo<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 27, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
