

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PPT97: Graph8 Process Remains in Memory After Macro Ends </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q171383">
<META NAME="KBModify" CONTENT="1998/03/09">
<META NAME="KBCreate" CONTENT="1997/07/15">
<META NAME="Keywords" CONTENT="kbcode kbmacro kbprg kbdta kbdtacode">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  When you run a Microsoft Visual Basic for Applications macro or procedure that loops through one or more Microsoft Graph 97 objects in Microsoft PowerPoint, the Windows 95 Close Program dialog box (or the Windows NT Task  Manager) shows that a sepa...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAJM,QAPN,QAGB,QAH4,QBVQ,QAW6,QDKP,QAAW,QBJZ,QBWS,QAB9,QADK,QAVZ,QAPF P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PPT97: Graph8 Process Remains in Memory After Macro Ends</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 9, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q171383</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft PowerPoint 97 for Windows
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When you run a Microsoft Visual Basic for Applications macro or procedure
that loops through one or more Microsoft Graph 97 objects in Microsoft
PowerPoint, the Windows 95 Close Program dialog box (or the Windows NT Task 
Manager) shows that a separate process for each graph remains after the
procedure ends. For example, if you have a procedure that loops through all
three graphs in a presentation, three copies of Graph8.exe remain running
after the procedure ends.
<P>
<P><h2>CAUSE</h2>
 
<P>
When you activate a Graph 8 object, PowerPoint creates a persistent data
pointer (IDispatch interface pointer) to the Graph 97 object. The
persistent data pointer allows quick access to the Graph object in case it
is needed again. PowerPoint releases the pointer when the presentation is
closed, and Graph 8 unloads itself from memory.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
To work around this problem, close and then reopen the presentation that
contains the Graph objects that were edited.
<P>
<P><h3>Method 1: Manually Close the Presentation</h3>
 

<OL><P><LI>On the File menu, click Close.
<P>
   This process removes any Graph objects from memory that are associated
   with the presentation.

<P><LI>On the File menu, click Open.
<P>
   Open the presentation you just closed; no Graph objects are activated
   yet.
<P>
</OL><h3>Method 2: Use a Visual Basic Macro to Close the Presentation</h3>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE></OL>The sample code assumes the following:

<UL><LI>The presentation that contains the Graph objects is the active
   presentation.
<P>
   -and-

<LI>You are running this procedure from a presentation that is not the
   active presentation. For example, if you run this code from the
   presentation you are trying to close, the procedure ends after the
   ActivePresentation.Close statement, because you just closed the
   presentation that contains the code.
<P>
</UL><h3>Sample Visual Basic Procedure</h3>
 
<P>
<PRE>   Sub ReloadPresentation()

      Dim strPresPathName As String
      Dim lCurrentView As Long
      Dim lSlideNumber As Long

      ' Determine what view the presentation is in.
      lCurrentView = ActiveWindow.ViewType

      ' If the active view is slide view, get
      ' the slide number.
      If ActiveWindow.ViewType = ppViewSlide Then
         lSlideNumber = ActiveWindow.View.Slide.SlideNumber
      End If

      ' Save the presentation, if needed.
      If ActivePresentation.Saved = msoFalse Then
         ActivePresentation.Save
      End If

      ' Get the name and path to the active presentation.
      strPresPathName = ActivePresentation.FullName

      ' Close the presentation.
      ActivePresentation.Close

      ' Reopen the presentation.
      Presentations.Open strPresPathName

      ' Restore the view.
      ActiveWindow.ViewType = lCurrentView

      ' If in slide view, restore the slide number.
      If ActiveWindow.ViewType = ppViewSlide Then
         ActiveWindow.View.GotoSlide lSlideNumber
      End If

   End Sub

</PRE><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in the Microsoft products listed
at the beginning of this article.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For additional information about getting help with Visual Basic for
Applications, please see the following article in the Microsoft Knowledge
Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q163435.htm">Q163435</A></B>
   TITLE     : VBA: Programming Resources for Visual Basic for
               Applications
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: VBA many out range ppt8 8.00 OLE automation<BR>
Keywords          : kbcode kbmacro kbprg kbdta kbdtacode<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>
Hardware          : x86<BR>
Issue type        : kbbug<BR>
Solution Type     : kbpending<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 9, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
