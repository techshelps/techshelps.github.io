

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: SendKeys Method Runs Before Built-In SendKeys Statement </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q110891">
<META NAME="KBModify" CONTENT="1997/09/02">
<META NAME="KBCreate" CONTENT="1994/02/01">
<META NAME="Keywords" CONTENT="kbprg PgmOthr">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel, if you use both the SendKeys statement and the Application.SendKeys method in a Visual Basic procedure, the order in which the keystrokes run may be different than the order of the keystroke commands in your procedure.  CAUSE ==...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QBS0,QBVP,QAB9,QBWS,QAJQ,QBUG,QBUF,QABA,QBV8,QA5F,QAMJ,QAMA,QAHE,QADN P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: SendKeys Method Runs Before Built-In SendKeys Statement</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 2, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q110891</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, versions 5.0, 5.0c
<LI>Microsoft Excel for Windows 95, versions 7.0, 7.0a
<LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
In Microsoft Excel, if you use both the SendKeys statement and the
Application.SendKeys method in a Visual Basic procedure, the order in which
the keystrokes run may be different than the order of the keystroke
commands in your procedure.
<P>
<P><h2>CAUSE</h2>
 
<P>
In a Visual Basic procedure, the Application.SendKeys method is run before
the SendKeys statement.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
To ensure that the keystrokes you send using SendKeys in a Visual
Basic procedure run in the correct order, do one of the following:

<UL><LI>Use either the Application.SendKeys method or the built-in SendKeys
   statement, but not both in the same procedure.
<P>
   -or-

<LI>Use the Wait argument with both the SendKeys commands. When you use the
   Wait argument, all the keys in the SendKeys command run before the next
   line in the procedure runs. The following is an example of using the
   wait argument with the built-in SendKeys statement:
<P>
<P><PRE>      SendKeys "{enter}", True
</PRE><P>
   The following is an example of using the Wait argument with the
   SendKeys method:
<P>
<P><PRE>      Application.SendKeys "{enter}", True
</PRE><P>
</UL><h2>MORE INFORMATION</h2>
 
<P>
The SendKeys command is available both as a built-in Visual Basic
statement, and as a method of the Microsoft Excel Application object.
You can use either SendKeys command to send keystrokes to the active
window. This command is useful when you want to send commands to
another application that does not support linking, embedding, OLE
Automation, or dynamic data exchange (DDE). The two commands provide
the same general functionality, one exception being the order in
which they are run when used in the same procedure as described
above.
<P>
<P><h2>REFERENCES</h2>
 
<P>
"Visual Basic User's Guide," version 5.0, pages 214-215
<P>
For more information about the SendKeys Method or the SendKeys
Statement, click the Search button in the Visual Basic Reference and
type:
<P>
<PRE>    SendKeys
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 5.00 7.00 8.00 97<BR>
Keywords          : kbprg PgmOthr<BR>
Version           : 5.00 5.00c 7.00 7.00a 97<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 2, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
