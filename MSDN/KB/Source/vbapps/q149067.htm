

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: Query with Criteria Causes ApplyFilter to Fail Silently </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q149067">
<META NAME="KBModify" CONTENT="1997/08/28">
<META NAME="KBCreate" CONTENT="1996/03/27">
<META NAME="Keywords" CONTENT="kbusage">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  When you specify a query with criteria as the FilterName argument of an ApplyFilter action, ApplyFilter method, OpenForm action, or OpenForm method, the filter is not applie...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAWI,QAPN,QAB6,QA1S,QBS0,QDN9,QAPF,QA5V,QAHE,QADK,QAH4,QAB9,QAO4,QABM,QAB4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: Query with Criteria Causes ApplyFilter to Fail Silently</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 28, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q149067</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access version 7.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
When you specify a query with criteria as the FilterName argument of
an ApplyFilter action, ApplyFilter method, OpenForm action, or
OpenForm method, the filter is not applied and you receive no error
message.
<P>
<P><h2>CAUSE</h2>
 
<P>
Microsoft Access does not set the Filter property of the form if you use a
query as a filter and the length of the WHERE clause in the query exceeds
256 characters.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
There are two possible workarounds using Visual Basic for Applications.
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to the "Building
Applications with Microsoft Access for Windows 95" manual.
<P>
<P><h3>Method 1</h3>
 
<P>
You can simulate a filter by setting a form's record source to a query with
criteria. For example, if your query with criteria is called Query1, set
the form's RecordSource property to Query1 using the following sample code:
<P>
<PRE>   Me.recordsource="Query1"

</PRE>You can use this technique in different event procedures, such as the
form's Load event or a command button's Click event.
<P>
<P><h3>Method 2</h3>
 
<P>
You can use the query's SQL WHERE clause (without the word WHERE) in the
Where Condition argument of the ApplyFilter method or OpenForm method. The
Where Condition argument for these methods has a physical limit of 32,768
characters.
<P>
Here are the basic steps using the sample database Northwind.mdb:

<OL><P><LI>Open the sample database Northwind.mdb.

<P><LI>Create a new query based on the Order Details table using the following
   SQL statement:
<P>
<P><PRE>      SELECT DISTINCTROW [Order Details].OrderID, [Order
      Details].ProductID, [Order Details].UnitPrice, [Order
      Details].Quantity, [Order Details].Quantity FROM [Order Details]
      WHERE ((([Order Details].OrderID)&gt;10500) AND (([Order
      Details].ProductID)=31 Or ([Order Details].ProductID)=12 Or ([Order
      Details].ProductID)=56 Or ([Order Details].ProductID)=14) AND
      (([Order Details].UnitPrice)&gt;5) AND (([Order Details].Quantity)&gt;5))
      OR ((([Order Details].UnitPrice)&gt;100)) OR ((([Order
      Details].Quantity)&gt;120)) OR ((([Order Details].Quantity)&gt;100));
</PRE>
<P><LI>Close and save the query as TestQuery.

<P><LI>Create a new form based on the Order Details table using the AutoForm:
   Columnar Wizard.

<P><LI>Open the new form in Design view.

<P><LI>Create a command button, and then view its properties.

<P><LI>Set the button's OnClick property to the following event procedure
   (using the code builder):
<P>
<P><PRE>    DoCmd.ApplyFilter "TestQuery", "((([Order Details].OrderID)&gt;10500)" &amp; _
    " AND (([Order Details].ProductID)=31 Or " &amp; _
    "([Order Details].ProductID)=12 Or ([Order Details].ProductID)=56" &amp; _
    " Or ([Order Details].ProductID)=14) AND " &amp; _
    " (([Order Details].UnitPrice)&gt;5) AND " &amp; _
    " (([Order Details].Quantity)&gt;5))" &amp; _
    " OR ((([Order Details].UnitPrice)&gt;100)) OR " &amp; _
    " ((([Order Details].Quantity)&gt;120))" &amp; _
    " OR ((([Order Details].Quantity)&gt;100))"
</PRE>
<P><LI>Switch the form to Form view. Note that there are 2155 records in the
   form.

<P><LI>Click the command button to apply the filter. Note that there are 139
   records in the form after the filter is applied.
<P>
</OL>NOTE: This technique only works with the ApplyFilter or OpenForm methods in
Visual Basic. You cannot use an ApplyFilter or OpenForm action in a macro
to work around this problem because the WhereCondition argument for these
actions is limited to 256 characters in Macro Design view.
<P>
WARNING: If the WHERE clause contains text criteria in quotation marks, the
quotation marks will also need to be concatenated into the SQL statement.
For more information about concatenating strings, please see the following
article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q136059.htm">Q136059</A></B>
   TITLE     : ACC: Errors Concatenating Variables or Controls (2.0/95)

</PRE></OL><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in Microsoft Access
version 7.0. This problem no longer occurs in Microsoft Access 97.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce Problem</h3>
 

<OL><P><LI>Open the sample database Northwind.mdb.

<P><LI>Create a new query using the following SQL statement:
<P>
<P><PRE>      SELECT DISTINCTROW [Order Details].OrderID, [Order
      Details].ProductID, [Order Details].UnitPrice, [Order
      Details].Quantity, [Order Details].Quantity FROM [Order Details]
      WHERE ((([Order Details].OrderID)&gt;10500) AND (([Order
      Details].ProductID)=31 Or ([Order Details].ProductID)=12 Or ([Order
      Details].ProductID)=56 Or ([Order Details].ProductID)=14) AND
      (([Order Details].UnitPrice)&gt;5) AND (([Order Details].Quantity)&gt;5))
      OR ((([Order Details].UnitPrice)&gt;100)) OR ((([Order
      Details].Quantity)&gt;120)) OR ((([Order Details].Quantity)&gt;100));
</PRE>
<P><LI>Close and save the query as TestQuery.

<P><LI>Create a new form based on the Order Details table using the AutoForm:
   Columnar Wizard.

<P><LI>Open the new form in Design view.

<P><LI>Create a command button, and then view its properties.

<P><LI>Set the button's OnClick property to the following event procedure
   (using the Code builder):
<P>
<P><PRE>      DoCmd.ApplyFilter "TestQuery"
</PRE>
<P><LI>Switch the form to Form view. Note that there are 2155 records in the
   form.

<P><LI>Click the command button to apply the filter. Note that no filter was
   applied; there are still 2155 records in the form.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about the SQL WHERE clause, search on the phrase
"where condition," and then view "WHERE Clause (SQL)" using the
Answer Wizard from the Microsoft Access for Windows 95 Help menu.
 
<PRE>Keywords          : kbusage
Version           : 7.0 97
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbbug
Solution Type     : kbfix</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 28, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
