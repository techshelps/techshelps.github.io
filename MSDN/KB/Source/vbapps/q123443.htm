

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL5: Visual Basic Examples Using DDE with Program Manager </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q123443">
<META NAME="KBModify" CONTENT="1997/09/02">
<META NAME="KBCreate" CONTENT="1994/12/01">
<META NAME="Keywords" CONTENT="EvnOs IntpDde kbenv kbinterop kbprg PgmHowTo kbcode kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  The following information includes Visual Basic procedures that you can use in Microsoft Excel to return information from Program Manager and to perform actions on Program Manager groups and items using Dynamic Data Exchange (DDE) commands.  These ...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QABO,QBS0,QAH4,QBVP,QAUD,QDNM,QAH5,QAGU,QAPF,QAGB,QAFF,QANF,QBW1,QA4Q,QAZ2 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL5: Visual Basic Examples Using DDE with Program Manager</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 2, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q123443</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
5.00 5.00c
WINDOWS
kbprg kbcode
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, versions 5.0, 5.0c
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The following information includes Visual Basic procedures that you can use
in Microsoft Excel to return information from Program Manager and to
perform actions on Program Manager groups and items using Dynamic Data
Exchange (DDE) commands.
<P>
These examples demonstrate how to do the following:

<UL><LI>Create a New Group
<LI>Delete an Existing Group
<LI>Add a New Item
<LI>Maximize, Minimize or Restore a Group Window
<LI>Return a List of Groups
<P>
</UL><h2>MORE INFORMATION</h2>
 
<P>
The application name for Program Manager is "ProgMan." The topic available
in the Program Manager application is also "ProgMan." The following is a
list of commands available in the ProgMan topic that you can use in a DDE
conversation with Program Manager:
<P>
<PRE>CreateGroup(GroupName,GroupPath)   Creates a new group at Program Manager
                                   or activates the window of an existing
                                   group.

DeleteGroup(GroupName)             Deletes an existing program group.

AddItem(CmdLine,Name,IconPath,     Creates a new program item (icon) in the
        IconIndex,xPos,yPos,       active group.
        DefDir,HotKey,,fMinimize)

ShowGroup(GroupName,ShowCommand)   Maximizes, minimizes, or restores a
                                   group window.

</PRE>You can also request the "progman" item to return a list of your Program
Manager groups.
<P>
<P><h2>EXAMPLES</h2>
 
<P>
<P><h3>Create New Group</h3>
 
<P>
The following example creates a group called "Excel Files" or activates an
existing group named "Excel Files" in Program Manager.
<P>
<PRE>   Sub CreateGroup()
      Dim Chan As Integer
      Chan = DDEInitiate("Progman", "progman")
      DDEExecute Chan, "[CreateGroup(Excel Files)]"

      ' Terminate channel
      DDETerminate Chan
   End Sub

</PRE><h3>Delete Existing Group</h3>
 
<P>
The following example deletes the group "Excel Files." Note that the group
is deleted even if it contains items.
<P>
<PRE>   Sub DeleteGroup()

      Dim Chan As Integer
      Chan = DDEInitiate("Progman", "progman")
      DDEExecute Chan, "[DeleteGroup(Excel Files)]"

      ' Terminate channel
      DDETerminate Chan
   End Sub

</PRE><h3>Add New Item</h3>
 
<P>
The following example prompts you to enter a path to the item
(c:\excel\excel.exe) and a name for the item (Excel), and then adds the
item to the active group:
<P>
<PRE>   Sub AddItem()
      Dim qt As String
      Dim Chan As Integer
      Dim path As String, item As String

      ' Set qt equal to quotation mark character
      qt = Chr(34)

      Chan = DDEInitiate("Progman", "progman")
      path = InputBox("Enter path for item")
      item = InputBox("Enter name for item")

      DDEExecute Chan, _
         "[AddItem(" &amp; qt &amp; path &amp; qt &amp; "," &amp; qt &amp; item &amp; qt &amp; ")]"

      ' Terminate channel
      DDETerminate Chan
   End Sub

</PRE><h3>Maximize, Minimize or Restore Group Window</h3>
 
<P>
<PRE>   Sub GroupWindow()
      Dim Chan As Integer
      Chan = DDEInitiate("Progman", "progman")
      ' Maximize Excel Files group
      DDEExecute Chan, "[ShowGroup(Excel Files,3)]"
      ' Minimize Excel Files group
      DDEExecute Chan, "[ShowGroup(Excel Files,2)]"
      ' Restore Excel Files group
      DDEExecute Chan, "[ShowGroup(Excel Files,1)]"

      ' Terminate channel
      DDETerminate Chan
   End Sub

</PRE><h3>Return List of Groups</h3>
 
<P>
The following example returns a list of your Program Manager groups to
Sheet1 in the active workbook:
<P>
Dim Chan as Integer
Dim listing as Variant
Dim i as Integer
<P>
<PRE>   Sub ListGroups
      Chan = DDEInitiate("Progman","Progman")
      listing = DDERequest(Chan,"Progman")

      ' Terminate channel
      DDETerminate Chan

      i=1
      While i &lt;= UBound(listing)
         Sheets("sheet1").Cells(i,1).FormulaR1C1=listing(i,1)
         i=i+1
      Wend

   End Sub

</PRE>Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft support engineers can help explain the
functionality of a particular macro, they will not modify these examples to
provide added functionality, nor will they help you construct macros to
meet your specific needs. If you have limited programming experience, you
may want to consult one of the Microsoft Solution Providers. Solution
Providers offer a wide range of fee-based services, including creating
custom macros. For more information about Microsoft Solution Providers,
call Microsoft Customer Information Service at (800) 426-9400.
<P>
For additional information, please see the following article(s) in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../WIN3X/Q72907.htm">Q72907</A></B>
   TITLE     : Manipulating Program Manager Groups Using DDE Interface

</PRE><h2>REFERENCES</h2>
 
<P>
For more information about the DDEExecute Method, the DDEInitiate Method,
or the DDETerminate Method, choose the Search button in the Visual Basic
Reference and type:
<P>
<PRE>   DDE: channels
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 5.00 5.00c howto vbappcode<BR>
Keywords          : EvnOs IntpDde kbenv kbinterop kbprg PgmHowTo kbcode kbprg<BR>
Version           : 5.00 5.00c<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 2, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
