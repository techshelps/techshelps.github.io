

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL5: Sending Mail from MS Excel Using VBAMAPI.DLL (Part 2) </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q125853">
<META NAME="KBModify" CONTENT="1997/09/02">
<META NAME="KBCreate" CONTENT="1995/02/07">
<META NAME="Keywords" CONTENT="IntpMail kbinterop kbprg PgmApi PgmHowTo kbcode kbfile kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel, you can use the SendMail method in a Visual Basic macro for electronic mail (E-mail) functionality. However, for more complete control of mail, including message content, subject, return receipt, and recipients, you must use the...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAYC,QBVP,QBS0,QAUD,QAUJ,QBV0,QA6A,QA4S,QA4R,QAMB,QANE,QAH4,QABI,QBCF,QABH V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL5: Sending Mail from MS Excel Using VBAMAPI.DLL (Part 2)</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 2, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q125853</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, versions 5.0, 5.0c
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Excel, you can use the SendMail method in a Visual Basic macro
for electronic mail (E-mail) functionality. However, for more complete
control of mail, including message content, subject, return receipt, and
recipients, you must use the VBAMAPI.DLL file, which currently ships with
Microsoft Project version 4.0 for Windows (this file is located on Setup
Disk 2).
<P>
The following file(s) are available for download from the Microsoft
Software Library:
<P>
<PRE> ~ <A HREF="http://support.microsoft.com/download/support/mslfiles/VBAMAPI.EXE">VBAMAPI.EXE</A> <I>(size: 69050 bytes)</I> 

</PRE>For more information about downloading files from the Microsoft Software
Library, please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../zMiscellaneous/Q119591.htm">Q119591</A></B>
   TITLE     : How to Obtain Microsoft Support Files from Online Services

</PRE>Note that if you use VBAMAPI.DLL with Microsoft Excel, use the built-in
MailLogon and MailLogoff methods.
<P>
Once you've downloaded the file, copy it to your Windows SYSTEM directory.
<P>
The information in the "More Information" section of this article contains
the Declare functions and data type definitions necessary to use
VBAMAPI.DLL with Microsoft Excel.
<P>
For more information about using MAPI with Microsoft Excel for Windows,
please see the following articles:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q125854.htm">Q125854</A></B>
   TITLE     : XL: Sending Mail from MS Excel Using VBAMAPI.DLL (Part 1)

   ARTICLE-ID: <B><A HREF="../vbapps/Q123185.htm">Q123185</A></B>
   TITLE     : GP Fault Using MAPI.DLL Calls in Visual Basic Procedure

</PRE><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft support engineers can help explain the
functionality of a particular macro, they will not modify these examples to
provide added functionality, nor will they help you construct macros to
meet your specific needs. If you have limited programming experience, you
may want to consult one of the Microsoft Solution Providers. Solution
Providers offer a wide range of fee-based services, including creating
custom macros. For more information about Microsoft Solution Providers,
call Microsoft Customer Information Service at (800) 426-9400.
<P>
The following code examples demonstrate how to:

<UL><LI>Check for an existing mail session.

<LI>Ask for an E-mail name, verify that the E-mail name is valid, and
   display a  mail message with the Address, Subject Line, and Body of the
   mail  message filled in.
<P>
</UL><h3>Checking for an Existing Mail Session</h3>
 
<P>
The following function checks if there is a current mail session running.
If there is no current session of mail, the function starts a new mail
session and returns the current session number.
<P>
Option Explicit
<PRE>'---------------------------------------------------------------------
' Function:     CheckLogon
' Arguments:    None
' Returns:      MAPI session handle
' Comments:     Forces a Logon if necessary, then converts the MS Excel
'               MS Excel hex-based session handle to a MAPI-usable Long
'---------------------------------------------------------------------

</PRE>Function CheckLogon()
<PRE>'Application.MailSession will return the current mail session number
   If IsNull(Application.MailSession) Then
'If this is NULL Application.MailLogon will establish a mail session
        Application.MailLogon
    End If
    CheckLogon = CLng("&amp;h" &amp; Application.MailSession)
</PRE>End Function
<P>
Prompting the User for an E-mail Name,
<P><h3>Verifying the Name, and Displaying a Mail Message</h3>
 
<P>
The following code prompts the user for an E-mail name, checks for or
starts an instance of mail, verifies the E-mail, and brings up a mail
message with the To, Subject, and Body text fields filled in and ready to
send.
<P>
<PRE>Sub Mail_Test()
    Dim lresult As Long
    Dim msg As MapiMessage
    Dim lSess As Long
    Dim r As MapiRecip
    Dim sName As String
    Dim test As MapiFile
    'Calls CheckLogon to return the number of the mail session
    lSess = CheckLogon()
    'Prompts the user for an E-mail Name
    sName = InputBox(prompt:="Your email name please",
</PRE>Title:="VBAMAPI Example", default:="joeuser")
<PRE>    'Ends the macro if Cancel or no name is entered
    If sName = "" Then End
    'Verifies the E-mail name is a valid name
    If MAPIResolveName(lSess, 0, sName, 0, 0, r) &lt;&gt; SUCCESS_SUCCESS Then
        MsgBox "Could not resolve name '" &amp; sName &amp; "'"
        Exit Sub
    End If
    'msg.Subject is the text which will show up on the Subject line
    'of the Mail Message
    msg.Subject = "This is the Subject Line"
    'msg.NoteText is the text which will show up in the Body
    'of the Mail Message
    msg.NoteText = "This is Sample Text."
    'msg.RecipCount is the total number of Mail Messages to send
    msg.RecipCount = 1
    lresult = MAPISendMail(lSess, 0, msg, r, test, MAPI_DIALOG, 0)
End Sub
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 5.00 5.00a 5.00c mail mapi vbamapi<BR>
Keywords          : IntpMail kbinterop kbprg PgmApi PgmHowTo kbcode kbfile kbprg<BR>
Version           : 5.00 5.00c<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 2, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
