

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PPT: Sample Code to Copy Slides to Another Presentation </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q161661">
<META NAME="KBModify" CONTENT="1998/03/13">
<META NAME="KBCreate" CONTENT="1997/01/02">
<META NAME="Keywords" CONTENT="kbcode kbmacro kbprg kbdta kbdtacode kbpptvba">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  This article contains a sample Microsoft Visual Basic for Applications macro (Sub procedure) that copies all slides, as PowerPoint objects, from your active presentation to another presentation. If you have one presentation open, the macro creates ...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAJM,QBS0,QDKP,QBWS,QAH4,QBVQ,QAKE,QAKR,QAHE,QAK6,QADX,QADK,QA5F,QA9N,QAX6 P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PPT: Sample Code to Copy Slides to Another Presentation</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 13, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q161661</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft PowerPoint 98 Macintosh Edition
<LI>Microsoft PowerPoint 97 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article contains a sample Microsoft Visual Basic for Applications
macro (Sub procedure) that copies all slides, as PowerPoint objects, from
your active presentation to another presentation. If you have one
presentation open, the macro creates and then adds the slides to the new
presentation. If you have two presentations open, the macro appends the
slides to the end of the second presentation.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE><h3>Sample Visual Basic Procedure</h3>
 
<P>
<PRE>   Sub SlideCopy()

      ' Variable declarations.
      Dim SourceView, answer As Integer
      Dim SourceSlides, NumPres, x As Long

      ' Count the open presentations.
      NumPres = Presentations.Count

      ' Check to see whether more than one presentation is open.
      If NumPres = 0 Then
         ' If no presentations are open, stop the macro.
         MsgBox "You must have at least one presentation open", _
            vbCritical + vbOKOnly, "No Presentations Open"
         End
      End If

      ' If more than two presentations are open, quit the macro.
      If NumPres &gt; 2 Then
         MsgBox "To many open presentations. Only two presentations" _
            &amp; " may be open." &amp; Chr(13) &amp; "The active presentation is " _
            &amp; "the source and other presentation is the destination.", _
            vbOKOnly + vbCritical, "To Many Open Presentations"
         End
      End If

      ' Stores the current view of the source presentation.
      SourceView = ActiveWindow.ViewType

      ' Count the number of slides in source presentation.
      SourceSlides = ActivePresentation.Slides.Count

      ' See whether only one presentation is open.
      If NumPres = 1 Then
         answer = MsgBox("Only one presentation is open. " &amp; _
            "This presentation will be used as the source. " &amp; _
            Chr(13) &amp; "Press YES to create a new presentation as " _
            &amp; "the destination.", vbYesNo + vbQuestion, "Only One " _
            &amp; "Presentation Open")

         ' If no selected in the message box, quit the macro.
         If answer = vbNo Then
            End
         End If

         ' Create a new presentation for the designation.
         Presentations.Add

         ' Set up the slide size to be the same as the source.
         With ActivePresentation.PageSetup
            .SlideHeight = Presentations(1).PageSetup.SlideHeight
            .SlideWidth = Presentations(1).PageSetup.SlideWidth
         End With

         ' Switch the destination presentation to slide view.
         If ActiveWindow.ViewType &lt;&gt; ppViewSlide Then
            ActiveWindow.ViewType = ppViewSlide
         End If

         ' Switch to the source presentation.
         Presentations(1).Windows(1).Activate

      End If

      ' Change the view to slide sorter if not there already.
      If ActiveWindow.ViewType &lt;&gt; ppViewSlideSorter Then
         ActiveWindow.ViewType = ppViewSlideSorter
      End If

      ' Loop through all the slides and copy them to destination one by
      ' one.
      For x = 1 To SourceSlides
         ' Select the first slide in the presentation and copy it.
         ActivePresentation.Slides.Range(Array(x)).Select
         ActiveWindow.Selection.Copy

         ' Switch to destination presentation.
         Presentations(2).Windows(1).Activate

         ' Create a new slide.
         ActivePresentation.Slides.Add _
            ActivePresentation.Slides.Count + 1, ppLayoutBlank

         ' Make sure the new presentation is slide view.
         If ActiveWindow.ViewType &lt;&gt; ppViewSlide Then
            ActiveWindow.ViewType = ppViewSlide
         End If

         ' Switch to the proper slide.
         ActiveWindow.View.GotoSlide Index:=ActivePresentation.Slides.Count

         ' Paste the slide.
         ActiveWindow.View.Paste

         ' Adjust the size of the pasted object.
         With ActiveWindow.Selection.ShapeRange
            .Left = 0
            .Top = 0
            .Width = ActivePresentation.PageSetup.SlideWidth
            .Height = ActivePresentation.PageSetup.SlideHeight
         End With

         ' Unselect the object.
         ActiveWindow.Selection.Unselect

         ' Switch to source.
         Presentations(1).Windows(1).Activate

      Next x

      ' Restore the current view to source.
      ActiveWindow.ViewType = SourceView

   End Sub

</PRE><h2>REFERENCES</h2>
 
<P>
For more information about creating Visual Basic for Applications macros,
click the Office Assistant in Microsoft PowerPoint, type "how to create a
macro," click Search, and then click to view "Create a macro in Visual
Basic Editor."
<P>
For more information about running Visual Basic for Applications macros,
click the Office Assistant in Microsoft PowerPoint, type "how to run a
macro," click Search, and then click to view "Run a macro."
<P>
NOTE: If the Assistant is hidden, click the Office Assistant button on the
Standard toolbar. If the Assistant is not able to answer your query, please
see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q176476.htm">Q176476</A></B>
   TITLE     : OFF: Office Assistant Not Answering Visual Basic Questions

</PRE>For more information about getting help with Visual Basic for Applications,
please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q163435.htm">Q163435</A></B>
   TITLE     : VBA: Programming Resources for Visual Basic for
               Applications
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 97 8.00 kbmacro ppt8 ppt8.0 vba vbe vb macppt<BR>
mac_ppt ppt98 98 powerpt<BR>
Keywords          : kbcode kbmacro kbprg kbdta kbdtacode kbpptvba<BR>
Version           : WINDOWS:97; MACINTOSH:98<BR>
Platform          : MACINTOSH WINDOWS<BR>
Hardware          : MAC x86<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 13, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
