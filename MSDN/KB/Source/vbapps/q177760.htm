

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>VBA: How to Run Macros in Other Office Programs </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q177760">
<META NAME="KBModify" CONTENT="1998/03/13">
<META NAME="KBCreate" CONTENT="1997/12/06">
<META NAME="Keywords" CONTENT="kbcode kbmacro kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  You can use Automation to run a Microsoft Visual Basic for Applications Sub procedure that exists in a document of another Microsoft Office program. This article shows you how to run Sub procedures from four of the Microsoft Office programs that su...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QBS0,QBVP,QAFF,QA1S,QAIH,QDN9,QBVQ,QA5F,QAB9,QDKX,QBWS,QAGI,QAMA,QDH3 P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>VBA: How to Run Macros in Other Office Programs</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 13, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q177760</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic for Applications version 5.0
<LI>Microsoft Excel 97 for Windows
<LI>Microsoft Word 97 for Windows
<LI>Microsoft Access 97
<LI>Microsoft PowerPoint 97 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
You can use Automation to run a Microsoft Visual Basic for Applications Sub
procedure that exists in a document of another Microsoft Office program.
This article shows you how to run Sub procedures from four of the Microsoft
Office programs that support Visual Basic (Microsoft Access, Microsoft
Excel, Microsoft PowerPoint, and Microsoft Word). Although some of these
programs previously had their own macro languages (Excel 4.0 Macro
Language, Access Basic, WordBasic), this article only discusses running
Visual Basic Sub procedures.
<P>
NOTE: A Sub procedure that does not accept any arguments is also known as a
macro in Microsoft Excel, Microsoft PowerPoint, and Microsoft Word.
Microsoft Access also has macros, but they are not equivalent to a Visual
Basic Sub procedure.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>The products listed at the beginning of this article all have very similar
means of accessing a Sub procedure stored in their respective file formats.
The following Sub procedures should work in any of the Microsoft Office
programs. Any differences are noted.
<P>
To use any of these Sub procedures, you must place them in a module. Follow
these steps to insert a module for the appropriate program.
<P>
<P><h3>Inserting a Module in Excel, PowerPoint or Word</h3>
 

<OL><P><LI>Press ALT+F11 to start the Visual Basic Editor.

<P><LI>On the Insert menu, click Module.

<P><LI>Type the appropriate sample code (found later in this section) in the
   module.
<P>
</OL><h3>Inserting a Module in Microsoft Access</h3>
 

<OL><P><LI>In the database window, click the Modules tab.

<P><LI>Click New.

<P><LI>Type the appropriate sample code (found later in this section) in the
   module.
<P>
<PRE>Sub Procedure to Run an Existing Microsoft Access Macro
</PRE></OL> 
<P>
The following Sub procedure assumes that the database AccessAutomation.mdb
contains a macro called "AccessMacro."
<P>
<PRE>   Sub AccessTest1()
      Dim A as Object

      Set A = CreateObject("Access.Application")
      A.Visible = False

      A.OpenCurrentDatabase("C:\My Documents\AccessAutomation.mdb")

      A.Run "AccessMacro"

   End Sub

</PRE>There are a couple of things to note when calling a Microsoft Access macro.
First, when you use the CreateObject function to create an instance of
Microsoft Access, it is always created as visible. All of the other
Microsoft Office programs are created with the Visible property set to
False by default.
<P>
Also, note that if a Microsoft Access Sub procedure displays a modal dialog
box, such as a message box, Microsoft Access has to be activated manually
using the Microsoft Windows 95 taskbar to view the dialog box. If the code
does not display a modal dialog box, manual activation is not necessary.
There is no way to do this activation programmatically with Automation. All
of the other programs listed at the beginning of this article display
dialog boxes without being activated.
<P>
<PRE>Sub Procedure to Run an Existing Microsoft Excel Macro
</PRE> 
<P>
The following Sub procedure assumes that the workbook ExcelFile.xls
contains a macro called "TestMacro."
<P>
<PRE>   Sub XLTest()
      Dim XL as Object

      Set XL = CreateObject("Excel.Application")

      XL.Workbooks.Open "C:\My Documents\ExcelFile.xls"

      ' If there is more than one macro called TestMacro,
      ' the module name would be required as in
      '
      ' XL.Run "Module1.TestMacro"
      '
      ' to differentiate which routine is being called.
      '
      XL.Run "TestMacro"

   End Sub

Sub Procedure to Run an Existing Microsoft PowerPoint Macro
</PRE> 
<P>
The following Sub procedure assumes that the presentation PPTAutomation.ppt
contains a macro called "AutomationTest."
<P>
<PRE>   Sub PPTTest()
      Dim PPT as Object

      Set PPT = CreateObject("PowerPoint.Application")

      PPT.Presentations.Open "C:\My Documents\PPTAutomation.ppt", , ,False

      ' Note that the file name and the module
      ' name are required to path the macro correctly.
      PPT.Run "PPTAutomation.ppt!Module1.AutomationTest"

   End Sub

Sub Procedure to Run an Existing Microsoft Word Macro
</PRE> 
<P>
The following Sub procedure assumes that the document WordDoc.Doc contains
a macro called "WordMacro."
<P>
<PRE>   Sub WDTest()
      Dim WD as Object

      Set WD = CreateObject("Word.Application")

      WD.Documents.Open "C:\My Documents\WordDoc.Doc"

      ' Note that the project name and module name are required to
      ' path the macro correctly.
      WD.Run "Project.Module1.WordMacro"

   End Sub

</PRE><h2>REFERENCES</h2>
 
<P>
For additional information, please see the following articles in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q165518.htm">Q165518</A></B>
   TITLE     : Calling Macros Using OLE from MS Visual Basic for
               Applicatons

   ARTICLE-ID: <B><A HREF="../VBWIN/Q153307.htm">Q153307</A></B>
   TITLE     : HOWTO: Call Microsoft Excel Macros that Take Parameters

   ARTICLE-ID: <B><A HREF="../vbapps/Q128405.htm">Q128405</A></B>
   TITLE     : XL: How to Run a WordBasic Macro from an MS Excel Macro

</PRE>For more information about getting help with Visual Basic for Applications,
please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q163435.htm">Q163435</A></B>
   TITLE     : VBA: Programming Resources for Visual Basic for
               Applications
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: vba<BR>
Keywords          : kbcode kbmacro kbprg<BR>
Version           : WINDOWS:5.0,97<BR>
Platform          : WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 13, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
