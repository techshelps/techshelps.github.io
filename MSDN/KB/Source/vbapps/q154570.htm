

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: Running a Microsoft Word Macro Using Automation </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q154570">
<META NAME="KBModify" CONTENT="1997/08/28">
<META NAME="KBCreate" CONTENT="1996/08/08">
<META NAME="Keywords" CONTENT="AutoGnrl kbinterop PgmHowTo IntpOleA">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  This article demonstrates how to use Automation to run a Microsoft Word 7.0 macro.  For more information about running a Microsoft Word 97 macro through Automation, please s...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAIH,QAH4,QA1S,QBWS,QAPN,QAW6,QDN9,QA2K,QAUJ,QBS0,QAB9 P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: Running a Microsoft Word Macro Using Automation</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 28, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q154570</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 7.0, 97
<LI>Microsoft Word for Windows 95 version 7.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
This article demonstrates how to use Automation to run a Microsoft Word
7.0 macro.
<P>
For more information about running a Microsoft Word 97 macro through
Automation, please see the following article in the Microsoft Knowledge
Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q160294.htm">Q160294</A></B>
   TITLE     : ACC: Running a Microsoft Word 97 Macro Using Automation

</PRE>This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Through Automation, it is possible to run a Microsoft Word macro. This
example uses the WordBasic ToolsMacro statement in Microsoft Word.
<P>
<P><h3>Example - Run a Microsoft Word 7.0 Macro</h3>
 
<P>
The following example opens a Microsoft Word document called Wordtest.doc
and runs a macro, Macro1, which currently exists in the default template.
The following code examples assumes that you have created a document named
WordTest.Doc in the C:\My Documents folder and that you have created a
macro named Macro1 in the default template.
<P>
To run this code:

<OL><P><LI>Open Microsoft Word 7.0. When you run the code from Microsoft Access,
   Microsoft Word remains open.

<P><LI>Open a Microsoft Access database and create a new module.

<P><LI>Type the following procedure:
<P>
<P><PRE>      Function RunMacro()
<PRE></PRE>         Dim WordObj as Object
         Set WordObj = CreateObject("Word.Basic")
         WordObj.FileOpen "C:\My Documents\Wordtest.doc"
         WordObj.ToolsMacro "Macro1", 1
      End Function

</PRE><P><LI>To run the function, open the Debug Window, type the following line,
   and then press ENTER:
<P>
<P><PRE>      ? RunMacro()
</PRE><P>
</OL><h3>Example - Run a Microsoft Word 7.0 Macro in a Form's Object Frame</h3>
 
<P>
This procedure activates an embedded Microsoft Word object on a form and
runs a macro named Macro1 which currently exists in the Microsoft Word
default template. The following code assumes you have created a document
named WordTest.Doc in the C:\My Documents folder and that you have created
a macro named Macro1 in the Microsoft Word default template.
<P>
To run this code:

<OL><P><LI>Open a Microsoft Access database and create a new blank form.

<P><LI>In Design view, create an unbound object frame on the form. In the
   Insert Object dialog box, click the Create From File option and choose
   WordTest.Doc from your C:\My Documents folder.

<P><LI>Click OK to close the Insert Object dialog box.

<P><LI>Display the property sheet for the object frame control. Set the Name
   property to OLEObj.

<P><LI>Add a command button to the form and set its Name property to RunMacro.

<P><LI>Type the following function for the OnClick event procedure of the
   command button:
<P>
<P><PRE>      Private Sub RunMacro_Click()
<PRE></PRE>         Dim WordObj As Object
         Me![OLEObj].Verb = acOLEVerbOpen    ' Tells Microsoft Access to
                                             ' open the application.
         Me![OLEObj].Action = acOLEActivate  ' Activates the application.
         Set WordObj = Me![OLEObj].Object.Application.WordBasic
         WordObj.ToolsMacro "Macro1", 1
         WordObj.FileClose 2
      End Sub

</PRE><P><LI>Open the form in Form view and click the command button. Microsoft
   Word becomes the active application, runs the macro, and then returns
   to the form.
<P>
</OL>NOTE: In both examples, when the Automation object variable goes out of
scope, the instance of Microsoft Word is unloaded, unless the object was
created from a previous instance (already open).
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about using Automation, search the Help Index for
"Automation," or ask the Microsoft Access 97 Office Assistant.
 
<PRE>Keywords          : AutoGnrl kbinterop PgmHowTo IntpOleA
Version           : 7.0 97
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 28, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
