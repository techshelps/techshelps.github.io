

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Sample Macro That Converts the Default Chart to Microsoft Excel </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q165872">
<META NAME="KBModify" CONTENT="1998/03/13">
<META NAME="KBCreate" CONTENT="1997/03/26">
<META NAME="Keywords" CONTENT="kbcode kbinterop kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  This article includes a sample Microsoft Visual Basic for Applications macro that converts the default chart in a PowerPoint 97 slide to a Microsoft Excel 97 chart. The macro creates a new Microsoft Excel workbook, and then transfers the chart and ...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QAH4,QBS0,QBWS,QBVQ,QDNX,QAW6,QAPN,QAKE,QABA,QDKP,QAQG,QBVV,QAPF,QAH6 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Sample Macro That Converts the Default Chart to Microsoft Excel</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 13, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q165872</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:
<P>
<PRE>   - Microsoft Excel 97 for Windows
   - Microsoft Graph 97 for Windows
   - Microsoft PowerPoint 97 for Windows
</PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article includes a sample Microsoft Visual Basic for Applications
macro that converts the default chart in a PowerPoint 97 slide to a
Microsoft Excel 97 chart. The macro creates a new Microsoft Excel workbook,
and then transfers the chart and datasheet to the first worksheet in the
workbook.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>This macro requires that you select the default chart on a PowerPoint 97
slide before you run the macro.
<P>
<P><h3>Selecting the Default Chart</h3>
 
<P>
To create and select the default chart, use the following steps:

<OL><P><LI>Start Microsoft PowerPoint 97 and create a blank slide.

<P><LI>To create the default chart on the slide, click Chart on the Insert
   menu.
<P>
   The default chart appears on the slide. In Visual Basic for
   Applications, this chart is the Graph object.

<P><LI>Switch to PowerPoint by clicking outside the chart.

<P><LI>Click the chart once to select it.
<P>
</OL><h3>Sample Macro</h3>
 
<P>
<PRE>Sub ConvertGraphToExcel()

   ' Used for error trapping.
   On Error Resume Next

   ' Clear the error object.
   Err.Clear

   ' Holds a reference to an object.
   Dim oGraph As Object

   ' Check whether the selection is a Graph 8 object.
   With ActiveWindow.Selection.ShapeRange(1).OLEFormat

      If Err.Number &lt;&gt; 0 Then

         ' A run-time error is generated if the selection is not a chart.
         ' This code exits the macro if the selection is not a chart.
         MsgBox "Select one graph and run the macro again.", vbExclamation

         ' Stop the macro.
         End
      Else

         If .ProgID &lt;&gt; "MSGraph.Chart.8" Then
            ' A run-time error is generated if the selection is not a
            ' chart.
            ' This code exits the macro if the selection is not a chart.
            MsgBox "Select one graph and run the macro again.", _
            vbExclamation

            ' Stop the macro.
            End
         End If
      End If
   End With

   ' Reference the Graph object.
   Set oGraph = ActiveWindow.Selection.ShapeRange(1).OLEFormat.Object

   ' Call the CreateExcelChart procedure and pass a reference to the
   ' Graph 8 object.
   CreateExcelChart oGraph

End Sub

Sub CreateExcelChart(oChart As Object)

   On Error Resume Next

   Dim oExcel As Object
   Dim i As Long, j As Long

   ' Clear the Err object.
   Err.Clear

   ' Reference the Microsoft Excel object model.
   Set oExcel = GetObject(, "Excel.Application.8")
   If Err.Number &lt;&gt; 0 Then

      ' Clear the Err object.
      Err.Clear
      Set oExcel = CreateObject("Excel.Application.8")

      ' Check whether Microsoft Excel can be started.
      If Err.Number &lt;&gt; 0 Then
         MsgBox "Unable to start Excel 97. Try starting Excel" _
            &amp; " and run the macro again.", vbExclamation

         ' Stop the macro.
         End
      End If

      ' Make Microsoft Excel visible.
      oExcel.Visible = True

   End If

   ' Create a new workbook.
   oExcel.Workbooks.Add

   ' Transfer the data in the Graph datasheet to
   For i = 1 To 4
       For j = 1 To 5
         oExcel.Worksheets(1).Cells(j, i).Value = _
            oChart.Application.DataSheet.Cells(i, j).Value
       Next j
   Next i

   'Add a chart to the Excel Workbook.
   oExcel.Charts.Add

   'Set up the chart.
   With oExcel.ActiveChart
      .ChartType = oChart.ChartType
      .Elevation = oChart.Elevation
      .Perspective = oChart.Perspective
      .Rotation = oChart.Rotation
      .RightAngleAxes = oChart.RightAngleAxes
      .AutoScaling = oChart.AutoScaling

      ' Specify the data source.
      .SetSourceData Source:=oExcel.Sheets("Sheet1").Range("A1:D5")

      ' Place the chart on worksheet 1.
      .Location Where:=xlLocationAsObject, Name:="Sheet1"
   End With

End Sub

</PRE></OL>NOTE: To use this code with Graph objects that the are not the default
chart, modify the macro.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about creating Visual Basic for Applications macros,
click the Office Assistant in Microsoft PowerPoint, type "how to create a
macro," click Search, and then click to view "Create a macro in Visual
Basic Editor."
<P>
For more information about running Visual Basic for Applications macros,
click the Office Assistant in Microsoft PowerPoint, type "how to run a
macro," click Search, and then click to view "Run a macro."
<P>
NOTE: If the Assistant is hidden, click the Office Assistant button on the
Standard toolbar. If the Assistant is not able to answer your query, please
see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q176476.htm">Q176476</A></B>
   TITLE     : OFF: Office Assistant Not Answering Visual Basic Questions

</PRE>For more information about getting help with Visual Basic for Applications,
please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q163435.htm">Q163435</A></B>
   TITLE     : VBA: Programming Resources for Visual Basic for
               Applications
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 8.00 ppt8 vba vbe ppt97 xlvbainfo<BR>
Keywords          : kbcode kbinterop kbprg<BR>
Version           : WINDOWS:97; MACINTOSH:98<BR>
Platform          : MACINTOSH WINDOWS<BR>
Hardware          : MAC x86<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 13, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
