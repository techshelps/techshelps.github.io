

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL97: How to Display a UserForm Whose Name Is in a Variable </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q157609">
<META NAME="KBModify" CONTENT="1998/03/13">
<META NAME="KBCreate" CONTENT="1996/10/15">
<META NAME="Keywords" CONTENT="kbcode kberrmsg kbprg xlvbahowto xlvbainfo kbfaq">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel 97, it is possible for a Visual Basic for Applications macro to display a UserForm whose name is stored in a variable. This article explains how this may be done.  MORE INFORMATION  Microsoft provides examples of Visual Basic for...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QBE7,QBE6,QAYL,QBS0,QBVP,QAUJ,QAFF,QANE,QAB4,QAH8,QA5F,QAKC,QAPF,QAGX P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL97: How to Display a UserForm Whose Name Is in a Variable</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 13, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q157609</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Excel 97, it is possible for a Visual Basic for Applications
macro to display a UserForm whose name is stored in a variable. This
article explains how this may be done.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft support engineers can help explain the
functionality of a particular macro, they will not modify these examples to
provide added functionality, nor will they help you construct macros to
meet your specific needs. If you have limited programming experience, you
may want to consult one of the Microsoft Solution Providers. Solution
Providers offer a wide range of fee-based services, including creating
custom macros. For more information about Microsoft Solution Providers,
call Microsoft Customer Information Service at (800) 426-9400.
<P>
In all following examples, the UserForm being used is called "UserForm1"
(without the quotation marks).
<P>
In Microsoft Excel 97, if you want a Visual Basic macro to display
UserForm1, the line of code would be:
<P>
<PRE>   UserForm1.Show

</PRE>Although this syntax is very simple, it can cause problems if you want to
show a UserForm whose name is stored in a variable. For example, if the
variable "x" contains the name of the UserForm, you cannot simply use
<P>
<PRE>   Sub Test()
       x = "UserForm1"
       x.Show
   End Sub

</PRE>to display UserForm1.
<P>
If you run this macro, you receive the following error message:
<P>
<PRE>   Run-time error '424'
   Object Required

</PRE><h3>UserForm Name Stored in a Variable</h3>
 
<P>
If you want to show a UserForm whose name is stored in a variable, you can
use the following code:
<P>
<PRE>   Sub ShowUserForm1()
       X = "UserForm1"
       VBA.UserForms.Add(X).Show
   End Sub

</PRE><h3>User Prompted for UserForm Name</h3>
 
<P>
You can use the InputBox method to ask users what UserForm they want to
show:
<P>
<PRE>   Sub ShowUserForm2()
       X = InputBox("Show which UserForm?: ")
       VBA.UserForms.Add(X).Show
   End Sub

</PRE><h3>UserForm Name Retrieved from Worksheet Cell</h3>
 
<P>
You can read a value from a cell in a worksheet:
<P>
<PRE>   Sub ShowUserForm3()

       'Cell A1 of Sheet1 contains the name of the UserForm
       X = ActiveWorkbook.Sheets("Sheet1").Cells(1, 1).Value

       VBA.UserForms.Add(X).Show
   End Sub

</PRE><h3>Prompt for Index Number to Display UserForm</h3>
 
<P>
You can include a list of UserForm names in your macro and set the value of
"X" to the UserForm that corresponds to an index number.
<P>
NOTE: The following example assumes you have 3 UserForms in your project:
UserForm1, UserForm2, and UserForm3. You may want to insert some macro code
to make sure the value entered is between 1 and 3, inclusive.
<P>
<PRE>   Sub ShowUserForm4()

       'Display an input box asking for a number between 1 and 3 
       '(inclusive).
       Y = Application.InputBox (Prompt:="enter 1, 2, or 3", Type:=1)

       'Based on the number entered in the input box, X will be set to
       'the appropriate string.

       Select Case Y
           Case 1
               X = "UserForm1"
           Case 2
               X = "UserForm2"
           Case Else
               X = "UserForm3"
       End Select

       VBA.UserForms.Add(X).Show
   End Sub

</PRE>In each case above, the UserForm you want to show must exist. If it does
not exist in your project, you will receive the following error message
<P>
<PRE>   Run-time error '424'

</PRE>and your macro will halt.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: XL97 8.0 vbe user form<BR>
Keywords          : kbcode kberrmsg kbprg xlvbahowto xlvbainfo kbfaq<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 13, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
