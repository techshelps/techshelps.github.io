

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL97: How to Create a Template for a Toolbox Control </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q160473">
<META NAME="KBModify" CONTENT="1998/02/27">
<META NAME="KBCreate" CONTENT="1996/12/04">
<META NAME="Keywords" CONTENT="kbprg kbtool kbui xlvbahowto xlvbainfo xlui">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  The UserForm Toolbox in the Visual Basic Editor contains all the default controls that you can add to a UserForm. You can add other custom controls that are installed on your computer. For example, you can add a third type of control that is a  tem...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAMN,QA7O,QAOE,QAB5,QBS0,QA36,QAPN,QBVP,QBJZ,QAHV,QASR,QBWS,QAGB,QADZ,QAG4 P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL97: How to Create a Template for a Toolbox Control</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 27, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q160473</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The UserForm Toolbox in the Visual Basic Editor contains all the default
controls that you can add to a UserForm. You can add other custom controls
that are installed on your computer. For example, you can add a third type
of control that is a "template" for a control that you already customized.
<P>
This article describes the process for customizing an existing control and
adding a template of the control to the Toolbox.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
A template control retains all the properties you specify, which makes it
easier to use than resetting the properties of the same default control
each time you add the control to a UserForm.
<P>
<P><h3>Creating a Template Control</h3>
 
<P>
To create a template CommandButton control, and then add it to the Toolbox,
use the following steps:

<OL><P><LI>Close and save all workbooks in Microsoft Excel.

<P><LI>Open a new workbook.

<P><LI>Start the Visual Basic Editor (press ALT+F11).

<P><LI>In the Visual Basic Editor, click UserForm on the Insert menu.
<P>
</OL>This step adds a UserForm to the project. (The Toolbox also appears.)

<OL><P><LI>Add a CommandButton control to the UserForm.

<P><LI>If the Properties window is not visible, click Properties Window on
    the View menu.

<P><LI>In the Properties window, change the following properties for the
    CommandButton to the following values.
<P>
<PRE>       Property          Value
       -----------------------------------
       BackColor         Red
       Caption           My button
       ControlTipText    This is my button
       Font              Courier New

</PRE></OL>NOTE: If you fail to complete the next three steps, the template control
may not be added permanently to the Toolbox.

<OL><P><LI>On the File menu, click "Close and Return to Microsoft Excel".

<P><LI>Close and save the file.

<P><LI>Reopen the file and restart the Visual Basic Editor.

<P><LI>Drag the customized CommandButton that is on the UserForm onto the
    Controls tab of the Toolbox.
<P>
</OL>This step copies the CommandButton to the Toolbox, which adds a control 
that uses all the properties of the CommandButton you created in steps 5 
through 7.

<OL><P><LI>Click the control in the Toolbox that you created in Step 11, and then
<P><PRE>    add this control to the UserForm.
</PRE><P>
</OL>The control you added to the UserForm is a template of the control you
created earlier. Note that it is not necessary to add a default 
CommandButton, and then modify all the properties again.
<P>
NOTE: The Name properties for the CommandButtons you add to the UserForm
are CommandButton1 and CommandButton2. The Name property is the only
property that is different when you use the template control to add a
CommandButton to a UserForm.
<P>
<P><h3>Deleting a Template Control</h3>
 
<P>
To delete a template control from the Toolbox, use the following steps:

<OL><P><LI>Right-click the template control in the Toolbox.

<P><LI>Click Delete New CommandButton on the shortcut menu that appears.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about customizing toolbox controls, click the Index
tab in Visual Basic for Applications Help, type the following text
<P>
<PRE>   toolbox

</PRE></OL>and then double-click the selected text to go to the "Add a customized
control to the Toolbox" topic.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 97 XL97<BR>
Keywords          : kbprg kbtool kbui xlvbahowto xlvbainfo xlui<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 27, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
