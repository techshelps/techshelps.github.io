

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>"Invalid Data Format" Referencing File that Contains Procedure </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q114226">
<META NAME="KBModify" CONTENT="1997/07/29">
<META NAME="KBCreate" CONTENT="1994/04/27">
<META NAME="Keywords" CONTENT="kbcode kberrmsg kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In a Visual Basic module, when you use the Browse dialog box to reference a file created in another application that contains a Visual Basic procedure, you receive the following error message:     Invalid data format  CAUSE =====  This is by design...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAH4,QBVP,QA5F,QAMA,QAPN,QAB9,QAY2,QBXT,QBWS,QA5V,QAW6,QAIB V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>"Invalid Data Format" Referencing File that Contains Procedure</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q114226</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Programming System, Applications Edition,
   version 1.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
In a Visual Basic module, when you use the Browse dialog box to reference a
file created in another application that contains a Visual Basic procedure,
you receive the following error message:
<P>
<PRE>   Invalid data format

</PRE><h2>CAUSE</h2>
 
<P>
This is by design. You cannot, for example, reference a Microsoft Excel
workbook file that contains a Visual Basic module, from a Visual Basic
module in a Microsoft Project project file.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
To run a procedure from a Visual Basic module in one application (App1)
that is contained in a file created by another application (App2), you can
use the methods and properties of the object library exposed by the
application that was used to create the Visual Basic procedure (App2).
<P>
For example, to run a macro from a Visual Basic module in Microsoft Excel
that is contained in a Microsoft Project project file, do the following:

<OL><P><LI>In a new module in Microsoft Excel, choose References from the Tools
   menu.

<P><LI>From the Available References list, select the Microsoft Project 4.0
   Object Library check box, and choose OK.

<P><LI>In the new module, enter the following:
<P>
<PRE>   Sub Run_Proj_Macro()
      ' Dimension variable Proj as object type
      Dim Proj As Object
      ' Set Proj equal to Microsoft Project application object
      Set Proj = MSProject.Application
      ' Open project file that contains macro
      ' Note this command is not necessary to run a global macro
      Proj.FileOpen "C:\WINPROJ\PROJECT1.MPP"
      ' Run macro
      ' Replace MACRONAME with the name of the macro you want to run
      ' PROJECT1 and Module1 are not necessary but distinguish
      ' Between multiple macros with the same name
      Proj.Macro "[PROJECT1]Module1!MACRONAME"
      ' Quit Microsoft Project
      Proj.Quit
   End Sub

</PRE></OL>Microsoft provides examples of Visual Basic procedures for illustration
only, without warranty either expressed or implied, including but not
limited to the implied warranties of merchantability and/or fitness for a
particular purpose. This Visual Basic procedure is provided "as is" and
Microsoft does not guarantee that it can be used in all situations.
Microsoft does not support modifications of this procedure to suit customer
requirements for a particular purpose. Note that a line that is preceded by
an apostrophe introduces a comment in the code--comments are provided to
explain what the code is doing at a particular point in the procedure. Note
also that an underscore character (_) indicates that code continues from
one line to the next. You can type lines that contain this character as one
logical line or you can divide the lines of code and include the line
continuation character. For more information about Visual Basic for
Applications programming style, see the "Programming Style in This Manual"
section in the "Document Conventions" section of the Visual Basic "User's
Guide."
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
In a Visual Basic module in Microsoft Excel, you can use the Browse dialog
box to reference another workbook file (*.XLS) or an add-in file, (*.XLA)
that contains a Visual Basic procedure.
<P>
In a Visual Basic module in Microsoft Project, you can use the Browse
dialog box to reference another project file (*.MPP) that contains a Visual
Basic procedure.
<P>
You can reference a toolbar file, (*.TLB) or an object library file (*.OLB)
from a Visual Basic module in either Microsoft Excel or Microsoft Project.
 
<PRE>Keywords          : kbcode kberrmsg kbprg
Version           : 1.00
Platform          : WINDOWS</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
