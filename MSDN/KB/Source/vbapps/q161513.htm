

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: Macro to Add Labels to Points in an XY (Scatter) Chart </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q161513">
<META NAME="KBModify" CONTENT="1998/02/03">
<META NAME="KBCreate" CONTENT="1996/12/26">
<META NAME="Keywords" CONTENT="kbcode kbprg xlvbainfo xlchart PgmLoop">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel, there is no built-in command that automatically attaches text labels to data points in an xy (scatter) chart. However, you can create a Microsoft Visual Basic for Applications macro that does this.  This article contains a sampl...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QDNX,QAMB,QAH4,QAC2,QBWS,QBJZ,QBC9,QBC8,QANO,QAM9,QALX,QBS0,QASR,QAPF P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: Macro to Add Labels to Points in an XY (Scatter) Chart</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 3, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q161513</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
<LI>Microsoft Excel for Windows 95, versions 7.0, 7.0a
<LI>Microsoft Excel for Windows, versions 5.0, 5.0c
<LI>Microsoft Excel for the Macintosh, versions 5.0, 5.0a
<LI>Microsoft Excel 98 Macintosh Edition
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Excel, there is no built-in command that automatically
attaches text labels to data points in an xy (scatter) chart. However, you
can create a Microsoft Visual Basic for Applications macro that does this. 
This article contains a sample macro that performs this task.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE><h3>Sample Data</h3>
 
<P>
The code example in this article assumes that data and associated labels
are arranged on a worksheet in the following format:

<UL><LI>The first column contains the data labels.
<LI>The second column contains the x values for the xy (scatter) chart.
<LI>The third and subsequent columns contains the y values for the xy
   (scatter) chart.
<P>
</UL>NOTE: Although the example provided only contains one column of data for
y values, you can use more than one series of data.
<P>
To use the macros in this article, create a chart using the following data,
and then use the appropriate steps:
<P>
<PRE>   A1: Labels       B1: X Values   C1: Y Values
   A2: DataPoint1   B2: 2          C2: 5
   A3: DataPoint2   B3: 9          C3: 7
   A4: DataPoint3   B4: 5          C4: 3
   A5: DataPoint4   B5: 4          C5: 8
   A6: DataPoint5   B6: 1          C6: 4

</PRE>NOTE: The table should not contain empty columns, and the column that
contains the data labels should not be separated from the column that
contains the x values. The labels and values must be laid out EXACTLY in
the format described in this article. (The upper-left cell does not have to
be cell A1.)
<P>
<P><h3>Microsoft Excel 97 and Microsoft Excel 98</h3>
 
<P>
To attach text labels to data points in an xy (scatter) chart in Excel 97 
and Excel 98, follow these steps:

<OL><P><LI>On the worksheet that contains the sample data, select the cell range
    B1:C6, and then click Chart on the Insert menu.

<P><LI>In the "Chart Wizard - Step 1 of 4" dialog box, click the Standard 
    Types tab. Under Chart Type, click XY (Scatter), and then click Next.

<P><LI>In the "Chart Wizard - Step 2 of 4" dialog box, click the Data Range 
    tab. Under Series In, click Columns, and then click Next.

<P><LI>In the "Chart Wizard - Step 3 of 4" dialog box, click Next.

<P><LI>In the "Chart Wizard - Step 4 of 4" dialog box, click As New Sheet, and
    then click Finish.

<P><LI>Press ALT+F11 to start the Visual Basic Editor.

<P><LI>On the Insert menu, click Module. Type the sample code found in the     
    "Sample Visual Basic Code" section of this article.

<P><LI>Press ALT+Q to return to Microsoft Excel.

<P><LI>Switch to the chart sheet.

<P><LI>On the Tools menu, point to Macro, and then click Macros. Click the
    AttachLabelsToPoints macro, and then click Run to run the macro.
<P>
    The macro attaches the labels in cells A2:A6 to the data points on the
    chart.
<P>
</OL><h3>Microsoft Excel 5.0 or 7.0</h3>
 
<P>
To attach text labels to data points in an xy (scatter) chart in Microsoft
Excel 5.0 or 7.0, follow these steps:

<OL><P><LI>On the worksheet that contains the sample data, select the cell range
   B1:C6. On the Insert menu, point to Chart, and then click As New Sheet.

<P><LI>In the "Chart Wizard - Step 1 of 5" dialog box, click Next.

<P><LI>In the "Chart Wizard - Step 2 of 5" dialog box, click XY (Scatter), and
   then click Next.

<P><LI>In the "Chart Wizard - Step 3 of 5" dialog box, click Next.

<P><LI>In the "Chart Wizard - Step 4 of 5" dialog box, select the following
   options:
<P>
<P><PRE>      Data Series in: Columns
      Use First 1 Column(s) for X Data
      Use First 1 Row(s) for Legend Text
</PRE><P>
   and then click Finish.

<P><LI>On the Insert menu, point to Macro, and then click Module. In the 
   module, type the macro in the "Sample Visual Basic Code" section of this 
   article.

<P><LI>Switch to the chart sheet.

<P><LI>On the Tools menu, click Macro. Click the AttachLabelsToPoints macro, 
   and then click Run to run the macro.
<P>
   The macro attaches the labels in cells A2:A6 to the data points on the
   chart.
<P>
</OL><h3>Sample Visual Basic Code</h3>
 
<P>
<PRE>   Sub AttachLabelsToPoints()

      ' Dimension variables.
      Dim Counter As Integer, ChartName As Variant
      Dim SourceWorksheet As Variant, xVals As Variant, xCell As Variant
      Dim xLabel As Variant

      ' Disable screen updating while the subroutine is run.
      Application.ScreenUpdating = False

      ' Store the definition of the first series in "xVals."
      xVals = ActiveChart.SeriesCollection(1).Formula

      ' These lines extract the name of the source worksheet from xVals.
      SourceWorksheet = Left(xVals, InStr(1, xVals, "!") - 1)
      SourceWorksheet = Right(SourceWorksheet, Len(SourceWorksheet) - _
        InStr(1, SourceWorksheet, "("))
      If Left(SourceWorksheet, 1) = "," Then
         SourceWorksheet = Right(SourceWorksheet, Len(SourceWorksheet) - 1)
      End If

      ' Replace the actual source worksheet name with "xlSheet" so that the
      ' searches that follow work correctly when the worksheet name
      ' contains commas.
      xVals = Application.Substitute(xVals, SourceWorksheet, "xlSheet")

      ' More processing of the xVals name
      xVals = Right(xVals, Len(xVals) - InStr(1, xVals, ","))

      ' If the chart is using "assumed" x-values, display an alert
      ' message.
      If Left(xVals, 1) = "," Then

         ' NOTE: the following two lines should be typed
         ' as a single line.
         MsgBox "This X-Y scatter chart is using assumed X values." &amp; _
           " The macro cannot continue."

         ' Quit the subroutine if "assumed" x-values are in use.
         Exit Sub
      End If

      ' More processing of the xVals name
      xVals = Left(xVals, InStr(1, xVals, ",") - 1)

      ' Put the original source worksheet name back into xVals, replacing
      ' "xlSheet."
      xVals = Application.Substitute(xVals, "xlSheet", SourceWorksheet)

      ' Initialize counter to number of series in chart.
      countseries = ActiveChart.SeriesCollection.Count

      ' Repeat procedure one time for each series in chart.
      For xSeries = 1 To countseries

      ' Initialize a counter.
      Counter = 1

      ' For each cell in the range xVals...
          For Each xCell In Range(xVals)

         ' Get the value of the label next to the current x value.
         xLabel = xCell.Offset(0, -1).Value

         ' Attach a label to the current data point in the chart.
         ActiveChart.SeriesCollection(xSeries).Points(Counter) _
           .HasDataLabel = True

         ' Put the text (DataPoint1, for example) into the attached
         ' label.

         ActiveChart.SeriesCollection(xSeries).Points(Counter) _
           .DataLabel.Text = xLabel

         ' Increment the counter.
         Counter = Counter + 1
         Next xCell                          ' Loop until finished.
      Next xSeries
      ' Ensures that nothing in the chart is selected.
      Application.ExecuteExcel4Macro "SELECT("""")"
   End Sub
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words:  XL97 vba vbe xy-scatter bubble<BR>
Keywords          : kbcode kbprg xlvbainfo xlchart PgmLoop<BR>
Version           : WINDOWS: 5.0, 5.0c, 7.0, 7.0a, 97; MACINTOSH: 5.0, 5.0a, 98<BR>
Platform          : MACINTOSH WINDOWS<BR>
Issue type        : kbinfo<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 3, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
