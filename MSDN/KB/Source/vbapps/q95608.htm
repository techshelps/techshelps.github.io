

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: How to Parse Comma-Separated Text into Multiple Fields </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q95608 ">
<META NAME="KBModify" CONTENT="1997/08/29">
<META NAME="KBCreate" CONTENT="1993/02/17">
<META NAME="Keywords" CONTENT="kbusage PgmHowTo ExrStrg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  This article demonstrates two methods that you can use to parse comma- separated text in a Text field and to display the text in multiple Text fields.  You can use the first meth...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA7N,QA7O,QAMB,QATX,QA1S,QDN9,QAY5,QBS0,QAB9,QA4F,QA5F,QA4Q,QAMA,QBV8,QAPN P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: How to Parse Comma-Separated Text into Multiple Fields</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q95608 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 1.0, 1.1, 2.0, 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
This article demonstrates two methods that you can use to parse comma-
separated text in a Text field and to display the text in multiple Text
fields.
<P>
You can use the first method for a Text field that contains two words
separated by a comma, for example, a field that contains a last name
followed by a first name (Smith, John). The method uses an expression in a
query that includes three functions: the Instr() function to search for the
comma in the Text field, and the Left$() and Right$() functions to extract
the two parts of the Text field.
<P>
You can use the second method for a Text field that contains more than two
words separated by commas, for example, a field that contains a city, a
region, and a country (Toronto, Ontario, Canada). This method uses two
user-defined functions: a function named CountCSWords() to count the number
of comma-separated words in the Text field, and a function named
GetCSWord() to return the nth word in the Text field.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Method 1</h3>
 
<P>
To parse a Text field that contains two words separated by a comma, follow
these steps:

<OL><P><LI>Open any existing database.

<P><LI>Create a table with the following structure:
<P>
<P><PRE>      Table: Parse2Words
      ------------------
      Field Name: Empl
      Data Type:  Text
</PRE>
<P><LI>View the Parse2Words table in Datasheet view and type the following
   three records in the Empl field:
<P>
<P><PRE>      Smith, John
      Callahan, Laura
      Fuller, Andrew
</PRE>
<P><LI>Create the following query based on the Parse2Words table:
<P>
<P><PRE>      Query: QueryTest
      ------------------------------------------------------------------
      Field: FirstName: Right$([Empl],Len([Empl])- InStr(1,[Empl],",")-1)
<PRE></PRE>         Show: True
      Field: LastName: Left$([Empl],InStr(1,[Empl],",")-1)
         Show: True

   NOTE: You can modify the QueryTest query to account for spaces between
   the two parts in the Empl field. For example, if the text in the Empl
   field is "Smith,John" without spaces, remove the -1 from the FirstName
   field expression.

</PRE><P><LI>Run the query. Note that the QueryTest query separates the text in the
   Empl field into the two fields below:
<P>
<PRE>      FirstName   LastName
      --------------------
      John        Smith
      Laura       Callahan
      Andrew      Fuller

</PRE></OL><h3>Method 2</h3>
 
<P>
This part of the article assumes that you are familiar with Visual Basic
for Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
NOTE: Visual Basic for Applications is called Access Basic in Microsoft
Access versions 1.x and 2.0. For more information about Access Basic,
please refer to the "Introduction to Programming" manual in Microsoft
Access version 1.x or the "Building Applications" manual in Microsoft
Access version 2.0.
<P>
To parse a Text field that contains more than two words separated by
commas, follow these steps:

<OL><P><LI>Open any database.

<P><LI>Create a table with the following structure:
<P>
<P><PRE>      Table: ParseWords
      --------------------
      Field Name: Location
      Data Type:  Text
</PRE>
<P><LI>View the ParseWords table in Datasheet view and type the following three
   records in the Location field:
<P>
<P><PRE>      Toronto, Ontario, Canada
      Boston, Massachusetts, USA
      Vancouver, British Columbia, Canada
</PRE>
<P><LI>Create a module and type the following line in the Declarations section
   if it is not already there:
<P>
<P><PRE>      Option Explicit
</PRE>
<P><LI>Type the following procedures:
<P>
<P><PRE>      Function CountCSWords (ByVal S) As Integer
      ' Counts the words in a string that are separated by commas.
</PRE><P>
<P><PRE>      Dim WC As Integer, Pos As Integer
<PRE></PRE>         If VarType(S) &lt;&gt; 8 Or Len(S) = 0 Then
           CountCSWords = 0
           Exit Function
         End If
         WC = 1
         Pos = InStr(S, ",")
         Do While Pos &gt; 0
           WC = WC + 1
           Pos = InStr(Pos + 1, S, ",")
         Loop
         CountCSWords = WC
      End Function

      Function GetCSWord (ByVal S, Indx As Integer)
      ' Returns the nth word in a specific field.

      Dim WC As Integer, Count As Integer, SPos As Integer, EPos As Integer
         WC = CountCSWords(S)
         If Indx &lt; 1 Or Indx &gt; WC Then
           GetCSWord = Null
           Exit Function
         End If
         Count = 1
         SPos = 1
         For Count = 2 To Indx
           SPos = InStr(SPos, S, ",") + 1
         Next Count
         EPos = InStr(SPos, S, ",") - 1
         If EPos &lt;= 0 Then EPos = Len(S)
         GetCSWord = Trim(Mid(S, SPos, EPos - SPos + 1))
      End Function

</PRE><P><LI>Compile the module, save it as basParse, and close it.

<P><LI>Create the following query based on the ParseWords table:
<P>
<P><PRE>      Query: QueryTest2
      ---------------------------------------
      Field: City: GetCSWord([Location],1)
<PRE></PRE>         Show: True
      Field: Region: GetCSWord([Location],2)
         Show: True
      Field: Country: GetCSWord([Location],3)
         Show: True

</PRE><P><LI>Run the query. Note that the QueryTest2 query separates the text in the
   Location field into the three fields below:
<P>
<PRE>      City        Region             Country
      --------------------------------------
      Toronto     Ontario            Canada
      Boston      Massachusetts      USA
      Vancouver   British Columbia   Canada

</PRE></OL><h2>REFERENCES</h2>
 
<P>
For more information about parsing text strings, please see the following
article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../ACCESS/Q115915.htm">Q115915</A></B>
   TITLE     : Sample Expressions to Extract Portion of Text String

</PRE>For more sample expressions, see the Neatcode.mdb sample databases. For
details on how to obtain these, please see the following articles in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../ACCESS/Q148287.htm">Q148287</A></B>
   TITLE     : ACC2: NEATCOD2.MDB Available on MSL

   ARTICLE-ID: <B><A HREF="../ACCESS/Q148402.htm">Q148402</A></B>
   TITLE     : ACC95: NEATCODE.MDB Available on MSL
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: split how to<BR>
Keywords          : kbusage PgmHowTo ExrStrg<BR>
Version           : 1.0 1.1 2.0 7.0 97<BR>
Platform          : WINDOWS<BR>
Hardware          : x86<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
