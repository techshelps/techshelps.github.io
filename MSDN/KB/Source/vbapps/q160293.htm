

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC97: How to Dim Menu Items or Disable Toolbar Buttons in Code </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q160293">
<META NAME="KBModify" CONTENT="1998/02/04">
<META NAME="KBCreate" CONTENT="1996/12/03">
<META NAME="Keywords" CONTENT="kbusage PgmObj UifToolb">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  This article demonstrates a method to dim or disable items on a menu bar, toolbar, or shortcut menu in Microsoft Access 97.  This article assumes that you are familiar with Visua...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAF0,QANS,QBS0,QBJZ,QA1S,QAPN,QDN9,QANF,QBV8,QAB5,QA7O,QAOE,QAMN,QAH4,QDKR P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC97: How to Dim Menu Items or Disable Toolbar Buttons in Code</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 4, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q160293</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
This article demonstrates a method to dim or disable items on a menu bar,
toolbar, or shortcut menu in Microsoft Access 97.
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to the "Building
Applications with Microsoft Access 97" manual.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The CommandBars collection in Microsoft Access 97 exposes all menu bars,
toolbars, and shortcut menus in your application to Visual Basic for
Applications so you can manipulate them programmatically. Using the
properties and methods of the CommandBars collection in your application,
you can manipulate and customize both built-in and custom command bars.
<P>
NOTE: If you use Windows application programming interface (API) procedures
to manipulate menus in your Microsoft Access 2.0 or 7.0 database, you must
modify the code to use the CommandBars object model in Visual Basic for
Applications when you convert your database to Microsoft Access 97. Windows
API calls do not work with Microsoft Access 97 menus, toolbars, or shortcut
menus.
<P>
Each command bar, whether it is a menu bar, a toolbar, or a shortcut menu,
consists of a collection of CommandBarControl objects. You can create three
types of CommandBarControls on a command bar, each with its own methods and
properties:

<UL><LI>CommandBarButton represents a button control on a command bar, which
   can display text, an icon, or both together.

<LI>CommandBarComboBox represents a custom edit box, drop-down list box, or
   combo box on a command bar.

<LI>CommandBarPopup represents a control on a command bar that displays
   another menu when you click it; the menu that appears is another command
   bar associated with the popup control.
<P>
</UL>You refer to a control on a command bar by its Caption property or Index
number. For example, if a control on the "Test" command bar has the caption
"ClickMe" and an index value of 1, then the following two statements both
refer to the same control:
<P>
<PRE>   CommandBars("Test").Controls("ClickMe")
   CommandBars("Test").Controls(1)

</PRE>The following example shows you how to disable or enable items on a menu
bar or toolbar based on events in your application.

<OL><P><LI>Open the sample database Northwind.mdb.

<P><LI>Create a new form not based on any table or query in Design view, and
   save it as frmChangeBars.

<P><LI>Enable the Control Wizards button on the Toolbox toolbar, and then add
   an option group control to the detail section of the form.
<P>
<P><PRE>    a. In the "What label do you want for each option?" dialog box, type
       the following four labels, each in its own row: Dim View Menu, Dim
       Print Button, Dim New Database and Enable All. Click Next.
</PRE><P>
<P><PRE>    b. In the "Do you want one option to be the default choice?" dialog
       box, click "No, I don't want a default," and then click Next.
</PRE><P>
<P><PRE>    c. In the "What value do you want to assign to each option?" dialog
       box, click Finish.
</PRE>
<P><LI>Set the Name property of the option group control to CommandBarTest, and
   set the AfterUpdate property to the following event procedure:
<P>
<P><PRE>      Private Sub CommandBarTest_AfterUpdate()
<PRE></PRE>         Dim CBarMenu as CommandBar, CBarTool as CommandBar
         Dim CBarCtl as CommandBarPopup
         ' Set the CommandBar objects to the menu bar and toolbar that
         ' display when you open a form in Form view.
         Set CBarMenu = CommandBars("NorthwindCustomMenuBar")
         Set CBarTool = CommandBars("Form View")
         ' Because the File menu is a Popup control, assign it to an object
         ' variable so you can manipulate its CommandBar object.
         Set CBarCtl = CBarMenu.Controls("File")

         ' Program what happens when you click an option.
         Select Case Me!CommandBarTest
            ' You clicked Dim View Menu.
            Case 1
               CBarMenu.Controls("View").Enabled = False

            ' You clicked Dim Print Button.
            Case 2
               CBarTool.Controls("Print...").Enabled = False

            ' You clicked Dim New Database.
            Case 3
               CBarCtl.CommandBar.Controls("New Database...").Enabled = _
                  False

            ' You clicked Enable All.
            Case 4
               CBarMenu.Controls("View").Enabled = True
               CBarTool.Controls("Print...").Enabled = True
               CBarCtl.CommandBar.Controls("New Database...").Enabled = _
                  True
         End Select
      End Sub

</PRE><P><LI>Open the frmChangeBars form in Form view.

<P><LI>Click Dim View Menu and note that the View menu at the top of your
   screen dims.

<P><LI>Click Dim Print Button and note that the Print button on the Form View
   toolbar dims.

<P><LI>Click Dim New Database and note that the New Database selection on the
   File menu dims.

<P><LI>Click Enable All to re-enable all three controls.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about command bars, search the Help Index for
"CommandBars collection," or ask the Microsoft Access 97 Office Assistant.
<P>
For more information about creating and modifying command bars using Visual
Basic for Applications, please see the following article in the Microsoft
Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q159692.htm">Q159692</A></B>
   TITLE     : ACC97: How to Create Command Bars Using Visual Basic Code

</PRE></OL>For more information on how to programmatically add and remove items on
command bars, please see the following article(s) in the Microsoft
Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../ACCESS/Q172300.htm">Q172300</A></B>
   TITLE     : ACC97: Command Bar Wizard Available on MSL
</PRE> 
<PRE>Keywords          : kbusage PgmObj UifToolb
Version           : 97
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 4, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
