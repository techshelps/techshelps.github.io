

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: Using Visual Basic to Determine Windows 95 or NT Version </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q140484">
<META NAME="KBModify" CONTENT="1997/08/28">
<META NAME="KBCreate" CONTENT="1995/11/30">
<META NAME="Keywords" CONTENT="kbprg PgmApi">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  This article describes how you can use the GetVersionEx() Windows API function to determine the version number of the operating system (Microsoft Windows NT or Windows 95) r...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QDL9,QBWQ,QBWO,QBWN,QA1S,QAY5,QDIR,QAUD,QDN9,QBV8,QAB9,QBWP,QATX,QA6A P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: Using Visual Basic to Determine Windows 95 or NT Version</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 28, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q140484</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access version 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
This article describes how you can use the GetVersionEx() Windows API
function to determine the version number of the operating system (Microsoft
Windows NT or Windows 95) running on the computer.
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Although the GetVersion() function is still supported under Win32, it has
been superseded by GetVersionEx(), which identifies Windows 95, returns
more accurate information about the build of Windows, and no longer returns
the version of MS-DOS.
<P>
The following example function demonstrates how to use the GetVersionEx()
Windows API function:

<OL><P><LI>Create a module and type the following code in the Declarations section:
<P>
<P><PRE>      '====================================
      ' Global Declarations
      '====================================
      Option Explicit
</PRE><P>
<P><PRE>      Type OSVERSIONINFO
<PRE></PRE>         dwOSVersionInfoSize As Long
         dwMajorVersion As Long
         dwMinorVersion As Long
         dwBuildNumber As Long
         dwPlatformId As Long
         szCSDVersion As String * 128   ' Maintenance string for PSS usage.
      End Type

      Public Const VER_PLATFORM_WIN32s = 0
      Public Const VER_PLATFORM_WIN32_WINDOWS = 1
      Public Const VER_PLATFORM_WIN32_NT = 2

      Declare Function GetVersionEx Lib "kernel32" Alias "GetVersionExA" _
        (lpVersionInformation As OSVERSIONINFO) As Long

</PRE><P><LI>Type the following procedure:
<P>
<P><PRE>      Function SysVersions32 ()
<PRE></PRE>         Dim v As OSVERSIONINFO, retval As Long
         Dim WindowsVersion As String, BuildVersion As String
         Dim PlatformName As String

         v.dwOSVersionInfoSize = Len(v)
         retval = GetVersionEx(v)

         WindowsVersion = v.dwMajorVersion &amp; "." &amp; v.dwMinorVersion
         BuildVersion = v.dwBuildNumber And &amp;HFFFF&amp;

         Select Case v.dwPlatformId
         Case VER_PLATFORM_WIN32_WINDOWS
            PlatformName = "Windows 95"
         Case VER_PLATFORM_WIN32_NT
            PlatformName = "Windows NT"
         End Select

         MsgBox "Platform: " &amp; PlatformName &amp; vbCrLf &amp; _
            "Version: " &amp; WindowsVersion &amp; vbCrLf &amp; _
            "Build: " &amp; BuildVersion
      End Function

</PRE><P><LI>To test this function, type the following line in the Debug window,
   and then press ENTER.
<P>
<P><PRE>       ?SysVersions32()
</PRE><P>
   Note that the message box displays the operating system's name, version,
   and build number.
<P>
</OL>The GetVersionEx() function fills the OSVERSIONINFO structure, which
contains elements for the operating system platform, version, and build
information. Note that the element dwPlatformId could be any of the
VER_PLATFORM_ constants listed at the top of the example.
<P>
<P><h2>REFERENCES</h2>
 
<P>
This article is the counterpart to the article "ACC: How to Determine
Windows and MS-DOS Versions" (<B><A HREF="../ACCESS/Q109723.htm">Q109723</A></B>), which describes how to use the
GetVersion() function with Microsoft Access 2.0 and 1.x to return the
version of Windows 3.x and MS-DOS.
<P>
Microsoft Win32 SDK Reference
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: Win95<BR>
Keywords          : kbprg PgmApi<BR>
Version           : 7.0 97<BR>
Platform          : WINDOWS<BR>
Hardware          : x86<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 28, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
