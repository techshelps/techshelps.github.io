

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC95: Incorrect GetAccessReportList in "Building Applications" </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q150058">
<META NAME="KBModify" CONTENT="1997/08/28">
<META NAME="KBCreate" CONTENT="1996/04/19">
<META NAME="Keywords" CONTENT="AutoGnrl kberrmsg kbole IntpOleA">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  The GetAccessReportList procedure on page 288 of the  Building Applications with Microsoft Access for Windows 95  manual causes the error  Object doesn't support this proper...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA1S,QBV4,QDN9,QBWS,QAPN,QBVR,QAHP,QBJZ,QANF,QAH4,QBVP,QA01,QBS0,QBXS,QATX V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC95: Incorrect GetAccessReportList in "Building Applications"</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 28, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q150058</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access version 7.0
<LI>Microsoft Excel versions 5.0, 7.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
The GetAccessReportList procedure on page 288 of the "Building Applications
with Microsoft Access for Windows 95" manual causes the error "Object
doesn't support this property or method." (run-time error 438)
<P>
<P><h2>CAUSE</h2>
 
<P>
This procedure refers to a variable called "dbs" but fails to declare and
set this variable. Also, the "and" condition on the first If statement
refers to "mdb" but should refer to "mda." Finally, the text argument of
the AddItem method should be specified as a named argument.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to the "Building
Applications with Microsoft Access for Windows 95" manual.
<P>
The following steps show how to use the GetAccessReportList procedure in
Microsoft Excel. The corrected GetAccessReportList procedure is included in
these steps:

<OL><P><LI>Start Microsoft Excel (version 5.0 or later).

<P><LI>On the Insert menu, select Macro, and then click Module to create a new
    module within the workbook.

<P><LI>Type the following code in the module, which includes the corrected
    GetAccessReportList procedure:
<P>
       Option Explicit
<P>
       Dim objAccess As Object
<P>
<PRE>       Sub GetAccessReportList()
         Dim dbs As Object
         Dim strDBName As String
         Dim intReport As Integer

         Set objAccess = CreateObject("Access.Application.7")

         strDBName = DialogSheets(1).EditBoxes(1).Text
         If Right$(strDBName, 4) &lt;&gt; ".mdb" And _
           Right$(strDBName, 4) &lt;&gt; ".mda" Then
           strDBName = strDBName &amp; ".mdb"
         End If

         With objAccess
           .OpenCurrentDatabase (strDBName)
           Set dbs = .DBengine(0)(0)
           With dbs.Containers("Reports")
             For intReport = 0 To .Documents.Count - 1
               If Left$(.Documents(intReport).Name, 4) &lt;&gt; "~TMP" Then
                 DialogSheets(1).ListBoxes(1).AddItem Text:= _
                   .Documents(intReport).Name
               End If
             Next intReport
           End With
         End With
       End Sub

       Sub Main()
         DialogSheets(1).ListBoxes(1).RemoveAllItems
         DialogSheets(1).Show
       End Sub

</PRE><P><LI>On the Insert menu, select Macro, and then click Dialog to create a new
    dialog within the workbook.

<P><LI>Use the Edit Box button from the Forms toolbox to draw an edit box
    inside the Dialog frame. (After clicking the Edit Box button, you must
    click and drag inside the Dialog frame to draw the edit box.)

<P><LI>Use the List Box button to draw a list box inside the Dialog frame.

<P><LI>Using the right mouse button, click OK within the Dialog frame, and
    then click Format Object on the menu that appears.

<P><LI>Click to clear the Dismiss check box, and then click OK.

<P><LI>Using the right mouse button, click OK within the Dialog frame, and
    then click Assign Macro on the menu that appears.

<P><LI>Select GetAccessReportList and click OK.

<P><LI>Click the Sheet1 tab to activate a worksheet within the workbook.

<P><LI>On the Tools menu, click Macro.

<P><LI>Select Main and click Run. Your custom dialog box should appear.

<P><LI>Type a valid path and database name in the edit box and click OK, for
    example:
<P>
<PRE>         C:\Msoffice\Access\Samples\Northwind.mdb

</PRE></OL>A list of reports should appear in the list box. Click Cancel to close.
<P>
<P><h3>Alternative GetAccessReportList Procedure</h3>
 
<P>
Below is a slightly faster version of the GetAccessReportList procedure:
<P>
<PRE>   Sub GetAccessReportList()
     Dim lstReports As list box
     Dim strDBName As String
     Dim intReport As Integer
     Dim docReports As Object
     Dim intCount As Integer
     Dim strDoc As String

     Set lstReports = DialogSheets(1).ListBoxes(1)
     Set objAccess = CreateObject("Access.Application.7")

     strDBName = DialogSheets(1).EditBoxes(1).Text
     If Right$(strDBName, 4) &lt;&gt; ".mdb" And _
       Right$(strDBName, 4) &lt;&gt; ".mda" Then
       strDBName = strDBName &amp; ".mdb"
     End If

     objAccess.OpenCurrentDatabase strDBName
     With objAccess.DBengine(0)(0)
       Set docReports = .Containers("Reports").Documents
       intCount = docReports.Count - 1
       For intReport = 0 To intCount
         strDoc = docReports.Item(intReport).Name
         If Left$(strDoc, 4) &lt;&gt; "~TMP" Then
           lstReports.AddItem Text:=strDoc
         End If
       Next
     End With
   End Sub

</PRE><h2>REFERENCES</h2>
 
<P>
For more information about using Microsoft Access as an OLE automation
server, please see the following article in the Microsoft Knowledge
Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q147816.htm">Q147816</A></B>
   TITLE     : ACC: Using Microsoft Access as an OLE Automation
               Server
</PRE> 
<PRE>Keywords          : AutoGnrl kberrmsg kbole IntpOleA
Technology        : kbole
Version           : 7.0
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbdocerr
Solution Type     : kbcode</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 28, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
