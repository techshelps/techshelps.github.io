

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: Running a Microsoft Word 97 Macro Using Automation </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q160294">
<META NAME="KBModify" CONTENT="1997/08/29">
<META NAME="KBCreate" CONTENT="1996/12/03">
<META NAME="Keywords" CONTENT="AutoGnrl kbinterop PgmHowTo IntpOleA">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  This article describes a technique to run a Microsoft Word 97 macro from Microsoft Access using Automation.  For information about how to run a macro in earlier versions of Micro...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAIH,QAH4,QA1S,QBWS,QAPN,QDN9,QAKE,QBXS,QDNE,QA2K,QAW6,QBS0,QBJZ,QBFY,QA28 P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: Running a Microsoft Word 97 Macro Using Automation</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q160294</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
This article describes a technique to run a Microsoft Word 97 macro from
Microsoft Access using Automation.
<P>
For information about how to run a macro in earlier versions of Microsoft
Word, please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q154570.htm">Q154570</A></B>
   TITLE     : ACC: Running a Microsoft Word Macro Using Automation

</PRE>This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Using Automation code in Microsoft Access, you can open a Microsoft Word 97
document and execute a macro in the document.
<P>
The following examples use two methods, one that opens a Microsoft Word 97
document that is external to Microsoft Access, and one that opens a
document that is embedded in a Microsoft Access form.
<P>
These examples assume that you have Microsoft Word 97 set up on your
computer, that you have a document called C:\My Documents\WordTest.doc, and
that a macro called Macro1 exists in the default template (Normal.dot).
<P>
<P><h3>Example 1: Run a Macro in an External Microsoft Word 97 Document</h3>
 

<OL><P><LI>Open the sample database Northwind.mdb.

<P><LI>Create a new module in Design view.

<P><LI>On the Tools menu, click References.

<P><LI>Click Microsoft Word 8.0 Object Library in the Available References box.
   If that selection does not appear, click the Browse button and look for
   a file called Msword8.olb, which is installed in the C:\Program
   Files\Microsoft Office\Office folder by default.

<P><LI>Click OK in the References dialog box.

<P><LI>Type the following procedure in the module:
<P>
<P><PRE>      Function RunWordMacro()
<PRE></PRE>         Dim WordApp As Word.Application
         Dim WordDoc As Word.Document
         Set WordApp = CreateObject("Word.Application")
         Set WordDoc = WordApp.Documents.Open _
             ("C:\My Documents\Wordtest.doc")
         WordApp.Visible = True
         WordApp.Run "Macro1"

         ' Uncomment the next line of code to print the document.
         ' WordDoc.PrintOut Background:=False

         ' Uncomment the next line of code to save the modified document.
         ' WordDoc.Save

         WordApp.Quit SaveChanges:=wdDoNotSaveChanges
         Set WordApp = Nothing
      End Function

</PRE><P><LI>To test this function, type the following line in the Debug window,
   and then press ENTER.
<P>
<P><PRE>      ?RunWordMacro()
</PRE><P>
   Note that Microsoft Word 97 opens the C:\My Documents\Wordtest.doc
   document, and then runs the macro called Macro1.
<P>
</OL><h3>Example 2: Run a Macro in an Embedded Microsoft Word 97 Document</h3>
 

<OL><P><LI>Open the sample database Northwind.mdb.

<P><LI>Open any module in Design view.

<P><LI>On the Tools menu, click References.

<P><LI>Click Microsoft Word 8.0 Object Library in the Available References
   box. If that selection does not appear, click the Browse button and
   look for a file called Msword8.olb, which is installed in the
   C:\Program Files\Microsoft Office\Office folder by default.

<P><LI>Click OK in the References dialog box.

<P><LI>Create a new form not based on any table or query in Design view.

<P><LI>Add an unbound object frame control to the detail section of the form.

<P><LI>When the Insert Object dialog box appears, click Create From File,
   and then click the Browse button to select your C:\My
   Documents\WordTest.doc file.

<P><LI>Click Open in the Browse dialog box, and then click OK in the Insert
   Object dialog box.

<P><LI>Set the following properties for the unbound object frame control:
<P>
<P><PRE>       Unbound Object Frame
       --------------------
       Name: MacroObj
       Locked: No
</PRE>
<P><LI>Add a command button to the form; set its Name property to RunWordMacro
<P><PRE>    and set its OnClick property to the following event procedure:
</PRE><P>
<P><PRE>      Private Sub RunWordMacro_Click()
<PRE></PRE>         Dim WordObj As Word.Application

         ' Open Microsoft Word 97 in place and activate it.
         Me![MacroObj].Verb = -4
         Me![MacroObj].Action = 7

         Set WordObj = Me![MacroObj].Object.Application
         WordObj.Run "Macro1"
         Set WordObj = Nothing
      End Sub

</PRE><P><LI>Save the form as frmMacro, and then open it in Form view.

<P><LI>Click the command button on the form and note that the macro runs while
<P><PRE>    the document is edited in place in the control on your form.
</PRE><P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about Automation, search the Help Index for
"Automation," or ask the Microsoft Access 97 Office Assistant.
<P>
For more information about Verb and Action properties, search the Help
Index for "Verb property" or "Action property," or ask the Microsoft Access
97 Office Assistant.
<P>
For more information about in-place activation, search the Help Index for
"in-place activation," or ask the Microsoft Access 97 Office Assistant.
 
<PRE>Keywords          : AutoGnrl kbinterop PgmHowTo IntpOleA
Version           : 7.0 97
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbinfo</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
