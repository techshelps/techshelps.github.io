

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: VB Can Determine if Specific Windows Program Is Running </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q72918 ">
<META NAME="KBModify" CONTENT="1997/09/29">
<META NAME="KBCreate" CONTENT="1991/06/14">
<META NAME="Keywords" CONTENT="kbprg kbfasttip">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  To determine if a specific program is running, call the Windows API function FindWindow.  FindWindow returns the handle of the window whose class is given by the lpClassname parameter and whose window name (caption), is given by the lpCaption param...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QDL9,QBWO,QBWN,QAH4,QBWS,QBWQ,QAUJ,QAJH,QAMB,QA5F,QAMA,QAOX,QADK,QBTM V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: VB Can Determine if Specific Windows Program Is Running</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q72918 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Standard and Professional Editions of Microsoft Visual Basic for
   Windows, versions 2.0 and 3.0
<LI>Microsoft Visual Basic programming system for Windows, version 1.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
To determine if a specific program is running, call the Windows API
function FindWindow.
<P>
FindWindow returns the handle of the window whose class is given by the
lpClassname parameter and whose window name (caption), is given by the
lpCaption parameter. If the returned value is zero, the application is
not running.
<P>
NOTE: Only 16-bit implementations of VBA support the sample code in this
article.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
This information is included with the Help file provided with Microsoft
Professional Toolkit for Visual Basic version 1.0, Microsoft Visual Basic
version 2.0, and Microsoft Visual Basic version 3.0.
<P>
By calling FindWindow with a combination of a specific program's class
name and/or the title bar caption, your program can determine whether
that specific program is running.
<P>
When an application is started from the Program Manager, it registers the
class name of the form. The window class provides information about the
name, attributes, and resources required by your form. MDI forms in Visual
Basic have ThunderMDIForm as their class name, and all other Visual Basic
forms have ThunderForm as their class name.
<P>
You can determine the class name of an application by using SPY.EXE that
comes with the Microsoft Windows Software Development Kit (SDK) version
3.0 or 3.1.
<P>
If the window has a caption bar title, you can also use the title to
locate the instance of the running application. This caption text is
valid even when the application is minimized to an icon.
<P>
Because another instance of your Visual Basic program will have the
same class name and may have the same title bar caption, you must use
dynamic data exchange (DDE) to determine if another instance of your
Visual Basic program is running. (This DDE technique is not shown in
this article).
<P>
<P><h3>Step-by-Step Example</h3>
 
<P>
The following example shows three ways to determine if the Windows
Calculator is running. To create the program, do the following:

<OL><P><LI>Start Visual Basic or from the File menu, choose New Project (ALT, F, N)
   if Visual Basic is already running. Form1 is created by default.

<P><LI>Declare the Windows API function FindWindow in the Global declarations
   section of Form1. The variables are declared as "Any" because you can
   pass either a pointer to a string, or a NULL (or 0&amp;) value. You are
   responsible for passing the correct variable type.
<P>
<P><PRE>      ' Enter the following Declare statement on one, single line:
      Declare Function FindWindow% Lib "user" (ByVal lpClassName As Any,
<PRE></PRE>         ByVal lpCaption As Any)

</PRE><P><LI>Add the following code to the form's Click event. This example
   demonstrates how you can find the instance of the application with a
   combination of the class name and/or the window's caption. In this
   example, the application will find an instance of the Windows
   calculator (CALC.EXE).
<P>
<PRE>      Sub Form_Click ()
         lpClassName$ = "SciCalc"
         lpCaption$ = "Calculator"
   
         Print "Handle = ";FindWindow(lpClassName$, 0&amp;)
         Print "Handle = ";FindWindow(0&amp;, lpCaption$)
         Print "Handle = ";FindWindow(lpClassName$,lpCaption$)
      End Sub

</PRE><P><LI>Run this program with CALC.EXE running and without CALC.EXE
   running. If CALC.EXE is running, your application will print an
   arbitrary handle. If CALC.EXE is not running, your application will
   print zero as the handle.
<P>
</OL>Below are some class names of applications that are shipped with Windows:
<P>
<PRE>Class Name         Application
</PRE></OL> 
<PRE>SciCalc            CALC.EXE
CalWndMain         CALENDAR.EXE
Cardfile           CARDFILE.EXE
Clipboard          CLIPBOARD.EXE
Clock              CLOCK.EXE
CtlPanelClass      CONTROL.EXE
XLMain             EXCEL.EXE
Session            MS-DOS.EXE
Notepad            NOTEPAD.EXE
pbParent           PBRUSH.EXE
Pif                PIFEDIT.EXE
PrintManager       PRINTMAN.EXE
Progman            PROGMAN.EXE   (Windows Program manager)
Recorder           RECORDER.EXE
Reversi            REVERSI.EXE
#32770             SETUP.EXE
Solitaire          SOL.EXE
Terminal           TERMINAL.EXE
WFS_Frame          WINFILE.EXE
MW_WINHELP         WINHELP.EXE
#32770             WINVER.EXE
OpusApp            WINWORD.EXE
MSWRITE_MENU       WRITE.EXE
</PRE> 
<PRE>Keywords          : kbprg kbfasttip
Technology        : kbvba
Version           : WINDOWS:2.0 3.0
Platform          : WINDOWS
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
