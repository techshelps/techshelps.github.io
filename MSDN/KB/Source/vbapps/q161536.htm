

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL97: How to Temporarily Hide a UserForm </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q161536">
<META NAME="KBModify" CONTENT="1998/03/13">
<META NAME="KBCreate" CONTENT="1996/12/30">
<META NAME="Keywords" CONTENT="kbcode kbprg xlvbahowto xlvbainfo">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In earlier versions of Microsoft Excel, if you use the Hide method to hide a custom dialog box, Microsoft Excel does not hide the dialog box until the macro that contains the Hide method is finished running.  In Microsoft Excel 97, if you use the H...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QAH4,QAPN,QBS0,QBWS,QAKE,QAFU,QBVV,QBW8,QAMB,QBJZ,QAFF,QAMN,QBV4,QA7O P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL97: How to Temporarily Hide a UserForm</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 13, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q161536</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In earlier versions of Microsoft Excel, if you use the Hide method to hide
a custom dialog box, Microsoft Excel does not hide the dialog box until the
macro that contains the Hide method is finished running.
<P>
In Microsoft Excel 97, if you use the Hide method to hide a UserForm, the
UserForm is hidden immediately. You can redisplayed the UserForm later by
using the Show method in the macro (or in another macro). You can also use
the Unload statement to hide a UserForm; however, any settings in the
UserForm are lost. Note that you may want to use the Unload statement if
you want to reset the UserForm.
<P>
This article explains how to create a UserForm and contains a sample Visual
Basic for Applications macro that temporarily hides the UserForm (using the
Hide method and the Unload statement).
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft support engineers can help explain the
functionality of a particular macro, they will not modify these examples to
provide added functionality, nor will they help you construct macros to
meet your specific needs. If you have limited programming experience, you
may want to consult one of the Microsoft Solution Providers. Solution
Providers offer a wide range of fee-based services, including creating
custom macros. For more information about Microsoft Solution Providers,
call Microsoft Customer Information Service at (800) 426-9400.
<P>
<P><h3>Creating the UserForm</h3>
 

<OL><P><LI>Save and close any open workbooks, and then create a new workbook.

<P><LI>Start the Visual Basic Editor (press ALT+F11).

<P><LI>On the Insert menu, click UserForm.
<P>
</OL>This step inserts UserForm1 into the project.

<OL><P><LI>Add a CommandButton control to the UserForm.

<P><LI>Change the properties of the CommandButton to the following.
<P>
<PRE>      Property   Value
      --------------------
      Caption    Hide Form
      Name       cmdHide

</PRE><P><LI>Add another CommandButton control to the UserForm.

<P><LI>Change the properties of the CommandButton to the following.
<P>
<PRE>      Property   Value
      ----------------------
      Caption    Unload Form
      Name       cmdUnload

</PRE><P><LI>Add a TextBox control to the UserForm.
<P>
</OL><h3>Sample Macro for Hiding the UserForm</h3>
 

<OL><P><LI>Double-click the cmdHide CommandButton on UserForm1.

<P><LI>Type the following code for the cmdHide Click event:
<P>
       Private Sub cmdHide_Click()
<PRE>           UserForm1.Hide
       End Sub

</PRE><P><LI>Type the following code for cmdUnload Click event:
<P>
       Private Sub cmdUnload_Click()
<PRE>           Unload UserForm1
       End Sub

</PRE><P><LI>On the Insert menu, click Module.

<P><LI>Type the following code into this module:
<P>
<PRE>       Sub Show_Form()
   
           UserForm1.Show   'Display the UserForm
   
           Do
               response = MsgBox("Do you want to redisplay the form?", _
                   vbYesNo)
   
               If response = vbYes Then
   
                   UserForm1.Show  'Redisplay the UserForm.
   
               End If
   
           Loop Until response = vbNo  'Do not redisplay the UserForm.
   
       End Sub

</PRE><P><LI>Run the Show_Form macro.

<P><LI>Type text in the TextBox control.

<P><LI>Click Hide Form.

<P><LI>When you are prompted whether to redisplay the UserForm, click Yes.
<P>
</OL>The UserForm reappears, and the text in the TextBox is retained.

<OL><P><LI>Click Unload Form.

<P><LI>When you are prompted whether to redisplay the UserForm, click Yes.
<P>
</OL>The UserForm reappears, but the text in the TextBox is NOT retained.

<OL><P><LI>Click Unload Form.

<P><LI>When you are prompted whether to redisplay the UserForm, click No.
<P>
</OL>The UserForm is not redisplayed, and the macro ends.
<P>
For additional information about hiding dialog boxes in earlier versions of
Microsoft Excel, please see the following article in the Microsoft
Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q141506.htm">Q141506</A></B>
   TITLE     : XL: How to Temporarily Hide a Dialog Box

</PRE></OL><h2>REFERENCES</h2>
 
<P>
For more information about Hiding UserForms, click the Office Assistant,
type "hide", click Search, and then click to view "Hide Method".
<P>
For more information about Unloading UserForms, click the Office Assistant,
type "unload", click Search, and then click to view "Unload Statement".
<P>
NOTE: If the Assistant is hidden, click the Office Assistant button on the
Standard toolbar. If Microsoft Excel Help is not installed on your
computer, please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../OFFICE/Q120802.htm">Q120802</A></B>
   TITLE     : Office: How to Add/Remove a Single Office
               Program or Component
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: XL97<BR>
Keywords          : kbcode kbprg xlvbahowto xlvbainfo<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 13, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
