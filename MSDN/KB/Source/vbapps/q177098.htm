

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WD98: Changing PaperSize Using VBA Causes Run-time Error </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q177098">
<META NAME="KBModify" CONTENT="1998/03/03">
<META NAME="KBCreate" CONTENT="1997/11/20">
<META NAME="Keywords" CONTENT="kbcode kbprg macword98">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  When you try to set the page size of a document using the PaperSize property in Microsoft Visual Basic for Applications code, you receive the following error message:     Run-time error '5861':     '       where       represents a graphical box.  C...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAH4,QA5V,QBXS,QBWA,QA5F,QAPN,QAB4,QAIH,QDKW,QAKE,QAVZ,QAPF,QABA,QA6A V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>WD98: Changing PaperSize Using VBA Causes Run-time Error</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 3, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q177098</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Word 98 Macintosh Edition
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When you try to set the page size of a document using the PaperSize
property in Microsoft Visual Basic for Applications code, you receive the
following error message:
<P>
<PRE>   Run-time error '5861':

   '&lt;box&gt;

</PRE>where &lt;box&gt; represents a graphical box.
<P>
<P><h2>CAUSE</h2>
 
<P>
The following sample code causes the error:
<P>
<PRE>   ActiveDocument.Sections(1).PageSetup.PaperSize = wdPaperLetter

</PRE><h2>WORKAROUND</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>To work around this problem, use one of the following methods:
<P>
<P><h3>Method 1: Record Setting the Page Size</h3>
 
<P>
Record setting the page size and incorporate the results into your macro.
<P>
To record a macro:

<OL><P><LI>On the Tools menu, point to Macro, and then click Record New Macro.

<P><LI>In the Macro name box, type a name for the macro.

<P><LI>In the Store Macro In box, click the template or document in which you
   want to store the macro.

<P><LI>In the Description box, type a description for the macro.

<P><LI>If you do not want to assign the macro to a toolbar, a menu, or shortcut
   keys, click OK to begin recording the macro.
<P>
<P>
</OL><h3>Method 2: Use the Following Sample Visual Basic Procedure</h3>
 
<P>
The following sample Visual Basic code sets the page size for all pages
within the first section of a document to Legal. If your document contains
only one section, this example will work as shown.
<P>
<PRE>   Sub SetPageSize()

      ' If there are no open documents, exit this procedure.
      If Application.Documents.Count = 0 Then Exit Sub

      ' Set Page size for the first section.
      With ActiveDocument.Sections(1).PageSetup

         ' Set page orientation to portrait.
         .Orientation = wdOrientPortrait

         ' Set page size to Legal.
         .PageWidth = InchesToPoints(8.5)
         .PageHeight = InchesToPoints(14)

      End With

   End Sub

</PRE></OL>Note: You will want to set margins or other attributes applicable to the
page size. In this case, using Method 1 (found earlier in this article)
would provide a much simpler approach to work around this problem.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in the Microsoft products
listed at the beginning of this article. We are researching this problem
and will post new information here in the Microsoft Knowledge Base as it
becomes available.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about the PageSetup property, click the Office
Assistant in the Visual Basic Editor, type "PageSetup," click Search, and
then click to view "PageSetup Property."
<P>
NOTE: If the Assistant is hidden, click the Office Assistant button on the
Standard toolbar. If Microsoft Word Help is not installed on your computer,
please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../OFFICE/Q120802.htm">Q120802</A></B>
   TITLE     : Office: How to Add/Remove a Single Office
               Program or Component

</PRE>For more information about getting help with Visual Basic for Applications,
please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q163435.htm">Q163435</A></B>
   TITLE     : VBA: Programming Resources for Visual Basic for
               Applications
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: vba<BR>
Keywords          : kbcode kbprg macword98<BR>
Version           : MACINTOSH:98<BR>
Platform          : MACINTOSH<BR>
Issue type        : kbbug<BR>
Solution Type     : kbworkaround<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 3, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
