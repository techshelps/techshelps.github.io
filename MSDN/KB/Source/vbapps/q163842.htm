

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: Compile Error After Converting Form Macros to VBA </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q163842">
<META NAME="KBModify" CONTENT="1997/08/29">
<META NAME="KBCreate" CONTENT="1997/02/18">
<META NAME="Keywords" CONTENT="FmsEvnt">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  After you convert macros to Visual Basic for Applications code in a form or report using the  Convert Macros to Visual Basic  command, you may receive the following error message...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QBS0,QAPN,QA1S,QAB4,QAB9,QDN9,QA5F,QAW6,QAUJ,QAO4,QBJZ,QAEF,QAAP,QAMA P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: Compile Error After Converting Form Macros to VBA</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q163842</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 7.0, 97
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
After you convert macros to Visual Basic for Applications code in a form or
report using the "Convert Macros to Visual Basic" command, you may receive
the following error message when you use the form.
<P>
<P><h3>In Microsoft Access 97</h3>
 
<P>
<PRE>   The expression &lt;Event Name&gt; you entered as the event property setting
   produced the following error: Ambiguous name detected: &lt;Procedure Name&gt;.

</PRE><h3>In Microsoft Access 7.0</h3>
 
<P>
<PRE>   The expression &lt;Event Name&gt; you entered as the event property setting
   produced an error: Compile error.

</PRE>This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
<P><h2>CAUSE</h2>
 
<P>
At one time, the object had an event procedure that was later changed to a
macro.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To prevent the error, open a form or report class module in Design view
and delete the procedure for the event whenever you replace an event
procedure with a macro.
<P>
To resolve the error, you must remove the duplicate procedure in the
object's class module using one of the following methods.
<P>
<P><h3>Method 1</h3>
 
<P>
In Microsoft Access 97, if the object does not contain a mixture of Visual
Basic code and macros, you can remove the object's class module before you
convert its macros:

<OL><P><LI>Open the form or report in Design view.

<P><LI>Set the object's HasModule property to No, and then save the object.
<P>
   NOTE: Any Visual Basic code that the object contains is removed along
   with its class module when you set the HasModule property to No.

<P><LI>On the Tools menu, point to Macro, and then click "Convert Form's Macros
   to Visual Basic" or "Convert Report's Macros to Visual Basic."
<P>
</OL>A new class module is created for the object, and no duplicate procedure
names exist.
<P>
<P><h3>Method 2</h3>
 
<P>
In Microsoft 7.0 and 97, you can open the object's class module in Design
view and remove the duplicate procedure:

<OL><P><LI>Open the object in Design view.

<P><LI>On the View menu, click Code.

<P><LI>On the Debug menu (or the Run menu in version 7.0), click Compile
   Loaded Modules. You will receive the error "Ambiguous name detected:
   &lt;Procedure Name&gt;."

<P><LI>Page up and down through the class module, looking for another procedure
   with the same name as the one that produced the compile error. When you
   find it, determine which procedure is the converted macro and which is
   the old procedure.

<P><LI>Select and delete the old procedure.
<P>
</OL><h2>MORE INFORMATION</h2>
 
<P>
When you replace [Event Procedure] with the name of a macro in Design view
of a form or report, the procedure itself remains in the object's class
module. When you convert the macro to a Visual Basic procedure, the Wizard
does not check to see if a procedure for that event already exists, and it
creates a duplicate procedure.
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 
<P>
The following example uses a form; you can obtain the same results using a
report.

<OL><P><LI>Start Microsoft Access and open the sample database Northwind.mdb.

<P><LI>Create the following new macro called TestVBA:
<P>
<PRE>      Macro Name     Action
      -----------------------
      TestVBA        Maximize

</PRE><P><LI>Save the macro and close it.

<P><LI>Use the AutoForm: Columnar Wizard to create a new form based on the
   Shippers table.

<P><LI>Save the form as frmShippers, and then open it in Design view.

<P><LI>Set the OnLoad property of the form to the following event procedure:
<P>
<P><PRE>      Private Sub Form_Load()
<PRE></PRE>         'This module will be replaced by a macro
      End Sub

</PRE><P><LI>Close the form's Module window.

<P><LI>Change the OnLoad property of the form from [Event Procedure] to
   TestVBA.

<P><LI>On the Tools menu, point to Macro (or Macros in version 7.0), and then
   click "Convert Form's Macros to Visual Basic."

<P><LI>In the Convert Form Macros dialog box, click Convert.

<P><LI>After conversion finishes, switch the form to Form view. Note that you
<P><PRE>    receive the error message. If you browse the form's class module, you
    notice there are two procedures named Form_Load.
</PRE><P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about using the Convert Macros to Visual Basic
command, search the Help Index for "converting macros," or ask the
Microsoft Access 97 Office Assistant.
 
<PRE>Keywords          : FmsEvnt
Version           : 7.0 97
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbprb
Solution Type     : Info_Provided</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
