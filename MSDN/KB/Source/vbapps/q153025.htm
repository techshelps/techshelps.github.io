

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Microsoft Excel 95 Doesn't Respond Correctly to GetObject </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q153025">
<META NAME="KBModify" CONTENT="1997/10/29">
<META NAME="KBCreate" CONTENT="1996/06/26">
<META NAME="Keywords" CONTENT="kberrmsg kbprg GnrlVB">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Attempting to use the GetObject function to return a reference to a running instance of Microsoft Excel 95 results in the error 429:      OLE Automation server can't create object.   The identical code works correctly with a running instance of Mic...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QAH4,QAGI,QBWS,QAR4,QBS0,QAPN,QDNF,QAY5,QAW6,QAFF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Microsoft Excel 95 Doesn't Respond Correctly to GetObject</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q153025</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Standard, Professional, and Enterprise Editions of Microsoft
   Visual Basic, 32-bit only, for Windows, version 4.0
<LI>Microsoft Excel 95, version 7.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Attempting to use the GetObject function to return a reference to a running
instance of Microsoft Excel 95 results in the error 429:
<P>
<PRE>   "OLE Automation server can't create object."

</PRE>The identical code works correctly with a running instance of Microsoft
Excel 5.0.
<P>
<P><h2>CAUSE</h2>
 
<P>
Microsoft Excel 95 fails to correctly register itself in the Running Object
Table. The GetObject function can be used with the correct syntax to obtain
a currently running instance of Microsoft Excel 95 for use with OLE
automation.
<P>
Microsoft Excel 95 requires one additional step to ensure that it will
respond to the OLE request. The code outlined below uses the SendMessage
API to tell Microsoft Excel 95 to listen for requests for objects.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To work around this problem, follow these steps:

<OL><P><LI>Add a single code module to the current project. Alternatively, if a
   code module already exists, it can be used instead.

<P><LI>Add the following code to the code module referred to in step 1:
<P>
<P><PRE>      Const WM_USER = 1024
</PRE><P>
<P><PRE>      Declare Function FindWindow Lib "user32" Alias "FindWindowA"_
      (ByVal lpClassName As String, ByVal lpWindowName As Long) As Long
      Declare Function SendMessage Lib "user32" Alias "SendMessageA" _
      (ByVal hwnd As Long, ByVal wMsg As Long, ByVal wParam As Long, _
      lParam As Long)
      As Long
</PRE><P>
<PRE>      Sub WakeExcel()
           Dim hwnd As Long

           hwnd = FindWindow("XLMAIN", 0)
           If hwnd = 0 Then
              'no instances running
              Exit Sub
           End If
           SendMessage hwnd, WM_USER + 18, 0, 0
      End Sub

</PRE><P><LI>Add a call to the WakeExcel function so that it is called after a user
   may have started Microsoft Excel, but before the call to GetObject is
   made.
<P>
</OL><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in Microsoft Excel 95. This bug
has been fixed in Microsoft Excel 97.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce Problem</h3>
 

<OL><P><LI>Start a new instance of Visual Basic 4.0. Form1 is created by default.

<P><LI>Add the following code to the Form_Click event of Form1:
<P>
<P><PRE>      Private Sub Form_Click()
<PRE></PRE>          Dim o As Object

          Set o = GetObject(, "Excel.Application")
          Set o = Nothing
      End Sub

</PRE><P><LI>Ensure that Microsoft Excel 95 is running.

<P><LI>Press the F5 key to run the application. Click the form once, and note
   the error outlined above.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For additional information, please see the following article in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE ID: <B><A HREF="../vbapps/Q114347.htm">Q114347</A></B>
   TITLE     : INFO: OLE Automation Objects with GetObject and CreateObject
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: GetActiveObject<BR>
Keywords          : kberrmsg kbprg GnrlVB<BR>
Technology        : kbole kbvba<BR>
Version           : WINDOWS:4.0<BR>
Platform          : NT WINDOWS<BR>
Issue type        : kbbug<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
