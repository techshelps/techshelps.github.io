

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Incorrect Value Returned for Custom Property Linked To Content </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q135101">
<META NAME="KBModify" CONTENT="1997/07/29">
<META NAME="KBCreate" CONTENT="1995/08/16">
<META NAME="Keywords" CONTENT="kbcode kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  When you use the CustomDocumentProperties property to return the value of a linked custom property in your file, the incorrect value may be returned.  For example, if your custom property is linked to the Text type value  Test,  the CustomDocumentP...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QBS0,QAKD,QBVP,QAUD,QAH4,QAE2,QBWC,QA01,QARW,QAKC,QBJZ,QA6A,QAUJ,QAMB V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Incorrect Value Returned for Custom Property Linked To Content</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q135101</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows 95, version 7.0
<LI>Microsoft Project for Windows 95, version 4.1
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When you use the CustomDocumentProperties property to return the value of a
linked custom property in your file, the incorrect value may be returned.
<P>
For example, if your custom property is linked to the Text type value
"Test," the CustomDocumentProperties property may return an empty value for
this property. If your custom property is linked to the Date type value
"8/1/95," the CustomDocumentProperties property may return the value 1/1/80
instead of the correct value.
<P>
<P><h2>CAUSE</h2>
 
<P>
This behavior occurs if you use the CustomDocumentProperties property to
set the value of a linked custom property and you have not displayed the
Properties dialog box in this file.
<P>
When you add a linked custom property to a file using a Visual Basic macro,
the application that has the file open, for example Microsoft Excel, cannot
resolve the link to return the value. Because of this, the
CustomDocumentProperties property returns a default value (see table
below). When you display the Properties dialog box, (File menu) the
application then loops through the linked properties and updates the
values. Therefore, the linked values displayed on the Custom tab in the
Properties dialog box are always correct.
<P>
The following table shows the default values that are displayed when you
use the CustomDocumentProperties property to return the value for a
linked customproperty that you created using a Visual Basic macro
(assuming you have not displayed the Properties dialog box).
<P>
<PRE>   Property Type    Default Value
   ------------------------------
   Text               Blank
   Date              01/01/80
   Number               0
   Yes or No          False

</PRE><h2>WORKAROUNDS</h2>
 
<P>
To work around this behavior when you create a custom linked property using
the CustomDocumentProperties property, use any of the following methods:
<P>
<P><h3>Method 1</h3>
 
<P>
(Microsoft Excel only) Programmatically display, then dismiss, the
Properties dialog box in your Visual Basic procedure before you access the
value of one of the custom linked properties in your file. For example, you
can use a macro similar to the following to accomplish this.
<P>
Microsoft provides examples of Visual Basic procedures for illustration
only, without warranty either expressed or implied, including but not
limited to the implied warranties of merchantability and/or fitness for a
particular purpose. This Visual Basic procedure is provided 'as is' and
Microsoft does not guarantee that it can be used in all situations.
Microsoft does not support modifications of this procedure to suit customer
requirements for a particular purpose. Note that a line that is preceded by
an apostrophe introduces a comment in the code--comments are provided to
explain what the code is doing at a particular point in the procedure. Note
also that an underscore character (_) indicates that code continues from
one line to the next. You can type lines that contain this character as one
logical line or you can divide the lines of code and include the line-
continuation character. For more information about Visual Basic for
Applications programming style, see the "Programming Style in This Manual"
section in the "Document Conventions" section of the "Visual Basic User's
Guide."
<P>
Note that you must create a reference in your module to the Microsoft
Office 95 Object Library using the References dialog box before you run the
following code.
<P>
<PRE>   Sub Test()
      With ActiveWorkbook.CustomDocumentProperties
         ' Create custom property "LDate" linked to defined name "mydate"
         .Add Name:="LDate", linkToContent:=True, _
           Type:=offPropertyTypeDate, linkSource:="mydate"

         ' Create custom property "LResponse" linked to
         ' defined name "mydate"
         .Add Name:="LResponse", linkToContent:=True, _
           Type:=offPropertyTypeString, linkSource:="response"
      End With

      ' Display Properties dialog box to link custom values
      SendKeys "{ENTER}"
      Application.Dialogs(xlDialogProperties).Show

      ' Display value of property LDate
      MsgBox ActiveWorkbook.CustomDocumentProperties.Item("LDate")
      ' Display value of property LResponse
      MsgBox ActiveWorkbook.CustomDocumentProperties.Item("LResponse")

   End Sub

</PRE><h3>Method 2</h3>
 
<P>
Display the Properties dialog box by clicking Properties on the File menu
after creating the custom linked property and before accessing the value of
the linked property in a Visual Basic macro.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in the Microsoft products
listed at the beginning of this article. We are researching this problem
and will post new information here in the Microsoft Knowledge Base as it
becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
You can use the Properties dialog box to create a custom property in your
application. To link a custom property to specific content in a Microsoft
Excel file, you must define a name in your workbook. The Link To Content
check box is available only if you have a defined name in your workbook.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about using the CustomDocumentProperties Property in
Microsoft Excel, click the Index tab in Microsoft Excel Help, type the
following text
<P>
<PRE>   CustomDocumentProperties

</PRE>double-click the selected text and then double-click
"CustomDocumentProperties Property" to go to the "CustomDocumentProperties
Property" topic.
 
<PRE>Keywords          : kbcode kbprg
Version           : 7.00
Platform          : WINDOWS</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
