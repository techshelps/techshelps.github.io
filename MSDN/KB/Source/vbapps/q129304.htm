

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: Using Automation to Transfer Data to Microsoft Excel </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q129304">
<META NAME="KBModify" CONTENT="1998/02/04">
<META NAME="KBCreate" CONTENT="1995/04/24">
<META NAME="Keywords" CONTENT="kbole IntpOleA kbfaq">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  This article demonstrates how to create two user-defined functions for copying records from a Microsoft Access recordset to a Microsoft Excel spreadsheet and printing the up...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QA1S,QAPN,QDN9,QBXS,QBT6,QBV4,QAW6,QANF,QA5V,QAHP,QAYL,QAUR,QBS0,QAMB P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: Using Automation to Transfer Data to Microsoft Excel</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 4, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q129304</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 2.0, 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
This article demonstrates how to create two user-defined functions for
copying records from a Microsoft Access recordset to a Microsoft Excel
spreadsheet and printing the updated spreadsheet. The functions use OLE
automation to transfer the data to Microsoft Excel.
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
NOTE: Visual Basic for Applications is called Access Basic in version 2.0.
For more information about Access Basic, please refer to the "Building
Applications" manual.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Copying 1 Field from 1 Record</h3>
 
<P>
To take data from a text box on a form and to place it in a cell in an
existing Microsoft Excel spreadsheet, formatting the text as bold, follow
these steps:

<OL><P><LI>Start Microsoft Excel and create a new spreadsheet. Save the spreadsheet
   as C:\Access2\Ole_test.xls.

<P><LI>Start Microsoft Access and open any database. Create a new form not
   based on any table or query. Create a new text box on the form, and set
   the text box's Name property to ToExcel.

<P><LI>Add a command button to the form, without using the Command Button
   Wizard. If the property sheet is not open, open it by clicking the
   Properties button on the toolbar.

<P><LI>Type the following code for the command button's OnClick event
   procedure.
<P>
   In Microsoft Access 2.0:
<P>
<P><PRE>      Dim mysheet As Object, myfield As Variant
</PRE><P>
<P><PRE>      ' Set object variable equal to the OLE object.
      Set mysheet = GetObject("c:\access2\ole_test.xls", "excel.sheet")
</PRE><P>
<P><PRE>      ' Put the value of the ToExcel text box into the cell on the
      ' spreadsheet and make the cell bold.
      myfield = Me!ToExcel
      mysheet.cells(1, 1).value = myfield
      mysheet.cells(1, 1).font.bold = True
</PRE><P>
<P><PRE>      ' Set the Visible property of the sheet to True, save the
      ' sheet, and quit Microsoft Excel.
      mysheet.application.windows("ole_test.xls").visible = True
      mysheet.application.activeworkbook.save
      mysheet.application.activeworkbook.[close]
      mysheet.application.[quit]
</PRE><P>
<P><PRE>      ' Clear the object variable.
      Set mysheet = Nothing
</PRE><P>
<P><PRE>      NOTE: The brackets around the words "close" and "quit" are necessary
      to specify that these are Microsoft Excel methods, rather than a
      Microsoft Access methods.
</PRE><P>
<P><PRE>    In Microsoft Access 7.0:
</PRE><P>
<P><PRE>      Dim mysheet As Object, myfield As Variant
</PRE><P>
<P><PRE>      ' Set object variable equal to the OLE object.
      Set mysheet = GetObject("c:\access2\ole_test.xls", "excel.sheet")
</PRE><P>
<P><PRE>      ' Put the value of the ToExcel text box into the cell on the
      ' spreadsheet and make the cell bold.
      myfield = Me!ToExcel
      mysheet.cells(1, 1).Value = myfield
      mysheet.cells(1, 1).font.bold = True
</PRE><P>
<P><PRE>      ' Set the Visible property of the sheet to True, save the
      ' sheet, and quit Microsoft Excel.
      mysheet.Application.windows("ole_test.xls").Visible = True
      mysheet.Application.activeworkbook.Save
      mysheet.Application.activeworkbook.Close
      mysheet.Application.Quit
</PRE><P>
<P><PRE>      ' Clear the object variable.
      Set mysheet = Nothing
</PRE><P>
  In Microsoft Access 97:
<P>
<P><PRE>    Dim mysheet As Object, myfield As Variant, xlApp As Object
</PRE><P>
<P><PRE>    ' Set object variable equal to the OLE object.
    Set xlApp = CreateObject("Excel.Application")
    ' Set mysheet = GetObject("c:\access2\ole_test.xls", "excel.sheet").
    Set mysheet = xlApp.workbooks.Open("c:\access2\ole_test.xls").Sheets(1)
</PRE><P>
<P><PRE>    ' Put the value of the ToExcel text box into the cell on the
    ' spreadsheet and make the cell bold.
    myfield = Me!ToExcel
    mysheet.cells(1, 1).Value = myfield
    mysheet.cells(1, 1).font.bold = True
</PRE><P>
<P><PRE>    ' Set the Visible property of the sheet to True, save the
    ' sheet, and quit Microsoft Excel.
    mysheet.Application.windows("ole_test.xls").Visible = True
    mysheet.Application.activeworkbook.Save
    mysheet.Application.activeworkbook.Close
    xlApp.Quit
</PRE><P>
<P><PRE>    ' Clear the object variable.
    Set mysheet = Nothing
</PRE>
<P><LI>View the form in Form view. Type any text in the text box, and
   then click the command button.
<P>
</OL><h3>Copying an Entire Recordset</h3>
 
<P>
To create the function for transferring an entire recordset to Microsoft
Excel, follow these steps:

<OL><P><LI>Open the sample database Northwind.mdb (or NWIND.MDB in version 2.0).

<P><LI>Create a new form not based on any table or query.

<P><LI>Add a command button to the form and type the following code for the
   command button's OnClick event procedure:
<P>
   In Microsoft Access 2.0 and 7.0:
<P>
<P><PRE>      Private Sub Command0_Click()
</PRE><P>
<P><PRE>      Dim DB As Database, Rs As Recordset
      Dim i As Integer, j As Integer
      Dim RsSql As String
      Dim CurrentValue As Variant
      Dim CurrentField As Variant
      Dim Sheet As Object
</PRE><P>
<P><PRE>      Set DB = DBEngine.Workspaces(0).Databases(0)
</PRE><P>
<P><PRE>      ' *** Use the following line for Microsoft Access 7.0 only ***
      ' RsSql = "SELECT * FROM [Order Details] WHERE [OrderId]&lt;10249;"
</PRE><P>
<P><PRE>      ' *** Use the following line for Microsoft Access 2.0 only ***
      ' RsSql = "SELECT * FROM [Order Details] WHERE [Order Id]&lt;10001;"
</PRE><P>
<P><PRE>      Set Rs = DB.OpenRecordset(RsSql, DB_OPEN_DYNASET)
      Set Sheet = CreateObject("Excel.Sheet")
</PRE><P>
<P><PRE>      j = 1
</PRE><P>
<P><PRE>      ' Loop through the Microsoft Access field names and create
      ' the Microsoft Excel labels.
      For i = 0 To Rs.Fields.Count - 1
<PRE></PRE>        CurrentValue = Rs.Fields(i).Name
        Sheet.cells(j, i + 1).Value = CurrentValue
      Next i

      j = 2

      ' Loop through the Microsoft Access records and copy the records
      ' to the Microsoft Excel spreadsheet.
      Do Until Rs.EOF
         For i = 0 To Rs.Fields.Count - 1
            CurrentField = Rs(i)
         Sheet.cells(j, i + 1).Value = CurrentField
      Next i

         Rs.MoveNext
         j = j + 1
      Loop

      ' Print the Microsoft Excel spreadsheet.
      Sheet.PrintOut
      Set Sheet = Nothing

    End Sub

   In Microsoft Access 97:

      Private Sub Command0_Click()

      Dim DB As Database, Rs As Recordset
      Dim i As Integer, j As Integer
      Dim RsSql As String
      Dim CurrentValue As Variant
      Dim CurrentField As Variant
      Dim Workbook As Object
      Dim xlApp As Object
      Dim Sheet As Object

      Set DB = DBEngine.Workspaces(0).Databases(0)

      RsSql = "SELECT * FROM [Order Details] WHERE [OrderId]&lt;10249;"

      Set Rs = DB.OpenRecordset(RsSql, DB_OPEN_DYNASET)
      Set xlApp = CreateObject("Excel.Application")
      xlApp.workbooks.Add
      Set Sheet = xlApp.activeworkbook.sheets(1)
      j = 1

      ' Loop through the Microsoft Access field names and create
      ' the Microsoft Excel labels.
      For i = 0 To Rs.Fields.Count - 1
          CurrentValue = Rs.Fields(i).Name
          Sheet.cells(j, i + 1).Value = CurrentValue
      Next i

      j = 2

      ' Loop through the Microsoft Access records and copy the records
      ' to the Microsoft Excel spreadsheet.
      Do Until Rs.EOF
          For i = 0 To Rs.Fields.Count - 1
              CurrentField = Rs(i)
              Sheet.cells(j, i + 1).Value = CurrentField
          Next i
          Rs.MoveNext
          j = j + 1
      Loop

      ' Print the Microsoft Excel spreadsheet.
      Sheet.PrintOut

      ' Close workbook without saving.
      xlApp.activeworkbook.saved = True
      Set Sheet = Nothing
      xlApp.Quit
      Set xlApp = Nothing

    End Sub

</PRE><P><LI>Add the line "Option Explicit" (without the quotation marks) to the form
   module's Declarations section.

<P><LI>Save the form with any name.

<P><LI>View the form in Form view, and then click the command button.
<P>
</OL>NOTE: The above code causes the Microsoft Excel spreadsheet to be printed.
You do not see Microsoft Excel unless you had Microsoft Excel open before
you chose the command button.
 
<PRE>Keywords          : kbole IntpOleA kbfaq
Technology        : kbole
Version           : 2.0 7.0 97
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbinfo</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 4, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
