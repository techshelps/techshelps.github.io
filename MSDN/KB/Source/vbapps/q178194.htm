

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL97: Variant Array of Dates Transfers to Worksheet Incorrectly </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q178194">
<META NAME="KBModify" CONTENT="1998/03/13">
<META NAME="KBCreate" CONTENT="1997/12/16">
<META NAME="Keywords" CONTENT="kbcode kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  When you use a Microsoft Visual Basic for Applications macro (Sub procedure) to transfer an array of dates to a worksheet, the day and month may be transposed.  CAUSE =====  This problem may occur when the following conditions are true:   - The Sho...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBTX,QAKE,QABA,QACE,QBS0,QAVZ,QBVP,QAH6,QBWS,QBVV,QBAO,QA6A,QAB9,QBQU,QBOR P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL97: Variant Array of Dates Transfers to Worksheet Incorrectly</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 13, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q178194</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When you use a Microsoft Visual Basic for Applications macro (Sub
procedure) to transfer an array of dates to a worksheet, the day and month
may be transposed.
<P>
<P><h2>CAUSE</h2>
 
<P>
This problem may occur when the following conditions are true:

<UL><LI>The Short date style, set on the Date tab of the Regional Settings in
   Control Panel, is set to dd-MMM-yy.
<P>
<P><PRE>    -and-
</PRE>
<LI>You stored a date in a variant array.
<P>
<P><PRE>    -and-
</PRE>
<LI>You placed the array in a worksheet.
<P>
</UL><h2>WORKAROUND</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>You can avoid this problem by using the CLng function to convert the date
to a long integer before placing it into a worksheet, as the following
sample macro demonstrates:
<P>
<PRE>   Sub EnterDate()

      Dim vDate() As Variant
      ReDim vDate(1) As Variant

      vDate(0) = DateSerial(1997, 1, 12)   ' This is January 12, 1997
      vDate(1) = DateSerial(1997, 10, 1)   ' This is October 1, 1997

      ' Loop through each element of the array vDate.
      For i = LBound(vDate) To UBound(vDate)
         ' The CLng function is used below to convert the date to long.
         vDate(i) = CLng(vDate(i))
      Next i

      ' Place the array contents into cells A1:B1.
      Range("A1:B1").Value = vDate

      ' Change the cell format so the date is easier to read.
      Range("A1:B1").NumberFormat = "mmmm d, yyyy"

   End Sub

</PRE><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in the Microsoft products
listed at the beginning of this article. We are researching this problem
and will post new information here in the Microsoft Knowledge Base as it
becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To determine what the Short date style is for your computer, follow these
steps:

<OL><P><LI>On the Start menu, point to Settings, and then click Control Panel.

<P><LI>In Control Panel, double-click the Regional Settings icon, and then
   click the Date tab.
<P>
</OL>When you use English (United Kingdom) as your Regional Setting, dd/mm/yy is
the default Short date format.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about arrays, click the Office Assistant, type
"array", click Search, and then click to view "Using Arrays".
<P>
NOTE: If the Assistant is hidden, click the Office Assistant button on the
Standard toolbar. If the Assistant is not able to answer your query, please
see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q176476.htm">Q176476</A></B>
   TITLE     : OFF: Office Assistant Not Answering Visual Basic Questions
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: XL97 vba<BR>
Keywords          : kbcode kbprg<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>
Issue type        : kbbug<BR>
Solution Type     : kbworkaround<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 13, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
