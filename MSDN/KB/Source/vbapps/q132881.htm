

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: How to Base a Report on a Recordset Object </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q132881">
<META NAME="KBModify" CONTENT="1997/08/29">
<META NAME="KBCreate" CONTENT="1995/07/19">
<META NAME="Keywords" CONTENT="kbusage PgmHowTo RptProp">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  This article demonstrates how you can use a Recordset object in Visual Basic for Applications as the record source for a report.  This article assumes that you are familiar with Visual Basic for Applications and with creating Microsoft Access appli...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QA1S,QBXS,QDN9,QBS0,QA5V,QAO4,QAH4,QANO,QAB9,QA5F,QAMA,QA2O,QABA,QBWS V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: How to Base a Report on a Recordset Object</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q132881</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 2.0, 7.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article demonstrates how you can use a Recordset object in Visual
Basic for Applications as the record source for a report.
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to the "Building
Applications with Microsoft Access for Windows 95" manual.
<P>
NOTE: Visual Basic for Applications (used in Microsoft Access for
Windows 95 version 7.0) is called Access Basic in version 2.0. For
more information about Access Basic, please refer to the "Building
Applications" manual.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
In Microsoft Access, you can set a report's RecordSource property only to
table, query, or SQL statement. However, using a report not based on any
table or query and Visual Basic for Applications (or Access Basic) code,
you can set the report's record source to a Recordset object.
<P>
NOTE: For the method described in this article to work successfully, you
must use a report that meets the following conditions:

<UL><LI>The report's Width property is set to 6.5 inches.

<LI>The report header section's Height property is set to 0 inches.

<LI>The report footer section's Height property is set to 0 inches.

<LI>The report detail section's Height property is set to 9 inches.

<LI>In the Print Setup dialog box, the Paper Size is set to 8.5 inches
   by 11 inches.

<LI>In the Print Setup dialog box, the Left, Right, Top, and Bottom margins
   are each set to 1 inch.
<P>
</UL>To create a report based on a Recordset object, follow these steps:

<OL><P><LI>Open the sample database Northwind.mdb (or NWIND.MDB in version 2.0).

<P><LI>Create a new report not based on any table or query, and open the
    report in Design view. Set the following report properties, and then
    save the report as RecordSet Report:
<P>
       Report: RecordSet Report
       ----------------------------------
       RecordSource: &lt;Leave blank&gt;
       Caption: Report Based on Recordset
       Width: 6.5 inches

<P><LI>On the View menu, click Code. In the report module, type the following
    lines in the Declarations section, and then close the module:
<P>
       Option Explicit
       Dim db As Database, rs As Recordset, PageStart As String

<P><LI>Select the report. Set the report's OnOpen property to [Event
    Procedure]. Click the Build button to the right of [Event Procedure],
    and then type the following event procedure in the report module:
<P>
       ' To create a Recordset object based on the Customers table.
       Set db = DBEngine.Workspaces(0).Databases(0)
       Set rs = db.OpenRecordset("Customers")

<P><LI>Set the report's OnClose property to [Event Procedure]. Click the
    Build button to the right of [Event Procedure], and then type the
    following event procedure in the report module:
<P>
       ' To close the recordset when the report has been printed.
       rs.Close
       db.Close

<P><LI>On the Format menu, click Report Header/Footer.

<P><LI>Select the report header section and set its Height property to 0.

<P><LI>Select the report footer section and set its Height property to 0.

<P><LI>Select the report header section. Set the report header section's
    OnFormat property to [Event Procedure]. Click the Build button to the
    right of [Event Procedure], and then type the following event procedure
    in the report module:
<P>
       ' To reset the pointer to the first record in the recordset.
       rs.MoveFirst
       ' To set the unit of measure, font, and font size used in the
       ' report.
       Me.scalemode = 1' twips
       Me.fontname = "Arial"
       Me.FontSize = 12

<P><LI>Select the report detail section and set its Height property to 9
    inches.

<P><LI>Set the report detail section's OnFormat property to [Event Procedure].
    Click the Build button to the right of [Event Procedure], and then type
    the following event procedure in the report module:
<P>
       ' 1. Determines how many pages are needed for the report and
<PRE>       '    sets the NextRecord and MoveLayout properties accordingly.
       ' 2. To save the bookmark to the first record that is printed
       '    on the current page when the FormatCount property is an odd
       '    number.

       Dim i As Integer
          If FormatCount Mod 2 = 1 Then
             If Not rs.eof Then
                PageStart = rs.Bookmark
                i = 0
                Do While Not rs.eof And i &lt; 18
                   i = i + 1
                   rs.MoveNext
                Loop
             End If
          End If
       Me.nextrecord = rs.eof
       Me.movelayout = Not rs.eof

</PRE><P><LI>Set the report detail section's OnPrint property to [Event Procedure].
    Click the Build button to the right of [Event Procedure], and then type
    the following event procedure in the report module:
<P>
       ' To return to the first record for that page.
       Dim i As Integer
       i = 0
       rs.bookmark = PageStart
<P>
       ' To add a border around the entire page.
       Me.Line (0, 0)-(Me.Width, Me.Section(0).Height), , B
<P>
       ' To print a page's worth of data using
       ' .5 inches (720 twips) per record.
       Do While Not rs.eof And i &lt; 18
<PRE>          Me.CurrentY = i * 720
          Me.CurrentX = 0
          Me.Print rs![CompanyName]; ' or [Company Name] in Microsoft
                                     ' Access 2.0
          Me.CurrentX = 1440 * 3
          Me.Print rs![City];
          Me.CurrentX = 1440 * 5
          Me.Print rs![Country];
          i = i + 1
          rs.MoveNext
       Loop

</PRE><P><LI>Preview the report. Note that each record in the recordset is displayed
    in the report.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about the NextRecord property, search for
"NextRecord," and then "NextRecord property" using the Microsoft
Access for Windows 95 Help Index.
<P>
Microsoft Access "Building Applications with Microsoft Access for Windows
95," version 7.0, Chapter 9, "Working with Sets of Records," pages 217-246
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: dynaset unbound prevent<BR>
Keywords          : kbusage PgmHowTo RptProp<BR>
Version           : 2.0 7.0<BR>
Platform          : WINDOWS<BR>
Hardware          : x86<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
