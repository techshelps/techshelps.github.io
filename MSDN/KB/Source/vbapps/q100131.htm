

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: How to Create a Parameter In() Statement </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q100131">
<META NAME="KBModify" CONTENT="1997/08/29">
<META NAME="KBCreate" CONTENT="1993/06/16">
<META NAME="Keywords" CONTENT="kbusage PgmHowTo QryParm">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  This article describes a way to create a query by using the In() operator with multiple values.  The method shown below uses a query that calls a function, which is passed two pa...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA1S,QDN9,QAY5,QBS0,QAHE,QAUD,QAB9,QA5F,QAMA,QBV8,QAPF,QBDM,QA5V,QANY,QAKM P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: How to Create a Parameter In() Statement</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q100131</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 1.0, 1.1, 2.0, 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
This article describes a way to create a query by using the In()
operator with multiple values.
<P>
The method shown below uses a query that calls a function, which is
passed two parameters. The first parameter is the name of a field
that exists in the table on which the query is based. The second
parameter prompts the user to enter a list of values. The function
processes the user's entries as the list of multiple parameters for
the In() operator.
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
NOTE: Visual Basic for Applications is called Access Basic in Microsoft
Access versions 1.x and 2.0. For more information about Access Basic,
please refer to the "Introduction to Programming" manual in Microsoft
Access version 1.x or the "Building Applications" manual in Microsoft
Access version 2.0
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following example is based on the sample database Northwind.mdb (or
Nwind.mdb in versions 1.x and 2.0)

<OL><P><LI>Create a new module with the following two functions:
<P>
<P><PRE>      '************************************************************
      'Declarations section of the module.
      '************************************************************
</PRE><P>
<P><PRE>      Option Explicit
</PRE><P>
<P><PRE>      '============================================================
      ' The GetToken() function defines the delimiter character.
      '============================================================
</PRE><P>
<P><PRE>      Function GetToken (stLn, stDelim)
<PRE></PRE>         Dim iDelim as Integer, stToken as String
         iDelim = InStr(1, stLn, stDelim)
         If (iDelim &lt;&gt; 0) Then
            stToken = LTrim$(RTrim$(Mid$(stLn, 1, iDelim - 1)))
            stLn = Mid$(stLn, iDelim + 1)
         Else
            stToken = LTrim$(RTrim$(Mid$(stLn, 1)))
            stLn = ""
         End If
         GetToken = stToken
      End Function

      '============================================================
      ' The InParam() function is the heart of this article. When
      ' the query runs, this function causes a query parameter
      ' dialog box to appear so you can enter a list of values.
      ' The values you enter are interpreted as if you
      ' had entered them within the parentheses of the In() operator.
      '============================================================
      Function InParam (Fld, Param)
         Dim stToken as String
         'The following two lines are optional, making queries
         'case-insensitive
         Fld = UCase(Fld)
         Param = UCase(Param)
         If IsNull(Fld) Then Fld = ""
         Do While (Len(Param) &gt; 0)
            stToken = GetToken(Param, ",")
            If stToken = LTrim$(RTrim$(Fld)) Then
               InParam = -1
               Exit Function
            Else
               InParam = 0
            End If
         Loop
      End Function

</PRE><P><LI>Close and save the module.

<P><LI>Create a new query based on the Customers table. Drag any fields
   you want to the query grid.

<P><LI>Add the following field to the query grid.
<P>
   NOTE: In the following example, an underscore (_) at the end of a line
   is used as a line-continuation character. Remove the underscore from the
   end of the line when re-creating this example.
<P>
<P><PRE>      FieldName: InParam([CustomerID],[ Enter ID list using commas and no _
<PRE></PRE>                 spaces:])
      Show: False
      Criteria: True

   NOTE: The value InParam(...) shown for the FieldName should be
   entered as one statement on a single line. The InParam() function
   works with Integer fields as well as with Text fields.

   NOTE: In versions 1.x and 2.0, there is a space in [Customer ID]

</PRE><P><LI>On the Query menu, click Parameters. Enter the following parameter with
   a Text data type:
<P>
<P><PRE>      Enter ID list using commas and no spaces:
</PRE>
<P><LI>Click OK and run the query. Note that you are prompted to enter a list
   of parameters. The following message is displayed in the dialog box:
<P>
<P><PRE>      Enter ID list using commas and no spaces:
</PRE>
<P><LI>In versions 97, 7.0, and 2.0, type:
<P>
<P><PRE>      CHOPS,EASTC,FAMIA
</PRE><P>
   In version 1.x type:
<P>
<P><PRE>      BLUEL,CACTP,DOLLC
</PRE><P>
   All records meeting the criteria are displayed.
<P>
</OL>NOTE: One limitation of the In()operator is that it does not support
wildcards, such as * or ?. For example, Microsoft Access cannot run
<P>
<PRE>   IN("A*", "BON*", "CRATE???")

</PRE></OL><h2>REFERENCES</h2>
 
<P>
For more information about the In operator, search the Help Index for "In
operator."
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: queries<BR>
Keywords          : kbusage PgmHowTo QryParm<BR>
Version           : 1.0 1.1 2.0 7.0 97<BR>
Platform          : WINDOWS<BR>
Hardware          : x86<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
