

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL97: How to Populate One ListBox Based On Another ListBox </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q161518">
<META NAME="KBModify" CONTENT="1998/02/27">
<META NAME="KBCreate" CONTENT="1996/12/26">
<META NAME="Keywords" CONTENT="kbcode kbprg xlvbahowto">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  This article contains an example of using the selected item in one ListBox control on a UserForm to determine the list that will populate a second ListBox control.  MORE INFORMATION  Microsoft provides examples of Visual Basic for Applications proc...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QBVR,QBLC,QBPZ,QBWS,QAH4,QAPN,QAHP,QAMN,QBJZ,QBVP,QA7O,QA2Q,QAOE,QAB5 P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL97: How to Populate One ListBox Based On Another ListBox</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 27, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q161518</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article contains an example of using the selected item in one
ListBox control on a UserForm to determine the list that will populate
a second ListBox control.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft support engineers can help explain the
functionality of a particular macro, they will not modify these examples to
provide added functionality, nor will they help you construct macros to
meet your specific needs. If you have limited programming experience, you
may want to consult one of the Microsoft Solution Providers. Solution
Providers offer a wide range of fee-based services, including creating
custom macros. For more information about Microsoft Solution Providers,
call Microsoft Customer Information Service at (800) 426-9400.

<OL><P><LI>Close and save any open workbooks and then open a new workbook.

<P><LI>On Sheet1, enter the following values:
<P>
<PRE>    A1: North Carolina  B1: Charlotte   C1: Charleston  D1: Charlottesville
    A2: South Carolina  B2: Greensboro  C2: Columbia    D2: Norfolk
    A3: Virginia        B3: Raleigh     C3: Greenville  D3: Richmond

</PRE><P><LI>Start the Visual Basic Editor (press ALT+F11).

<P><LI>If the Properties Window is not visible, click Properties on the
    View menu (or press F4).

<P><LI>On the Insert menu, click UserForm.

<P><LI>Draw a ListBox control on the UserForm.

<P><LI>Activate the Properties window (press F4).

<P><LI>Select the RowSource property and type "Sheet1!A1:A3" (without the
    quotation marks).

<P><LI>Draw another ListBox control on the UserForm

<P><LI>Double-click the ListBox1 control (from Step 6) to open up the Code
    Window for the UserForm.

<P><LI>In the module type the following code for the ListBox1 Click event:
<P>
       Private Sub ListBox1_Click()
<P>
<PRE>           'Get the currently selected item
           Select Case ListBox1.Value

               'If North Carolina, set RowSource property of ListBox2
               'to Column B.
               Case "North Carolina"
                   ListBox2.RowSource = "Sheet1!B1:B3"

               'If South Carolina, set RowSource property of ListBox2
               'to Column C.
               Case "South Carolina"
                   ListBox2.RowSource = "Sheet1!C1:C3"

               'If Virginia, set RowSource property of ListBox2 to 
               'Column D.
               Case "Virginia"
                   ListBox2.RowSource = "Sheet1!D1:D3"

           End Select

       End Sub

</PRE><P><LI>Run the UserForm.
<P>
</OL>When you choose one of the items in ListBox1, the list in ListBox2 updates, 
reflecting the choice you made in ListBox1.

<OL><P><LI>Close the UserForm.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For additional information, please see the following article in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q141568.htm">Q141568</A></B>
   TITLE     : XL: Visual Basic Macro to Dynamically Populate a List Box

</PRE></OL>For more information about ListBoxes, click the Index tab in
Visual Basic for Applications Help, type the following text
<P>
<PRE>   listbox

</PRE>and then double-click the selected text to go to the "ListBox control"
topic.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 97 8.00 XL97 dynamic<BR>
Keywords          : kbcode kbprg xlvbahowto<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 27, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
