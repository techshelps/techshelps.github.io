

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRJ: VB Code to Find Blank Rows in Task or Resource Sheet </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q123025">
<META NAME="KBModify" CONTENT="1997/11/24">
<META NAME="KBCreate" CONTENT="1994/11/20">
<META NAME="Keywords" CONTENT="kbcode kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  When you create a Visual Basic, Applications Edition, procedure to manipulate objects in Microsoft Project, you must test for blank rows in task and resource sheets in order to avoid receiving macro errors.  The following examples contain sample co...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QAVX,QAVW,QAW6,QA5V,QAIM,QBS0,QAI4,QAH4,QA5E,QAFF,QAG0,QABH,QAL4,QBXS V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRJ: VB Code to Find Blank Rows in Task or Resource Sheet</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 24, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q123025</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Project 98 for Windows
<LI>Microsoft Project for Windows 95, versions 4.1, 4.1a
<LI>Microsoft Project for Windows, version 4.0
<LI>Microsoft Project for the Macintosh, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
When you create a Visual Basic, Applications Edition, procedure to
manipulate objects in Microsoft Project, you must test for blank rows in
task and resource sheets in order to avoid receiving macro errors.
<P>
The following examples contain sample code you can use to test for blank
rows.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Some objects and collections include blank tasks and resources. The
following sections detail the differences between the Cell, Project, and
Selection objects, and indicate how to test for blank rows.
<P>
Microsoft provides examples of Visual Basic procedures for illustration
only, without warranty either expressed or implied, including but not
limited to the implied warranties of merchantability and/or fitness for a
particular purpose. This Visual Basic procedure is provided 'as is' and
Microsoft does not guarantee that it can be used in all situations.
Microsoft does not support modifications of this procedure to suit customer
requirements for a particular purpose.
<P>
<P><h3>Cell Object</h3>
 
<P>
A Cell object can refer to a cell in a blank row in a task or resource
table. If you attempt to get or set properties, or to apply a method with a
Task or Resource object associated with such a cell, you will receive a
macro error.
<P>
To check for this condition, use a macro similar to the following to test
whether the object refers to Nothing before you manipulate the object.
<P>
<PRE> Sub Test()
 Dim oCell As Cell

    Set oCell = ActiveCell
    If oCell.Task Is Nothing Then   ' This is a blank task row
       ...
    Else                            ' This task exists
       ...
    End If

 End Sub

</PRE><h3>Project Object</h3>
 
<P>
Task and Resource collections of a Project object always include blank
rows. If you attempt to get or set properties, or if you attempt to apply a
method with a Task or Resource object associated with one of these blank
rows, you will receive a macro error.
<P>
When you loop through these collections, you should always test for blank
items. To check for this condition, test whether the object refers to
Nothing before you manipulate the object.
<P>
<PRE> Sub Test()
 Dim oResource As Object

    For Each oResource in ActiveProject.Resources
       If oResource Is Nothing Then   ' This is a blank resource
          ...
       Else                           ' This resource exists
          ...
       End If
    Next oResource

 End Sub

</PRE><h3>Selection Object</h3>
 
<P>
Task and Resource collections of a Selection object behave differently
depending on the contents of the selection. If the selection contains only
blank rows, then its Task and Resource collections evaluate as Nothing.
However, if the selection contains any non-blank rows, then it contains
only non-blank rows, so there is no need to actually test for blank rows.
<P>
<PRE> Sub Test()
 Dim oSel As Selection
 Dim oTask As Object

    Set oSel = ActiveSelection
    If oSel.Tasks Is Nothing Then   ' Selection contains only blank rows
       ...
    Else                            ' Selection contains no blank rows
       For Each oTask In oSel.Tasks
          ...   ' No need to test for blank rows within this loop
       Next oTask
    End If

 End Sub
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 4.00<BR>
Keywords          : kbcode kbprg<BR>
Version           : 4.0 4.1 4.1a 98<BR>
Platform          : MACINTOSH WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 24, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
