

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: Using the DDERequest Method for System Information </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q133045">
<META NAME="KBModify" CONTENT="1998/02/27">
<META NAME="KBCreate" CONTENT="1995/07/24">
<META NAME="Keywords" CONTENT="kbcode kbprg xlwin">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  This article discusses how to use the Visual Basic for Applications DDERequest command to use DDE (dynamic data exchange) to pass information from a specified program to Microsoft Excel.  MORE INFORMATION  The following macro example starts a secon...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QBS0,QBUG,QBUF,QAH4,QA6A,QAYY,QAZ2,QAUD,QAPN,QAH6 P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: Using the DDERequest Method for System Information</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 27, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q133045</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, versions 5.0, 5.0c
<LI>Microsoft Excel for Windows 95, version 7.0
<LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article discusses how to use the Visual Basic for Applications
DDERequest command to use DDE (dynamic data exchange) to pass information
from a specified program to Microsoft Excel.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following macro example starts a second instance of Microsoft Excel,
initiates a DDE channel to the new instance of Microsoft Excel with the
"system" topic, and uses the DDERequest method to obtain information. The
data returned from the DDERequest method is returned as an array.
<P>
Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft support engineers can help explain the
functionality of a particular macro, they will not modify these examples to
provide added functionality, nor will they help you construct macros to
meet your specific needs. If you have limited programming experience, you
may want to consult one of the Microsoft Solution Providers. Solution
Providers offer a wide range of fee-based services, including creating
custom macros. For more information about Microsoft Solution Providers,
call Microsoft Customer Information Service at (800) 426-9400.
<P>
In this example, a second instance of Microsoft Excel is being used as the
second program for the DDE link.
<P>
To use this example, enter the following code in a module sheet:
<P>
<PRE>   Sub Get_Info
      ' Starts a second instance of Microsoft Excel.
      Shell("Excel")
      ' Initiates a DDE Channel System topic of Microsoft Excel.
      Chan=Application.DDEInitiate("Excel", "System")
      ' Creates an array called Info that contains all available
      ' system topics for Microsoft Excel.
      Info=Application.DDERequest(Chan, "SysItems")
      ' Displays message box for all of the available
      ' system topics in Microsoft Excel.
      For X=1 to Ubound(Info)
         Msgbox Info(X)
      Next
      ' Terminates the DDE Channel.
      Application.DDETerminate Chan
   End Sub

</PRE>The system topic of "SysItems" returns a list of available items. Any item
returned by "SysItems" can be used as the item argument in the DDERequest
method. For Microsoft Excel, the list of available topics consists of the
following:

<UL><LI>SysItems
<LI>Topics
<LI>Status
<LI>Formats
<LI>Selection
<LI>Protocols (Microsoft Excel 97 only)
<LI>EditEnvItems (Microsoft Excel 97 only)
<P>
</UL><h2>REFERENCES</h2>
 
<P>
For more information on retrieving system information using Microsoft Excel
and DDE (dynamic data exchange), please see the following article in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../EXCEL/Q33065.htm">Q33065</A></B>
   TITLE:      Excel: Using the REQUEST Macro Command for System
               Information

</PRE>"Visual Basic User's Guide," version 5.0, pages 209-217
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 5.00 5.00c 7.00 8.00 97<BR>
Keywords          : kbcode kbprg xlwin<BR>
Version           : WINDOWS:5.0,5.0c,7.0,97<BR>
Platform          : WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 27, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
