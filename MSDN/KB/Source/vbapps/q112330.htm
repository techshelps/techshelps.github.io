

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: 'For Each Item in List' Doesn't Work </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q112330">
<META NAME="KBModify" CONTENT="1997/09/02">
<META NAME="KBCreate" CONTENT="1994/03/06">
<META NAME="Keywords" CONTENT="kbprg PgmHowTo">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel, the Visual Basic 'For Each...Next' control structure may not function properly if the group argument is a list in a custom dialog box.  MORE INFORMATION  In Microsoft Excel, you can use the 'For Each...Next' control structure to...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QBVP,QA01,QAPN,QAH4,QBXT,QA5V,QAIB,QAB4,QBVR,QAB9,QAE1,QAPF,QAFF,QBXS V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: 'For Each Item in List' Doesn't Work</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 2, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q112330</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, versions 5.0, 5.0c
<LI>Microsoft Excel for Windows NT, version 5.0
<LI>Microsoft Excel for Windows 95, version 7.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Excel, the Visual Basic 'For Each...Next' control structure
may not function properly if the group argument is a list in a custom
dialog box.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
In Microsoft Excel, you can use the 'For Each...Next' control structure to
repeat a group of statements for each element in an array or collection.
<P>
For example, the following code displays dialog boxes containing the
contents of each cell in a selected range:
<P>
<PRE>   For Each mCell In Selection  '"Selection" is the group argument
      MsgBox mCell.Value
   Next

</PRE>If the group argument is a list in a custom dialog box, the For Each
command may fail, and you will receive the following error message:
<P>
<PRE>   Run-time error '10':
   Duplicate definition

</PRE><h2>WORKAROUND</h2>
 
<P>
To avoid this error, set an object equal to the list
<P>
<PRE>   &lt;Object&gt; = &lt;Listname&gt;.List

</PRE>and then use the object in the For Each statement. For example, instead of
<P>
<PRE>   xList = DialogSheets("Dialog1").ListBoxes("List1")
   For Each mItem in xList.List
      &lt;statements&gt;
   Next

</PRE>use
<P>
<PRE>   xList = DialogSheets("Dialog1").ListBoxes("List1")
   mTemp = xList.List
   For Each mItem in mTemp
      &lt;statements&gt;
   Next

</PRE><h3>Visual Basic Code Example</h3>
 
<P>
Microsoft provides examples of Visual Basic procedures for
illustration only, without warranty either expressed or implied,
including but not limited to the implied warranties of merchantability
and/or fitness for a particular purpose. This Visual Basic procedure
is provided 'as is' and Microsoft does not guarantee that it can be
used in all situations. Microsoft does not support modifications of
this procedure to suit customer requirements for a particular purpose.
Note that a line that is preceded by an apostrophe introduces a
comment in the code--comments are provided to explain what the code is
doing at a particular point in the procedure. Note also that an
underscore character (_) indicates that code continues from one line
to the next. You can type lines that contain this character as one
logical line or you can divide the lines of code and include the line
continuation character. For more information about Visual Basic for
Applications programming style, see the "Programming Style in This
Manual" section in the "Document Conventions" section of the "Visual
Basic User's Guide."
<P>
This example shows one way that you can avoid the error associated with
calling a list directly from a For Each statement.
<P>
The following example assumes you have a workbook that contains a
Visual Basic module (Module1) and a dialog sheet (Dialog1). The
dialog sheet contains a single list box (List1).
<P>
In Module1, enter the following subroutine:
<P>
<PRE>'----------------------------------------------------------------------
</PRE>Option Explicit
<P>
<PRE>Sub ForEachListItem()

   'Dimension some variables.
   Dim Alpha As Variant, Foxtrot As Variant, Golf As Variant

   'Set an object name for easy referencing of the list box.
   Set Alpha = DialogSheets("Dialog1").ListBoxes("List1")

   'Add three items to the list.
   Alpha.AddItem "Bravo"
   Alpha.AddItem "Charlie"
   Alpha.AddItem "Delta"

   'Set an object name so that the For Each structure can function
   'properly.
   Golf = Alpha.List

   'Iterate through the loop once for each item in Golf (which is
   'the same as iterating once for each item in the list box).
   For Each Foxtrot In Golf

      'Show the current list item in a message box.
      MsgBox Foxtrot
   Next                                  'repeat until all done
End Sub
'----------------------------------------------------------------------

</PRE>To run the subroutine, position the cursor in the line that reads
"Sub ForEachListItem()," and either press F5 or choose Start from the Run
menu.
<P>
If the For Each line is entered as shown, the subroutine will run
properly and message boxes will display the names of the items in the
list.
<P>
If the For Each line is altered to refer to Alpha.List directly,
without using an intermediary function (in this case, Golf), you will
receive the error message shown above and the message boxes will not
be displayed.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 7.00 5.00<BR>
Keywords          : kbprg PgmHowTo<BR>
Version           : 5.00 5.00c 7.00<BR>
Platform          : WINDOWS<BR>
Issue type        : kberrmsg<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 2, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
