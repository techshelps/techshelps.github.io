

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: Automation Example: Controlling MS Excel from VB </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q124094">
<META NAME="KBModify" CONTENT="1998/02/27">
<META NAME="KBCreate" CONTENT="1994/12/18">
<META NAME="Keywords" CONTENT="kbcode kbinterop kbprg xlvbainfo">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  With Microsoft Visual Basic and Automation, you can use Microsoft Excel Visual Basic for Applications commands from within a Microsoft Visual Basic 3.0 or 4.0 procedure.  MORE INFORMATION  The following code is an example of how to send commands to...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QBS0,QAH4,QA5F,QAMA,QAPN,QAPF,QAGB,QAB9,QAAW,QBVV,QAW6,QA4N P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: Automation Example: Controlling MS Excel from VB</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 27, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q124094</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, versions 5.0, 5.0c
<LI>Microsoft Excel for Windows 95, version 7.0
<LI>Microsoft Excel 97 for Windows
<LI>Microsoft Visual Basic version 3.0, Standard or Professional
   Editions
<LI>Microsoft Visual Basic version 4.0, Standard or Professional
   Editions
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
With Microsoft Visual Basic and Automation, you can use Microsoft Excel
Visual Basic for Applications commands from within a Microsoft Visual Basic
3.0 or 4.0 procedure.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following code is an example of how to send commands to Microsoft Excel
to create a three-dimensional (3-D) column chart from new information,
rotate the chart, and close Microsoft Excel.
<P>
<P><h3>Visual Basic Code Example</h3>
 
<P>
Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft support engineers can help explain the
functionality of a particular macro, they will not modify these examples to
provide added functionality, nor will they help you construct macros to
meet your specific needs. If you have limited programming experience, you
may want to consult one of the Microsoft Solution Providers. Solution
Providers offer a wide range of fee-based services, including creating
custom macros. For more information about Microsoft Solution Providers,
call Microsoft Customer Information Service at (800) 426-9400.
<P>
<PRE>Sub Command1_Click ()

    Dim ExcelApp As Object
    Dim ExcelChart As Object
    Dim ChartTypeVal As Integer
    Dim i as Integer

    '-4100 is the value for the MS Excel constant xl3DColumn. Visual
    'Basic does not understand MS Excel constants, so the value must be
    'used instead.
    ChartTypeVal = -4100

    'Creates OLE object to MS Excel
    '  the registered OLE application name for MS Excel version 97 is
    '  excel.application.8
    Set ExcelApp = CreateObject("excel.application")

    'Sending VB Applications Edition commands to MS Excel via the new OLE
    'object to create a new workbook fill in numbers, create the chart, and
    'rotate the chart.
    ExcelApp.Visible = True
    ExcelApp.Workbooks.Add
    ExcelApp.Range("a1").Value = 3
    ExcelApp.Range("a2").Value = 2
    ExcelApp.Range("a3").Value = 1
    ExcelApp.Range("a1:a3").Select
    Set ExcelChart = ExcelApp.Charts.Add()
    ExcelChart.Type = ChartTypeVal
    For i = 30 To 180 Step 10
        ExcelChart.Rotation = i
    Next

    'You must use square brackets around the Close method of the Workbook
    'object because Close is also a reserved word in Visual Basic.
    'Using the square brackets tells Visual Basic that this is an
    'MS Excel command not a Visual Basic command.
    '  in VB4 remove the brackets [ ] around the word close.
    ExcelApp.ActiveWorkbook.[Close](False)
    ExcelApp.Quit
    Set ExcelChart = Nothing
    Set ExcelApp = Nothing
    End
End Sub

</PRE>To use this subroutine, create a form in Visual Basic and add a single
button to that form. Double-click the button and type the code shown above
in the procedure window. Close the procedure window, and click Start on
the Run menu. To see the rotating chart, click on the button in your form.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: ole automation xl97<BR>
Keywords          : kbcode kbinterop kbprg xlvbainfo<BR>
Version           : WINDOWS:5.0,5.0c,7.0,97<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 27, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
