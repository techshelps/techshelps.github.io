

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL97: Sample Macros to Customize or Replace a Menu Bar </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q162040">
<META NAME="KBModify" CONTENT="1998/02/27">
<META NAME="KBCreate" CONTENT="1997/01/10">
<META NAME="Keywords" CONTENT="kbcode kbprg kbualink97 xlvbahowto">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel 97, menu bars and toolbars are referred to as the same programmable object type (a command bar). You can use Visual Basic for Applications to manipulate the built-in command bars in Microsoft Excel 97. This article contains the f...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QANS,QAF0,QAFF,QAB9,QBV8,QBVP,QABA,QAVI,QBS0,QA4H,QAVX,QAVW,QAH4,QARW,QAPF P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL97: Sample Macros to Customize or Replace a Menu Bar</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 27, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q162040</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Excel 97, menu bars and toolbars are referred to as the same
programmable object type (a command bar). You can use Visual Basic for
Applications to manipulate the built-in command bars in Microsoft Excel 97.
This article contains the following macro examples that customize or
replace the built-in Worksheet menu bar:

<UL><LI>Adding a custom command bar to the built-in Worksheet menu bar

<LI>Creating a custom command bar item

<LI>Deleting a custom command bar item

<LI>Creating a new command bar

<LI>Replacing the built-in Worksheet command bar

<LI>Restoring the built-in Worksheet command bar

<LI>Deleting the custom command bar
<P>
</UL><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft support engineers can help explain the
functionality of a particular macro, they will not modify these examples to
provide added functionality, nor will they help you construct macros to
meet your specific needs. If you have limited programming experience, you
may want to consult one of the Microsoft Solution Providers. Solution
Providers offer a wide range of fee-based services, including creating
custom macros. For more information about Microsoft Solution Providers,
call Microsoft Customer Information Service at (800) 426-9400.
<P>
<P><h3>Adding a Custom Command Bar to the Built-in Worksheet Menu Bar</h3>
 
<P>
The following subroutines add a command bar named "Test" to the worksheet
menu bar for all sheets in the active workbook. The examples use
identification numbers for built-in and custom command bar controls. The
identification number for a particular control is used as an argument for
the Add method.
<P>
For additional information, please see the following articles in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q159466.htm">Q159466</A></B>
   TITLE     : XL97: List of ID Numbers for Built-In Command Bar Controls

   ARTICLE-ID: <B><A HREF="../vbapps/Q159619.htm">Q159619</A></B>
   TITLE     : XL97: Sample Macros to Control Menus and Submenus

</PRE>NOTE: Type an ampersand (&amp;) before the character you want to use as the
access key. In this example, when the command bar is displayed, the letter
"T" in "Test" is underlined. You can use each letter only once per menu.
<P>
<P><h3>Creating a Custom Command Bar Item</h3>
 
<P>
The following subroutine creates a custom command item:
<P>
<PRE>   Sub CustomBar()

       Dim newpopup As Object
       Dim newmenu As Object

       Set newpopup = Application.CommandBars("worksheet menu bar") _
           .Controls.Add(msoControlPopup)

       Set newmenu = newpopup.Controls.Add(msoControlPopup, 1)

       With newmenu
           .Caption = "My New Menu"
           .Controls.Add Type:=msoControlButton, Id:=2949, before:=1
           .Controls(1).Caption = "Button 1"
           .Controls(1).OnAction = "Button_1"
       End With

       With newpopup
           .Caption = "&amp;Test"
           .Controls.Add Type:=msoControlButton, Id:=2949, before:=2
           .Controls(2).Caption = "Button 2"
           .Controls(2).OnAction = "Button_2"
           .Controls.Add Type:=msoControlButton, Id:=2950, before:=3
           .Controls(3).Caption = "Button 3"
           .Controls(3).OnAction = "Button_3"
           .Controls.Add Type:=msoControlButton, Id:=2949, before:=4
           .Controls(4).Caption = "Delete this Menu"
           .Controls(4).OnAction = "Delete_menu"
        End With

   End Sub

'The following message boxes are used by each button on the new command bar
' named "&amp;test"

   Sub button_1()
       MsgBox "You Clicked Button 1!"
   End Sub

   Sub button_2()
       MsgBox "You Clicked Button 2!"
   End Sub

   Sub button_3()
       MsgBox "You Clicked Button 3!"
   End Sub

</PRE><h3>Deleting a Custom Command Bar Item</h3>
 
<P>
The following subroutine deletes a custom command bar item:
<P>
<PRE>   Sub Delete_menu()

       For Each Bar In CommandBars("worksheet menu bar").Controls
           If Bar.Caption = "&amp;Test" Then Bar.Delete
       Next Bar

   End Sub

</PRE><h3>Creating a New Command Bar</h3>
 
<P>
The following subroutine creates a custom command bar:
<P>
<PRE>   Sub New_Command_Bar()

       Dim newbar As Object
       Dim newbar2 As Object

       Application.CommandBars.Add "My command bar", , True

       Set newbar = Application.CommandBars("My command bar") _
           .Controls.Add(msoControlPopup, Before:=1)

       With newbar
           .Caption = "&amp;File"
           .Controls.Add(msoControlButton, Id:=2520, _
               Before:=1).Caption = "New"
           .Controls.Add(msoControlButton, Id:=23, _
               Before:=2).Caption = "Open"
           .Controls.Add(msoControlButton, Id:=3, _
               Before:=3).Caption = "Save"
           .Controls.Add(msoControlButton, Id:=2949, Before:=4).Caption = _
               "Restore The Worksheet Menu Bar"
           .Controls("Restore the Worksheet Menu Bar").OnAction = _
               "Restore"
       End With

       Set newbar2 = Application.CommandBars("My command bar") _
           .Controls.Add(msoControlPopup, Before:=2)

       With newbar2
           .Caption = "&amp;My Edit"
           .Controls.Add Type:=msoControlButton, Id:=2949, Before:=1
           .Controls(1).Caption = "Button 1"
           .Controls(1).OnAction = "button"
       End With
   End Sub

'The following sub-routine is run when button 1 is clicked from the Edit
'command bar.

   Sub button()

       MsgBox "You Clicked Button 1"

   End Sub

</PRE><h3>Replacing the Built-in Worksheet Command Bar</h3>
 
<P>
The following subroutines replace the built-in Worksheet menu bar with a
custom menu bar:
<P>
<PRE>   Sub ShowNewBar()

       Application.CommandBars("My command bar").Visible = True

   End Sub

</PRE><h3>Restoring the Built-in Worksheet Command Bar</h3>
 
<P>
The following line of code restores the built-in Worksheet menu bar:
<P>
<PRE>   Sub restore()
       Application.CommandBars("My command bar").Visible = False
   End Sub

</PRE><h3>Deleting the Custom Command Bar</h3>
 
<P>
The following subroutine deletes a custom command bar:
<P>
<PRE>   Sub DeleteNewBar()

       Application.CommandBars("My command bar").Delete

   End Sub

</PRE><h2>REFERENCES</h2>
 
<P>
For more information about command bars, click the Index tab in Microsoft
Excel 97 Help, type the following text
<P>
<PRE>   Command Bar

</PRE>and then double-click the selected text to go to the "Command Bars" topic.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: XL97 command bar menu item toolbar<BR>
Keywords          : kbcode kbprg kbualink97 xlvbahowto<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 27, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
