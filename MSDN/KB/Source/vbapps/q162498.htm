

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PPT97: Sample Code to Add a Media Object to a Running Slide Show </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q162498">
<META NAME="KBModify" CONTENT="1998/03/13">
<META NAME="KBCreate" CONTENT="1997/01/22">
<META NAME="Keywords" CONTENT="kbcode kbmacro kbprg kbdta kbdtacode kbpptvba">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  This article provides a sample Microsoft Visual Basic for Applications macro (Sub procedure) that inserts a media object into a slide show and then places the object. The object is placed in the center of the slide.  NOTE: This macro must be run fr...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAH4,QAPN,QBWS,QAJM,QAKE,QBVQ,QAW6,QDKP,QA5F,QAYS,QAIV,QAEB,QABA,QAVZ P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PPT97: Sample Code to Add a Media Object to a Running Slide Show</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 13, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q162498</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft PowerPoint 98 Macintosh Edition
<LI>Microsoft PowerPoint 97 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article provides a sample Microsoft Visual Basic for Applications
macro (Sub procedure) that inserts a media object into a slide show and
then places the object. The object is placed in the center of the slide.
<P>
NOTE: This macro must be run from an on-screen slide show. You can create
an action button to run the macro, or you can change the action settings
of another AutoShape so that it runs the macro when you click on the
AutoShape.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE><h3>Sample Visual Basic Procedure</h3>
 
<P>
<PRE>   Sub AddMedia()

      ' Used for error trapping.
      On Error Resume Next
      Err.Clear

      ' The slide number to change.
      Const longSlideNumber As Long = 1

      ' Holds the path to the media object.
      Const stringPath = "c:\temp\"

      ' Holds the name of the file.
      Const stringName = "test.avi"

      ' Used to store an object reference to a shape.
      Dim shapeAVI As Shape

      Dim sswShow As SlideShowWindow

      ' Variables to store the slide height and width.
      Dim longSlideHeight As Long
      Dim longSlideWidth As Long

      ' Assign sswShow to the current show.
      Set sswShow = ActivePresentation.SlideShowWindow

      ' Check if they are in slide show.
      If Err.Number &lt;&gt; 0 Then
         MsgBox "This macro must be run from within a slide show. " _
           &amp; "Modify the Action Settings of an object to run this macro." _
           , vbCritical, "Assign Macro to a Button"
         End
      End If

      ' Create the object.
      With ActivePresentation.Slides(longSlideNumber).Shapes
         Set shapeAVI = .AddMediaObject(stringPath &amp; stringName, 0, 0)
      End With

      ' Set the play settings for the movie.
      With shapeAVI.AnimationSettings
         .PlaySettings.PlayOnEntry = msoTrue
         .AdvanceMode = ppAdvanceOnTime
         .AdvanceTime = 0
      End With

      ' Get the slide height and width.
      longSlideHeight = ActivePresentation.PageSetup.SlideHeight
      longSlideWidth = ActivePresentation.PageSetup.SlideWidth

      ' Center the media object horizontally.
      If shapeAVI.Width &lt;= longSlideWidth Then
         shapeAVI.Left = ((longSlideWidth - shapeAVI.Width) \ 2)
      End If

      ' Center the media object vertically.
      If shapeAVI.Height &lt;= longSlideHeight Then
         shapeAVI.Top = ((longSlideHeight - shapeAVI.Height) \ 2)
      End If

      ' Refresh the slide to get the animation to play.
      sswShow.View.GotoSlide (longSlideNumber)

   End Sub

</PRE><h2>REFERENCES</h2>
 
<P>
For more information about creating Visual Basic for Applications macros,
click the Office Assistant in Microsoft PowerPoint, type "how to create a
macro," click Search, and then click to view "Create a macro in Visual
Basic Editor."
<P>
For more information about running Visual Basic for Applications macros,
click the Office Assistant in Microsoft PowerPoint, type "how to run a
macro," click Search, and then click to view "Run a macro."
<P>
NOTE: If the Assistant is hidden, click the Office Assistant button on the
Standard toolbar. If the Assistant is not able to answer your query, please
see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q176476.htm">Q176476</A></B>
   TITLE     : OFF: Office Assistant Not Answering Visual Basic Questions

</PRE>For more information about getting help with Visual Basic for Applications,
please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q163435.htm">Q163435</A></B>
   TITLE     : VBA: Programming Resources for Visual Basic for
               Applications
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 97 8.00 kbmacro kbpptvba ppt8 vba vbe ppt8 powerpnt
<P>

Keywords          : kbcode kbmacro kbprg kbdta kbdtacode kbpptvba<BR>
Version           : WINDOWS:97; MACINTOSH:98<BR>
Platform          : MACINTOSH WINDOWS<BR>
Hardware          : MAC x86<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 13, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
