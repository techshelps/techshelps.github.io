

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: Macro to Search for Cell Formats: Font, Border, and Interior </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q142122">
<META NAME="KBModify" CONTENT="1998/02/03">
<META NAME="KBCreate" CONTENT="1996/01/04">
<META NAME="Keywords" CONTENT="kbcode kbprg kbualink97 PgmHowto">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel, there is no built-in feature to allow you to search on the characteristics of a cell. However, you can create a Microsoft  Visual Basic for Applications procedure that allows you to search this way.  MORE INFORMATION  Microsoft ...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QADF,QAPN,QBVP,QAIB,QAG9,QAPG,QAW6,QBS0,QBJZ,QAVX,QATM,QAH4,QBXT,QAVW,QAPF P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: Macro to Search for Cell Formats: Font, Border, and Interior</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 3, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q142122</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel for the Macintosh versions 5.0, 5.0a
<LI>Microsoft Excel 98 Macintosh Edition
<LI>Microsoft Excel for Windows, versions 5.0, 5.0c
<LI>Microsoft Excel for Windows 95, version 7.0
<LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Excel, there is no built-in feature to allow you to search
on the characteristics of a cell. However, you can create a Microsoft 
Visual Basic for Applications procedure that allows you to search this way.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>Use the following steps to create a sample Visual Basic macro that selects 
a range and searches it for specific formatting.

<OL><P><LI>Open a new workbook.

<P><LI>Enter the following on Sheet1.
<P>
<PRE>     A1: 1  B1: 2   C1: 3   D1: 4

</PRE><P><LI>Format cell B1 with bold formatting by clicking the Bold button on
   the Formatting toolbar.

<P><LI>Format cell C1 with a single underline by clicking Cells on the
   Format menu, clicking the Font tab, and then clicking Single in the
   Underline drop-down.

<P><LI>Format cell D1 with a double underline by clicking Cells on the
   Format menu, clicking the Font tab, and clicking Double from the
   Underline drop-down. Also, format this cell as Italic by clicking the
   Italic button on the Formatting toolbar.

<P><LI>Insert a new module sheet.
<P>
   In Microsoft Excel 97, click the Tools menu, point to Macro, and
   click Visual Basic Editor. Then, click Module on the Insert menu.

<P><LI>Type the following macro on the module sheet:
<P>
<PRE>      Sub Checking_the_Format()

         Range("A1:D1").Select

         ' Use a loop to check each cell in the selection.
         For Each cel In Selection

         ' The next line tests for the bold property of the font.

         If cel.Font.Bold = True Then MsgBox "This cell is bold: " _
            &amp; cel.Address

         ' The following line will display the font style of the current
         ' it is not bold or italic.

         If cel.Font.FontStyle &lt;&gt; "bold" Or _
            cel.Font.FontStyle &lt;&gt; "italic" Then _
            MsgBox cel.Font.FontStyle

         ' This example will check the underline of the font in the
         ' current cell to see if it is a single line (xlsingle).

         If cel.Font.Underline = xlSingle Then _
            MsgBox "Here is the single underline: " _
            &amp; cel.Address

         ' Finish the loop.
         Next cel

         ' The next line sets the weight and color of the left border of
         ' the current selection.

         With Range("B3").Borders(xlLeft)
            .Weight = xlMedium
            .ColorIndex = 3
         End With

         Range("A10").Select

      End Sub

</PRE><P><LI>Return to Sheet1 and run the macro.
<P>
</OL>When the macro finds the specified formatting, the cell address appears in 
a message box.
<P>
Note that although this macro displays message boxes to indicate the result 
of the code, you can customize this code to perform a variety of actions 
when the correct cells are located.
<P>
<P><h3>Testing for Properties of the Font Object</h3>
 
<P>
The following tables describe properties of the Font object that you can
test for in a Visual Basic macro.
<P>
Properties That Return a Boolean Value (True Or False):
<P>
<PRE>   For this property True means this  False means this
   -------------------------------------------------------------

   Bold              Font is bold     Font is not bold

   Italic            Font is italic   Font is not italic

   OutlineFont       Font is outline  Font is not outline Font
                     font

   Shadow            Font is shadow   Font is not shadow Font
                     font

   Strikethrough     Font is          Font is not formatted with
                     formatted with   strike through
                     strike through

   Subscript         Font is          Font is not subscript
                     subscript

   Superscript       Font is          Font is not superscript
                     superscript

</PRE></OL>Properties That Return a String or Numeric Value:
<P>
<PRE>   For this property      Test for this value
   ------------------------------------------------------------------

   Color                  The font color as an RGB value

   ColorIndex             The color as an index number from
                          the current color palette

   FontStyle              The font style as a string (for
                          example, "Bold")

   Name                   The name for the font (for example, "Arial")

   Size                   The size of the font (for example, 12)

   Underline              The type of underline applied to text in a
                          the cell (for example, "xlSingle")

</PRE><h3>Testing for Properties of the Border Object</h3>
 
<P>
<PRE>   For this property  Test for this value
   -----------------------------------------------------------------

   Color              The border color as an RGB value
   ColorIndex         The color as index of the current color palette
   Linestyle          The line style (for example "xlContinuous")
   Weight             The weight of the line (for example "xlHairline")

</PRE><h3>Testing for Properties of the Interior Object</h3>
 
<P>
The Interior Object is used to detect the color or pattern in the cell
itself. You can test the Interior object for the following properties.
<P>
<PRE>   For this property  Test for this value
   ---------------------------------------------------------------

   Color              The primary color
   ColorIndex         The color as index of current color palette
   Pattern            The pattern (for example, "xlChecker")
   PatternColor       The pattern color as a RGB value
   PatternColorIndex  The color as index of current color palette

</PRE><h2>REFERENCES</h2>
 
<P>
In Microsoft Excel 7.0 and 97, to find more information about the Font
object, the Border object, or the Interior object, click Answer Wizard
on the Help menu and type the appropriate word:
<P>
<PRE>   Font Object

   -or-

   Border Object

   -or-

   Interior Object

</PRE>For more information in Microsoft Excel 5.0 about the Font object, the
Border object, or the Interior object, choose the Search button in
Visual Basic Help type the appropriate word:
<P>
<PRE>   Font Object

   -or-

   Border Object

   -or-

   Interior Object
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 5.00 5.00a 5.00c 7.00 8.00 97 XL97<BR>
Keywords          : kbcode kbprg kbualink97 PgmHowto<BR>
Version           : WINDOWS:5.0,5.0c,7.0,97; MACINTOSH:5.0,5.0a,98<BR>
Platform          : MACINTOSH WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 3, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
