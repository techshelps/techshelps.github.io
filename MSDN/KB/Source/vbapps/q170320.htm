

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OL97: How to Programmatically Import Outlook Items from Access </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q170320">
<META NAME="KBModify" CONTENT="1998/03/02">
<META NAME="KBCreate" CONTENT="1997/06/18">
<META NAME="Keywords" CONTENT="kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  This article provides an overview and example code for creating Microsoft Outlook 97 Contacts from information stored in a Microsoft Access 97 database. The sample code below would be run from an Access 97 global module and provides a starting poin...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVO,QBUP,QA1S,QAPN,QAH4,QAYC,QBXS,QDN9,QAW6,QAPF,QBFY,QAIF,QAA1,QAVZ,QABA P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>OL97: How to Programmatically Import Outlook Items from Access</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 2, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q170320</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Outlook 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article provides an overview and example code for creating Microsoft
Outlook 97 Contacts from information stored in a Microsoft Access 97
database. The sample code below would be run from an Access 97 global
module and provides a starting point for the development of a complete
solution.
<P>
NOTE: There is also an overview and separate code example available on the
Microsoft web site at the following location. It is the first example in
the whitepaper.
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/officedev/articles/sampauto.htm">http://www.microsoft.com/officedev/articles/sampauto.htm</A></B>

</PRE>NOTE: Because the Microsoft Web site is constantly updated, the site
address may change without notice. If this occurs, link to the Microsoft
home page at the following address:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/">http://www.microsoft.com/</A></B>

</PRE><h2>MORE INFORMATION</h2>
 
<P>
Outlook 97's Import and Export feature does not allow you to import or
export information in user-defined fields (or properties). To import
information into these fields, you need to create a programming solution
that uses Automation to convert the information.
<P>
The following example code specifically converts information from Microsoft
Access into newly created Outlook Contacts, using Data Access Objects (DAO
3.5). With modifications, you can use this code as a basis for creating
other types of Outlook items, such as appointments, notes, tasks, and such.
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE><h3>Programming Considerations</h3>
 

<UL><LI>The code example below uses the Northwind database included with
   Microsoft Office 97. If you installed Office to a location other than
   the default, be sure to change the path to the database in the code.

<LI>You need to set references to DAO 3.5 and the Outlook 8.0 Object
   Library.

<LI>The fields types used in this example are text, in both Access and
   Outlook. To convert other types of fields, you must modify the code
   appropriately.

<LI>The contacts are automatically placed in Outlook's default Contact
   folder, which is at the same level as the Inbox that receives incoming
   mail.

<LI>The CreateItem method used in this example creates a new Outlook
   contact using the default form for the default contact folder. If you
   created a custom Outlook Contact form, you must set the MessageClass
   field for each item to the name of your custom form.

<LI>If you programmatically set a contact's e-mail address field, the e-mail
   addresses do not automatically resolve.
<P>
</UL>For more information about programmatically resolving e-mail addresses,
please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   Article-ID: <B><A HREF="../vbapps/Q169750.htm">Q169750</A></B>
   Title     : OL97: How to Programmatically Resolve a Contact's
               E-mail Address

</PRE><h3>Example Code</h3>
 
<P>
<PRE>   Sub ExportAccessContactsToOutlook()

   'Set up DAO Objects:
   Dim oDataBase As Object
   Dim rst As Object
   Set oDataBase = OpenDatabase _
     ("c:\Program Files\Microsoft Office\Office\Samples\Northwind.mdb")
   Set rst = oDataBase.OpenRecordset("Customers")

   'Set up Outlook Objects:
   Dim olns As Object               ' Outlook Namespace
   Dim cf As Object                 ' Contact folder
   Dim c As Object                  ' Contact Item
   Dim Prop As Object               ' User property
   Dim ol As New Outlook.Application
   Set olns = ol.GetNamespace("MAPI")
   Set cf = olns.GetDefaultFolder(olFolderContacts)

   With rst
      .MoveFirst
      ' Loop through the Access records
      Do While Not .EOF
         ' Create a new Contact item
         Set c = ol.CreateItem(olContactItem)
         ' Specify which Outlook form to use:
         ' Change "IPM.Contact" to "IPM.Contact.&lt;formname&gt;" if you've
         ' created a custom Contact form in Outlook.
         c.MessageClass = "IPM.Contact"
         ' Create all built-in Outlook fields
         If ![CompanyName] &lt;&gt; "" Then c.CompanyName = ![CompanyName]
         If ![ContactName] &lt;&gt; "" Then c.FullName = ![ContactName]
         ' Create the first user property (UserField1)
         Set Prop = c.UserProperties.Add("UserField1", olText)
         ' Set its value
         If ![CustomerID] &lt;&gt; "" Then Prop = ![CustomerID]
         ' Create the first user property (UserField2)
         Set Prop = c.UserProperties.Add("UserField2", olText)
         ' Set it's value, and so on....
         If ![Region] &lt;&gt; "" Then Prop = ![Region]
         ' Save the contact
         c.Save
         .MoveNext
      Loop
   End With
   End Sub

</PRE><h2>REFERENCES</h2>
 
<P>
For more information about creating solutions with Microsoft Outlook 97,
please see the following articles in the Microsoft Knowledge Base:
<P>
<PRE>   Article-ID: <B><A HREF="../vbapps/Q166368.htm">Q166368</A></B>
   Title     : OL97: How to Get Help Programming with Outlook

   Article-ID: <B><A HREF="../vbapps/Q170783.htm">Q170783</A></B>
   Title     : OL97: Q&amp;A: Questions about Customizing or
               Programming Outlook
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: OutSol OutSol97<BR>
Keywords          : kbcode<BR>
Version           : 97<BR>
Platform          : WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 2, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
