

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the OnKey Method in a Visual Basic Macro </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q133136">
<META NAME="KBModify" CONTENT="1997/09/03">
<META NAME="KBCreate" CONTENT="1995/07/25">
<META NAME="Keywords" CONTENT="kbprg PgmHowTo xlwin kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  You can use the OnKey method in conjunction with SendKeys to allow a Visual Basic, Applications Edition, macro to send keystrokes to Microsoft Excel as if the user had entered information.  The  More Information  section of this article contains a ...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QBS0,QAH4,QA2B,QAPN,QAUD,QAB9,QAMA,QBVV,QAH6,QAFF,QAA1,QA5F,QBXT,QBWP V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Using the OnKey Method in a Visual Basic Macro</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 3, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q133136</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, versions 5.0, 5.0c
<LI>Microsoft Excel for Windows NT, version 5.0
<LI>Microsoft Excel for Windows 95, version 7.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
You can use the OnKey method in conjunction with SendKeys to allow a Visual
Basic, Applications Edition, macro to send keystrokes to Microsoft Excel as
if the user had entered information.
<P>
The "More Information" section of this article contains a sample procedure
demonstrating this method.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides examples of Visual Basic procedures for illustration
only, without warranty either expressed or implied, including but not
limited to the implied warranties of merchantability and/or fitness for a
particular purpose. This Visual Basic procedure is provided 'as is' and
Microsoft does not guarantee that it can be used in all situations.
Microsoft does not support modifications of this procedure to suit customer
requirements for a particular purpose.
<P>
<PRE>Sub TestIt()

   ' This line sets up the F13 key to run the Continue macro. This is a
   ' useful designator for this purpose: many keyboards don't have F13
   ' keys, but Microsoft Excel will still recognize it when it's sent with
   ' SendKeys.

   Application.OnKey "{F13}", "Continue"

   ' This line sends the F2 key to activate the Formula bar. SHIFT+END
   ' selects the entire formula, and the F9 key converts the formula to a
   ' value. The ENTER key enters the value in the active cell, and the F13
   ' key runs the Continue macro.

   Application.SendKeys ("{F2}+{End}{F9}~{F13}")

End Sub

Sub Continue()

   'This line sets the F13 key back to a Null value.
   Application.OnKey "{F13}"

End Sub

</PRE>The Continue macro is important. Without a second argument, the OnKey
method undefines the key indicated, restoring it to its previous function.
If this is not done, any time the user presses F13 (and a macro isn't
running), the macro Continue will begin execution.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For information about using the ONKEY macro function in earlier versions of
Microsoft Excel, query on the following article in the Microsoft Knowledge
Base:
<P>
<PRE>   ARTICLE ID:  <B><A HREF="../EXCEL/Q58951.htm">Q58951</A></B>
   TITLE:  ON.KEY() in Excel
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 7.00<BR>
Keywords          : kbprg PgmHowTo xlwin kbcode<BR>
Version           : 5.00 5.00c 7.00<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 3, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
