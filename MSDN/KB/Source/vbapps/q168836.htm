

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Search for the Last Occurrence of a Substring </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q168836">
<META NAME="KBModify" CONTENT="1997/09/30">
<META NAME="KBCreate" CONTENT="1997/05/21">
<META NAME="Keywords" CONTENT="VB4ALL VB4WIN vb5all vb5howto VBKBProgramming vbwin GnrlVb kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  The InStr() function provides a method to search for the first occurrence of one string (substring) inside another string. However, there is no intrinsic method to search for the last occurrence of a substring. This article provides a sample functi...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAH4,QAML,QA5F,QATX,QAMA,QDL9,QBWQ,QBWO,QBWN,QAY5,QAPN,QAHH,QAO4,QAUD P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Search for the Last Occurrence of a Substring</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 30, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q168836</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Control Creation, Learning, Professional, and
   Enterprise Editions for Windows, version 5.0
<LI>Microsoft Visual Basic Standard, Professional, and Enterprise Editions,
   16-bit and 32-bit, for Windows, version 4.0
<LI>Microsoft Visual Basic for Applications (VBA) included with:
   - Microsoft Access versions 7.0, 97
   - Microsoft Excel, versions 7.0, 97 for Windows
   - Microsoft Word 97 for Windows
   - Microsoft PowerPoint 97 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The InStr() function provides a method to search for the first occurrence
of one string (substring) inside another string. However, there is no
intrinsic method to search for the last occurrence of a substring. This
article provides a sample function written in Basic.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
There are two main methods of searching for the last occurrence of a
substring:

<OL><P><LI>Searching from the right-hand end of the string and stopping when the
   first match is found.

<P><LI>Searching from the left-hand end of the string until no more matches are
   found, and remembering the location of the last match.
<P>
</OL>While the first method would seem the logical approach (and would be in a
language such a C that allowed direct pointer manipulation), the second
method is nearly always faster in Visual Basic using the InStr() function
to search forward through the string.
<P>
This is because InStr() is highly optimized and many orders of magnitude
faster than emulating the functionality via looping through the string
using the Mid$() function to extract each character.
<P>
The code example below demonstrates the second method.
<P>
WARNING: Microsoft provides code/macro examples for illustration only,
without warranty either expressed or implied, including but not limited to
the implied warranties of merchantability and/or fitness for a particular
purpose. This code is provided 'as is' and Microsoft does not guarantee
that the following code can be used in all situations. Microsoft does not
support modifications of the code to suit customer requirements for a
particular purpose.
<P>
NOTE: In versions of Basic that don't support the "_" line continuation
character, the split lines must be entered on a single line when typing the
code into the module.
<P>
<P><h3>Step-by-Step Example</h3>
 

<OL><P><LI>Create a new project and add a module:
<P>
<P><PRE>      Function InStrR(ByVal sTarget As String, _
<PRE></PRE>                      ByVal sFind As String, _
                      ByVal iCompare As Long) As Long
      Dim P As Long, LastP As Long, Start As Long
        P = InStr(1, sTarget, sFind, iCompare)
        Do While P
          LastP = P
          P = InStr(LastP + 1, sTarget, sFind, iCompare)
        Loop
        InStrR = LastP
      End Function

</PRE><P><LI>In Visual Basic only, run the project and when the default Form1 is
   displayed, pause it.

<P><LI>To test this function, type the following line in the Debug/Immediate
   window, and then press the ENTER key:
<P>
<P><PRE>      ?InStrR("The quick brown fox jumped over the lazy dog", "the", 0)
</PRE><P>
   You should see 33 as the result.
<P>
   Values for iCompare can be:
<P>
<PRE>      0   Binary comparison
      1   Text comparison
      2   Database Comparison (Microsoft Access)

</PRE></OL><h2>REFERENCES</h2>
 
<P>
Microsoft Visual Basic online Help topic "InStr."
 
<PRE>Keywords          : VB4ALL VB4WIN vb5all vb5howto VBKBProgramming vbwin GnrlVb kbprg
Technology        : kbvba
Version           : WINDOWS:4.0 5.0
Platform          : WINDOWS
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 30, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
