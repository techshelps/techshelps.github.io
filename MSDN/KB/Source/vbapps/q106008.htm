

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: Open Subroutines Run Before Referenced Subroutines </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q106008">
<META NAME="KBModify" CONTENT="1998/02/02">
<META NAME="KBCreate" CONTENT="1993/10/28">
<META NAME="Keywords" CONTENT="kbcode kbprg PgmOthr">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel, if you call a subroutine (for example, TestSub) from another Visual Basic subroutine, Microsoft Excel will search for the subroutine in the current workbook and then it will search any libraries and/or workbooks to which the cur...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QAFF,QBWS,QBS0,QDNM,QA01,QAB3,QBJZ,QASR,QAGB,QAVZ,QAY2 P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: Open Subroutines Run Before Referenced Subroutines</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 2, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q106008</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, versions 5.0, 5.0c
<LI>Microsoft Excel for the Macintosh, versions 5.0, 5.0a
<LI>Microsoft Excel for Windows 95, versions 7.0, 7.0a
<LI>Microsoft Excel 97 for Windows
<LI>Microsoft Excel 98 Macintosh Edition
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Excel, if you call a subroutine (for example, TestSub) from
another Visual Basic subroutine, Microsoft Excel will search for the
subroutine in the current workbook and then it will search any libraries
and/or workbooks to which the current workbook has references (these
references will be searched in top-to-bottom order as they appear in the
References dialog box).
<P>
Microsoft Excel will run the subroutine from the first location where it is 
found. This is by design.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE><h3>Steps to Reproduce Behavior</h3>
 

<OL><P><LI>In a new workbook, insert a new Visual Basic module (Module1).

<P><LI>In the new module, type the following subroutine:
<P>
<PRE>       Sub TestSub()
           MsgBox "TestSub in ALPHA.XLS."
       End Sub

</PRE><P><LI>If you are using Microsoft Excel 97 or Microsoft Excel 98, on the Tools
    menu, click VBAProject Properties. Change the project name to
    "VBAProjectAlpha". Click OK. Then, save the workbook as ALPHA.XLS.
<P>
    -or-
<P>
    If you are using an earlier version of Microsoft Excel, save the
    workbook as ALPHA.XLS.

<P><LI>Repeat steps 1-3 two more times, but use the messages and workbook
    names BRAVO.XLS and CHARLIE.XLS, respectively. When you finish,
    you should have three workbooks (ALPHA.XLS, BRAVO.XLS, and
    CHARLIE.XLS), each of which contains a Module1.

<P><LI>Quit and restart Microsoft Excel.

<P><LI>Open ONLY the ALPHA.XLS workbook.

<P><LI>In Module1, add the following subroutine:
<P>
<PRE>       Sub Starter()
           TestSub
       End Sub

</PRE><P><LI>On the Tools menu, click References.

<P><LI>In the References dialog box, click Browse.

<P><LI>In the Browse dialog box, select the BRAVO.XLS file in the File Name
    list and click OK.

<P><LI>In the References dialog box, click Browse.

<P><LI>In the Browse dialog box, select the CHARLIE.XLS file in the File Name
    list and click OK.
<P>
<PRE>    The Available References list box should now contain BRAVO.XLS and     
</PRE></OL>CHARLIE.XLS at the bottom of the list.

<OL><P><LI>Click OK to exit the References dialog box.

<P><LI>In Module1, run the Starter subroutine.
<P>
<P><PRE>    A dialog box appears with the message "TestSub in ALPHA.XLS."
</PRE>
<P><LI>Delete the TestSub subroutine from Module1.

<P><LI>Run the Starter subroutine.
<P>
<P><PRE>    A message box appears with the message "TestSub in BRAVO.XLS."
</PRE><P>
</OL>Microsoft Excel allows you to create references between workbooks and
other workbooks or libraries. If these workbook references do not exist, a
subroutine from a closed workbook cannot be called. To run a subroutine
located in a closed workbook, you can create a reference between workbooks;
this allows you to run the subroutine by calling the subroutine's name.
<P>
For example, if you follow the steps in the "Steps to Reproduce Behavior 
Section" above, you create references to both BRAVO.XLS and CHARLIE.XLS. 
The first time the Starter subroutine is run (step 14), Microsoft Excel 
finds the TestSub subroutine in ALPHA.XLS and runs it. The second time the 
Starter subroutine is run (step 16), Microsoft Excel does not find the 
TestSub subroutine in ALPHA.XLS (because it has been deleted). It then 
checks the referenced libraries and modules for the subroutine. The 
subroutine is first found in BRAVO.XLS, and so Microsoft Excel runs the 
TestSub subroutine located there.
<P>
For more information on creating references and running subroutines
located in other workbooks, see the "Visual Basic User's Guide,"
Chapter 4.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For additional information about getting help with Visual Basic for
Applications, please see the following article in the Microsoft Knowledge
Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q163435.htm">Q163435</A></B>
   TITLE     : VBA: Programming Resources for Visual Basic for
               Applications
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 5.00 5.00a 5.00c 7.00 7.00a XL98 XL97 XL7 XL5<BR>
Keywords          : kbcode kbprg PgmOthr<BR>
Version           : WINDOWS:5.0,7.0,97; MACINTOSH:5.0,98<BR>
Platform          : MACINTOSH WINDOWS<BR>
Issue type        : kbinfo<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 2, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
