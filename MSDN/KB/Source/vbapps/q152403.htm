

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: How to Keep Unattached Text Aligned to a Data Series </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q152403">
<META NAME="KBModify" CONTENT="1997/12/01">
<META NAME="KBCreate" CONTENT="1996/06/13">
<META NAME="Keywords" CONTENT="kbcode kbprg PgmHowto">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Microsoft Excel versions 3.0 and 4.0 have three macro functions that allow for the automatic positioning and sizing of chart items. These functions are GET.CHART.ITEM, FORMAT.MOVE, and FORMAT.SIZE.  These functions may assist in positioning a graph...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QANO,QBVP,QBC9,QBC8,QAO2,QAXC,QACI,QAH4,QBOM,QDNX,QBWS,QAJD,QA2Q,QAIB,QA9N V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: How to Keep Unattached Text Aligned to a Data Series</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 1, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q152403</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows 95, version 7.0
<LI>Microsoft Excel for Windows, versions 3.0, 4.0, 5.0, 5.0c
<LI>Microsoft Excel for the Macintosh, versions 3.0, 4.0, 5.0, 5.0a
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Microsoft Excel versions 3.0 and 4.0 have three macro functions that allow
for the automatic positioning and sizing of chart items. These functions
are GET.CHART.ITEM, FORMAT.MOVE, and FORMAT.SIZE.
<P>
These functions may assist in positioning a graphical object, such as an
arrow, so that the object will be moved if the values in a data series are
changed.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without 
warranty either expressed or implied, including, but not limited to, the 
implied warranties of merchantability and/or fitness for a particular 
purpose. This article assumes that you are familiar with the programming 
language being demonstrated and the tools used to create and debug 
procedures. Microsoft support engineers can help explain the functionality 
of a particular procedure, but they will not modify these examples to 
provide added functionality or construct procedures to meet your specific 
needs. If you have limited programming experience, you may want to contact 
the Microsoft fee-based consulting line at (800) 936-5200. For more 
information about the support options available from Microsoft, please see 
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>In Microsoft Excel, a graphical object, such as an arrow, can be added to a
chart as unattached text. If the values in a data series are changed, when
the chart is updated, the unattached text will not move. This is by design.
<P>
The following are example macros which will automatically position an arrow
so that it will point from the upper-right corner of the leftmost column,
to the upper-left corner of the second column. This principal may be
applied to other arrows or graphical objects. There are no Visual Basic for
Applications equivalents for the GET.CHART.ITEM commands; therefore, you
must use the Visual Basic for Applications method ExecuteExcel4Macro.
<P>
The method mentioned above will not work with a 3-D chart. For additional
information, please see the following article in the Microsoft Knowledge
Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../EXCEL/Q93730.htm">Q93730</A></B>
   TITLE     : XL5: GET.CHART.ITEM() Returns Unexpected Results with 3-D
               Chart.

</PRE><h3>Microsoft Excel versions 5.0 and 7.0</h3>
 

<OL><P><LI>Type the following code into a module sheet:
<P>
<PRE>       Sub MoveArrows()
          ' Activate chart.
          ActiveSheet.DrawingObjects("Chart 1").Select
          ActiveSheet.ChartObjects("Chart 1").Activate
          ' Selects Series 1 Point 1.
          ActiveChart.SeriesCollection(1).Select
          ActiveChart.SeriesCollection(1).Points(1).Select
          ' Gets the upper-right x point of P1.
          xs1p1 = ExecuteExcel4Macro("get.chart.item(1,3,""s1p1"")")
          ' Gets the upper-right y point of P1.
          ys1p1 = ExecuteExcel4Macro("get.chart.item(2,3,""s1p1"")")
          ' Gets the upper-left x point of P2.
          xs1p2 = ExecuteExcel4Macro("get.chart.item(1,1,""s1p2"")")
          ' Gets the upper-left y point of P2.
          ys1p2 = ExecuteExcel4Macro("get.chart.item(2,1,""s1p2"")")
          ' Selects line 1, and then formats and moves the line.
          ActiveChart.DrawingObjects("Line 1").Select
          With Selection
             .Left = xs1p1
             .Top = xs1p2
             .Width = (xs1p2 - xs1p1)
             .Height = (ys1p2 - ys1p1)
          End With
          ' Selects Series 1 Point 2.
          ActiveChart.SeriesCollection(1).Select
          ActiveChart.SeriesCollection(1).Points(2).Select
          ' Gets the upper-right x point of P1.
          xs1p1 = ExecuteExcel4Macro("get.chart.item(1,3,""s1p2"")")
          ' Gets the upper-right y point of P1.
          ys1p1 = ExecuteExcel4Macro("get.chart.item(2,3,""s1p2"")")
          ' Gets the upper-left x point of P2.
          xs1p2 = ExecuteExcel4Macro("get.chart.item(1,1,""s1p3"")")
          ' Gets the upper-left y point of P2.
          ys1p2 = ExecuteExcel4Macro("get.chart.item(2,1,""s1p3"")")
          ' Selects line 2, and then formats and moves the line.
          ActiveChart.DrawingObjects("Line 2").Select
          With Selection
             .Left = xs1p1
             .Top = xs1p2
             .Width = (xs1p2 - xs1p1)
             .Height = (ys1p2 - ys1p1)
          End With
       End Sub

</PRE><P><LI>In a spreadsheet, type the following:
<P>
<PRE>       A1: JAN     B1: 2.5
       A2: FEB     B2: 6.5
       A3: MAR     B3: 4.0

</PRE><P><LI>Select the Range A1:B3.

<P><LI>On the Insert menu, click Chart, and then click On This Sheet.

<P><LI>While holding down the left mouse button, drag the pointer to form the
    chart frame. When you have the frame size you want, release the left
    mouse button.

<P><LI>Click Next.

<P><LI>Click the Finish button.

<P><LI>Click the Drawing button on the toolbar, and on the Drawing toolbar,
    click the ARROW button. Place the arrow pointing from the top of the
    JAN column to the top of the FEB column.

<P><LI>On the Drawing toolbar, click the ARROW button. Place the arrow
    pointing from the top of the FEB column to the top of the MAR column.

<P><LI>Change the value in cell B1 to 5 and the value in cell B2 to 1.
    Note that the arrows do not move.

<P><LI>Run the MoveArrow macro to reposition the arrows.
<P>
</OL><h3>Microsoft Excel versions 3.0 and 4.0</h3>
 

<OL><P><LI>Type the following code on a Microsoft Excel 4.0 macro sheet:
<P>
<PRE>      A1:   MoveArrow
      A2:   =SELECT("Chart 1")
      A3:   =ACTIVATE("Sheet1.xls Chart 1")
      A4:   xs1p1=GET.CHART.ITEM(1,3,"s1p1")
      A5:   ys1p1=GET.CHART.ITEM(2,3,"s1p1")
      A6:   xs1p2=GET.CHART.ITEM(1,1,"s1p2")
      A7:   ys1p2=GET.CHART.ITEM(2,1,"s1p2")
      A8:   =SELECT("arrow 1")
      A9:   =FORMAT.MOVE(xs1p1,ys1p1)
      A10:  =FORMAT.SIZE(xs1p2-xs1p1,ys1p2-ys1p1)
      A11:  xs1p1=GET.CHART.ITEM(1,3,"s1p2")
      A12:  ys1p1=GET.CHART.ITEM(2,3,"s1p2")
      A13:  xs1p2=GET.CHART.ITEM(1,1,"s1p3")
      A14:  ys1p2=GET.CHART.ITEM(2,1,"s1p3")
      A15:  =SELECT("arrow 2")
      A16:  =FORMAT.MOVE(xs1p1,ys1p1)
      A17:  =FORMAT.SIZE(xs1p2-xs1p1,ys1p2-ys1p1)
      A18:  =RETURN()

      Explanation of macro code:

      A1:   Macro name
      A2:   Selects Chart
      A3:   Activates the chart
      A4:   Gets upper-right X of P1
      A5:   Gets upper-right y of P1
      A6:   Gets upper-Left x of p2
      A7:   Gets upper-left y of P2
      A8:   Selects Arrow 1
      A9:   Moves Arrow 1
      A10:  Resizes Arrow 1
      A11:  Gets upper-right X of P2
      A12:  Gets upper-right y of P2
      A13:  Gets upper-Left x of p3
      A14:  Gets upper-left y of P3
      A15:  Selects Arrow 2
      A16:  Moves Arrow 2
      A17:  Resizes Arrow 2
      A18:  Ends the macro

</PRE><P><LI>In a spreadsheet, type the following:
<P>
<PRE>      A1:  JAN     B1:  2.5
      A2:  FEB     B2:  6.5
      A3:  MAR     B3:  4.0

</PRE><P><LI>Save the File as "Sheet1.xls" (without the quotation marks).

<P><LI>Select the Range A1:B3.

<P><LI>Click the Chart Wizard button.

<P><LI>While holding down the left mouse button, drag the pointer to form the
    chart frame. When you have the frame size you want, release the mouse
    button.

<P><LI>Click Next.

<P><LI>Click the Finish button.

<P><LI>Double-click the chart. On the Chart menu, click Add Arrow.
    Place the arrow pointing from the top of the JAN column to the
    top of the FEB column.

<P><LI>On the Chart menu, click Add Arrow. Place the second arrow
    pointing from the top of the FEB column to the top of the MAR column.

<P><LI>Change the value in cell B1 to 5 and the value in cell B2 to 1.
    Note that the arrows do not move.

<P><LI>Run the MoveArrow macro to reposition the arrows.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 3.00 3.00a 4.00 4.00a 5.00 5.00a 5.00c 7.00<BR>
Keywords          : kbcode kbprg PgmHowto<BR>
Version           : WINDOWS:3.0,4.0,5.0,5.0c,7.0,7.0a; MACINTOSH:3.0,4.0,5.0,5.0a<BR>
Platform          : MACINTOSH WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 1, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
