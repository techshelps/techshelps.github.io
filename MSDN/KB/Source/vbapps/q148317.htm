

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: How to Sum Ranges Using Visual Basic for Applications </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q148317">
<META NAME="KBModify" CONTENT="1998/02/03">
<META NAME="KBCreate" CONTENT="1996/03/08">
<META NAME="Keywords" CONTENT="kbcode kbprg PgmHowto">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel, you can use a Microsoft Visual Basic for Applications  macro to sum or subtract two ranges of data and to then place the result  into a third range without using formulas in the cells. You can do this in  the same workbook or fr...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QBVP,QAH4,QDMR,QAJQ,QBSO,QBJF,QA5F,QAMA,QAE1,QAVZ,QAKC,QDNZ,QAGF,QBWS P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: How to Sum Ranges Using Visual Basic for Applications</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 3, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q148317</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Microsoft Excel 98 Macintosh Edition
<LI>Microsoft Excel 97 for Windows
<LI>Microsoft Excel for Windows 95, versions 7.0, 7.0a
<LI>Microsoft Excel for Windows, versions 5.0, 5.0c
<LI>Microsoft Excel for the Macintosh, versions 5.0, 5.0a
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Excel, you can use a Microsoft Visual Basic for Applications 
macro to sum or subtract two ranges of data and to then place the result 
into a third range without using formulas in the cells. You can do this in 
the same workbook or from more than one workbook into a workbook using 
defined names.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>There are several ways to perform the task of adding or subtracting columns 
of data together. You can use a For Each...Next loop in the same workbook 
to subtract values in one column from another column and have the results 
appear in a third column. For an example of how to do this using Visual 
Basic code, perform the following steps in Microsoft Excel:

<OL><P><LI>Open a new worksheet, and in A1:A10, enter some random numbers.

<P><LI>In B1:B10, enter some random numbers.

<P><LI>In a Visual Basic module, type the following:
<P>
<PRE>      Sub MyTotal()
          Dim CurCell As Object
          For Each CurCell In Range("C1:C10")
              CurCell.Value = CurCell.Offset(0, -2).Value _
                  - CurCell.Offset(0, -1).Value
          Next
      End Sub

</PRE><P><LI>Run the macro.
<P>
</OL>The results of the subtraction appear in C1:C10.
<P>
You can use the same code to add the columns. To do this, just change
the minus sign to a plus sign in the CurCell.Value line, as follows:
<P>
<PRE>   CurCell.Value = CurCell.Offset(0, -2).Value _
       + CurCell.Offset(0, -1).Value

</PRE></OL>To add or subtract from different workbooks using Visual Basic code, use
the following steps:

<OL><P><LI>Open a workbook (Book1), and in range A1:A10, insert random numbers.

<P><LI>In range A1:A10 of a second workbook (Book2), insert random numbers.

<P><LI>On a Visual Basic module sheet, type the following:
<P>
<PRE>      Sub TotalData()
          Dim File1 As Object, File2 As Object, CurCell As Object

          ' Where the first column of data is located in Book1 on Sheet1
          ' in range A1:A10.
          Set File1 = Workbooks("Book1").Sheets("Sheet1").Range("A1:A10")

          ' We are now dealing with the second column of data.
          Set File2 = Workbooks("Book2").Sheets("Sheet1").Range("A1:A10")

          For Each CurCell In Range("A1:A10")

              ' To add instead of subtract, change the minus sign
              ' to a plus sign.
              CurCell.Value = File1.Cells(CurCell.Row, 1).Value - _
                  File2.Cells(CurCell.Row, 1).Value

          Next
      End Sub

</PRE><P><LI>Run the macro.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about using Visual Basic for Applications, click the 
Contents tab in Microsoft Excel Help, and then double-click the "Getting 
Started with Visual Basic" topic.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 5.00 7.00 97 8.00 XL97 XL98 XL7 XL5<BR>
Keywords          : kbcode kbprg PgmHowto<BR>
Version           : WINDOWS:5.0,7.0,97; MACINTOSH:5.0,98<BR>
Platform          : MACINTOSH WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 3, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
