

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: How to Find the Windows and System Paths (95/97) </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q141803">
<META NAME="KBModify" CONTENT="1997/08/28">
<META NAME="KBCreate" CONTENT="1995/12/27">
<META NAME="Keywords" CONTENT="kbprg PgmApi">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  This article describes how to create a Visual Basic for Applications module that uses the 32-bit versions of the GetWindowsDirectory() and GetSystemDirectory() Windows API f...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAY5,QDL9,QBWO,QBWN,QA1S,QBWQ,QAB9,QBS0,QAUD,QBV8,QDN9,QATX,QATJ,QAFI,QAVX P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: How to Find the Windows and System Paths (95/97)</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 28, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q141803</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
This article describes how to create a Visual Basic for Applications
module that uses the 32-bit versions of the GetWindowsDirectory() and
GetSystemDirectory() Windows API functions to return the Windows and
Windows System directory (folder) paths.
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following example demonstrates how to use the 32-bit versions of the
GetWindowsDirectory() and GetSystemDirectory() Windows API functions:

<OL><P><LI>Create a module and type the following in the Declarations section:
<P>
   NOTE: You may have some Microsoft Windows API functions defined in an
   existing Microsoft Access library; therefore, your declarations may be
   duplicates. If you receive a duplicate procedure name error message,
   remove or comment out the declarations statement in your code.
<P>
<P><PRE>       '**********************************
       'Declarations section of the module
       '**********************************
       Option Compare Database
       Option Explicit
</PRE><P>
<P><PRE>       Declare Function apiGetWindowsDirectory&amp; Lib "kernel32" Alias _
<PRE></PRE>          "GetWindowsDirectoryA" (ByVal lpBuffer As String, ByVal _
          nSize As Long)
       Declare Function apiGetSystemDirectory Lib "kernel32" Alias _
          "GetSystemDirectoryA" (ByVal lpBuffer As String, ByVal nSize _
          As Long) As Long

</PRE><P><LI>Type the following procedures:
<P>
<P><PRE>      ' This function returns the path to the Windows directory as a
      ' string.
      Function GetWinDir () As String
<PRE></PRE>         Dim lpbuffer As String * 255
         Dim Length as Long
         Length = apiGetWindowsDirectory(lpbuffer, Len(lpbuffer))
         GetWinDir = Left(lpbuffer, Length)
      End Function

      ' This function returns the path to the Windows System directory
      ' as a string.
      Function GetSysDir () As String
         Dim lpbuffer As String * 255
         Dim Length as Long
         Length = apiGetSystemDirectory(lpbuffer, Len(lpbuffer))
         GetSysDir = Left(lpbuffer, Length)
      End Function

</PRE><P><LI>To test the GetWinDir() function, type the following line in the Debug
   window, and then press ENTER.
<P>
<P><PRE>      ? GetWinDir()
</PRE><P>
   Note that the Windows directory path is returned.

<P><LI>To test the GetSysDir() function, type the following line in the Debug
   window, and then press ENTER.
<P>
<P><PRE>      ? GetSysDir()
</PRE><P>
   Note that the Windows System directory path is returned.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about API functions, search for "API," and then
"Declare Statement," using the Microsoft Access Help Index.
 
<PRE>Keywords          : kbprg PgmApi
Version           : 7.0 97
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 28, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
