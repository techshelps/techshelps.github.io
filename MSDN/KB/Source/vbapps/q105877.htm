

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: RemoveItem and RemoveAllItems Methods May Not Work </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q105877">
<META NAME="KBModify" CONTENT="1997/12/01">
<META NAME="KBCreate" CONTENT="1993/10/27">
<META NAME="Keywords" CONTENT="kbprg PgmHowto kbtlc">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel, the RemoveItem and RemoveAllItems methods cannot be used to remove items from a list box if the list box is linked to a range on a worksheet or a Microsoft Excel 4.0 macro sheet.  This is by design in Microsoft Excel.  MORE INFO...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVR,QBVP,QAEF,QAE1,QAFF,QAPN,QAH4,QBS0,QA01,QAY2,QAPF,QDMR,QDNZ,QBWS,QANX V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: RemoveItem and RemoveAllItems Methods May Not Work</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 1, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q105877</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, version 5.0
<LI>Microsoft Excel for the Macintosh, version 5.0
<LI>Microsoft Excel for Windows 95, version 7.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Excel, the RemoveItem and RemoveAllItems methods cannot be
used to remove items from a list box if the list box is linked to a range
on a worksheet or a Microsoft Excel 4.0 macro sheet.
<P>
This is by design in Microsoft Excel.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
In Microsoft Excel, when you use a Microsoft Visual Basic for Applications 
module to create a list box, there are two ways you can add items to the 
list:

<UL><LI>Use the AddItem method to add items to the list box.
<P>
   -or-

<LI>Do the following to link a worksheet or a Microsoft Excel 4.0 macro
   sheet range to the list box by setting an input range for the list
   box.
<P>
   1. In the dialog sheet, select the list box.
<P>
   2. On the Format menu, click Object.
<P>
   3. Click the Control tab.
<P>
   4. In the Input Range edit box, enter the range where your list
<P><PRE>      items are stored (for example, Sheet1!$A$1:$A$10).
</PRE><P>
   5. Click OK to accept the change.
<P>
</UL>If your list box is linked to a worksheet or a Microsoft Excel 4.0 macro 
sheet range, you cannot use the RemoveItem or RemoveAllItems methods to 
remove items from the list. Attempting to do so will result in the 
following error message:
<P>
<PRE>   RemoveItem method of ListBox class failed

</PRE><h3>Visual Basic Code Example</h3>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>This Visual Basic code example displays a dialog box. When you select one 
button, it hides the dialog box, removes the first item from the list in 
the dialog box, and redisplays the dialog box. Another button ends the 
procedure.
<P>
You need to use this example ONLY if your list box is linked to cells on a 
worksheet or a Microsoft Excel 4.0 macro sheet. Lists created using AddItem 
can use the RemoveItem and RemoveAllItems methods to remove items from a 
list.
<P>
This example assumes that you have a dialog sheet (Dialog1) and a worksheet 
(Sheet1) both contained in the same workbook. The dialog sheet contains two 
buttons, DoneButton and RemoveButton, and a list box, List Box 1. The 
worksheet contains a list of items in cells $A$1:$A$10. The list box has 
its Input Range set to Sheet1!$A$1:$A$10. 
<P>
To run the example, click anywhere on the line that reads "Sub MainMacro()" 
and either press the F5 key or click Start on the Run menu.
<P>
<PRE>   '-----------------------------------------------------------
   Public DoneFlag As Integer

   Sub MainMacro()

      DoneFlag = 0                         ' Initialize DoneFlag.

      ' While the DoneFlag does not equal 1 (which will only occur if the
      ' DoneButton is clicked), continue to loop through the Subroutine.

      Do
         DialogSheets("Dialog1").Show      ' Display the dialog box.
      Loop Until DoneFlag = 1              ' Loop until DoneButton clicked.

   End Sub

   Sub RemoveButton_Click

      DoneFlag = 0                          ' Ensure DoneFlag set to 0.
      DialogSheets("Dialog1").Hide          ' Hide the dialog box.

      '  The following line deletes cell A1 ["Cells(1, 1)"] from worksheet
      '  Sheet1.

      Worksheets("Sheet1").Cells(1, 1).Delete

   End Sub

   Sub DoneButton_Click

      DoneFlag = 1                          ' Set the DoneFlag.

   End Sub
'-----------------------------------------------------------

</PRE>When either of the DoneButton or RemoveButton buttons are activated, the 
appropriate subroutines (DoneButton_Click or RemoveButton_Click) are run: 
in the RemoveButton subroutine, an item is deleted from the list, which is 
automatically updated, and in the DoneButton subroutine, a flag which 
indicates that you want to end the macro is set.
<P>
The MainMacro subroutine then resumes and proceeds to either loop back upon 
itself if DoneFlag equals 0 (if the RemoveButton was activated) or exit the 
loop and end the macro (if the DoneButton was activated).
<P>
Note that this example uses the Delete method to eliminate a cell from the 
list. If you want to redefine the list without deleting the cell, you will 
need to use the ListFillRange property to determine the proper range to use 
for your list.
<P>
Note also that when you use this method to remove items from a list, you 
must hide and reshow the dialog box in order for the list to appear 
correctly on the screen. This is accomplished by using the 
DialogSheets("Dialog1").Hide command in the RemoveButton_Click
subroutine.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 5.00 7.00<BR>
Keywords          : kbprg PgmHowto kbtlc<BR>
Version           : WINDOWS:5.0,7.0; MACINTOSH:5.0<BR>
Platform          : MACINTOSH WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 1, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
