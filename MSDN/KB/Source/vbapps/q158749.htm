

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL97: No Data Validation Property for UserForm TextBoxes </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q158749">
<META NAME="KBModify" CONTENT="1998/03/13">
<META NAME="KBCreate" CONTENT="1996/11/05">
<META NAME="Keywords" CONTENT="kbcode kbprg xlvbahowto xlvbainfo xlui">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  When you add a TextBox control to a custom UserForm, you cannot use a property to automatically validate the data that is typed in the TextBox when you run a macro that displays the UserForm.  CAUSE =====  In Microsoft Excel 97, you cannot use a pr...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBV4,QBS0,QAHP,QAH4,QA01,QBVP,QBJZ,QAP2,QBWS,QAKC,QAYY,QAB5,QBVV,QBC6,QAPN P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL97: No Data Validation Property for UserForm TextBoxes</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 13, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q158749</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When you add a TextBox control to a custom UserForm, you cannot use a
property to automatically validate the data that is typed in the TextBox
when you run a macro that displays the UserForm.
<P>
<P><h2>CAUSE</h2>
 
<P>
In Microsoft Excel 97, you cannot use a property that allows you to
validate the data. This behavior is different from earlier versions of
Microsoft Excel. In earlier versions, you can set the InputType property
for an Edit Box control that you place in a custom dialog box.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To validate the data that is typed in a TextBox on a custom UserForm,
create an event-driven macro that verifies the data. Please see the "More
Information" section for an example that shows you how to implement such a
macro.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft support engineers can help explain the
functionality of a particular macro, they will not modify these examples to
provide added functionality, nor will they help you construct macros to
meet your specific needs. If you have limited programming experience, you
may want to consult one of the Microsoft Solution Providers. Solution
Providers offer a wide range of fee-based services, including creating
custom macros. For more information about Microsoft Solution Providers,
call Microsoft Customer Information Service at (800) 426-9400.
<P>
The following example steps you through the process of creating a new
UserForm with a TextBox control that allows you to type only numerical
values in the TextBox. If you type non-numerical data in the TextBox, a
message box that prompts you to re-enter the data or to cancel the
procedure appears. To create the UserForm, use the following steps:

<OL><P><LI>Create a new workbook, point to Macro on the Tools menu, and click
    Visual Basic Editor to start the Visual Basic Editor.

<P><LI>In the Visual Basic Editor, insert a new UserForm into your project.

<P><LI>If the Toolbox is not visible, click Toolbox on the View menu.

<P><LI>Click TextBox in the Toolbox, and then draw a TextBox on the UserForm.

<P><LI>Double-click the TextBox.

<P><LI>Type the following code in this Visual Basic module:
<P>
       Private Sub TextBox1_Change()
<P>
<PRE>           Dim okstop As Boolean
           Dim yesno_continue As Boolean
           Dim mytext As String

           okstop = False

           Do
               mytext = TextBox1.Value
               If Not IsNumeric(mytext) And mytext &lt;&gt; "" Then
                   TextBox1.Value = ""    'Clears the TextBox

                   'Shows a message box that informs you that you typed
                   'something other than a number.
                   yesno_continue = MsgBox("Please type only numbers." &amp; _
                       Chr(13) &amp; "Continue?", vbYesNo)
               Else
                   okstop = True   'You typed a number in the TextBox.
               End If

           'Continue with the loop if you click Yes.
           'Stop the loop if they typed a number in the TextBox.
           Loop Until (yesno_continue = vbNo) Or (okstop = True)

       End Sub

</PRE><P><LI>On the Insert menu, click Module.
<P>
</OL>This step inserts a module sheet into the project.

<OL><P><LI>On this module sheet, type the following code:
<P>
<PRE>       Sub Data_Validate()
           UserForm1.Show  'Displays the custom UserForm.
       End Sub

</PRE><P><LI>Run the Data_Validate macro.
<P>
</OL>Your custom UserForm appears. If you type a number in the TextBox,
nothing happens. If you type a text string in the TextBox, the message
box in the macro in Step 6 appears, informing you that you did not type
a number.

<OL><P><LI>Click the Close button in the top right corner of the UserForm window
<P><PRE>    to dismiss the UserForm.
</PRE><P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about the TextBoxes, start the Visual Basic Editor,
click Office Assistant, type "TextBox", click Search, and then click
"TextBox Control".
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: XL97 user form<BR>
Keywords          : kbcode kbprg xlvbahowto xlvbainfo xlui<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 13, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
