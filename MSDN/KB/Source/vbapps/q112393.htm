

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL5: Getting Windows Status Information from Windows API </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q112393">
<META NAME="KBModify" CONTENT="1997/09/02">
<META NAME="KBCreate" CONTENT="1994/03/08">
<META NAME="Keywords" CONTENT="EvnOs kbprg PgmOthr">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  The Visual Basic, Applications Edition, example below demonstrates how to obtain system status information similar to the information displayed in the Microsoft Windows Program Manager About box. The example procedure displays the following informa...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QBS0,QDL9,QBWO,QBWN,QBWQ,QBW6,QBJZ,QAB9,QBXT,QBVP,QA7H,QA5V,QA4Q,QAY5 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL5: Getting Windows Status Information from Windows API</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 2, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q112393</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, versions 5.0, 5.0c
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The Visual Basic, Applications Edition, example below demonstrates how
to obtain system status information similar to the information
displayed in the Microsoft Windows Program Manager About box. The
example procedure displays the following information using the Windows
application programming interface (API) functions indicated:
<P>
This Statement/
<PRE>Property            Displays This Information
</PRE> 
<P>
<PRE>GetWinFlags          The kind of CPU (80286, 80386, or 80486) and
                     whether a math coprocessor is present

GetWinFlags          Whether Microsoft Windows is running in
                     enhanced mode or standard mode

GetFreeSpace         The amount of free memory
and
</PRE>GlobalCompact
<P>
<PRE>SystemHeapInfo       The percentage of free system resources

OperatingSystem      The version of Windows

</PRE><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>To Create a sample macro</h3>
 

<OL><P><LI>Start Microsoft Excel for Windows 5.0.

<P><LI>On the Insert menu, click Macro, and then click Module. Module 1
   is created by default.

<P><LI>Type the following code into the newly created module:
<P>
<PRE>   ' Constants for GetWinFlags.
   Global Const WF_CPU286 = &amp;h2
   Global Const WF_CPU386 = &amp;h4
   Global Const WF_CPU486 = &amp;h8
   Global Const WF_80x87 = &amp;h400
   Global Const WF_STANDARD = &amp;h10
   Global Const WF_ENHANCED = &amp;h20

   ' Type for SystemHeapInfo.
   Type SYSHEAPINFO
       dwSize As Long
       wUserFreePercent As Integer
       wGDIFreePercent As Integer
       hUserSegment As Integer
       hGDISegment As Integer
   End Type

   Declare Function GetWinFlags Lib "KERNEL" () As Long
   Declare Function GetFreeSpace Lib "KERNEL" _
     (ByVal wFlags As Integer) As Long
   Declare Function GlobalCompact Lib "KERNEL" _
     (ByVal dwMinFree As Long) As Long
   Declare Function SystemHeapInfo Lib "TOOLHELP.DLL" _
     (shi As SYSHEAPINFO) As Integer

   Sub GetWindowsInfo()
       Dim Status As Long
       Dim Memory As Long
       Dim msg As String         ' Status information.
       Dim nl As String          ' New-line.
       Dim shi As SYSHEAPINFO
       nl = Chr$(13) + Chr$(10)  ' New-line.

       Status = GetWinFlags()

       ' Get operating system version.
       ' (Uses Excel's built-in OperatingSystem function rather
       ' than Windows API calls.)
       msg = "OS: " + Application.OperatingSystem

       ' Get CPU kind and operating mode.
       msg = msg + nl + "CPU: "
       If Status And WF_CPU286 Then msg = msg + "80286"
       If Status And WF_CPU386 Then msg = msg + "80386"
       If Status And WF_CPU486 Then msg = msg + "80486"
       If Status And WF_80x87 Then msg = msg + " with 80x87"
       msg = msg + nl
       msg = msg + "Mode: "
       If Status And WF_STANDARD Then msg = msg + "Standard" + nl
       If Status And WF_ENHANCED Then msg = msg + "Enhanced" + nl

       ' Get free memory.
       Memory = GetFreeSpace(0)
       msg = msg + "Memory free: "
       msg = msg + Format$(Memory \ 1024, "###,###,###") + "K" + nl
       Memory = GlobalCompact(&amp;hffff)
       msg = msg + "Largest free block: "
       msg = msg + Format$(Memory \ 1024, "###,###,###") + "K" + nl

       ' Get free system resources.
       msg = msg + "System resources: "
       shi.dwSize = Len(shi)
       If SystemHeapInfo(shi) Then
          If shi.wUserFreePercent &lt; shi.wGDIFreePercent Then
             msg = msg + Format$(shi.wUserFreePercent) + "%"
          Else
             msg = msg + Format$(shi.wGDIFreePercent) + "%"
          End If
       End If

       MsgBox msg, vbOKOnly, "About This PC"
   End Sub

</PRE><P><LI>On the Tools menu, click Macro.

<P><LI>In the Macro Name/Reference list, click GetWindowsInfo, and
   click OK to run the macro.
<P>
</OL>Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft support engineers can help explain the
functionality of a particular macro, they will not modify these examples to
provide added functionality, nor will they help you construct macros to
meet your specific needs. If you have limited programming experience, you
may want to consult one of the Microsoft Solution Providers. Solution
Providers offer a wide range of fee-based services, including creating
custom macros. For more information about Microsoft Solution Providers,
call Microsoft Customer Information Service at (800) 426-9400.
<P>
Note that a line that is preceded by an apostrophe introduces a
comment in the code--comments are provided to explain what the code is
doing at a particular point in the procedure. Note also that an
underscore character (_) indicates that code continues from one line
to the next. You can type lines that contain this character as one
logical line or you can divide the lines of code and include the line
continuation character. For more information about Visual Basic for
Applications programming style, see the "Programming Style in This
Manual" section in the "Document Conventions" section of the "Visual
Basic User's Guide."
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 5.00 5.00c<BR>
Keywords          : EvnOs kbprg PgmOthr<BR>
Version           : 5.00 5.00c<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 2, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
