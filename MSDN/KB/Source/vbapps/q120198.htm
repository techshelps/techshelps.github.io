

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: How to Select Cells/Ranges Using Visual Basic Procedures </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q120198">
<META NAME="KBModify" CONTENT="1998/02/20">
<META NAME="KBCreate" CONTENT="1994/09/06">
<META NAME="Keywords" CONTENT="kbcode kbprg kbualink97 xlvbahowto xlvbainfo PgmHowto PgmOthr">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  When you create a Microsoft Visual Basic for Applications macro or  procedure, you can choose from a variety of methods for selecting cells,  ranges, and named ranges. This article contains sample code that  demonstrates some of these methods.  Thi...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA2Q,QDMR,QDNZ,QAG2,QAPF,QBWS,QAJQ,QAJB,QAVX,QAPN,QBVP,QAVW,QBS0,QDNM,QBBI P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: How to Select Cells/Ranges Using Visual Basic Procedures</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 20, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q120198</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, versions 5.0, 5.0c
<LI>Microsoft Excel for the Macintosh, versions 5.0, 5.0a
<LI>Microsoft Excel for Windows NT, version 5.0
<LI>Microsoft Excel for Windows 95, version 7.0
<LI>Microsoft Excel 97 for Windows
<LI>Microsoft Excel 98 Macintosh Edition
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
When you create a Microsoft Visual Basic for Applications macro or 
procedure, you can choose from a variety of methods for selecting cells, 
ranges, and named ranges. This article contains sample code that 
demonstrates some of these methods.
<P>
This article contains the following examples:

<OL><P><LI>How to select a cell on the active worksheet.
 2. How to select a cell on another worksheet in the same workbook.
 3. How to select a cell on a worksheet in a different workbook.
 4. How to select a range of cells on the active worksheet.
 5. How to select a range of cells on another worksheet in the same
    workbook.
 6. How to select a range of cells on a worksheet in a different
    workbook.
 7. How to select a named range on the active worksheet.
 8. How to select a named range on another worksheet in the same
    workbook.
 9. How to select a named range on a worksheet in a different
<P><PRE>    workbook.
</OL></PRE>10. How to select a cell relative to the active cell.
11. How to select a cell relative to another (not the active) cell.
12. How to select a range of cells offset from a specified range.
13. How to select a specified range and resize the selection.
14. How to select a specified range, offset it, and then resize it.
15. How to select the union of two or more specified ranges.
16. How to select the intersection of two or more specified ranges.
17. How to select the last cell of a column of adjacent data.
18. How to select the blank cell at bottom of column of contiguous data.
19. How to select an entire range of adjacent cells in a column.
20. How to select an entire range of non-adjacent cells in a column.
21. How to select a rectangular range of cells.
22. How to select multiple non-adjacent columns of varying length.
<P>
Note that these examples do not necessarily represent the best or only way
to perform the described actions. Because of the flexibility in Visual
Basic, there are often many different ways to perform the same action.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE></OL>The examples in this article use the Visual Basic methods listed in the
following table.
<P>
<PRE>   Method             Arguments
   ------------------------------------------
   Activate           none
   Cells              rowIndex, columnIndex
   Application.Goto   reference, scroll
   Offset             rowOffset, columnOffset
   Range              cell1
                      cell1, cell2
   Resize             rowSize, columnSize
   Select             none
   Sheets             index (or sheetName)
   Workbooks          index (or bookName)
   End                direction
   CurrentRegion      none

</PRE>The examples in this article use the properties in the following table.
<P>
<PRE>   Property         Use
   ---------------------------------------------------------------------
   ActiveSheet      to specify the active sheet
   ActiveWorkbook   to specify the active workbook
   Columns.Count    to count the number of columns in the specified item
   Rows.Count       to count the number of rows in the specified item
   Selection        to refer to the currently selected range

</PRE><h3>1: How to Select a Cell on the Active Worksheet</h3>
 
<P>
To select cell D5 on the active worksheet, you can use either of the
following examples:
<P>
<PRE>   ActiveSheet.Cells(5, 4).Select

   -or-

   ActiveSheet.Range("D5").Select

</PRE><h3>2: How to Select a Cell on Another Worksheet in the Same Workbook</h3>
 
<P>
To select cell E6 on another worksheet in the same workbook, you can use 
either of the following examples:
<P>
<PRE>   Application.Goto (ActiveWorkbook.Sheets("Sheet2").Cells(6, 5))

   -or-

   Application.Goto (ActiveWorkbook.Sheets("Sheet2").Range("E6"))

</PRE>Or, you can activate the worksheet, and then use method 1 above to select 
the cell:
<P>
<PRE>   Sheets("Sheet2").Activate
   ActiveSheet.Cells(6, 5).Select

</PRE><h3>3: How to Select a Cell on a Worksheet in a Different Workbook</h3>
 
<P>
To select cell F7 on a worksheet in a different workbook, you can use
either of the following examples:
<P>
Note: If you are using Excel on the Macintosh, replace "BOOK2.XLS" with 
"WORKBOOK2" in these examples.
<P>
<PRE>   Application.Goto _
      (Workbooks("BOOK2.XLS").Sheets("Sheet1").Cells(7, 6))

   -or-

   Application.Goto _
      (Workbooks("BOOK2.XLS").Sheets("Sheet1").Range("F7"))

</PRE>Or, you can activate the worksheet, and then use method 1 above to
select the cell:
<P>
<PRE>   Workbooks("BOOK2.XLS").Sheets("Sheet1").Activate
   ActiveSheet.Cells(7, 6).Select

</PRE><h3>4: How to Select a Range of Cells on the Active Worksheet</h3>
 
<P>
To select the range C2:D10 on the active worksheet, you can use any of the 
following examples:
<P>
<PRE>   ActiveSheet.Range(Cells(2, 3), Cells(10, 4)).Select

   ActiveSheet.Range("C2:D10").Select

   ActiveSheet.Range("C2", "D10").Select

</PRE><h3>5: How to Select a Range of Cells on Another Worksheet in the Same Workbook</h3>
 
<P>
To select the range D3:E11 on another worksheet in the same workbook, you 
can use either of the following examples:
<P>
<PRE>   Application.Goto _
      (ActiveWorkbook.Sheets("Sheet3").Range("D3:E11"))

   Application.Goto _
      (ActiveWorkbook.Sheets("Sheet3").Range("D3", "E11"))

</PRE>Or, you can activate the worksheet, and then use method 4 above to select 
the range:
<P>
<PRE>   Sheets("Sheet3").Activate
   ActiveSheet.Range(Cells(3, 4), Cells(11, 5)).Select

</PRE><h3>6: How to Select a Range of Cells on a Worksheet in a Different Workbook</h3>
 
<P>
To select the range E4:F12 on a worksheet in a different workbook, you can 
use either of the following examples:
<P>
Note: If you are using Excel on the Macintosh, replace "BOOK2.XLS" with 
"WORKBOOK2" in these examples.
<P>
<PRE>   Application.Goto _
      (Workbooks("BOOK2.XLS").Sheets("Sheet1").Range("E4:F12"))

   Application.Goto _
      (Workbooks("BOOK2.XLS").Sheets("Sheet1").Range("E4", "F12"))

</PRE>Or, you can activate the worksheet, and then use method 4 above to select 
the range:
<P>
<PRE>   Workbooks("BOOK2.XLS").Sheets("Sheet1").Activate
   ActiveSheet.Range(Cells(4, 5), Cells(12, 6)).Select

</PRE><h3>7: How to Select a Named Range on the Active Worksheet</h3>
 
<P>
To select the named range "Test" on the active worksheet, you can use 
either of the following examples:
<P>
<PRE>   Range("Test").Select

   Application.Goto ("Test")

</PRE><h3>8: How to Select a Named Range on Another Worksheet in the Same Workbook</h3>
 
<P>
To select the named range "Test" on another worksheet in the same workbook, 
you can use the following example:
<P>
<PRE>   Application.Goto (Sheets("Sheet1").Range("Test"))

</PRE>Or, you can activate the worksheet, and then use method 7 above to select 
the named range:
<P>
<PRE>   Sheets("Sheet1").Activate
   Range("Test").Select

</PRE><h3>9: How to Select a Named Range on a Worksheet in a Different Workbook</h3>
 
<P>
To select the named range "Test" on a worksheet in a different workbook, 
you can use the following example:
<P>
Note: If you are using Excel on the Macintosh, replace "BOOK2.XLS" with 
"WORKBOOK2" in these examples.
<P>
<PRE>   Application.Goto _
      (Workbooks("BOOK2.XLS").Sheets("Sheet2").Range("Test"))

</PRE>Or, you can activate the worksheet, and then use method 7 above to select 
the named range:
<P>
<PRE>   Workbooks("BOOK2.XLS").Sheets("Sheet2").Activate
   Range("Test").Select

</PRE><h3>10: How to Select a Cell Relative to the Active Cell</h3>
 
<P>
To select a cell that is five rows below and four columns to the left of 
the active cell, you can use the following example:
<P>
<PRE>   ActiveCell.Offset(5, -4).Select

</PRE>To select a cell that is two rows above and three columns to the right of 
the active cell, you can use the following example:
<P>
<PRE>   ActiveCell.Offset(-2, 3).Select

</PRE>NOTE: An error will occur if you attempt to select a cell that is "off the
worksheet." The first example shown above will return an error if the
active cell is in columns A through D, since moving four columns to the
left would take the active cell to an invalid cell address.
<P>
<P><h3>11: How to Select a Cell Relative to Another (Not the Active) Cell</h3>
 
<P>
To select a cell that is five rows below and four columns to the right of 
cell C7, you can use either of the following examples:
<P>
<PRE>   ActiveSheet.Cells(7, 3).Offset(5, 4).Select

   ActiveSheet.Range("C7").Offset(5, 4).Select

</PRE><h3>12: How to Select a Range of Cells Offset from a Specified Range</h3>
 
<P>
To select a range of cells that is the same size as the named range "Test" 
but that is shifted four rows down and three columns to the right, you can 
use the following example:
<P>
<PRE>   ActiveSheet.Range("Test").Offset(4, 3).Select

</PRE>If the named range is on another (not the active) worksheet, activate that 
worksheet first, and then select the range using the following example:
<P>
<PRE>   Sheets("Sheet3").Activate
   ActiveSheet.Range("Test").Offset(4, 3).Select

</PRE><h3>13: How to Select a Specified Range and Resize the Selection</h3>
 
<P>
To select the named range "Database" and then extend the selection by five 
rows, you can use the following example:
<P>
<PRE>   Range("Database").Select
   Selection.Resize(Selection.Rows.Count + 5, _
      Selection.Columns.Count).Select

</PRE><h3>14: How to Select a Specified Range, Offset It, and Then Resize It</h3>
 
<P>
To select a range four rows below and three columns to the right of the 
named range "Database" and include two rows and one column more than the 
named range, you can use the following example:
<P>
<PRE>   Range("Database").Select
   Selection.Offset(4, 3).Resize(Selection.Rows.Count + 2, _
      Selection.Columns.Count + 1).Select

</PRE><h3>15: How to Select the Union of Two or More Specified Ranges</h3>
 
<P>
To select the union (that is, the combined area) of the two named ranges 
"Test" and "Sample," you can use the following example:
<P>
<PRE>   Application.Union(Range("Test"), Range("Sample")).Select

</PRE>Note that both ranges must be on the same worksheet for this example to
work. Note also that the Union method does not work across sheets. For
example, this line works fine:
<P>
<PRE>   Set y = Application.Union(Range("Sheet1!A1:B2"), Range("Sheet1!C3:D4"))

</PRE>but this line:
<P>
<PRE>   Set y = Application.Union(Range("Sheet1!A1:B2"), Range("Sheet2!C3:D4"))

</PRE>returns the error message:
<P>
<PRE>   Union method of application class failed

</PRE><h3>16: How to Select the Intersection of Two or More Specified Ranges</h3>
 
<P>
To select the intersection of the two named ranges "Test" and "Sample," you 
can use the following example:
<P>
<PRE>   Application.Intersect(Range("Test"), Range("Sample")).Select

</PRE>Note that both ranges must be on the same worksheet for this example to 
work.
<P>
Examples 17-21 in this article refer to the following example set of data.
Each example states the range of cells in the sample data that would be
selected.
<P>
<PRE>   A1: Name    B1: Sales    C1: Quantity
   A2: a       B2: $10      C2: 5
   A3: b       B3:          C3: 10
   A4: c       B4: $10      C4: 5
   A5:         B5:          C5:
   A6: Total   B6: $20      C6: 20

</PRE><h3>17: How to Select the Last Cell of a Column of Contiguous Data</h3>
 
<P>
To select the last cell in a contiguous column, use the following example:
<P>
<PRE>   ActiveSheet.Range("a1").End(xlDown).Select

</PRE>When this code is used with the sample table, cell A4 will be selected.
<P>
<P><h3>18: How to Select the Blank Cell at Bottom of Column of Contiguous Data</h3>
 
<P>
To select the cell below a range of contiguous cells, use the following
example:
<P>
<PRE>   ActiveSheet.Range("a1").End(xlDown).Offset(1,0).Select

</PRE>When this code is used with the sample table, cell A5 will be selected.
<P>
<P><h3>19: How to Select an Entire Range of Contiguous Cells in a Column</h3>
 
<P>
To select a range of contiguous cells in a column, use one of the following
examples:
<P>
<PRE>   ActiveSheet.Range("a1", ActiveSheet.Range("a1").End(xlDown)).Select

   -or-

   ActiveSheet.Range("a1:"&amp;ActiveSheet.Range("a1"). _
      End(xlDown).Address).Select

</PRE>When this code is used with the sample table, cells A1 through A4 will be
selected.
<P>
<P><h3>20: How to Select an Entire Range of Non-Contiguous Cells in a Column</h3>
 
<P>
To select a range of cells that are non-contiguous, use one of the
following examples:
<P>
<PRE>   ActiveSheet.Range("a1",ActiveSheet.Range("a16384").End(xlUp)).Select

   -or-

   ActiveSheet.Range("a1:" &amp; ActiveSheet.Range("a16384"). _
      End(xlUp).Address).Select

</PRE>When this code is used with the sample table, it will select cells A1
through A6.
<P>
<P><h3>21: How to Select a Rectangular Range of Cells</h3>
 
<P>
In order to select a rectangular range of cells around a cell, use the
CurrentRegion method. The range selected by the CurrentRegion method is an
area bounded by any combination of blank rows and blank columns. The
following is an example of how to use the CurrentRegion method:
<P>
<PRE>   ActiveSheet.Range("a1").CurrentRegion.Select

</PRE>This code will select cells A1 through C4. Other examples to select the
same range of cells are listed below:
<P>
<PRE>   ActiveSheet.Range("a1", _
      ActiveSheet.Range("a1").End(xlDown).End(xlToRight)).Select

   -or-

   ActiveSheet.Range("a1:" &amp; _
     ActiveSheet.Range("a1").End(xlDown).End(xlToRight).Address).Select

</PRE>In some instances, you may want to select cells A1 through C6. In this
example, the CurrentRegion method will not work because of the blank line
on Row 5. The following examples will select all of the cells:
<P>
<PRE>   lastCol = ActiveSheet.Range("a1").End(xlToRight).Column
   lastRow = ActiveSheet.Cells(16384, lastCol).End(xlUp).Row
   ActiveSheet.Range("a1", _
      ActiveSheet.Cells(lastRow, lastCol)).Select

    -or-

   lastCol = ActiveSheet.Range("a1").End(xlToRight).Column
   lastRow = ActiveSheet.Cells(16384, lastCol).End(xlUp).Row
   ActiveSheet.Range("a1:" &amp; _
      ActiveSheet.Cells(lastRow, lastCol).Address).Select

</PRE><P><LI>  How to Select Multiple Non-Contiguous Columns of Varying Length
</OL> 
<P>
To select multiple non-contiguous columns of varying length, use the
following sample table and macro example:
<P>
<PRE>   A1: 1 B1: 1 C1: 1 D1: 1
   A2: 2 B2: 2 C2: 2 D2: 2
   A3: 3 B3: 3 C3: 3 D3: 3
   A4:   B4: 4 C4: 4 D4: 4
   A5:   B5: 5 C5: 5 D5:
   A6:   B6:   C6: 6 D6:

   StartRange = "A1"
   EndRange = "C1"
   Set a = Range(StartRange, Range(StartRange).End(xlDown))
   Set b = Range(EndRange, Range(EndRange).End(xlDown))
   Union(a,b).Select

</PRE></OL>When this code is used with the sample table, cells A1:A3 and C1:C6 will be
selected.
<P>
<P><h2>NOTES ON THE EXAMPLES</h2>
 

<UL><LI>The ActiveSheet property can usually be omitted, because it is implied
   if a specific sheet is not named. For example, instead of
<P>
<P><PRE>      ActiveSheet.Range("D5").Select
</PRE><P>
   you can use:
<P>
<P><PRE>      Range("D5").Select
</PRE>
<LI>The ActiveWorkbook property can also usually be omitted. Unless a
   specific workbook is named, the active workbook is implied.

<LI>When you use the Application.Goto method, if you want to use two 
   Cells methods within the Range method when the specified range is on
   another (not the active) worksheet, you must include the Sheets 
   object each time. For example:
<P>
<P><PRE>      Application.Goto _
<PRE></PRE>         (Sheets("Sheet1").Range(Sheets("Sheet1").Cells(2, 3), _
         Sheets("Sheet1").Cells(4, 5)))

</PRE><LI>You cannot use the Select method to select a range on any sheet
   other than the active sheet. Instead, you can either use the Activate
   method to activate the correct sheet and then use the Select method,
   or you can use the Application.Goto method to select the range.

<LI>For any item in quotation marks (for example, the named range "Test"),
   you can also use a variable whose value is a text string. For example,
   instead of:
<P>
<P><PRE>      ActiveWorkbook.Sheets("Sheet1").Activate
</PRE><P>
   you can use:
<P>
<P><PRE>      ActiveWorkbook.Sheets(myVar).Activate
</PRE><P>
   where the value of myVar is "Sheet1".
<P>
</UL><h2>REFERENCES</h2>
 
<P>
For more information about any Visual Basic method or property, follow
these steps:

<OL><P><LI>From the Help menu in Microsoft Excel version 5.0, choose Contents.

<P><LI>Select the "Programming with Visual Basic" topic.

<P><LI>Choose the Search button.

<P><LI>In the Search box, type the name of the method or property about
   which you want more information, and then choose the Show Topics
   button.

<P><LI>Select the topic you want, then choose the Go To button.
<P>
</OL>In Microsoft Excel 97, click Contents And Index on the Help menu, click the
Contents tab, click "Microsoft Excel Visual Basic Reference" (near the end
of the list), and click Open. Then, click Visual Basic Reference, and click
Display.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: XL97 7.00 5.00 howto contiguous how to<BR>
discontiguous non-contiguous nonadjacent non-adjacent<BR>
Keywords          : kbcode kbprg kbualink97 xlvbahowto xlvbainfo PgmHowto PgmOthr<BR>
Version           : WINDOWS: 5.0, 5.0c, 7.0, 97; MACINTOSH: 5.0, 5.0a, 98<BR>
Platform          : MACINTOSH WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 20, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
