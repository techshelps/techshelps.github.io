

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OL97: Bound Control Does Not Support Click Event </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q166853">
<META NAME="KBModify" CONTENT="1998/02/27">
<META NAME="KBCreate" CONTENT="1997/04/14">
<META NAME="Keywords" CONTENT="kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Outlook 97 Visual Basic Scripting Edition (VBScript), bound controls such as the ListBox, CheckBox or OptionButton do not support the click event. When these controls are not bound however, the click event does execute. Bound means tha...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QA7O,QBWS,QAB5,QAO4,QBVO,QAOE,QAMN,QAYC,QAKD,QAFF,QDNQ,QDMZ,QAY2,QBM8 P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>OL97: Bound Control Does Not Support Click Event</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 27, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q166853</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Outlook 97
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
In Microsoft Outlook 97 Visual Basic Scripting Edition (VBScript), bound
controls such as the ListBox, CheckBox or OptionButton do not support the
click event. When these controls are not bound however, the click event
does execute. Bound means that the control has a Value property assigned.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Click event behavior varies depending upon the control. CommandButton
controls, for example, can be bound to a mail field and will support the
Click event. This scenario is specifically designed to display the "Select
From" dialog so the user can select an email name from the address book. In
order to execute a click event for other controls, make sure the control
remains unbound.
<P>
If you need to bind a control to one of the item's fields, use either
the Item_PropertyChange() event or the Item_CustomPropertyChange() event
depending on whether the control is bound to a standard Outlook field or a
user-defined field.
<P>
For more information on working with the PropertyChange and
CustomPropertyChange events, please see the following articles in the
Microsoft Knowledge Base:
<P>
<PRE>   Article-ID: <B><A HREF="../vbapps/Q171246.htm">Q171246</A></B>
   Title     : OL97: Supported Outlook Forms Control Events

</PRE><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>The following example form demonstrates the click event with a bound and an
unbound ListBox control:
<P>
<P><h3>Creating the Form and Controls</h3>
 

<OL><P><LI>Create a new e-mail message and on the message Tools menu, click
   Design Outlook Form.

<P><LI>Click the (P.2) tab and on the Form menu click, Display this Page.

<P><LI>On the Form menu, click Control Toolbox to display the toolbox.

<P><LI>Using the Control Toolbox place two ListBoxes and one CommandButton on
   the form. Use the default names, ListBox1, ListBox2, and CommandButton1.
<P>
</OL><h3>Making ListBox2 Bound</h3>
 

<OL><P><LI>Right-click ListBox2 and from the context-sensitive menu, click
   Properties.

<P><LI>Click the Value tab and then click New.

<P><LI>In the Name box, type IsBound and click OK to return to the Properties
   Value tab.

<P><LI>In the Property to use list, click to select Value.

<P><LI>In the Possible values box, type 0;1;2;3;4;5;6;7;8;9 and click OK.
   You have bound the ListBox2 control to the possible values of zero
   through nine.
<P>
</OL><h3>Creating the Form VBScript</h3>
 

<OL><P><LI>On the form's Form menu, click View Code to open the Script Editor.

<P><LI>Type (or copy) the following VBScript code into the editor:
<P>
<PRE>   Sub CommandButton1_Click()
      ' Sets ctl to the P.2 page of the form
      Set ctl = Item.GetInspector.ModifiedFormPages("P.2")
      ' Sets ListBox1 equal to the ListBox on the control
      Set ListBox1 = ctl.controls("ListBox1")
      ' Loop to populate Listbox with values
      For i = 0 To 3
         ListBox1.AddItem cstr(i)
      Next
   End Sub

   Sub ListBox1_click()
      MsgBox "ListBox1 Click event fired."
   End Sub

   Sub ListBox2_click()
      MsgBox "ListBox2 Click event fired."
   End Sub

   Sub Item_CustomPropertyChange(ByVal myPropName)
      MsgBox "CustomPropertyChange event fired."
      Select Case myPropName
         Case "IsBound"
            MsgBox "Code related to field changing goes here."
         Case Else
       MsgBox "&lt;&lt;Select Case Else&gt;&gt;"
      End Select
   End Sub

</PRE><P><LI>Close the Script Editor and on the Tools menu, click Design
   Outlook Form.
<P>
</OL>When you click CommandButton1, ListBox1 populates with the numbers 0
through 3. ListBox2 is already bound to the values 0 through 3. If you
click a value from ListBox1, you receive a message box from the click event
subroutine. If you click a value from ListBox2, the click event for
ListBox2 doesn't execute, but the CustomPropertyChange event subroutine
does execute.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about creating solutions with Microsoft Outlook 97,
please see the following articles in the Microsoft Knowledge Base:
<P>
<PRE>   Article-ID: <B><A HREF="../vbapps/Q166368.htm">Q166368</A></B>
   Title     : OL97: How to Get Help Programming with Outlook

   Article-ID: <B><A HREF="../vbapps/Q170783.htm">Q170783</A></B>
   Title     : OL97: Q&amp;A: Questions about Customizing or
               Programming Outlook
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: OutSol OutSol97
<P>

Keywords          : kbcode<BR>
Version           : 97<BR>
Platform          : WINDOWS<BR>
Issue type        : kbinfo<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 27, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
