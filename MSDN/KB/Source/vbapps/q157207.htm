

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL97: Visual Basic does not Signal an Error has Occurred </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q157207">
<META NAME="KBModify" CONTENT="1998/03/13">
<META NAME="KBCreate" CONTENT="1996/10/08">
<META NAME="Keywords" CONTENT="kbcode kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel 97, when you run a Microsoft Visual Basic for  Applications macro that uses Automation objects, Visual Basic may not  indicate that the macro has halted when a macro error occurs. In some cases  this may cause the Microsoft Excel...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QBS0,QAAP,QAH4,QAB4,QAPN,QAKP,QBE7,QBE6,QA2K,QBVV,QAO4,QAVZ,QBWS,QAW6 P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL97: Visual Basic does not Signal an Error has Occurred</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 13, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q157207</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
In Microsoft Excel 97, when you run a Microsoft Visual Basic for 
Applications macro that uses Automation objects, Visual Basic may not 
indicate that the macro has halted when a macro error occurs. In some cases 
this may cause the Microsoft Excel program to appear as though it has 
stopped responding.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
Microsoft provides programming examples for illustration only, without 
warranty either expressed or implied, including, but not limited to, the 
implied warranties of merchantability and/or fitness for a particular 
purpose. This article assumes that you are familiar with the programming 
language being demonstrated and the tools used to create and debug 
procedures. Microsoft support engineers can help explain the functionality 
of a particular procedure, but they will not modify these examples to 
provide added functionality or construct procedures to meet your specific 
needs. If you have limited programming experience, you may want to contact 
the Microsoft fee-based consulting line at (800) 936-5200. For more 
information about the support options available from Microsoft, please see 
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>You can trap for most errors using the On Error statement. This allows your
code to continue to run even if an error is found. For a list of trappable 
errors, click the Index tab in Visual Basic Help, and type "trappable 
errors".
<P>
The following macro starts Microsoft Excel, inserts a new workbook, and
inserts an ActiveX control on the worksheet. The code produces an error
when it attempts to select a drawing shape that does not exist. The On
Error statement at the beginning of the macro traps this run-time error and
allows the macro to continue.
<P>
<PRE>   Sub AddCheckBox()

      Dim x As Object

      ' Begin error trapping.
      On Error GoTo errHandler

      ' Create the Microsoft Excel Automation object.
      Set x = CreateObject("Excel.Application.8")

      ' Make the Excel object visible.
      x.Visible = True

      ' Add new workbook.
      x.Workbooks.Add

      ' Create ActiveX check box control.
      x.ActiveSheet.OLEObjects.Add "Forms.CheckBox.1"

      ' Select cell E10.
      x.ActiveSheet.Range("E10").Select

      ' Code will error here.
      x.ActiveSheet.Shapes(1).Select

      ' Display message box.
      MsgBox "Macro Completed"
      Exit Sub

   errHandler:

      ' Activate this instance of Microsoft Excel, so message is visible.
      AppActivate Application.Caption

      ' Display a message that an error has occurred.
      MsgBox "An Error has occurred" &amp; Chr(10) &amp; _
        "RunTime Error " &amp; Err &amp; " " &amp; Error(Err)

      ' Resume processing of the macro.
      Resume Next

   End Sub

</PRE><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in the Microsoft products
listed at the beginning of this article. We are researching this problem
and will post new information here in the Microsoft Knowledge Base as it
becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
In earlier versions of Microsoft Excel, when you initiate an OLE Automation
statement such as CreateObject or GetObject, if a macro error occurs, the
host or server program flashes to indicate an error has taken place. The 
same behavior is seen in earlier versions of Microsoft Excel if a program 
is made visible and maximized. The only way to determine if the macro has 
stopped unexpectedly is to switch back to the server program.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about Automation, click the Index tab in Visual
Basic Help, type the following text
<P>
<PRE>   OLE Automation

</PRE>and then double-click the selected text to go to the "OLE Automation,
creating Automation objects" topic.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: XL97 8.00 alert warn flash indicate freeze lock<BR>
hang<BR>
Keywords          : kbcode kbprg<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>
Issue type        : kbbug<BR>
Solution Type     : kbpending<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 13, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
