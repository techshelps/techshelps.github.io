

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WD97: How to Keep OnEntry Macro from Running at Document Open </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q180202">
<META NAME="KBModify" CONTENT="1998/02/17">
<META NAME="KBCreate" CONTENT="1998/01/30">
<META NAME="Keywords" CONTENT="kbdta kbdtacode kbwordvba word97">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  When you use form fields in Word and you have assigned an OnEntry macro to the first form field in a document, the OnEntry macro will automatically run when the document first opens.  This article contains a sample Microsoft Visual Basic for Applic...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QBWS,QAYL,QALQ,QBS0,QA7O,QBVV,QAKD,QA6A,QAVZ,QAIH,QAFF,QAHT,QAPF,QABA P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>WD97: How to Keep OnEntry Macro from Running at Document Open</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 17, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q180202</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Word 97 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
When you use form fields in Word and you have assigned an OnEntry macro
to the first form field in a document, the OnEntry macro will automatically
run when the document first opens.
<P>
This article contains a sample Microsoft Visual Basic for Applications
macro (Sub procedure) that can be used to work around this issue.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>The following sample Visual Basic for Applications macro tests to see if,
upon the execution of the macro, the document's Open event has triggered
the OnEntry macro.
<P>
<PRE>   Sub OnEntry()

      Dim sOpenStatus As String
      ' An error occurs the first time this macro is
      ' run because the document variable does not yet exist,
      ' so we just resume to the next line (the If...Then...Else
      ' statement).
      On Error Resume Next

      ' Get the value of the document variable DocOpen,
      ' and put the value into the string variable sOpenStatus.
      sOpenStatus = ActiveDocument.Variables("DocOpen")

      If sOpenStatus = "" Then

         ' On the first run of this macro, the value of
         ' sOpenStatus will be Null because it does not
         ' yet exist, so we create the document variable and
         ' set the value to "Already Open."
         ActiveDocument.Variables.Add Name:="DocOpen", _
            Value:="Already Open"

      ElseIf sOpenStatus = "Just Opened" Then

         ' If the value of the document variable equals "Just Opened,"
         ' do not run the other code section of this macro
         ' and make the document variable equal "Already Open."
         ActiveDocument.Variables("DocOpen").Value = "Already Open"

      Else

         ' Other code section runs ONLY if the variable
         ' sOpenStatus equals "Already Open." Place your
         ' code here that you want to run only when the
         ' form field is tabbed to or clicked on.

         '&lt;&lt;&lt; Your OnEntry Code Goes Here &gt;&gt;&gt;

      End If

   End Sub

</PRE>This macro must be used in combination with the OnEntry macro to set the
document variable DocOpen to "Just Opened," so the next time the document
is opened we do not run the other code section of the OnEntry macro
included earlier in this article.
<P>
<PRE>   Sub AutoClose()

      ' This sets the value to "Just Opened," so
      ' the next time the document is opened
      ' we do not run the other code.
      ActiveDocument.Variables("DocOpen").Value = "Just Opened"

   End Sub

</PRE><h2>REFERENCES</h2>
 
<P>
For additional information, please see the following article in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q173707.htm">Q173707</A></B>
   TITLE     : OFF97: How to Run Sample Code from Knowledge Base Articles

</PRE>For more information about getting help with Visual Basic for Applications,
please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q163435.htm">Q163435</A></B>
   TITLE     : VBA: Programming Resources for Visual Basic for
               Applications
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: on-entry<BR>
Keywords          : kbdta kbdtacode kbwordvba word97<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 17, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
