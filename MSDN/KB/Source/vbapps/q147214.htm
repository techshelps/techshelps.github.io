

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: How to Retrieve the MS Access Window Handle </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q147214">
<META NAME="KBModify" CONTENT="1998/03/10">
<META NAME="KBCreate" CONTENT="1996/02/21">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  This article demonstrates a sample user-defined function that you can use to retrieve the handle to the Microsoft Access window. This article also describes how you can use ...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAY5,QA1S,QDN9,QAB9,QBV8,QAH4,QDL9,QBWO,QBWN,QAGQ,QARM,QBW1,QAUJ,QAUD,QALW P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: How to Retrieve the MS Access Window Handle</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 10, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q147214</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI> Microsoft Access versions 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
This article demonstrates a sample user-defined function that you can use
to retrieve the handle to the Microsoft Access window. This article
also describes how you can use the sample function to do the following:

<UL><LI>Minimize, maximize, and restore the Microsoft Access window

<LI>Determine if the Microsoft Access window is minimized, maximized, or
   restored

<LI>Move and size the Microsoft Access window
<P>
</UL>This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to the "Building
Applications with Microsoft Access for Windows 95" manual.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Every window in the Microsoft Windows environment has a unique number, or
window handle, assigned to it that is used to identify the window. The
window handle is a required argument for many Microsoft Windows application
programming interface (API) functions.
<P>
The following steps describe how to create the sample function,
GetAccesshWnd(), that you can use to retrieve the Microsoft Access
window handle.
<P>
NOTE: You may have some Microsoft Windows API functions defined in an
existing Microsoft Access library; therefore, your declarations may be
duplicates. If you receive a duplicate procedure name error message,
remove or comment out the declarations statement in your code.

<OL><P><LI>Create a new module.

<P><LI>Add the following lines to the module's Declarations section:
<P>
<P><PRE>      Option Explicit
      Declare Function apiGetActiveWindow Lib "user32" Alias _
<PRE></PRE>         "GetActiveWindow" () As Long
      Declare Function apiGetParent Lib "user32" Alias "GetParent" _
         (ByVal hwnd As Long) As Long

</PRE><P><LI>Type the following function in the module:
<P>
<P><PRE>      Function GetAccesshWnd ()
<PRE></PRE>         Dim hWnd As Long
         Dim hWndAccess As Long

         ' Get the handle to the currently active window.
         hWnd = apiGetActiveWindow()
         hWndAccess = hWnd

         ' Find the top window without a parent window.
         While hWnd &lt;&gt; 0
            hWndAccess = hWnd
            hWnd = apiGetParent(hWnd)
         Wend

         GetAccesshWnd = hWndAccess

      End Function

</PRE></OL><h3>How to Use the GetAccesshWnd() Function</h3>
 
<P>
General Use:

<OL><P><LI>Press CTRL+G to open the Debug window.

<P><LI>Type the following line in the Debug window, and then press ENTER:
<P>
<P><PRE>      ? GetAccesshWnd()
</PRE><P>
   Note that the window handle for the Debug window is returned.
<P>
</OL>How to Minimize, Maximize, or Restore the Microsoft Access Window:

<OL><P><LI>Add the following to the module's Declarations section:
<P>
<P><PRE>      Declare Function apiShowWindow Lib "user32" Alias "ShowWindow" _
<PRE></PRE>         (ByVal hwnd As Long, ByVal nCmdShow As Long) As Long

      Global Const SW_MAXIMIZE = 3
      Global Const SW_SHOWNORMAL = 1
      Global Const SW_SHOWMINIMIZED = 2

</PRE><P><LI>Type the following functions in the module:
<P>
<P><PRE>      Function AccessMinimize()
<PRE></PRE>         AccessMinimize = apiShowWindow(GetAccesshWnd(), SW_SHOWMINIMIZED)
      End Function

      Function AccessMaximize()
         AccessMaximize = apiShowWindow(GetAccesshWnd(), SW_MAXIMIZE)
      End Function

      Function AccessRestore()
         AccessRestore = apiShowWindow(GetAccesshWnd(), SW_SHOWNORMAL)
      End Function

</PRE><P><LI>To run these functions, type the following in the module's Debug window,
   and then press ENTER
<P>
<P><PRE>      ? &lt;function name&gt;()
</PRE><P>
<P><PRE>       -or-
</PRE><P>
<P><PRE>      &lt;function name&gt;
</PRE><P>
   where &lt;function name&gt; is the name of one of the functions in step 2.
<P>
</OL>How to Determine If the Microsoft Access Window Is Minimized, Maximized, or
Restored:

<OL><P><LI>Add the following to the module's Declarations section:
<P>
<P><PRE>      Declare Function apiIsIconic Lib "user32" Alias "IsIconic" (ByVal _
<PRE></PRE>         hwnd As Long) As Long
      Declare Function apiIsZoomed Lib "user32" Alias "IsZoomed" (ByVal _
         hwnd As Long) As Long

</PRE><P><LI>Enter the following functions in the module:
<P>
<P><PRE>      Function IsAccessMaximized ()
<PRE></PRE>         If apiIsZoomed(GetAccesshWnd()) = 0 Then
            IsAccessMaximized = False
         Else
            IsAccessMaximized = True
         End If
      End Function

      Function IsAccessMinimized ()
         If apiIsIconic(GetAccesshWnd()) = 0 Then
            IsAccessMinimized = False
         Else
            IsAccessMinimized = True
         End If
      End Function

      Function IsAccessRestored ()
         If IsAccessMaximized() = False And _
               IsAccessMinimized() = False Then
            IsAccessRestored = True
         Else
            IsAccessRestored = False
         End If
      End Function

</PRE><P><LI>To run these functions, type the following in the module's Debug window,
   and then press ENTER
<P>
<P><PRE>      ? &lt;function name&gt;()
</PRE><P>
<P>
   where &lt;function name&gt; is the name of one of the functions in step 2.
   This will return a True if the Microsoft Access window is maximized, or
   a False if it is not.
<P>
</OL>How to Move and Size the Microsoft Access Window:

<OL><P><LI>Add the following to the module's Declarations section:
<P>
<P><PRE>      Declare Function apiMoveWindow Lib "user32" Alias "MoveWindow" _
<PRE></PRE>         (ByVal hwnd As Long, ByVal x As Long, ByVal y As Long, ByVal _
         nWidth As Long, ByVal nHeight As Long, ByVal bRepaint As Long) _
         As Long

</PRE><P><LI>Enter the following function in the module:
<P>
<P><PRE>      Function AccessMoveSize (iX As Integer, iY As Integer, iWidth As _
<PRE></PRE>         Integer, iHeight As Integer)
         apiMoveWindow GetAccesshWnd(), iX, iY, iWidth, iHeight, True
      End Function

</PRE></OL>To move the Microsoft Access window to the upper-left corner of the screen
and size it to the standard VGA display size of 640 x 480 pixels, type the
following in the module's Debug window:
<P>
<PRE>   ? AccessMoveSize(0, 0, 640, 480)

</PRE>On a computer configured with the standard VGA video driver, this will give
the Microsoft Access window the appearance of being maximized, although it
is really restored and sized to fill the screen. Note that the dimensions
you supply to this function are in pixels.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about Window handles in Microsoft Access version 7.0,
please see the following article here in the Microsoft Knowledge Base.
<P>
<PRE>    ARTICLE-ID: <B><A HREF="../ACCESS/Q113881.htm">Q113881</A></B>
    TITLE:      ACC: How to Retrieve the Microsoft Access Window
                Handle (1.x, 2.0)
</PRE> 
<PRE>Keywords          : kbprg
Version           : 7.0, 97
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 10, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
