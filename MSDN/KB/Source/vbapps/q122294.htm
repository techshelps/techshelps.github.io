

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: How to Automatically Detect If a Form Is Being Edited </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q122294">
<META NAME="KBModify" CONTENT="1997/10/24">
<META NAME="KBCreate" CONTENT="1994/11/01">
<META NAME="Keywords" CONTENT="kbusage FmsEvnt">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  This article describes two techniques you can use to automatically run code when a form's edit mode changes. You can use these techniques when you want to have different controls...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA1S,QA5V,QAPN,QDN9,QBXS,QBS0,QAH4,QA5F,QAMA,QAGC,QAI2,QBTV,QBJZ,QBDM,QA8N P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: How to Automatically Detect If a Form Is Being Edited</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 24, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q122294</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 2.0, 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
This article describes two techniques you can use to automatically run code
when a form's edit mode changes. You can use these techniques when you want
to have different controls available on a form when a record is being
edited and when a record is not being edited.
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
NOTE: Visual Basic for Applications is called Access Basic in Microsoft
Access version 2.0. For more information about Access Basic, please refer
to the "Building Applications" manual.
<P>
NOTE: This article explains a technique demonstrated in the sample
files, FrmSampl.exe (for Microsoft Access for Windows 95 version 7.0)
and FrmSmp97.exe (for Microsoft Access 97). For information about how
to obtain these sample files, please see the following articles in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../ACCESS/Q150895.htm">Q150895</A></B>
   TITLE     : ACC95: Microsoft Access Sample Forms Available on MSL

   ARTICLE-ID: <B><A HREF="../ACCESS/Q175066.htm">Q175066</A></B>
   TITLE     : ACC97: Microsoft Access 97 Sample Forms Available on MSL

</PRE><h2>MORE INFORMATION</h2>
 
<P>
When a pencil is displayed in the record selector, the record is being
edited but has not yet been saved. When a triangle is displayed in the
record selector, the record has been saved and is not being edited. Note
that if the form's RecordSelector property is set to No, these symbols are
not displayed.
<P>
There are two methods you can use to automatically run code when a form's
edit mode changes:

<UL><LI>Use the form's Timer event to check the form's Dirty property
   periodically to see if the edit mode has changed.

<LI>Use the Dirty property in an expression on the form to run a
   function when the edit mode changes.
<P>
</UL>The following examples demonstrate how to use these techniques to
automatically enable or disable an Undo Record button depending on a
form's edit mode.
<P>
<P><h3>Method 1: Using the Form's Timer Event</h3>
 

<OL><P><LI>Open the sample database Northwind.mdb (or NWIND.MDB in version 2.0).

<P><LI>Open the Employees form in Design view.

<P><LI>Use the Command Button Wizard to create an Undo Record button on
   the form.

<P><LI>Change the Undo Record button's properties to match the following:
<P>
<P><PRE>      Name: btnUndo
      Enabled: No
</PRE>
<P><LI>Set the form's TimerInterval property to:
<P>
<P><PRE>      1000
</PRE>
<P><LI>Set the form's OnTimer property to the following event procedure:
<P>
<P><PRE>      Private Sub Form_Timer()
<PRE></PRE>          Static bFlag As Boolean
          If Me.Dirty Then
              If Not bFlag Then
                  Me!btnUndo.Enabled = True
                  bFlag = True
              End If
          Else
              If bFlag Then
                 Me!FirstName.SetFocus
                 Me!btnUndo.Enabled = False
                 bFlag = False
              End If
          End If
      End Sub

</PRE><P><LI>View the form in Form view. Note that the Undo Record button is
   unavailable.

<P><LI>Modify any field in the current record, and then press the TAB key.
   Note that the Undo Record button becomes available.

<P><LI>Press the ESC key twice (or click Undo on the Edit menu) to undo your
   changes. Note that the Undo Record button becomes unavailable.
<P>
</OL><h3>Method 2: Using the Dirty Property in an Expression</h3>
 

<OL><P><LI>Follow steps 1-4 in method 1 above.

<P><LI>Create a new text box with the following properties on the form:
<P>
<P><PRE>      Name: txtEditModeChange
      ControlSource: =[Form].[Dirty] &amp; EditModeChange([Form])
      Visible: No
</PRE>
<P><LI>On the View menu, click Code.

<P><LI>Create the following function in the module, and then close the module:
<P>
<P><PRE>      Function EditModeChange (F As Form) As Variant
<PRE></PRE>         If F.Dirty Then
            F!btnUndo.Enabled = True
         Else
            F!btnUndo.Enabled = False
         End If
      End Function

</PRE><P><LI>Set the form's AfterUpdate property to the following event procedure:
<P>
<PRE>      Sub Form_AfterUpdate ()
         Me!txtEditModeChange.Requery
      End Sub

</PRE><P><LI>Follow steps 7-9 in method 1 above to test this method.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about the Dirty property, search the Help Index for
"Dirty property," or ask the Microsoft Access 97 Office Assistant.
<P>
For more information about the Timer event, search the Help Index for
"Timer Event," or ask the Microsoft Access 97 Office Assistant.
 
<PRE>Keywords          : kbusage FmsEvnt
Version           : 2.0 7.0 97
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 24, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
