

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL5: How to Display Hourglass Pointer Running Macro in Dialog </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q147301">
<META NAME="KBModify" CONTENT="1997/09/02">
<META NAME="KBCreate" CONTENT="1996/02/22">
<META NAME="Keywords" CONTENT="PgmHowTo kbcode kbhowto kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel version 5.0, the mouse pointer is normally displayed as an hourglass when you run a macro. The exception to this is when you run a macro from a control in a custom dialog box. In this case, the mouse pointer continues to be displ...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAO2,QBVP,QBS0,QAH4,QA01,QA50,QAFF,QAB9,QDL9,QBWS,QBWO,QBWN,QBVV,QAK7,QAMA V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL5: How to Display Hourglass Pointer Running Macro in Dialog</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 2, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q147301</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, version 5.0
<LI>Microsoft Windows, version 3.1
<LI>Microsoft Windows 95
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Excel version 5.0, the mouse pointer is normally displayed as
an hourglass when you run a macro. The exception to this is when you run a
macro from a control in a custom dialog box. In this case, the mouse
pointer continues to be displayed as an arrow, and does not give you an
indication that the macro (event procedure) is running. This article
demonstrates how to change the mouse pointer in Microsoft Excel for Windows
version 5.0 while displaying a dialog box from a Visual Basic for
Applications macro in Microsoft Excel version 5.0.
<P>
NOTE: In Microsoft Excel version 7.0 you can change the mouse pointer to an
hourglass.
<P>
For additional information, please see the following article in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q130044.htm">Q130044</A></B>
   TITLE     : XL: Controlling Appearance of Mouse Pointer Within Macro

</PRE><h2>MORE INFORMATION</h2>
 
<P>
Microsoft Excel version 5.0 does not have a Cursor object; therefore, you
cannot change the mouse pointer to an hourglass from a Visual Basic for
Applications statement in the macro.
<P>
The example below demonstrates how to change the mouse pointer in Microsoft
Excel for Windows version 5.0 while displaying a dialog box from a Visual
Basic for Applications macro in Microsoft Excel version 5.0.
<P>
Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft Product Support Services (PSS) Engineers
can help explain the functionality of a particular macro, they will not
modify these examples to provide added functionality, nor will they help
you construct macros to meet your specific needs. If you have limited
programming experience, you may want to consult one of the Microsoft
Solution Providers. Solution Providers offer a wide range of fee-based
services, including creating custom macros. For more information about
Microsoft Solution Providers, call Microsoft Customer Information Service
at (800) 426-9400.
<P>
<P><h3>Visual Basic Code Example</h3>
 
<P>
<PRE>'This example requires two dialog sheets.
'Dialog #1: "Maindialog" (without the quotation marks)
'Dialog #2: "WaitDialog" (without the quotation marks)

'On Dialog #1, place a button and assign the procedure, "showWaitDialog,"
'(without quotation marks)to the button.
'Set the DismissButton property for the button.

'On Dialog #2, "WaitDialog," assign the frame to the procedure,
'"WaitDialog," (without the quotation marks).

'Run the procedure "main" from a worksheet.
'The procedure "main" will display a dialog box with a button that is
'assigned to the procedure "showWaitDialog" (without the quotation marks).
'Click the button. This will run the procedure "showWaitDialog." When
</PRE>"WaitDialog" shows, the procedure assigned to the frame will run. The
<PRE>'procedure "WaitDialog" will run and show the dialog box "WaitDialog." The
'macro assigned to its frame "showWaitDialog" will run, changing the mouse
'pointer and showing the dialog box "WaitDialog."

'Code starts here:

   Option Explicit

   'Declaration for APIs.
   Private Declare Function loadCursor Lib "USER" _
   (ByVal hInstance As Integer, ByVal lpCursorName As Any) _
    As Integer

   Private Declare Function SetCursor Lib "USER" _
   (ByVal hCursor As Integer) As Integer

   'Standard Cursor IDs.
   Private Const IDC_ARROW = 32512&amp;
   Private Const IDC_IBEAM = 32513&amp;
   Private Const IDC_WAIT = 32514&amp;
   Private Const IDC_CROSS = 32515&amp;
   Private Const IDC_UPARROW = 32516&amp;
   Private Const IDC_SIZE = 32640&amp;
   Private Const IDC_ICON = 32641&amp;
   Private Const IDC_SIZENWSE = 32642&amp;
   Private Const IDC_SIZENESW = 32643&amp;
   Private Const IDC_SIZEWE = 32644&amp;
   Private Const IDC_SIZENS = 32645&amp;

   Private oldcursor%, fWaitCursorSet As Boolean

   'This is the main subroutine.
   'This dialog has a button assigned to the procedure "showWaitDialog."
   Sub main()
       Application.DialogSheets("MainDialog").Show
   End Sub

   'This procedure should be assigned to the button on the Dialogsheet
   '"WaitDialog" (without quotation marks).
   Sub showWaitDialog()
     Application.DialogSheets("WaitDialog").Show
   End Sub

   'This sub uses APIs to change the mouse pointer.
   Sub SetWait(fSetWaitCursor As Boolean)
    'If they have not set the cursor to wait, do not try to un-set it.
    If fSetWaitCursor Then
      oldcursor% = SetCursor(loadCursor(0, IDC_WAIT))
       fWaitCursorSet = True
     ElseIf Not fSetWaitCursor And fWaitCursorSet Then
       SetCursor oldcursor%
       fWaitCursorSet = False
      End If
   End Sub

   'Assign this procedure to the frame of the Dialogsheet "WaitDialog"
   '(without the quotation marks).

   Sub WaitDialog()
     Application.SendKeys ("~")
    MsgBox "This does not show"

   'This line changes the mouse pointer to an Hour Glass.
    SetWait (IDC_WAIT)

    'Put your procedure here in place of TestLoop.
    TestLoop
    SetWait (IDC_ARROW)
    Application.DialogSheets("WaitDialog").Hide
    End Sub

   Sub TestLoop()
   Dim x As Integer
     For x = 1 To 200
     ActiveCell.Value = x
     ActiveCell.Offset(1, 0).Select
     Next x
   End Sub
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 5.00<BR>
Keywords          : PgmHowTo kbcode kbhowto kbprg<BR>
Version           : 5.00<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 2, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
