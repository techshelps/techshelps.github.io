

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: How to Float MS Access Windows On Top of Other Windows </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q101325">
<META NAME="KBModify" CONTENT="1997/11/12">
<META NAME="KBCreate" CONTENT="1993/07/11">
<META NAME="Keywords" CONTENT="kbprg FmsHowTo">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  With the Microsoft Access Popup property, you can create forms that  float  (that is, they stay on top of other forms) within Microsoft Access. However, if you set focus to ...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA1S,QDN9,QDL9,QBWO,QBWN,QAY5,QBE7,QBE6,QBWQ,QBS0,QAB9,QA7H,QA5F,QANG,QAMA P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: How to Float MS Access Windows On Top of Other Windows</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 12, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q101325</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 1.0, 1.1, 2.0, 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
With the Microsoft Access Popup property, you can create forms that "float"
(that is, they stay on top of other forms) within Microsoft Access.
However, if you set focus to a non-Microsoft Access application, the
Microsoft Access popup forms are overlapped. If you want your Microsoft
Access popup forms to stay on top of other non-Microsoft Access windows,
you must call the Windows application programming interface (API)
subroutine SetWindowPos().
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
NOTE: Visual Basic for Applications is called Access Basic in Microsoft
Access versions 1.x and 2.0. For more information about Access Basic,
please refer to the "Introduction to Programming" manual in Microsoft
Access version 1.x or the "Building Applications" manual in Microsoft
Access version 2.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To make your form stay on top of non-Microsoft Access forms, call the
following function from an event such as your form's OnOpen property.
<P>
NOTE: In the following sample code, an underscore (_) at the end of a line
is used as a line-continuation character. Remove the underscore from the
end of the line when re-creating this code in Access Basic.
<P>
You may have some Windows API functions defined in an existing Microsoft
Access library; therefore, your declarations may be duplicates. If you
receive the duplicate procedure name error message, remove or comment out
the declarations statement in your code.

<OL><P><LI>Add the following API declarations to your global declarations section:
<P>
<P><PRE>    For Microsoft Access 7.0 and 97:
</PRE><P>
<P><PRE>      Declare Function SetWindowPos Lib "user32" (ByVal hwnd As Long, _
<PRE></PRE>                                       ByVal hWndInsertAfter As Long, _
                                       ByVal X As Long, _
                                       ByVal y As Long, _
                                       ByVal cx As Long, _
                                       ByVal cy As Long, _
                                       ByVal wFlags As Long) As Long

    For Microsoft Access 1.x and 2.0:

      Declare Sub SetWindowPos Lib "User" (ByVal hwnd%, _
                                     ByVal hWndInsertAfter%, _
                                     ByVal X%, ByVal Y%, ByVal cx%, _
                                     ByVal cy%, ByVal wFlags%)

</PRE><P><LI>Add the following Constants to your global Declarations section:
<P>
<P><PRE>      Global Const HWND_TOPMOST = -1
      Global Const SWP_NOSIZE = &amp;H1
      Global Const SWP_NOMOVE = &amp;H2
</PRE>
<P><LI>Create the following Function:
<P>
<P><PRE>      Function TopMost (F As Form)
<PRE></PRE>         Call SetWindowPos(f.hwnd, HWND_TOPMOST, 0, 0, 0, 0, _
                           SWP_NOMOVE Or SWP_NOSIZE)
      End Function

</PRE><P><LI>Create a form and set the following properties.
<P>
<P><PRE>    In Microsoft Access versions 1.x, 2.0, and 7.0:
</PRE><P>
<P><PRE>       Popup: Yes
       OnOpen: =TopMost(Form)
</PRE><P>
<P><PRE>    In Microsoft Access 97:
</PRE><P>
<P><PRE>       Popup: Yes
       OnTimer: =TopMost(Form)
       TimerInterval: 50
</PRE>
<P><LI>Close the form to save any changes; changing the Popup property in
   Design view has no effect unless you reopen your form.

<P><LI>Open the form. When you switch to any other application, this form
   should stay on top of the other application.
<P>
</OL><h3>To Float Any Other Application</h3>
 
<P>
To float any other application on top of another application, such as
floating the Windows Calculator, you can use SetWindowsPos() along
with the FindWindow() Windows API function as demonstrated below.
<P>
NOTE: In the following sample code, an underscore (_) at the end of a line
is used as a line-continuation character. Remove the underscore from the
end of the line when re-creating this code in Access Basic.

<OL><P><LI>Add the following API declarations to your global declarations section:
<P>
<P><PRE>    For Microsoft Access 7.0 and 97:
</PRE><P>
<P><PRE>      Declare Function FindWindow% Lib "user32" Alias "FindWindowA" _
<PRE></PRE>                                          (ByVal lpclassname As Any, _
                                           ByVal lpCaption As Any)

      Declare Function SetWindowPos Lib "user32" (ByVal hwnd As Long, _
                                       ByVal hWndInsertAfter As Long, _
                                       ByVal X As Long, _
                                       ByVal y As Long, _
                                       ByVal cx As Long, _
                                       ByVal cy As Long, _
                                       ByVal wFlags As Long) As Long

    For Microsoft Access 1.x and 2.0:

      Declare Function FindWindow% Lib "user" (ByVal lpclassname As Any, _
                                                  ByVal lpCaption As Any)

      Declare Sub SetWindowPos Lib "User" (ByVal hwnd%, _
                                           ByVal hWndInsertAfter%, _
                                           ByVal X%, _
                                           ByVal Y%, _
                                           ByVal cx%, _
                                           ByVal cy%, _
                                           ByVal wFlags%)

</PRE><P><LI>Add the following Constants to your global Declarations section:
<P>
<P><PRE>      Global Const HWND_TOPMOST = -1
      Global Const SWP_NOSIZE = &amp;H1
      Global Const SWP_NOMOVE = &amp;H2
</PRE>
<P><LI>Create the following Function:
<P>
<P><PRE>      Function Float_Calc()
<PRE></PRE>         Dim X&amp;, hwnd%
         X = Shell("CALC.EXE", 1)
         hwnd% = FindWindow%("SciCalc", 0&amp;)

         Call SetWindowPos(hwnd%, HWND_TOPMOST, 0, 0, 0, 0, SWP_NOMOVE Or _
            SWP_NOSIZE)
      End Function

</PRE></OL>To demonstrate this, open the Debug Window (called Immediate Window in
Microsoft Access 1.x and 2.0) and enter the following command and then
press ENTER:
<P>
<PRE>   ? Float_Calc()

</PRE>NOTE: CALC.EXE is an application that comes with Windows and should be
in your Windows directory.
<P>
<P><h2>REFERENCES</h2>
 
<P>
"Microsoft Windows Programmer's Reference, Volume 2: Functions,"
version 3.10
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: float<BR>
Keywords          : kbprg FmsHowTo<BR>
Version           : 1.0 1.1 2.0 7.0 97<BR>
Platform          : WINDOWS<BR>
Hardware          : x86<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 12, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
