

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: How to Determine If a Table or Query Exists </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q113549">
<META NAME="KBModify" CONTENT="1997/08/29">
<META NAME="KBCreate" CONTENT="1994/04/06">
<META NAME="Keywords" CONTENT="kbprg PgmHowTo PgmObj">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  This article describes a sample user-defined function, IsTableQuery(), that you can use to determine whether a table or query exists in a database. The sample function uses ...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA1S,QAZV,QDN9,QBS0,QAVX,QAY5,QAHD,QAVW,QAUJ,QA5F,QAMA,QBV8,QAB9,QBXS,QAX6 P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: How to Determine If a Table or Query Exists</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q113549</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access 2.0, 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
This article describes a sample user-defined function, IsTableQuery(), that
you can use to determine whether a table or query exists in a database. The
sample function uses the TableDefs and QueryDefs data access objects (DAO)
collections.
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
NOTE: Visual Basic for Applications is called Access Basic in Microsoft
Access version 2.0. For more information about Access Basic, please refer
to the "Building Applications" manual.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following example demonstrates how to use the sample user-defined
function IsTableQuery() to determine whether a table or query exists in a
database:

<OL><P><LI>Open the sample database Northwind.mdb (or NWIND.MDB in version 2.0).

<P><LI>Create a module and type the following line in the Declarations section
   if it isn't already there:
<P>
<P><PRE>      Option Explicit
</PRE>
<P><LI>Type the following procedure:
<P>
<P><PRE>      '********************************************************
      ' FUNCTION: IsTableQuery()
      '
      ' PURPOSE: Determine if a table or query exists.
      '
      ' ARGUMENTS:
<PRE></PRE>      '   DbName: The name of the database. If the database name
      '           is "" the current database is used.
      '    TName: The name of a table or query.
      '
      ' RETURNS: True (it exists) or False (it does not exist).
      '
      '********************************************************
      Function IsTableQuery(DbName As String, TName As String) As Integer
         Dim Db As Database, Found As Integer, Test As String
         Const NAME_NOT_IN_COLLECTION = 3265

         ' Assume the table or query does not exist.
         Found = False

         ' Trap for any errors.
         On Error Resume Next

         ' If the database name is empty...
         If Trim$(DbName) = "" Then
            ' ...then set Db to the current Db.
            Set Db = CurrentDb()
         Else
            ' Otherwise, set Db to the specified open database.
            Set Db = DBEngine.Workspaces(0).OpenDatabase(DbName)

            ' See if an error occurred.
            If Err Then
               MsgBox "Could not find database to open: " &amp; DbName
               IsTableQuery = False
               Exit Function
            End If
         End If

         ' See if the name is in the Tables collection.
         Test = Db.TableDefs(TName).Name
         If Err &lt;&gt; NAME_NOT_IN_COLLECTION Then Found = True

         ' Reset the error variable.
         Err = 0

         ' See if the name is in the Queries collection.
         Test = Db.QueryDefs(TName$).Name
         If Err &lt;&gt; NAME_NOT_IN_COLLECTION Then Found = True

         Db.Close

         IsTableQuery = Found

      End Function

</PRE><P><LI>To test this function, type the following line in the Debug window
   (or Immediate window in version 2.0), and then press ENTER.
<P>
<P><PRE>       ?IsTableQuery("","Invoices")
</PRE><P>
   Note that a "-1" is displayed indicating that the Invoices query was
   found (Microsoft Access stores a  "-1" for True and a "0" for False).

<P><LI>Try using other valid database names and other table and query names in
   the line above.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about Tabledefs, search the Help Index for
"Tabledefs."
<P>
For more information about Querydefs, search the Help Index for
"Querydefs."
 
<PRE>Keywords          : kbprg PgmHowTo PgmObj
Version           : 2.0 7.0 97
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
