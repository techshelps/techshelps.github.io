

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: Start Files or Hyperlinks with Windows API ShellExecute() </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q148632">
<META NAME="KBModify" CONTENT="1997/08/28">
<META NAME="KBCreate" CONTENT="1996/03/16">
<META NAME="Keywords" CONTENT="IntpShell kbprg PgmApi">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multi-user skills.  This article demonstrates how you can use the Windows 32-bit application programming interface (API) ShellExecute() function to start an application associated with a given...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAY5,QAIJ,QAVZ,QAB9,QA1S,QBV8,QBS0,QDL9,QBWQ,QBWO,QBWN,QDN9,QDIT,QAH6,QAJH P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: Start Files or Hyperlinks with Windows API ShellExecute()</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 28, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q148632</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multi-user skills.
<P>
This article demonstrates how you can use the Windows 32-bit application
programming interface (API) ShellExecute() function to start an application
associated with a given file extension without having to know the name of
the associated application. For example, you can start Microsoft Paint by
passing the file name Bubbles.bmp to the ShellExecute() function. Or, you
can connect to the World Wide Web (using a Web Browser installed on your
computer) by passing a hyperlink or URL (Uniform Resource Locator) to the
API function.
<P>
NOTE: Microsoft Access 97 has this functionality built-in.
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to the "Building
Applications with Microsoft Access for Windows 95" manual.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The first step in using the Windows API ShellExecute() is to declare the
function in a standard Visual Basic for Applications module. Once you have
declared the function, you can use the function by following one of the two
examples described later in this article.
<P>
<P><h3>Declaring the Windows API ShellExecute()</h3>
 

<OL><P><LI>Open the sample database Northwind.mdb and create a new module named
   Module1.

<P><LI>Add the following code to the Declarations section:
<P>
<P><PRE>      Option Explicit
</PRE><P>
<P><PRE>      Declare Function ShellExecute Lib "shell32.dll" Alias _
<PRE></PRE>         "ShellExecuteA" (ByVal Hwnd As Long, ByVal lpOperation _
         As String, ByVal lpFile As String, ByVal lpParameters _
         As String, ByVal lpDirectory As String, ByVal nShowCmd _
         As Long) As Long

      Global Const SW_SHOWNORMAL = 1

</PRE><P><LI>Close and save Module1.
<P>
</OL>To test the ShellExecute() function, follow one of the examples described
below.
<P>
<P><h3>Example 1: How to Connect to the World Wide Web</h3>
 
<P>
NOTE: This functionality is built-in to Microsoft Access 97.

<OL><P><LI>Create a new table with the following structure:
<P>
<P><PRE>      Table: WebSites
      -------------------------------
      FieldName: SiteID
<PRE></PRE>         DataType : AutoNumber
         Indexed: Yes (No Duplicates)
      FieldName: SiteURL
         DataType : Text

</PRE><P><LI>Save the table as WebSites and switch the table to Datasheet view. Enter
   the following three records:
<P>
<PRE>      SiteID   SiteURL
      ----------------------------------------
      1        ftp.microsoft.com
      2        www.microsoft.com/kb.htm
      3        <B><A HREF="http://www.microsoft.com/devonly">http://www.microsoft.com/devonly</A></B>

</PRE><P><LI>Create a new form based on the WebSites table using the AutoForm:
   Columnar Wizard.

<P><LI>Switch the form to Design view and add the following command button:
<P>
<P><PRE>      command button:
<PRE></PRE>         Name: cmdConnect
         Caption: Connect to Web

</PRE><P><LI>Set the cmdConnect button's OnClick property to the following [Event
   Procedure]:
<P>
<P><PRE>      Private Sub cmdConnect_Click()
      On Error GoTo cmdConnect_Click_Error
</PRE><P>
<PRE>         Dim StartDoc As Long
            If Not IsNull(Me!SiteURL) Then
              StartDoc = ShellExecute(Me.Hwnd, "open", Me!SiteURL, _
                "", "C:\", SW_SHOWNORMAL)
            End If

         Exit Sub

      cmdConnect_Click_Error:
         MsgBox "Error: " &amp; Err &amp; " " &amp; Error
         Exit Sub
      End Sub

</PRE><P><LI>Switch the form to Form view.

<P><LI>Click the Connect to Web button. Note that your Web browser is started
   automatically and displays the Web site for the URL listed in the
   current record.
<P>
</OL><h3>Example 2: How to Open a File in Its Associated Application</h3>
 

<OL><P><LI>Open Module1 and create the following procedure:
<P>
<P><PRE>      Function StartDoc (DocName As String)
      On Error GoTo StartDoc_Error
</PRE><P>
<PRE>        StartDoc = ShellExecute(Application.hWndAccessApp, "Open", DocName,
            _ "", "C:\", SW_SHOWNORMAL)
      Exit Function

      StartDoc_Error:
         MsgBox "Error: " &amp; Err &amp; " " &amp; Error
         Exit Function
      End Function

</PRE><P><LI>On the View menu, click Debug Window.

<P><LI>In the Debug window, type the following line, and then press ENTER:
<P>
<P><PRE>      StartDoc "Bubbles.bmp"
</PRE><P>
   Note that the function starts Microsoft Paint, which loads the
   Bubbles.bmp file.
<P>
</OL><h3>NOTES</h3>
 

<UL><LI>The Windows API ShellExecute() function differs from the Visual Basic
   Shell() function in that you can pass the ShellExecute() function the
   name of a document, and it will start the associated application, and
   then pass the file name to the application. You can also specify the
   working folder for the application.

<LI>The return value for the StartDoc() function is the same as for the
   Shell() function. It is the Windows instance value of the application
   that was started.
<P>
</UL><h2>REFERENCES</h2>
 
<P>
For information about using the Windows 16-bit API ShellExecute()
function in Microsoft Access version 2.0, please see the following article
in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../ACCESS/Q121157.htm">Q121157</A></B>
   TITLE     : ACC: How to Start Doc with Windows API ShellExecute()
               Function

</PRE></OL>For more information about the ShellExecute() function, please see the
Microsoft Win32 SDK "Programmer's Reference."
 
<PRE>Keywords          : IntpShell kbprg PgmApi
Version           : 7.0 97
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 28, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
