

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: How to Compute Moving Averages in Visual or Access Basic </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q143237">
<META NAME="KBModify" CONTENT="1997/08/28">
<META NAME="KBCreate" CONTENT="1996/01/29">
<META NAME="Keywords" CONTENT="kbprg PgmHowTo MdlGnrl">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  This article demonstrates a sample Visual Basic for Applications function that you can use to compute a moving average for a set of values in a table based on a given period of time. For example, if you have data that has been collected weekly for ...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAE5,QA1S,QANJ,QAMA,QAKD,QBS0,QDN9,QA5F,QBFF,QAY5,QA9N,QA7O,QA7N,QAEF,QACI P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: How to Compute Moving Averages in Visual or Access Basic</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 28, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q143237</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 2.0, 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article demonstrates a sample Visual Basic for Applications function
that you can use to compute a moving average for a set of values in a table
based on a given period of time. For example, if you have data that has
been collected weekly for the past year and you want to compute a
historical average for a three-week time period on each value, you can use
this function to return an average for each value in the table based on the
current value and the values from the two previous weeks.
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
NOTE: Visual Basic for Applications is called Access Basic in Microsoft
Access version 2.0. For more information about Access Basic, please refer
to the "Building Applications" manual.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following sample function computes moving averages based on a table
with a multiple-field primary key. The weekly values of foreign currencies
are used for this example. To create the sample function, follow these
steps:

<OL><P><LI>Create the following table and save it as Table1:
<P>
<P><PRE>      Table: Table1
      -----------------------------------------
      Field Name: CurrencyType [Primary Key]
      Data Type: Text
      Field Size: 25
</PRE><P>
<P><PRE>      Field Name: TransactionDate [Primary Key]
      Data Type: Date/Time
      Format: Short Date
</PRE><P>
<P><PRE>      Field Name: Rate
      Data Type: Currency
      Decimal Places: 4
</PRE>
<P><LI>View the table in Datasheet view and enter the following values:
<P>
<PRE>      CurrencyType     TransactionDate     Rate
      --------------------------------------------
      Yen              8/6/93              $0.0079
      Yen              8/13/93             $0.0082
      Yen              8/20/93             $0.0085
      Yen              8/27/93             $0.0088
      Yen              9/3/93              $0.0091
      Mark             8/6/93              $0.5600
      Mark             8/13/93             $0.5700
      Mark             8/20/93             $0.5800
      Mark             8/27/93             $0.5900
      Mark             9/3/93              $0.6000

</PRE><P><LI>Open a new module and type the following functions:
<P>
<P><PRE>      '*************************************************************
      'Declarations section of the module.
      '*************************************************************
</PRE><P>
<P><PRE>      Option Explicit
</PRE><P>
<P><PRE>      '===============================================================
      ' The following function MAvgs computes moving averages based on
      ' a table with a multiple-field primary key.
      '===============================================================
</PRE><P>
<P><PRE>      Function MAvgs(Periods As Integer, StartDate, TypeName)
<PRE></PRE>         Dim MyDB As DATABASE, MyRST As Recordset, MySum As Double
         Dim i, x
         Set MyDB = CurrentDb()
         Set MyRST = MyDB.OpenRecordset("Table1")

         On Error Resume Next

         MyRST.Index = "PrimaryKey"
         x = Periods - 1
         ReDim Store(x)
         MySum = 0

         For i = 0 To x
            MyRST.MoveFirst
            MyRST.Seek "=", TypeName, StartDate

            ' These two variables should be in the same order as the
            ' primary key fields in your table.
            Store(i) = MyRST![Rate]

            If i &lt;&gt; x Then StartDate = StartDate - 7
            ' The 7 here assumes weekly data; 1 for daily data.

            If StartDate &lt; #8/6/93# Then MAvgs = Null: Exit Function
            ' #8/6/93# is replaced with the earliest date of the data
            ' in your table.
            MySum = Store(i) + MySum
         Next i

         MAvgs = MySum / Periods
         MyRST.Close
      End Function

</PRE><P><LI>Create the following query based on the Table1 table:
<P>
<P><PRE>      Query: Query1
      -------------------------------------------------------
      Field: CurrencyType
      Field: TransactionDate
      Field: Rate
      Field: Expr1: MAvgs(3,[TransactionDate],[CurrencyType])
</PRE><P>
   NOTE: This query will generate a three-week moving average of the Rate
   data. To compute a longer or shorter moving average, change the
   number 3 in the query's Expr1 column to the value you want to compute.

<P><LI>Run the query. Note that you see the following three-week moving average
   for each currency. A Null value indicates that there were not enough
   earlier values to compute that week's average.
<P>
<PRE>      CurrencyType     TransactionDate     Rate      Expr1
          Mark            08/06/93        $0.5600
          Mark            08/13/93        $0.5700
          Mark            08/20/93        $0.5800    0.57
          Mark            08/27/93        $0.5900    0.58
          Mark            09/03/93        $0.6000    0.59
          Yen             08/06/93        $0.0079
          Yen             08/13/93        $0.0082
          Yen             08/20/93        $0.0085    0.0082
          Yen             08/27/93        $0.0088    0.0085
          Yen             09/03/93        $0.0091    0.0088

   NOTE: If you want to compute a moving average for a table with a single
   primary key, use the primary key both as an argument to be passed to
   the function and as the key value for the Seek method.
</PRE></OL> 
<PRE>Keywords          : kbprg PgmHowTo MdlGnrl
Version           : 2.0 7.0 97
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 28, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
