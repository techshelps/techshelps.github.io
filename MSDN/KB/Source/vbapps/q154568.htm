

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: Finding a Location in a Word Document Using Automation </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q154568">
<META NAME="KBModify" CONTENT="1997/08/28">
<META NAME="KBCreate" CONTENT="1996/08/08">
<META NAME="Keywords" CONTENT="AutoGnrl kbinterop IntpOleA">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  This article demonstrates how to use Automation to move to a specific location in a Microsoft Word 6.0 or 7.0 document.  For more information on how to use Automation to move to ...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAIH,QAPN,QA1S,QAH4,QAPP,QBWS,QA28,QATJ,QAB9,QDN9,QA5F,QBWR,QAW6,QA2K,QAX6 P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: Finding a Location in a Word Document Using Automation</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 28, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q154568</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 7.0, 97
<LI>Microsoft Word for Windows 95 version 7.0
<LI>Microsoft Word for Windows version 6.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
This article demonstrates how to use Automation to move to a specific
location in a Microsoft Word 6.0 or 7.0 document.
<P>
For more information on how to use Automation to move to a specific
location in a Microsoft Word 97 document, please see the following
article here in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q160295.htm">Q160295</A></B>
   TITLE     : ACC: Finding a Bookmark in a Word 97 Document Using
               Automation

</PRE>This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Through Automation, it is possible to go to a specific location in a
Microsoft Word 6.0 or 7.0 document. This example uses the WordBasic
EditGoto statement in Microsoft Word for Windows.
<P>
<P><h3>Example: Go to a Bookmark in a Microsoft Word Document</h3>
 
<P>
The following example opens a Microsoft Word document called Wordtest.doc,
moves to a pre-defined bookmark, and then inserts some text. The following
code samples assume that a document, C:\My Documents\Wordtest.doc, exists
and that it contains a pre-defined bookmark, "city" (without the quotation
marks).
<P>
To run this code:

<OL><P><LI>Open Word. When the code runs from Microsoft Access, Word remains open.

<P><LI>Open a Microsoft Access database and create a new module.

<P><LI>Type the following procedure:
<P>
<P><PRE>      Function FindBMark()
<PRE></PRE>         Dim WordObj as Object
         Set WordObj = CreateObject("Word.Basic")
         WordObj.FileOpen "C:\My Documents\Wordtest.doc"
         ' Go to the bookmark named "City."
         WordObj.EditBookmark "City", 0, 0, 0, 1
         WordObj.Insert "Los Angeles"
      End Function

</PRE><P><LI>To test this function, type the following line in the Debug window,
   and then press ENTER.
<P>
<P><PRE>      ? FindBMark()
</PRE><P>
</OL><h3>Example: Go to a Bookmark in a Word Document in a Form's Object Frame</h3>
 
<P>
This procedure works with an embedded Microsoft Word object on a form.
The OLE control on the form is called OLEObj.
<P>
To run this code:

<OL><P><LI>Open a new, blank form in Design view.

<P><LI>Create an unbound object frame on the form. When prompted with
   the Insert Object dialog box, click the Create From File button
   and choose the Microsoft Word document that contains your bookmarks
   ("C:\My Documents\Wordtest.doc"). Click OK.

<P><LI>Display the property sheet for the object frame control. Set the Name
   property to OLEObj.

<P><LI>Add a command button to the form with the following properties:
<P>
<P><PRE>      Command button:
<PRE></PRE>         Caption: Find Bookmark
         OnClick: =FindBookMark()

</PRE><P><LI>On the View menu, click Code to open the form's module.

<P><LI>Type the following procedure:
<P>
<P><PRE>      Function FindBookMark()
<PRE></PRE>         Dim WordObj as Object
         Me![OLEObj].Verb = -2   ' Tells MS Access to open the application.
         Me![OLEObj].Action = 7  ' Activates the application.
         Set WordObj = Me![OLEObj].Object.Application.WordBasic
         ' Goes to the pre-defined bookmark named "City" and inserts "Los
         ' Angeles."
         WordObj.EditGoto "city"
         WordObj.Insert "Los Angeles"
         WordObj.FileClose
      End Function

</PRE><P><LI>To run the code, open the form in Form view and click the command
   button. Microsoft Word becomes the active application, moves the
   insertion point to the bookmark, and inserts the text. To update the
   object frame's contents, on the File menu, click "Close and Return to
   Formx: Form."
<P>
</OL>NOTE: In both examples, when the Automation object variable loses scope,
the instance of Microsoft Word is unloaded, unless the object was created
from a previous instance (already opened).
<P>
Instead of using the EditGoto statement to go to a bookmark, you can also
use the EditBookmark statement. For more information about the WordBasic
EditBookmark command, search for "EditBookmark," using the Microsoft Word
7.0 Help Index. You must have the WordBasic Help file, Wrdbasic.hlp,
installed.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about using bookmarks in Microsoft Word, search on
"bookmarks," and then "Add a bookmark" using the Microsoft Word 7.0 Help
Index.
<P>
For more information about Automation, search the Help Index for
"Automation," or "working across applications," or ask the Microsoft
Access 97 Office Assistant.
<P>
For more information about the WordBasic EditFind statement used in this
article, search on "EditFind statement" using the Microsoft Word 7.0 Help
Index. You must have the WordBasic help file, Wrdbasic.hlp, installed.
<P>
For more information about the WordBasic EditGoto statement used in this
article, search on "EditGoto statement" in the Microsoft Word 7.0 Help
Index. You must have the WordBasic help file Wrdbasic.hlp installed.
<P>
For more information about the Microsoft Access Verb and Action
properties, search the Help Index for "Verb property" or "Action
property."
 
<PRE>Keywords          : AutoGnrl kbinterop IntpOleA
Technology        : kbole
Version           : 7.0 97
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 28, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
