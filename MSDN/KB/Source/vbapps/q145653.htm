

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC95: Can't Use Visual Basic Procedure to Reference Project </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q145653">
<META NAME="KBModify" CONTENT="1997/08/28">
<META NAME="KBCreate" CONTENT="1996/02/05">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  In Microsoft Excel, Microsoft Project, or Microsoft Access, you cannot use a Visual Basic procedure to establish a reference to a project or to an object library. A project ...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QBVP,QA1S,QDL9,QBWO,QBWN,QAFI,QAJN,QAB3,QAH4,QAB9,QA5F,QAMA,QDN9,QAPN V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC95: Can't Use Visual Basic Procedure to Reference Project</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 28, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q145653</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access version 7.0
<LI>Microsoft Excel for Windows, versions 5.0, 5.0c
<LI>Microsoft Excel for Windows NT, version 5.0
<LI>Microsoft Excel for Windows 95, version 7.0
<LI>Microsoft Project for Windows, version 4.0
<LI>Microsoft Project for Windows 95, version 4.1
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
In Microsoft Excel, Microsoft Project, or Microsoft Access, you cannot use
a Visual Basic procedure to establish a reference to a project or to an
object library. A project is any file that contains a Visual Basic for
Applications module, such as an .xls, .xla, .mpp, .mdb, or .mda file.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To establish a reference in a Visual Basic module to a project when you
will be copying the module to another computer, do either of the following:

<UL><LI>In the module that you want to copy to a different computer, use the
   References dialog box on the Tools menu to reference the project before
   you copy the module to a different computer. Then, copy the file that
   contains this module and the referenced project to the same folder
   (directory) on the second computer. When you use this method, the
   application (Microsoft Excel, Microsoft Project, or Microsoft Access)
   finds the referenced project and establishes the reference again when
   you run the procedure.
<P>
   You can also copy the referenced project to the application's
   folder, the Microsoft Windows folder, the Microsoft Windows\System
   folder, or any folder that is in the MS-DOS path statement.
<P>
   -or-

<LI>Using Microsoft Excel, call a Visual Basic procedure that is located in
   another project by first opening the project file, and then using the
   Run method of the Application object and specifying the name of the
   referenced project and the name of the procedure as in the following
   example.
<P>
   NOTE: Microsoft provides examples of Visual Basic procedures for
   illustration only, without warranty either expressed or implied,
   including but not limited to the implied warranties of merchantability
   and/or fitness for a particular purpose. This Visual Basic procedure is
   provided "as is" and Microsoft does not guarantee that it can be used in
   all situations. Microsoft does not support modifications of this
   procedure to suit customer requirements for a particular purpose.
<P>
<P><PRE>      Workbooks.Open("BOOK1.XLS")
      Application.Run "BOOK1.XLS!Macro1"
</PRE><P>
   Using Microsoft Project, call a Visual Basic procedure that is located
   in another project by first opening the project file, and then using the
   Macro method of the Application object and specifying the name of the
   referenced project and the name of the procedure as in the following
   example:
<P>
<P><PRE>      FileOpen "C:\MSOFFICE\WINPROJ\PROJECT1.MPP"
      Macro "[Project1]Module1!macro1"
</PRE><P>
   Using Microsoft Access, there is no way to create a reference to a
   project through a Visual Basic procedure.
<P>
</UL><h2>MORE INFORMATION</h2>
 
<P>
When you open a Visual Basic module that references a project, the
application (Microsoft Excel, Microsoft Project, or Microsoft Access)
searches for the referenced project file in the following folders:

<UL><LI>The folder that contained the project file when you first established
   the reference.

<LI>The folder in which the file that contains the reference is located.

<LI>The folder in which the Microsoft application is installed.

<LI>The folder in which Microsoft Windows is installed.

<LI>The Windows\System folder.

<LI>Any folder that is located in the path statement in the Autoexec.bat
   file.
<P>
</UL>NOTE: If the referenced project cannot be found in any of these locations,
it will be denoted with the word "MISSING" in the References dialog box.
For example, if the sample Microsoft Access database, Northwind.mdb, could
not be found, the References dialog box would list the following:
<P>
<PRE>   MISSING: Northwind.mdb

</PRE><h2>REFERENCES</h2>
 
<P>
"Visual Basic User's Guide," version 5.0, chapter 4, "Organizing
Procedures and Modules in Workbooks"
<P>
For more information about the Reference command, search on the phrase
"Referencing, other databases," and then "Make a Visual Basic for
applications procedure available to more than one database" using the
Microsoft Access for Windows 95 Help Index.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: macros access95 acc95 xlw<BR>
Keywords          : kbprg<BR>
Version           : 7.0<BR>
Platform          : WINDOWS<BR>
Hardware          : x86<BR>
Issue type        : kbprb<BR>
Solution Type     : Info_Provided<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 28, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
