

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL97: Protect Method Password Is Not Applied to Worksheet </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q161221">
<META NAME="KBModify" CONTENT="1998/03/13">
<META NAME="KBCreate" CONTENT="1996/12/18">
<META NAME="Keywords" CONTENT="kbcode kbprg xlvbainfo">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  When you use the Protect method in a Microsoft Visual Basic for Applications macro to apply password protection to a worksheet, Microsoft Excel does not apply the password to the worksheet.  CAUSE =====  This problem occurs when both of the followi...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QAPN,QAWK,QBS0,QAK7,QAVY,QA6A,QAH4,QAK9,QABC,QAHE,QBVV,QAFF,QBXS,QADZ P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL97: Protect Method Password Is Not Applied to Worksheet</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 13, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q161221</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When you use the Protect method in a Microsoft Visual Basic for
Applications macro to apply password protection to a worksheet, Microsoft
Excel does not apply the password to the worksheet.
<P>
<P><h2>CAUSE</h2>
 
<P>
This problem occurs when both of the following conditions are true:

<UL><LI>You use a second ActiveSheet.Protect command that specifies a password
   in the macro.
<P>
   -and-

<LI>You set all the arguments (Contents, Scenarios, and DrawingObjects) for
   the second ActiveSheet.Protect command to True.
<P>
</UL>NOTE: Microsoft Excel may not apply password protection depending on the
values of the arguments for the Protection statement. In some cases,
Microsoft Excel applies worksheet protection but does not apply a password
even if you specify a password in the macro.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
To work around this problem, use either of the following methods.
<P>
<P><h3>Method 1</h3>
 
<P>
Use the ActiveSheet.Protect command only once and supply all the arguments,
including the password. For example, use the following macro:
<P>
<PRE>   Sub ProtectSheet()

       ActiveSheet.Protect password:="pw", Contents:=True, _
           Scenarios:=False, DrawingObjects:=True, UserInterfaceOnly:=True

   End Sub

</PRE><h3>Method 2</h3>
 
<P>
Set one of the Protect method arguments to False. To do this, use either of
the following methods:

<UL><LI>If the macro is recorded, clear one of the following check
   boxes: Contents, Objects or Scenarios.
<P>
   -or-

<LI>If the macro is manually typed, use the following syntax:
<P>
<PRE>      Sub ProtectSheet()

          ActiveSheet.Protect password:="pw", Contents:=True, _
              Scenarios:=False, DrawingObjects:=True, _
              UserInterfaceOnly:=True

      End Sub

   to set either Contents, Scenarios, or DrawingObjects to False.

</PRE></UL><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem with the products listed at
the beginning of this article. We are researching this problem and will
post new information here in the Microsoft Knowledge Base as it becomes
available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft Excel 97 allows you to add an additional layer of protection by
applying password protection to a previously protected sheet. You can add
this protection programmatically.
<P>
In earlier versions of Microsoft Excel, using the ActiveSheet.Protect
command more than once has no effect. In Microsoft Excel 97, using the
command a second time with a password applies password-level security to a
previously protected sheet as long as the arguments for Contents,
Scenarios, and DrawingObjects are not all set to True. When all the
arguments are set to True, Microsoft Excel protects the active sheet but
does not apply password-level protection. The value of the
UserInterfaceOnly argument has no effect on this behavior.
<P>
The following sample code demonstrates the problem:
<P>
<PRE>   Sub Test()

       ActiveSheet.Protect
       ActiveSheet.Protect password:="pw", contents:=True, _
           Scenarios:=True, DrawingObjects:=True, UserInterfaceOnly:=False

   End Sub

</PRE><h2>REFERENCES</h2>
 
<P>
For more information about protecting information in Microsoft Visual Basic
for Applications programming, click the Index tab in Microsoft Visual Basic
Help, type the following text
<P>
<PRE>   protecting information

</PRE>to go to the "Ways to protect sensitive information" topic.
<P>
For more information about the ActiveSheet.Protect command, type
"activesheet.protect" (without the quotation marks) on a module sheet and
press F1 to display context sensitive Help.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: XL97 8.00<BR>
Keywords          : kbcode kbprg xlvbainfo<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 13, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
