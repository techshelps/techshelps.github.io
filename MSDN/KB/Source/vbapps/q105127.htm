

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: Parameter Limit for Functions in ValidationRule Property </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q105127">
<META NAME="KBModify" CONTENT="1997/08/29">
<META NAME="KBCreate" CONTENT="1993/10/10">
<META NAME="Keywords" CONTENT="kbusage FmsProp TblFldp GnlValid">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  When you are creating a ValidationRule property for a table or control, you may receive the error message  The expression you entered is too complex  in Microsoft Access for Wind...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA1S,QDN9,QAB4,QAY5,QAHE,QAB9,QAH6,QAD7,QBS0,QA5F,QAMA,QAH7,QBV8,QAUD,QAPN V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: Parameter Limit for Functions in ValidationRule Property</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q105127</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 1.0, 1.1, 2.0, 7.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
When you are creating a ValidationRule property for a table or control,
you may receive the error message "The expression you entered is too
complex" in Microsoft Access for Windows 95 version 7.0 or "Expression Too
Complex" in Microsoft Access versions 1.x and 2.0.
<P>
<P><h2>CAUSE</h2>
 
<P>
You can pass a maximum of 28 parameters to a function when you call the
function from the ValidationRule property of a control. Attempts to pass
more than 28 parameters will result in the error message stated above.
(This also applies to table validation rules which can reference user-
defined functions only in Access version 1.x.)
<P>
<P><h2>RESOLUTION</h2>
 
<P>
You can pass more than 28 parameters by concatenating parameters. Each
parameter will be separated by a character (for example, a semicolon).
After passing the individual parameters as one long parameter, you can
parse the individual parameters by searching for the separator character
(the semicolon), using the InStr() and Mid() functions.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
This section of the article assumes that you are familiar with Visual Basic
for Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to the "Building
Applications With Microsoft Access For Windows 95" manual.
<P>
NOTE: Visual Basic for Applications (used in Microsoft Access for Windows
95, version 7.0) is called Access Basic in earlier versions. For more
information about Access Basic, please refer to the "Introduction to
Programming" manual in Microsoft Access version 1.x or the "Building
Applications" manual in version 2.0.
<P>
NOTE: In the following sample code, an underscore (_) at the end of a line
is used as a line-continuation character. Remove the underscore from the
end of the line when re-creating this code in Access Basic.
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 

<OL><P><LI>Open a new module and enter the following:
<P>
<P><PRE>      '*************************************************************
      'Declarations section of the module.
      '*************************************************************
</PRE><P>
<P><PRE>      Option Explicit
</PRE><P>
<P><PRE>      '===============================================================
      ' The following function CanPass28 will be accepted when entered
      ' into a validation rule
      '===============================================================
</PRE><P>
<P><PRE>      Function CanPass28 (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, _
<PRE></PRE>            p, q, r, s, t, u, v, w, x, y, z, a27, b28)
         Dim Parm28, Parm29                          'These 3 lines are
         Parm28 = Mid(b28, 1, InStr(b28, ";") - 1)   'explained in
         Parm29 = Mid(b28, InStr(b28, ";") + 1)      'step 5.
      End Function

      '===============================================================
      'The following function CannotPass29 will give an error message
      ' when used in a validation rule
      '===============================================================

      Function CannotPass29 (a, b, c, d, e, f, g, h, i, j, k, l, m, n, _
            o, p, q, r, s, t, u, v, w, x, y, z, a27, b28, c29)
      End Function

</PRE><P><LI>Open a new form. Add a text box to the form.

<P><LI>Enter the following expression for the ValidationRule property of the
   text box, and then press ENTER:
<P>
<P><PRE>      -1 = CannotPass29 (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16, _
<PRE></PRE>              17,18,19,20,21,22,23,24,25,26,27,28,29)

   Notice that you receive the error message "The expression you entered
   is too complex" in version 7.0 or "Expression Too Complex" in versions
   1.x and 2.0.

</PRE><P><LI>Change the expression for the ValidationRule property to the following,
   and then press ENTER:
<P>
<P><PRE>      -1 = CanPass28 (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16, _
<PRE></PRE>              17,18,19,20,21,22,23,24,25,26,27,28)

   Note that you do not receive an error message.

</PRE><P><LI>Enter the following expression, which concatenates the last two
   parameters to one parameter, for the ValidationRule property. Press
   ENTER:
<P>
<P><PRE>      -1 = CanPass28(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16, _
<PRE></PRE>              17,18,19,20,21,22,23,24,25,26,27,28&amp;";"&amp;29)

   The last two parameters are separated inside the function by searching
   for the semicolon with the following lines from the function created in
   step 1:

     Parm28 = Mid(b28, 1, InStr(b28, ";") - 1)
     Parm29 = Mid(b28, InStr(b28, ";") + 1)

</PRE></OL><h2>REFERENCES</h2>
 
<P>
For more information about Validation rules, search for "Validation Rule
property," and then "ValidationRule, ValidationText Properties" using the
Microsoft Access for Windows 95 Help Index.
 
<PRE>Keywords          : kbusage FmsProp TblFldp GnlValid
Version           : 1.0 1.1 2.0 7.0
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbprb
Solution Type     : Info_Provided</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
