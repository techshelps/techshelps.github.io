

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Create a Report in Word w/Excel Chart via OLE Automation </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q114378">
<META NAME="KBModify" CONTENT="1997/09/29">
<META NAME="KBCreate" CONTENT="1994/05/02">
<META NAME="Keywords" CONTENT="IAPOLE vbwin GnrlVb kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  This article demonstrates how to use OLE automation from Visual Basic to create a report in Word for Windows that contains an embedded Excel chart.  MORE INFORMATION  Using OLE Automation, you can programmatically create a chart in Excel and specif...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAIH,QBVP,QACI,QBS0,QBJZ,QAPN,QDNX,QA9N,QAH4,QAYL,QAUR,QA36,QANF,QAQG,QBWS V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Create a Report in Word w/Excel Chart via OLE Automation</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q114378</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:
<P>
- Standard and Professional Editions of Microsoft Visual Basic for
<PRE>  Windows, version 3.0
</PRE>- Microsoft Word for Windows, version 6.0
- Microsoft Excel, version 5.0
- Microsoft Office for Windows, version 4.0
 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article demonstrates how to use OLE automation from Visual Basic to
create a report in Word for Windows that contains an embedded Excel chart.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Using OLE Automation, you can programmatically create a chart in Excel and
specify where you want to place that chart in a Word document. Although you
could programmatically move the insertion point to a specific position
within the document, you typically will know ahead of time exactly where
you want to put the chart in the document.
<P>
By creating a template in Word and placing a bookmark in the template to
specify the location of the chart, you can precisely insert the chart at
any position within the document.
<P>
For specific information that explains how to create a chart in Excel
version 5.0 via OLE Automation, please see the following article in
the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q112417.htm">Q112417</A></B>
   TITLE     : HOWTO: Create Excel Chart w/ OLE Automation from Visual
               Basic

</PRE><h3>Step-by-Step Example</h3>
 

<OL><P><LI>Start Microsoft Word version 6.0 for Windows.

<P><LI>From the File menu, choose New (ALT, F, N). Then select Template.

<P><LI>Insert the text that you want to appear in all reports. Then place the
   cursor where you want the Excel Chart to be inserted.

<P><LI>From the Edit menu, choose BookMark (ALT, E, B). Name the bookmark
   Chart1, and click the Add button.

<P><LI>Save the Template. From the File menu, choose Save (ALT F, S), giving
   the filename of the template "C:\WINWORD\TEMPLATE\MYREPORT.DOT"

<P><LI>Close Word. From the File Menu, choose Exit (ALT, F, X).

<P><LI>Start a new project in Visual Basic (ALT, F, N). Form1 is created
   by default.

<P><LI>Add a command button (Command1) to Form1.

<P><LI>Add the following code to the General Declarations section of Form1:
<P>
<P><PRE>      Dim oWDBasic As Object
<PRE></PRE>   ' By making this object global to the Form, Word will not close down
   ' once the Command1_Click event is finished. If this variable where
   ' declared within the Click event, the scope of the variable would be
   ' local to the Click event. In which case, when the Click event ended,
' the variable would be de-allocated, and Word would unload without
   ' making needed changes to the document and without saving changes made
   ' by the code in the Click Event.

</PRE><P><LI>Add the following code to the Command1_Click event procedure:
<P>
<PRE>      Sub Command1_Click ()

         ' Create XLChart and copy it.
         CreateXLChart

         Set oWDBasic = CreateObject("Word.Basic")

         ' Create a new document based on template previously created
         oWDBasic.FileNew "C:\WINWORD\TEMPLATE\MYREPORT.DOT"

         ' Insert chart into document where the bookmark 'Chart1' exists

         oWDBasic.EditGoto "Chart1"
         oWDBasic.EditPaste

         ' Save new document to disk
         oWDBasic.FileSaveAs "C:\WINWORD\REPORT.DOC"

      End Sub

</PRE><P><LI>Add the following new procedure to the General Declarations section of
<P><PRE>    Form1:
</PRE><P>
<P><PRE>    Sub CreateXLChart ()
</PRE><P>
<P><PRE>       Dim objXLsheet As Object ' reference to Excel Worksheet
       Dim objRange1 As Object  ' reference to the first series in chart
       Dim objRange2 As Object  ' reference to the second series in chart
       Dim objChart1 As Object  ' reference to the chart created
</PRE><P>
<P><PRE>       Dim iRow As Integer ' Index variable for the current Row
       Dim iCol As Integer ' Index variable for the current Row
</PRE><P>
<P><PRE>       Dim strTmpRange As String ' Temporarily hold Range in R1C1 notation
</PRE><P>
<P><PRE>       Const cNumCols = 10 ' Number of points in each Series
       Const cNumRows = 2  ' Number of Series
</PRE><P>
<P><PRE>       ' Create a Worksheet Object
       Set objXLsheet = CreateObject("Excel.Sheet")
</PRE><P>
<P><PRE>       Randomize Timer
       ' Insert Random data into Cells for the two Series:
       For iRow = 1 To cNumRows
<PRE></PRE>          For iCol = 1 To cNumCols
             objXLsheet.Cells(iRow, iCol).Value = Int(Rnd * 50) + 1
          Next iCol
       Next iRow

       ' Insert Named Ranges:
       For iRow = 1 To cNumRows
       ' Enter the following two lines as one, single line of code:
       strTmpRange = "R" &amp; iRow &amp; "C" &amp; Format$(1) &amp; ":R" &amp; iRow &amp; "C"
          &amp; Format$(cNumCols)
       ' Enter the following two lines as one, single line of code:
       objXLsheet.Parent.Names.Add "Range" &amp; Format$(iRow), "=Sheet1!" &amp;
          strTmpRange
       Next iRow

       ' Add a ChartObject to the worksheet:
       Set objChart1 = objXLsheet.ChartObjects.Add(100, 100, 200, 200)

       ' Assign the Ranges created above as the individual series
       ' for the chart:
       For iRow = 1 To cNumRows
          objChart1.Chart.SeriesCollection.Add "Range" &amp; Format$(iRow)
       Next iRow

       ' Copy Chart for paste into the Word Report:
       objChart1.Copy

       ' Close this instance of Excel without saving changes:
       objXLsheet.Parent.Saved = True
       objXLsheet.application.Quit

   End Sub

</PRE><P><LI>Press the F5 key to run the program.
<P>
</OL>After the Excel chart is created in the background, Word starts and
the chart is inserted into the document where the bookmark Chart1 was
established. Then it is saved to disk.
 
<PRE>Keywords          : IAPOLE vbwin GnrlVb kbprg
Technology        : kbole kbvba
Version           : WINDOWS:3.0
Platform          : WINDOWS
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
