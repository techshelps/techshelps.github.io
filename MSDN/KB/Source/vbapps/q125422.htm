

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL5: Creating a Masked Password Dialog Box in Visual Basic </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q125422">
<META NAME="KBModify" CONTENT="1997/12/10">
<META NAME="KBCreate" CONTENT="1995/01/26">
<META NAME="Keywords" CONTENT="kbcode kbprg PgmHowto">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel, you can create a custom dialog box to prompt a user for information using text boxes, buttons, or other dialog box controls. Normally, when you type text in an edit box, the text is displayed as you type. However, you can use a ...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBV4,QAHP,QA01,QAGB,QAGC,QBS0,QBJZ,QBVP,QBXS,QAWK,QAH4,QAUD,QBWS,QAG2,QAY2 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL5: Creating a Masked Password Dialog Box in Visual Basic</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q125422</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, versions 5.0, 5.0c
<LI>Microsoft Excel for the Macintosh, versions 5.0, 5.0a
<LI>Microsoft Excel for Windows NT, version 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Excel, you can create a custom dialog box to prompt a user for
information using text boxes, buttons, or other dialog box controls.
Normally, when you type text in an edit box, the text is displayed as you
type. However, you can use a Visual Basic, Applications Edition procedure
to create the effect of a hidden, or "masked," edit box. This can be useful
for creating a password dialog box, where you do not want the text entered
in an edit box to be "visible." The following information describe how to
create this effect.
<P>
NOTE: This functionality is built into Microsoft Excel for Windows 95,
version 7.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To "mask" an edit box, you can create two edit boxes; one that's visible
and one that is hidden. While the user enters the password in the hidden
edit box, a Visual Basic procedure enters "masking" characters in the
visible edit box.
<P>
<P><h3>Visual Basic Code Example</h3>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>To simulate the effect of a masked edit box, follow these steps:

<OL><P><LI>Create a dialog sheet with a dialog frame that has an OK button, a
   Cancel button, and two edit boxes. The edit boxes should be the same
   size.

<P><LI>Drag one of the edit boxes off of the dialog frame on the dialog sheet.
   Select this edit box. In the Name box, type "EditHidden" (without the
   quotation marks) and press ENTER.

<P><LI>Position the second edit box on the dialog frame where you want the
   password to be entered.

<P><LI>On the dialog frame, select the second edit box. In the Name box, type
   "EditShown" (without the quotation marks) and press ENTER.

<P><LI>From the Tools menu, choose Tab Order. From the Tab Order list, select
   EditHidden. Click the up arrow button until EditHidden is at the
   top of the Tab Order list. Choose OK.

<P><LI>From the Insert menu, choose Macro, and then choose Module, to insert a
   new module sheet. In the new module, enter the following:
<P>
<P><PRE>      ' Dimension variable as public
      Public CancelFlag As Boolean
</PRE><P>
<PRE>      Sub Main()
         ' Dimension variables.
         Dim password As String

         ' Set initial conditions.
         CancelFlag = False
         DialogSheets(1).EditBoxes("EditHidden").Text = ""

         ' Loop while password is incorrect and cancel button not pressed.
         While password &lt;&gt; "hello" And CancelFlag = False

            ' Set conditions for dialog box display.
            DialogSheets(1).EditBoxes("EditShown").Text = ""
            DialogSheets(1).EditBoxes("EditShown").Enabled = False

            ' Display the dialog box.
            DialogSheets(1).Show

            password = DialogSheets(1).EditBoxes("EditHidden").Text

         ' Continue loop until correct password is entered.
         Wend

         ' Check to see if the Cancel button is chosen.
         If CancelFlag = False Then

            ' If loop has ended and Cancel button has not been pressed,
            ' then password is correct.
            MsgBox "Correct password entered"

         Else

            MsgBox "Dialog was canceled."

         End If
      End Sub

      ' Macro assigned to EditHidden Edit box.
      Sub PasswordMask()
         ' Dimension variables.
         Dim MaskString As String, i As Integer

         MaskString = ""

         ' Match mask string length to length of text entered.
         For i = 1 To Len(DialogSheets(1).EditBoxes("EditHidden").Text)
            MaskString = MaskString &amp; "*"
         Next i

         ' Enter mask string in EditShown Edit box.
         DialogSheets(1).EditBoxes("EditShown").Text = MaskString

      End Sub

      ' Macro assigned to the Cancel button.
      Sub Canceled()

         ' Cancel chosen, set CancelFlag value to True.
         CancelFlag = True

      End Sub

</PRE><P><LI>Select the dialog sheet tab to active the sheet that contains your
   dialog box. On the dialog sheet, select the "EditHidden" edit box, and
   choose Assign Macro from the Tools menu. From the Macro Name/Reference
   list, select PasswordMask and choose OK.

<P><LI>On the dialog box, select the Cancel button, and choose Assign Macro
   from the Tools menu. From the Macro Name/Reference list, select Canceled
   and choose OK.

<P><LI>From the Tools menu, choose Macro. From the Macro Name/Reference list,
   select Main and choose Run.
<P>
</OL>The dialog box that you created is displayed. As you type your password,
the actual text that you type is entered in the hidden edit box outside the
dialog frame. The asterisk character (*) is displayed for each character
that you type in the visible edit box within the dialog frame. The dialog
box will continue to be displayed until you enter the correct password or
until you choose the Cancel button.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 5.00 5.00a 5.00c entry field hide hidden asterisks <BR>
asterix vba astericks<BR>
Keywords          : kbcode kbprg PgmHowto<BR>
Version           : WINDOWS: 5.0, 5.0c; MACINTOSH: 5.0, 5.0a<BR>
Platform          : MACINTOSH WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
