

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: How to Index an Existing Field with DAO (95/97) </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q141612">
<META NAME="KBModify" CONTENT="1997/08/28">
<META NAME="KBCreate" CONTENT="1995/12/20">
<META NAME="Keywords" CONTENT="kbprg PgmHowTo MdlDao">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  This article demonstrates how you can create a compound (multiple-field) index in an existing table using data access objects (DAO).  This article assumes that you are familiar w...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QATJ,QA28,QA7O,QA7N,QA1S,QDN9,QBS0,QAMA,QABD,QABE,QBXS,QAPN,QAHD,QAYY,QAJQ P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: How to Index an Existing Field with DAO (95/97)</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 28, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q141612</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
This article demonstrates how you can create a compound (multiple-field)
index in an existing table using data access objects (DAO).
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
An Index object contains the fields that are being indexed and usually
contains only a single field. The Index object created in the following
example has two fields appended to it, creating a multiple-field index.

<OL><P><LI>Open the sample database Northwind.mdb.

<P><LI>Create the following new table:
<P>
<P><PRE>      Table: Interviews
      ----------------------------
      Field Name: CustomerID
<PRE></PRE>         Data Type: Number
         Field Size: Long Integer
      Field Name: InterviewerID
         Data Type: Number
         Field Size: Long Integer
      Field Name: Appointment
         Data Type: Date/Time

</PRE><P><LI>Save the table as Interviews and then close it. Do not create a primary
   key.

<P><LI>Create a module and type the following procedure:
<P>
<P><PRE>      '---------------------------------------------------------------
      'PURPOSE: Adds a multiple-field index to a table.
      'ACCEPTS: Nothing.
      'RETURNS: Nothing.
      '---------------------------------------------------------------
      Function AddMultiIndex ()
<PRE></PRE>         Dim dbs As Database, tdf As TableDef
         Dim idx As Index, fld As Field

         Set dbs = CurrentDb()

         ' Open the table definition.
         Set tdf = dbs.TableDefs("Interviews")

         ' Create an index called PrimaryKey for this TableDef
         ' and turn on the Primary and Required properties.
         Set idx = tdf.CREATEINDEX("PrimaryKey")
         With idx
            .Name = "PrimaryKey"
            .PRIMARY = True
            .Required = True
            .IgnoreNulls = False
         End With

         ' Create an index field with the same name as a table field,
         ' then append it to the index.
         Set fld = idx.CreateField("CustomerID")
         idx.Fields.Append fld

         ' Do the second field the same way.
         Set fld = idx.CreateField("InterviewerID")
         fld.Attributes = dbDescending
         idx.Fields.Append fld

         ' Append the index to the TableDef.
         tdf.Indexes.Append idx

      End Function

</PRE><P><LI>To test this function, type the following line in the Debug window,
   and then press ENTER.
<P>
<P><PRE>      ? AddMultiIndex()
</PRE>
<P><LI>Open the Interviews table in Design view. Note the compound primary key
   on the CustomerID and InterviewerID fields.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about TableDefs, search for "DAO collections," and
then "TableDefs" using the Microsoft Access Help Index.
<P>
For more information about Indexes, search for "indexes," and
then "creating" using the Microsoft Access Help Index.
<P>
For information about how to index an existing field in Microsoft Access
2.0, please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../ACCESS/Q112107.htm">Q112107</A></B>
   TITLE     : ACC2: How to Index an Existing Field with DAO
</PRE></OL> 
<PRE>Keywords          : kbprg PgmHowTo MdlDao
Version           : 7.0 97
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 28, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
