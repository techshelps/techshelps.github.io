

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: How to Fill Text Boxes on a Report Using Visual Basic </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q143280">
<META NAME="KBModify" CONTENT="1997/10/24">
<META NAME="KBCreate" CONTENT="1996/01/30">
<META NAME="Keywords" CONTENT="kbprg RptOthr">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  This article describes how to create a sample Visual Basic for Applications function that populates (or fills) controls on a report based on a table or query when you preview or ...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBT6,QBCF,QBV4,QBS0,QA1S,QAHP,QAM3,QDN9,QBCE,QAPF,QA5F,QAMA,QAY5,QAPN,QAGI P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: How to Fill Text Boxes on a Report Using Visual Basic</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 24, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q143280</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
This article describes how to create a sample Visual Basic for Applications
function that populates (or fills) controls on a report based on a table
or query when you preview or print the report. The sample function
fills a newly-created text box on a report with a value from the
QuantityPerUnit field in the Products table of the sample database
Northwind.mdb. The report is based on the Current Product List query
of the Northwind database.
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
NOTE: This article explains a technique demonstrated in the sample
files, RptSampl.exe (for Microsoft Access for Windows 95 version 7.0)
and RptSmp97.exe (for Microsoft Access 97). For information about how
to obtain these sample files, please see the following articles in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../ACCESS/Q145777.htm">Q145777</A></B>
   TITLE     : ACC95: Microsoft Access Sample Reports Available on MSL

   ARTICLE-ID: <B><A HREF="../ACCESS/Q175072.htm">Q175072</A></B>
   TITLE     : ACC97: Microsoft Access 97 Sample Reports Available on MSL

</PRE><h2>MORE INFORMATION</h2>
 
<P>
The following example calls a Visual Basic for Applications function on a
report's OnFormat property to fill an unbound control on the report. As an
alternative, you can call the function from the ControlSource property of
the unbound control. To create the example, follow these steps:

<OL><P><LI>Open the sample database Northwind.mdb.

<P><LI>Use the Report Wizard to create a new report based on the Current
   Product List query with the following options:
<P>
<P><PRE>    - Include both fields
    - Add no grouping levels
    - Sort by ProductName
    - Use the default Layout setting
    - Select Corporate style
    - Name the report Fill Report
</PRE>
<P><LI>Open the Fill Report report in Design view.

<P><LI>Add the following text box to the Fill Report report's detail section:
<P>
<P><PRE>      Name: Quantity
      ControlSource: &lt;leave empty&gt;
</PRE>
<P><LI>Type the following sample code in a new or existing module:
<P>
<P><PRE>      Function FillRep()
      Dim rs As Recordset
      Dim db As DATABASE
</PRE><P>
<P><PRE>      Set db = CurrentDb()
      Set rs = db.OpenRecordset("Products", dbOpenDynaset)
</PRE><P>
<P><PRE>      rs.MoveFirst
      rs.FindFirst "[ProductID]=" &amp; Reports![Fill Report]![ProductID]
</PRE><P>
<P><PRE>      ' Use this line if the function is called from report
      ' detail section's OnFormat property event procedure.
      Reports![Fill Report]![Quantity] = rs![QuantityPerUnit]
</PRE><P>
<P><PRE>      ' -or- use this line if the function is called from the
      ' ControlSource property of the unbound control.
      FillRep = rs![QuantityPerUnit]
      End Function
</PRE>
<P><LI>Set the report detail section's OnFormat property as follows:
<P>
<P><PRE>      =FillRep()
</PRE><P>
   NOTE: You can also call the FillRep() function from the ControlSource
   property of the unbound Quantity text box as follows:
<P>
<P><PRE>      Name: Quantity
      ControlSource: =FillRep()
</PRE><P>
   If you use this method, add a comment (') in front of this line of code
   in step 5:
<P>
<P><PRE>      Reports![Fill Report]![Quantity] = rs![QuantityPerUnit]
</PRE>
<P><LI>Preview the report. Note that the Quantity text box on the report is
   filled by the Visual Basic for Applications function.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For an example of how to fill text boxes on a report using Access Basic,
please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../ACCESS/Q109943.htm">Q109943</A></B>
   TITLE     : How to Fill Text Boxes on a Report Using Access Basic
</PRE></OL> 
<PRE>Keywords          : kbprg RptOthr
Version           : 7.0 97
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 24, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
