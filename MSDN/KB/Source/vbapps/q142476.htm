

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACC: Automation to Create and Manipulate an Excel Workbook </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q142476">
<META NAME="KBModify" CONTENT="1997/08/28">
<META NAME="KBCreate" CONTENT="1996/01/14">
<META NAME="Keywords" CONTENT="AutoGnrl IntpOleA">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  Moderate: Requires basic macro, coding, and interoperability skills.  This article demonstrates how to use Automation to create and manipulate a Microsoft Excel Worksheet.  This article assumes that you are familiar with Visual Basic for Applicatio...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QA1S,QAPN,QA2K,QDN9,QAUD,QAH4,QBS0,QAW6,QAPF,QAKC,QBXS,QAB9,QBXR,QBWS P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ACC: Automation to Create and Manipulate an Excel Workbook</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 28, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q142476</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Moderate: Requires basic macro, coding, and interoperability skills.
<P>
This article demonstrates how to use Automation to create and manipulate
a Microsoft Excel Worksheet.
<P>
This article assumes that you are familiar with Visual Basic for
Applications and with creating Microsoft Access applications using the
programming tools provided with Microsoft Access. For more information
about Visual Basic for Applications, please refer to your version of the
"Building Applications with Microsoft Access" manual.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Create a New Microsoft Excel Worksheet</h3>
 

<OL><P><LI>Create a new folder on drive C named Examples.

<P><LI>Open the sample database Northwind.mdb.

<P><LI>Create a new module and type the following function in the Module
   windows:
<P>
<P><PRE>      Function ExcelTest()
<PRE></PRE>         Dim xlobject As Object, xlsheet As Object

         Set xlobject = CreateObject("excel.sheet.5")
         Set xlsheet = xlobject.Application.activeworkbook.sheets("sheet1")

         With xlsheet
            .range("a1").Value = CDbl(InputBox("Enter 1st Number", _
               "Excel Example"))
               .range("b1").Value = CDbl(InputBox("Enter 2nd Number", _
               "Excel Example"))

               .range("c1").Value = xlsheet.range("a1").Value * _
               xlsheet.range("b1").Value

         End With

         xlsheet.Parent.SaveAs "c:\examples\xltest.xls"
         xlobject.Application.Quit
         Set xlobject = Nothing

      End Function

</PRE><P><LI>Save the module as basExcel.

<P><LI>Press CTRL+G to open the Debug window, and then type the following word:
<P>
<P><PRE>      ExcelTest
</PRE>
<P><LI>When prompted to "Enter 1st number" enter 1. When prompted to "Enter 2nd
   number" enter 2.

<P><LI>Start Microsoft Excel and open the workbook c:\examples\xltest.xls to
   view the results.
<P>
</OL><h3>Create a New Microsoft Excel Worksheet Using a Bound Control on a Form</h3>
 

<OL><P><LI>Create a new table with the following properties:
<P>
<P><PRE>      Table: tblTestExcel
      ----------------------
      Field Name: MyOleField
      Data Type : OLE Object
</PRE>
<P><LI>Create a new form based on the tblTestExcel table by using the AutoForm:
   Columnar Wizard.

<P><LI>Add two text boxes to the form named Text1 and Text2.

<P><LI>Add a command button to the form with the following properties:
<P>
<P><PRE>      Name: cmdMyButton
      Caption: My Button
      OnClick: [Event Procedure]
</PRE>
<P><LI>Type the following code for the command button's OnClick [Event
   Procedure]:
<P>
<PRE>        Dim xlobject As Object, xlsheet As Object
        With myOleField
           .Class = "excel.sheet.5"
           .OLETypeAllowed = acOLEEmbedded
           .Action = acOLECreateEmbed
           .Verb = acOLEVerbInPlaceUIActivate
           .Action = acOLEActivate
        End With

        Set xlobject = Me!myOleField.Object.Application
        Set xlsheet = xlobject.Application.activeworkbook.sheets("sheet1")

        With xlsheet
           .range("a1").Value = CDbl(Me!Text1)
           .range("b1").Value = CDbl(Me!Text2)
           .range("c1").Value = xlsheet.range("a1").Value * _
           xlsheet.range("b1").Value
        End With

        xlobject.Parent.Quit
        Text1.SetFocus

</PRE><P><LI>Switch the form to Form view and enter numeric values into the Text1
   and Text2 fields.

<P><LI>Click the cmdMyButton command button. Note that the Microsoft Excel
   data is inserted into the Object on the form.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information about Automation, type "Automation" in the Office
Assistant, click Search, and then click to view "Automation with Microsoft
Access."
<P>
For more information about Automation, search for "Ole Automation," and
then "Ole Automation" using the Microsoft Access for Windows 95 Help Index.
 
<PRE>Keywords          : AutoGnrl IntpOleA
Technology        : kbole
Version           : 7.0 97
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 28, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
