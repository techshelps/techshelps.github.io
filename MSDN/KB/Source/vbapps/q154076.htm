

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Create an Incremental Search ComboBox </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q154076">
<META NAME="KBModify" CONTENT="1997/10/13">
<META NAME="KBCreate" CONTENT="1996/07/29">
<META NAME="Keywords" CONTENT="GnrlVb kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  The ComboBox that ships with Visual Basic has simplistic functionality whereas many third-party controls offer additional extra features. One of these third-party features is the ability of the ComboBox to search for text and find entries starting ...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QBV3,QAHP,QATX,QA4B,QAMB,QAH4,QA4Q,QAIJ,QASR,QDL9,QBWQ,QBWO,QBWN,QA5B V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Create an Incremental Search ComboBox</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 13, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q154076</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Professional and Enterprise Editions for
   Windows, version 5.0
<LI>Standard, Professional, and Enterprise Editions of Microsoft Visual
   Basic, 16-bit and 32-bit, for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The ComboBox that ships with Visual Basic has simplistic functionality
whereas many third-party controls offer additional extra features. One of
these third-party features is the ability of the ComboBox to search for
text and find entries starting with that text as you type text into the
ComboBox.
<P>
For example, if you type the letters "He," the ComboBox will search for
the first text entry starting with "He," and will display the full text,
such as "Hello World."
<P>
Below is a code sample that demonstrates how to achieve this functionality
with the ComboBox that ships with Visual Basic.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Step by Step Example</h3>
 

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Place a ComboBox control on the form.

<P><LI>Add the following code to the Form1 code window:
<P>
   Option Explicit
<P>
   Private Const WM_SETREDRAW = &amp;HB
   Private Const KEY_A = 65
   Private Const KEY_Z = 90
   #If Win32 Then
<P>
<PRE>   Private Declare Function SendMessage Lib "user32" Alias _
       "SendMessageA" (ByVal hwnd As Long, ByVal wMsg As Long, _
       ByVal wParam As Long, lParam As Long) As Long

   #Else

   Private Declare Function SendMessage Lib "User" ( _
       ByVal hwnd As Integer, ByVal wMsg As Integer, _
       ByVal wParam As Integer, lParam As Any) As Long

   #End If
   Private Sub Combo1_KeyUp(KeyCode As Integer, Shift As Integer)
     Dim sComboText As String
     Dim iLoop As Integer
     Dim sTempString As String
     Dim lReturn As Long
     If KeyCode &gt;= KEY_A And KeyCode &lt;= KEY_Z Then
       'only look at letters A-Z
       sTempString = Combo1.Text
       If Len(sTempString) = 1 Then sComboText = sTempString
       lReturn = SendMessage(Combo1.hWnd, WM_SETREDRAW, False, 0&amp;)
       For iLoop = 0 To (Combo1.ListCount - 1)
         If UCase((sTempString &amp; Mid$(Combo1.List(iLoop), _
           Len(sTempString) + 1))) = UCase(Combo1.List(iLoop)) Then
           Combo1.ListIndex = iLoop
           Combo1.Text = Combo1.List(iLoop)
           Combo1.SelStart = Len(sTempString)
           Combo1.SelLength = Len(Combo1.Text) - (Len(sTempString))
           sComboText = sComboText &amp; Mid$(sTempString, Len(sComboText) + 1)
           Exit For
         Else
           If InStr(UCase(sTempString), UCase(sComboText)) Then
             sComboText = sComboText &amp; Mid$(sTempString, Len(sComboText) _
             + 1)
             Combo1.Text = sComboText
             Combo1.SelStart = Len(Combo1.Text)
           Else
             sComboText = sTempString
             End If
         End If
       Next iLoop
       lReturn = SendMessage(Combo1.hWnd, _
       WM_SETREDRAW, True, 0&amp;)
     End If
   End Sub

   Sub Form_load()
     Combo1.AddItem "Alpha"
     Combo1.AddItem "Beta"
     Combo1.AddItem "Charlie"
     Combo1.AddItem "Delta"
     Combo1.AddItem "Dingo"
   End Sub

</PRE><P><LI>On the Run menu, click Start, or press the F5 key to run the program.
<P>
</OL>If you type the letter "D," you will notice that "Delta" is the active text
in the ComboBox. If you then type an "I," the text "Dingo" will be
displayed. With all subsequent letters you enter, the next word in the
ComboBox list will begin with the sequence of characters you have typed.
<P>
NOTE: The style property of the ComboBox must be "0 - Dropdown Combo" for
this to work correctly.
 
<PRE>Keywords          : GnrlVb kbprg
Technology        : kbvba
Version           : WINDOWS:4.0 5.0
Platform          : WINDOWS
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 13, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
