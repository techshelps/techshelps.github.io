

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>General Protection Fault Using DateValue or TimeValue() </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q125421">
<META NAME="KBModify" CONTENT="1997/07/29">
<META NAME="KBCreate" CONTENT="1995/01/26">
<META NAME="Keywords" CONTENT="kbcode kbmacro kbprb">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel or Microsoft Project, if you create a Visual Basic, Applications Edition, macro that contains a variable with a type- declaration character (for example  MyVar$ ), and you use this variable as an argument in the TimeValue or Date...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QBVP,QAB4,QAYL,QAPN,QAJ6,QBWP,QAAP,QAKD,QDL9,QBWQ,QBWO,QBWN,QAHE,QAB9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>General Protection Fault Using DateValue or TimeValue()</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q125421</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows NT, version 5.0
<LI>Microsoft Excel for Windows, versions 5.0, 5.0c
<LI>Microsoft Project for Windows, version 4.0
<LI>Microsoft Visual Basic Programming System, Applications Edition,
   version 1.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
In Microsoft Excel or Microsoft Project, if you create a Visual Basic,
Applications Edition, macro that contains a variable with a type-
declaration character (for example "MyVar$"), and you use this variable as
an argument in the TimeValue or DateValue functions without assigning a
value to it, you may receive a general protection (GP) fault in the file
OLE2DISP.DLL when you run the macro. Some of the error messages you may
encounter include the following:

<UL><LI>Microsoft Excel for Windows:
<P>
   Excel caused a General Protection Fault in Module OLE2DISP.DLL at
   0002:3C2D

<LI>Microsoft Excel for Windows NT:
<P>
<P><PRE>      Dr. Watson for Windows NT:
<PRE></PRE>         An application error has occurred and an application error
         log is being generated.
         Excel.exe
         Exception access violation (0xc0000005), Address: 0x76eb0b41

</PRE><LI>Microsoft Project for Windows:
<P>
<P><PRE>      WinProj4 caused a General Protection Fault in Module OLE2DISP.DLL
      at 0002:4881
</PRE><P>
</UL>NOTE: The memory addresses in the above error messages may vary.
<P>
<P><h2>CAUSE</h2>
 
<P>
The TimeValue or the DateValue function must receive a string data type
that is a valid time or date, respectively. If the variable used for the
time or date argument has no value, the TimeValue or DateValue function
cannot return a valid result.
<P>
<P><h2>WORKAROUNDS</h2>
 
<P>
Method 1: Use a valid value for the time or date argument.
<P>
<PRE>          For more information about the definition of a valid argument for
          the TimeValue and DateValue functions, see the appropriate topic
          in Visual Basic Reference Help.

</PRE>Method 2: Check the value of the variable before you use it.
<P>
<PRE>          Use a conditional statement (such as IF) to compare the value of
          the argument to "" (two quotation marks). After this
          verification, use standard error-handling as described in Help.
          For example, you can use the "On Error" statement.

</PRE>Method 3: Avoid using the string type-declaration character ($).
<P>
<PRE>          Instead of using a variable with a string type-declaration
          character (such as "MyVar$"), use DIM to declare its type, as in
          the following example:

            DIM MyVar as String

          NOTE: A "type-mismatch" error will still occur if you pass this
          variable without assigning a value to it.

</PRE><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in Visual Basic Programming
System, Applications Edition. We are researching this problem and will post
new information here in the Microsoft Knowledge Base as it becomes
available.
<P>
<P><h2>REFERENCES</h2>
 
<P>
"Visual Basic User's Guide," version 5.0, Chapter 9
<P>
For more information, choose the Search button in Visual Basic Reference
Help, and type the keyword for the topic you want to view.
<P>
<PRE>   Type this keyword and
   choose Show Topics               Select a topic and choose Go To
   ----------------------------------------------------------------

   errors trapping                  On Error statement
   type-declaration character       type-declaration character &lt;definition&gt;
   TimeValue                        TimeValue
   DateValue                        DateValue
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: gpf error-handling handling<BR>
Keywords          : kbcode kbmacro kbprb<BR>
Version           : 5.00 5.00c | 5.00<BR>
Platform          : MACINTOSH WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
