

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Call a Visual Basic Application from Excel </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q105447">
<META NAME="KBModify" CONTENT="1997/09/29">
<META NAME="KBCreate" CONTENT="1993/10/20">
<META NAME="Keywords" CONTENT="IAPDDE vbwin GnrlVb kbinterop kbprg kbfasttip">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  This article outlines the steps necessary to initiate dynamic data exchange (DDE) between an Excel Macro and Visual Basic application at run-time.  This article demonstrates how to:   - Prepare an  Excel Macro that will perform DDE.  - Initiate a m...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAZ2,QBVP,QBJZ,QAUR,QBWS,QAY2,QAMA,QA5F,QAGI,QAIJ,QAH4,QAJH,QA01,QBUG V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Call a Visual Basic Application from Excel</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q105447</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:
<P>
- Standard and Professional Editions of Microsoft Visual Basic for
<PRE>  Windows, version 3.0
</PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article outlines the steps necessary to initiate dynamic data
exchange (DDE) between an Excel Macro and Visual Basic application at
run-time.
<P>
This article demonstrates how to:

<UL><LI>Prepare an  Excel Macro that will perform DDE.
<LI>Initiate a manual DDE link.
<LI>Use Poke to send information from the Excel Worksheet to the Visual
   Basic application.
<P>
</UL><h2>MORE INFORMATION</h2>
 
<P>
A destination application sends commands through DDE to the source
application to establish a link. Through DDE, the source provides data to
the destination at the request of the destination or accepts information
at the request of the destination.
<P>
<P><h3>Example Showing How to Establish a DDE Conversation</h3>
 
<P>
The steps below give an example of how to establish a DDE conversation
between an Excel Worksheet and a Visual Basic application.
<P>
<P><h3>Preparing Visual Basic for DDE</h3>
 

<OL><P><LI>Start Visual Basic or from the File menu, choose New Project (ALT, F, N)
   if Visual Basic is already running. Form1 is created by default.

<P><LI>Add a text box to form1.

<P><LI>Change the following properties:
<P>
<PRE>   Control       Name         Caption       Properties
   --------------------------------------------------------------
   Form1         Form1        Form1         LinkMode  : 1-Source
                                            LinkTopic : Form1
   TextBox       Text1        Text1         LinkItem  : Text1

</PRE><P><LI>Save the project as DDE.MAK, and save the form as DDE.FRM.

<P><LI>From the File menu, choose Make Exe File, and name the .EXE file
   DDE.EXE to enable the link.

<P><LI>Close Visual Basic.
<P>
</OL><h3>Preparing Excel for DDE</h3>
 

<OL><P><LI>When you start Excel, Sheet1.XLS is created for you by default.
   In Cell C2, type the text you want to send to the Visual Basic
   application. Save the Sheet1 spreadsheet.

<P><LI>Create a new Macro Sheet in Excel by choosing New from the File Menu
   and then selecting Macro Sheet.

<P><LI>Type the following macro:
<P>
<P><PRE>    Record1 (a)
    chan=INITIATE("dde","Form1")
    =POKE(chan,"text1",'A:\SHEET1.XLS'!C2)
    =TERMINATE(chan)
    =RETURN(chan)
</PRE><P>
<P><PRE>    The Initiate function starts the Visual Basic application if it is
    not already running and establishes the link with Form1. The Poke
    function puts text from cell C2 of the Sheet1 worksheet into the
    Text1 box on form1. The Terminate function terminates the link, and
    the Return function ends the macro.
</PRE><P>
<P><PRE>    Important Notes
    ---------------
</PRE><P>
<P><PRE>    The following are requirements. You must:
</PRE><P>
<P><PRE>     - Save the Worksheet before attempting the Link.
</PRE><P>
<P><PRE>     - Store the application in the path by making sure the application
       directory is in the path.
</PRE><P>
<P><PRE>     - Not specify the path to the application in the Initiate function.
</PRE>
<P><LI>From the Macro menu, choose Run.

<P><LI>You will see a message box saying Run Macro. In the reference section,
   type 'Macro1.xlm!Record1' and click OK.

<P><LI>If DDE.EXE is not running, you will a message box saying "Remote Data
   not accessible. Start application 'DDE.EXE'." Click Yes.

<P><LI>If DDE.EXE was in the path, it will be run minimized. When you maximize
   it, you will see the data from Sheet1 in the Text1 box. If you don't see
   the data, save Sheet1 and try again.
</OL> 
<PRE>Keywords          : IAPDDE vbwin GnrlVb kbinterop kbprg kbfasttip
Technology        : kbvba
Version           : WINDOWS:3.0
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
