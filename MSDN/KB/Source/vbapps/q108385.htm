

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: Put Statement Allows Writing Beyond End of File </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q108385">
<META NAME="KBModify" CONTENT="1997/09/02">
<META NAME="KBCreate" CONTENT="1993/12/09">
<META NAME="Keywords" CONTENT="kbprg PgmOthr">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel, when you use the Put statement in a Visual Basic for Applications procedure, there is no limit to where you can start writing data to a file. Therefore, it is possible to write data well beyond the current end of a file.  This b...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QBVP,QBJZ,QBWS,QAH4,QAVX,QAVW,QBQU,QAUR,QACI,QA8T,QAYY,QAPN,QAB9,QAIJ P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: Put Statement Allows Writing Beyond End of File</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 2, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q108385</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows version 5.0
<LI>Microsoft Excel for Windows 95, version 7.0
<LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Excel, when you use the Put statement in a Visual Basic for
Applications procedure, there is no limit to where you can start writing
data to a file. Therefore, it is possible to write data well beyond the
current end of a file.
<P>
This behavior is compatible with earlier versions of Visual Basic.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
You can use the Put statement to place data in a file at a specified
location. However, when you write data beyond the end of a file, the gap
between the end of file and the starting point of new data is filled with
random data.
<P>
Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft support engineers can help explain the
functionality of a particular macro, they will not modify these examples to
provide added functionality, nor will they help you construct macros to
meet your specific needs. If you have limited programming experience, you
may want to consult one of the Microsoft Solution Providers. Solution
Providers offer a wide range of fee-based services, including creating
custom macros. For more information about Microsoft Solution Providers,
call Microsoft Customer Information Service at (800) 426-9400.
<P>
In order to see this behavior, you must first create a sample file. Follow
these steps to create a sample file:

<OL><P><LI>On the Start Menu, point to Programs, point to Accessories, and then
   click Notepad.

<P><LI>Type "ABC" (without the quotation marks) into the blank Notepad
   document.

<P><LI>Click Save on the File Menu. In the Save As dialog box, open the
   My Documents folder. Then, type "Test" (without the quotation marks)
   in the File name box, and click Save.

<P><LI>On the File menu, click Exit.
<P>
   This creates a file called Test.txt in the My Documents folder.
<P>
</OL>Next, create a Visual Basic for Applications procedure to illustrate the
behavior discussed in this article.

<OL><P><LI>Close and save any open workbooks, and then open a new workbook.

<P><LI>Start the Visual Basic Editor (press ALT+F11).

<P><LI>On the Insert menu, click Module.

<P><LI>In the module type the following code:
<P>
   Type Test_Record
<P><PRE>     Test As String * 7
</PRE>   End Type
<P>
<PRE>   Sub PutTest()
     Dim P As Test_Record
     Dim filenum As Integer

     filenum = FreeFile()

     'Open the file you created.
     Open "c:\My Documents\Test.txt" For Random As filenum Len = Len(P)

       P.Test = "Testing"

       'Write a record to the file.
       Put #filenum, 2, P

     'Close the file.
     Close #filenum
   End Sub

</PRE><P><LI>Run the PutTest macro.

<P><LI>Open the file Text.txt in Notepad.
<P>
</OL>Note that random data is written between the entry that you made in the
file and "Testing" (without the quotation marks), which is the record that
the PutTest macro wrote to the file.
<P>
For additional information about Working with Random Access Files, please
see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q150700.htm">Q150700</A></B>
   TITLE     : Excel: How to Work with Random Access Files

</PRE></OL><h2>REFERENCES</h2>
 
<P>
For more information about the Put statement, click the Index tab in
Microsoft Visual Basic Help, type the following text
<P>
<PRE>   put

</PRE>and then double-click the selected text to go to the "Put Statement"
topic.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 5.00 7.00 xl97<BR>
Keywords          : kbprg PgmOthr<BR>
Version           : 5.00 7.00 97<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 2, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
