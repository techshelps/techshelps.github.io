

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: Displaying Several Dialog Boxes Without Looping </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q125805">
<META NAME="KBModify" CONTENT="1997/09/02">
<META NAME="KBCreate" CONTENT="1995/02/06">
<META NAME="Keywords" CONTENT="kbprg PgmHowTo kbcode kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbapps">
<META NAME="Description" CONTENT="  In Microsoft Excel, when you create a macro that displays several dialog boxes, you may want to display and hide the dialog boxes with some method other than a Do While...Loop. For example, a Do While...Loop may not be the most effective method if ...">
<META NAME="Product" CONTENT="vbapps">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAFF,QALW,QA01,QAGY,QBS0,QBVP,QAD7,QAGC,QAGB,QA5D,QAH4,QAYZ,QAJD,QANX,QAPN P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: Displaying Several Dialog Boxes Without Looping</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 2, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q125805</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
5.00 5.00c 7.00 97 | 5.00 5.00a
<PRE>WINDOWS            | MACINTOSH
</PRE>kbprg kbcode
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, versions 5.0, 5.0c
<LI>Microsoft Excel for the Macintosh, versions 5.0, 5.0a
<LI>Microsoft Excel for Windows 95, version 7.0
<LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Excel, when you create a macro that displays several dialog
boxes, you may want to display and hide the dialog boxes with some method
other than a Do While...Loop. For example, a Do While...Loop may not be the
most effective method if you want to cycle through several dialog boxes at
a time. The loop is not the best method in this case, because, when you use
this method, a dialog box is still being displayed and remains on the
stack, even after the dialog box has been dismissed.
<P>
Instead of using a Do While ...Loop, you can use the OnTime method to run
the macro at a specified time. Note, however, that when you use this
method, there may be a delay before each dialog box is displayed (this
delay does not occur with the looping method). To create an example that
uses the OnTime method to display dialog boxes, follow the procedure in the
"More Information" section of this article.
<P>
For additional information about solving this problem with the looping
method, please see the following article(s) in the Microsoft Knowledge
Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q111867.htm">Q111867</A></B>
   TITLE     : XL5 Err Msg: "Not Enough Stack Space to Run Macro"

</PRE><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Visual Basic Code Example</h3>
 
<P>
Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft support engineers can help explain the
functionality of a particular macro, they will not modify these examples to
provide added functionality, nor will they help you construct macros to
meet your specific needs. If you have limited programming experience, you
may want to consult one of the Microsoft Solution Providers. Solution
Providers offer a wide range of fee-based services, including creating
custom macros. For more information about Microsoft Solution Providers,
call Microsoft Customer Information Service at (800) 426-9400.
<P>
Use the following steps to create a Visual Basic procedure that uses
command buttons to cycle through four dialog boxes:

<OL><P><LI>On a new Visual Basic module, type following code:
<P>
<PRE>   Sub Dialog1Show()
      DialogSheets("Dialog1").Show 'Shows Dialog1.
   End Sub

   Sub Dialog1Hide()
      DialogSheets("Dialog1").Hide  'Hides Dialog1.
      Application.OnTime Now, "Dialog2Show"  'Runs Sub Dialog2Show.
   End Sub

   Sub Dialog2Show()
      DialogSheets("Dialog2").Show  'Shows Dialog2.
   End Sub

   Sub Dialog2Hide()
      DialogSheets("Dialog2").Hide  'Hides Dialog2.
      Application.OnTime Now, "Dialog3Show"  'Runs Sub Dialog3Show.
   End Sub

   Sub Dialog2HideBack()
      DialogSheets("Dialog2").Hide  'Hides Dialog2.
      Application.OnTime Now, "Dialog1Show"  'Runs Sub Dialog1Show.
   End Sub

   Sub Dialog3Show()
      DialogSheets("Dialog3").Show  'Shows Dialog3.
   End Sub

   Sub Dialog3Hide()
      DialogSheets("Dialog3").Hide  'Hides Dialog3.
      Application.OnTime Now, "Dialog4Show"  'Runs Sub Dialog4Show.
   End Sub

   Sub Dialog3HideBack()
      DialogSheets("Dialog3").Hide 'Hides Dialog3
      Application.OnTime Now, "Dialog2Show" 'Runs Sub Dialog2Show.
   End Sub

   Sub Dialog4Show()
      DialogSheets("Dialog4").Show  'Shows Dialog4.
   End Sub

   Sub Dialog4Hide()
      DialogSheets("Dialog4").Hide 'Hides Dialog4.
   End Sub

   Sub Dialog4HideBack()
      DialogSheets("Dialog4").Hide  'Hides Dialog4.
      Application.OnTime Now, "Dialog3Show" 'Runs Sub Dialog3Show.
   End Sub

</PRE><P><LI>Create four dialog sheets that each contain three buttons: OK, Cancel,
   and a third button with the text "Go Back" (the first dialog box only
   needs the OK and Cancel buttons).

<P><LI>Follow the appropriate procedure below depending on whether you want to
   use the OK and Go Back buttons or the OK and Cancel buttons.
<P>
<P><PRE>    - To use the OK and Go Back buttons, assign the macros in the following
      manner:
</PRE><P>
<PRE>         Dialog1     OK Button         Dialog1Hide

         Dialog2     OK Button         Dialog2Hide
                     Go Back Button    Dialog2HideBack

         Dialog3     OK Button         Dialog3Hide
                     Go Back Button    Dialog3HideBack

         Dialog4     OK Button         Dialog4Hide
                     Go Back Button    Dialog4HideBack

      When you run the first dialog box, the OK button should dismiss the
      current dialog box and show the next dialog box. The Go Back button
      should dismiss the current dialog box and show the previous dialog
      box.

    - To use the OK and Cancel buttons, assign the macros in the following
      manner:

      Dialog1     OK Button      Dialog1Hide

      Dialog2     OK Button      Dialog2Hide
                  Cancel Button  Dialog2HideBack

      Dialog3     OK Button      Dialog3Hide
                  Cancel Button  Dialog3HideBack

      Dialog4     OK Button      Dialog4Hide
                  Cancel Button  Dialog4HideBack

      When you run the first Dialog box, the OK button should dismiss the
      current dialog box and show the next dialog box. The Cancel button
      should dismiss the current dialog and show the previous dialog box.
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 7.00 5.00 5.00c<BR>
Keywords          : kbprg PgmHowTo kbcode kbprg<BR>
Version           : 5.00 5.00c 7.00<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 2, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
