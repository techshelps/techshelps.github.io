

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OFF97: Removing Preceding Space for Values Converted to Strings </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q170723">
<META NAME="KBModify" CONTENT="1997/07/03">
<META NAME="KBCreate" CONTENT="1997/06/27">
<META NAME="Keywords" CONTENT="kbcode kbprg">
<META NAME="KBArea" CONTENT="Support; KB; office, convert, crossnet, odbc, access, word, excel, powerpt, outlook, winprint, setup, exchange">
<META NAME="Description" CONTENT="  The Microsoft Visual Basic for Applications Str() function returns the string representation of a numeric value represented as (n). Positive numbers and zeros are converted to a string with a leading space character.  This article discusses methods...">
<META NAME="Product" CONTENT="Office">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAWH,QDMF,QAYL,QADP,QAKD,QATX,QAH4,QAGF,QAJQ,QAEF,QAY5,QAL3,QAB9,QA6G P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>OFF97: Removing Preceding Space for Values Converted to Strings</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 3, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q170723</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic for Applications included with:
<P>
<P><PRE>    - Microsoft Access versions 7.0, 97
    - Microsoft Word 97 for Windows
    - Microsoft PowerPoint 97 for Windows
    - Microsoft Excel 97 for Windows
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The Microsoft Visual Basic for Applications Str() function returns the
string representation of a numeric value represented as (n). Positive
numbers and zeros are converted to a string with a leading space character.
<P>
This article discusses methods that can be used to remove the preceding
space for values converted to strings.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft support engineers can help explain the
functionality of a particular macro, they will not modify these examples to
provide added functionality, nor will they help you construct macros to
meet your specific needs. If you have limited programming experience, you
may want to consult one of the Microsoft Solution Providers. Solution
Providers offer a wide range of fee-based services, including creating
custom macros. For more information about Microsoft Solution Providers,
call Microsoft Customer Information Service at (800) 426-9400.
<P>
The following macro code example converts a numeric value to a string
value. The variable "lastName" is then joined with "empcode" and stored in
the variable "license":
<P>
<PRE>   lastName = "Peterson"
   empcode = Str(1234)
   license = lastName &amp; empcode 'Result is: Peterson 12345

</PRE>The following macro code example converts a numeric value to a string
value, and then removes the leading space that was automatically added by
Str() using the LTrim$() function. The variable "lastName" is then joined
with "empcode" and stored in the variable "license":
<P>
<PRE>   lastName = "Peterson"
   empcode = Str(1234)
   empcode = LTrim$(empcode)
   license = lastName &amp; empcode 'Result is: Peterson12345

</PRE>In Microsoft Visual Basic for Applications, you can convert numeric values
to string values with the Visual Basic for Applications CStr() function.
The function will drop the leading space automatically without the need for
using the Trim$() function, as in the following example:
<P>
<PRE>   lastName = "Peterson"
   empcode = CStr(1234)
   license = lastName &amp; empcode 'Result is: Peterson12345

</PRE>The Str() function is used to convert a numeric value to a string. This
can be useful when using the MsgBox statement to concatenate text and a
numeric variable. Note that the leading space that is generated by the
Str() function makes it unnecessary to add an extra space between the two
values in the MsgBox statement. For example:
<P>
<PRE>   sValue = Str(457)
   MsgBox "Total sales equal" &amp; sValue
   ' Result is: Total sales equal 457

</PRE>The correct syntax for concatenating text and the contents of a numeric
variable is as follows:
<P>
<PRE>   MsgBox "Total sales equal " &amp; 457
   ' Result is: Total sales equal 457

   -or-

   MsgBox "Total sales equal" &amp; Str(457)
   ' Result is: Total sales equal 457

   -or-

   MsgBox "Total sales equal " &amp; CStr(457)
   ' Result is: Total sales equal 457
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: offcon vba vbe vb<BR>
Keywords            : kbcode kbprg<BR>
Version             : WINDOWS:7.0,97<BR>
Platform            : WINDOWS<BR>
Issue type          : kbinfo<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 3, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
