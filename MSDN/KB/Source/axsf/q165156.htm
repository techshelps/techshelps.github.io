

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Determining How to Define a Stored Procedure in ASP </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q165156">
<META NAME="KBModify" CONTENT="1997/12/11">
<META NAME="KBCreate" CONTENT="1997/03/13">
<META NAME="Keywords" CONTENT="AXSFCompADO AXSFDataBase AXSFSQL kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; axsf">
<META NAME="Description" CONTENT="  This article provides the ASP code necessary to programmatically determine the parameter requirements for any stored procedure. The sample code provided determines the parameter name, data type, direction, and size of all parameters in a stored pro...">
<META NAME="Product" CONTENT="Active Server Pages">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ActiveX ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAHE,QBXS,QAB9,QAH4,QAYY,QAUJ,QAKD,QAGI,QADK,QDNQ,QAPF,QAIB,QBWA,QAPN,QAK6 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Determining How to Define a Stored Procedure in ASP</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 11, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q165156</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Active Server Pages, versions 1.0, 1.0b
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article provides the ASP code necessary to programmatically determine
the parameter requirements for any stored procedure. The sample code
provided determines the parameter name, data type, direction, and size of
all parameters in a stored procedure. The developer can use this acquired
information at design time in defining the stored procedure call. The
method outlined in this article uses the "Parameters.Refresh" method and
the "Parameters" collection and is useful for those developers who do not
have access to other tools used for obtaining stored procedure information.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Determining how to properly call a stored procedure can be tricky if you
are unaware of the stored procedure's parameter information. Without the
correct information, you can’t properly create the ADO parameters.
<P>
The following ASP sample determines any stored procedure's parameter
information. In this example we determine the parameter information for
parameters in a stored procedure named "sp_MyStoredProc" and place them in
an HTML table on the screen.
<P>
NOTE: The values reported are numerical. The corresponding constants may be
found in the Adovbs.inc file. This file is installed during Active Server
Pages setup, and placed in the \aspsamp\samples directory. This directory
is normally located in your \inetpub directory. It is recommended
programming practice to use the constants versus the numerical values when
calling your stored procedure. This makes your code easier to read and
maintain.
<P>
<PRE>   &lt;%@ LANGUAGE = VBScript %&gt;
   &lt;!-- #INCLUDE VIRTUAL="/ASPSAMP/SAMPLES/ADOVBS.INC" --&gt;
   &lt;HTML&gt;
   &lt;HEAD&gt;&lt;TITLE&gt;Stored Proc Example&lt;/TITLE&gt;&lt;/HEAD&gt;
   &lt;BODY&gt;

   &lt;%
   Set Conn = Server.CreateObject("ADODB.Connection")

   ' The following line must be changed to reflect your data source info
   Conn.Open "data source name", "user id", "password"
   set cmd = Server.CreateObject("ADODB.Command")
   set cmd.ActiveConnection = Conn

   ' Specify the name of the stored procedure you wish to call
    cmd.CommandText = "sp_MyStoredProc"
    cmd.CommandType = adCmdStoredProc

    ' Query the server for what the parameters are
    cmd.Parameters.Refresh
   %&gt;
   &lt;Table Border=1&gt;
   &lt;TR&gt;
      &lt;TD&gt;&lt;B&gt;PARAMETER NAME&lt;/B&gt;&lt;/TD&gt;
      &lt;TD&gt;&lt;B&gt;DATA-TYPE&lt;/B&gt;&lt;/TD&gt;
      &lt;TD&gt;&lt;B&gt;DIRECTION&lt;/B&gt;&lt;/TD&gt;
      &lt;TD&gt;&lt;B&gt;DATA-SIZE&lt;/B&gt;&lt;/TD&gt;
   &lt;/TR&gt;
   &lt;% For Each param In cmd.Parameters %&gt;
   &lt;TR&gt;
      &lt;TD&gt;&lt;%= param.name %&gt;&lt;/TD&gt;
      &lt;TD&gt;&lt;%= param.type %&gt;&lt;/TD&gt;
      &lt;TD&gt;&lt;%= param.direction %&gt;&lt;/TD&gt;
      &lt;TD&gt;&lt;%= param.size %&gt;&lt;/TD&gt;
   &lt;/TR&gt;
   &lt;%
    Next
    Conn.Close
   %&gt;
   &lt;/TABLE&gt;
   &lt;/BODY&gt;
   &lt;/HTML&gt;

</PRE>When browsed with a web browser, this page might produce a table similar to
this:
<P>
<PRE>   PARAMETER NAME   DATA-TYPE DIRECTION DATA-SIZE
   Return_Value     3         4         0
   param1           129       1         30

</PRE>This would tell you that your stored procedure sp_MyStoredProc has two
parameters that need to be defined in the command object. Utilizing this
information, you would modify your ASP code to look something like:
<P>
<PRE>   &lt;%
    Set Conn = Server.CreateObject("ADODB.Connection")
    Conn.Open "data source name", "user id", "password"
    set cmd = Server.CreateObject("ADODB.Command")
    set cmd.ActiveConnection = Conn
    cmd.CommandText = "sp_MyStoredProc"
    cmd.CommandType = adCmdStoredProc

   ' Use the values from the table in the following lines to define
   ' parameters
    cmd.Parameters.Append cmd.CreateParameter("Return_Value", 3, 4)
    cmd.Parameters.Append cmd.CreateParameter("param1", 129, 1, 30)
    cmd.Parameters("param1") = "input value"
    cmd.Execute
   %&gt;

</PRE>Now look up the numbers just used to define the parameters from your stored
procedure in the Adovbs.inc file. You should find the following relevant
sections:
<P>
<PRE>   '---- ParameterDirectionEnum Values ----
   Const adParamInput = &amp;H0001
   Const adParamReturnValue = &amp;H0004

   '---- DataTypeEnum Values ----
   Const adInteger = 3
   Const adChar = 129

</PRE>NOTE: Only the appropriate portions of the Adovbs.inc file are displayed
above.
<P>
With this information you can change the code to read:
<P>
<PRE>   &lt;%
    Set Conn = Server.CreateObject("ADODB.Connection")
    Conn.Open "data source name", "user id", "password"
    set cmd = Server.CreateObject("ADODB.Command")
    set cmd.ActiveConnection = Conn
    cmd.CommandText = "sp_MyStoredProc"
    cmd.CommandType = adCmdStoredProc
    cmd.Parameters.Append cmd.CreateParameter("RETURN_VALUE", _
       adInteger, adParamReturnValue)
    cmd.Parameters.Append cmd.CreateParameter("param1", adChar, _
       adParamInput, 30)
    cmd.Parameters("param1") = "input value"
    cmd.Execute
   %&gt;
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: datatype data-type
<P>

REFERENCES
<P>

For the latest Knowledge Base articles and other support information on<BR>
Visual InterDev and Active Server Pages, see the following page on the<BR>
Microsoft Technical Support site:
<P>

   http://support.microsoft.com/support/vinterdev/
<P>

Keywords          : AXSFCompADO AXSFDataBase AXSFSQL kbhowto<BR>
Version           : 1.0 1.0b<BR>
Platform          : NT WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 11, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
