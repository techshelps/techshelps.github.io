

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Debugging a VB DLL under Active Server Pages </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q177182">
<META NAME="KBModify" CONTENT="1997/12/11">
<META NAME="KBCreate" CONTENT="1997/11/21">
<META NAME="Keywords" CONTENT="AXSFMisc">
<META NAME="KBArea" CONTENT="Support; KB; axsf">
<META NAME="Description" CONTENT="  It is possible to debug a Visual Basic ActiveX DLL running under Active Server Pages and Internet Information Server 3.0. This article will explain how to do this.  MORE INFORMATION  To debug a Visual Basic component running under Active Server Pag...">
<META NAME="Product" CONTENT="Active Server Pages">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ActiveX ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAVX,QBWS,QAUF,QAPN,QBWA,QA56,QA55,QDMW,QBC9,QBC8,QA2Q,QANO,QA62,QAG2 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Debugging a VB DLL under Active Server Pages</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 11, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q177182</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Active Server Pages, version 1.0b
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
It is possible to debug a Visual Basic ActiveX DLL running under Active
Server Pages and Internet Information Server 3.0. This article will explain
how to do this.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To debug a Visual Basic component running under Active Server Pages and IIS
3.0, it is necessary to use a debugger that uses the CodeView style of
debug information. This article will use Microsoft Developer Studio.
Developer Studio is the application used to develop Visual C++ and Visual
J++ applications.

<OL><P><LI>In the project options for your Visual Basic DLL, select "Create
   Symbolic Debug Info." This option generates symbolic debug information
   in an executable or DLL file. You should also select "no optimization."

<P><LI>Run IIS 3.0 (INetInfo.exe) under the debugger. Doing this is covered in
   Tech Note 063, which is part of your C++ documentation. This article can
   be found by searching in Developer Studio or Microsoft Developer Network
   with the key words "TN063: Debugging Internet Extension DLLs"(see
   REFERENCES section below). Here is a summary of the necessary steps:
<P>
   a. Make sure your user account has the necessary privileges to run
<P><PRE>      inetinfo. See Tech Note 063 - Debugging Tips for a detailed
      explanation.
</PRE>   b. Select "Open Workspace" and open INetInfo.exe.
   c. Under the debug settings for the workspace, enter "-e W3Svc" as a
<P><PRE>      program argument.
</PRE>   d. Under additional DLLs, select your Visual Basic DLL.

<P><LI>In a test DLL, export a method - GetInfo. This method is in a file
   called InfoObj.cls. To debug the GetInfo method, load InfoObj.cls into
   Developer Studio and set a break point in the method. Browse to a page
   that loads the DLL and calls the method. Developer Studio will stop at
   the break point in this function.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
Microsoft Developer Studio Technical Notes 063 - TN063: Debugging Internet
Extension DLLs
<P>
For the latest Knowledge Base artices and other support information on
Visual InterDev and Active Server Pages, see the following page on the
Microsoft Technical Support site:
<P>
<PRE>   <B><A HREF="http://support.microsoft.com/support/vinterdev/">http://support.microsoft.com/support/vinterdev/</A></B>


</PRE></OL> 
<PRE>Keywords          : AXSFMisc
Technology        : kbInetDev kbdsi
Version           : WINNT:1.0b
Platform          : winnt
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 11, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
