

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How To Create a Simple Query in an ActiveX Layout </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q158737">
<META NAME="KBModify" CONTENT="1997/12/11">
<META NAME="KBCreate" CONTENT="1996/11/04">
<META NAME="Keywords" CONTENT="AXSFCompADO AXSFDataBase AXSFHTML kbhowto kbprg">
<META NAME="KBArea" CONTENT="Support; KB; axsf">
<META NAME="Description" CONTENT="  This article provides information on how to create a simple query form using Active Server Pages and ActiveX Layout (ALX) files. This example displays a record from a database in the ALX, and then allows the user to query for a different record, wh...">
<META NAME="Product" CONTENT="Active Server Pages">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ActiveX ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QDNQ,QAUJ,QAKD,QA4H,QAPN,QAGI,QAW6,QBWA,QARM,QDIZ,QAMB,QAKC,QAG4,QAY2,QAH6 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How To Create a Simple Query in an ActiveX Layout</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 11, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q158737</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00
WINDOWS NT
kbprg kbhowto
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Active Server Pages, version 1.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article provides information on how to create a simple query form
using Active Server Pages and ActiveX Layout (ALX) files. This example
displays a record from a database in the ALX, and then allows the user to
query for a different record, which appears in the same form.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Below are two sections of code: a main page (Page1.asp) and the ActiveX
Layout file Query.asp. Save these files to the same directory with the file
names as given. Make sure that the directory the files are saved to has
Execute and Read permissions in Internet Information Server (IIS) Manager.
<P>
<P><h3>Main Page: Page1.asp</h3>
 
<P>
&lt;% Response.Expires = 0 %&gt;
&lt;html&gt;
&lt;head&gt;&lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;
<P>
&lt;body&gt;
&lt;%
If Not IsObject(Session("cn")) Then
<PRE>  REM Create connection object if necessary
  Set cn = Server.CreateObject("ADODB.Connection")
  cn.Open "AdvWorks"

  REM Gather initial data
  Set rs = cn.Execute("SELECT * FROM CUSTOMERS WHERE CustomerID=1")
  Set Session("cn") = cn

  REM Place the information to be displayed in the ALX in session
  REM variables, because the ALX will be parsed AFTER this page loads.
  Session("ID") = rs(0)
  Session("Name") = rs(1)
</PRE>Else
<PRE>  On Error Resume Next

  REM Restore existing connection
  Set cn = Session("cn")

  REM Query is based on ID submitted in form
  MySQL = "SELECT * FROM CUSTOMERS WHERE CustomerID=" &amp; Request.Form("ID")
  Set rs = cn.Execute(MySQL)
  If Err = 0 Then
    Session("ID") = rs(0)
    Session("Name") = rs(1)
  Else
    REM Query Failed
    Session("ID") = "None Found"
    Session("Name") = "None Found"
  End If
</PRE>End If
%&gt;
&lt;form name="HiddenForm" action="page1.asp" method="Post"&gt;
<PRE>  &lt;input name="ID" type="Hidden" maxlength="5" size="5" value="Nothing"&gt;
</PRE>&lt;/form&gt;
&lt;script language="VBScript"&gt;
&lt;!--
<PRE>Sub SubmitForm
  Document.HiddenForm.ID.Value = Window.Html_Layout1.IDTextBox.Value
  HiddenForm.Submit
End Sub
</PRE>--&gt;
&lt;/script&gt;&lt;object
classid="CLSID:812AE312-8B8E-11CF-93C8-00AA00C08FDF"
id="Html_Layout1" style="LEFT:0;TOP:0"&gt;&lt;param name="ALXPATH" ref
value="query.asp"&gt;&lt;/object&gt;
&lt;/body&gt;
&lt;/html&gt;
<P>
<P><h3>Layout File: Query.asp</h3>
 
<P>
&lt;SCRIPT LANGUAGE="VBScript"&gt;
&lt;!--
<PRE>Sub CommandButton1_Click()
   Window.Parent.SubmitForm
End Sub
</PRE>--&gt;
&lt;/SCRIPT&gt;
<P>
&lt;DIV ID="Layout1" STYLE="LAYOUT:FIXED;WIDTH:225pt;HEIGHT:90pt;"&gt;
<PRE>    &lt;OBJECT ID="IDLabel"
     CLASSID="CLSID:978C9E23-D4B0-11CE-BF2D-00AA003F40D0"
</PRE>STYLE="TOP:8pt;LEFT:8pt;WIDTH:99pt;HEIGHT:17pt;ZINDEX:0;"&gt;
<PRE>        &lt;PARAM NAME="Caption" VALUE="Customer ID"&gt;
        &lt;PARAM NAME="Size" VALUE="3493;600"&gt;
        &lt;PARAM NAME="FontCharSet" VALUE="0"&gt;
        &lt;PARAM NAME="FontPitchAndFamily" VALUE="2"&gt;
    &lt;/OBJECT&gt;
    &lt;OBJECT ID="IDTextBox"
     CLASSID="CLSID:8BD21D10-EC42-11CE-9E0D-00AA006002F3"
</PRE>STYLE="TOP:25pt;LEFT:8pt;WIDTH:99pt;HEIGHT:16pt;TABINDEX:3;ZINDEX:4;"&gt;
<PRE>        &lt;PARAM NAME="VariousPropertyBits" VALUE="746604571"&gt;
        &lt;PARAM NAME="Size" VALUE="3493;564"&gt;
        &lt;PARAM NAME="Value" VALUE="&lt;%=Session("ID")%&gt;"&gt;
        &lt;PARAM NAME="FontCharSet" VALUE="0"&gt;
        &lt;PARAM NAME="FontPitchAndFamily" VALUE="2"&gt;
    &lt;/OBJECT&gt;
    &lt;OBJECT ID="CommandButton1"
     CLASSID="CLSID:D7053240-CE69-11CD-A777-00DD01143C57"
</PRE>STYLE="TOP:50pt;LEFT:8pt;WIDTH:99pt;HEIGHT:25pt;TABINDEX:2;ZINDEX:2;"&gt;
<PRE>        &lt;PARAM NAME="Caption" VALUE="Get Item"&gt;
        &lt;PARAM NAME="Size" VALUE="3493;882"&gt;
        &lt;PARAM NAME="FontCharSet" VALUE="0"&gt;
        &lt;PARAM NAME="FontPitchAndFamily" VALUE="2"&gt;
        &lt;PARAM NAME="ParagraphAlign" VALUE="3"&gt;
    &lt;/OBJECT&gt;
    &lt;OBJECT ID="NameLabel"
     CLASSID="CLSID:978C9E23-D4B0-11CE-BF2D-00AA003F40D0"
</PRE>STYLE="TOP:8pt;LEFT:116pt;WIDTH:99pt;HEIGHT:17pt;ZINDEX:3;"&gt;
<PRE>        &lt;PARAM NAME="Caption" VALUE="Company Name"&gt;
        &lt;PARAM NAME="Size" VALUE="3493;600"&gt;
        &lt;PARAM NAME="FontCharSet" VALUE="0"&gt;
        &lt;PARAM NAME="FontPitchAndFamily" VALUE="2"&gt;
    &lt;/OBJECT&gt;
    &lt;OBJECT ID="NameTextBox"
    CLASSID="CLSID:8BD21D10-EC42-11CE-9E0D-00AA006002F3"
</PRE>STYLE="TOP:25pt;LEFT:116pt;WIDTH:99pt;HEIGHT:16pt;TABINDEX:1;ZINDEX:1;"&gt;
<PRE>        &lt;PARAM NAME="VariousPropertyBits" VALUE="746604571"&gt;
        &lt;PARAM NAME="Size" VALUE="3493;564"&gt;
        &lt;PARAM NAME="Value" VALUE="&lt;%=Session("Name")%&gt;"&gt;
        &lt;PARAM NAME="FontCharSet" VALUE="0"&gt;
        &lt;PARAM NAME="FontPitchAndFamily" VALUE="2"&gt;
    &lt;/OBJECT&gt;
</PRE>&lt;/DIV&gt;
<P>
When Page1.asp is requested from a browser. the following sequence of
events occurs.

<OL><P><LI>Browser requests Page1.asp from IIS.

<P><LI>IIS receives the request and recognizes the page as a script page.

<P><LI>IIS processes the script page.

<P><LI>In processing the script, a connection is stored as a session variable.

<P><LI>An initial query is performed, and two more session variables holding
   the CustomerID and the CustomerName are created.

<P><LI>IIS passes the resulting HTML code from Page1.asp back to the browser.

<P><LI>The browser begins displaying the page until it reaches the OBJECT tag
   that points to Query.asp.

<P><LI>The browser requests Query.asp from IIS.

<P><LI>IIS parses the Query.asp script tags and places the Name and ID into the
   text boxes in the layout.

<P><LI>IIS passes the Query.asp back to the browser, which interprets the file
<P><PRE>    as a layout file (ALX).
</PRE>
<P><LI>The ALX appears, and the browser now waits for user input.

<P><LI>The user can input an ID into the first text box, and click the
<P><PRE>    command button to perform the search.
</PRE>
<P><LI>The command button calls VBScript, which calls a procedure in
<P><PRE>    Page1.asp.
</PRE>
<P><LI>The procedure in Page1.asp populates a hidden form and then submits the
<P><PRE>    form to itself (Page1.asp).
</PRE>
<P><LI>Page1.asp is run as a script again.

<P><LI>Page1.asp recognizes that it has been called by a form and constructs a
<P><PRE>    SQL query based on information passed.
</PRE>
<P><LI>It then populates the session variables ID and Name.

<P><LI>The page is passed back to the browser, which displays it, and again
<P><PRE>    requests the Query.asp layout page.
</PRE>
<P><LI>Query.asp is parsed as a script and returns a valid ALX layout file.

<P><LI>The results appear on the screen.
<P>
</OL>NOTE: This example requires the AdvWorks data source set up during the
Active Server Pages installation.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For additional information, please see the following article in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../AXSF/Q157748.htm">Q157748</A></B>
   TITLE     : Modifying Objects in an ActiveX Layout

</PRE></OL>For the latest Knowledge Base articles and other support information on
Visual InterDev and Active Server Pages, see the following page on the
Microsoft Technical Support site:
<P>
<PRE>   <B><A HREF="http://support.microsoft.com/support/vinterdev/">http://support.microsoft.com/support/vinterdev/</A></B>
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbprg kbhowto<BR>
KBSubcategory: AXSFHTML AXSFCompADO AXSFDataBase<BR>
Additional reference words: 1.00 kbdsi<BR>
Keywords          : AXSFCompADO AXSFDataBase AXSFHTML kbhowto kbprg<BR>
Version           : 1.00<BR>
Platform          : NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 11, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
