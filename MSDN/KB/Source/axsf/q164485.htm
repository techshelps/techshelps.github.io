

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Calling SQL Server Stored Procedures from ASP </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q164485">
<META NAME="KBModify" CONTENT="1998/01/26">
<META NAME="KBCreate" CONTENT="1997/03/03">
<META NAME="Keywords" CONTENT="AXSFDataBase kbprg">
<META NAME="KBArea" CONTENT="Support; KB; axsf">
<META NAME="Description" CONTENT="  This article demonstrates three methods of calling a stored procedure from Active Server Pages using ActiveX Data Objects (ADO).  MORE INFORMATION  The following example uses the Command object to call a sample stored procedure sp_test. This stored...">
<META NAME="Product" CONTENT="Active Server Pages">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ActiveX ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QAGI,QBXS,QAB9,QAHE,QBTC,QAIF,QAYY,QBWA,QBBI,QAW6,QAPF,QAK6,QABA,QDNQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Calling SQL Server Stored Procedures from ASP</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 26, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q164485</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft ActiveX Server, version 1.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article demonstrates three methods of calling a stored procedure from
Active Server Pages using ActiveX Data Objects (ADO).
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following example uses the Command object to call a sample stored
procedure sp_test. This stored procedure accepts an integer and has a
return value of an integer as well:
<P>
<PRE>   &lt;%@ LANGUAGE="VBSCRIPT" %&gt;
   &lt;!--#include virtual="/ASPSAMP/SAMPLES/ADOVBS.INC"--&gt;
   &lt;HTML&gt;
   &lt;HEAD&gt;&lt;TITLE&gt;Place Document Title Here&lt;/TITLE&gt;&lt;/HEAD&gt;

   &lt;BODY&gt;
   This first method queries the data source about the parameters
   of the stored procedure. This is the least efficient method of calling
   a stored procedure.&lt;BR&gt;
   &lt;%
   Set cn = Server.CreateObject("ADODB.Connection")
   Set cmd = Server.CreateObject("ADODB.Command")

   cn.Open "data source name", "userid", "password"
   Set cmd.ActiveConnection = cn
   cmd.CommandText = "sp_test"
   cmd.CommandType = adCmdStoredProc
   ' Ask the server about the parameters for the stored proc
   cmd.Parameters.Refresh
   ' Assign a value to the 2nd parameter.
   ' Index of 0 represents first parameter.
   cmd.Parameters(1) = 11
   cmd.Execute
   %&gt;
   Calling via method 1&lt;BR&gt;
   ReturnValue = &lt;% Response.Write cmd.Parameters(0) %&gt;&lt;P&gt;

   &lt;!-- ************************************************************ --&gt;

   Method 2 declares the stored procedure, and then explicitly declares
   the parameters.&lt;BR&gt;
   &lt;%
   Set cn = Server.CreateObject("ADODB.Connection")
   cn.Open "data source name", "userid", "password"
   Set cmd = Server.CreateObject("ADODB.Command")

   Set cmd.ActiveConnection = cn
   cmd.CommandText = "sp_test"
   cmd.CommandType = adCmdStoredProc
   cmd.Parameters.Append cmd.CreateParameter("RetVal", adInteger, _
      adParamReturnValue)
   cmd.Parameters.Append cmd.CreateParameter("Param1", adInteger, _
      adParamInput)
   ' Set value of Param1 of the default collection to 22
   cmd("Param1") = 22
   cmd.Execute
   %&gt;
   Calling via method 2&lt;BR&gt;
   ReturnValue = &lt;% Response.Write cmd(0) %&gt;&lt;P&gt;

   &lt;!-- ************************************************************ --&gt;

   Method 3 is probably the most formal way of calling a stored procedure.
   It uses the canocial
   &lt;%
   Set cn = Server.CreateObject("ADODB.Connection")
   cn.Open "data source name", "userid", "password"
   Set cmd = Server.CreateObject("ADODB.Command")

   Set cmd.ActiveConnection = cn
   ' Define the stored procedure's inputs and outputs
   ' Question marks act as placeholders for each parameter for the
   ' stored procedure
   cmd.CommandText = "{?=call sp_test(?)}"

   ' specify parameter info 1 by 1 in the order of the question marks
   ' specified when we defined the stored procedure
   cmd.Parameters.Append cmd.CreateParameter("RetVal", adInteger, _
   adParamReturnValue)
   cmd.Parameters.Append cmd.CreateParameter("Param1", adInteger, _
      adParamInput)
   cmd.Parameters("Param1") = 33
   cmd.Execute
   %&gt;
   Calling via method 3&lt;BR&gt;
   ReturnValue = &lt;% Response.Write cmd("RetVal") %&gt;&lt;P&gt;

   &lt;/BODY&gt;
   &lt;/HTML&gt;

</PRE>Note in the above examples, various methods of accessing the Parameters
collection of the Command object are used. Some use the default collection
of the Command object while others specify what property of a given
collection to access.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For the latest Knowledge Base articles and other support information on
Visual InterDev and Active Server Pages, see the following page on the
Microsoft Technical Support site:
<P>
<PRE>   <B><A HREF="http://support.microsoft.com/support/vinterdev/">http://support.microsoft.com/support/vinterdev/</A></B>

</PRE> 
<PRE>Keywords          : AXSFDataBase kbprg
Version           : 1.0
Platform          : WINDOWS
Issue type        : kbhowto
Solution Type     : kbcode</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 26, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
