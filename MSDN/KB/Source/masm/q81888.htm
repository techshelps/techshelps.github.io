

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX:MASM Incorrectly Allows Relative Values as Constant </TITLE>

<!--STYLE_BEGIN-->
<LINK REL="STYLESHEET" HREF="/support/kbstyle.css" TYPE="text/css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q81888 ">
<META NAME="KBModify" CONTENT="1997/09/16">
<META NAME="KBCreate" CONTENT="1992/03/19">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; masm">
<META NAME="Description" CONTENT="  The Microsoft Macro Assembler (MASM) versions 5.1 and 5.1a incorrectly allow relative expressions to be used as constant expressions if the relative expression is used inside an IF1 directive. Instead of generating an error, the assembler uses the ...">
<META NAME="Product" CONTENT="Macro Assembler">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAKJ,QBDA,QAH4,QAB9,QAAP,QAKD,QAIJ,QAR4,QAH7,QAH6,QAD7,QAB4,QA5V,QAEF,QAKP V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX:MASM Incorrectly Allows Relative Values as Constant</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 16, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q81888 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
5.10 5.10a | 5.10 5.10a
<PRE>MS-DOS     | OS/2
</PRE>kbtool kbfixlist kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Macro Assembler for MS-DOS, versions 5.1 and 5.1a
<LI>Microsoft Macro Assembler for OS/2, versions 5.1 and 5.1a
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The Microsoft Macro Assembler (MASM) versions 5.1 and 5.1a incorrectly
allow relative expressions to be used as constant expressions if the
relative expression is used inside an IF1 directive. Instead of generating
an error, the assembler uses the current value of the relative expression
as a constant expression.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in MASM versions 5.1 and 5.1a.
This problem was corrected in MASM version 6.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
A constant expression is a numeric expression that can be resolved at
assembly time. A relative expression is a expression that cannot be
resolved at assembly time and must be resolved at link time. Relative
expressions include all data and code labels, including the current
location counter, $. Anything that generates a fixup record is a
relative expression.
<P>
MASM 6.0 correctly generates the following error when a relative
expression is used in a place where only a constant is allowed:
<P>
<PRE>   error A2026: constant expected

</PRE>Converting MASM 5.1 programs to MASM 6.0 programs that rely on this
problem in MASM 5.1 may be difficult. The difference between two
relative expressions is a constant expression, and this may be used to
replace the single relative expression. The sample code below
demonstrates this workaround. This solution may not be valid in all
instances. Since MASM 6.0 evaluates these types of expressions on the
first pass only, the constant value may not be what was expected if
subsequent passes change the values of the relative expressions.
<P>
In MASM 6.0, the IF1 directive is always considered true. The IF2
directive is no longer supported in MASM 6.0.
<P>
<P><h3>Sample Code</h3>
 
<P>
; Assemble options needed: none
<P>
.MODEL small
<P>
.STACK
<P>
.CODE
<PRE>start: mov     ax, @data
       mov     ds, ax

       mov     ax, 4C00h
       int     21h

IF1

</PRE>;The following line causes an A2026 error in MASM 6.0.
<PRE>ProgSize       CATSTR   &lt;Program Size is &gt;, %$

</PRE>;The following line assembles error free in MASM 5.1 and MASM 6.0.
<PRE>;ProgSize       CATSTR    &lt;Program Size is &gt;, %($-start)

</PRE>ENDIF
<P>
<PRE>%      %OUT    ProgSize

</PRE>END    start
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 5.10 5.10a 6.00 buglist5.10 buglist5.10a<BR>
fixlist6.00<BR>
KBCategory: kbtool kbfixlist kbbuglist<BR>
KBSubCategory: MLIss<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 16, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
