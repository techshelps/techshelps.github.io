

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: MASM 6.0 Does Not Align on Page Boundary </TITLE>

<!--STYLE_BEGIN-->
<LINK REL="STYLESHEET" HREF="/support/kbstyle.css" TYPE="text/css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q82287 ">
<META NAME="KBModify" CONTENT="1997/09/16">
<META NAME="KBCreate" CONTENT="1992/03/30">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; masm">
<META NAME="Description" CONTENT="  When using the Microsoft Macro Assembler (MASM), the ALIGN directive does not work properly when attempting to place data or code on a page (256 byte) boundary. If aligning inside of a code segment, the  ALIGN 256  directive has no effect on the pl...">
<META NAME="Product" CONTENT="Macro Assembler">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAEB,QAH4,QAEU,QAIB,QAK6,QAYA,QBWA,QBVV,QAR4,QALG,QAVX,QAVW,QAKD,QAIJ,QACI V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: MASM 6.0 Does Not Align on Page Boundary</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 16, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q82287 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
6.00 6.00a 6.00b | 6.00 6.00a 6.00b
<PRE>MS-DOS           | OS/2
</PRE>kbtool kbfixlist kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Macro Assembler for MS-DOS, versions 6.0, 6.0a, and 6.0b
<LI>Microsoft Macro Assembler for OS/2, versions 6.0, 6.0a, and 6.0b
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When using the Microsoft Macro Assembler (MASM), the ALIGN directive
does not work properly when attempting to place data or code on a
page (256 byte) boundary. If aligning inside of a code segment, the
"ALIGN 256" directive has no effect on the placement of subsequent
instructions; it may insert 256 bytes somewhere else later in that
segment. When aligning inside of a data segment, the data to be
aligned is placed 1 byte past the page boundary.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To work around this problem, follow the steps below:
<P>
<PRE>   1. Edit your source to use an "ALIGN 128" where you previously
      used "ALIGN 256". For example,
      .                    .
      .                    .
      XOR   AL,AL          XOR   AL,AL
      ALIGN 256     ---&gt;   ALIGN 128
      MOV   CX,5           MOV   CX,5
      .                    .
      .                    .

   2. Assemble your source with the options "/Fl /c". This will
      generate a listing file with the same base name of your source
      file and a .LST extension.

   3. Viewing the .LST file, locate the line of code you want to
      align. The value to the left of your source code represents the
      offset of that item in the relative segment. This value will be
      a multiple of 128 (80h). There is a possibility that this value
      will fall on a page frame (100h). If this is the case then the
      code is aligned on a 256-byte boundary and you are done.

      Offset Machine Code  Source Code
      ------ ------------  -----------
      .
      .
      0000  32 C0          XOR   AL,AL
                           ALIGN 128
      0080  B9 0005        MOV   CX,5    **Not Aligned on page**
      .
      .
      .
      .
      0000  32 C0          XOR   AL,AL
                           ALIGN 128
      0100  B9 0005        MOV   CX,5    **Aligned on page**
      .
      .

   4. If the offset value is not a multiple of 256, go back to your
      source file and add the line "DB 128 DUP(?)" beneath the
      "ALIGN 128" line. This will add the bytes necessary to align
      your code to a page frame. Reassemble with "/Fl /c" and
      view the .LST file to verify.
      .                    .
      .                    .
      XOR   AL,AL          XOR   AL,AL
      ALIGN 128     ---&gt;   ALIGN 128
                           DB    128 DUP(?)
      MOV   CX,5           MOV   CX,5
      .                    .
      .                    .

</PRE><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in MASM versions 6.0,
6.0a, and 6.0b. This problem was corrected in MASM for MS-DOS version
6.1.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following sample code can be used to demonstrate the problem.
<P>
<P><h3>Sample Code</h3>
 
<P>
; Assemble options needed: none
<P>
_TEST SEGMENT PAGE PUBLIC 'CODE'
start:
<PRE>    xor al, al
</PRE>ALIGN 256
<PRE>    xor al, al
    mov ax,4C00h
    int 21h
</PRE>_TEST ENDS
END start
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 6.00 6.00a 6.00b buglist6.00 buglist6.00a<BR>
buglist6.00b fixlist6.10<BR>
KBCategory: kbtool kbfixlist kbbuglist<BR>
KBSubCategory: MLIss<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 16, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
