

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Passing an Integer from C to MASM, Returning a Double </TITLE>

<!--STYLE_BEGIN-->
<LINK REL="STYLESHEET" HREF="/support/kbstyle.css" TYPE="text/css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q39520 ">
<META NAME="KBModify" CONTENT="1995/01/23">
<META NAME="KBCreate" CONTENT="1988/12/17">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; masm">
<META NAME="Description" CONTENT="  The following MASM program shows how to receive an integer from a C program, then pass the value back to the C program as a double. Note: This routine was composed for the large-memory model and assumes that a coprocessor exists on the system.  MOR...">
<META NAME="Product" CONTENT="Macro Assembler">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAHH,QBFY,QAH4,QA7R,QA4Q,QAKD,QAUD,QAH7,QAH6,QAD7,QAFO,QBE7,QBE6,QBC9,QBC8 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Passing an Integer from C to MASM, Returning a Double</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 23, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q39520 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Macro Assembler for MS-DOS, versions 5.1, 6.0, 6.0a, and
   6.0b
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The following MASM program shows how to receive an integer from a C
program, then pass the value back to the C program as a double. Note:
This routine was composed for the large-memory model and assumes that
a coprocessor exists on the system.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Below is the C program that calls the MASM routine. It should be
compiled for large-memory model and either 8087 or emulator-math
library.
<P>
Also shown is the MASM routine. The main piece to this program is the
FILD instruction that transforms the integer to a floating-point
real, then pushes the value on the co-processor stack. The other point
is to obtain the segment and offset of the __fac variable. A value
requiring more than 4 bytes cannot be stored in the DX and AX
registers for return, so a double is returned by storing its address
in DX:AX.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>/* Compile options needed: /AL /FPi87 (or /FPi)
*/

#include &lt;stdio.h&gt;

</PRE>extern double abc( int x );
<P>
<PRE>void main()
</PRE>{
<PRE>   int x;
   double y;

   x = 7;
   y = abc( x );
   printf( "%The value of y is %lf.\n", y );
</PRE>}
<P>
 
<P>
; Assemble options needed: /Mx
<P>
<PRE>        .MODEL LARGE,C    ; so Masm will use C naming conventions
        .DATA
        .CODE
EXTRN _fac:QWORD          ; __fac is the global variable used by C
                          ; for storing floating point accumulations
</PRE>PUBLIC  abc
<PRE>abc     PROC    FAR
        push    bp
        mov     bp,sp
        fild    WORD PTR [bp+6]
        mov     dx,SEG _fac
        mov     es,dx
        fstp    QWORD PTR es:_fac  ; this pops the value off of
        mov     ax,OFFSET _fac     ; the co-processor and puts it
        fwait                      ; in __fac
        mov     sp,bp
        pop     bp
        ret

abc     ENDP
        END

</PRE>Program Output:
<P>
The value of y is 7.000000.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 5.10 6.00 6.00a 6.00b<BR>
KBCategory: kbprg<BR>
KBSubCategory: MASMLngIss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 23, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
