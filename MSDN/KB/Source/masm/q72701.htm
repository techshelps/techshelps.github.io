

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Writing Macro Functions and Using the EXITM Directive </TITLE>

<!--STYLE_BEGIN-->
<LINK REL="STYLESHEET" HREF="/support/kbstyle.css" TYPE="text/css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q72701 ">
<META NAME="KBModify" CONTENT="1995/01/23">
<META NAME="KBCreate" CONTENT="1991/06/05">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; masm">
<META NAME="Description" CONTENT="  Beginning with the Microsoft Macro Assembler (MASM) version 6.0, a macro can be written that will return either a text or numeric value. This is called a  Macro Function  and is implemented with the EXITM directive.  In MASM versions earlier than 6...">
<META NAME="Product" CONTENT="Macro Assembler">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QAY5,QAB9,QAGI,QBV8,QAUD,QATX,QAMB,QAKD,QA9N,QAPF,QAHE,QAIF,QA3P,QALG V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Writing Macro Functions and Using the EXITM Directive</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 23, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q72701 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Macro Assembler for MS-DOS, versions 6.0, 6.0a, and 6.0b
<LI>Microsoft Macro Assembler for OS/2, versions 6.0, 6.0a, and 6.0b
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Beginning with the Microsoft Macro Assembler (MASM) version 6.0, a
macro can be written that will return either a text or numeric value.
This is called a "Macro Function" and is implemented with the EXITM
directive.
<P>
In MASM versions earlier than 6.0, the EXITM directive was used to
exit a macro immediately. There were no arguments or parameters. With
versions 6.0 and later, the EXITM directive takes an optional argument
that specifies the return value. This argument must be either text, a
text equate name, or the result of another macro function. In
addition, the EXITM directive must be at the end of a macro block if
it is to be used to return a value.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The two examples below illustrate a couple of ways to use a macro
function. In the first example, a macro function is used to
concatenate a text string to create unique labels for a procedure
definition. The example code is followed by an extract from the list
file showing the concatenated names for the procedures.
<P>
The second example illustrates how a numeric value may be returned by
using the expansion operator (%). This example is followed by a
preprocessor listing showing the resultant code.
<P>
<P><h3>Sample Code 1</h3>
 
<P>
; Assemble options needed: /c /Fl
<P>
<PRE>        .model small

</PRE>prefix  TEXTEQU &lt;mycode_&gt;
<P>
<PRE>paste   MACRO   arg1,arg2       ;Macro function that concatenates
        EXITM   &lt;arg1&amp;&amp;arg2&gt;    ;  strings arg1 and arg2
ENDM

n_proc  MACRO new_name          ;Macro that calls the paste
        paste   (%prefix,&amp;new_name) PROC ;  macro function.
        paste   (%prefix,&amp;new_name) ENDP ; The % expansion operator
ENDM                            ;  evaluates the expression
                                ;  associated with prefix.
        .code

        n_proc   fun_1
        n_proc   fun_2

        END

</PRE>=================== EXTRACT FROM LIST FILE =========================
<P>
Macros:
<PRE>       N a m e         Type

n_proc .............   Proc
paste  .............   Func

</PRE>Procedures,  parameters and locals:
<PRE>       N a m e            Type    Value   Attr

mycode_fun_1 ..........  P Near   0000    _TEXT  Length= 0000 Public
mycode_fun_2 ..........  P Near   0000    _TEXT  Length= 0000 Public

</PRE> 
<P>
<P><h3>Sample Code 2</h3>
 
<P>
; Assemble options needed: /c /EP
<P>
<PRE>         .model small

get_rate MACRO val              ; macro function that accepts a
         LOCAL thin             ;   value and returns the results of
         thin TEXTEQU &lt;val*300&gt; ;   an expression.
         EXITM %thin
ENDM

</PRE>baudrate MACRO
<PRE>         FOR b_rate, &lt;1, 4, 8&gt;     ; Equivalent to IRP with MASM 5.1a.
            BYTE b_rate
            WORD get_rate(b_rate)  ; Call to Macro Function.
         ENDM
ENDM

         .code

         baudrate

         END

</PRE>====================== PREPROCESSOR LISTING =========================
<P>
<PRE>   .model small

   .code
         BYTE 1
      ??0000 TEXTEQU &lt;1*300&gt;  ; An expression
         WORD 300             ; Call to Macro Function
         BYTE 4
      ??0001 TEXTEQU &lt;4*300&gt;  ; An expression
         WORD 1200            ; Call to Macro Function
         BYTE 8
      ??0002 TEXTEQU &lt;8*300&gt;  ; An expression
         WORD 2400            ; Call to Macro Function
   end
</PRE> 
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 6.00 6.00a 6.00b<BR>
KBCategory: kbprg<BR>
KBSubCategory: MASMLngIss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 23, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
