

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: SIZE and SIZEOF May Give Incorrect Values for Locals </TITLE>

<!--STYLE_BEGIN-->
<LINK REL="STYLESHEET" HREF="/support/kbstyle.css" TYPE="text/css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q111877">
<META NAME="KBModify" CONTENT="1994/10/21">
<META NAME="KBCreate" CONTENT="1994/02/22">
<META NAME="Keywords" CONTENT="kbprg kbbuglist">
<META NAME="KBArea" CONTENT="Support; KB; masm">
<META NAME="Description" CONTENT="  SIZEOF and SIZE drop the high byte of the size for LOCAL variables larger than 255 bytes. The SIZE and SIZEOF for global variables and data types is correct. The TYPE operator works correctly for all variables.  RESOLUTION  You can use the TYPE and...">
<META NAME="Product" CONTENT="Macro Assembler">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAR4,QAEF,QAYA,QAUD,QALG,QAAP,QAYL,QAP2,QAAW,QALW,QAW5,QBE7,QBE6,QANY,QALZ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: SIZE and SIZEOF May Give Incorrect Values for Locals</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 21, 1994</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q111877</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Macro Assembler for MS-DOS, versions 6.0x and 6.1x
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
SIZEOF and SIZE drop the high byte of the size for LOCAL variables larger
than 255 bytes. The SIZE and SIZEOF for global variables and data types is
correct. The TYPE operator works correctly for all variables.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
You can use the TYPE and LENGTHOF operators to obtain the correct size of
local variables.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in MASM versions 6.x. We are
researching this problem and will post new information here in the
Microsoft Knowledge Base as it becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
In the following example, structure junk1 is 255 bytes and junk2 is 256
bytes. If local variables are used, SIZE and SIZEOF return 0 (zero) for the
size of the local variable j2L. This can be seen in the listing file or in
CodeView if the program is run in the debugger. Note that the TYPE operator
works correctly for single-element variables. To find the size of array
types, use TYPE * LENGTHOF as shown for j3L below.
<P>
<P><h3>Sample Code</h3>
 
<P>
; assembly options needed: /Zi /Fl /Sa
.model large,c
.386
<P>
junktest PROTO
<P>
junk1 struct
<PRE>    a BYTE 255 DUP (?)
</PRE>junk1 ends
<P>
junk2 struct
<PRE>    a BYTE 256 DUP (?)
</PRE>junk2 ends
<P>
.stack 10000
.data
<P>
j1 junk1 &lt;&gt;
j2 junk2 &lt;&gt;
<P>
.CODE
<PRE>    .STARTUP
        mov ax, sizeof junk1  ; correct sizes here
        mov ax, sizeof j1
        mov ax, size j1
        mov ax, sizeof junk2
        mov ax, sizeof j2
        mov ax, size j2
        invoke junktest
    .EXIT

</PRE>junktest PROC
<PRE>    LOCAL j1L:junk1     ; correct amount allocated 255 bytes
    LOCAL j2L:junk2     ; correct amount allocated 256 bytes
    LOCAL j3L[256]:BYTE ; correct amount allocated 256 bytes

    mov ax,0
    mov ax, sizeof junk1 ; correct -- 0FFh
    mov ax, sizeof j1L   ; correct -- 0FFh
    mov ax, size j1L     ; correct -- 0FFh
    mov ax, type j1L     ; correct -- 0FFh
    mov ax, sizeof junk2 ; correct -- 0100h
    mov ax, sizeof j2L   ; high byte lost -- returns 00h
    mov ax, size j2L     ; high byte lost -- returns 00h
    mov ax, type j2L     ; OK -- returns 0100h
    mov ax, sizeof j3L   ; high byte lost -- returns 00h
    mov ax, size j3L     ; high byte lost -- returns 00h
    mov ax, type j3L * lengthof j3L ; OK - returns 0100h
    ret
</PRE>junktest ENDP
<P>
END
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 6.00 6.00a 6.00b 6.10 6.10a 6.10b 6.11 ml<BR>
buglist6.11<BR>
KBCategory: kbprg kbbuglist<BR>
KBSubcategory: MASMLngIss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 21, 1994</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
