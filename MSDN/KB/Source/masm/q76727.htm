

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: MASM 5.1, 6.x, and  the LOCK and REP Prefixes </TITLE>

<!--STYLE_BEGIN-->
<LINK REL="STYLESHEET" HREF="/support/kbstyle.css" TYPE="text/css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q76727 ">
<META NAME="KBModify" CONTENT="1997/09/16">
<META NAME="KBCreate" CONTENT="1991/09/30">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; masm">
<META NAME="Description" CONTENT="  The Microsoft Macro Assembler (MASM) version 6.x will not assemble a statement with both a LOCK and a REP prefix. MASM 6.x generates the following error message:     error A2008: syntax error : rep  MASM versions 5.1 and 5.1a will assemble without ...">
<META NAME="Product" CONTENT="Macro Assembler">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QATS,QAH4,QASR,QABT,QAA8,QBV8,QAB9,QAD2,QAB4,QAAP,QBE7,QBE6,QBVV,QDIO,QAR4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: MASM 5.1, 6.x, and  the LOCK and REP Prefixes</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 16, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q76727 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
5.10 5.10a 6.00 6.00a 6.00b 6.10 6.10a 6.11
MS-DOS
kbtool kbfixlist kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Macro Assembler for MS-DOS, versions 5.1, 5.1a, 6.0,
   6.0a, 6.0b, 6.1, 6.1a, and 6.11
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The Microsoft Macro Assembler (MASM) version 6.x will not assemble a
statement with both a LOCK and a REP prefix. MASM 6.x generates the
following error message:
<P>
<PRE>   error A2008: syntax error : rep

</PRE>MASM versions 5.1 and 5.1a will assemble without error, however, code that
uses the LOCK prefix with an incorrect instruction, but the code generated
will run without errors only on some machines.
<P>
<P><h2>CAUSE</h2>
 
<P>
The validity of using LOCK with REP depends upon the processor on which the
program is to be executed. A LOCK REP instruction is allowed on 186
processors and is even required in certain cases. However, on 386, 486, and
the Pentium processors, the LOCK REP instruction will generate an invalid
opcode exception.
<P>
For the 80186 processor, LOCK REP MOVS and LOCK REP OUTS are valid
instructions and are required in some cases, especially to work with the
peripheral control block (PCB) registers.
<P>
For the 80286 and higher processors, the LOCK prefix is valid only with the
following instructions and only when they modify memory:
<P>
<PRE>   BTS, BTR, BTC   -&gt; bit test and change instructions
   XCHG, XADD, CMPXCHG -&gt; exchange instructions
   INC, DEC, NOT, NEG -&gt; single operand instructions
   ADD, ADC, SUB, SBB, AND, OR, XOR -&gt; two operand arithmetic and logic

</PRE>An invalid opcode exception results from using the LOCK prefix before any
other instruction, or with these instructions that do not modify memory
(that is, if the destination is a register).
<P>
Because of the danger of allowing improper use of the LOCK instruction,
MASM 6.x does not allow it to be used with the REP prefix even though the
Intel 80186 manual specifically calls for such use in certain
circumstances. Programmers developing embedded applications using the 80186
series may need this capability, however, and the sample code shows a
technique for doing this. In these cases, the programmer will need to be
certain that the code will never be run on a CPU where it could cause
errors.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed that allowing LOCK to be assembled for invalid
instructions is a problem in MASM versions 5.1 and 5.1a. This problem was
corrected in MASM version 6.0, and by design is not allowed to be used with
the REP prefixes.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
When programming for the 80186 processor using MASM 6.x, a byte can be
inserted into the program that contains 0F0h, the prefix for LOCK. The
sample code below demonstrates this solution. Macros can be used to make
this an easier workaround.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Sample Code</h3>
 
<P>
; Assemble options needed: /c
.MODEL small
.186
.DATA
<PRE>astr    DB    "Hello, world.", 13, 10, 0
msg     DB    16 DUP(?)

</PRE>.CODE
<PRE>proc1   PROC
        mov     cx, 10h                 ; Load the SI, DI, and CX
        mov     si, OFFSET astr         ;  registers and clear the
        mov     di, OFFSET msg          ;  direction flag for the
        cld                             ;  string transfer.

;       DB      0F0h                    ; Uncomment this line and
                                        ;  remove the LOCK prefix on
                                        ;  the following instruction
                                        ;  to work around the problem
        lock rep movsb                  ; This line does not assemble
                                        ; in MASM 6.x.
ENDP    proc1
END

</PRE><h2>REFERENCES</h2>
 
<P>
Intel iAPX 86/88, 186/188 User’s Manual Programmer’s Reference.
<P>
Intel 386 DX Microprocessor Programmer’s Reference manual.
<P>
Also see the Intel manuals for the 486, Pentium, and newer 186 CPUs.
Manuals are available directly from Intel Corporation at the following
address:
<P>
<PRE>   Intel Literature Sales
   P.O. Box 7641
   Mt. Prospect, IL  60056-7641
   phone: 800-548-4725
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 5.10 5.10a 6.00 6.00a 6.00b 6.10 6.10a<BR>
buglist5.10 buglist5.10a fixlist6.00<BR>
KBCategory: kbtool kbfixlist kbbuglist<BR>
KBSubcategory: MLIss<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 16, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
