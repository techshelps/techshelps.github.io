

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Immediate and Memory Operands </TITLE>

<!--STYLE_BEGIN-->
<LINK REL="STYLESHEET" HREF="/support/kbstyle.css" TYPE="text/css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q120070">
<META NAME="KBModify" CONTENT="1995/01/06">
<META NAME="KBCreate" CONTENT="1994/08/31">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; masm">
<META NAME="Description" CONTENT="  An immediate operand is a constant value or expression. A direct memory operand refers to data at a given address. An indirect memory operand also refers to the contents of a given address, rather than the address itself, but the address is calcula...">
<META NAME="Product" CONTENT="Macro Assembler">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAEF,QAKJ,QAC2,QAGX,QAYA,QAKM,QAH4,QANJ,QACI,QAKD,QAJQ,QBW6,QAR5,QBW7,QA9N V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Using Immediate and Memory Operands</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 6, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q120070</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Macro Assembler for MS-DOS, versions 6.0, 6.1, and 6.11
<LI>Microsoft Macro Assembler for Windows NT, version 6.11
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
An immediate operand is a constant value or expression. A direct memory
operand refers to data at a given address. An indirect memory operand also
refers to the contents of a given address, rather than the address itself,
but the address is calculated at run time by referring to the contents of
the specified register.
<P>
Initially, it would appear that putting brackets ([]) around the operand
makes it a memory operand. This article demonstrates how the assembler
determines the addressing mode to use based on the operand type and the
brackets, not just on the presence or absence of brackets.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Case 1</h3>
 
<P>
In the following code fragment, both mov instructions move dataitem into
the ax register.
<P>
<PRE>   .DATA
   dataitem DW 0

   .CODE
   mov ax, dataitem
   mov ax, [dataitem]

</PRE>The results are the same because the assembler determines the addressing
mode based on the way that dataitem is declared. In both cases,
dataitem is a label, so the assembler will access the data located at the
label.
<P>
If you really want to access dataitem as a constant value, use the
following syntax:
<P>
<PRE>   .CODE
   mov ax, OFFSET dataitem

</PRE>In this case, OFFSET tells the assembler to treat dataitem as a constant
value rather than as a data item that is located at a memory location.
<P>
<P><h3>Case 2</h3>
 
<P>
In the following code fragment, both mov instructions move 0 into the
ax register.
<P>
<PRE>   datavalue EQU 0

   .CODE
   mov ax, datavalue
   mov ax, [datavalue]

</PRE>Again, the result is the same, because the assembler determines the
addressing mode based on the way datavalue is declared. In both cases,
datavalue is an equate, so the assembler will treat datavalue as a
constant value.
<P>
If you want to access datavalue as a data item located at a memory
location, use the following syntax:
<P>
<PRE>   .CODE
   mov ax, ds:datavalue

</PRE>In this case, the segment override tells the assembler to treat datavalue
as a data item that is located at ds:datavalue, rather than treating
datavalue as a constant value.
<P>
<P><h3>Case 3</h3>
 
<P>
On the other hand, with the following code fragment, the mov instructions
have different results.
<P>
<PRE>   .CODE
   mov ax, bx
   mov ax, [bx]

</PRE>In the first case, we are moving what is in bx into ax. In the second
case, we are using bx as an offset and moving what is at that offset into
ax. The assembler determines what to do based on the brackets or lack of
brackets around the register. This is the only case where the brackets
have this effect.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 6.00 6.10 6.11<BR>
KBCategory: kbprg<BR>
KBSubcategory: MASMLngIss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 6, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
