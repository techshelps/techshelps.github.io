

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Bad Code Produced When Using Location Arithmetic </TITLE>

<!--STYLE_BEGIN-->
<LINK REL="STYLESHEET" HREF="/support/kbstyle.css" TYPE="text/css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q74744 ">
<META NAME="KBModify" CONTENT="1997/09/16">
<META NAME="KBCreate" CONTENT="1991/07/29">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; masm">
<META NAME="Description" CONTENT="  Microsoft Macro Assembler (MASM) version 6.0 may generate incorrect code when more than one label is used to calculate a relative offset.  RESOLUTION  Use another method to calculate offsets. For example, the sample program in this article generate...">
<META NAME="Product" CONTENT="Macro Assembler">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QALG,QAYA,QAIH,QAR4,QAMB,QAI4,QAEF,QAN2,QAC2,QAE5,QABG,QDO7,QAAP,QAKP V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Bad Code Produced When Using Location Arithmetic</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 16, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q74744 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
6.00   | 6.00
MS-DOS | OS/2
kbtool kbfixlist kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Macro Assembler for MS-DOS, version 6.0
<LI>Microsoft Macro Assembler for OS/2, version 6.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Microsoft Macro Assembler (MASM) version 6.0 may generate incorrect code
when more than one label is used to calculate a relative offset.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Use another method to calculate offsets. For example, the sample program in
this article generates the correct code by using structures to calculate
the offsets.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in MASM version 6.0.
This problem was corrected in MASM version 6.0a.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The sample program below illustrates this problem. The code actually
generated by the assembler is included as comments within the source.
As you can see from generated code, the address to place the value is
calculated correctly in all cases. However, if location arithmetic is
used, the assembler changes the first byte from hex 30 to hex 00. The
result is independent of the format used for the constant ('0' behaves
the same as 30h).
<P>
<P><h3>Sample Code</h3>
 
<P>
; Assemble options needed: none
;
; This program should display "Six Zeros -&gt; 000000" on the screen.
<PRE>;        Instead, it displays "Six Zeros -&gt;  0  0 ".
;
</PRE>; To work around this problem, uncomment the code involving
; structures and remove the code using location arithmetic.
<P>
.MODEL small
.STACK 4096
.DATA
<P>
VOLCANOS STRUCT
<PRE>RAINER   BYTE    "Six"
BAKER    BYTE    "Zeros -&gt;"
ADAMS    BYTE    6 DUP(01H)
STHELENS BYTE    '$'
</PRE>VOLCANOS ENDS
<P>
<PRE>MOUNTAINS     LABEL BYTE
MACKENZIE     BYTE  "Six "
FUJI          BYTE  "Zeros -&gt; "
</PRE>GODWIN_AUSTEN BYTE  6 DUP(01H)
<PRE>KILIMANJARO   BYTE  '$'

</PRE>.CODE
main:
<PRE>         mov    ax, @DATA
         mov    ds, ax
         mov    di, OFFSET MOUNTAINS

</PRE>;Offsets calculated using structures
<P>
<PRE>;         mov    BYTE PTR VOLCANOS.ADAMS+2 [DI], '0'
;         mov    WORD PTR VOLCANOS.ADAMS   [DI], '00'
;
;3750:0008 C6450F30       MOV       Byte Ptr [DI+0F],30
;3750:000C C7450D3030     MOV       Word Ptr [DI+0D],3030
;
;         mov    BYTE PTR VOLCANOS.ADAMS+5 [DI], 30h
;         mov    WORD PTR VOLCANOS.ADAMS+3 [DI], 3030h
;
;3750:0011 C6451230       MOV       Byte Ptr [DI+12],30
;3750:0015 C745103030     MOV       Word Ptr [DI+10],3030

</PRE>; Offsets calculated using location arithmetic
<P>
<PRE>         mov    BYTE PTR [GODWIN_AUSTEN+2-MOUNTAINS+DI], '0'
         mov    WORD PTR [GODWIN_AUSTEN-MOUNTAINS+DI], '00'

;3750:001A C6450F00       MOV       Byte Ptr [DI+0F],00
;3750:001E C7450D0030     MOV       Word Ptr [DI+0D],3000

         mov    BYTE PTR [GODWIN_AUSTEN+5-MOUNTAINS+DI], 30H
         mov    WORD PTR [GODWIN_AUSTEN+3-MOUNTAINS+DI], 3030H

;3750:0023 C6451200       MOV       Byte Ptr [DI+12],00
;3750:0027 C745100030     MOV       Word Ptr [DI+10],3000

</PRE>; Output
<PRE>         mov    dx, OFFSET MOUNTAINS  ; Load DX with offset of
                             ;  MOUNTAINS (segment already in DS)
         mov    ax, 09h
         int    21h          ; Display String to stdout

         mov    ax, 4C00h    ; Exit functions with 0 in AL
         int    21h          ; Exit Program with Return Code

         END    main
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 6.00 EQU buglist6.00 fixlist6.00a<BR>
KBCategory: kbtool kbfixlist kbbuglist<BR>
KBSubCategory: MLIss<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 16, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
