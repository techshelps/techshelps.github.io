

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: ALIGN Following DUP Operator or Structure May Fail </TITLE>

<!--STYLE_BEGIN-->
<LINK REL="STYLESHEET" HREF="/support/kbstyle.css" TYPE="text/css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q74663 ">
<META NAME="KBModify" CONTENT="1997/09/16">
<META NAME="KBCreate" CONTENT="1991/07/25">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; masm">
<META NAME="Description" CONTENT="  The Microsoft Macro Assembler (MASM) version 6.0 may generate an incorrect alignment for the ALIGN or EVEN directives if a statement containing the DUP operator or a structure definition is placed before the directive. For the problem to occur, the...">
<META NAME="Product" CONTENT="Macro Assembler">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QALG,QAEB,QAH4,QAEU,QAR4,QANY,QAKM,QAYY,QAPN,QAAP,QAKP,QDKS,QAIC,QAB9,QAP3 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: ALIGN Following DUP Operator or Structure May Fail</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 16, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q74663 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
6.00   | 6.00
MS-DOS | OS/2
kbtool kbfixlist kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Macro Assembler for MS-DOS, version 6.0
<LI>Microsoft Macro Assembler for OS/2, version 6.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The Microsoft Macro Assembler (MASM) version 6.0 may generate an incorrect
alignment for the ALIGN or EVEN directives if a statement containing the
DUP operator or a structure definition is placed before the directive. For
the problem to occur, the DUP operator or structure definition can be
placed anywhere before the directive but within the segment.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in MASM version 6.0. This
problem was corrected in MASM version 6.0a.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The sample programs below demonstrate the problem with the ALIGN
directive. In Sample Code 1, a statement with the DUP operator is
used before the ALIGN statement. The assembly listing shows:
<P>
<PRE>   0000                _DATA segment dword
   0000 0005 [         buffer BYTE 5 dup (?)
             00
             ]
   0005 00             byte ?
                       ALIGN 4
   0007 00             nextvar BYTE ?
   0008                _DATA ends

</PRE>It can be seen in the assembly listing that the offset for the
variable "nextvar" is incorrectly set to 7 rather than 8.
<P>
In Sample Code 2, a structure definition is placed before the ALIGN
statement. The assembly listing below shows the results:
<P>
<PRE>   0005                structdecl struct
   0000 00             byte ?
   0001 00             byte ?
   0002 00             byte ?
   0003 00             byte ?
   0004 00             byte ?
                       structdecl ends

   0000                _DATA segment dword
   0000 00 00 00 00 00 mystruct structdecl &lt;&gt;
   0005 00             byte ?
                       ALIGN 4
   0009 00             nextvar BYTE ?
   000A                _DATA ends

</PRE>Note that "nextvar" is incorrectly assigned offset 9 rather than 8.
<P>
<P><h3>Sample Code 1</h3>
 
<P>
; Assemble options needed: none
<P>
_DATA segment dword
<PRE>  buffer BYTE 5 dup (?)
  byte ?
  ALIGN 4
  nextvar BYTE ?
</PRE>_DATA ends
<P>
end
<P>
<P><h3>Sample Code 2</h3>
 
<P>
; Assemble options needed: none
<P>
structdecl struct
<PRE>   byte ?
   byte ?
   byte ?
   byte ?
   byte ?
</PRE>structdecl ends
<P>
_DATA segment dword
<PRE>   mystruct structdecl &lt;&gt;
   byte ?
   ALIGN 4
   nextvar BYTE ?
</PRE>_DATA ends
<P>
END
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 6.00 buglist6.00 fixlist6.00a<BR>
KBCategory: kbtool kbfixlist kbbuglist<BR>
KBSubCategory: MLIss<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 16, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
