

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>32-Bit Flat Memory Model MASM Code for Windows NT </TITLE>

<!--STYLE_BEGIN-->
<LINK REL="STYLESHEET" HREF="/support/kbstyle.css" TYPE="text/css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q94314 ">
<META NAME="KBModify" CONTENT="1995/01/23">
<META NAME="KBCreate" CONTENT="1993/01/04">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; masm">
<META NAME="Description" CONTENT="  The Microsoft Macro Assembler (MASM) versions 6.0a and later support generating 32-bit flat memory model code through the .MODEL flat directive. When combined with the CVTOMF and LINK32 utilities and the KERNEL32.LIB library distributed with the Wi...">
<META NAME="Product" CONTENT="Macro Assembler">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWP,QAH4,QAIJ,QAH6,QAPF,QAKR,QAHE,QBVV,QBCU,QBV8,QDL9,QBWQ,QBWO,QBWN,QAJH V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>32-Bit Flat Memory Model MASM Code for Windows NT</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 23, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q94314 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Macro Assembler for MS-DOS, versions 6.0a, 6.0b, 6.1,
   6.1a, and 6.11
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The Microsoft Macro Assembler (MASM) versions 6.0a and later support
generating 32-bit flat memory model code through the .MODEL flat
directive. When combined with the CVTOMF and LINK32 utilities and the
KERNEL32.LIB library distributed with the Windows NT software
development kit (SDK) or the LINK utility and the KERNEL32.LIB library
distributed with Microsoft Visual C++ for Windows NT, MASM can
generate a 32-bit flat memory model application for the Windows NT
environment.
<P>
Because MASM version 6.0 does not properly support the _stdcall
convention, it cannot be used to generate applications for the Windows
NT environment.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Given some MASM code in a file named FLAT32.ASM where its entry point
is _start, to assemble this code into a 32-bit flat memory model
application for the Windows NT environment, perform the following four
steps:

<OL><P><LI>Place the .386 or .486 directive in the code prior to the .MODEL
   flat, stdcall directive to ensure that the code and data segments
   are correctly initialized for a 32-bit flat memory model
   application.

<P><LI>Assemble the source code using the following command:
<P>
<P><PRE>      ML /c flat32.asm.
</PRE><P>
   The /c assembler option prevents the MASM from invoking the 16-bit
   linker provided with MASM.

<P><LI>For MASM 6.0a or 6.0b, use the CVTOMF utility provided with the
   Windows NT SDK to convert the generated object files from OMF
   format to COFF format. The command is as follows:
<P>
<P><PRE>      cvtomf flat32.obj
</PRE><P>
   This step is unnecessary with MASM version 6.1 and later if you use
   the /coff switch because it will produce a COFF format object file.

<P><LI>Use the LINK32 utility provided with the Windows NT SDK or LINK
   utility provided with Visual C++ for Windows NT to link the object
   modules. Specify a path to KERNEL32.LIB. The command line is as
   follows:
<P>
<P><PRE>      link32 -subsystem:console -entry:_start -out:flat32.exe
<PRE></PRE>         flat32.obj kernel32.lib

   To create an executable module that contains symbolic debugging
   information, add the -Zi switch to the assembler options (Step 2)
   and add the following switches to the linker command line:
   -debug:full -debugtype:cv.

</PRE></OL>If you are using LINK32 from the Windows NT SDK, do not use the
INCLUDELIB directive and do not place the starting label after the END
directive in the MASM code. The LINK32 utility provided with the
Windows NT SDK ignores the default library names in object files and
requires the -entry switch on the linker command line to specify the
starting address.
<P>
Windows NT does not support the MLX driver provided with MASM versions
6.0a and 6.0b. Also, Windows NT does not support the MS-DOS-extender
used by MASM versions 6.1 and 6.1a. Therefore, it may be necessary to
perform the assembly step on a machine running MS-DOS while the other
steps run on a machine running Windows NT. Another option is to
upgrade to MASM version 6.11.
<P>
The code below is a "Hello, world" application developed in assembler
to use the 32-bit flat memory model of Windows NT.
<P>
<P><h3>Sample Code</h3>
 
<P>
; Assemble options needed: /c
<P>
.386
.MODEL flat, stdcall
<P>
STD_OUTPUT_HANDLE EQU -11
<P>
GetStdHandle PROTO NEAR32 stdcall,
<PRE>    nStdHandle:DWORD

</PRE>WriteFile PROTO NEAR32 stdcall,
<PRE>    hFile:DWORD, lpBuffer:NEAR32, nNumberOfBytesToWrite:DWORD,
    lpNumberOfBytesWritten:NEAR32, lpOverlapped:NEAR32

</PRE>ExitProcess PROTO NEAR32 stdcall,
<PRE>    dwExitCode:DWORD

</PRE>.STACK 4096
<P>
.DATA
<P>
msg DB "Hello, world.", 13, 10
written DW 0
hStdOut DD 0
<P>
.CODE
_start:
<PRE>    INVOKE  GetStdHandle,
        STD_OUTPUT_HANDLE      ; Standard output handle
    mov hStdOut, eax

    INVOKE  WriteFile,
        hStdOut,               ; File handle for screen
        NEAR32 PTR msg,        ; Address of string
        LENGTHOF msg,          ; Length of string
        NEAR32 PTR written,    ; Bytes written
        0                      ; Overlapped mode

    INVOKE  ExitProcess,
        0                      ; Result code for parent process

</PRE>PUBLIC _start
END
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 6.00a 6.00b 6.10<BR>
KBCategory: kbprg<BR>
KBSubcategory: MASMLngIss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 23, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
