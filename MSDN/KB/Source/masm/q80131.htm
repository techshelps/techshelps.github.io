

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DOCERR: MASM 6.0 Programmer's Guide Errors: Chapters 1-6 </TITLE>

<!--STYLE_BEGIN-->
<LINK REL="STYLESHEET" HREF="/support/kbstyle.css" TYPE="text/css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q80131 ">
<META NAME="KBModify" CONTENT="1994/11/03">
<META NAME="KBCreate" CONTENT="1992/01/20">
<META NAME="Keywords" CONTENT="kbref kbdocerr">
<META NAME="KBArea" CONTENT="Support; KB; masm">
<META NAME="Description" CONTENT="  The following is a list of documentation additions and corrections for Chapters 1 through 6 of the  Microsoft Macro Assembler Programmer's Guide  for version 6.0. The section and page numbers are listed first, followed by a description of the addit...">
<META NAME="Product" CONTENT="Macro Assembler">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAML,QAMB,QAH4,QBWA,QA5V,QAAP,QAKD,QAKC,QAKJ,QAB7,QAPF,QBXV,QBXT,QAUJ,QALG V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>DOCERR: MASM 6.0 Programmer's Guide Errors: Chapters 1-6</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 3, 1994</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q80131 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Macro Assembler for MS-DOS, versions 6.0, 6.0a, and 6.0b
<LI>Microsoft Macro Assembler for OS/2, versions 6.0, 6.0a, and 6.0b
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The following is a list of documentation additions and corrections for
Chapters 1 through 6 of the "Microsoft Macro Assembler Programmer's
Guide" for version 6.0. The section and page numbers are listed first,
followed by a description of the addition or correction.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Section 1.3.3, Page 35</h3>
 
<P>
At the bottom of the page, the description for the .ERRDIF directive
states:
<P>
<PRE>   ...ERRIDNI and .ERRDIFI perform the same action but are case
   sensitive.

</PRE>This is incorrect. The line should read:
<P>
<PRE>   ...ERRIDNI and .ERRDIFI perform the same action but are *not* case
   sensitive.

</PRE><h3>Section 2.2.4, Page 44</h3>
 
<P>
The last sentence of the second paragraph in this section should read:
<P>
<PRE>   These *five* directives also prevent instructions from
   appearing...

</PRE><h3>Section 3.3.2, Page 76</h3>
 
<P>
The very last line of sample code on this page is
<P>
<PRE>   mov     ax, BYTE PTR [bx] ; Legal

</PRE>which is moving an 8-bit value into a 16-bit register. This is
misleading in the context of the example. It would make more sense as
follows:
<P>
<PRE>   mov     al, BYTE PTR [bx] ; Legal

</PRE><h3>Section 4.2.4.1, Page 100</h3>
 
<P>
The sample code at the top of this page has two comments that should
be reversed. The comment
<P>
<PRE>   ; 8-bit signed multiply

</PRE>precedes the code that is doing *unsigned* multiplication with MUL. The
comment should be:
<P>
<PRE>   ; 8-bit *unsigned* multiply

</PRE>The next piece of code is preceded by the comment:
<P>
<PRE>   ; 16-bit unsigned multiply

</PRE>This is incorrect. The comment should read:
<P>
<PRE>   ; 16-bit *signed* multiply

</PRE><h3>Section 5.1.1, Page 112</h3>
 
<P>
Beneath the description of the DUP syntax, the text reads:
<P>
<PRE>   The count value sets the number of times to repeat the last
   initialvalue

</PRE>This is incorrect; instead, the description should be:
<P>
<PRE>   The count value sets the number of times to repeat the entire list
   'initialvalue [,initialvalue]...'

</PRE><h3>Section 5.1.1, Page 113</h3>
 
<P>
The second line of the sample code at the bottom of the page should be:
<P>
<PRE>   shl     si, 1   ; Scale for word referencing

</PRE><h3>Section 5.1.2, Page 115</h3>
 
<P>
The second code example, which describes how to declare an array of
pointers to strings, has a typographical error on the third to the
last line. Instead of
<P>
<PRE>   pmsg2  BPBYTE  msg2

</PRE>it should read as follows:
<P>
<PRE>   pmsg2  PBYTE  msg2

</PRE><h3>Section 5.1.3.1, Page 120</h3>
 
<P>
The first step of a repeat sequence is described as:
<P>
<PRE>   1. Checks the CX register and exits if CX is 0. If the REPE prefix
      is used, the loop exits if the zero flag is set; if REPNE is
      used, the loop exits if the zero flag is clear.

</PRE>This second part of this step is incorrect. The zero flag is not checked
until step five, at which time it will decide whether to terminate the
loop.
<P>
<P><h3>Section 5.2.2, Page 128</h3>
 
<P>
The last comment in the sample code on this page is incorrect. It
states that the last line of code "Allocates and initializes 10
unions," when in fact it allocates and initializes 20 unions.
<P>
<P><h3>Section 5.2.2, Page 128</h3>
 
<P>
The diagram on this page is misleading. It shows the 2-byte values
listed sequentially in memory as high byte followed by low byte (for
example, |0 2|0 2|0 2|), when values are actually stored in memory as
low byte followed by high byte (for example, |2 0|2 0|2 0|).
Furthermore, the last element of this array is shown to be
"array[18]", when the last element is supposed to be "array[38]".
<P>
<P><h3>Section 5.2.3, Page 132</h3>
 
<P>
The diagram on this page is is misleading. The sample code shows a
WORD value being loaded with the decimal value 40, but the diagram
shows it stored in memory as:
<P>
<PRE>   -----------
   | 4 0 0 0 |
   -----------

</PRE>This is confusing because the element that is supposed to contain the
decimal value 2 is shown as:
<P>
<PRE>   -----------
   | 2 0 0 0 |
   -----------

</PRE>It would be more understandable if the sample code loaded the two
array elements with the hexadecimal values 40h and 2h so the four
digits in the diagram corresponded to the four hexadecimal digits in a
WORD value as follows:
<P>
<PRE>   -----------------------
   | 40 00 | ... | 02 00 |
   -----------------------

</PRE><h3>Section 5.3.1, Page 136</h3>
 
<P>
The first sentence of the second paragraph is misleading. It should
read:
<P>
<PRE>   Global labels and macro names must all be unique. Record field
   names must also all be unique, but record field names can have the
   same names as structure field names, macro names, or global labels.

</PRE><h3>Section 5.3.2, Page 137</h3>
 
<P>
The syntax for defining record variables with the DUP operator is
misleading. It should read:
<P>
<PRE>   [name] recordname constant DUP ([record_initializer
                                   [,record_initializer]...])

</PRE><h3>Section 5.3.3, Page 139</h3>
 
<P>
The sample code on this page has two errors:

<OL><P><LI>The comments show the binary arithmetic that takes place but uses
   an incorrect operand. The numbers should resemble the following
   (notice the first bit of the first line):
<P>
<PRE>          1101 1001
      AND 1000 1111
          ---------
          1000 1001
       OR 1000 0000
          ---------
          1000 1001
      XOR 0000 1000
          ---------
          1000 0001

</PRE><P><LI>The condition of the IF statement towards the bottom of the example
   is shown as "(WIDTH color) GE 8". While this is syntactically
   correct, it will not do what it is supposed to accomplish. The line
   should be:
<P>
<P><PRE>      IF  (WIDTH color) GT 8
<P></BLOCKQUOTE>
</OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 6.00<BR>
KBCategory: kbref kbdocerr<BR>
KBSubcategory:<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 3, 1994</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
