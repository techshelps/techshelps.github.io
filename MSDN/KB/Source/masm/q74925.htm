

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: A1010 from Unclosed Segment in MASM @ShowStr Macro </TITLE>

<!--STYLE_BEGIN-->
<LINK REL="STYLESHEET" HREF="/support/kbstyle.css" TYPE="text/css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q74925 ">
<META NAME="KBModify" CONTENT="1997/09/16">
<META NAME="KBCreate" CONTENT="1991/08/04">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; masm">
<META NAME="Description" CONTENT="  The Microsoft Macro Assembler (MASM) version 6.0 includes a predefined macro in DOS.INC called @ShowStr that displays a $-terminated string. When the argument to @ShowStr is a string literal and there are no segment directives or ends directives fo...">
<META NAME="Product" CONTENT="Macro Assembler">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QATX,QAAP,QAGB,QDKW,QAR4,QAMB,QAB4,QABI,QAKP,QBXT,QA5V,QAIB,QAY2,QAUR V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: A1010 from Unclosed Segment in MASM @ShowStr Macro</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 16, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q74925 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
6.00
MS-DOS
kbtool kbfixlist kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Macro Assembler for MS-DOS, version 6.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The Microsoft Macro Assembler (MASM) version 6.0 includes a predefined
macro in DOS.INC called @ShowStr that displays a $-terminated string. When
the argument to @ShowStr is a string literal and there are no segment
directives or ends directives following the occurrence of @ShowStr, the
assembler will generate the following error:
<P>
<PRE>   fatal error A1010: unmatched block nesting: _DATA

</PRE><h2>RESOLUTION</h2>
 
<P>
To work around this problem, make sure that a simplified segment directive
or ends directive follows the @ShowStr macro.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in MASM version 6.0. This
problem was corrected in MASM version 6.0a.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
When @ShowStr is passed a string literal, the macro generates the
following code:
<P>
<PRE>   sseg    TEXTEQU @CurSeg        ; save current segment
   .DATA                          ; change segment
   msg     BYTE    ofset, "$"     ; terminate string with a '$'
   sseg    SEGMENT                ; restore segment
   mov     dx,     OFFSET msg
   mov     ah,     9
   int     21h                    ; display '$' terminated string

</PRE>The line "sseg SEGMENT" restores the segment but the macro never
closes the segment; it relies on the user subsequently closing the
segment with the appropriate ends directive or by opening another
segment with a simplified segment directive. If the segment is left
open, an A1010 error is generated.
<P>
In the sample code below, @ShowStr is in a segment started with .CODE.
In the macro expansion, that segment is ended and the next segment
begun with .DATA. The code segment is restored with the statement
_TEXT SEGMENT. This segment is not closed in the macro or in the
subsequent code, so the A1010 error is produced. The error can be
eliminated by uncommenting either of the commented lines.
<P>
<P><h3>Sample Code</h3>
 
<P>
; Assemble options needed: none
<P>
.MODEL small
<P>
INCLUDE dos.inc
<P>
.STACK 4096
.CODE
<PRE>    .startup
    @ShowStr "Hello"
    .exit 0
</PRE>; uncomment one of the following lines to work around the problem
; _TEXT ENDS
; .DATA
<P>
END
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 6.00 buglist6.00 fixlist6.00a<BR>
KBCategory: kbtool kbfixlist kbbuglist<BR>
KBSubCategory: MLIss<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 16, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
