

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: A2041 Initializing a Large STRUCT </TITLE>

<!--STYLE_BEGIN-->
<LINK REL="STYLESHEET" HREF="/support/kbstyle.css" TYPE="text/css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q155047">
<META NAME="KBModify" CONTENT="1997/01/24">
<META NAME="KBCreate" CONTENT="1996/08/20">
<META NAME="Keywords" CONTENT="kbprg kberrmsg">
<META NAME="KBArea" CONTENT="Support; KB; masm">
<META NAME="Description" CONTENT="  Attempting to initialize a structure causes one or more of the following assembly errors:     error A2041: string or text literal too long    error A2039: line too long  CAUSE =====  MASM 6.x has a 255-character line limit. Even when the initializa...">
<META NAME="Product" CONTENT="Macro Assembler">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAI4,QAMB,QAC2,QBXT,QA5V,QAIB,QAAP,QAB4,QDKS,QBHL,QATX,QAHE,QAWH,QAVX,QAVW V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: A2041 Initializing a Large STRUCT</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 24, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q155047</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Macro Assembler for MS-DOS, versions 6.0, 6.1, 6.11
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Attempting to initialize a structure causes one or more of the following
assembly errors:
<P>
<PRE>   error A2041: string or text literal too long
   error A2039: line too long

</PRE><h2>CAUSE</h2>
 
<P>
MASM 6.x has a 255-character line limit. Even when the initialization spans
multiple lines, the entire structure initialization is considered one line
and is subject to the 255-character limit.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
The following sample illustrates three possible workarounds:

<UL><LI>Remove white space, comments, line-continuation characters, and so on,
   in an effort to reduce the total initialization string to less than 255
   characters.

<LI>Break up the STRUCT into helper STRUCTS defining and initializing the
   sub-STRUCTs. Precede this by a label of the type of the original STRUCT.

<LI>Define a label of the type of the STRUCT and follow this with the
   individual definition and initialization of each STRUCT member.
<P>
</UL><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Sample Code</h3>
 
<P>
; Assemble /c /Fl and examine list file to verify output.
<P>
; To test each case, set the following EQU. Set to 0 to
; demonstrate the A2041 error. Set to 1, 2, 3 to test
; each workaround in turn.
<P>
WorkaroundA2041 EQU 0
<P>
.MODEL SMALL, C
<P>
.NOLIST
<P>
INCLUDE WIN.INC
<P>
.LIST
<P>
;---------------------------------------------------------
; Example structure adapted from WINDOWS.H
<P>
OPENFILENAME STRUCT 1t
<PRE>    lStructSize           DWORD      ?
    hwndOwner             HWND       ?
    hInstance             HINSTANCE  ?
    lpstrFilter           LPCSTR     ?
    lpstrCustomFilter     LPSTR      ?
    nMaxCustFilter        DWORD      ?
    nFilterIndex          DWORD      ?
    lpstrFile             LPSTR      ?
    nMaxFile              DWORD      ?
    lpstrFileTitle        LPSTR      ?
    nMaxFileTitle         DWORD      ?
    lpstrInitialDir       LPCSTR     ?
    lpstrTitle            LPCSTR     ?
    Flags                 DWORD      ?
    nFileOffset           UINT       ?
    nFileExtension        UINT       ?
    lpstrDefExt           LPCSTR     ?
    lCustData             LPARAM     ?
    lpfnHook              FARPROC    ?
    lpTemplateName        LPCSTR     ?
</PRE>OPENFILENAME ENDS
<P>
<P>
IF WorkaroundA2041 EQ 2
<P>
;---------------------------------------------------------
; helper STRUCTs derived by breaking up the original
; OPENFILENAME STRUCT
<P>
OPENFILENAME_1 STRUCT 1t
<PRE>    lStructSize           DWORD      ?
    hwndOwner             HWND       ?
    hInstance             HINSTANCE  ?
    lpstrFilter           LPCSTR     ?
</PRE>OPENFILENAME_1 ENDS
<P>
OPENFILENAME_2 STRUCT 1t
<PRE>    lpstrCustomFilter     LPSTR      ?
    nMaxCustFilter        DWORD      ?
    nFilterIndex          DWORD      ?
    lpstrFile             LPSTR      ?
</PRE>OPENFILENAME_2 ENDS
<P>
OPENFILENAME_3 STRUCT 1t
<PRE>    nMaxFile              DWORD      ?
    lpstrFileTitle        LPSTR      ?
    nMaxFileTitle         DWORD      ?
    lpstrInitialDir       LPCSTR     ?
</PRE>OPENFILENAME_3 ENDS
<P>
OPENFILENAME_4 STRUCT 1t
<PRE>    lpstrTitle            LPCSTR     ?
    Flags                 DWORD      ?
    nFileOffset           UINT       ?
    nFileExtension        UINT       ?
</PRE>OPENFILENAME_4 ENDS
<P>
OPENFILENAME_5 STRUCT 1t
<PRE>    lpstrDefExt           LPCSTR     ?
    lCustData             LPARAM     ?
    lpfnHook              FARPROC    ?
    lpTemplateName        LPCSTR     ?
</PRE>OPENFILENAME_5 ENDS
<P>
ENDIF
<P>
.DATA
<P>
IF WorkaroundA2041 EQ 0
<P>
;---------------------------------------------------------
; This STRUCT definition and initialization generates:
;   error A2041: string or text literal too long
;   error A2039: line too long
<P>
<PRE>    ofn OPENFILENAME { SIZEOF(OPENFILENAME), ; lStructSize DWORD
                       NULL,    ; hwndOwner         HWND
                       NULL,    ; hInstance         HINSTANCE
                       NULL,    ; lpstrFilter       LPCSTR
                       NULL,    ; lpstrCustomFilter LPSTR
                       0,       ; nMaxCustFilter    DWORD
                       0,       ; nFilterIndex      DWORD
                       NULL,    ; lpstrFile         LPSTR
                       0,       ; nMaxFile          DWORD
                       NULL,    ; lpstrFileTitle    LPSTR
                       0,       ; nMaxFileTitle     DWORD
                       NULL,    ; lpstrInitialDir   LPCSTR
                       NULL,    ; lpstrTitle        LPCSTR
                       0,       ; Flags             DWORD
                       0,       ; nFileOffset       UINT
                       0,       ; nFileExtension    UINT
                       NULL,    ; lpstrDefExt       LPCSTR
                       0,       ; lCustData         LPARAM
                       NULL,    ; lpfnHook          FARPROC
                       NULL }   ; lpTemplateName    LPCSTR
</PRE>ENDIF
<P>
IF WorkaroundA2041 EQ 1
<P>
;---------------------------------------------------------
; This STRUCT definition and initialization will assemble
; due to keeping the total character count down - removing
; comments, white space, line continuation characters, etc.
<P>
<PRE>    ofn OPENFILENAME { SIZEOF(OPENFILENAME), NULL, NULL,
    NULL, NULL, 0, 0, NULL, 0, NULL, 0, NULL, NULL, 0, 0,
    0, NULL, 0, NULL, NULL }

</PRE>ENDIF
<P>
IF WorkaroundA2041 EQ 2
<P>
;---------------------------------------------------------
; This STRUCT definition and initialization will assemble
; by breaking up the original STRUCT and declaring the
; STRUCTs derived from this breakup.  This is preceded by
; defining a LABEL to refer to the entire region of memory.
;
<P>
<PRE>    ofn LABEL OPENFILENAME

    OPENFILENAME_1 { SIZEOF(OPENFILENAME), ; DWORD lStructSize
                     NULL,    ; hwndOwner         HWND
                     NULL,    ; hInstance         HINSTANCE
                     NULL }   ; lpstrFilter       LPCSTR
    OPENFILENAME_2 { NULL,    ; lpstrCustomFilter LPSTR
                     0,       ; nMaxCustFilter    DWORD
                     0,       ; nFilterIndex      DWORD
                     NULL }   ; lpstrFile         LPSTR
    OPENFILENAME_3 { 0,       ; nMaxFile          DWORD
                     NULL,    ; lpstrFileTitle    LPSTR
                     0,       ; nMaxFileTitle     DWORD
                     NULL }   ; lpstrInitialDir   LPCSTR
    OPENFILENAME_4 { NULL,    ; lpstrTitle        LPCSTR
                     0,       ; Flags             DWORD
                     0,       ; nFileOffset       UINT
                     0    }   ; nFileExtension    UINT
    OPENFILENAME_5 { NULL,    ; lpstrDefExt       LPCSTR
                     0,       ; lCustData         LPARAM
                     NULL,    ; lpfnHook          FARPROC
                     NULL }   ; lpTemplateName    LPCSTR

</PRE>ENDIF
<P>
IF WorkaroundA2041 EQ 3
<P>
;---------------------------------------------------------
; This STRUCT definition and initialization will assemble
; by defining a LABEL to refer to a region of memory
; followed by explicitly declaring data for each of the
; members of the STRUCT.
<P>
<PRE>    ofn LABEL OPENFILENAME

        DWORD      SIZEOF(OPENFILENAME) ; lStructSize
        HWND       NULL                 ; hwndOwner
        HINSTANCE  NULL                 ; hInstance
        LPCSTR     NULL                 ; lpstrFilter
        LPSTR      NULL                 ; lpstrCustomFilter
        DWORD      0                    ; nMaxCustFilter
        DWORD      0                    ; nFilterIndex
        LPSTR      NULL                 ; lpstrFile
        DWORD      0                    ; nMaxFile
        LPSTR      NULL                 ; lpstrFileTitle
        DWORD      0                    ; nMaxFileTitle
        LPCSTR     NULL                 ; lpstrInitialDir
        LPCSTR     NULL                 ; lpstrTitle
        DWORD      0                    ; Flags
        UINT       0                    ; nFileOffset
        UINT       0                    ; nFileExtension
        LPCSTR     NULL                 ; lpstrDefExt
        LPARAM     0                    ; lCustData
        FARPROC    NULL                 ; lpfnHook
        LPCSTR     NULL                 ; lpTemplateName

</PRE>ENDIF
<P>
END
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbprg kberrmsg<BR>
KBSubcategory: MLIss<BR>
Additional reference words: 6.00 6.10 kbdsh
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 24, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
