

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: No Warning for INVOKE Between 16-Bit and 32-Bit Segments </TITLE>

<!--STYLE_BEGIN-->
<LINK REL="STYLESHEET" HREF="/support/kbstyle.css" TYPE="text/css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q85508 ">
<META NAME="KBModify" CONTENT="1995/01/09">
<META NAME="KBCreate" CONTENT="1992/06/11">
<META NAME="Keywords" CONTENT="kbtool kbprb">
<META NAME="KBArea" CONTENT="Support; KB; masm">
<META NAME="Description" CONTENT="  The Microsoft Macro Assembler (MASM) version 6.0 does not support transfer of control between 16-bit and 32-bit code segments through the INVOKE command. If the assembler encounters an INVOKE in a 16-bit segment, it assumes that the procedure being...">
<META NAME="Product" CONTENT="Macro Assembler">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QAGI,QDIR,QBB3,QAYV,QAYA,QBVV,QA7R,QAIF,QABG,QAH6,QAB4,QBII,QAA1,QBE7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: No Warning for INVOKE Between 16-Bit and 32-Bit Segments</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 9, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q85508 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Macro Assembler for MS-DOS, versions 6.0, 6.0a, and 6.0b
<LI>Microsoft Macro Assembler for OS/2, versions 6.0, 6.0a, and 6.0b
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The Microsoft Macro Assembler (MASM) version 6.0 does not support transfer
of control between 16-bit and 32-bit code segments through the INVOKE
command. If the assembler encounters an INVOKE in a 16-bit segment, it
assumes that the procedure being invoked is also in a 16-bit segment and
places the parameters on the stack using WORDs. On the other hand, if the
assembler encounters an INVOKE in a 32-bit code segment, the parameters are
placed on the stack as DWORDs with the assumption that the called routine
will also be in a 32-bit code segment. MASM does not generate warnings when
the segment being called does not match the calling segment.
<P>
<P><h2>CAUSE</h2>
 
<P>
The INVOKE command, introduced in MASM 6.0, is not designed to support
transferring control between 16-bit and 32-bit code segments.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
You can work around this problem by pushing the necessary parameters on the
stack and making the appropriate call instead of using INVOKE.
<P>
<P><h2>STATUS</h2>
 
<P>
This feature is under review and will be considered for inclusion in a
future release.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
It is important to note that, in order to run code in 32-bit segments,
the operating system that your program is running on must be able to
support 32-bit code segments. Most PC-based operating systems such as
MS-DOS version 5.0, Windows version 3.0, and OS/2 versions 1.x do not
provide support for 32-bit code segments. Newer operating systems and
MS-DOS extender packages may provide this support.
<P>
<P><h3>Sample Code</h3>
 
<P>
; Assemble options needed: none
; Note that this code does not work on present operating systems such
; as MS-DOS. This code is only provided to demonstrate how to replace
; an INVOKE statement with the appropriate push and call sequence.
<P>
.MODEL small, pascal
.386
<P>
func PROTO FAR32 arg1:BYTE, arg2:WORD, arg3:DWORD
<P>
.CODE
<PRE>  .STARTUP
  MOV dl, x
  MOV cx, y
  MOV ebx, z
  INVOKE func, dl, cx, ebx ; This doesn't work.

  ;MOV al, dl    ; Uncomment this code to set up the call to func.
  ;PUSH eax      ; Push DWORD instead of WORD.
  ;MOV ax, cx
  ;PUSH eax      ; Push DWORD instead of WORD.
  ;PUSH ebx
  ;CALL FAR32 PTR func

  .EXIT 0

</PRE>.DATA
<PRE>  x DB 11h
  y DW 2222h
  z DD 33333333h

</PRE>_CODE32 SEGMENT DWORD PUBLIC USE32 'CODE'
func PROC FAR32 arg1:BYTE, arg2:WORD, arg3:DWORD
<PRE>  MOV bl, arg1   ; func assumes that all variables
  MOV cx, arg2   ; on the stack are DWORD aligned.
  MOV edx, arg3
  RET
</PRE>func ENDP
_CODE32 ENDS
<P>
END
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 6.00 6.00a 6.00b<BR>
KBCategory: kbtool kbprb<BR>
KBSubCategory: MLIss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 9, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
