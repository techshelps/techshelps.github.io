

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Characteristics of MASM Labels </TITLE>

<!--STYLE_BEGIN-->
<LINK REL="STYLESHEET" HREF="/support/kbstyle.css" TYPE="text/css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q123685">
<META NAME="KBModify" CONTENT="1995/01/23">
<META NAME="KBCreate" CONTENT="1994/12/07">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; masm">
<META NAME="Description" CONTENT="  Most high-level programming languages use variables for data and functions or procedures for code. MASM uses labels for both data and code.  It is helpful to think of a MASM label as an address because once the program is loaded into memory, each l...">
<META NAME="Product" CONTENT="Macro Assembler">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAC2,QAMB,QAVS,QAH4,QDOD V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Characteristics of MASM Labels</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 23, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q123685</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Macro Assembler for MS-DOS, versions 5.1, 6.0,
   6.1, and 6.11
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Most high-level programming languages use variables for data and
functions or procedures for code. MASM uses labels for both data and
code.
<P>
It is helpful to think of a MASM label as an address because once the
program is loaded into memory, each label corresponds to a particular
address. It is also helpful to think of a data label as a variable and a
code label as a function or procedure.
<P>
You can think of a MASM label as a C pointer; however, this might lead to
confusion because a label is more like a C array name than a C pointer. A
MASM label has no space allocated to store its value, as does a C pointer.
<P>
This article discusses the segment and offset of a MASM label, label
type, and label distance.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
A MASM label is made up of a segment and an offset. In your MASM program,
you can use the SEG and OFFSET operators to access the corresponding
portion of the label. The the SEG and OFFSET directives work in a way
similar to the C FP_SEG and FP_OFF macros. However, FP_SEG and FP_OFF work
on C pointers, not MASM labels or memory addresses.
<P>
The size of the segment of a MASM label is always 16 bits. MASM labels have
either a 16-bit or a 32-bit offset. In general, the offset component of a
label is 16 bits. However, in flat model programs, the offset component of
a label is 32 bits.
<P>
In addition to a segment and an offset, every label has a type or distance
associated with it. Data labels typically have a type, while code labels
have an associated distance.
<P>
The type or distance associated with a label is used to resolve
ambiguities. For example, consider the following instruction:
<P>
<PRE>   mov MyLabel, 0

</PRE>Should the assembler generate code to move a byte or a word to MyLabel? The
answer depends on how MyLabel was defined. If MyLabel was defined as a
byte, a 0 byte is moved to MyLabel, but if MyLabel was defined as a word, a
0 word is moved to MyLabel.
<P>
If you want to move a value to a label that has a size different from the
size for the type associated with the label, cast the label. You can cast a
label by placing the type that you want to associate with the label,
followed by PTR, in front of the data label. For example, the following
instruction casts MyLabel to a label for a WORD:
<P>
<PRE>   mov WORD PTR MyLabel, 0

</PRE>The WORD PTR does not mean MyLabel contains a pointer to a word; it means
the data at MyLabel should be considered to be a word.
<P>
Similarly, you can tell the assembler whether to make a call or a jump NEAR
or FAR by specifying the distance for the code label. For example, the
following instruction tells the assembler to generate a 32-bit NEAR jump to
the label CodeLabel:
<P>
<PRE>   jmp NEAR32 CodeLabel

</PRE>A jump such as this one is helpful when writing Windows NT or OS/2 flat
model programs.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 5.10 6.00 6.10<BR>
KBCategory: kbprg<BR>
KBSubcategory: MASMLngIss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 23, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
