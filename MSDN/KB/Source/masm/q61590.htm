

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Passing a long* from a C Module to an Assembly Module </TITLE>

<!--STYLE_BEGIN-->
<LINK REL="STYLESHEET" HREF="/support/kbstyle.css" TYPE="text/css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q61590 ">
<META NAME="KBModify" CONTENT="1995/01/06">
<META NAME="KBCreate" CONTENT="1990/05/02">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; masm">
<META NAME="Description" CONTENT="  The following code demonstrates passing a LONG INT (4 bytes) via a far pointer (4 bytes) to an assembly routine that accesses the LONG integer.  Each integer is incremented in the assembly routine and its new value returned to the calling C program...">
<META NAME="Product" CONTENT="Macro Assembler">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QA7R,QASR,QAKD,QA4Q,QBFY,QALG,QAH7,QAH6,QAD7,QDMW,QAY2,QAUR,QAUD,QAO3 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Passing a long* from a C Module to an Assembly Module</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 6, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q61590 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Macro Assembler for MS-DOS, versions 5.1, 5.1a, 6.0,
   6.0a, and 6.0b
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The following code demonstrates passing a LONG INT (4 bytes) via a
far pointer (4 bytes) to an assembly routine that accesses the LONG
integer.
<P>
Each integer is incremented in the assembly routine and its new value
returned to the calling C program.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>/* Compile options needed: /AL
*/

#include &lt;stdio.h&gt;
#include &lt;process.h&gt;
#include &lt;conio.h&gt;

</PRE>extern void IncLongs( long *, long * );
<P>
<PRE>void main()
</PRE>{
<PRE>   long *n1,*n2;               /* 4 byte pointers  */

   long int t1 = 9999999L;     /* 4 byte variables */
   long int t2 = 2256789L;

   n1 = &amp;t1;
   n2 = &amp;t2;

   /* initial values */
   printf( "The values are  %ld and  %ld\n ", *n1, *n2 );

   printf( "Incrementing values...\n" );
   IncLongs( n1, n2 );

   /* values returned by the assembly routine */
   printf( "The values are  %ld and  %ld\n ", *n1, *n2 );
</PRE>}
<P>
 
<P>
; Assemble options needed: none
<P>
<PRE>         .model large, c
         .data
         .code
</PRE>IncLongs PROC far arg1:dword, arg2:dword
<PRE>         PUSH es                 ; save registers
         PUSH si
         LES si,arg1             ; load in es:si the seg:offset of n1
         INC word ptr es:[si]
         JNC doarg2
         INC word ptr es:[si+2]  ; if carry, increment high word of n1

</PRE>doarg2:
<PRE>         LES si,arg2             ; load in es:si the seg:offset of n2
         INC word ptr es:[si]
         JNC finis
         INC word ptr es:[si+2]  ; if carry, increment high word of n2

</PRE>finis:
<PRE>         POP si                  ; restore registers
         POP es
         MOV sp,bp
         RET
</PRE>IncLongs ENDP
<P>
<PRE>         END
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 5.10 5.10a 6.00 6.00a 6.00b<BR>
KBCategory: kbprg<BR>
KBSubCategory: MASMLngIss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 6, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
