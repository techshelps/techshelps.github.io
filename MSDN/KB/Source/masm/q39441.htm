

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The ORG Directive and Actual Offsets </TITLE>

<!--STYLE_BEGIN-->
<LINK REL="STYLESHEET" HREF="/support/kbstyle.css" TYPE="text/css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q39441 ">
<META NAME="KBModify" CONTENT="1995/02/16">
<META NAME="KBCreate" CONTENT="1988/12/16">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; masm">
<META NAME="Description" CONTENT="  The ORG directive in MASM does not necessarily produce an actual offset that matches the offset specified by  ORG XXX . For example, if you use  ORG 100h  in your program, the following code will not always begin at the 100h offset relative to the ...">
<META NAME="Product" CONTENT="Macro Assembler">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QA7R,QA96,QAVX,QAVW,QAGI,QABG,QAYA V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>The ORG Directive and Actual Offsets</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 16, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q39441 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Macro Assembler for MS-DOS, versions 5.1, 5.1a, 6.0,
   6.0a, and 6.0b
<LI>Microsoft Macro Assembler for OS/2, versions 5.1, 5.1a, 6.0, 6.0a,
   and 6.0b
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The ORG directive in MASM does not necessarily produce an actual
offset that matches the offset specified by "ORG XXX". For example, if
you use "ORG 100h" in your program, the following code will not always
begin at the 100h offset relative to the start of the segment.
<P>
When you are using a .COM source file and there is only one module,
the "ORG 100h" will result in an actual offset of 100h for the code
that follows the ORG statement. This behavior also occurs with
segments with AT combine type (in which case segments are not combined
by the linker, and no data or code is defined).
<P>
However, if you have multiple modules and/or you are not dealing with
a .COM source file, the "ORG 100h" produces an actual offset, which is
somewhat greater than 100h.
<P>
This behavior occurs because the linker, in these circumstances, will
do some padding that you have no control over.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
In the following illustration (which deals with the source modules
below), note that the ORG instruction increments the local offset by
100h, resulting in the offset of the PUSH instruction in example2 being
100h (that's what it would report in the listing file). However, when
these modules are linked, all the portions of segment code are
concatenated. Thus, EXAMPLE2.asm:code:100h is converted into code:113h.
The order of concatenation is the order of linking.
<P>
The following example illustrates the scenario:
<P>
<PRE>     Actual                      Offset
     offset                      from start
     from                        of segment
     code                        code in module
     -------                     ---------------
             +-----------------+
     0117    |   ret           | 0105
     0116    |   pop           | 0103    test2.asm
     0114    |   mov           | 0101
     0113    |   push          | 0100
     0013    |   org           | 0000
             +-----------------+
     0012    |   ret           | 0004
     0011    |   pop           | 0003    test1.asm
     000F    |   mov           | 0001
     000E    |   push          | 0000
             +-----------------+
     000C    |   int           | 000C
     0009    |   mov           | 0009    testmain.asm
     0006    |   call          | 0006
     0003    |   call          | 0003
     0000    |   mov           | 0000
             +-----------------+
                 segment code


|---------------testmain.asm:       |---------------test1.asm:
  code segment public 'code'           PUBLIC _test
  assume cs:code                       code segment public 'code'
                                       assume cs:code
          mov     ax, 0a0ah            _test proc

          extrn   _test:proc               push    bp
          extrn   _test2:proc              mov     bp, sp

          call    _test                    pop     bp
          call    _test2                   ret

          mov     ax, 4c00h            _test   ENDP
          int     21h                  code ends
          code ends

          END                          END



</PRE>|---------------test2.asm:
<PRE>   code segment public 'code'
   assume cs:code
           org     100h

           PUBLIC  _test2
   _test2    PROC

           push    bp
           mov     bp, sp

           pop     bp
           ret

   _test2    ENDP
   code ends
           END
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 5.10 5.10a 6.00 6.00a 6.00b<BR>
KBCategory: kbprg<BR>
KBSubCategory: MASMLngIss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 16, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
