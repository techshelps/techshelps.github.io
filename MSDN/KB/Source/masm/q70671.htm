

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Return Must Match Memory Model for CALL to Label in Proc </TITLE>

<!--STYLE_BEGIN-->
<LINK REL="STYLESHEET" HREF="/support/kbstyle.css" TYPE="text/css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q70671 ">
<META NAME="KBModify" CONTENT="1995/01/23">
<META NAME="KBCreate" CONTENT="1991/03/28">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; masm">
<META NAME="Description" CONTENT="  With the Macro Assembler (MASM), if a CALL is made to a label within a procedure, a near call is generated by default. Depending on the memory model being used, you may need to explicitly specify the correct return.  MORE INFORMATION  The standard ...">
<META NAME="Product" CONTENT="Macro Assembler">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGI,QAUD,QAMB,QAC2,QAIF,QAH4,QA7R,QALW,QAR5,QAPF,QAVS,QDJF,QAHH,QAB9,QATS V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Return Must Match Memory Model for CALL to Label in Proc</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 23, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q70671 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Macro Assembler for MS-DOS, version 5.1, 5.1a, 6.0,
   6.0a, and 6.0b
<LI>Microsoft Macro Assembler for OS/2, versions 5.1, 5.1a, 6.0, 6.0a,
   and 6.0b
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
With the Macro Assembler (MASM), if a CALL is made to a label within a
procedure, a near call is generated by default. Depending on the
memory model being used, you may need to explicitly specify the
correct return.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The standard RET instruction pops off the return address depending on
the memory model. In a small memory model program, the RET instruction
is converted to a RETN, which only pops off the offset to return. In
medium and large memory models, the RET is converted to RETF, which
pops off both the segment and offset to return from the far call.
Because a call to a label within a procedure always results in a near
call, the RETF instruction that is generated in medium and large
models will pop a segment value for the return address that was never
pushed.
<P>
To ensure that the right size address is popped off the stack relative
to that pushed on the stack, one of the following methods may be used:

<OL><P><LI>Use the RET return, but push CS before the call so that the segment
   and offset will both be on the stack for the far return:
<P>
<P><PRE>      PUSH CS
      CALL label1
</PRE><P>
</OL>- or -

<OL><P><LI>Use the FAR PTR override on the call along with a RET to return, so
   that both segment and offset are pushed and popped off the stack:
<P>
<P><PRE>      CALL FAR PTR label1
</PRE><P>
</OL>- or -

<OL><P><LI>Use the LABEL FAR directive along with a RET return so that the
   assembler will generate a far return to match the far label call:
<P>
<P><PRE>      label1 LABEL FAR
</PRE><P>
</OL>- or -

<OL><P><LI>If the label is called ONLY from within the procedure, use RETN
   explicitly (instead of RET) to indicate the NEAR return, so that
   only the offset is popped off the stack:
<P>
<P><PRE>      label1:
<PRE></PRE>               RETN

</PRE></OL>The sample code below demonstrates the need for the proper return for
a call to a label. When assembled and run as is, the code will hang
the computer. Adding any of the solutions described above will correct
the code. Comments are included at the locations where each correction
should go.
<P>
<P><h3>Sample Code</h3>
 
<P>
; Assemble options needed : none
<P>
.MODEL  large
<P>
.STACK
<P>
.CODE
<P>
start:  call proc1
<P>
<PRE>        mov ah, 4ch
        mov al, 0
        int 21h

proc1   PROC
                       ; #1 - add PUSH CS instruction here
        CALL label1    ; #2 - change call to CALL FAR PTR label1
        RET

label1:                ; #3 - change label to label1 LABEL FAR
        RET            ; #4 - change return to RETN

proc1   ENDP

</PRE>END start
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 5.10 5.10 6.00 6.00a 6.00b<BR>
KBCategory: kbprg<BR>
KBSubCategory: MASMLngIss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 23, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
