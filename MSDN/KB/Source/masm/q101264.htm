

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Assembling Code Developed for MASM 5.x with MASM 6.x </TITLE>

<!--STYLE_BEGIN-->
<LINK REL="STYLESHEET" HREF="/support/kbstyle.css" TYPE="text/css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q101264">
<META NAME="KBModify" CONTENT="1995/01/23">
<META NAME="KBCreate" CONTENT="1993/07/08">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; masm">
<META NAME="Description" CONTENT="  Later versions of the Microsoft Macro Assembler (MASM) provide many advanced features that previous MASM versions do not provide. They incorporate many features previously found only in high-level languages, significantly increasing your programmin...">
<META NAME="Product" CONTENT="Macro Assembler">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QBV8,QAEF,QAPN,QBWC,QABG,QBVV,QAMB,QAC2,QAB9,QDH6,QBXT,QBE7,QBE6,QA9N V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Assembling Code Developed for MASM 5.x with MASM 6.x</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 23, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q101264</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Macro Assembler for MS-DOS, versions 6.0, 6.0a, 6.0b,
   6.1, 6.1a, and 6.11
<LI>Microsoft Macro Assembler for OS/2, versions 6.0, 6.0a, and 6.0b
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Later versions of the Microsoft Macro Assembler (MASM) provide many
advanced features that previous MASM versions do not provide. They
incorporate many features previously found only in high-level
languages, significantly increasing your programming productivity,
which also offering performance improvements. Some of these new
features require changes that make source code developed with MASM
version 5.1 incompatible with the default behavior of MASM versions
6.0 and later.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To provide these major functionality enhancements while continuing to
offer backward compatibility with previous versions, MASM 6.0 and
later provide a special compatibility mode of assembly. You can access
this mode in any of three ways:

<UL><LI>Use the MASM.EXE conversion driver. This method converts your
   existing command-line options to the new syntax, adds a
   compatibility option (/Zm), and invokes the new ML.EXE assembler.
   This method also preserves your existing makefiles and batch files.

<LI>Use the new ML.EXE assembler with the /Zm option. This method
   eliminates the requirement to run the conversion driver but it
   requires you to convert your command-line options to the new MASM
   6.0 and later syntax.

<LI>Edit each source code file to start with the OPTION M510 statement.
   This method is equivalent to adding the /Zm option to the command
   line. It allows you to assemble both old and new modules in ML.EXE
   using one command line.
<P>
</UL>Any of these three methods will, in most cases, support assembling
existing code with MASM 6.0 and later, gaining access to some of its
new capabilities. If you code assembles in MASM 5.1 or earlier, but
does not assemble in the compatibility mode, please refer to Appendix
A of the "Programmer's Guide."
<P>
In most cases, using the /Zm option or OPTION M510 to assemble your
existing code is the best solution. This method requires the minimum
changes to the code and you can add some of the new assembler features
as you modify or add to your code. If you prefer to modify your code
to support assembling it without the /Zm or OPTION M510 options,
perform the following four steps:

<OL><P><LI>Convert the command line to the equivalent ML.EXE form and assemble
   your code. Verify that your code assembles with the /Zm option. You
   must convert the command line manually because the MASM.EXE
   conversion driver automatically adds the /Zm option to the command
   line.

<P><LI>Add the appropriate OPTION directives to your code.
<P>
<P><PRE>    - Always add the following
</PRE><P>
<PRE>         OPTION OLDSTRUCTS ; Supports old-style structures
         OPTION OLDMACROS  ; Supports old-style macros
         OPTION DOTNAME    ; Supports naming identifiers with
                           ; a leading dot [.]

    - If your code does not specify the .386 or .386P directive, add
      the following:

         OPTION EXPR16     ; Use 16-bit precision in expressions

    - If your code does not contain a .MODEL directive, add the
      following:

         OPTION OFFSET:SEGMENT ; Specifies that the OFFSET operator
                               ; defaults to segment-relative rather
                               ; than group-relative

    - If your code does not contain a .MODEL directive or if the
      .MODEL directive does not specify a language, add the following:

         OPTION NOSCOPED       ; Makes code labels global rather than
                               ; local to the procedure in which they
                               ; appear
         OPTION PROC:PRIVATE   ; Makes code labels defined with PROC
                               ; local unless specified otherwise

</PRE><P><LI>Remove the /Zm option from the command line and assemble your code.
   Because the OPTION statements replicate most of the effects of the
   /Zm option, the code should assemble without problems. However,
   because certain effects of the /Zm option do not have corresponding
   OPTION statements, some applications may not assemble.
<P>
   The most common cause for an application to fail to assemble in
   this situation involves using processor or coprocessor instruction
   names as label names. If this is the case in your code, use the
   OPTION KEYWORD directive to remove these label names from the
   reserved word list. The syntax for the OPTION KEYWORD directive is
   as follows:
<P>
<P><PRE>      OPTION NOKEYWORD:&lt;keyword&gt;
</PRE><P>
   If you have other assembly problems, please refer to Appendix A of
   the "Programmer's Guide" for information about these effects and
   suggested methods to work around them.

<P><LI>Remove each OPTION directive, one at a time, and assemble the code
   after you remove each one.
<P>
   Usually, it is best to remove the OPTION directives in the opposite
   order in which you added them. In some cases, you may decide that
   you prefer the MASM 5.x compatibility behavior instead of the new
   MASM 6.x behavior. When this is true, do not remove the
   corresponding OPTION statement from your code. Please refer to
   Appendix A of the "Programmer's Guide" for more information on
   resolving any problems that appear.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 6.00 6.00a 6.00b 6.10 6.10a<BR>
KBCategory: kbprg<BR>
KBSubCategory: MASMLngIss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 23, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
