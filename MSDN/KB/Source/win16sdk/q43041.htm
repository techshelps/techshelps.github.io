

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Calculating Memory Requirements for MS-DOS-Based Apps </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q43041 ">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1989/04/01">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  It is extremely difficult for an application to determine in advance how much memory an MS-DOS (non-Windows) application will require to run. This data can be estimated under real and standard modes; however, there is no method to determine this in...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAJH,QAH4,QBWS,QDL9,QBWO,QBWN,QBVV,QBW6,QBWQ,QAIJ,QAGB,QDIV,QA5W,QALM,QAGX V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Calculating Memory Requirements for MS-DOS-Based Apps</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q43041 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
3.00 3.10
WINDOWS
kbprg
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   versions 3.1 and 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
It is extremely difficult for an application to determine in advance
how much memory an MS-DOS (non-Windows) application will require to run.
This data can be estimated under real and standard modes; however,
there is no method to determine this information in enhanced mode.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The Windows module WinOldAp is required to run MS-DOS-based applications.
One complication is that once WinOldAp is in memory, it can run many
applications. In the following table, "PIF Req'd" indicates the amount
of memory required for the application as listed in the corresponding
PIF file and "PIF Des'd" indicates the amount of memory desired by the
application as listed in the corresponding PIF file. The following
table indicates the difference between applications:
<P>
<PRE>   PIF    PIF    Free Mem  Free Mem  Memory
   Req'd  Des'd  Before    After     Usage
   -----------------------------------------
   160    160     418      155       263     First copy run
   160    160     153      152         1     Second copy run

</PRE>As this table indicates, the second copy of the application costs
almost no memory. This is because the two copies of the application
share the same memory and are swapped in and out of memory (to disk,
to a RAM drive, or to expanded memory, depending on the WIN.INI
settings).
<P>
Another factor is the order in which MS-DOS-based applications are loaded.
The statistics below demonstrate these differences. In the first case, an
80K program is loaded followed by a 160K program. In the second case,
the 160K program is loaded followed by the 80K program:
<P>
Case 1:
<P>
<PRE>   PIF    PIF    Free Mem  Free Mem  Memory
   Req'd  Des'd  Before    After     Usage
   -----------------------------------------
    80     80     418      244        174     App #1 runs first
   160    160     244       37        207     App #2 runs second
                                      381     Total memory usage

</PRE>Case 2:
<P>
<PRE>   PIF    PIF    Free Mem  Free Mem  Memory
   Req'd  Des'd  Before    After     Usage
   ----------------------------------------
   160    160     418      154        264     App #2 runs first
    80     80     154      153          1     App #1 runs second
                                      265     Total memory usage

</PRE>These results are not as unusual as they may appear. In the second
case, the larger application (App #2) is loaded first. This sets the
WinOldAp swapping partition large enough to hold the application. When
the smaller application (App #1) is run, it fits into the existing
partition. In contrast, in the first case, the smaller application is
run first, therefore the swapping area is not set large enough to hold
the larger application. When the larger application is loaded, WinOldAp
must create a completely separate partition to hold it.
<P>
The amount of memory needed to run an old application varies,
depending on the following:

<OL><P><LI>Whether or not WinOldAp is loaded

<P><LI>Whether the existing swap area (if any) is large enough to hold it

<P><LI>Whether the application screen is saved in text or graphics mode

<P><LI>Whether large-frame, small-frame, or no EMS is in use
   (this variable does not apply to Windows version 3.1)

<P><LI>The contents of the Memory Required and Memory Desired fields in
   the PIF file

<P><LI>Other factors related to the inner workings of the Windows memory
   manager and the WinOldAp module
<P>
</OL>These methods are not applicable to enhanced mode Windows. The only
way to determine if an MS-DOS-based application will run under enhanced
mode is to attempt to run the application and see if the attempt succeeds.
Even this information is not available to another application because
the WinExec return value only indicates that WinOldAp has been
successfully loaded into memory. This value does not contain any
information regarding the real target application.
<P>
The handling of this type of problem is addressed by Windows version 3.1.
In Windows version 3.1, the TOOLHELP library can be used to retrieve the
Exit Code of a Windows-based application. This also works in Windows
version 3.0, however, the problem is that WINOLDAP (the MS-DOS-based
application's Windows agent) for Windows version 3.0 always exits with exit
code 0. Therefore, there is no way to obtain results of the attempted
MS-DOS-based application run. The version of WINOLDAP included with Windows
version 3.1 will exit with the exit code of the MS-DOS-based application
that was run, or one of the following special values:
<P>
;
; Special WINOLDAP exit codes
;
<PRE>EXIT_NoFile      EQU  81h ; Could not start due to file or
                          ; directory access problem
EXIT_NoMem       EQU  82h ; Could not start due to insufficient
                          ; memory
EXIT_Crash       EQU  83h ; VM crashed (abnormal termination)
EXIT_BadVer      EQU  84h ; Could not start due to bad version
EXIT_ExecFail    EQU  85h ; Could not start because MS-DOS EXEC failed
</PRE></OL>EXIT_TaskAPIFail EQU  86h ; Could not start because task switch API
<PRE>                          ; refused start (standard mode only)

</PRE>NOTE THAT THESE SPECIAL CODES MAY OVERLAP WITH AN EXIT CODE USED BY
THE MS-DOS-BASED APPLICATION. If this happens, there is no way to correct
it other than to change the MS-DOS-based application to use different exit
codes that do not conflict with these special ones.
<P>
ALSO NOTE: The exit code of a .BAT file run is always 0. This is a
property of COMMAND.COM, which is part of MS-DOS.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10<BR>
KBCategory: kbprg<BR>
KBSubcategory: KrWoa<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
