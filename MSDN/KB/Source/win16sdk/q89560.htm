

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating Dynamic Code Segments Using PrestoChangoSelector </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q89560 ">
<META NAME="KBModify" CONTENT="1997/07/23">
<META NAME="KBCreate" CONTENT="1992/09/27">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  Some problems arise when an application for the Microsoft Windows graphical environment uses a segment addressed by a selector that is not allocated by the Windows kernel. This article describes the correct method of building selectors at run time....">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QDL9,QBWO,QBWN,QAUD,QBWQ,QAY5,QAGI,QAB9,QABG,QBV8,QAJH,QBVV,QBQU,QAKP V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Creating Dynamic Code Segments Using PrestoChangoSelector</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 23, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q89560 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
3.00 3.10
WINDOWS
kbprg
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   versions 3.1 and 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Some problems arise when an application for the Microsoft Windows
graphical environment uses a segment addressed by a selector that is
not allocated by the Windows kernel. This article describes the
correct method of building selectors at run time. While the text below
describes the problems that arise when an application calls the
PrestoChangoSelector() function to alias a selector, it does not
discuss other difficulties involved in building a code segment at run
time. Note that the techniques in this article are specific to the
current implementation of 16-bit Windows.
<P>
Note that version 3.0 of the Windows Software Development Kit (SDK)
"Reference: Volume 1" manual refers to the PrestoChangoSelector()
function as the ChangeSelector() function.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
If a callback function, for example, a window procedure, is located in
a dynamic code segment, the Windows user module encounters some
problems when any application exits because the selector for the
segment was not allocated by the kernel. To work around this problem,
the application must save the original selector used to access the
segment [obtained from the AllocSelector() function] and use the
original selector to execute the code in the segment [using
PrestoChangoSelector()]. The code fragment below demonstrates this
technique. Note that DATA_SELECTOR is a selector obtained from the
GlobalAlloc() function.
<P>
<PRE>   WORD wCopyOfDataSelector;
   WORD wSelectorToCode;

   // When an application calls AllocSelector() with a valid selector,
   // the function copies the information associated with the selector
   // to a new location in the descriptor table used by Windows and
   // returns the new location. In the code below, wCopyOfDataSelector
   // is a second entry in the descriptor table that points to a
   // globally allocated block of memory.

   if ((wCopyOfDataSelector = AllocSelector(DATA_SELECTOR)))
      {
      // PrestoChangoSelector() toggles the bit in the descriptor table
      // that indicates whether the associated block of memory is code
      // or data. Therefore, in the code below, wSelectorToCode is a
      // code selector to the wCopyOfDataSelector (and DATA_SELECTOR)
      // block of memory.
      if ((wSelectorToCode = PrestoChangoSelector(DATA_SELECTOR,
                                                  DATA_SELECTOR)))
         {
         // Call code through wSelectorToCode
         // Read or write using wCopyOfDataSelector

         return TRUE; // Everything worked!
         }
      else
         return FALSE; // Changing the selector failed
      }
   else
      return FALSE;    // Unable to allocate selector

   // Be sure to free the allocated selector before the application
   // terminates.
   if (FreeSelector(wCopyOfDataSelector))
      return FALSE;  // Selector not freed
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10<BR>
KBCategory: kbprg<BR>
KBSubcategory: KrMm<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 23, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
