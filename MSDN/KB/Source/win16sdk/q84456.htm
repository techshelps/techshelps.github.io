

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SAMPLE: TERMWAIT Spawns Task and Waits for its Termination </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q84456 ">
<META NAME="KBModify" CONTENT="1996/02/15">
<META NAME="KBCreate" CONTENT="1992/05/12">
<META NAME="Keywords" CONTENT="kbprg kbfile">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  TERMWAIT is a file in the Microsoft Software Library that demonstrates how an application can launch a child task and then wait for it to complete before executing specific code. TERMWAIT uses notification messages from the Toolhelp dynamic-link li...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAY5,QDL9,QBWO,QBWN,QAL4,QBWQ,QAGI,QAH4,QAG0,QBV8,QAB9,QAPF,QAA1,QAJQ,QAIF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>SAMPLE: TERMWAIT Spawns Task and Waits for its Termination</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 15, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q84456 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   versions 3.0 and 3.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
TERMWAIT is a file in the Microsoft Software Library that demonstrates how
an application can launch a child task and then wait for it to complete
before executing specific code. TERMWAIT uses notification messages from
the Toolhelp dynamic-link library (DLL) to determine that the child task
has completed. The techniques demonstrated by the TERMWAIT sample work for
both Windows and MS-DOS (non-Windows) child tasks.
<P>
Download TERMWAIT.EXE, a self-extracting file, from the Microsoft Software
Library (MSL) on the following services:

<UL><LI>Microsoft Download Service (MSDL)
<P><PRE>      Dial (206) 936-6735 to connect to MSDL
      Download <A HREF="http://support.microsoft.com/download/support/mslfiles/TERMWAIT.EXE">TERMWAIT.EXE</A> <I>(size: 25487 bytes)</I> 
</PRE>
<LI>Internet (anonymous FTP)
<P><PRE>      ftp ftp.microsoft.com
      Change to the \SOFTLIB\MSLFILES directory
      Get <A HREF="http://support.microsoft.com/download/support/mslfiles/TERMWAIT.EXE">TERMWAIT.EXE</A> <I>(size: 25487 bytes)</I> 
</PRE><P>
</UL><h2>MORE INFORMATION</h2>
 
<P>
The TERMWAIT sample application calls the NotifyRegister() function to
install a notification callback function before it calls the WinExec()
function to launch the child task. If a callback function is
registered, it is called before any task in the system terminates. The
notification callback function calls the TaskFindHandle() function to
fill a TASKENTRY data structure with information about the terminating
task. When the callback determines that the child task has terminated,
it notifies the TERMWAIT application.
<P>
When it spawns the child task, TERMWAIT sets its bChildIsExecuting
global variable to TRUE. The notification callback resets this
variable to FALSE when the child task is complete. Any code that must
not execute while the child task is running can query the value of the
bChildIsExecuting flag. During the wait, any menu selections that
will cause reentrancy problems should be disabled. Doing so keeps the
user informed about the options that are presently valid. In the
TERMWAIT sample, the AfterChildHasTerminated() function contains code
that is executed only after the child task has completed.
<P>
If an application tracks a number of child tasks, its NotifyRegister()
callback function should process both the NFY_STARTTASK and
NFY_EXITTASK notifications. The callback function uses these
notifications to maintain a list of child task handles. Note that
while no two tasks will have the same handle, it is possible for task
handles to be reused. Consequently, if one task ends and a new task
begins, the new task can use the same task handle.
<P>
Version 3.1 of the Windows SDK is required to build the TERMWAIT
sample. However, the compiled code is compatible with both Windows 3.0
and 3.1. Note that because the TOOLHELP.DLL is not part of the default
installation for Windows 3.0, it must be installed into the Windows
system directory (by default, C:\WINDOWS\SYSTEM) before TERMWAIT will
run. The TOOLHELP.DLL file is provided as a redistributable file with
the Windows 3.1 SDK.
<P>
NOTE: The NotifyRegister callback function must be placed in a separate
source file and this file must be compiled with /GA/GEa. This is because
the NotifyRegisterCallback function is called with the Data Segment (DS) of
the task that installed the callback and the Stack egment of the task which
is notifying the callback. So SS != DS and /GA/GEs cannot be used to
compile this file.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10 synchronize softlib TERMWAIT.EXE<BR>
KBCategory: kbprg kbfile<BR>
KBSubcategory: KrToolHlp<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 15, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
