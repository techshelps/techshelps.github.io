

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Multiple Document Interface Enhancements in Windows 3.1 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q85010 ">
<META NAME="KBModify" CONTENT="1997/07/23">
<META NAME="KBCreate" CONTENT="1992/05/28">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  The Windows multiple document interface (MDI) provides a way to standardize the user interface of applications that can process more than one  document  simultaneously. Applications that use MDI automatically benefit from improvements in the MDI us...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWN,QDL9,QBWO,QBWQ,QAGQ,QBBI,QAJH,QBXQ,QAEV,QBXL,QBVV,QAY5,QAKP,QBXS,QBBS V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Multiple Document Interface Enhancements in Windows 3.1</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 23, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q85010 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
3.10
WINDOWS
kbprg
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   versions 3.1 and 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The Windows multiple document interface (MDI) provides a way to
standardize the user interface of applications that can process more
than one "document" simultaneously. Applications that use MDI
automatically benefit from improvements in the MDI user interface code
within Windows.
<P>
The MDI under Windows version 3.1 introduces a number of significant
enhancements to the features provided by Windows version 3.0, and it
also removes a number of problems. When an application that is
designed to use MDI under Windows 3.0 is run on a system equipped with
Windows 3.1, the application automatically receives the benefit of
many of these enhancements. In addition, an application targeted
specifically for Windows 3.1 can use additional new MDI features.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The Windows 3.1 MDI corrects a number of problems found in the Windows
3.0 MDI. For a list of problems in Windows 3.0 that have been
corrected in Windows 3.1, query on the following words in the Microsoft
Knowledge Base:
<P>
<PRE>   buglist3.00 and fixlist3.10 and mdi

</PRE>The query above provides a list of articles describing the problems
with MDI under Windows 3.0; the list also describes methods to work
around these problems. Even though an application is no longer
required to work around these problems, the methods suggested in each
article are compatible with MDI under Windows 3.1.
<P>
<P><h3>The "Double-Click" Controversy Finally Comes to a Close</h3>
 
<P>
Under Windows 3.0, when the user double-clicks the mouse on the system
menu bitmap of a maximized MDI child window, the child window does not
close. This behavior caused many complaints when MDI was incorporated
into Windows 3.0. A controversy arose regarding this behavior: some
believed it to be a design choice; others saw it as a problem with the
software.
<P>
The design has been changed under Windows 3.1. Using the mouse to
double-click the system menu bitmap of a maximized MDI child window
closes the child window. The new behavior removes an inconsistency
among applications that use the MDI functions built into Windows and
two applications that perform their own MDI processing: Microsoft Word
for Windows and Microsoft Excel for Windows.
<P>
<P><h3>A Difference with Scroll Bars on MDI Children</h3>
 
<P>
Under Windows 3.0, if an application specifies WS_HSCROLL and
WS_VSCROLL in the style field of an MDICREATESTRUCT data structure and
creates an MDI child window, the scroll bars do not appear. Windows
automatically sets the scroll range to zero when it creates the scroll
bars. The application must call the SetScrollRange function to specify
a positive, non-zero, upper bound for the scroll range to make the
scroll bars appear.
<P>
Under Windows 3.1, the application behaves somewhat differently.
Because Windows 3.1 does not reset the scroll range to zero, the
scroll bars appear if the application specifies the WS_HSCROLL and
WS_VSCROLL styles. This change might cause problems for an application
designed under Windows 3.0 that expected the scroll bars to be hidden
until the application explicitly set the scroll range.
<P>
<P><h3>The CS_NOCLOSE Class Style</h3>
 
<P>
Under Windows 3.0, specifying the CS_NOCLOSE window class style does
not change the behavior of MDI child windows. This behavior has been
corrected under Windows 3.1. For example, an application specifies
CS_NOCLOSE in the style field of a WNDCLASS structure and registers a
window class using that structure. If the application creates an MDI
child window using the new class, Windows will disable the Close menu
option on the child window's system menu.
<P>
However, Windows makes other changes to the MDI child's system menu
that are not correct. For more information on this problem, query on
the following words in the Microsoft Knowledge Base:
<P>
<PRE>   CS_NOCLOSE and MDI

</PRE><h3>MDI Child Windows No Longer Required to Use Standard Styles</h3>
 
<P>
One of the most requested enhancements to Windows MDI provided by
Windows 3.1 is the ability to create MDI child windows using any
window style. If an application specifies the MDIS_ALLCHILDSTYLES
style for its MDI client window, Windows creates the MDI child windows
using only the styles specified in the MDICREATESTRUCT data structure.
Otherwise, Windows enforces the default MDI child window styles. For
example, an application that uses the MDIS_ALLCHILDSTYLES style can
create MDI child windows without maximize or minimize buttons.
<P>
<P><h3>Multiple Document Interface Message Changes</h3>
 
<P>
Windows 3.1 includes several enhancements to MDI system messages. The
WM_MDICASCADE and WM_MDITILE messages have been enhanced to accept a
cascade flag. If an application sends either of these messages with
wParam set to MDITILE_SKIPDISABLED, Windows does not change the
position of disabled MDI child windows.
<P>
The WM_MDITILE message accepts two additional flags in wParam:
MDITILE_HORIZONTAL and MDITILE_VERTICAL. These flags specify that the
MDI child windows should be as wide as possible or as tall as
possible, respectively.
<P>
Under Windows 3.0, the WM_MDINEXT message was not accompanied by any
parameters in lParam or wParam. Under Windows 3.1, both parameters are
used. The value of wParam specifies the handle of the MDI child window
receiving the message. The lParam parameter is a Boolean value
specifying whether the next or previous MDI child window is being
activated.
<P>
The WM_MDISETMENU message also has new functionality. If wParam
contains the Boolean value TRUE, the current menus are refreshed. If
wParam contains the Boolean value FALSE, the frame menu and window
menu are replaced with the menus specified in lParam.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10<BR>
KBCategory: kbprg<BR>
KBSubcategory: UsrMdi<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 23, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
