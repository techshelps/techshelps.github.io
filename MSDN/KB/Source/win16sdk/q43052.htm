

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Windows Does Not Support OS/2 Family API Calls </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q43052 ">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1989/04/01">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  Windows and Windows 95 do not support 16-bit Windows-based applications coded with OS/2 Family API (FAPI) calls.  MORE INFORMATION  FAPI works in the following manner:  1. The code contains references to OS/2 FAPI calls (such as DosOpen,    DosRead...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QDL9,QBWO,QBWN,QAGI,QBWQ,QBC9,QBC8,QANO,QAJH,QAIF,QBVV,QAGQ,QBWS,QDIT V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Windows Does Not Support OS/2 Family API Calls</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q43052 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
3.00 3.10
WINDOWS
kbprg
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   versions 3.1 and 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Windows and Windows 95 do not support 16-bit Windows-based applications
coded with OS/2 Family API (FAPI) calls.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
FAPI works in the following manner:

<OL><P><LI>The code contains references to OS/2 FAPI calls (such as DosOpen,
   DosRead, and so on).

<P><LI>When the program is loaded into OS/2 protected mode, the system
   loader dynamically links the FAPI calls to the OS/2 system-services
   DLLs (Dynamic-Link Libraries).

<P><LI>When the program is loaded into real mode (MS-DOS or OS/2
   compatibility box), what actually gets loaded is a small program
   called the "FAPI Loader and Linker." It is this program that loads
   the real code; it dynamically links the FAPI calls to a special
   library of support routines that translate FAPI calls into 80x86
   code and MS-DOS interrupts (INT 21H Function xx).
<P>
</OL>This process is also described on Page 251 of Gordon Letwin's book
titled "Inside OS/2" (Microsoft Press, 1988).
<P>
FAPI works well for programs that need to run in MS-DOS and OS/2
protected mode. The problem is that Windows uses the "New EXE Format"
for programs, bypassing the standard MS-DOS entry point. For example,
if a Windows program is run outside of Windows (in MS-DOS), the
following message appears, and the program terminates:
<P>
<PRE>   This program requires Microsoft Windows

</PRE></OL>MS-DOS is not responsible for this message; the Windows program itself
is responsible. The way the Windows program works is very similar to
OS/2: it uses dual entry points into the .EXE file. In MS-DOS, a short
program that prints the above message runs; however, in Windows, a
true Windows-based application runs using the other entry point in the .EXE
file.
<P>
Therefore, the problem is narrowed down to the following: if the FAPI
Loader and Linker program is run using the standard MS-DOS .EXE file
entry point, and Windows starts an application using a different entry
point, the dynamic linking of the FAPI routines will not occur.
<P>
Therefore, FAPI calls cannot be used in Windows-based applications.
<P>
To avoid this problem, do the following:
<P>
Instead of using low-level MS-DOS calls (INT 21H Function xx) in a
Windows-based application and OS/2 API calls (DosRead, DosOpen, and so
on) in a Presentation Manager (PM) application, use the C run-time I/O
routines for all of these applications.
<P>
This will work because the Microsoft C Compiler and the run-time
libraries supply versions of the libraries that work in both OS/2 and
MS-DOS. By moving C code to PM and to Windows, it will not be
necessary to rewrite it, and the appropriate conversion routines will
be supplied at link time.
<P>
Be sure not to use high-level (stream) I/O routines in C with Windows;
just use the low-level (handles) versions. This topic is discussed in
Charles Petzold's book titled "Programming Windows" (Microsoft Press,
1988), and in other articles in the Microsoft Knowledge Base.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10<BR>
KBCategory: kbprg<BR>
KBSubcategory: GenSDK<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
