

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Supporting PostScript Features in Windows </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q74704 ">
<META NAME="KBModify" CONTENT="1996/08/05">
<META NAME="KBCreate" CONTENT="1991/07/28">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  There are some issues involved when designing an application to provide support for PostScript printers. The application must determine if the PostScript driver is available by using an accurate detection system. If an application generates PostScr...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QADF,QAN8,QACT,QAU9,QDL9,QBWO,QBWN,QAGB,QAH4,QAOX,QAIB,QAGI,QBWQ,QAJH,QAJQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Supporting PostScript Features in Windows</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 5, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q74704 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   versions 3.1 and 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
There are some issues involved when designing an application to
provide support for PostScript printers. The application must
determine if the PostScript driver is available by using an accurate
detection system. If an application generates PostScript directly, the
PASSTHROUGH escape can be used to send the file. This must be done
with care because the application is communicating directly with the
printer.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The first issue is how to determine if a PostScript driver is an
installed printer driver under Windows. An application cannot assume
the PostScript driver is named PSCRIPT.DRV because this forces
PostScript driver vendors to use the same filename. The correct method
is to run code similar to the pseudocode below:
<P>
<PRE>   bFound = FALSE;
   for (each device in [Devices] section of win.ini) {
        /* extract the necessary fields from the ini line */
        szDriverName = driver name extracted from ini line
        szModelName = left side of ini line (the key)
        szPort = port name extracted from ini line.

        hIC = CreateIC(szDriverName, szModelName, szPort, NULL);
        if (hIC) {
                /* see if driver supports GETTECHNOLOGY escape */
                wEscape = GETTECHNOLOGY;
            if (Escape(hIC, QUERYESCSUPPORT, sizeof(WORD), &amp;wEscape, NULL))
{
                          Escape(hIC, GETTECHNOLOGY, 0, NULL,
</PRE>&amp;szTechnology);
<P>
<PRE>                         /* Check that the string starts with PostScript
                          * by doing a case-insensitive search. Allow
                          * for the possibility that the string could be
                          * longer, like "PostScript level 2" or some other
                          * extension.
                          */
                         if (beginning of string is "PostScript")
                                 bFound = TRUE;
                }
                DeleteDC(hIC);
        }

        /* if the driver has been found break out */
        if (bFound)
                break;
   }

   if (bFound) {
        PostScript driver is szDriverName, model is szModelName, port is
        szPort.
   }

</PRE>NOTE: In the event that GETTECHNOLOGY is not supported by some printer
drivers, another method need to be used to determine if the printer is
a PostScript printer. One possible method is to use QUERYESCSUPPORT on
escapes that are only implemented by PostScript printers. For example:
<P>
<PRE>   EPSPRINTING
   SETLINEJOIN
   SETMITERLIMIT
   SET_POLY_MODE

</PRE>Similarly, you can determine a PCL printer by calling QUERYESCSUPPORT
on the following escape:
<P>
<PRE>   DRAWPATTERNRECT

</PRE>The second issue is how to print application-generated PostScript
code. The mechanism from a Windows-based application is through the
PASSTHROUGH escape. The PASSTHROUGH escape is documented in the
"Microsoft Windows Software Development Kit Reference Volume 2,"
Chapter 12. In addition to the documentation, one requirement on the
buffer passed is easy to miss; the first word must contain the length
of the buffer. The contents of the data sent by PASSTHROUGH can alter
the state of the printer.
<P>
To be safe, obey the following rules:

<OL><P><LI>Surround PASSTHROUGH data by save/restore PostScript operators.

<P><LI>Do not embed GDI calls between PASSTHROUGH escapes. For example:
<P>
<P><PRE>      PASSTHROUGH(save)
      Rectangle
      OtherGDIRoutines
      PASSTHROUGH(restore)
</PRE><P>
   Some driver code and software fonts are downloaded to the printer
   under certain conditions. The above operations could cause the
   driver and printer to lose synchronization, and potentially cause
   the job to fail. In general, no assumptions should be made
   concerning the code generated by a given GDI call.

<P><LI>Do not send a command to cause a page ejection.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10<BR>
KBCategory: kbprg<BR>
KBSubcategory: GdiPrn<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 5, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
