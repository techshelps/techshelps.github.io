

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Sample Application Demonstrates Using DDEML </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q82077 ">
<META NAME="KBModify" CONTENT="1996/02/15">
<META NAME="KBCreate" CONTENT="1992/03/25">
<META NAME="Keywords" CONTENT="kbprg kbfile">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  DMLDEMO is a file in the Microsoft Software Library that demonstrates how two applications for the Windows environment can communicate using the Dynamic Data Exchange Management Libraries (DDEML). DMLDEMO demonstrates the following types of transac...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGI,QARL,QAY2,QAGU,QAA7,QAKJ,QAJH,QA01,QBXJ,QAY5,QAIJ,QBUG,QBUF,QDL9,QBWO V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Sample Application Demonstrates Using DDEML</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 15, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q82077 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   versions 3.1 and 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
DMLDEMO is a file in the Microsoft Software Library that demonstrates how
two applications for the Windows environment can communicate using the
Dynamic Data Exchange Management Libraries (DDEML). DMLDEMO
demonstrates the following types of transactions:

<UL><LI>Connect
<LI>Request
<LI>Asynchronous Request
<LI>Hot Advise Loop
<LI>Warm Advise Loop
<P>
</UL>Download DMLDEMO.EXE from the Microsoft Software Library (MSL) on the
following services:

<UL><LI>Microsoft Download Service (MSDL)
<P><PRE>      Dial (206) 936-6735 to connect to MSDL
      Download <A HREF="http://support.microsoft.com/download/support/mslfiles/DMLDEMO.EXE">DMLDEMO.EXE</A> <I>(size: 76247 bytes)</I> 
</PRE>
<LI>Internet (anonymous FTP)
<P><PRE>      ftp ftp.microsoft.com
      Change to the \SOFTLIB\MSLFILES directory
      Get <A HREF="http://support.microsoft.com/download/support/mslfiles/DMLDEMO.EXE">DMLDEMO.EXE</A> <I>(size: 76247 bytes)</I> 
</PRE><P>
</UL>NOTE: The DMLDEMO file contains code for a client application and for
a server application in separate directories. To preserve the
directory structure, be sure to specify the -d option when extracting the
files. For example,
<P>
<PRE>   dmldemo -d

</PRE><h2>MORE INFORMATION</h2>
 
<P>
The remainder of this article details the five transaction types.
<P>
<P><h3>Connect Transaction</h3>
 
<P>
The client calls the DdeConnect function to connect to the server and
initiate a conversation. In the DMLDEMO application, the DdeConnect
function starts a general conversation, which deals with text and
bitmaps, and a SYSTEM conversation, which supports the system topic.
<P>
<P><h3>Request Transaction</h3>
 
<P>
When the client requires information from the server, the client calls
the DdeClientTransaction function, specifying XTYP_REQUEST as the
value for the uType parameter. The DMLDEMO client uses a request
transaction to retrieve the number and type of bitmaps to display. The
request transaction is used in both synchronous and asynchronous
contexts.
<P>
<P><h3>Asynchronous Transaction</h3>
 
<P>
The client starts an asynchronous transaction with the server to
request information that may not be ready at the time the client makes
the request.
<P>
In the DMLDEMO application, the client starts an asynchronous
transaction when the user chooses Asynchronous Transaction from the
Transactions menu. When the server receives the request (as an
XTYP_REQUEST transaction), it displays a dialog box that asks the user
how many copies of the window bitmap the client should display. After
the user dismisses the dialog box, the server returns a data handle
containing the number the user selected from its callback function.
When the server has completed the transaction, the DDEML sends an
XTYP_XACT_COMPLETE to the client application's callback function. The
client then displays the requested number of bitmaps.
<P>
In this case, an asynchronous transaction is required to prevent the
transaction from timing out before the user has a chance to close the
dialog box.
<P>
<P><h3>Hot Advise Loop</h3>
 
<P>
When a hot advise loop is established between a client and a server,
the server notifies the client (through an XTYP_ADVDATA transaction)
each time a certain piece of data changes. The notification includes a
handle to the changed data. When a hot advise loop is active in the
DMLDEMO application, the server notifies the client that the bitmap
has changed (this notification includes a handle to the changed
bitmap) every time the server's bitmap is changed. (To change the
bitmap, choose Change Bitmap from the server application's menu.) The
client application then displays the bitmap.
<P>
<P><h3>Warm Advise Loop</h3>
 
<P>
When a warm advise loop is established between a client and a server,
the server notifies the client that the specified data has changed,
but the server does not send the changed data to the client. In the
DMLDEMO application, when the client receives a notification from the
server, the client brings up a message box asking the user if the
client's window should be updated with the new bitmap from the server.
If the user chooses the "Yes" button, the client requests the changed
bitmap from the server using the DdeClientTransaction function,
specifying XTYP_REQUEST as the value of the uType parameter.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10 softlib DMLDEMO.ZIP<BR>
KBCategory: kbprg kbfile<BR>
KBSubcategory: UsrDde<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 15, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
