

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Determining Free Memory in Windows Enhanced Mode </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q74941 ">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1991/08/05">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  When an application requires memory for a particular purpose, it should request that amount of memory from the system. If a given request fails, the application can present an error message to the user, or make a smaller request.  In the MS-DOS (no...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBW6,QDL9,QBWN,QBWO,QBWQ,QAGI,QADK,QAJH,QDJD,QA59,QA5W,QAH4,QAE5,QBWG,QAGQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Determining Free Memory in Windows Enhanced Mode</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q74941 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
3.00 3.10
WINDOWS
kbprg
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   versions 3.1 and 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
When an application requires memory for a particular purpose, it
should request that amount of memory from the system. If a given
request fails, the application can present an error message to the
user, or make a smaller request.
<P>
In the MS-DOS (non-Windows) environment, it is customary for an
application to request that the operating system determine how much
memory is free and report that information. The application can then
allocate that amount of memory and scale its capacity limits
accordingly. This is acceptable in an environment where only one
application is running at any given time, which has complete access to
all system resources available.
<P>
However, in the Windows cooperative multitasking environment,
applications must share system resources with other applications
running simultaneously.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
In enhanced-mode Windows, determining the amount of free system memory
is a very complex problem because Windows uses virtual memory. There
are also a number of different types of memory that are used for
specific purposes. The following list enumerates some of these memory
options:
<P>
<PRE>   DDE share
   Discardable
   Fixed
   Movable
   Page locked
   Pageable
   Provided by GlobalDOSAlloc

</PRE>The presence of any of these attributes will affect the amount of free
memory.
<P>
It has been suggested that to attempt an allocation and then properly
handle failure by potentially trying another allocation is too slow.
However, it is doubtful that any method of calculating available
memory will be any faster (if such a calculation was even possible).
An overriding complication is that any memory use in another
application or in a virtual machine will invalidate any computed
value.
<P>
An excellent discussion about dealing with varying amounts of system
memory is in Chapter 18 of "Peter Norton's Windows 3 Power Programming
Techniques" (Bantam Books, 1990) beginning on page 661. Given the
caveats above, it is possible to obtain a very rough estimate of free
system memory. Two routines report this information: the GlobalCompact()
API and the MS-DOS Protected Mode Interface (DPMI) function 0500h (get free
memory information).
<P>
There are two pools of memory in enhanced-mode Windows:

<OL><P><LI>The DPMI memory pool managed by the WIN386 paging memory manager.
   Use DPMI function 0500h to determine the size of this pool.

<P><LI>The global heap memory pool(s) managed by KRNL386.EXE (the Windows
   enhanced-mode Kernel. Use the GlobalCompact(-1) function to
   determine the size of this pool.
<P>
</OL>A rough estimate of available memory can be computed by placing the
following code fragment into an application:
<P>
<PRE>  FreeMemEst = max(GlobalCompact(-1),
             (DPMI_Call_AX_0500h-&gt;MaxUnlockedPageAlloc - 1L) * 4096L);
  FreeMemEst = min(FreeMemEst, (16L * 1024L * 1024L) - (64L * 1024L));

</PRE></OL>The first line of code determines available memory according to both memory
managers. The second line accounts for the limitation imposed by the
GlobalAlloc() API, which sets the maximum size of a segment at (16
megabytes minus 64 kilobytes). The GlobalCompact() API does require a lot
of processing time, especially in standard (286 protect) mode.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10<BR>
KBCategory: kbprg<BR>
KBSubcategory: KrMm<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
