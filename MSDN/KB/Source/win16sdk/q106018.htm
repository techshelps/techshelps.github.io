

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: SetPixel() Doesn't Work Properly on a PS Printer </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q106018">
<META NAME="KBModify" CONTENT="1995/01/05">
<META NAME="KBCreate" CONTENT="1993/10/28">
<META NAME="Keywords" CONTENT="kbprg kbbuglist">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  In a Windows 3.1 printing application, calling the SetPixel() command on a device context created for the Windows PostScript printer driver version 3.56 or earlier causes the pixel that is drawn to be larger than expected if a line with a thickness...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QANY,QAGI,QAI4,QAG9,QBXT,QA5V,QAIB,QDL9,QBWO,QBWN,QBHF,QAH4,QADF,QAXQ,QBWQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: SetPixel() Doesn't Work Properly on a PS Printer</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 5, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q106018</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   version 3.1
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
In a Windows 3.1 printing application, calling the SetPixel() command on a
device context created for the Windows PostScript printer driver version
3.56 or earlier causes the pixel that is drawn to be larger than expected
if a line with a thickness greater than 1 was drawn previously.
<P>
<P><h2>CAUSE</h2>
 
<P>
The PostScript driver's implementation of SetPixel() draws a circle with
the thickness set to the thickness of the last line drawn with the LineTo()
command if the thickness of the pen used is greater than 1.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem with the Windows PostScript
printer driver shipped with Windows 3.1. This problem has been corrected in
the PostScript driver for Windows NT.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Instead of using the SetPixel() command, use the PatBlt() command to draw
the pixel. This is needed only if a pen of width greater than 1 was used to
draw lines with the Moveto() and LineTo() commands.
<P>
For example, if you were calling SetPixel() using the following line of
code to draw a black pixel at coordinates (10,10)
<P>
<PRE>   SetPixel(hPrnDC, 10, 10, RGB(0,0,0));

</PRE>instead of the above line of code, you could use PatBlt() in the following
way:
<P>
<PRE>   PatBlt(hPrnDC, 10, 10, 1, 1, BLACKNESS);

</PRE><h2>MORE INFORMATION</h2>
 
<P>
Once a pen of thickness greater than 1 is created and selected into the
printer's device context and a LineTo() command is called, every call to
SetPixel() will result in a circle the width of the pen. If a pen of width
0 (zero) or 1 is created and used by the LineTo() command, the lines drawn
will be the correct thickness, but the SetPixel() command will still draw
with the thickness of the most recently used pen with a width greater than
1.
<P>
For example, the following code will draw the first two pixels correctly.
After the pen of width 50 is created and selected into the printer's device
context, the first call to SetPixel works correctly because LineTo() has
not been called yet. The call to SetPixel after the line is drawn results
in a circle the thickness of the line. After that, a pen of thickness 1 is
created and selected into the device context. The line drawn afterwards is
drawn correctly, but both calls to SetPixel() result in thick circles.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>      if (StartDoc(hPrnDC,&amp;di) &gt; 0)
      {
         HPEN hPen, hPen2, hOldPen;

         StartPage(hPrnDC);
         hPen = CreatePen(PS_SOLID,1,RGB(0,0,0));
         hOldPen = SelectObject(hPrnDC,hPen);
         SetPixel(hPrnDC,100,10,RGB(0,0,0));
         MoveTo(hPrnDC,220,10);
         LineTo(hPrnDC,700,10);
         SetPixel(hPrnDC,800,10,RGB(0,0,0));

         hPen2 = CreatePen(PS_SOLID,50,RGB(0,0,0));
         SelectObject(hPrnDC,hPen2);
         SetPixel(hPrnDC,100,110,RGB(0,0,0));
         MoveTo(hPrnDC,220,110);
         LineTo(hPrnDC,700,110);
         SetPixel(hPrnDC,800,110,RGB(0,0,0));

         SelectObject(hPrnDC,hPen);
         SetPixel(hPrnDC,100,210,RGB(0,0,0));
         MoveTo(hPrnDC,220,210);
         LineTo(hPrnDC,700,210);
         SetPixel(hPrnDC,800,210,RGB(0,0,0));

         DeleteObject(hPen2);
         DeleteObject(SelectObject(hPrnDC,hOldPen));
         EndPage(hPrnDC);
         EndDoc(hPrnDC);
      }
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: buglist3.10 3.10<BR>
KBCategory: kbprg kbbuglist<BR>
KBSubcategory: GdiPrn<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 5, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
