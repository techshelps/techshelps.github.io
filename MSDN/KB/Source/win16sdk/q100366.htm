

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SAMPLE: lstrcmpi, Accented Chars, and Sort Order in Windows </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q100366">
<META NAME="KBModify" CONTENT="1998/01/15">
<META NAME="KBCreate" CONTENT="1993/06/20">
<META NAME="Keywords" CONTENT="kbIntlDev kbfile kbprg">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  This article provides supplementary information to Section 18.2.2.1  Comparing and Sorting Strings  in the Windows version 3.1 Software Development Kit  Programmer's Reference, Volume 1: Overview  manual and the Windows Help International Overview ...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB6,QBPM,QATX,QAMA,QAJQ,QBVR,QAWP,QDIU,QBDZ,QANY,QDL9,QBWO,QBWN,QAWN,QAG7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>SAMPLE: lstrcmpi, Accented Chars, and Sort Order in Windows</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 15, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q100366</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
3.00 3.10
WINDOWS
kbprg kbfile
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   versions 3.0 and 3.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article provides supplementary information to Section 18.2.2.1
"Comparing and Sorting Strings" in the Windows version 3.1 Software
Development Kit "Programmer's Reference, Volume 1: Overview" manual and the
Windows Help International Overview section. Specifically, this article
provides information about the sort order used by the Windows lstrcmp and
lstrcmpi functions, the location of accented characters in the sort, and
how primary and secondary values, or weights, are important when sorting a
string using these functions. This includes the different behavior of these
functions when a language driver is installed compared to when Windows's
internal sort routine (English/American) is used.
<P>
List boxes that include the LBS_SORT style use lstrcmpi internally to
perform the sort. Consequently, the information in this article applies to
these list boxes also.
<P>
ALPHSORT is a sample that shows the results of these sort routines, and
contains a dialog box with two list boxes. One list box contains the
characters 32-255 and the option to display the characters in ANSI or
sorted order; the other list box includes the LBS_SORT style and contains
various strings. Changing the sort routine in use through the International
Control Panel application illustrates the effects of the different language
drivers and Windows's internal sort routine.
<P>
Download ALPHSORT.EXE, a self-extracting file, from the Microsoft Software
Library (MSL) on the following services:

<UL><LI>Microsoft Download Service (MSDL)
<P><PRE>      Dial (206) 936-6735 to connect to MSDL
      Download <A HREF="http://support.microsoft.com/download/support/mslfiles/ALPHSORT.EXE">ALPHSORT.EXE</A> <I>(size: 27846 bytes)</I> 
</PRE>
<LI>Internet (anonymous FTP)
<P><PRE>      ftp ftp.microsoft.com
      Change to the \SOFTLIB\MSLFILES directory
      Get <A HREF="http://support.microsoft.com/download/support/mslfiles/ALPHSORT.EXE">ALPHSORT.EXE</A> <I>(size: 27846 bytes)</I> 
</PRE><P>
</UL><h2>MORE INFORMATION</h2>
 
<P>
The sort order used by lstrcmp and lstrcmpi is:

<OL><P><LI>Nonalphanumeric characters (in ASCII/ANSI order)
</OL>2. Numeric characters
3. Alphabetic characters
<P>
For performance reasons, the internal sort routine treats accented
characters as nonalphanumeric. Therefore, when the internal routine is
used, accented characters appear towards the beginning of the sort between
punctuation and numbers. In contrast, when a language driver is used,
accented characters appear near their unaccented equivalents because the
language drivers sort accented characters as alphabetic characters.
<P>
The following illustrate the differences in character order ("..."
signifies omitted characters):
<P>
ANSI Order:
<P>
<PRE>   !"#...0...9:;&lt;...ABC...XYZ[\]...abc...xyz{|}...accented characters

</PRE></OL>Internal (English/American) Sort Routine Order:
<P>
<PRE>   !"#...:;&lt;...[\]...{|}... accented characters 0...9AaBbCc...XxYyZz

</PRE>Language Driver Order:
<P>
<PRE>   ...!"#...:;&lt;...[\]...{|}...0...9A accented characters aBbCc...XxYyZz...

</PRE>Note that the accented characters are intermixed with their alphabetic
counterparts here.
<P>
Primary and secondary weights of characters also affect the sort order when
a language module is installed. In this case, sorting is done by primary
weight for the entire length of the string, then by length, and lastly by
secondary weight if the primary weights of all the characters and the
lengths of the strings are equal. The secondary (diacritic) weights are
important only when there is a tie in the entire string. The internal
(English/American) sort routine does not sort extended characters; as
mentioned above, they are sorted as punctuation rather than alphabetic
characters. Therefore, the internal routines produce completely different
results than the language routines in some cases.
<P>
Character weights are important with case-sensitive sorting also. For
example, using lstrcmp will produce: A &lt; a &lt; B &lt; b; it will also produce:
Aaa &lt; aaa &lt; Aab. These examples use proper dictionary sort order, but the
second example is not necessarily obvious because if A &lt; a, then it seems
Aab &lt; aaa should also be true. In that case, it is said that A and a
"collide" (that is, their primary weights are the same) and a delayed
comparison must be performed if the remainders of the strings are equal.
The strings continue to be compared character by character. Because a &lt; b,
then aaa &lt; Aab and the comparison is complete. If the strings were equal
all the way through (such as Aaa and aaa) then A and a would collide once
again. The rest of the strings would be equal, and then the secondary
weights of A and a would be checked to determine that Aaa &lt; aaa.
<P>
<P><h2>EXAMPLES WHEN A LANGUAGE DRIVER IS INSTALLED</h2>
 
<P>
Note: Special notation is used below to represent accented characters
due to limitations in the distribution media for this article. For
example &lt;u umlaut&gt; is used to represent the letter "u", which has an
umlaut over it. Likewise, &lt;a tilde&gt; represents the letter "a" accented
with a tilde.
<P>
<P><h3>Nonaccented Characters</h3>
 
<P>
The sort works on a character-by-character comparison, checking
primary weights in a string. As soon as the primary (alphabetic)
weights show one string greater than the other, the comparison stops.
Therefore, sorted lists resemble the following:
<P>
<PRE>   a
   aa
   abba
   ac
   add
   b
   ba
   baa

</PRE><h3>Accented Characters</h3>
 
<P>
The secondary (diacritic) weights are important only when there is a tie in
the string. For example, in the following sorted list, the characters in
the first two strings have identical primary sort weights ("s", "a", "m",
"e") and the strings are the same length. Because of the tie in primary
weights and string lengths, the secondary weights are then compared. The
first difference in secondary weight ("a" versus &lt;a tilde&gt;) breaks the tie.
Secondary weights are also a factor when comparing strings 4 and 5 below:

<OL><P><LI>same
</OL>2. s&lt;a tilde&gt;me
3. sandy
4. schon
5. sch&lt;o umlaut&gt;n
6. school
<P>
It is important to apply the primary weights to the whole string first, and
only use the secondary weights in a tie. The primary weights must also
carry more importance than the secondary weights as well. Otherwise, an
incorrect sort would result (such as schon less than school less than sch&lt;o
umlaut&gt;n). This type of weighting creates a sort that makes a distinction
between "unique," hard-coded letters of a language and mere variants of a
letter (which are only distinguished by diacritics).
<P>
Here is a sorted list using the English (International) driver:
<P>
<PRE>   a
   &lt;a grave&gt;
   apple
   &lt;a grave&gt;pple
   apples
   &lt;a grave&gt;pples
   lu
   l&lt;u umlaut&gt;
   l&lt;u umlaut&gt;b
   lum

</PRE></OL>Here is the same list, using the internal [English (American)]
routine:
<P>
<PRE>   &lt;a grave&gt;
   &lt;a grave&gt;pple
   &lt;a grave&gt;pples
   a
   apple
   apples
   l&lt;u umlaut&gt;
   l&lt;u umlaut&gt;b
   lu
   lum

</PRE><h2>REFERENCE</h2>
 
<P>
For more information on the international sort, see the following:
<P>
<PRE>   Canadian Standards Association Z243.4.1-1990; "Canadian Alphabetic
   Ordering Standard for Character Sets of CSA Z243.4 Standard," Alain
   LaBont&lt;e acute&gt;:

   DIN Standard 5007, "Orden von Schriftzeichenfolgen: ABC-Regeln,"
   April 1991

   IBM Document GG24-3516, "Keys to Sort and Search for Culturally
   Expected Results," Denis Garneau

   "R&lt;e acute&gt;gles du classement alphab&lt;e acute&gt;tique en langue
   fran&lt;c cedilla&gt;aise...", Alain LaBont&lt;e acute&gt;
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10 softlib ALPHSORT.EXE<BR>
KBCategory: kbprg kbfile<BR>
KBSubcategory: KBIntlDev<BR>
Keywords          : kbIntlDev kbfile kbprg<BR>
Version           : 3.00 3.10<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 15, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
