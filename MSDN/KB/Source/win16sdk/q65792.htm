

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SAMPLE: Right and Decimal-Alignment in Owner-Draw Controls </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q65792 ">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1990/09/21">
<META NAME="Keywords" CONTENT="kb16bitonly UsrCtl kbcode kbfile kbprg">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  In the Microsoft Windows graphical environment, the primary feature of an owner-draw control is the ability to customize the manner that a control displays information and to extend its capabilities. An example of a customized presentation is to de...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVR,QBK0,QACI,QATX,QAKC,QAB5,QAEB,QDL9,QBWO,QBWN,QAE8,QAJP,QBE7,QBE6,QAH4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>SAMPLE: Right and Decimal-Alignment in Owner-Draw Controls</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q65792 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
3.00 3.10
WINDOWS
kbprg kbfile kbcode
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   versions 3.0 and 3.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In the Microsoft Windows graphical environment, the primary feature of an
owner-draw control is the ability to customize the manner that a control
displays information and to extend its capabilities. An example of a
customized presentation is to decimal align a column of numbers in an owner-
draw list box. This article describes how to perform this alignment, and
then describes some example code in the Microsoft Software Library.
<P>
ODLIST2 is a file in the Microsoft Software Library that demonstrates this
method to right align a substring of digits. The ODLIST2 application
implements a horizontally scrollable list box that contains a small
database of account records. The titles of the "Account", "Balance",
and "Name" fields scroll with their associated column data because the
application subclasses the main database list box to process
WM_HSCROLL messages. When a scroll message is received by the data
list box, it sends a corresponding WM_HSCROLL message to the title
list box.
<P>
Download ODLIST2.EXE, a self-extracting file, from the Microsoft Software
Library (MSL) on the following services:

<UL><LI>Microsoft Download Service (MSDL)
<P><PRE>      Dial (206) 936-6735 to connect to MSDL
      Download <A HREF="http://support.microsoft.com/download/support/mslfiles/ODLIST2.EXE">ODLIST2.EXE</A> <I>(size: 33504 bytes)</I> 
</PRE>
<LI>Internet (anonymous FTP)
<P><PRE>      ftp ftp.microsoft.com
      Change to the \SOFTLIB\MSLFILES directory
      Get <A HREF="http://support.microsoft.com/download/support/mslfiles/ODLIST2.EXE">ODLIST2.EXE</A> <I>(size: 33504 bytes)</I> 
</PRE><P>
</UL><h2>MORE INFORMATION</h2>
 
<P>
To right align a string (of digits or of text) at a particular horizontal
position "X," the application must compute the length of the string. Then,
move that distance to the left of "X" before drawing the string. The width
of a string is contained in the low-order word of the value returned by the
GetTextExtent() or GetTabbedTextExtent() functions.
<P>
For example, if the following are true
<P>
<PRE>   X         is the horizontal position for the right edge of the
                text
   hDC       is a handle to a device context
   szDigits  is an array of characters

</PRE>the right-aligned text would be drawn starting at the following
position:
<P>
<PRE>   X - LOWORD(GetTextExtent(hDC, szDigits, lstrlen(szDigits))

</PRE>Because digit characters have equal widths, aligning the right side of the
digit strings in an owner-draw list box to the same horizontal position
keeps all the columns lined up. If the decimal point is located
consistently, as for dollars and cents, the numbers are easily aligned. For
example:
<P>
<PRE>     123.45
    6543.12

</PRE>One technique to right align substrings is to use multiple calls to
the TextOut function when drawing each list box item. Calculate the
origin of each substring as follows:
<P>
<PRE>   (the desired right position) - (the width of the substring)

</PRE>Another way to right align a string or substring of digits is to use
tab stops. A tab can be defined so that its position, plus the width
of the digit string, is equal to the desired right position "X."
<P>
The code sample below implements a tab stop before a digit substring.
To use this code, place it into the code that processes the
WM_DRAWITEM message for an owner-draw list box with the
LBS_USETABSTOPS style:
<P>
<PRE>   nWidth     is the width (x-extent) of the digit substring.
   lpdis      is the far pointer to a DRAWITEMSTRUCT obtained as the
                 lParam in a WM_DRAWITEM message.
   nTabStops  is an integer array of tab stops. If the current mapping
                 mode is MM_TEXT, the values in the array are in
                 pixels.

   // Get the x extent of digit substring
   nWidth = LOWORD(GetTextExtent(lpdis-&gt;hDC, szDigits,
                lstrlen(szDigits)));

   // Set first tab stop to align the right side of the digit
   // substring with the right border of the list box
   nTabStops[0] = X - nWidth;

   // Draw digit string at tabbed position
   TabbedTextOut(lpdis-&gt;hDC, lpdis-&gt;rcItem.left, lpdis-&gt;rcItem.top,
        (LPSTR)szDigits, lstrlen(szDigits), 1, (LPINT)nTabStops);
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10 listbox softlib ODLIST2.EXE<BR>
KBCategory: kbprg kbfile kbcode<BR>
KBSubcategory: UsrCtl<BR>
Keywords            : kb16bitonly UsrCtl kbcode kbfile kbprg<BR>
Version             : 3.00 3.10<BR>
Platform            : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
