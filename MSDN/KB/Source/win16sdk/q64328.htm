

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SAMPLE: Owner-Draw: 3-D Push Button Made from Bitmaps with Text </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q64328 ">
<META NAME="KBModify" CONTENT="1996/02/15">
<META NAME="KBCreate" CONTENT="1990/07/31">
<META NAME="Keywords" CONTENT="kbprg kbfile">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  An owner-draw button can be defined and drawn to provide any desired appearance, even to mimic the three-dimensional push buttons of Windows version 3.0. With an owner-draw button, the application can control the button face color, unlike a standar...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA5D,QAGI,QAJD,QAIB,QDL9,QBWO,QBWN,QANS,QAG9,QADO,QAJQ,QBWQ,QAMN,QAH1,QATX V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>SAMPLE: Owner-Draw: 3-D Push Button Made from Bitmaps with Text</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 15, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q64328 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   versions 3.0 and 3.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
An owner-draw button can be defined and drawn to provide any desired
appearance, even to mimic the three-dimensional push buttons of Windows
version 3.0. With an owner-draw button, the application can control the
button face color, unlike a standard push button, which always has a gray
face.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
ODBUTTON is a file in the Microsoft Software Library that contains an
example of an owner-draw button. The button uses two 64-by-64-bit bitmaps.
The first bitmap represents the default button state. In this state, the
button has a light gray face, a light left and upper border, and the
button's text is centered in the bitmap. The second bitmap represents the
pressed button state. In this state, the button has a solid, dark gray
face, and the button's text is shifted to the right and down two pixels.
<P>
<P>
Download ODBUTTON.EXE, a self-extracting file, from the Microsoft Software
Library (MSL) on the following services:

<UL><LI>Microsoft Download Service (MSDL)
<P><PRE>      Dial (206) 936-6735 to connect to MSDL
      Download <A HREF="http://support.microsoft.com/download/support/mslfiles/ODBUTTON.EXE">ODBUTTON.EXE</A> <I>(size: 25257 bytes)</I> 
</PRE>
<LI>Internet (anonymous FTP)
<P><PRE>      ftp ftp.microsoft.com
      Change to the \SOFTLIB\MSLFILES directory
      Get <A HREF="http://support.microsoft.com/download/support/mslfiles/ODBUTTON.EXE">ODBUTTON.EXE</A> <I>(size: 25257 bytes)</I> 
</PRE><P>
</UL>The ODBUTTON sample source code can be used as a template for creating
other applications. The main task involves creating appropriate
bitmaps.
<P>
Under Windows 2.x, an application can change the color of the button face
by processing WM_CTLCOLOR messages. This functionality is not available in
Windows 3.0. However, the more powerful owner-draw feature can be used to
achieve the same effect.
<P>
Like a Windows 3.0 standard push button, this sample owner-draw button
indicates that it has the focus by drawing a dashed, black rectangular
border around the button text. This is accomplished by using the new
Windows 3.0 function, DrawFocusRect(). Like the text of the button, the
focus rectangle must also be shifted right and down two pixels when the
button is pressed.
<P>
Bitmaps are created in a fixed size, in pixels, regardless of the display
resolution used. An application can determine which display is in use by
reading the SYSTEM.INI file. Two alternatives are available to create
buttons that are an appropriate size on different displays, as follows:

<OL><P><LI>Create different pairs of default/pressed bitmaps for each display
   resolution the application is targeted (for example, Hercules
   monochrome, CGA, EGA, VGA, super VGA, and 8514).

<P><LI>Create separate bitmaps for the borders of the button and for the
   button faces. During the initialization of the application, make
   four calls to StretchBlt(). The first call should modify the left
   and right borders vertically. The second call should change the top
   and bottom borders horizontally. The third and fourth calls should
   modify each button face bitmap both horizontally and vertically.
   Doing separate calls eliminates distortion to the border widths as
   a display-specific bitmap is created.
<P>
</OL>Apart from the information discussed above, owner-draw buttons are handled
like other owner-draw controls. However, Windows does not send the
application a WM_MEASUREITEM message to define the dimensions of the button
control dynamically. The dimensions of the owner-draw button are specified
in a dialog box template or CreateWindow() call, similar to the dimensions
of nonowner-draw buttons.
<P>
Like other owner-draw controls, the application draws the owner-draw
button in response to a WM_DRAWITEM message. Drawing should take into
account the selection and focus states of the control, as well as the
normal state without either selection or focus.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10 softlib ODBUTTON.EXE<BR>
KBCategory: kbprg kbfile<BR>
KBSubcategory: UsrCtl<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 15, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
