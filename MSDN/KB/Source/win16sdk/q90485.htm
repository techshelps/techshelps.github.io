

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SAMPLE: Passing Ink Between Hedit Controls </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q90485 ">
<META NAME="KBModify" CONTENT="1996/02/15">
<META NAME="KBCreate" CONTENT="1992/10/15">
<META NAME="Keywords" CONTENT="kbprg kbfile">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  To pass ink between hedit controls, an application must capture the ink when the hedit control's parent window receives the HN_ENDREC notification message. Then the application does either of the following:   - Sends a WM_HEDITCTL message with wPar...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH6,QA7O,QAB5,QAEV,QAMN,QAYV,QAOE,QAYC,QBXS,QAH7,QAGI,QAD7,QDL9,QBWO,QBWN V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>SAMPLE: Passing Ink Between Hedit Controls</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 15, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q90485 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows for Pen Computing version 1.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
To pass ink between hedit controls, an application must capture the ink
when the hedit control's parent window receives the HN_ENDREC notification
message. Then the application does either of the following:

<UL><LI>Sends a WM_HEDITCTL message with wParam set to HE_SETINKMODE to begin
   collecting ink, and sends a WM_HEDITCTL message with wParam set to
   HE_STOPINKMODE to stop collecting ink.

<LI>Specifies RCO_SAVEHPENDATA in the lRcOptions field of the RC data
   structure.
<P>
</UL>INK2H is a file in the Microsoft Software Library that demonstrates
capturing ink and using the WM_HEDITCTL message.
<P>
Download INK2H.EXE from the Microsoft Software Library (MSL) on the
following services:

<UL><LI>Microsoft Download Service (MSDL)
<P><PRE>      Dial (206) 936-6735 to connect to MSDL
      Download <A HREF="http://support.microsoft.com/download/support/mslfiles/INK2H.EXE">INK2H.EXE</A> <I>(size: 21487 bytes)</I> 
</PRE>
<LI>Internet (anonymous FTP)
<P><PRE>      ftp ftp.microsoft.com
      Change to the \SOFTLIB\MSLFILES directory
      Get <A HREF="http://support.microsoft.com/download/support/mslfiles/INK2H.EXE">INK2H.EXE</A> <I>(size: 21487 bytes)</I> 
</PRE><P>
</UL><h2>MORE INFORMATION</h2>
 
<P>
The recognizer returns ink in the hpendata field of the RCRESULT structure.
Passing ink between hedit controls is more difficult than using a normal
device context (DC). Perform the following four steps to save the ink:

<OL><P><LI>Perform either of the following:
<P>
   a. Specify RCO_SAVEHPENDATA in the lRcOptions field of the RC data
<P><PRE>      structure.
</PRE><P>
   b. Send the WM_HEDITCTL message to the hedit control with HE_SETINKMODE
<P><PRE>      in wParam to begin collecting ink. Send the WM_HEDITCTL message to
      the hedit control with HE_STOPINKMODE to stop collecting ink.
</PRE>
<P><LI>When the application receives an HN_ENDREC notification for the source
   hedit control, retrieve the handle to the memory containing the ink.
   (When recognition is complete, the recognizer sends a WM_COMMAND message
   with the HN_ENDREC notification as the high-order word of lParam and the
   ID of the hedit control in wParam.)

<P><LI>Use the SendMessage function to send a WM_HEDITCTL message with
   HE_GETINKHANDLE as the value for wParam. If the call is successful, the
   low-order word of the returned value contains a handle to the memory
   containing the ink.

<P><LI>Depending on the choice made at step 1 above, perform the corresponding
   step:
<P>
   a. If the RCO_SAVEHPENDATA flag was set in step 1, Windows will not
<P><PRE>      delete the data after all corresponding WM_RCRESULT messages have
      been sent. Therefore, call the DestroyPenData function to delete the
      pen data when an HN_RCRESULT notification is received.
</PRE><P>
   b. If HE_SETINKMODE is used, call the DuplicatePenData function to save
<P><PRE>      the ink into a block of memory allocated by the GlobalAlloc function.
</PRE><P>
</OL>The procedure to place the collected ink into another hedit control is very
similar. Send a WM_HEDITCTL message with wParam set to HE_SETINKMODE and
the low-order of lParam set to the handle to the memory block containing
the ink. Then send a WM_HEDITCTL message with wParam set to HE_STOPINKMODE.
<P>
The INK2H sample application demonstrates copying ink between hedit
controls using the HE_SETINKMODE and HE_STOPINKMODE values with a
WM_HEDITCTL message.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 softlib INK2H.EXE<BR>
KBCategory: kbprg kbfile<BR>
KBSubcategory: WpenInk<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 15, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
