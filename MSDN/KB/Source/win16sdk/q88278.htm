

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating Import Libraries with the __export Modifier </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q88278 ">
<META NAME="KBModify" CONTENT="1997/07/23">
<META NAME="KBCreate" CONTENT="1992/08/20">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  The __export function modifier, widely advertised in version 7.0 of the Microsoft C/C++ Optimizing Compiler, can be used in conjunction with the /GD option switch to export a function from a dynamic-link library (DLL) for the Microsoft Windows oper...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA3P,QAY5,QBV8,QAB9,QBHQ,QDL9,QBWO,QBWN,QBFY,QAHE,QAUJ,QAEQ,QBWQ,QACI,QDNN V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Creating Import Libraries with the __export Modifier</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 23, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q88278 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
3.10
WINDOWS
kbprg
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows version 3.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The __export function modifier, widely advertised in version 7.0 of
the Microsoft C/C++ Optimizing Compiler, can be used in conjunction
with the /GD option switch to export a function from a dynamic-link
library (DLL) for the Microsoft Windows operating system without
listing the name of the function in the EXPORTS section of the DLL's
module definition (.DEF) file.
<P>
To create an import library for a DLL that uses this technique, the
filename of the DLL must be listed as a parameter to the IMPLIB
function. Otherwise, IMPLIB does not place the functions marked with
__export into the import library.
<P>
For more information on exporting functions, query on the following
words in the Microsoft Knowledge Base:
<P>
<PRE>   __export and keyword and def and prolog

</PRE><h2>MORE INFORMATION</h2>
 
<P>
The first argument to the IMPLIB command is the name of the import
library to create. The second parameter is the name of the .DEF file,
the name of the .DLL file, or both. The syntax listed in the IMPLIB
online help file is as follows:
<P>
<PRE>   IMPLIB [options] implibname {dllfile... | deffile...}

</PRE>If a .DEF file is listed as the second parameter, IMPLIB places all
functions listed in the EXPORTS section into the import library. This
is the traditional method of creating a DLL import library and it
applies to versions of the Microsoft C Compiler prior to version 7.0.
<P>
If a DLL file is listed as the second parameter, IMPLIB places all
functions marked with the __export keyword in the DLL source code in
the import library. This method is required when the DLL source code
contains exported functions that are not listed in the .DEF file.
Otherwise, these functions would be excluded from the import library.
<P>
In addition, if the DLL is developed in C++, the names of exported
functions are generally not available to place in the .DEF file
because C++ decorates function names. To create an import library for
exported C++ functions, IMPLIB must read the function names from the
DLL.
<P>
To create an import library that contains only a subset of the
functions marked __export, create a .DEF file containing only the
names of the functions to include in the import library and specify
the name of the .DEF file as an argument to IMPLIB.
<P>
Note that any function that is marked with the __export keyword is
compiled with the default DLL export attributes in the import library.
To modify any of the attributes (for example, to add the NODATA or
RESIDENTNAME attributes to the exported function), you must list the
function name in the EXPORTS section of a .DEF file.
<P>
An example of a function that must be listed in the .DEF file is a WEP
(Windows exit procedure) function. Because the WEP must have the
RESIDENTNAME attribute, the following information must appear in the
EXPORTS section of the DLL's .DEF file:
<P>
<PRE>   SEGMENTS 'WEP_TEXT' FIXED PRELOAD

   EXPORTS
      WEP  @1  RESIDENTNAME

</PRE>The SEGMENTS declaration tells Windows to load the WEP_TEXT segment
into a fixed memory location as it loads the DLL into memory.
<P>
To place both the functions marked as __export and the WEP into the
import library, specify both the .DEF file and the .DLL file as
arguments to the IMPLIB command.
<P>
For more information on using Microsoft C/C++ 7.0 to create a WEP
function compatible with Windows 3.1, see pages 980 and 981 of the
Microsoft Windows Software Development Kit (SDK) "Programmer's
Reference, Volume 2: Functions" manual for version 3.1 and the
DETAILS.TXT file distributed with Microsoft C/C++.
<P>
For more information on using the /GD option switch with the __export
keyword, see page 515 of the Microsoft C/C++ "Environment and Tools"
manual for version 7.0, or query in the Microsoft Knowledge Base on
the word "/GD."
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.10<BR>
KBCategory: kbprg<BR>
KBSubcategory: KrDll<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 23, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
