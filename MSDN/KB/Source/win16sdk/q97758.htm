

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Registering a Class in a DLL </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q97758 ">
<META NAME="KBModify" CONTENT="1997/07/23">
<META NAME="KBCreate" CONTENT="1993/04/20">
<META NAME="Keywords" CONTENT="kb16bitonly KrDll kbprg">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  If a class is registered in a dynamic-link library (DLL) with the RegisterClass() function and an application uses this class when creating a window or a dialog box, then the CreateDialog() or CreateWindow() call in the application will fail. The d...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QABO,QAJH,QDL9,QBWO,QBWN,QAGI,QBWQ,QBVV,QDNN,QBC9,QBC8,QANO,QAGQ,QBXF,QAGB V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Registering a Class in a DLL</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 23, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q97758 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
3.00 3.10
WINDOWS
kbprg
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   versions 3.0 and 3.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
If a class is registered in a dynamic-link library (DLL) with the
RegisterClass() function and an application uses this class when
creating a window or a dialog box, then the CreateDialog() or
CreateWindow() call in the application will fail. The debug version of
Windows will produce a Fatal Exit code 0x8800 with the following
message:
<P>
<PRE>   CreateWindow failed:  Window class not found.

</PRE>Either of the following may generate this message:

<UL><LI>The window class in the DLL was not registered correctly with the
   CS_GLOBALCLASS class style. Without this class style, a class
   cannot be accessed globally by all the applications that link into
   the DLL.
<P>
   -or-

<LI>The DLL is not loaded into memory and therefore the class is not
   accessible. This will happen if the application implicitly links
   to the DLL, and none of the exported functions in the DLL is
   explicitly called in the application. To work around this problem,
   the DLL must provide an entry point for the application to call or
   the application must explicitly load and free the library.
<P>
</UL><h2>MORE INFORMATION</h2>
 
<P>
To register a window class in a DLL and subsequently create a window
(or create a dialog box) of that class in any application that links
into this DLL, the window class must be registered with the
CS_GLOBALCLASS class style. This style specifies that the window class
is an application global class, and will allow this class to be
accessed globally by all applications. The CS_GLOBALCLASS class style
is documented in the Windows version 3.1 SDK "Programmer's Reference,
Volume 1: Overview," manual on page 19 under the Class Styles section.
<P>
Care must be taken to ensure that an application global class is not
accessed after the DLL (that registered it) terminates. Doing so will
generate a Fatal Exit 0x001A message under the debug version of
Windows. For more information on this topic, query on the following
words in the Microsoft Knowledge Base:
<P>
<PRE>   fatal exit and 0x001A

</PRE>After registering the window class using the CS_GLOBALCLASS class
style, calling CreateWindow or CreateDialog from an application should
work correctly. However, if the intent is to have the DLL own the
message queue, this is not possible. The reason is that DLLs, being
taskless entities, are designed to be resources or to only provide
resources and functions; they are not capable of handling the message
processing. This functionality must be implemented in an application.
<P>
Also, note that with Windows version 3.0, there is a potential problem
in destroying windows whose window class has been registered with the
CS_GLOBALCLASS class style by a DLL (or an application). This problem
has been corrected in Windows version 3.1. For more information on
this problem and a solution, please query on the following words in
the Microsoft Knowledge Base:
<P>
<PRE>   exit and windows and DLL-instanced

</PRE>Once the class is registered properly with the CS_GLOBALCLASS style in
the DLL, any application can use it, provided the DLL is loaded in
memory. This issue is of concern in cases where the DLL is used only
to register classes (for example, in LibMain) that can be used by all
applications (for example, custom control libraries). Because the DLL
does not contain any function entry points that the application can
call into, there are no call-dependencies between the application and
the DLL, and therefore the DLL will not be loaded implicitly. In such
a case, the solution is that the DLL must provide an entry point that
the application can call or the application must explicitly load and
free the library using LoadLibrary and FreeLibrary application
programming interfaces (APIs).
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10<BR>
KBCategory: kbprg<BR>
KBSubcategory: KrDll<BR>
Keywords            : kb16bitonly KrDll kbprg<BR>
Version             : 3.00 3.10<BR>
Platform            : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 23, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
