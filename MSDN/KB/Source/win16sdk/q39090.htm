

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SAMPLE: Aligning the Logical and Physical Coordinate Systems </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q39090 ">
<META NAME="KBModify" CONTENT="1996/02/15">
<META NAME="KBCreate" CONTENT="1988/12/08">
<META NAME="Keywords" CONTENT="kbprg kbfile">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  The text below explains how to use the following functions in the Microsoft Windows operating system: SetViewportExt(), SetViewportOrg(), SetWindowExt(), and SetWindowOrg(). The explanation is based on the SHAPES sample application that was provide...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QABK,QDL9,QBWO,QBWN,QBBI,QBC9,QBC8,QANO,QAMV,QAJE,QAPF,QAK4,QAH4,QAJD,QAR8 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>SAMPLE: Aligning the Logical and Physical Coordinate Systems</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 15, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q39090 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   versions 3.0 and 3.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The text below explains how to use the following functions in the Microsoft
Windows operating system: SetViewportExt(), SetViewportOrg(),
SetWindowExt(), and SetWindowOrg(). The explanation is based on the SHAPES
sample application that was provided with the Microsoft Windows SDK
versions 2.x. A version of this sample for Windows 3.0 and later is
available in the Microsoft Software Library.
<P>
Download SHAPES.EXE, a self-extracting file, from the Microsoft Software
Library (MSL) on the following services:

<UL><LI>Microsoft Download Service (MSDL)
<P><PRE>      Dial (206) 936-6735 to connect to MSDL
      Download <A HREF="http://support.microsoft.com/download/support/mslfiles/SHAPES.EXE">SHAPES.EXE</A> <I>(size: 21675 bytes)</I> 
</PRE>
<LI>Internet (anonymous FTP)
<P><PRE>      ftp ftp.microsoft.com
      Change to the \SOFTLIB\MSLFILES directory
      Get <A HREF="http://support.microsoft.com/download/support/mslfiles/SHAPES.EXE">SHAPES.EXE</A> <I>(size: 21675 bytes)</I> 
</PRE><P>
</UL><h2>MORE INFORMATION</h2>
 
<P>
An application uses the SetViewportExt(), SetViewportOrg(), SetWindowExt(),
and SetWindowOrg() to align the two separate coordinate systems that the
Windows graphics device interface (GDI) provides. SetWindowOrg() and
SetViewportOrg() provide a one-to-one mapping of the two specified origin
points (one in each coordinate system). The SetWindowExt() and
SetViewportExt() functions instruct GDI how much to stretch (or compress)
the coordinate system after mapping the two specified points to each other.
<P>
The following code, drawn from the SHAPES sample, maps point (-10,
110) in the logical coordinate system to point (0, 0) in the client
coordinate system. Then the code sets the width of the viewport to 120
logical units and the height of the viewport to -120 logical units.
<P>
<PRE>   RECT ClientRect;

   GetClientRect(hDC, ClientRect);
   SetWindowOrg(hDC, -10, 110);
   SetViewportOrg(hDC, 0, 0);
   SetWindowExt(hDC, 120, -120);
   SetViewportExt(hDC,
                  (short)(ClientRect.right - ClientRect.left),
                  (short)(ClientRect.bottom - ClientRect.top));

</PRE>Negative coordinate scaling is required because the specified origin
point is above the displayed image. These concepts are perhaps best
illustrated on graph paper. Consider the following example. In the
logical coordinate system, an image of a star starts in the upper-left
quadrant of the coordinate system, between (-10, 110) and (110, -10).
Mark the specified origin (-10, 110) on the graph paper. To include
the image of the star in the viewport, the viewport "extent" must
include 120 units to the right (positive x direction) and 120 units
down (negative y direction). The specified viewport extents provide
the required viewport.
<P>
In the example, the left and top members of the ClientRect data
structure are always zero. The subtraction is unnecessary but included
to demonstrate how the application aligns the rectangles in the
logical and client coordinate systems.
<P>
To reduce the size of the star, reduce the size of the viewport by
reducing the size of the arguments to SetViewportExt(), or increase the
amount of logical area mapped into the viewport by increasing the
arguments to SetWindowExt().
<P>
The easiest method of becoming familiar with these functions is to
change only one argument value at a time, and change it by only a
small amount. For example, start by changing the code above to include
the following:
<P>
<PRE>   SetWindowOrg(hDC, -30, 110);

</PRE>Changing the window origin in this manner trims some of the right side
of the star from the screen. Change the window origin back to its
original location, then change other values. You may need to change
the viewport coordinates by a larger amount than the window
coordinates to see the changes.
<P>
Changing one coordinate at a time is effective only in the
MM_ANISOTROPIC mapping mode, which allows the units in the coordinate
system to be rectangular rather than square. An application can change
units on the y-axis without changing the x-axis, and vice versa. In
contrast, the MM_ISOTROPIC mapping mode enforces square units, with an
equivalent measure along each axis.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10 softlib SHAPES.EXE<BR>
KBCategory: kbprg kbfile<BR>
KBSubcategory: GdiDc<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 15, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
