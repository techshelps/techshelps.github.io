

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Obtaining Group/Item Info from ProgMan Using DDEML </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q102575">
<META NAME="KBModify" CONTENT="1997/07/23">
<META NAME="KBCreate" CONTENT="1993/08/04">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  Dynamic-data exchange (DDE) can be used to obtain group and/or item information from Program Manager. Many applications, especially setup applications, need this information before items or groups are added/deleted from Program Manager. Information...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QABO,QAGI,QAH4,QAH5,QAGU,QAUJ,QDL9,QBWO,QBWN,QAYY,QBWQ,QAY2,QAJH,QAMA,QAUD V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Obtaining Group/Item Info from ProgMan Using DDEML</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 23, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q102575</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
3.00 3.10
WINDOWS
kbprg
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) versions 3.0 and
   3.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Dynamic-data exchange (DDE) can be used to obtain group and/or item
information from Program Manager. Many applications, especially setup
applications, need this information before items or groups are
added/deleted from Program Manager. Information such as group names,
group filenames, the number of items in a group, an item's working
directory, title, xpos, ypos, and so forth, can be obtained very
easily from Program Manager via DDE. This article discusses how to
obtain this type of information from Program Manager using DDEML.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Program Manager is a DDEML server that provides DDE client
applications with valuable information regarding group windows and
items inside the group windows.
<P>
DDEML client applications have to connect to Program Manager with
PROGMAN/PROGMAN as SERVICE/TOPIC names. (Program Manager also supports
SHELL/APPPROPERTIES service/topic names.) Once connected, the client
application needs to REQUEST group/item information from Program
Manager by issuing a request transaction.
<P>
<P><h3>Group Information</h3>
 
<P>
To obtain names of all the groups currently in Program Manager, the
client has to issue a request transaction with the item name set to
"GROUPS". The request has to be made in CF_TEXT format.
<P>
The return value from this transaction is a data handle that contains
the names of all the groups in Program Manager. Each group name is
separated by a carriage return (\r\n). Below is sample code that
requests names of all the groups from Program Manager:
<P>
<PRE>        ghszItem = DdeCreateStringHandle(idInst,"GROUPS",
 CP_WINANSI);
        hProgData = DdeClientTransaction(NULL,
// pointer to data to pass
                                                  // to server
                        0,            // length of data
                        ghszConv,     // handle to conversation
                        ghszItem,     // handle to item-name
                                                  // string
                        CF_TEXT,      // clipboard format
                        XTYP_REQUEST, // transaction type
                        5000,         // transaction timeout
                        NULL);       // pointer to result

     retVal =  DdeGetData(hProgData, (void FAR*)szBuffer,
                             sizeof(szBuffer),  0) ;
        MessageBox(NULL, szBuffer, "TEST", MB_OK) ;

</PRE>If there are four groups in Program Manager (for example, Main,
Accessories, SDK, and Applications), then the message-box call will
display names of all these groups, one per line.
<P>
<P><h3>Item Information</h3>
 
<P>
To obtain information regarding all the items in a group, the client
application has to issue a request transaction to Program Manager,
this time with the item name set to the name of the group. For
example, if the client application needs to find out if an item exists
in Program Manager group "Main", or if it needs to find out all the
items that are in group Main, then the call to DdeCreateStringHandle()
above must be changed to
<P>
<PRE>   ghszItem = DdeCreateStringHandle(idInst,"MAIN", CP_WINANSI);

</PRE>to create a string handle for the appropriate item name, Main.
<P>
The return value from this transaction is a data handle that contains
names of all the items in the group Main. A typical example of the
data inside resembles the following:
<P>
<PRE>   "MAIN",C:\WINDOWS\MAIN.GRP,5,3
   "MS-DOS","DOSPRMPT.PIF",,PROGMAN.EXE,166,4,9,0,0
   "Mail","MSMAIL.EXE",,C:\WINDOWS\MSMAIL.EXE,258,2,0,0,0
   "Write","WRITE.EXE",,C:\WINDOWS\WRITE.EXE,384,48,0,0,0
   "File","WINFILE.EXE",,C:\WINDOWS\WINFILE.EXE,6,2,0,0,0
   "Brief ","B.PIF",,PROGMAN.EXE,93,49,2,0,0

</PRE>Program Manager provides the list in CF_TEXT format. The fields of
group information are separated by commas. The first line of the
information contains the group name (in quotation marks), the path of
the group file, and the number of items in the group.
<P>
NOTE: The last value on line 1 is not documented in the Windows
Software Development Kit (SDK); it can be any value between 1 and 8.
This is the same value that is passed as the second param to the
ShowGroup() command. This value indicates the state of the group
window, whether minimized, active, and so forth.
<P>
In this particular case, the group window Main is currently the active
group and is maximized.
<P>
For more information on this value, please refer to the ShowGroup()
command documentation in Section 17.2.2 of the Windows 3.1 SDK
"Programmer's Reference, Volume 1: Overview."
<P>
Each subsequent line contains information about an item in the group,
including the command line (in quotation marks), the default
directory, the icon path, the position in the group, the icon index,
the shortcut key (in numeric form), and the minimize flag.
<P>
This set of information for each item corresponds to the parameters
passed to the AddItem() function when each item was added to the
group. For more information on each of these parameters, refer to the
AddItem() command documentation on Section 17.2.5 of the Windows 3.1
SDK, "Programmer's Reference, Volume 1: Overview."
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.10 GPF gp-fault<BR>
KBCategory: kbprg<BR>
KBSubcategory: UsrDde<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 23, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
