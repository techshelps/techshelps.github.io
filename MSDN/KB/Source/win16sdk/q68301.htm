

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SAMPLE: Developing a Spreadsheet Application for Windows </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q68301 ">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1991/01/15">
<META NAME="Keywords" CONTENT="kb16bitonly UsrCtl kbfile kbprg">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  A spreadsheet, such as Microsoft Excel, is used to store and manipulate data. It has a rectangular grid arranged in columns and rows. The intersection of each column and row is a cell, the basic unit of a spreadsheet in which the application stores...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWN,QDL9,QBWO,QAHP,QAJH,QAYY,QDNZ,QBWQ,QDMK,QA5V,QA2Q,QAG2,QDNM,QAGI,QA7O V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>SAMPLE: Developing a Spreadsheet Application for Windows</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q68301 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
3.00 3.10
WINDOWS
kbprg kbfile
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   versions 3.0 and 3.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
A spreadsheet, such as Microsoft Excel, is used to store and manipulate
data. It has a rectangular grid arranged in columns and rows. The
intersection of each column and row is a cell, the basic unit of a
spreadsheet in which the application stores data.
<P>
To develop a spreadsheet application, the predefined control types (such as
list boxes and edit controls) should not be used to represent cells. These
controls have limitations that preclude using them for large scale
purposes.
<P>
The information below describes a more efficient alternative to using
predefined controls when creating a spreadsheet type application. There is
a file in the Microsoft Software Library named SPDSHEET that contains the
sample code to demonstrate such an application.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The main technique used to develop a spreadsheet application for Windows is
to draw vertical and horizontal lines on a window to represent the cells of
a spreadsheet. Mouse hit-testing is then done to track the currently active
spreadsheet cell. To enter the spreadsheet data, only one edit control is
used. The most recent data is painted simultaneously on the current cell as
it is entered by the user. To store the spreadsheet data internally, an
array of the desired data type is created.
<P>
All the spreadsheet data and other visual information is repainted on the
main window whenever the application gets a WM_PAINT message.
<P>
The SPDSHEET sample application uses Windows API function calls to paint
the spreadsheet cells. It draws all of the solid lines using MoveTo() and
LineTo() functions. The vertical dotted lines are drawn by calling
LineDDA(), which in turn calls a callback function that draws pixels. The
application uses DrawText() to display column letters and row numbers. The
highlight on the current cell is achieved by inverting the bits on all four
sides of the cell.
<P>
Since this is a simplified version of a spreadsheet, the sample application
creates an array of 100 strings to represent spreadsheet data. The
developers of a spreadsheet application can choose to use their own data
type.
<P>
The SPDSHEET example also creates two other windows on the upper side of
its client area. One is a static window to display the position of the
current selected cell and the other is an edit control that is used to
enter spreadsheet data. As the data is entered to the edit control, it is
also drawn to the current selected cell using DrawText().
<P>
Upon receiving a WM_LBUTTONDOWN message, the application removes the
highlight from the currently selected cell and calculates the location of
the newly selected cell. The application highlights the newly selected cell
and copies the cell's contents to the edit control. The static window is
also updated to display the location of the newly selected cell.
<P>
The information corresponding to each cell's location is not stored by
SPDSHEET because the cell size is constant and the location can be
calculated. If, on the other hand, the cells were of variable sizes, some
location information would have to be stored and managed by the
application.
<P>
When the application receives a WM_PAINT message, it repaints its entire
client area, including the whole entire array of spreadsheet data. To make
this process more efficient, the application can make use of the invalid
region information sent by Windows through the PAINTSTRUCT structure.
<P>
Download SPDSHEET.EXE, a self-extracting file, from the Microsoft Software
Library (MSL) on the following services:

<UL><LI>Microsoft Download Service (MSDL)
<P><PRE>      Dial (206) 936-6735 to connect to MSDL
      Download <A HREF="http://support.microsoft.com/download/support/mslfiles/SPDSHEET.EXE">SPDSHEET.EXE</A> <I>(size: 22345 bytes)</I> 
</PRE>
<LI>Internet (anonymous FTP)
<P><PRE>      ftp ftp.microsoft.com
      Change to the \SOFTLIB\MSLFILES directory
      Get <A HREF="http://support.microsoft.com/download/support/mslfiles/SPDSHEET.EXE">SPDSHEET.EXE</A> <I>(size: 22345 bytes)</I> 
<P></BLOCKQUOTE>
</UL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10 softlib SPDSHEET.EXE<BR>
KBCategory: kbprg kbfile<BR>
KBSubcategory: UsrCtl<BR>
Keywords            : kb16bitonly UsrCtl kbfile kbprg<BR>
Version             : 3.00 3.10<BR>
Platform            : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
