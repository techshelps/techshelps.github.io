

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Access to the Windows Clipboard by MS-DOS-Based App </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q67675 ">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1990/12/08">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  Windows real and standard modes do not provide an interface for standard MS-DOS (non-Windows) applications to access the Windows clipboard. However, in Windows enhanced mode, access is provided through the INT 2fh interface. This article discusses ...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QANH,QDL9,QBWO,QBWN,QBWQ,QAEF,QAUD,QABB,QAYY,QAJH,QA5W,QAKD,QAGI,QAUJ,QAKC V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Access to the Windows Clipboard by MS-DOS-Based App</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q67675 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
3.00 3.10
WINDOWS
kbprg
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   versions 3.1 and 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Windows real and standard modes do not provide an interface for
standard MS-DOS (non-Windows) applications to access the Windows
clipboard. However, in Windows enhanced mode, access is provided
through the INT 2fh interface. This article discusses various methods
that may be used to simulate clipboard access in real and standard
modes and documents the INT 2fh interface for enhanced mode.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Under Windows real and standard modes, it is possible to simulate
programmatic access to the contents of the clipboard by a standard
MS-DOS-based application. One possible method is to create a Windows-based
application that places the contents of the Windows clipboard into a
file. The MS-DOS-based application would check for the existence of the
file saved from the Windows-based application. When the file exists, the MS-
DOS-based application can read the contents, eliminating the necessity for
direct user intervention on behalf of the MS-DOS-based application.
<P>
Only textual information can be retrieved from the clipboard by a
standard MS-DOS-based application. This is done using the Edit Paste
hierarchical system menu combination in Windows enhanced mode that is
available when the MS-DOS-based application is windowed.
<P>
In Windows real or standard modes, a Paste option can be selected
directly from the system menu only when the MS-DOS-based application is
represented by an icon ("iconic"), giving the user access to its
system menu. When Paste is selected, Windows will restore the MS-DOS-based
application to full screen and paste the contents of the clipboard
where the cursor is located in the MS-DOS-based application. MS-DOS-based
applications can be made iconic in real and standard modes through an
ALT+TAB keystroke.
<P>
Placing information into the clipboard can be done though the use of
the PRINT SCREEN or ALT+PRINT SCREEN keystrokes, each of which copies
a full screen into the clipboard.
<P>
Copying information to the Windows clipboard can be done in Windows
enhanced mode using the Edit Mark and Edit Copy system menu commands.
<P>
More information on user control of the Windows Clipboard can be found
on pages 440-490 in the "Microsoft Windows User's Guide," Chapter 12.
<P>
The remainder of this article documents the INT 2fh interface to the
clipboard, available in Windows enhanced mode.
<P>
NOTE: The Windows functions RegisterClipboardFormat() and
<PRE>      EnumClipboardFormats() are not supported.

</PRE><h3>Function Call Definitions</h3>
 
<P>
<PRE>Name            IdentifyWinOldApVersion()
Parameters      AX = 1700H
Return Values   AX == 1700H: Clipboard functions not available
                   &lt;&gt; 1700H: AL = Major version number
                             AH = Minor version number


Name            OpenClipboard()
Parameters      AX = 1701H
Return Values   AX == 0: Clipboard already open
                   &lt;&gt; 0: Clipboard opened


Name            EmptyClipboard()
Parameters      AX = 1702H
Return Values   AX == 0: Error occurred
                   &lt;&gt; 0: OK, Clipboard emptied


Name            SetClipboardData()
Parameters      AX = 1703H
                DX = WinOldAp-Supported Clipboard format
                ES:BX = Pointer to data
                SI:CX = Size of data in bytes
Return Values   AX == 0: Error occurred
                   &lt;&gt; 0: OK.  Data copied into allocated memory.
Note            The MS-DOS-based application should call the
                ClipboardCompact() function prior to this to determine
                if the data can be accommodated in memory.


Name            GetClipboardDataSize()
Parameters      AX = 1704H
                DX = WinOldAp-Supported Clipboard format
Return Values   DX:AX == Size of the data in bytes, including any
                         headers.
                      == 0 If data in this format is not in the clipboard.


Name            GetClipboardData()
Parameters      AX = 1705H
                DX = WinOldAp-Supported Clipboard format
                ES:BX = Pointer to data buffer to hold data
Return Values   AX == 0: Error occurred (or data in this format is not
                         in the clipboard)
                   &lt;&gt; 0: OK
Note           This call should be preceded by a
               GetClipBoardDataSize() call to find out how much memory
               is required for the buffer. No checking is performed, the
               caller must ensure that the buffer is big enough;
               otherwise, some of the callers code or data may be
               overwritten.


Name            CloseClipboard()
Parameters      AX = 1708H
Return Values   AX == 0: Error occurred
                   &lt;&gt; 0: OK

Name            ClipboardCompact()
Parameters      AX = 1709H
                SI:CX = Desired memory size in bytes.
Return Values   DX:AX == Number of bytes of largest block of free memory.
                      == 0 if error or no memory
Notes           The MS-DOS-based application is responsible for including
                the size of any headers in the desired memory size.


Name            GetDeviceCaps()
Parameters      AX = 170AH
                DX = GDI information index
Return Values   AX == integer value of desired item
                   == 0 if error
Notes           The implied hDC for this call will be for the display.


</PRE><h3>Supported Clipboard Formats</h3>
 
<P>
The following Windows clipboard formats are supported:
<P>
<PRE>   CF_TEXT         = 1
   CF_BITMAP       = 2         ; See structures section
   CF_OEMTEXT      = 7
   CF_DSPTEXT      = 81h
   CF_DSPBITMAP    = 82h

</PRE>NOTE: Since the RegisterClipboardFormat() and EnumClipboardFormats()
<PRE>      functions are not available at this time, the use of private
      clipboard formats is not supported.

</PRE><h3>Structures</h3>
 
<P>
These structures mimic the actual Windows structures with one major
difference: instead of including a handle or pointer to other memory
containing the actual data, the data follows the structure. The
structure information now behaves like a header prefacing the data.
<P>
Bitmap structure:
<P>
<PRE>   bmType          DW      ?   ; Always 0
   bmWidth         DW      ?   ; Width of bitmap in pixels
   bmHeight        DW      ?   ; Height of bitmap in raster lines
   bmWidthBytes    DW      ?   ; Bytes/raster line
   bmPlanes        DB      ?   ; Number of color planes in the bitmap
   bmBitsPixel     DB      ?   ; Number of adj color bits to def pixel
   bmBits          DQ      ?   ; Points to byte following bmHigDim
   bmWidDim        DW      ?   ; Width of bitmap in 0.1 mm units
   bmHigDim        DW      ?   ; Height of bitmap in 0.1 mm units
   BitmapData      nBytes      ; The actual data
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10<BR>
KBCategory: kbprg<BR>
KBSubcategory: KrIsrTsr<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
