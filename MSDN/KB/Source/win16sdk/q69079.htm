

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Give a 3-D Effect to Windows Controls </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q69079 ">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1991/02/06">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  It is possible for an application to give edit controls, list boxes, and static text a three-dimensional (3-D) appearance. Each control can be made to appear recessed into the surface of its parent dialog box, or raised above it. This article conta...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB5,QA7O,QAMN,QAOE,QA01,QAPG,QDL9,QBWO,QBWN,QA4H,QAH4,QAG9,QAH6,QBWQ,QAHV V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Give a 3-D Effect to Windows Controls</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q69079 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
3.00 3.10
WINDOWS
kbprg
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit for Windows (SDK)
   versions 3.0 and 3.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
It is possible for an application to give edit controls, list boxes, and
static text a three-dimensional (3-D) appearance. Each control can be made
to appear recessed into the surface of its parent dialog box, or raised
above it. This article contains the code necessary to implement this
effect.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
There are three steps required to give a particular control a 3-D
appearance:

<OL><P><LI>Remove the WS_BORDER attribute from the control specification in
   the dialog template. This will cause the background of the control
   to "blend" into the background of the dialog.

<P><LI>In the WM_PAINT message of the control's parent dialog function,
   post a user-defined message to the dialog function. Return FALSE
   for the processing of WM_PAINT so that all other painting will take
   place. By posting the user-defined message, the Dialog Manager will
   do its painting first, then the three-dimensional appearance will
   be added.

<P><LI>During the processing of the user defined message, call
   DrawIndent() for each control. DrawIndent() will draw a highlight
   color on the right side and bottom of the control, and a shadow
   color on the top and left sides of the control. This will give the
   appearance that the control is recessed into the dialog box. To
   make the control appear raised above the dialog, reverse the
   highlight and shadow colors in the DrawIndent() function call.
<P>
</OL>On systems with a monochrome display, DrawIndent() will only draw a
single black border.
<P>
The following code shows how to use DrawIndent():
<P>
<PRE>    ...

    case WM_PAINT:
       PostMessage(hDlg, WM_COMMAND, IDM_REPAINT, 0L);
       return FALSE;

    case WM_COMMAND:
       switch (wParam)
         {
         case IDM_REPAINT:
           DrawIndent(hDlg, IDD_FIELD1);
           DrawIndent(hDlg, IDD_FIELD2);

             ...

           DrawIndent(hDlg, IDD_FIELDN);
           break;

    ...


</PRE></OL>The following is the code for DrawIndent():
<P>
<PRE>void DrawIndent(HWND hDlg, int ID)

// Assumptions:
//
// hDlg        is a valid window handle.
// ID          is a valid control ID.
// bMonochrome is a flag that is TRUE for a monochrome system.
//

</PRE>{
<PRE>  RECT rRect;
  HDC  hDC;
  HPEN hOldPen;

  GetClientRect(GetDlgItem(hDlg, ID), (LPRECT)&amp;rRect);

  // By modifying the parameters this way, things are centered a bit
  // better.

  rRect.left   -= 2;
  rRect.bottom -= 1;
  rRect.top    -= 3;

  hDC = GetDC(GetDlgItem(hDlg, ID));

  // Draw the Shadow

  hOldPen = SelectObject(hDC, GetStockObject(BLACK_PEN));

  MoveTo(hDC, rRect.left-1, rRect.bottom+1);
  LineTo(hDC, rRect.left-1, rRect.top-1);
  LineTo(hDC, rRect.right+1, rRect.top-1);

  if (!bMonochrome)
    {
    MoveTo(hDC, rRect.left-2, rRect.bottom+2);
    LineTo(hDC, rRect.left-2, rRect.top-2);
    LineTo(hDC, rRect.right+2, rRect.top-2);

    // On color systems, select the highlight color
    SelectObject(hDC, GetStockObject(WHITE_PEN));
    }

  // Draw the Highlight (still shadow for mono systems)

  MoveTo(hDC, rRect.right+1, rRect.top-1);
  LineTo(hDC, rRect.right+1, rRect.bottom+1);
  LineTo(hDC, rRect.left-1, rRect.bottom+1);

  if (!bMonochrome)
    {
    MoveTo(hDC, rRect.right+2, rRect.top-2);
    LineTo(hDC, rRect.right+2, rRect.bottom+2);
    LineTo(hDC, rRect.left-2, rRect.bottom+2);
    }

  // Housekeep

  SelectObject(hDC, hOldPen);
  ReleaseDC(GetDlgItem(hDlg, ID), hDC);
</PRE>}
<P>
For additional information, please see the following article(s) in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../WIN16SDK/Q97361.htm">Q97361</A></B>
   TITLE     : Adding 3-D Controls Using CTL3D.DLL
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10<BR>
KBCategory: kbprg<BR>
KBSubcategory: UsrCtl<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
