

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Determining System Version from a Windows-Based Application </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q131371">
<META NAME="KBModify" CONTENT="1997/10/02">
<META NAME="KBCreate" CONTENT="1995/06/11">
<META NAME="Keywords" CONTENT="kb16bitonly KrMisc kbprg kbwebcontent">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  To create a Windows-based application that takes advantage of the features of each platform, it is necessary to determine what operating system the application is currently running with.  The GetVersion() function can be used to determine what oper...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWO,QDL9,QBWN,QBWQ,QAUD,QDIR,QAVX,QAVW,QAY5,QAJH,QADK V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Determining System Version from a Windows-Based Application</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 2, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q131371</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
3.10
WINDOWS
kbprg kbwebcontent
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK), version 3.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
To create a Windows-based application that takes advantage of the features
of each platform, it is necessary to determine what operating system the
application is currently running with.
<P>
The GetVersion() function can be used to determine what operating system
and version is currently being used. A 16-bit Windows-based application
might be running with Microsoft MS-DOS/Microsoft Windows, Microsoft
Windows NT Workstation, Microsoft Windows NT Server, or Microsoft Windows
95. Windows on Win32 (WOW) is the term given for the operating environment
when running a 16-bit Windows-based application with Microsoft Windows NT
Workstation or Microsoft Windows NT Server.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
According to the documentation, the return value of the GetVersion()
function is a DWORD that specifies the major and minor version numbers.
The following table shows the return values from the GetVersion() function
when used with various operating environments:
<P>
<PRE>   Environment   LOWORD                 HIWORD
   -------------------------------------------------------

   Windows 3.x   Windows version        MS-DOS version
   WFW           Windows version 3.1    MS-DOS version
   WOW           Windows version 3.1    MS-DOS version 5.0
   Windows 95    Windows version 3.95   MS-DOS version 7.0

</PRE>Microsoft Windows operating system version 3.1 and WOW can return the same
results. Therefore, 16-bit Windows-based applications may want to use the
GetWinFlags() function to determine whether the application is being run
with Microsoft Windows or WOW. The GetWinFlags() function returns a
WF_WINNT flag if the application is running with WOW.
<P>
GetWinFlags() is an existing function that has been modified to detect
other platforms. To test for Microsoft Windows NT, add the following
flag to your header file and use it to perform the test:
<P>
<PRE>   #define WF_WINNT         0x4000

</PRE>The following sample code can be used to test the values returned by the
GetVersion() function.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>#include &lt;windows.h&gt;

void main()
</PRE>{
<P>
<PRE>   DWORD dwVersion;
   char szVersion[80];

   dwVersion = GetVersion();

   wsprintf (szVersion, "Microsoft Windows %u.%u - MS-DOS %u.%u",
            (LOBYTE(LOWORD(dwVersion))),
            (HIBYTE(LOWORD(dwVersion))),
            (HIBYTE(HIWORD(dwVersion))),
            (LOBYTE(HIWORD(dwVersion))));

   MessageBox( NULL, szVersion, "Version Check", MB_OK );
</PRE>}
<P>
<P>
If you want to be able to distinguish between Windows and Windows for
Workgroups, use the following test.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>   #define WNNC_NET_MultiNet           0x8000
   #define WNNC_SUBNET_WinWorkgroups   0x0004
   #define WNNC_NET_TYPE               0x0002

   HINSTANCE hModInst      = NULL;
   FARPROC   lpWNetGetCaps = NULL;
   WORD      wNetType;

   hModInst = LoadLibrary( "USER.EXE" );
   if( !(lpWNetGetCaps = GetProcAddress( hModInst, (LPSTR)"WNetGetCaps")) )
      MessageBox (hWnd, "WNetGetCaps Not Found", NULL, MB_OK);
   else
   {
   // Get the network type
      wNetType = (*lpWNetGetCaps) (WNNC_NET_TYPE);
      if( wNetType &amp; WNNC_NET_MultiNet )
      {
      // a multinet driver is installed
         if( LOBYTE(wNetType) &amp; WNNC_SUBNET_WinWorkgroups )
         // It is WFW
            MessageBox( hWnd, "Windows for Workgroups", NULL, MB_OK);
         else
         // It is not WFW
            MessageBox( hWnd, "Not Windows for Workgroups", NULL, MB_OK);
      }
   }

   // Clean up the module instance
   if( hModInst )
      FreeLibrary( hModInst );
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.10 detect<BR>
KBCategory: kbprg kbwebcontent<BR>
KBSubcategory: KrMisc<BR>
Keywords          : kb16bitonly KrMisc kbprg kbwebcontent<BR>
Version           : 3.10<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 2, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
