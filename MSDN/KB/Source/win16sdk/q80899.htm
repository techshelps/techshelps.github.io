

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Windows 3.1 Application Compatibility (part 4 of 7) </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q80899 ">
<META NAME="KBModify" CONTENT="1997/07/23">
<META NAME="KBCreate" CONTENT="1992/02/20">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  Application Compatibility Document for Windows 3.1  Due to the amount of information in this document, it has been broken into seven pieces. To find all seven pieces of this document and the Windows 3.1 Compatibility Test checklist, query this know...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWN,QDL9,QBWO,QBWQ,QAJH,QAGQ,QAY5,QAVX,QAHE,QAGB,QBVV,QA5X,QABH,QAB9,QAKJ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Windows 3.1 Application Compatibility (part 4 of 7)</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 23, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q80899 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
3.10
WINDOWS
kbtool 31compattest
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows version 3.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
<P><h3>Application Compatibility Document for Windows 3.1</h3>
 
<P>
Due to the amount of information in this document, it has been broken
into seven pieces. To find all seven pieces of this document and the
Windows 3.1 Compatibility Test checklist, query this knowledge base on
the words:
<P>
<PRE>   prod(winsdk) and 31compattest


</PRE><h3>PARAMETER VALIDATION</h3>
 
<P>
Windows strictly checks parameters passed to its functions before
using them. In a Windows version 3.0 application, Windows works around
many validation errors and lets the function or application continue
to function. In a Windows version 3.1 application, many of these
errors cause the functions to fail, and the developer must ensure that
structures and parameters are passed correctly.
<P>
For example, in Windows version 3.0, if an application passes NULL as
the hInstance parameter to CreateWindowEx, Windows maps the handle to
the stack segment. In Windows version 3.1, the function returns an
error value.
<P>
The SDK release notes describe this in more detail. In some cases, the
system may reject valid parameters incorrectly and cause applications
to misbehave. Microsoft plans to correct any such occurrences.
<P>
<P>
<P><h3>UNDELETED OBJECT NOTIFICATIONS</h3>
 
<P>
In Windows version 3.1, any GDI or USER object left allocated when an
application terminates results in a warning to the debug terminal.
Windows version 3.1 does not automatically free these objects; the
application must free them. These warnings usually imply a memory
leakage; running and terminating an offending application eventually
uses up all available memory.
<P>
In some cases applications (and DLLs) allocate objects that are
intended to stay around longer than the application that created them.
This occurs frequently in shared DLLs that share GDI objects such as
bitmaps and brushes among their many clients. In such cases, ignore
the warnings at the debug terminal.
<P>
<P><h3>Potential Problem</h3>
 
<P>
Applications can eventually use up available memory, which seriously
degrades system performance.
<P>
<P><h3>Test</h3>
 
<P>
Use the Program Manager to check memory usage before and after running
your application. Follow these steps:

<OL><P><LI>Choose the About command in Program Manager's Help menu. Record the
   amount of available memory and resources.

<P><LI>Run your application and carry out enough tasks to ensure that one
   or more objects are created. Terminate your application.

<P><LI>Choose the About command again and compare available memory and
   resources. Be sure these values have not dropped.

<P><LI>Repeat this procedure several times, and check available memory and
   resources each time.
<P>
<P>
</OL><h3>MENU IMPLEMENTATION</h3>
 
<P>
Windows version 3.1 has enhanced menu management. In particular, the
TrackPopupMenu function allows additional parameters, and Windows
stores application menu data in a separate heap, expanding the number
of windows that may exist.
<P>
In Windows version 3.0 applications, Windows sends a WM_COMMAND
message using the SendMessage function. In Windows version 3.1
applications, Windows sends the message using the PostMessage
function, preventing the potential for overflowing a stack when
dealing with pop-up menus.
<P>
<P>
<P><h3>REGISTERCLASS</h3>
 
<P>
In Windows version 3.0, Windows fails to free the window-class
background brush properly when deleting the class. In Windows version
3.1, Windows frees the brush when either a Windows version 3.0 or 3.1
application terminates.
<P>
<P><h3>Potential Problem</h3>
 
<P>
A multiple-instance application that deletes the background brush may
unintentionally delete a brush when other instances of the application
are running.
<P>
<P>
<P><h3>TOPMOST WINDOW</h3>
 
<P>
A new window attribute allows a window to be placed on top of all
other windows, even when the owning application is not active. If
multiple applications have topmost windows, the topmost window is
ordered the same as owning applications.
<P>
Also, a topmost window, its owners, and all windows it owns stay
together as windows are moved around. Thus, if you bring an owned
dialog window to the top, its owner is also brought forward so that it
stays immediately below the dialog box.
<P>
<P><h3>Potential Problem</h3>
 
<P>
Applications that depend on being able to have windows of other
applications between their main window and a dialog box may encounter
problems. For example, a Setup program that starts Notepad and then
brings up a dialog box causes Notepad to be positioned behind the
dialog box owner. The solution is to create the dialog box without an
owner (a window may not be owned by a window of another application).
<P>
<P><h3>Potential Problem</h3>
 
<P>
Any application that relies on having an unobstructed client area when
active may encounter problems because the active window cannot be
guaranteed to be on top. Thus, the active window may not have a
rectangular clipping region because a topmost window may be on top of
it. Calling BitBlt with a window or screen DC as the source (which is
not recommended in any case) may copy bits belonging to the topmost
window.
<P>
<P><h3>Tests</h3>
 

<OL><P><LI>Examine your application code, and be sure there are no
   dependencies on client area visibility when your application is
   active.

<P><LI>Start the clock, and set it to be the topmost window. Run your
   application and several others. Use ALT+TAB to switch between
   applications, and be sure your application repaints correctly.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.10<BR>
KBCategory: kbtool<BR>
KBSubcategory: TlsCompat<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 23, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
