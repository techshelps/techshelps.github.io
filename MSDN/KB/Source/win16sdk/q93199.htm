

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SAMPLE: Code Implementing a Child Window with Menus </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q93199 ">
<META NAME="KBModify" CONTENT="1996/02/15">
<META NAME="KBCreate" CONTENT="1992/11/30">
<META NAME="Keywords" CONTENT="kbprg kbfile">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  Child windows by design do not have menus; however, some applications may require such child windows. CHILDMNU demonstrates one way to embed a pop-up window with menus in a child window to simulate a child window with menus.  Download CHILDMNU.EXE ...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGQ,QDL9,QBWO,QBWN,QARL,QAMA,QBWQ,QBXU,QAEV,QANJ,QAIB,QAH4,QAHQ,QAF0,QAEF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>SAMPLE: Code Implementing a Child Window with Menus</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 15, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q93199 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   version 3.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Child windows by design do not have menus; however, some applications
may require such child windows. CHILDMNU demonstrates one way to embed
a pop-up window with menus in a child window to simulate a child
window with menus.
<P>
Download CHILDMNU.EXE from the Microsoft Software Library (MSL) on the
following services:

<UL><LI>Microsoft Download Service (MSDL)
<P><PRE>      Dial (206) 936-6735 to connect to MSDL
      Download <A HREF="http://support.microsoft.com/download/support/mslfiles/CHILDMNU.EXE">CHILDMNU.EXE</A> <I>(size: 28690 bytes)</I> 
</PRE>
<LI>Internet (anonymous FTP)
<P><PRE>      ftp ftp.microsoft.com
      Change to the \SOFTLIB\MSLFILES directory
      Get <A HREF="http://support.microsoft.com/download/support/mslfiles/CHILDMNU.EXE">CHILDMNU.EXE</A> <I>(size: 28690 bytes)</I> 
</PRE><P>
</UL><h2>MORE INFORMATION</h2>
 
<P>
Child windows were not designed to have menus but under certain
circumstances an application may require a child window with menus.
Below are the steps to simulate a child window with menus:

<OL><P><LI>Create the child for a main window using standard methods.

<P><LI>Create a pop-up window without a caption or border. The pop-up
   window should take up the entire client area of the child window.

<P><LI>Moving: Set the child window as the parent of the pop-up window
   using SetParent(). This method clips the pop-up window to the
   child's client and moves the pop-up window relative to the child
   window when the child moves.

<P><LI>Sizing: If the child window has sizing borders, then the pop-up
   window must be adjusted as the child is sized.
<P>
   Correct sizing of the pop-up window can be accomplished by
   processing the child window's WM_SIZE message. When the child
   window receives a WM_SIZE message, the child's new client area is
   calculated and the pop-up window is adjusted.

<P><LI>Activation: Child windows are not activated by design. When the
   user clicks the pop-up window, activation is taken away from the
   main window and is given to the pop-up window. To simulate the main
   window's activation, the pop-up's window procedure, upon receiving
   a WM_ACTIVATE message, posts a WM_NCACTIVATE message to the main
   window.
<P>
   Note: This step causes flashing because the caption is repainted
   when going back and forth between the pop-up window and the main
   window. Unfortunately, there is no sure way to accomplish the
   change of caption's activation.
<P>
</OL><h3>Other Considerations</h3>
 
<P>
Maximizing: When a child window is maximized, it uses the screen's
maximum size. To have the child window act similar to an MDI child,
two messages need to be processed; WM_SIZE in the main parent's window
procedure and WM_GETMINMAXINFO in the child's window procedure.
<P>
WM_SIZE of the child's parent window procedure checks for
SIZE_MAXIMIZE and SIZE_RESTORE. Then, if the child window is
maximized, call ShowWindow() with SW_MAXIMIZED. This method adjusts
the child window's size to the new size of the parent's client area.
<P>
On WM_GETMINMAXINFO of the child's window procedure, calculate the size
of the parent's client area. Use the newly calculated size and set the
ptMaxSize variable of the MINMAXINFO structure. This ensures that the
child is always fully contained within its parent client area when
maximized.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.10 softlib CHILDMNU.EXE<BR>
KBCategory: kbprg kbfile<BR>
KBSubcategory: UsrMen<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 15, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
