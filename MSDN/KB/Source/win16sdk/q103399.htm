

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SAMPLE: Rebooting an MSSetup Script on User Request </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q103399">
<META NAME="KBModify" CONTENT="1996/02/15">
<META NAME="KBCreate" CONTENT="1993/08/23">
<META NAME="Keywords" CONTENT="kbtool kbfile">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  The MSSetup Toolkit does not provide a way for the user to arbitrarily and cleanly reboot the computer without having the RestartListEmpty function return 0 (zero). The NSETUP sample provides a work around for this situation by providing a mechanis...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QDNQ,QAA1,QDI2,QAH4,QAGI,QAGU,QDK2,QDL9,QDIZ,QBWO,QBWN,QAM1,QBWQ,QBXB,QATJ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>SAMPLE: Rebooting an MSSetup Script on User Request</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 15, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q103399</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows,
   version 3.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The MSSetup Toolkit does not provide a way for the user to arbitrarily and
cleanly reboot the computer without having the RestartListEmpty function
return 0 (zero). The NSETUP sample provides a work around for this
situation by providing a mechanism for the user to communicate with the
MSSetup dynamic-link libraries (DLLs) to cleanly reboot the computer
without having a system file on the RestartList.
<P>
Download NSETUP.EXE, a self-extracting file, from the Microsoft Software
Library (MSL) on the following services:

<UL><LI>Microsoft Download Service (MSDL)
<P><PRE>      Dial (206) 936-6735 to connect to MSDL
      Download <A HREF="http://support.microsoft.com/download/support/mslfiles/NSETUP.EXE">NSETUP.EXE</A> <I>(size: 23867 bytes)</I> 
</PRE>
<LI>Internet (anonymous FTP)
<P><PRE>      ftp ftp.microsoft.com
      Change to the \SOFTLIB\MSLFILES directory
      Get <A HREF="http://support.microsoft.com/download/support/mslfiles/NSETUP.EXE">NSETUP.EXE</A> <I>(size: 23867 bytes)</I> 
</PRE><P>
</UL><h2>MORE INFORMATION</h2>
 
<P>
The MSSetup Toolkit occupies a relatively small footprint in memory while
providing much of the functionality needed to author a full-featured
installation program. MSSetup accomplishes this low memory requirement by
having a small fixed code stub program (SETUP.EXE) copy over the larger
DLLs to a temporary directory on the user's hard disk. When the script
exits, this small fixed code stub cleans up after the installation script
by deleting the DLLs from the user's temporary directory.
<P>
Another feature built into the MSSetup Toolkit is the ability to let the
user install system level DLLs while they are loaded in memory at the time
of installation. MSSetup accomplishes this by maintaining a list of files
that need to be installed while Windows is rebooted. The MSSetup script
author accomplishes this by calling the MSSetup functions RestartListEmpty
and ExitExecRestart.
<P>
There is no functionality built into the MSSetup Toolkit, however, to allow
the user to arbitrarily reboot Windows. A cursory examination of this
situation might yield a workaround involving the call to Windows-based
application programming interface (API) ExitWindows or ExitWindowsExec via
the MSSetup script. However, there is a problem with this approach. Upon
rebooting the system, the user will find all the MSSetup DLLs still present
in the temporary directory. Because Windows exits more or less immediately
upon the call to ExitWindows or ExitWindowsExec, the Setup stub program
(SETUP.EXE) never has a chance to perform its cleanup (see paragraph
above). To expect the installation script to provide this type of
functionality further complicates the situation.
<P>
Another approach to the situation is to let MSSetup handle the cleanup as
it would normally. NSETUP launches SETUP.EXE and waits for it to clean up
and terminate. In this manner, NSETUP relies on SETUP.EXE's behavior to
delete the files in the temporary directory. The sample also demonstrates a
technique for communicating between the MSSetup script and the NSETUP
program via the Windows function RegisterWindowMessage.
<P>
In many ways, the NSETUP sample is similar to SETUP.EXE; it is a fixed code
stub program, which WinExecs SETUP.EXE and then waits in the background for
the program to finish. When SETUP.EXE finishes, NSETUP consults a reboot
flag set via a message sent from the MSSetup script. If the user has chosen
to reboot, NSETUP makes a call to ExitWindows.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.10 MSSetup tool kit softlib NSETUP.EXE<BR>
KBCategory: kbtool kbfile<BR>
KBSubcategory: TlsMss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 15, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
