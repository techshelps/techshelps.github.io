

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Determining the Version of MS-DOS from a Windows App </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q80783 ">
<META NAME="KBModify" CONTENT="1997/07/23">
<META NAME="KBCreate" CONTENT="1992/02/13">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  There are at least three ways for an application developed for Windows version 3.x to determine the version of MS-DOS that is running on the system. Both the first and second methods require placing a few lines of inline assembler code into the app...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWN,QDL9,QBWO,QBWQ,QAGI,QAPN,QAH4,QAKC,QA4Q,QAUR,QBC6,QAY5,QAC1,QAYA,QAG8 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Determining the Version of MS-DOS from a Windows App</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 23, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q80783 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
3.00 3.10
WINDOWS
kbprg
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   versions 3.0 and 3.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
There are at least three ways for an application developed for Windows
version 3.x to determine the version of MS-DOS that is running on the
system. Both the first and second methods require placing a few lines of
inline assembler code into the application. The second method requires MS-
DOS version 5.0. The third method requires changing the GetVersion()
function prototype in the WINDOWS.H header file distributed with the
Microsoft Windows SDK version 3.0 (this change is not necessary if the
Microsoft Windows SDK version 3.1 is being used).
<P>
Even though it is necessary to modify the Windows 3.0 header file, the
third method is the most removed from the hardware and can be considered
the most portable. The other two methods assume an underlying Intel 80x86
architecture (or emulation).
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Method 1</h3>
 
<P>
This method requires only a few lines of inline assembler code and a
call to the DOS3Call() function. The following code fragment
demonstrates this technique:
<P>
<PRE>   VOID FAR PASCAL DOS3Call(VOID);   // Use instead of INT 21h
   int nMajor;                       // MS-DOS major version
   int nMinor;                       // MS-DOS minor version, revision
   int nOEMNumber;                   // OEM serial number
   static char szUserMsg[80];        // holds user message

   _asm
     {
        mov   ax, 0x3000        ; Get MS-DOS version
        call  DOS3Call
        mov   nMajor, al        ; Save major number
        mov   nMinor, ah        ; Save minor version number
        mov   nOEMNumber, bh    ; Save OEM Serial number
     }

   wsprintf(szUserMsg,
            "Running on MS-DOS %d.%d OEM Serial Number %d",
            nMajor, nMinor, nOEMNumber);
   MessageBox(hWnd, szUserMsg, "MS-DOS Version", MB_OK);


</PRE><h3>Method 2</h3>
 
<P>
This method requires only a few lines of inline assembler code and a
call to the DOS3Call() function. Additionally, it requires that MS-DOS
version 5.0 is running on the system. While this function does not
report the OEM serial number, it does report whether MS-DOS is in ROM
or in HMA (the High Memory Area). Also the MS-DOS version returned by
this method is unaffected by the SETVER command. The following code
fragment demonstrates this technique:
<P>
<PRE>   #define DOSINROM 0x08
   #define DOSINHMA 0x10

   int nMajor    = 0;
   int nMinor    = 0;
   int nRevision = 0;
   int nDOSFlag  = 0;
   static char msg[120];

   _asm
     {
         mov   ax, 0x3306        ; Get MS-DOS version
         call  DOS3Call
         mov   nMajor, bl        ; Save major number
         mov   nMinor, bh        ; Save minor version number
         mov   nRevision, dl     ; Revision num in low 3 bits
         mov   nDOSFlag, dh      ; MS-DOS version flags
     }

   wsprintf(msg,
            "Running on MS-DOS %s %s version %d.%d revision %d ",
            (LPSTR) (nDOSFlag &amp; DOSINROM ? "in ROM " : ""),
            (LPSTR) (nDOSFlag &amp; DOSINHMA ? "in HMA " : ""),
            nMajor, nMinor, (nRevision &amp; 0x03));
   MessageBox(hWnd, msg, "MS-DOS Version", MB_OK);


</PRE><h3>Important Note for Methods 1 and 2</h3>
 
<P>
The DOS3Call() function must be prototyped. In assembly language, the
appropriate prototype is as follows:
<P>
<PRE>   extrn DOS3CALL: far

</PRE>Use the DOS3Call() fucntion instead of making a direct call to MS-DOS
INT 21h. The DOS3Call() function runs a little faster than the equivalent
INT 21h call under Windows and it ensures that the interrupt will be
handled correctly under Windows.
<P>
Also note that the use of FAR and PASCAL in the definition of DOS3Call()
requires use of WINDOWS.H, since these macros are defined there.
<P>
<P><h3>Method 3</h3>
 
<P>
The last method involves making a slight modification to the Windows SDK
version 3.0 header file, WINDOWS.H. To retrieve the MS-DOS version,
change the return type in the function prototype of the GetVersion
function call from a WORD to a DWORD. The modified prototype should
resemble the following:
<P>
<PRE>   DWORD FAR PASCAL GetVersion(void);

</PRE>NOTE: It is not necessary to make the above change to the version of
the WINDOWS.H file included with the Windows SDK version 3.1.
<P>
The following code fragment demonstrates how to use the GetVersion()
function to display both the MS-DOS version and the Windows version
numbers:
<P>
<PRE>   DWORD dwVersion;
   char szUserMsg[80];

   dwVersion = GetVersion();
   wsprintf(szUserMsg,
            "Window version %d.%d. MS-DOS version %d.%d",
            LOBYTE(LOWORD(dwVersion)), HIBYTE(LOWORD(dwVersion)),
            HIBYTE(HIWORD(dwVersion)), LOBYTE(HIWORD(dwVersion)));

   MessageBox(hWnd, szUserMsg, "GetVersion", MB_OK);
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10<BR>
KBCategory: kbprg<BR>
KBSubcategory: KrMisc<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 23, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
