

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Techniques to Find Extended Memory in a Windows DLL </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q75682 ">
<META NAME="KBModify" CONTENT="1996/02/15">
<META NAME="KBCreate" CONTENT="1991/08/28">
<META NAME="Keywords" CONTENT="kbprg kbfile">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  For a Windows-based application to determine the amount of extended memory installed in the machine on which it is running, the extended memory word can be retrieved from the machine's AT Real Time Clock/CMOS RAM. Typically, 80286, 80386 SX, 80386 ...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBW6,QAH4,QDL9,QBWO,QBWN,QAA1,QAEF,QABI,QABH,QDI2,QDIZ,QAY2,QALG,QBWQ,QDJP V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Techniques to Find Extended Memory in a Windows DLL</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 15, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q75682 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   versions 3.0 and 3.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
For a Windows-based application to determine the amount of extended memory
installed in the machine on which it is running, the extended memory word
can be retrieved from the machine's AT Real Time Clock/CMOS RAM. Typically,
80286, 80386 SX, 80386 DX, and i486 based computers store setup information
in CMOS. This article details how to access this data.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The AT Real Time Clock/CMOS RAM is accessed via port 70h, and read from and
written to via port 71h. The extended memory word is stored low-order byte
first in the CMOS. The first (low order) byte is stored at address 17h, and
the second (high order) byte is stored at address 18h.
<P>
To read a particular address in the CMOS, write the address to read to port
70h, then retrieve the information from port 71h. Figure 1 contains a code
fragment, written in Microsoft C version 6.0 with inline assembly, which
shows how to check the CMOS for extended memory size. For compatibility
with future versions of Windows, the following code should NOT be placed
directly into a Windows-based application. Instead, this code should be
placed in a dynamic-link library (DLL), which can be called by
applications.
<P>
<P><h3>Figure 1. Sample Extended Memory Size Check</h3>
 
<P>
<PRE>   int MemorySize = 0;

    _asm
        {
        xor   ax, ax
        mov   al, 17h
        out   70h, al
        ; jmp   $+3               ; delay not needed in most cases
        in    al, 71h
        mov   MemorySize, ax
        mov   al, 18h
        out   70h, al
        ; jmp   $+3               ; delay not needed in most cases
        in    al, 71h
        xchg  al, ah
        or    MemorySize, ax
        }

     printf("\nExtended Memory size = %u KB\n", MemorySize);

</PRE>The AT Real Time Clock/CMOS RAM configuration is documented in its entirety
in the IBM PC technical reference, on pages 1-56 to 1-68. The information
contained in the article was obtained from "The Programmer's PC Source
Book," by Thom Hogan, published by Microsoft Press (1988).
<P>
Please note that although the BIOS on most machines automatically
configures the CMOS entry for extended memory size with the amount of
memory the BIOS power-on self-test (POST) routines find in the machine,
some BIOS setup programs allow the user to configure the extended memory
setting themselves. If the user has not filled in the correct number for
the amount of extended memory installed in the machine, the check described
in this article will be useless.
<P>
WEXTMEM is a file in the Software Library that contains source code for a
Windows-based application that reports the amount of extended memory
installed in the machine on which the program is run.
<P>
Download WEXTMEM.EXE, a self-extracting file, from the Microsoft Software
Library (MSL) on the following services:

<UL><LI>Microsoft Download Service (MSDL)
<P><PRE>      Dial (206) 936-6735 to connect to MSDL
      Download <A HREF="http://support.microsoft.com/download/support/mslfiles/WEXTMEM.EXE">WEXTMEM.EXE</A> <I>(size: 20613 bytes)</I> 
</PRE>
<LI>Internet (anonymous FTP)
<P><PRE>      ftp ftp.microsoft.com
      Change to the \SOFTLIB\MSLFILES directory
      Get <A HREF="http://support.microsoft.com/download/support/mslfiles/WEXTMEM.EXE">WEXTMEM.EXE</A> <I>(size: 20613 bytes)</I> 
<P></BLOCKQUOTE>
</UL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10 softlib<BR>
KBCategory: kbprg kbfile<BR>
KBSubcategory: KrMm<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 15, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
