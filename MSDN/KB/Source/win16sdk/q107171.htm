

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Nesting Scalable Metafiles </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q107171">
<META NAME="KBModify" CONTENT="1995/01/05">
<META NAME="KBCreate" CONTENT="1993/11/15">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  The ability to use a metafile device context (DC) as the destination DC of a metafile playback is new in Windows 3.1. A metafile can now be played into another metafile, and therefore you can easily place one metafile inside another metafile or cop...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH2,QAUG,QA4Q,QAY4,QAMV,QAHT,QAHE,QDL9,QBWO,QBWN,QAK6,QBBI,QAY5,QAR4,QAGI V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Nesting Scalable Metafiles</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 5, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q107171</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   version 3.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The ability to use a metafile device context (DC) as the destination
DC of a metafile playback is new in Windows 3.1. A metafile can now be
played into another metafile, and therefore you can easily place one
metafile inside another metafile or copy pieces of one metafile into
another.
<P>
It is sometimes common for an application to create a metafile that
will be passed to another application. In this case, it is likely that
the metafile will be scaled. Scalable metafiles can easily be created
by using the MM_ANISOTROPIC mapping mode, the SetWindowExt() function,
and the SetViewportExt() function. The logical extent of a scalable
metafile is defined by the parameters in the SetWindowExt() function.
It can be complicated when playing one scalable metafile into another
scalable metafile device context. The logical extents of the two
metafiles may be different and the desired location of the metafile
being played may be offset from the origin of the destination metafile
DC. The OffsetWindowOrg() and ScaleViewportExt() functions can be used
to alter the metafile DC's attributes in order to play the source
metafile correctly into the destination metafile DC. The
SaveDC/RestoreDC commands can be used to preserve the metafile DC's
attributes while playing the source metafile into it.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
When creating a scalable metafile, you are responsible for setting the
logical extent of the metafile by calling SetWindowExt(). When playing
back a scalable metafile, the application can set the mapping mode to
MM_ANISOTROPIC and call SetViewportExt() to specify the desired size
of the metafile. When playing a scalable metafile into another
scalable metafile, the ratio of the logical extents must be used to
determine how far to offset the window origin, so the metafile will be
played in the correct location. Also, the viewport must be scaled
accordingly so the metafile being played in the destination metafile
DC will be the correct size. Calling SaveDC() before playing the
metafile and RestoreDC() after playing the metafile will preserve the
attributes of the destination metafile DC.
<P>
The following code can be used to play a scalable metafile into
another scalable metafile DC. Both the logical extents of the source
and destination are needed. The first parameter is the destination
metafile DC. The second parameter specifies the metafile that will be
played into the destination metafile DC. The next four parameters
specify a logical rectangle where the metafile will be played on the
destination metafile DC. The two parameters after that specify the
logical extents of the destination metafile DC, and the last two
parameters are the logical extents of the metafile being played.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>void PlayInMetafile(HDC hdcMeta,HMETAFILE hmf,int nLeftRect,
                    int nTopRect,int nRightRect,int nBottomRect,
                    int xLogExt, int yLogExt, int xHmfLogExt,
                    int yHmfLogExt)
{
    SaveDC(hdcMeta);
    OffsetWindowOrg(hdcMeta,-MulDiv(nLeftRect, xHmfLogExt,
                    nRightRect-nLeftRect), -MulDiv(nTopRect,
                    yHmfLogExt, nBottomRect-nTopRect));

    ScaleViewportExt(hdcMeta,nRightRect-nLeftRect,xLogExt,
                             nBottomRect-nTopRect,yLogExt);
    PlayMetaFile(hdcMeta,hmf);
    RestoreDC(hdcMeta,-1);
</PRE>}
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.10 view port<BR>
KBCategory: kbprg<BR>
KBSubcategory: GdiMeta<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 5, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
