

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SAMPLE: MENUITEMTEMPLATE Structure Is Documented Incorrectly </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q66247 ">
<META NAME="KBModify" CONTENT="1996/02/15">
<META NAME="KBCreate" CONTENT="1990/10/16">
<META NAME="Keywords" CONTENT="kbprg kbfile">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  The MENUITEMTEMPLATE structure is found in WINDOWS.H, which declares the structure as follows:     typedef struct        {        WORD    mtOption;        WORD    mtID;        char    mtString[1];        } MENUITEMTEMPLATE;  Single-item arrays, suc...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAVI,QDL9,QBWO,QBWN,QATX,QAIC,QAH4,QALG,QAAP,QBWQ,QAPF,QAO3,QAO2,QAMB,QAGI V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>SAMPLE: MENUITEMTEMPLATE Structure Is Documented Incorrectly</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 15, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q66247 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   versions 3.0 and 3.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The MENUITEMTEMPLATE structure is found in WINDOWS.H, which declares the
structure as follows:
<P>
<PRE>   typedef struct
       {
       WORD    mtOption;
       WORD    mtID;
       char    mtString[1];
       } MENUITEMTEMPLATE;

</PRE>Single-item arrays, such as mtString, provide a named field to use to
access memory. The actual text of the string is stored in the structure,
not a pointer to text stored elsewhere.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
MENUTEMP is a sample program in the Microsoft Software Library that
demonstrates using the MENUITEMTEMPLATE structure and the
LoadMenuIndirect() function.
<P>
Download MENUTEMP.EXE, a self-extracting file, from the Microsoft Software
Library (MSL) on the following services:

<UL><LI>Microsoft Download Service (MSDL)
<P><PRE>      Dial (206) 936-6735 to connect to MSDL
      Download <A HREF="http://support.microsoft.com/download/support/mslfiles/MENUTEMP.EXE">MENUTEMP.EXE</A> <I>(size: 21078 bytes)</I> 
</PRE>
<LI>Internet (anonymous FTP)
<P><PRE>      ftp ftp.microsoft.com
      Change to the \SOFTLIB\MSLFILES directory
      Get <A HREF="http://support.microsoft.com/download/support/mslfiles/MENUTEMP.EXE">MENUTEMP.EXE</A> <I>(size: 21078 bytes)</I> 
</PRE><P>
</UL>The declaration of MENUITEMTEMPLATE in WINDOWS.H from the Windows SDK
version 3.1 is correct. If a program attempts to assign an LPSTR to
mtString, the C compiler generates an error. Listed below is an erroneous
code sample:
<P>
<PRE>   MENUITEMTEMPLATE    mit;
   LPSTR               lpch;
   ...
   mit.mtString = lpch;
   ...

</PRE>The mtString field is a 1-byte placeholder for the array. Because a LPSTR
is 4 bytes long, it cannot be assigned to a 1-byte quantity.
<P>
The mtString[1] declaration in the structure serves as a placeholder for an
arbitrary number of characters. An application that uses the
MENUITEMTEMPLATE structure must allocate memory both for the template
itself and the string that is copied into mtString.
<P>
The following code sample demonstrates how an application might create a
MENUITEMTEMPLATE structure for a checked menu item having an ID value of
100 and "&amp;Menuitem" as its text:
<P>
<PRE>   HANDLE              hMem;
   LPMENUITEMTEMPLATE  lpmit;
   static char         szMenuItem[] = "&amp;Menuitem";

   ...

   // Note that the single char in the MENUITEMTEMPLATE structure
   // provides space for the null terminator on the string.
   hMem = LocalAlloc(LMEM_MOVEABLE, sizeof(MENUITEMTEMPLATE)
                                       + lstrlen(szMenuItem));

   // LocalLock function returns a near pointer;
   // no problem casting to a far pointer
   lpmit = (LPMENUITEMTEMPLATE)LocalLock(hMem);

   // Set the ID and the checked flag.
   lpmit-&gt;mtOption = MF_CHECKED;
   lpmit-&gt;mtID = 100;

   // Copy the menu item text.
   lstrcpy(lpmit-&gt;mtString, szMenuItem);

   ...

   // Make the following call, when a pointer is no longer needed.
   LocalUnlock(hMem);

   ...

   // Make the following call, when the MENUITEMTEMPLATE
   // is no longer needed.
   LocalFree(hMem);

   ...
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10 softlib docerr MENUTEMP.EXE<BR>
KBCategory: kbprg kbfile<BR>
KBSubcategory: UsrMen<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 15, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
