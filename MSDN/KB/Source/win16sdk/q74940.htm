

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Keeping MS-DOS-Based App Active Under Windows 3.1 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q74940 ">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1991/08/05">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  A brief discussion of how an MS-DOS-based application running under Windows standard mode can prevent a task switch is provided below. For a more detailed discussion, refer to Chapter 7 in the  MS-DOS Programmer's Reference  version 5.0 manual.  MO...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGI,QAHE,QAKR,QDL9,QBWO,QBWN,QAIF,QBWQ,QAEF,QA7H,QAUD,QANG,QADN,QAHC,QAJH V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Keeping MS-DOS-Based App Active Under Windows 3.1</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q74940 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
3.10
WINDOWS
kbprg
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   version 3.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
A brief discussion of how an MS-DOS-based application running under Windows
standard mode can prevent a task switch is provided below. For a more
detailed discussion, refer to Chapter 7 in the "MS-DOS Programmer's
Reference" version 5.0 manual.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The switcher API enables a conversation between a task switcher and
one or more other pieces of software called respondents/clients. Each
respondent is expected to provide a call-out function entry point. The
switcher calls this function to get information from the respondent.
The switcher also provides the responder with a call-in function,
which the responder can call to query the switcher.
<P>
The switcher builds a chain of respondents through the Build Call-Out
Chain call. This is an INT 2Fh call specified below:
<P>
On Entry: AX = 4B01H
<PRE>          ES:BX = 0:0
          CX:DX = call-in address of the switcher

</PRE>On Exit:  ES:BX = address of client's Switch_Call_Back_Info (SCBI)
<PRE>                  data

</PRE>Switch_Call_Back_Info is defined as follows:
<P>
Switch_Call_Back_Info STRUC
<PRE>  SCBI_Next      dd   ?    ; pointer to next client in the chain.
  SCBI_Entry_Pt  dd   ?    ; Call-Out function address of the client
  SCBI_Reserved  dd   ?    ; reserved for future use.
  SCBI_API_Ptr   dd   ?    ; pointer to list of asynchronous API info.
</PRE>Switch_Call_Back_Info ENDS
<P>
When the call is received by a responder, it should first call the
previous INT 2FH handler. The returned ES:BX should be saved in the
SCBI_Next field of its SCBI structure. After initializing the other
fields of the structure, return from the interrupt with ES:BX pointing
to its SCBI structure.
<P>
The call-in function of the respondent will now be called every time
some session-related activity takes place (such as creating a new
session, destroying a session, session switch, and so forth). Each
session is identified with a unique ID.
<P>
The call pertaining to the current topic is the Query_Suspend call
made by the switcher before switching away from an application (in the
case of Windows 3.1, even when switching away to an MS-DOS-based
application). The switcher calls the call-in function of each respondent
with the following parameters:
<P>
On Entry: AX = 1
<PRE>          BX = current session ID
          ES:DI = call-in address of switcher

</PRE>At this point, interrupts are enabled and MS-DOS calls can be made. The
application can fail this call by returning AX = 1 and can allow this
switch by returning AX = 0. If any respondent fails the call, the
switch is prevented. Global clients, such as network managers, can
take certain actions during this call to complete/suspend asynchronous
activity related to the session. If a safe switch is possible after
these actions, then they can allow the switch.
<P>
The respondent gets another chance to fail the switch even if all the
respondents return successfully from the Query_Suspend call. This is
the final opportunity for a respondent to fail the switch. The call-in
function of each respondent is called with the following parameters
(Suspend_Session call):
<P>
On Entry: AX = 2
<PRE>          BX = current session ID
          ES:DI = call-in address of switcher

</PRE>On Exit:  AX = 0 if switch can be performed safely, else 1
<P>
At this point, interrupts are disabled and MS-DOS calls may NOT be
made. If all respondents return with AX =0, the switch is performed.
<P>
The switcher also provides a way for a global respondent to maintain
per-session data, to test if some part of memory is local/global and
also to enable/disable the switcher.
<P>
In addition to the task switcher API defined in the MS-DOS
programmer's reference, another API has been implemented in Windows
3.1 for applications to obtain global memory (if available). This can
be used to maintain global data or interrupt handlers for applications
and allow a safe switch. For example, in Windows version 3.0, after an
asynchronous NetBIOS request, the user could not switch away from the
application that made the request; in Windows version 3.1, if global
memory is available, this switch can be made. To set global memory to
be reserved for all the applications, two switches are provided in the
SYSTEM.INI file. The global memory reserved by Windows is the sum of
NetHeapSize in the [standard] section and GlobalHeapSize in the
[NonWindowsApp] section. The default for GlobalHeapSize is zero. The
default for NetHeapSize is eight.
<P>
Users running a configuration with insufficient global memory can
encounter the error message "Switch has been prevented due to
asynchronous network activity" when an attempt is made to switch away
to an MS-DOS-based application from Windows, and when some asynchronous
activity has taken place from within Windows (for example, Terminal is
running).
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.10<BR>
KBCategory: kbprg<BR>
KBSubcategory: KrWoa<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
