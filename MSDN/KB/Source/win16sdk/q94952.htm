

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Linking Windows-Based Applications and DLLs with /NOI </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q94952 ">
<META NAME="KBModify" CONTENT="1997/07/23">
<META NAME="KBCreate" CONTENT="1993/01/26">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  The address of a function exported by an application or DLL must be resolved by the Windows loader or a call to GetProcAddress() before the function can be called by another application or DLL. If the function is exported by ordinal number (or by n...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAY5,QAUJ,QDL9,QBWO,QBWN,QBV8,QA3P,QAB9,QBWQ,QAGX,QAG8,QAGI,QARM,QAJH,QBVV V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Linking Windows-Based Applications and DLLs with /NOI</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 23, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q94952 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
3.10
WINDOWS
kbtool
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   version 3.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The address of a function exported by an application or DLL must be
resolved by the Windows loader or a call to GetProcAddress() before the
function can be called by another application or DLL. If the function
is exported by ordinal number (or by name and ordinal number), its
address can be resolved by the ordinal number. If no ordinal number is
given for an exported function, it is said to be exported by name only
and its address must be resolved by its name.
<P>
When resolving a reference by name in one application or DLL to a function
exported by another application or DLL, the Windows loader or
GetProcAddress() will convert the function name to uppercase and perform a
case-sensitive search. If a match is not found, the Windows loader displays
a dialog box with the "Call to Undefined Dynalink" message and a button to
close the offending application. If a match is not found, GetProcAddress()
returns NULL to signal failure. One possible cause of these errors is using
the /NOIGNORECASE (/NOI) linker option.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The information in this article depends on the development tools that you
are using. If you are not using Microsoft tools, please refer to the
documentation for your development tools.
<P>
<P><h3>C 6.0 and C/C++ 7.0</h3>
 
<P>
If an application or DLL exports __cdecl functions by name only and
is linked with /NOI (to preseve case), the Windows loader and
GetProcAddress() won't be able to resolve the function names when
performing the dynamic link, because Windows expects the names of the
exported functions to use all uppercase letters, and __cdecl functions use
mixed case. With the /NOI switch, only __pascal functions will be resolved,
because the compiler has already converted the names to all uppercase.
<P>
Without the /NOI switch, the linker will uppercase all function names,
regardless of calling convention (you can verify this in the new executable
header). Therefore the Windows loader and GetProcAddress() are able to
resolve the names.
<P>
<P><h3>Visual C++</h3>
 
<P>
The linker in Visual C++ always capitalizes the names of exported functions
in the DLL executable header, regardless of whether or not you link with
/NOI, and whether they functions are declared __cdecl or not. This was done
to avoid the problems described above. One thing that can cause a problem
is if you run implib on the DLL with /NOI and link your .EXE (or another
DLL) to this implib with /NOI, you'll get unresolved externals because the
import library has the names in all uppercase letters but the .EXE is
calling them mixed-case.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.10<BR>
KBCategory: kbtool<BR>
KBSubcategory: TlsMisc<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 23, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
