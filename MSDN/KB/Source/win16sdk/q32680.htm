

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ValidateFreeSpaces(), GlobalCompact(), and Wild Pointers </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q32680 ">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1988/07/11">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  The ValidateFreeSpaces() function does not work as documented on page 4-454 of the  Microsoft Windows Software Development Kit Reference Volume 1  for version 3.0. On page 964 of the  Programmer's Reference, Volume 2: Functions  manual from the Win...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QABH,QABI,QBW5,QDL9,QBWO,QBWN,QAO3,QAO2,QAH4,QAGI,QBWQ,QBW6,QA7H,QAY5,QANG V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ValidateFreeSpaces(), GlobalCompact(), and Wild Pointers</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q32680 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
3.00 3.10
WINDOWS
kbprg docerr
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   versions 3.0 and 3.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The ValidateFreeSpaces() function does not work as documented on page 4-454
of the "Microsoft Windows Software Development Kit Reference Volume 1" for
version 3.0. On page 964 of the "Programmer's Reference, Volume 2:
Functions" manual from the Windows 3.1 SDK, the ValidateFreeSpaces()
function is correctly documented.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
ValidateFreeSpaces() returns a void, not a LPSTR, as documented. Under the
debugging kernel, ValidateFreeSpaces() will RIP if it finds overwritten
free space; under the retail kernel, it does nothing.
<P>
To use ValidateFreeSpaces(), the WIN.INI file must include the following
statements:
<P>
<PRE>   [KERNEL]
   EnableHeapChecking=1
   EnableFreeChecking=1

</PRE>If an application calls ValidateFreeSpaces() and it discovers an error, it
will RIP with a fatal exit code of 0x00ff, "FREE MEMORY OVERWRITE AT," and
the address of the byte that was overwritten as Segment:Offset.
<P>
To build a fairly solid detector of wild pointers, an application writer
can use the following statements in the [KERNEL] section:

<OL><P><LI>EnableHeapChecking=1 to cause the kernel to regularly check the global
   arena.

<P><LI>EnableFreeChecking=1 to let ValidateFreeSpaces() check global free
   space.

<P><LI>EnableSegmentChecksum=1 to cause the kernel to check for corrupted code
   segments.
<P>
</OL>If the application then calls ValidateFreeSpaces() and GlobalCompact(-1)
regularly, it will catch almost all wild global pointers.
ValidateFreeSpaces() checks for any overwritten free blocks, and
GlobalCompact(-1) moves and discards memory, thereby forcing heap and
checksum checking.
<P>
Please note the following:

<UL><LI>CCh is used for the free-space fill byte because it will cause the
   debugger to breakpoint if a jump into free space is executed.

<LI>If EnableSegmentChecksum=1 is used, setting breakpoints may cause
   spurious 0x0409 RIPs.

<LI>Setting all of these checks will noticeably slow the system.

<LI>If bad free spaces exist, check for fatal exit FFs and LLLLLLLs before
   the address actually appears. A few fatal exits may have to be ignored
   before the address appears.
<P></UL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10<BR>
KBCategory: kbprg<BR>
KBSubcategory: KrDebug<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
