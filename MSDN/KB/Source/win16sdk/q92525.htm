

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the Setup Toolkit Function StampResource() </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q92525 ">
<META NAME="KBModify" CONTENT="1997/07/23">
<META NAME="KBCreate" CONTENT="1992/11/09">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  The StampResource() subroutine from the Setup toolkit can be used by a Setup script to overwrite a resource in an .EXE or .DLL with the specified data. The subroutine is useful for customizing a file's resources for the current installation.  The s...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QATX,QAA1,QAIM,QDI2,QANY,QABI,QAKC,QDL9,QBWO,QBWN,QBBI,QAJQ,QDNQ,QAGI,QAI4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Using the Setup Toolkit Function StampResource()</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 23, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q92525 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
3.10
WINDOWS
kbtool
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows version 3.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The StampResource() subroutine from the Setup toolkit can be used by a
Setup script to overwrite a resource in an .EXE or .DLL with the specified
data. The subroutine is useful for customizing a file's resources for the
current installation.
<P>
The syntax of a StampResource() call is:
<P>
<PRE>  StampResource szSection$, szKey$, szDst$, wResType%, wResId%,
                                                     szData$, cbData%

</PRE>The wResType% argument specifies the resource identification type. The
possible values are as follows:
<P>
<PRE>   CURSOR        1
   BITMAP        2
   ICON          3
   MENU          4
   DIALOG        5
   STRING        6
   FONTDIR       7
   FONT          8
   ACCELERATOR   9
   RCDATA        10
   GROUP_CURSOR  12
   GROUP_ICON    14
   VERSION       16

</PRE>These values are the values of the appropriate RT_ constants defined in
WINDOWS.H.
<P>
StampResource() finds the resource identified by wResType% and wResId% in
the file, and checks the size of the resource. If cbData% is less than or
equal to the size of the original resource, StampResource() overwrites the
first cbData% bytes of it; otherwise, it fails. Therefore, the script
author must make sure that cbData% is less than or equal to the size of the
original resource, and that the original resource is large enough to hold
the expected data.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The StampResource() subroutine can be used to overwrite a string resource
in a file with a user's name, company, or serial number when the file is
installed.
<P>
To overwrite a string resource, it is important to understand how string
resources are stored.
<P>
A string table consists of one or more separate resources (or segments),
each containing exactly 16 strings. The maximum length of each string is
255 bytes. One or more strings in a segment can be null or empty. The first
byte in the string specifies the number of characters in the string. For
null or empty strings, the first byte contains the value zero. The Windows
Resource Compiler (RC) allocates 16 strings per segment and uses the
identifier value to determine which segment is to contain the string.
Strings with the same upper-12 bits in their identifiers are placed in the
same segment.
<P>
With StampResource(), the wResId% is used to identify the segment; it
should be the upper-12 bits of the identifiers in the section plus 1. There
is no way to specify a specific string ID to overwrite. StampResource()
starts writing data at the beginning of the specified segment and continues
until cbData% bytes have been written. Therefore, with each call to
StampResource(), one should assume that any of the previous strings in the
segment will be overwritten. Because of this, make sure the strings that
you "stamp" never share a segment with "read-only" strings. To do this,
make the upper-12 bits of your stamp-string string identifiers different
from those of your read-only-string string identifiers.
<P>
To write the new strings for the segment, fill in szData$ with the strings
in the order of their identifiers. For simplicity's sake, it's recommended
that the string IDs be consecutive (in the .RC file), starting with one
whose lower-4 bits are 0 (zero). The string with 0000 in the lower-4 bits
of its identifier should go first. For each string, put its length followed
by the string itself in szData$. The length of szData$ should not be longer
than the total length of the original strings in the segment.
<P>
For example, an application could set up three strings, which would be
stamped with the user's name, the serial number, and the user's company
name at installation time. The application's .RC file could be arranged as
follows:
<P>
STRINGTABLE BEGIN
0x4500 "user name ------ Pad if necessary so you have room to use to"
0x4501 "serial number -- overwrite (total length of the new strings"
0x4502 "company name --- written must be less than the originals).  "
0x0001 "read-only string1"
0x0004 "read-only string2"
0x1007 "read-only string3"
0x1008 "read-only string4"
END
<P>
To stamp these strings with information collected from the user at set-up
time, call StampResource() from the Setup script with &amp;H451 for wResId%. &amp;H
means the number following is in hexadecimal. &amp;H451 is the upper-12 bits of
the stamp-string string IDs plus 1.
<P>
<PRE>   szUser$="Jane Doe"
   szSerial$="0123456789"
   szCo$="ACME Corp"
   szDat$=CHR$(LEN(szUser$))+szUser$+CHR$(LEN(szSerial$))+szSerial$
   szDat$=szDat$+CHR$(LEN(szCo$))+szCo$
   StampResource "Files","gen",DEST$,6,&amp;H451,szDat$,LEN(szDat$)
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.10<BR>
KBCategory: kbtool<BR>
KBSubcategory: TlsMss<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 23, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
