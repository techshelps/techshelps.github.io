

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Transmitting a BREAK Signal </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q119506">
<META NAME="KBModify" CONTENT="1997/07/23">
<META NAME="KBCreate" CONTENT="1994/08/17">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  A BREAK signal is a communications signal that allows two communications devices to transmit a  break  in the transmission line. This article discusses how a communications program implemented using the Microsoft Windows Communications API (Comm AP...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QANE,QAH6,QAFV,QAGI,QDL9,QBWO,QBWN,QAFK,QAU3,QAMR,QALA,QAFH,QAYY,QAK9,QAKD V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Transmitting a BREAK Signal</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 23, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q119506</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
3.10
WINDOWS
kbprg
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   version 3.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
A BREAK signal is a communications signal that allows two communications
devices to transmit a "break" in the transmission line. This article
discusses how a communications program implemented using the Microsoft
Windows Communications API (Comm API) can send a BREAK signal.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Despite its name, a BREAK signal may be employed to convey just about any
special condition as long as the sender and the receiver know the semantics
of the signal. A BREAK signal, sometimes mistakenly referred to as a BREAK
character, is any SPACE condition on the communication line that lasts
longer than a character and its framing bits.
<P>
Comm API contains two functions, SetCommBreak() and ClearCommBreak(), to
assist in sending a BREAK signal. Merely calling these two functions in
sequence will not cause a BREAK signal to be sent. Use one of the two
methods described below to transmit the BREAK signal:
<P>
<P><h3>Method 1</h3>
 
<P>
The International Consultative Committee for Telephone and Telegraph
(CCITT) modem recommendations require a break signal to be at least "2m+3"
bits long, where "m" is the nominal number of bit times in an asynchronous
character, usually 10; this means that the minimum break time is 23 bits,
with no maximum specified. Usually, much more than the minimum is sent,
such as 100 or 200 milliseconds (that is, hundreds of bit times at high
data rates). The timer resolution in a PC is sufficient for sending such
"long" BREAK signals, but not sufficient to send exactly 23 bit times.
<P>
An application can call SetCommBreak() to initiate the BREAK signal. Use
SetTimer() to set a timer and wait for the recommended duration, and then
call ClearCommBreak() to terminate the BREAK signal.
<P>
NOTE: If an application sends some data and subsequently calls
SetCommBreak() before that data has had a chance to make its way through
the transmit first in, first out algorithm (FIFO), the data will actually
be overwritten by the SetCommBreak() and not get onto the line. To prevent
such corruption, it is recommended that you pause for a while before the
SetCommBreak().
<P>
<P><h3>Method 2</h3>
 
<P>
An alternative means of sending a BREAK signal of shorter duration is to
temporarily change the data rate in the UART to half or 1/4 of the actual
line speed and then send a single NULL byte. This is more precise than
using SetCommBreak() and ClearCommBreak(), but it has the disadvantage of
corrupting received data during the time the BREAK signal is being sent
(because the received data rate is wrong during that time). An application
can change the date rate in the UART with a call to SetCommState(). The DCB
structure passed to SetCommState() specifies the new data rate.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information on the BREAK signal and the SPACE character, please
refer to "C Programmer's Guide to Serial Communications," second edition,
by Joe Campbell, published by SAMS Publishing.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.10 COM interrupt<BR>
KBCategory: kbprg<BR>
KBSubCategory: KrCommapi<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 23, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
