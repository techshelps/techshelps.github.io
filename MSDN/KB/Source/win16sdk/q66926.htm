

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Dialog Box Creation Fails If Text Starts w/ Character 255 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q66926 ">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1990/11/13">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  Text strings in a dialog box resource cannot start with the character represented by the value 255 (0xFF). In the ANSI character set, this character is the letter  y  with a diaeresis mark, which is used primarily in Nordic languages. If Windows en...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA01,QATX,QDL9,QBWO,QBWN,QAIJ,QAMB,QBWQ,QANX,QAKD,QDIV,QAWP,QAG8,QAWN,QAK3 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Dialog Box Creation Fails If Text Starts w/ Character 255</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q66926 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
3.00 3.10
WINDOWS
kbprg
 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   versions 3.0 and 3.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Text strings in a dialog box resource cannot start with the character
represented by the value 255 (0xFF). In the ANSI character set, this
character is the letter "y" with a diaeresis mark, which is used primarily
in Nordic languages. If Windows encounters this situation, a call to
DialogBox() or CreateDialog() will fail.
<P>
The following are two possible solutions:

<UL><LI>Create the control with some "dummy" text. Then, use the
   SetDlgItemText() function during the processing of the WM_INITDIALOG
   message to manually set the text of the control to its proper value.
   This is the preferred method.
<P>
   -or-

<LI>Instead of starting the text with the 255 character, use a space,
   followed by a backspace character and the 255 character. For example,
   the text in the dialog box script can be " \0008x", where "x" is the
   255 character. The embedded backspace erases the space, leaving only
   the 255 character.
<P>
</UL><h2>MORE INFORMATION</h2>
 
<P>
Windows uses the number 255 to indicate that a resource is represented by
ordinal value instead of by a string name. For example, when a dialog box
is declared as follows
<P>
<PRE>   AboutBox    DIALOG  ...

</PRE>the text "AboutBox" appears in the .RES file. However, using the following
<P>
<PRE>   1           DIALOG  ...

</PRE>places the bytes 0xFF 0x01 0x00 into the .RES file. The 0xFF is used to
indicate that the next two bytes are the ordinal value for this resource.
<P>
When creating a dialog box, the Windows Dialog Manager scans through each
string in the dialog box template to find the null terminator. However,
when a string that starts with 255 is encountered, it is interpreted as an
ordinal value. In this situation, Windows incorrectly skips the next 2
bytes and treats the new position as the next piece of data in the dialog
box template.
<P>
Whenever this occurs, the remainder of the dialog box template is
interpreted incorrectly, and Windows tries to create controls of unknown
classes, with unknown styles, in unknown locations. This causes the dialog
box creation to fail.
<P>
For additional information about dialog box creation failure reasons, query
on the following words in the Microsoft Knowledge Base:
<P>
<PRE>   createdialog and createdialogindirect and dialogbox and creation
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10 dialog box ANSI<BR>
KBCategory: kbprg<BR>
KBSubcategory: UsrDlgs<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
