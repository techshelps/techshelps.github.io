

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Combined Windows 3.0 and 3.1 Applications </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q99336 ">
<META NAME="KBModify" CONTENT="1997/07/23">
<META NAME="KBCreate" CONTENT="1993/05/26">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  When a combined Windows 3.0 and 3.1 application is run under the debugging version of Windows 3.0, during load time, a Fatal Exit message  Invalid Ordinal Reference  is displayed on the debug terminal followed by a stack trace.  Note, however, that...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWN,QDL9,QBWO,QBWQ,QAGI,QAY5,QAEV,QAJH,QAGQ,QAVX,QAGB,QAIF,QBV8,QAB9,QBVV V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Combined Windows 3.0 and 3.1 Applications</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 23, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q99336 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
3.00 3.10
WINDOWS
kbtool kbprg kbprb
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   version 3.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When a combined Windows 3.0 and 3.1 application is run under the debugging
version of Windows 3.0, during load time, a Fatal Exit message "Invalid
Ordinal Reference" is displayed on the debug terminal followed by a stack
trace.
<P>
Note, however, that the application continues to load and run successfully,
and therefore this error message can be ignored as long as the Windows 3.1
function is not actually called.
<P>
<P><h2>CAUSE</h2>
 
<P>
While loading an application, the Windows 3.0 kernel attempts to fix up
references to all function calls in the application. At load time, the
Windows 3.0 kernel is unaware of the version checking being done on the
Windows 3.1-specific calls. The version 3.0 kernel will attempt to fix up
the references to the Windows 3.1 calls too, which are undefined, and
therefore the Fatal Exit message is generated.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
The Fatal Exit message can be ignored because the application will run
successfully.
<P>
If this behavior (the Fatal Exit message) is not satisfactory, use the
following workaround to call Windows 3.1-specific calls in a Windows 3.0
application without generating any Fatal Exit messages:
<P>
extern BOOL fWin31;
<PRE>  // Assuming fWin31 is initialized appropriately using GetVersion().

       if (fWin31)
       {
          // Get the address of the Window 3.1-specific function.

         // First, load either USER.EXE, GDI.EXE, or KERNEL.EXE,
         // depending on which DLL the function resides in.
          LoadLibrary(...);

          // Get the address of that function using GetProcAddress().
          lpfnWin31FuncAddr = GetProcAddress(...);

          // Use this address to make the function call.
          (*lpfnWin31FuncAddr)(...);
        }

</PRE>This method will not generate a Fatal Exit message under the debug version
of Windows 3.0, because there is no direct reference made to a Windows 3.1
function.
<P>
For a quick reference on how this method works, please see the DIBVIEW
sample provided with the Windows SDK. The source file PRINT.C adopts this
same technique in the FindGDIFunction() routine before calling any GDI
functions specific to Windows 3.1.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft Windows version 3.0 applications can be written to conditionally
link to and use Windows version 3.1 functions to take advantage of the
newer features when running under Windows 3.1. This is explained in the
"Combined Windows 3.0 and 3.1 Applications" section on page 31 of the
Microsoft Windows SDK "Getting Started" manual for version 3.1.
<P>
This behavior may not be suitable for certain applications or could lead to
other problems. For example, on systems that do not have a debug terminal
connected to the COM1 port to receive debug information, Kernel will
display a "Cannot write to device AUX" message box or the system might
freeze. The debug message could be redirected from the AUX device to some
other destination, if desired. For information on how to do this, please
query on the following words in the Microsoft Knowledge Base:
<P>
<PRE>   redirect debug information
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.10 RIP<BR>
KBCategory: kbtool kbprg kbprb<BR>
KBSubcategory: TlsDbgWin<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 23, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
