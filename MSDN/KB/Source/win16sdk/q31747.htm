

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Changing the Mouse Cursor for a Window </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q31747 ">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1988/06/16">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  There are two different methods that an application can use to change the mouse cursor in a window:   - The application can use the SetCursor function, which will change    the mouse cursor immediately.   - The application can use the SetClassWord ...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAO2,QDL9,QBWO,QBWN,QAJH,QAGI,QAYL,QBWQ,QAH6,QAEV,QAY5,QAQ7,QAGQ,QAH4,QAYC V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Changing the Mouse Cursor for a Window</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q31747 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
3.00 3.10
WINDOWS
kbprg
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   versions 3.1 and 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
There are two different methods that an application can use to change
the mouse cursor in a window:

<UL><LI>The application can use the SetCursor function, which will change
   the mouse cursor immediately.

<LI>The application can use the SetClassWord function to change the
   mouse cursor for all windows of a particular window class. This
   method affects the mouse cursor only while it resides within the
   client area of a window of that class.
<P>
</UL>This article provides additional details regarding these two methods.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
A number of factors should be considered during the design of an
application that changes the mouse cursor. The major consideration is
that Windows sends the WM_SETCURSOR message any time the mouse cursor
moves on the screen. Normally, Windows sends the message to the window
"under" the mouse cursor. However, if a window sets the mouse capture,
using the SetCapture function, that window receives all mouse
messages, without regard to the position of the mouse cursor.
<P>
When an application calls SetCursor, the mouse cursor changes to
reflect the cursor specified in the call. The cursor retains that
shape until SetCursor is called again, either explicitly by the
application, by the DefWindowProc function, or by another application.
<P>
Because Windows is a nonpreemptive multitasking environment, no other
application will gain control of the processor until the application
that has the processor releases it. If the application calls one of a
number of Windows functions, it can potentially lose control of the
processor. For a list of Windows functions that can cause control of
the processor to pass between applications, search on the following
words in the Microsoft Knowledge Base:
<P>
<PRE>   prod(winsdk) and nonpreemptive and multitasking

</PRE>When the DefWindowProc or DefDlgProc function processes a WM_SETCURSOR
message, it calls SetCursor to change the cursor to the default cursor
for the application's window.
<P>
The application can prevent the cursor from changing by processing the
WM_SETCURSOR message. A typical application that processes
WM_SETCURSOR will have a global variable for the handle to the current
cursor. When the application receives a WM_SETCURSOR message, it
checks the global variable. If the variable is NULL, the application
passes the WM_SETCURSOR message to DefWindowProc. Otherwise, the
application calls SetCursor with the value in the global variable. To
return the cursor to the window default cursor, set the global
variable to NULL.
<P>
When Windows sends a WM_SETCURSOR message, it places the hit-test area
code into the low-order word of the lParam parameter. The application
can use the hit-test area code to determine what particular portion of
the window is "under" the mouse cursor. For more information on the
hit-test area codes, see the documentation for the WM_NCHITTEST
message in the "Microsoft Windows Software Development Kit Reference
Volume 1."
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10 RegisterClass<BR>
KBCategory: kbprg<BR>
KBSubcategory: UsrInp<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
