

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Why GlobalAlloc() Returns a Handle to a 0-Byte Segment </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q61777 ">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1990/05/09">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT=" When Calling GlobalAlloc() with a segment of size 0 (zero), Windows returns a handle to the memory. Attempting a GlobalLock() using that handle returns a NULL pointer. Since a 0-byte block of memory is treated by the system as if it is discarded, th...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAUD,QDL9,QBWO,QBWN,QAI4,QBWQ,QALG,QAEF,QBW6,QALW,QAHC,QAJQ,QAW6,QAPN,QAO3 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Why GlobalAlloc() Returns a Handle to a 0-Byte Segment</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q61777 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
3.00 3.10
WINDOWS
kbprg
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   versions 3.0 and 3.1
</UL> 
<P>
When Calling GlobalAlloc() with a segment of size 0 (zero), Windows
returns a handle to the memory. Attempting a GlobalLock() using that
handle returns a NULL pointer. Since a 0-byte block of memory is
treated by the system as if it is discarded, the following explains
how these memory handles can be reused.
<P>
Consider the following scenario:

<OL><P><LI>hMemory = GlobalAlloc (GMEM_MOVEABLE, 0L);
<P>
   This returns a handle to a block of memory of length 0 (zero).

<P><LI>wFlags = GlobalFlags (hMemory);
<P>
   wFlags is 0x4000, which is GMEM_DISCARDED. Thus, the memory object
   is thought of as if it has already been discarded.

<P><LI>lpszMemory = GlobalLock (hMemory);
<P>
   This fails. lpszMemory == 0.

<P><LI>hMemory = GlobalReAlloc (hMemory, 1L, GMEM_MOVEABLE);
<P>
   This returns the handle, and sets the size of the block to 1 byte.

<P><LI>wFlags = GlobalFlags (hMemory);
<P>
   wFlags = 0 (zero), which is GMEM_FIXED (Windows protected mode or in
   Windows 3.1, GMEM_FIXED and GMEM_MOVEABLE are the same).

<P><LI>lpszMemory = GlobalLock (hMemory);
<P>
   This returns a valid far pointer to a 1-byte buffer.
<P>
</OL>When the lock count of a GMEM_DISCARDABLE object reaches 0 (zero), it
is a candidate for discarding. If it has been discarded, it cannot be
locked or used because the memory it refers to has been deallocated.
However, it can be reallocated and then locked. As a result, the
memory handles are reused after having been discarded.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10<BR>
KBCategory: kbprg<BR>
KBSubcategory: KrMm<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
