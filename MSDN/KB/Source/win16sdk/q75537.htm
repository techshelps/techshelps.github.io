

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SAMPLE: DLLFLOAT Converts Floating-Point Numbers to Strings </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q75537 ">
<META NAME="KBModify" CONTENT="1996/02/15">
<META NAME="KBCreate" CONTENT="1991/08/25">
<META NAME="Keywords" CONTENT="kbprg kbfile">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  A small or medium model dynamic-link library (DLL) cannot use any of the C run-time functions provided with Microsoft C version 6.0 to convert a floating-point number to a character string. However, with Microsoft C/C++ version 7.0 you can use the ...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAY5,QAKC,QBFY,QBC6,QBV8,QAB9,QAG8,QATX,QANY,QDL9,QBWO,QBWN,QAPF,QAH4,QAEQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>SAMPLE: DLLFLOAT Converts Floating-Point Numbers to Strings</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 15, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q75537 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   versions 3.1 and 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
A small or medium model dynamic-link library (DLL) cannot use any of
the C run-time functions provided with Microsoft C version 6.0 to
convert a floating-point number to a character string. However, with
Microsoft C/C++ version 7.0 you can use the fcvt() and ecvt()
functions. The Windows wsprintf() function does not provide any
assistance because wsprintf() does not support floating-point numbers.
Therefore, a DLL must be compiled with Microsoft C/C++ version 7.0 or
provide its own code to perform the conversion.
<P>
DLLFLOAT is a file in the Software Library that contains a DLL-
compatible function to convert a floating-point number to a character
string.
<P>
Download DLLFLOAT.EXE, a self-extracting file, from the Microsoft Software
Library (MSL) on the following services:

<UL><LI>Microsoft Download Service (MSDL)
<P><PRE>      Dial (206) 936-6735 to connect to MSDL
      Download <A HREF="http://support.microsoft.com/download/support/mslfiles/DLLFLOAT.EXE">DLLFLOAT.EXE</A> <I>(size: 50225 bytes)</I> 
</PRE>
<LI>Internet (anonymous FTP)
<P><PRE>      ftp ftp.microsoft.com
      Change to the \SOFTLIB\MSLFILES directory
      Get <A HREF="http://support.microsoft.com/download/support/mslfiles/DLLFLOAT.EXE">DLLFLOAT.EXE</A> <I>(size: 50225 bytes)</I> 
</PRE><P>
</UL><h2>MORE INFORMATION</h2>
 
<P>
In the Windows environment, an application can use the C run-time
functions ecvt, fcvt, gcvt, and sprintf to convert a floating-point
number to a character string. However, none of these functions can be
used in a DLL because a DLL's data segment is not equal to its stack
segment and the design of each function assumes that the two segments
are identical.
<P>
To work around this assumption, a DLL must contain its own code to
perform the conversion. The DLLFLOAT example in the Microsoft Software
Library creates a function called ConvertFltToStr to convert a number
of the DOUBLE data type to a character string.
<P>
Even though ConvertFltToStr is a self-contained function, DLLFLOAT
contains a supporting function, MYfrexp, that works around a problem
in the small and medium model Microsoft C 6.0 run-time libraries.
ConvertFltToStr calls the frexp function to retrieve the mantissa and
exponent of the floating-point number. However, there is a problem
with the frexp function in the Microsoft C 6.0 small and medium model
DLL run-time libraries. For more information on this problem, please
query on the following words in the Microsoft Knowledge Base:
<P>
<PRE>   frexp

</PRE>The ConvertFltToStr and MYfrexp functions can be easily incorporated
into a DLL. All required variables and manifest constants are declared
inside each function. The DLL must declare a global or static string
variable to accept the results of the conversion and must include some
standard C run-time header files.
<P>
If the floating-point number is of an order of magnitude greater than
10 or less than negative 10, ConvertFltToStr converts the number using
scientific notation. Different formatting can be achieved by modifying
the code.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10 softlib DLLFLOAT.EXE<BR>
KBCategory: kbprg kbfile<BR>
KBSubcategory: KrDll<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 15, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
