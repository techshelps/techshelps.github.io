

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Stack Traces Under Windows 3.1 SDK Debugging Kernel </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q89331 ">
<META NAME="KBModify" CONTENT="1996/02/15">
<META NAME="KBCreate" CONTENT="1992/09/17">
<META NAME="Keywords" CONTENT="kbprg kbfile">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  When a FatalExit occurs, the Microsoft Windows operating system version 3.1 Software Development Kit (SDK) debugging kernel does not display a stack trace on the debugging monitor unless the user presses the ENTER or SPACEBAR key immediately after ...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWN,QDL9,QBWO,QAUD,QAEV,QBWQ,QAH7,QAYC,QBVV,QABA,QAY5,QAU3,QAMR,QAU5,QAGQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Stack Traces Under Windows 3.1 SDK Debugging Kernel</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 15, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q89331 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   version 3.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
When a FatalExit occurs, the Microsoft Windows operating system
version 3.1 Software Development Kit (SDK) debugging kernel does not
display a stack trace on the debugging monitor unless the user presses
the ENTER or SPACEBAR key immediately after the kernel displays the
"Abort, Break, Ignore" message. This behavior is different from that
found in the debugging kernel for Windows version 3.0 or prerelease
versions of Windows version 3.1.
<P>
The rationale behind changing this behavior was to simplify the
interface to the debugging kernel and to speed its execution. When a
FatalExit message occurs, a stack trace is available if desired.
However, the kernel does not take time to create and display unwanted
stack traces.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
In its default configuration, the Windows debugging kernel displays
messages on a serial terminal connected to the COM1 port. The kernel
produces four levels of messages: Trace, Warning, Error, and
FatalExit. Appendix C of the SDK "Programming Tools" manual and the
SDK Help system documents the Windows debugging kernel.
<P>
When the debugging kernel displays the "Abort, Retry, Ignore" message
for a FatalExit it does not display a stack trace immediately.
Instead, the kernel enters a loop, waiting for the user to respond. If
the user presses the SPACEBAR or ENTER key before the loop times out,
the kernel displays the stack trace. To continue execution after the
stack trace, press the I key to ignore the FatalExit. The other
options are to press the A key to abort execution or the B key to
break into the debugger.
<P>
The Windows 3.1 SDK includes an advanced sample application called
DBWIN that provides a good user interface and some useful features to
assist in debugging a Windows-based application with the debugging kernel.
If the advanced samples are installed into the default directory, the
DBWIN source code is in the C:\WINDEV\SAMLES\DBWIN directory.
<P>
DBWIN can redirect debugging messages into a window on the main
display or to a secondary monochrome monitor. However, when DBWIN
redirects messages in this manner, the debugging kernel ignores
FatalExit messages (irrespective of the debug settings). In other
words, no stack traces are available when DBWIN redirects debug
messages to a window or a secondary monochrome monitor. However,
stack traces are available when DBWIN redirects debugging information
to COM1 or COM2 as outlined above for a debugging terminal.
<P>
DBWIN ignores FatalExit messages because the system runs much faster
when it displays debugging messages in a window rather than on a
serial terminal. However, because a stack trace provides very useful
information to assist in debugging an application, this default
behavior might not be considered very useful.
<P>
The text below provides the modification to the DBWIN source code
required to provide stack traces in a window or on a secondary
monochrome monitor. The modified version of DBWIN produces a stack
trace for every FatalExit message displayed by the debugging kernel,
similar to the behavior of the Windows 3.0 debugging kernel. While the
system might run slowly with the modified DBWIN, the additional
debugging information might make the change worthwhile. The modified
version of DBWIN is available in the NUDBWIN file in the Software/Data
Library.
<P>
Download NUDBWIN.EXE, a self-extracting file, from the Microsoft Software
Library (MSL) on the following services:

<UL><LI>Microsoft Download Service (MSDL)
<P><PRE>      Dial (206) 936-6735 to connect to MSDL
      Download <A HREF="http://support.microsoft.com/download/support/mslfiles/NUDBWIN.EXE">NUDBWIN.EXE</A> <I>(size: 96777 bytes)</I> 
</PRE>
<LI>Internet (anonymous FTP)
<P><PRE>      ftp ftp.microsoft.com
      Change to the \SOFTLIB\MSLFILES directory
      Get <A HREF="http://support.microsoft.com/download/support/mslfiles/NUDBWIN.EXE">NUDBWIN.EXE</A> <I>(size: 96777 bytes)</I> 
</PRE><P>
</UL>The only modifications required are to the NotifyCallback function in
the DBWINDLL.C source file. Add the text in the lines that begin with
NEW to the file, as follows:
<P>
BOOL CALLBACK _export _loadds NotifyCallback(WORD id, DWORD dwData)
{
<PRE>    BOOL fHandled;
     .
     .
</PRE>NEW // By default, produce stack trace at every FatalExit
NEW static BOOL fStackTrace = TRUE;
<P>
<PRE>    // If we're not outputting anything,
    // just return FALSE to chain to next handler.
    if (modeOutput == OMD_NONE)
        return FALSE;

          .
          .
          .


    case NFY_INCHAR:
        switch (modeOutput)
        {
        case OMD_COM1:
        case OMD_COM2:
            fHandled = (BOOL)ComIn();
            break;

        default:
NEW         if (fStackTrace)
NEW            fHandled = (BOOL)' '; // Return a SPACEBAR press
NEW                                  // to produce stack trace
NEW         else
NEW            fHandled = (BOOL)'i'; // Return an I key press to
NEW                                  // ignore the FatalExit
NEW
NEW      // Do not produce the stack trace a second time at the
NEW      // "Abort, Break, Ignore" message. Ignore FatalExit this time
NEW      fStackTrace = !fStackTrace;
        }
        break;

          .
          .
          .
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.10 softlib NUDBWIN.EXE<BR>
KBCategory: kbprg kbfile<BR>
KBSubcategory: KrDebug<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 15, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
