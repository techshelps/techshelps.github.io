

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Windows-Based Application Installation Sample Code </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q66395 ">
<META NAME="KBModify" CONTENT="1996/02/15">
<META NAME="KBCreate" CONTENT="1990/10/24">
<META NAME="Keywords" CONTENT="kbtool kbfile">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  WINSET2 is a file in the Microsoft Software Library that contains the source code necessary to create a Windows-based application installation program. This program does the following:  1. Prompts the user for a directory into which to install the ...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAA1,QDI2,QDIZ,QAH4,QBXB,QATJ,QAJH,QAFI,QAGU,QAC9,QBFY,QAY2,QDL9,QBWO,QBWN V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Windows-Based Application Installation Sample Code</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 15, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q66395 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   versions 3.0 and 3.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
WINSET2 is a file in the Microsoft Software Library that contains the
source code necessary to create a Windows-based application installation
program. This program does the following:

<OL><P><LI>Prompts the user for a directory into which to install the
   application.

<P><LI>Checks for available disk space.

<P><LI>Creates directories as needed.

<P><LI>Copies the files from the installation source (the program will
   expand compressed files during the copy process, if necessary).

<P><LI>Adds icons to a Program Manager group if the Program Manager is the
   current shell program.
<P>
</OL>This program does not detect system hardware, and is designed to
install applications on an already existing Windows system.
<P>
Download WINSET2.EXE, a self-extracting file, from the
Microsoft Software Library (MSL) on the following services:

<UL><LI>Microsoft Download Service (MSDL)
<P><PRE>      Dial (206) 936-6735 to connect to MSDL
      Download <A HREF="http://support.microsoft.com/download/support/mslfiles/WINSET2.EXE">WINSET2.EXE</A> <I>(size: 78276 bytes)</I> 
</PRE>
<LI>Internet (anonymous FTP)
<P><PRE>      ftp ftp.microsoft.com
      Change to the \SOFTLIB\MSLFILES directory
      Get <A HREF="http://support.microsoft.com/download/support/mslfiles/WINSET2.EXE">WINSET2.EXE</A> <I>(size: 78276 bytes)</I> 
</PRE><P>
</UL><h2>MORE INFORMATION</h2>
 
<P>
The WINSET2 file contains an internal directory structure. The PKware
file extraction utility has a -D option switch that creates the
corresponding directory structure on the destination disk.
<P>
The following files are part of WINSET2:
<P>
BINCODE Directory
<PRE>    BINCODE     : Debug build NMAKE file (Microsoft C version 6.0)
    BINCODE.C   : BINXZ main code
    BINCODE.DEF : DEF file for BINXZ
    BINCODE.DLG : Dialog templates
    BINCODE.H   : BINXZ header file
    BINCODE.ICO : Setup icon
    BINCODE.MAK : Debug build MAKE file (Microsoft C version 5.1)
    BINCODE.RC  : Resource template
    BINCODE1.H  : BINXZ header file (describes resources)
    BINRET      : Retail build NMAKE file (Microsoft C version 6.0)
    BINRET.MAK  : Retail build MAKE file (Microsoft C version 5.1)
    DIALOGS.C   : Dialog box routines
    DOS.ASM     : Low-level MS-DOS routines in ASM
    EXPAND.LRG  : File decompression module, large model
    EXPAND.MED  : File decompression module, medium model
    EXPAND.SML  : File decompression module, small model
    GASGAUGE.C  : Gas gauge code file
    GASGAUGE.H  : Gas gauge header file
    IO.C        : Low-level MS-DOS routines in C
    PARSE.C     : INF file parser
    PROGDDE.C   : Program Manager dynamic-data exchange (DDE) routines
    SETUP.INF   : Sample SETUP.INF file

</PRE></OL>NOTE: Due to U.S. Government rules regarding the exporting of encryption
technologies, EXPAND.C cannot be distributed.
<P>
<P>
COMPEPND Directory
<PRE>    COMPRESS.EXE: MS-DOS-based file compressor
    EXPAND.EXE  : MS-DOS-based file uncompressor

</PRE>NOTE: It is a good idea to provide the EXPAND utility with the installed
application. This allows users to access the files on the distribution
disks.
<P>
<P>
SETUP Directory
<PRE>    SETUP       : NMAKE file (Microsoft C version 6.0)
    SETUP.C     : Setup stub loader source
    SETUP.DEF   : DEF file
    SETUP.MAK   : MAKE file (Microsoft C version 5.1)


</PRE>The following tools are required to build and use WINSET2:
<P>
- Windows Software Development Kit version 3.0 or later
- Windows version 3.0 or later
- Microsoft C version 6.0 or later
- Microsoft Macro Assembler version 5.1 or later
- MS-DOS version 3.1 or later
<P>
<P><h3>The Contents of a Release Setup Disk</h3>
 
<P>
The Setup program has two components, SETUP.EXE and BINXZ.EXE. Setup
spawns BINXZ, which actually performs the installation. If Setup
determines that it is running from a floppy disk, it will copy BINXZ
to the Windows directory on the user's hard disk. BINXZ will run
itself from the hard disk and delete itself when done. (BINXZ deletes
itself only if it is copied by Setup. If the file is already on the
hard disk, it will remain.)
<P>
Because Setup copies BINXZ to the hard disk, the program can use
traditional Windows programming methods (using movable, discardable
segments) and still allow the user to change disks in Drive A without
disrupting the process.
<P>
The first disk must contain files as follows:
<P>
<PRE>   A:\SETUP.EXE
   A:\SETUP.INF
   A:\BIN\BINXZ.EXE

</PRE>If Setup will be run from a hard disk or from a network, preserve the
contents of the BIN directory. Setup will run from a network or a hard
disk.
<P>
All files involved with the installation must be in subdirectories of
the "root" installation directory. This is done to prevent the user
from running the application(s) directly from the Setup disk.
<P>
<P><h3>The Contents of an Example Sample Disk</h3>
 
<P>
<PRE>   A:\SETUP.EXE
   A:\SETUP.INF
   A:\BIN\BINXZ.EXE
   A:\BIN\SOL.EXE
   A:\BIN\REVERSI.EXE
   A:\DLL\SOL.DLL
   A:\DLL\REVERSI.DLL
   A:\HLP\SOL.HLP
   A:\HLP\README.TXT

</PRE>The SOL.* files comprise one application. The user has the option to
install these files. The REVERSI.* files comprise a second
application. The user has the option to install these files. The
README.TXT file is required; the user does not have the option to omit
installing this file.
<P>
Setup shields the user from manually selecting SOL.EXE, SOL.DLL, and
SOL.HLP. Instead, the user chooses "Solitaire Game" and the system
does the necessary mapping to install the following three files:
<P>
<PRE>   \BIN\SOL.EXE
   \DLL\SOL.DLL
   \HLP\SOL.HLP

</PRE>The "nn" field in the [apps] section of SETUP.INF provides the
mechanism to do this. Arbitrarily choose one of the three files, for
example SOL.EXE, to be the "main" file. The other two files are marked
to depend on the main file. When the user chooses to install the main
file, Setup copies all three files to the hard disk. In this example,
the "nn" field for SOL.EXE would be 02, to indicate that the next two
files depend on SOL. These files must be listed sequentially in the
SETUP.INF file.
<P>
When the Solitaire application is installed, Setup can create an icon
for it in the Program Manager. Each icon must reside in a group.
Because an application cannot request the list of active groups from
the Program Manager using dynamic-data exchange (DDE), the Setup
program always creates a new group. The following lines in SETUP.INF
define a group called "A":
<P>
<PRE>    [progman]
       "A","Solitaire Application","SOL.GRP"

</PRE>The "Ic" field in the [apps] section specifies the group where the
icon will be placed. "IA" places the SOL.EXE icon into group "A."
<P>
Because the user has the option to install SOL.EXE, the "D" flag in
the [apps] section is also specified. In the "complex" version of
Setup, this flag adds the application to the Select list box and
allows the user to choose to install the application.
<P>
Each file must be associated with three of strings: the icon title,
the application's description (often the same as the icon title), and
a comment string (approximately 70 characters long). These fields are
appended to the description of SOL.EXE in the [apps] section. Finally,
the sizes of SOL.EXE, SOL.DLL, and SOL.HLP sum to 70 kilobytes. This
is indicated by the "70" size field at the end of the description.
<P>
The Solitaire entry in [apps] section of SETUP.INF will resemble the
following:
<P>
<PRE>   "0","02DIA","0","BIN","SOL.EXE","Solitaire","Solitaire","The most
</PRE>tested application ever!","70"
<PRE>   "0","",     "0","DLL","SOL.DLL"
   "0","",     "0","HLP","SOL.HLP"

</PRE>For an uncompressed file, the line in the [apps] section is as
follows:
<P>
<PRE>    X   flags   Y    Z   filename  icon title app title
    v  /     \  v  /   \ /       \ /       \  /        \
   "0","02DIA","0","BIN","SOL.EXE","Solitaire","Solitaire","The most
</PRE>tested application ever!","70"
<PRE>                          \  /
                          size

   The "X" field contains the source disk number.
   The "Y" field contains the destination directory number.
   The "Z" field contains the source and destination directory names.

</PRE>A compressed file is very similar, adding a "C" to the flags field, as
follows:
<P>
<PRE>   "0","C02DIA","0","BIN","SOL.EXE","Solitaire","Solitaire","The most
</PRE>tested application ever!","70"
<P>
The information for REVERSI.EXE is similar to that used above.
However, because REVERSI does not receive a Program Manager icon, the
"IA" flag is not specified.
<P>
Because the README.TXT file is required, its line resembles the
following:
<P>
<PRE>   "0","R","0","HLP","README.TXT","Read Me","Read Me","","1"

</PRE><h3>The Remainder of the SETUP.INF File</h3>
 
<P>
There are three other sections in the INF file: [setup], [disks], and
[directories]. The following sections provide some tips regarding
these sections.
<P>
The [setup] section provides additional information about the Setup
program.
<P>
"PACKAGENAME","Solitaire"
<PRE>   SETUP refers to the application it is installing by using the
   PACKAGENAME variable. This variable should contain the name of the
   product as it is listed on the packaging.

</PRE>"CAPTIONNAME","Solitaire Setup"
<PRE>   This caption is used by the Setup program in all of its dialogs.
   This variable usually contains the PACKAGENAME followed by "Setup."


</PRE>The [disks] section provides information about the Setup source disks.
<P>
"0","A:\","SOL Setup Disk #1"
<PRE>   This line indicates that disk #0 is called "SOL Setup Disk #1," and
   that it will be located in Drive A, by default. If Setup cannot
   find any files, it will also check the directory from which Setup
   was run (a network drive, a hard disk, or Drive B, as
   appropriate). After searching this drive, if Setup is still unable
   to find the file, it will prompt the user to insert "SOL Setup Disk
   #1."

</PRE>The [directories] section provides information about the destination
directories.
<P>
"0","C:\SOL","Solitaire App Dir"
<PRE>   This line specifies the "main" directory. This line must be present
   in the SETUP.INF file. This directory is presented as the default
   when Setup prompts the user where files should be installed. This
   must be directory "0."

</PRE>"A","\CHILD1","Solitaire Directory Child 1"
<PRE>   Setup builds child directories from the "main" directory. Valid
   child directory names are "A"-"Z."

</PRE><h3>Comments about the Source Code</h3>
 
<P>
The Setup program is designed to provide the maximum flexibility with
minimum modifications to the source code. However, many applications
require special functionality and some features that this code does
not provide. Some useful features that this code does not provide
include the following:
<P>
- Modifying the AUTOEXEC.BAT, CONFIG.SYS, or profile (INI) files. The
<PRE>  code to implement this functionality can be modeled on the code in
  PARSE.C, which retrieves information from the SETUP.INF file. The
  process of adding a new data structure to the SETUP.INF file for
  this additional data should be quite straightforward.

</PRE>- Determining system hardware. Setup is meant to be run on an
<PRE>  installed copy of Windows. It does not install Windows. Therefore,
  standard Windows calls such as the GetSystemMetrics function should
  be used to determine the system hardware.
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10 softlib WINSET2.EXE setup<BR>
installation share invalid media<BR>
KBCategory: kbtool kbfile<BR>
KBSubcategory: TlsMss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 15, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
