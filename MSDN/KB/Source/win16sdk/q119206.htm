

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using WM_COMMNOTIFY in an MFC Application </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q119206">
<META NAME="KBModify" CONTENT="1997/07/23">
<META NAME="KBCreate" CONTENT="1994/08/10">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  The Microsoft Foundation Classes (MFC) version 2.0 for Microsoft Windows version 3.1 does not encapsulate the WM_COMMNOTIFY message and the Windows Communications API. Therefore, MFC applications that need to use the Windows Communications API have...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWN,QDL9,QBWO,QAEV,QBVV,QBWQ,QABO,QDIT,QAUD,QAGI,QAY2,QAYC,QASR,QAH4,QAB5 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Using WM_COMMNOTIFY in an MFC Application</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 23, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q119206</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
3.10
WINDOWS
kbprg
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows,
   version 3.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The Microsoft Foundation Classes (MFC) version 2.0 for Microsoft Windows
version 3.1 does not encapsulate the WM_COMMNOTIFY message and the Windows
Communications API. Therefore, MFC applications that need to use the
Windows Communications API have to wrap that API into their classes. This
article discusses the steps involved in that process.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The steps to incorporate WM_COMMNOTIFY-based communications support to your
MFC-based Windows-based application are as follows:

<OL><P><LI>Specify a handler for the WM_COMMNOTIFY message using the OnMessage
   macro. The code to implement this step is shown below:
<P>
<P><PRE>      // In the class header file,
      // generated message map functions protected:
      //{{AFX_MSG(CMfccommView)
<PRE></PRE>           afx_msg LRESULT OnCommNotify(WPARAM wParam, LPARAM lParam);
           &lt;other handlers&gt;
      //}}AFX_MSG
      DECLARE_MESSAGE_MAP()

      // In the source file defining the class:
      BEGIN_MESSAGE_MAP(CMfccommView, CView)
           //{{AFX_MSG_MAP(CMfccommView)
           ON_MESSAGE(WM_COMMNOTIFY, OnCommNotify)
           &lt;other mappings&gt;
           //}}AFX_MSG_MAP
      END_MESSAGE_MAP()

</PRE><P><LI>Write the handler procedure OnCommNotify() to trap the CN_EVENT,
   CN_RECEIVE, and CN_TRANSMIT notifications.

<P><LI>Because WM_COMMNOTIFY is a message, it is always sent to a window. If
   you do not already have a window handle to receive this message, use the
   Create() member of the CWnd class to create a hidden window (do not
   specify WS_VISIBLE) and use that handle (m_hWnd member) in the call to
   EnableCommNotification().
<P>
   NOTE: Remember that merely creating an instance of CWnd does not create
   a window. A common error is to derive a class from CWnd and to call
   EnableCommNotification() in the constructor of the derived class. This
   fails because the window handle, m_hWnd, is NULL at this point.

<P><LI>Because you cannot return values from the constructor, the constructor
   is not a suitable place for initializing the communications port and
   device. Perform all initializations outside of the constructor in a
   member function created for initialization purposes. Remember to check
   all the return values from the communications API.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.10 comm COM open close<BR>
KBCategory: kbprg<BR>
KBSubcategory: KrCommapi<BR>
Keywords            : kb16bitonly<BR>
Technology          : kbMfc<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 23, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
