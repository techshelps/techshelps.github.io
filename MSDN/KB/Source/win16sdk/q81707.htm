

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WM_CTLCOLOR Processing for Combo Boxes of all Styles </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q81707 ">
<META NAME="KBModify" CONTENT="1997/07/23">
<META NAME="KBCreate" CONTENT="1992/03/15">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  Windows sends a WM_CTLCOLOR message to the parent of a control window to enable the parent to specify the color of the control. A notification code, which is the value of the high-order word of the lParam, accompanies the WM_CTLCOLOR message to ind...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWN,QDL9,QBWO,QBWQ,QAG9,QAPG,QAEV,QBV3,QAH4,QAHP,QAJH,QBVR,QA7O,QAOE,QAMN V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>WM_CTLCOLOR Processing for Combo Boxes of all Styles</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 23, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q81707 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
3.00 3.10
WINDOWS
kbprg
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   versions 3.1 and 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Windows sends a WM_CTLCOLOR message to the parent of a control window
to enable the parent to specify the color of the control. A
notification code, which is the value of the high-order word of the
lParam, accompanies the WM_CTLCOLOR message to indicate the control
type for a WM_CTLCOLOR message. Windows does not define a notification
code that enables an application to change the color of a combo box
control. However, Windows sends WM_CTLCOLOR messages to a combo box
control that relate to its component parts: one message for the list
box portion and, if applicable, another message for the edit control
portion. An application can subclass the control to intercept and
process these messages. This article discusses how to perform the
subclassing and how to address the problems that arise when an
application changes the colors of a combo box under Windows 3.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Under Windows versions 3.0 and later, Windows sends a WM_CTLCOLOR
message to a combo box for each of its individual elements. An
application can subclass the combo box control to process the message.
The text below discusses each of the combo box styles and how the
color can be changed for each style.
<P>
<P><h3>CBS_SIMPLE Style</h3>
 
<P>
Under Windows 3.0, an application must process three WM_CTLCOLOR
notifications codes, CTLCOLOR_EDIT, CTLCOLOR_MSGBOX, and
CTLCOLOR_LISTBOX, to change the colors for a CBS_SIMPLE-style list
box. Under Windows 3.1, the application is not required to process the
CTLCOLOR_MSGBOX notification.
<P>
Each time the application processes a notification, it must set the
foreground and background colors, using SetTextColor and SetBkColor,
respectively. The wParam accompanying the WM_CTLCOLOR message contains
a handle to the appropriate display context. In addition, the
application must return a valid handle to the appropriate background
brush that Windows will use to paint those areas not occupied by text.
<P>
<P><h3>CBS_DROPDOWN Style</h3>
 
<P>
To change the colors of a CBS_DROPDOWN-style combo box under Windows
3.0, process the same three notifications as for the CBS_SIMPLE combo
box. However, there is a difficulty with regard to setting the text
color. In the drop-down list box, the colors set with SetBkColor and
SetTextColor are not used. Instead, the combo box uses the system
default colors. As a workaround, change the combo box to the
owner-draw style. Process the WM_DRAWITEM message to draw the
individual items with the desired text colors.
<P>
For more information on using an owner-draw combo box in an
application, query on the following words in the Microsoft Knowledge
Base:
<P>
<PRE>   prod(winsdk) and owncombo

</PRE>Under Windows 3.1, it is not necessary to use an owner-draw combo box.
The application can process the CTLCOLOR_EDIT and CTLCOLOR_LISTBOX
notifications to change the color of a combo box.
<P>
<P><h3>CBS_DROPDOWNLIST Style</h3>
 
<P>
To change the color of a CBS_DROPDOWNLIST-style combo box, process the
CTLCOLOR_LISTBOX notification. However, the application must process
this notification in the combo box subclass procedure and in the
window procedure for the parent window of the combo box.
<P>
Under Windows 3.0, the text color problem discussed above for
CBS_DROPDOWN-style combo boxes is evident for CBS_DROPDOWNLIST combo
boxes. To address this problem, the application must use an owner-draw
combo box.
<P>
Although it is not necessary to use an owner-draw combo box under
Windows 3.1, the application must process the CTLCOLOR_LISTBOX
notification in both the combo box subclass procedure and in the
window procedure for the parent window of the combo box.
<P>
NOTE: WM_CTLCOLOR with codes is obsolete in Win32. Each code now has its
own message, such as WM_CTRLCOLORBTN, WM_CTLCOLORLISTBOX, and so forth.
Otherwise, things work the way they do in Windows 3.1.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10 combobox listbox<BR>
KBCategory: kbprg<BR>
KBSubcategory: UsrCtl<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 23, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
