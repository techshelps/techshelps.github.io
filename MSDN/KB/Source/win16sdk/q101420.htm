

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: Extra CN_RECEIVE/CN_TRANSMIT Events </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q101420">
<META NAME="KBModify" CONTENT="1995/04/04">
<META NAME="KBCreate" CONTENT="1993/07/13">
<META NAME="Keywords" CONTENT="kbprg kbbuglist">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  Using EnableCommNotification() to enable WM_COMMNOTIFY messages for CN_RECEIVE or CN_TRANSMIT events can cause spurious WM_COMMNOTIFY messages. At higher baud rates, this problem can cause a system to crash and reboot.  WM_COMMNOTIFY messages are r...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAHT,QAPN,QAO4,QDL9,QBWO,QBWN,QBVV,QAR6,QAEV,QA9N,QA5A,QAKC,QABI,QBWQ,QAKP V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: Extra CN_RECEIVE/CN_TRANSMIT Events</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 4, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q101420</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows,
   version 3.1
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Using EnableCommNotification() to enable WM_COMMNOTIFY messages for
CN_RECEIVE or CN_TRANSMIT events can cause spurious WM_COMMNOTIFY messages.
At higher baud rates, this problem can cause a system to crash and reboot.
<P>
WM_COMMNOTIFY messages are received with a 0 (zero) value for the
NotifyStatus parameter. The system crashes and reboots while receiving or
transmitting data.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
If the application is experiencing these symptoms, possible solutions are:

<UL><LI>Extra WM_COMMNOTIFY messages with NotifyStatus=0 can be ignored.

<LI>If the system is crashing, change the application to NOT enable
   CN_RECEIVE and CN_TRANSMIT events.

<LI>Enable the CN_EVENT notification for the EV_RXCHAR event by calling
   SetCommEventMask() then EnableCommNotification(). EV_RXCHAR is
   generated when any character is received and put into the queue. Make
   sure that EnableCommNotification() is called with -1 in both the
   cbWriteNotify and cbOutQueue parameters, such that the CN_RECEIVE and
   CN_TRANSMIT events are not enabled. This method is demonstrated in the
   TTY sample in the Windows Software Development Kit (SDK).

<LI>Instead of using EnableCommNotification, the application could poll
   for data. This could be implemented in the message loop of the
   application, or using a timer.

<LI>Modify COMM.DRV to work around this problem.
<P>
</UL><h2>STATUS</h2>
 
<P>
This problem has been reported as a bug. There will not be a fix for
COMM.DRV in Windows version 3.1.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
CN_RECEIVE events are generated when the number of bytes in the receive
queue exceeds the threshold (cbWriteNotify) set in EnableCommNotification()
or when a time-out occurs. After a CN_RECEIVE has been generated for
exceeding the cbWriteNotify threshold, another CN_RECEIVE should not be
generated until the number of bytes drops below cbWriteNotify then exceeds
it again.
<P>
CN_TRANSMIT events are generated similarly to CN_RECEIVE. The notification
threshold of the output queue is set in the cbOutQueue parameter of
EnableCommNotify. If the number of bytes in the output queue drops below
cbOutQueue, a CN_TRANSMIT should be generated. A new CN_TRANSMIT should not
be generated until the output queue exceeds, then drops below cbOutQueue
again.
<P>
However, if interrupts arrive fast enough, extra "threshold" CN_RECEIVEs
(or, similarly, CN_TRANSMITs) may be generated before the size of the
output queue drops below then again exceeds cbWriteNotify. These extra
events can be ignored; however, this characteristic may cause the system to
reboot, especially at higher baud rates.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: buglist3.10 3.10<BR>
KBCategory: kbprg kbbuglist<BR>
KBSubcategory: KrCommapi<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 4, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
