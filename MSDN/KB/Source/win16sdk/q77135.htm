

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Different Ways to Close an Application Under Windows </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q77135 ">
<META NAME="KBModify" CONTENT="1997/07/23">
<META NAME="KBCreate" CONTENT="1991/10/08">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  In the Microsoft Windows graphical environment, an application can close in two different ways. The first method involves the user closing the application, which includes choosing a menu item, double- clicking the application's system menu, or choo...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWN,QDL9,QBWO,QAJH,QAGB,QBWQ,QAEV,QAGU,QAYC,QBRT,QAAW,QAH6,QBXS,QAPN,QAGQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Different Ways to Close an Application Under Windows</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 23, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q77135 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
3.00 3.10
WINDOWS
kbprg
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   versions 3.1 and 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In the Microsoft Windows graphical environment, an application can
close in two different ways. The first method involves the user
closing the application, which includes choosing a menu item, double-
clicking the application's system menu, or choosing End Task in the
Windows Task Manager. The second method involves the user ending the
Windows session in the active shell program (either Program Manager or
File Manager).
<P>
In these two methods, the application receives different sets of
messages. If an application must perform certain operations before it
can exit properly, it must process the messages associated with each
method. This article discusses these messages and how to process them.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Method 1</h3>
 
<P>
The three sets of actions below are facets of the first method above:

<OL><P><LI>When the user double-clicks the application's system menu or
   chooses Close from the system menu, Windows sends a WM_SYSCOMMAND
   message to the application with wParam set to SC_CLOSE. If the
   user enters the ALT+F4 accelerator for Close, Windows posts the
   WM_SYSCOMMAND message to the application. If the application passes
   the WM_SYSCOMMAND message to DefWindowProc, the application
   receives a WM_CLOSE message.

<P><LI>If the user chooses End Task in the Windows Task Manager, the Task
   Manager posts a WM_CLOSE message to the application's main window.

<P><LI>If the application has an Exit option on its File menu, it should
   be coded to generate a WM_CLOSE message.
<P>
</OL>When an application receives a WM_CLOSE message, it must determine
whether the user has modified any files without saving the changes. If
so, the application must inform the user that changes have not been
saved and provide an opportunity to save the files, to close the
application without saving the files, or to cancel the application
termination request.
<P>
If the application is to close, it must call the DestroyWindow
function to destroy the main window. If the user is not ready to close
the application, the application must not pass the WM_CLOSE to
DefWindowProc because it will call DestroyWindow.
<P>
DestroyWindow recursively destroys all child windows of the main
window and all windows owned by the main window. If the application
has created windows that are neither children of nor owned by the main
window, the application must explicitly destroy these windows.
<P>
<P>
<P><h3>Method 2</h3>
 
<P>
In the second method listed above, when the user ends the Windows
session from the active shell program (Program Manager or File
Manager), Windows sends a WM_QUERYENDSESSION message to all tasks in
the system. An application can process this message to determine when
the user terminates the Windows session. When an application receives
a WM_QUERYENDSESSION message, if files have been changed and the
changes have not been saved, the application must inform the user and
confirm the request to close the application. If the application
receives confirmation, it must return TRUE after processing the
WM_QUERYENDSESSION message. If the user does not confirm closing the
application, it must return FALSE to cancel closing Windows.
<P>
If any application cancels closing Windows in response to a
WM_QUERYENDSESSION message, Windows sends a WM_ENDSESSION message with
wParam set to FALSE for all applications. This informs each
application that the Windows session will continue.
<P>
If all applications return TRUE after processing the
WM_QUERYENDSESSION message, Windows sends each application a
WM_ENDSESSION message with wParam set to TRUE. This informs the
application that the current Windows session will end very shortly.
After the WM_ENDSESSION message, an application receives neither a
WM_CLOSE nor a WM_DESTROY message.
<P>
In summary, if an application must perform operations before it can
exit, such as saving files, the application must be prepared for both
the application close and Windows shutdown cases.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10<BR>
KBCategory: kbprg<BR>
KBSubcategory: UsrWndw<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 23, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
