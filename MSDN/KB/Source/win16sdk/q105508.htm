

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Summary List of Windows SDK Version 3.1 Bugs </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q105508">
<META NAME="KBModify" CONTENT="1997/06/09">
<META NAME="KBCreate" CONTENT="1993/10/20">
<META NAME="Keywords" CONTENT="GenSDK kblist kbbuglist kbfile kbref kbtlc">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  The information in this article is a summary of individual articles contained in the Microsoft Knowledge Base. These articles can be found by querying on the article's ID number or on words in the title and text. The Microsoft Knowledge Base can be...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QDIX,QAKP,QDL9,QBWO,QBWN,QAUD,QBVV,QADF,QBKN,QAAP,QBWQ,QAGI,QAB4,QAY5,QATX V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Summary List of Windows SDK Version 3.1 Bugs</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 9, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q105508</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) version 3.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The information in this article is a summary of individual articles
contained in the Microsoft Knowledge Base. These articles can be found by
querying on the article's ID number or on words in the title and text.
The Microsoft Knowledge Base can be accessed on the Internet
(www.microsoft.com). A compiled help file containing the bug list
information can be found in the Microsoft Software Library and on the
Microsoft Download Service (MSDL).
<P>
Download SDKBUGS.EXE, a self-extracting file, from the Microsoft Software
Library (MSL) on the following services:

<UL><LI>Microsoft Download Service (MSDL)
<P><PRE>      Dial (206) 936-6735 to connect to MSDL
      Download <A HREF="http://support.microsoft.com/download/support/mslfiles/SDKBUGS.EXE">SDKBUGS.EXE</A> <I>(size: 170275 bytes)</I> 
</PRE>
<LI>Internet (anonymous FTP)
<P><PRE>      ftp ftp.microsoft.com
      Change to the \SOFTLIB\MSLFILES directory
      Get <A HREF="http://support.microsoft.com/download/support/mslfiles/SDKBUGS.EXE">SDKBUGS.EXE</A> <I>(size: 170275 bytes)</I> 
</PRE><P>
</UL><h2>BUG LISTING</h2>
 

<UL><LI>BUG: No WM_SETFONT to Custom Controls
<LI>BUG: RC Error RW1008 If NULL Entry in PATH
<LI>BUG: Complex Graphics Image Partially Printed
<LI>BUG: FatalExit() Interacts Through Terminal Only
<LI>BUG: MapVirtualKey() Maps Keypad Keys Incorrectly
<LI>BUG: Crash with frexp() in Small or Medium Model DLL
<LI>BUG: Combo Boxes in DS_SYSMODAL Dialog Boxes
<LI>BUG: PostScript Driver Version 3.4 Returns Incorrect Page Size
<LI>BUG: Protected-Mode GlobalCompact() Return Not Free Memory
<LI>BUG: Text Formatting Lost When Edit Text Dialog Box Used
<LI>BUG: Common Dialog GP-Fault on ESC Key with Mouse Button Down
<LI>BUG: Data Errors on 14400 Baud Serial Communications
<LI>BUG: GlobalPageLock() Moves Memory Fixed by GlobalFix()
<LI>BUG: GetModuleFileName() Returns Relative File Path
<LI>BUG: System Menu Wrong for CS_NOCLOSE-Style MDI Child
<LI>BUG: Buttons Painted Incorrectly After Color Changed
<LI>BUG: SETCOLORTABLE Escape Disables Dithering
<LI>BUG: GetGlyphOutline() Returns Blank Bitmap
<LI>BUG: Input Focus Lost When Control Returns From Windows Help
<LI>BUG: LIBENTRY.ASM Missing Include File Error
<LI>BUG: MDI More Windows Dialog Activates Wrong Child
<LI>BUG: PrintForm() Does Not Print Ink from Control
<LI>BUG: Dictionary Receives No DIRQ_SYMBOLGRAPH Message
<LI>BUG: Help Compiler Hangs When .HPJ File [MAP] Section Too Big
<LI>BUG: OpenFile() API Fails on Novell Temp Drive
<LI>BUG: HPPCL Driver Reports SETABORTPROC Not Supported
<LI>BUG: Color PostScript Drivers Report Incorrect Data
<LI>BUG: GetGlyphOutline() Returns Partial Glyph
<LI>BUG: Scrolling DIB DC Fails
<LI>BUG: Setup CreateProgmanItem Does Not Overwrite Item
<LI>BUG: BitBlt() Bitmap on VGA Display Causes GP Fault
<LI>BUG: HC Error 2050 from #include in Help Project File (.HPJ)
<LI>BUG: No Dr. Watson Log File in Drive's Root Directory
<LI>BUG: Minimized Windows Help Yields Incorrect Icon
<LI>BUG: Complex Clipping Region Might Cause UAE/GP Fault
<LI>BUG: Cannot Map TT Font to Same Name PostScript Device Font
<LI>BUG: CreatePatternBrush() with Large Bitmap GP Fault
<LI>BUG: Superclassed Scroll Bar's Parent Not Sent WM_CTLCOLOR Msg
<LI>BUG: ProgMan DDE Reload() Command Does Not Work Properly
<LI>BUG: PostScript Handles lfItalic Field Incorrectly
<LI>BUG: Graphics Operations Consume GDI Memory
<LI>BUG: ETO_CLIPPED Does Not Clip Rotated Text
<LI>BUG: Application Errors From Long Text in the Dialog Editor
<LI>BUG: RC /fe Switch Does Not Work
<LI>BUG: UngetCommChar() Causes Character Loss or GP Faults
<LI>BUG: StretchDIBits() Prints Wrong Part of DIB with PSCRIPT.DRV
<LI>BUG: OpenFile() Fails When UNC Name Longer than 11 Chars
<LI>BUG: Extra CN_RECEIVE/CN_TRANSMIT Events
<LI>BUG: DDESPY GP Faults Upon Return of CBR_BLOCK
<LI>BUG: 32K Limit on Input/Output Queues in COMM.DRV
<LI>BUG: AddAtom Causes Divide by Zero Error
<LI>BUG: EV_RLSDS Event Does Not Indicate Current RLSD State
<LI>BUG: Iconic MDI Application Titles Do Not Update Properly
<LI>BUG: SetDIBitsToDevice Faults on 24-BPP PM-Style DIBs
<LI>BUG: StretchDIBits Faults on 24-BPP PM-Style DIBs
<LI>BUG: PALETTEINDEX Not Working for Thin Lines on HP PaintJet
<LI>BUG: SelectClipRgn() Does Not Update Properly on Printer
<LI>BUG: SetPixel() Doesn't Work Properly on a PS Printer
<LI>BUG: System-Wide WH_DEBUG Hook Causes a GP Fault
<LI>BUG: Resolutions for DBWIN Utility Continuous Beeping
<LI>BUG: Menu Bar Covered By Main Window Client Area
<LI>BUG: SetAbortProc() Incorrectly Returns Failure
<LI>BUG: GP Fault in LoadLibrary() with C++ DLL
<LI>BUG: Problem with DrawText Statement
<LI>BUG: Palettes Realized in a Memory DC May Corrupt Screen
<LI>BUG: SystemParametersInfo() Does Not Modify WIN.INI
<LI>BUG: DDEML Fails to Free Item Name HSZ on a LATEACK
<LI>BUG: Ampersand in Menu Item Is Not Converted
<LI>BUG: SetWindowPlacement and ptMin.x or ptMax.x = -1
<LI>BUG: MDI Child Window's "Minimize" System Menu Disabled
<LI>BUG: DDE Warning Message: Invalid Value: -32767
<LI>BUG: MoveTo/LineTo Causes Divide by 0 Error
<LI>BUG: Gaps Between Wedges Drawn with Pie()
<LI>BUG: DDE Warning Message: Invalid Value: -32767
<LI>BUG: Nonscrolling Region in Help File Topic Does Scroll
<LI>BUG: Size of Owner-Draw Drop-Down Combo Box in Dialog Is Wrong
<LI>BUG: Screen Saver Does Not Start
<LI>BUG: SetWindowPos() on an Iconic Window and its Caption
<LI>BUG: R2_XORPEN Binary ROP Code Ignored for Wide Pens
<LI>BUG: Pie() and Arc() Functions Fail with a Wide Pen
<LI>BUG: Vector Font Rotation Skewed with Non-Top-Left Alignment
<LI>BUG: Text Truncated in Edit Control
<LI>BUG: LineTo() Endcaps Misaligned with Large Pen Width
<LI>BUG: Rotated TrueType Font Repaints Many Times
<LI>BUG: Some ROP Codes Cause Inconsistent Polygon() Line Segments
<LI>BUG: Pie() Vertex Not Drawn Completely with Wide Pen
<LI>BUG: Arc() Not Drawn Completely with a Wide Pen
<LI>BUG:SelectPalette in Metafile Ignores Force-to-Background Flag
<LI>BUG: Occasional Gap Between Adjacent Pie() Wedges
<LI>BUG: GetRasterizerCaps Returns Zero When TrueType Is Disabled
<LI>BUG: _lread() Functions Incorrectly When No Floppy in Drive
<LI>BUG: OpenFile() Doesn't Handle Forward Slash ("/") Character
<LI>BUG: Brush Misaligned in PaintRgn()
<LI>BUG: Some TrueType Character Pairs Run Together on VGA
<LI>BUG: IsBadStringPtr() Reports Bad String as Valid
<LI>BUG: DeleteObject() Generates Debug Errors in WEP
<LI>BUG: DPMI Function 0203h Does Not Report Error
<LI>BUG: FreeSelector() Frees More Than One Selector
<LI>BUG: Dr. Watson Fails to Write Log File
<LI>BUG: Debug Kernel Ignores Fatal Exits When OutputTo=
<LI>BUG: Opaque Rectangle Too Small on Rotated TrueType Fonts
<LI>BUG: Character Background Is Not Painted Correctly
<LI>BUG: Polygons Drawn with Pens of Odd Width (&gt; 5) Misalign
<LI>BUG: Misleading Default Pushbutton Painting
<LI>BUG: GetPrivateProfileInt() May Not Read Correct Value
<LI>BUG: GlobalCompact() May Return an Inaccurate Value
<LI>BUG: Explicitly Loaded Modules Not Removed from Memory
<LI>BUG: LoadResource() GP Faults When Passed an Invalid HRSRC
<LI>BUG: ROP2 Code Applied Incorrectly in Pie() Function
<LI>BUG: LB_SETTOPINDEX Doesn't Conform to Documentation
<LI>BUG: EM_CANUNDO Returns Zero After EM_REPLACESEL
<LI>BUG: Left Part of Character Is Clipped with ExtTextOut/TextOut
<LI>BUG: DrawFocusRect Fails in MM_LOMETRIC or MM_ISOTROPIC Mode
<LI>BUG: GetGlyphOutline() with GGO_BITMAP Fails with Large Scale
<LI>BUG: Edit Controls and WS_CLIPCHILDREN Function Differently
<LI>BUG: Printer Driver Receives "bigfonts" When Not Supported
<LI>BUG: StretchDIBits Not Correctly Stretching RLE DIBs w/ Jumps
<LI>BUG: StretchBlt() Does Not Perform Palette Translations
<LI>BUG: TabbedTextOut() in Metric Mapping Mode Incorrect
<LI>BUG: Driver vs. GDI-Simulated Styled Lines Don't Match
<LI>BUG: GP Fault When Drawing on a Memory-Based DC
<LI>BUG: StretchBlt()/StretchDIBits() Fail with Very Large Stretch
<LI>BUG: Outline of a Pie() Slice May Not Be Completely Smooth
<LI>BUG: GetTimerResolution not in LIBW.LIB
<LI>BUG: General Protection Fault When Accessing an HFONT
<LI>BUG: DDESPY and Ctrl Key Cause GP Fault in Windows NT
<LI>BUG: Caching GDI Objects Causes Temporary GDI Resource Leak
<LI>BUG: MCIWndClass Popup Window Palette Flashes
<P>
</UL> 
<P><h3>BUG: No WM_SETFONT to Custom Controls</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q70818.htm">Q70818</A></B>
<P>
In the Dialog Editor, when the font of the dialog box is changed, the
text of custom controls that process WM_SETFONT messages does not
change.
<P>
 
<P><h3>BUG: RC Error RW1008 If NULL Entry in PATH</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q71022.htm">Q71022</A></B>
<P>
The resource compiler (RC) exits with the message "fatal error RW1008:
RCPP.EXE not found."
<P>
 
<P><h3>BUG: Complex Graphics Image Partially Printed</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q72493.htm">Q72493</A></B>
<P>
When an application uses the clipping functions to print a complex graphics
image on a high resolution output device, the printed output is incomplete;
portions of the image are missing.
<P>
 
<P><h3>BUG: FatalExit() Interacts Through Terminal Only</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q72497.htm">Q72497</A></B>
<P>
Under the debugging version of Windows, when a debugger is not in use
and the FatalExit() function interacts with the user, the interaction
is through a terminal connected to the AUX port and not through the
console keyboard and a secondary monitor if one is installed.
<P>
 
<P><h3>BUG: MapVirtualKey() Maps Keypad Keys Incorrectly</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q72583.htm">Q72583</A></B>
<P>
When MapVirtualKey() is passed valid virtual key codes for the keys on
the numeric keypad, invalid scan codes and ASCII codes are returned.
<P>
 
<P><h3>BUG: Crash When frexp() in Small or Medium Model DLL</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q73184.htm">Q73184</A></B>
<P>
Although the C run-time function frexp() is included in the Windows version
libraries for dynamic-link libraries (DLLs), when it is called from a
Windows small model or medium model DLL, the application crashes.
<P>
 
<P><h3>BUG: Combo Boxes in DS_SYSMODAL Dialog Boxes</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q74507.htm">Q74507</A></B>
<P>
When a combo box with the CBS_DROPDOWN or CBS_DROPDOWNLIST style is used
inside a system modal dialog box, it causes the following problem in
Windows versions 3.0 and 3.1:

<OL><P><LI>An item cannot be selected from the drop-down list box by
   clicking it with the mouse. The original selection remains in
   the edit control or static-text control.
<P>
</OL>Using a combo box with the CBS_DROPDOWN or CBS_DROPDOWNLIST style within a
system modal dialog box in Windows version 3.0 causes the following
problems:

<OL><P><LI>The drop-down list box cannot be closed by clicking on a part of
   the list box that lies outside the dialog box.

<P><LI>The parts of the drop-down list box that lie outside the dialog
   box are not erased when the drop-down list box is closed.
<P>
</OL> 
<P><h3>BUG: PostScript Driver Version 3.4 Returns Incorrect Page Size</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q76364.htm">Q76364</A></B>
<P>
In version 3.4 of the PostScript printer driver, when the DC_PAPERSIZE
index is specified in the DeviceCapabilities function, the width of the
paper is returned for both the x and y coordinates in each POINT structure.
This function should return the height and width of each supported paper
size.
<P>
 
<P><h3>BUG: Protected-Mode GlobalCompact() Return Not Free Memory</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q76686.htm">Q76686</A></B>
<P>
When Windows is running in one of its protected modes, the value returned
by the GlobalCompact() API does not accurately reflect the amount of free
memory available in the system.
<P>
In enhanced mode, Windows can swap memory objects to disk. This process
takes a long time relative to accessing an object in memory. Therefore,
GlobalCompact() returns the amount of memory available without performing
any paging.
<P>
In standard mode, GlobalCompact() never reports more than 1 megabyte (MB)
of memory free because of a memory allocation limit on the 80286 chip.
<P>
 
<P><h3>BUG: Text Formatting Lost When Edit Text Dialog Box Used</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q80143.htm">Q80143</A></B>
<P>
When the Edit Text dialog box is used to edit formatted text in an
application developed for Microsoft Windows for Pen Computing, formatting
is lost.
<P>
 
<P><h3>BUG: Common Dialog GP-Fault on ESC Key with Mouse Button Down</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q83009.htm">Q83009</A></B>
<P>
In an application that uses the File Open or Save As dialog box from the
Common Dialogs dynamic-link library (DLL), when the user opens a combo box
with the mouse, holds down the left mouse button, and then presses the ESC
key to close the dialog box, a GP-fault occurs.
<P>
 
<P><h3>BUG: GlobalPageLock Moves Memory Fixed by GlobalFix</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q85329.htm">Q85329</A></B>
<P>
When an application calls the GlobalPageLock() function specifying the
handle to a block of memory that has been fixed in place by the GlobalFix()
function, the address of the memory block can change.
<P>
 
<P><h3>BUG: GetModuleFileName Returns Relative File Path</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q85330.htm">Q85330</A></B>
<P>
When the GetModuleFileName() function returns a reference to a dynamic-link
library (DLL) file, the reference is relative (not fully qualified) under
the following circumstances:

<UL><LI>One of the directory references in the MS-DOS PATH environment variable
   is relative. Assume that the relative directory reference refers to
   drive X.

<LI>An application is implicitly linked to a DLL. The DLL is installed in
   the current (default) directory of drive X.

<LI>The application is installed in a directory other than the one in which
   the DLL is installed.
<P>
</UL> 
<P><h3>BUG: System Menu Wrong for CS_NOCLOSE-Style MDI Child</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q85331.htm">Q85331</A></B>
<P>
When an application registers a window class with the CS_NOCLOSE style and
creates a multiple document interface (MDI) child window using the class,
the menu items in the child window's system menu are incorrect.
Specifically, the Switch To option appears where the Next option belongs.
Choosing Switch To activates the Windows Task Manager.
<P>
 
<P><h3>BUG: Buttons Painted Incorrectly After Color Changed</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q85593.htm">Q85593</A></B>
<P>
When the Colors application in the Control Panel is used to change the
button shadow color to white, all push button windows are painted
incorrectly. Specifically, the Button Shadow and Button Highlight colors
are not painted at all.
<P>
 
<P><h3>BUG: SETCOLORTABLE Escape Disables Dithering</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q85596.htm">Q85596</A></B>
<P>
When the VGAPAL video driver is installed on a system, once an application
calls the SETCOLORTABLE escape to change an entry in the color table
associated with a device context, Windows does not create any dithered
brushes for that device context. Instead, Windows returns the solid brush
that most closely matches the requested color.
<P>
 
<P><h3>BUG: GetGlyphOutline Returns Blank Bitmap</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q85598.htm">Q85598</A></B>
<P>
In the Microsoft Windows graphical environment, when an application calls
the GetGlyphOutline() function to retrieve the bitmap for a glyph and the
lpmat2 parameter points to a matrix that magnifies the glyph, a blank
bitmap is returned.
<P>
 
<P><h3>BUG: Input Focus Lost When Control Returns From Windows Help</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q85896.htm">Q85896</A></B>
<P>
When an application calls the WinHelp function and specifies
HELP_CONTEXTPOPUP as the value for the fuCommand parameter, the
input focus disappears. When the user presses the ALT key, the
system menu appears for a hidden copy of the Windows Help
application.
<P>
 
<P><h3>BUG: LIBENTRY.ASM Missing Include File Error</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q86409.htm">Q86409</A></B>
<P>
An attempt to assemble the LIBENTRY.ASM file distributed with version 3.1
of the Microsoft Windows SDK fails with the following message:
<P>
<PRE>   Include file not found: CONVDLL.INC.

</PRE></OL> 
<P><h3>BUG: MDI More Windows Dialog Activates Wrong Child</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q86412.htm">Q86412</A></B>
<P>
In a multiple document interface (MDI) application developed for Microsoft
Windows version 3.1, when the application creates more than nine MDI child
windows, the user chooses More Windows from the Window menu, and selects an
MDI child window to activate from the list displayed in the Select Window
dialog box, the application activates a different window.
<P>
 
<P><h3>BUG: PrintForm() Does Not Print Ink from Control</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q86874.htm">Q86874</A></B>
<P>
When an application developed using the Visual Basic controls provided in
version 1.0 of Microsoft Windows for Pen Computing calls the Visual Basic
PrintForm() function, ink entered into the control does not print.
<P>
 
<P><h3>BUG: Dictionary Receives No DIRQ_SYMBOLGRAPH Message</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q87006.htm">Q87006</A></B>
<P>
In an application developed for Microsoft Windows for Pen Computing, the
dictionary function does not receive a DIRQ_SYMBOLGRAPH message for a given
recognition session.
<P>
 
<P><h3>BUG: Help Compiler Hangs When .HPJ File [MAP] Section Too Big</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q87007.htm">Q87007</A></B>
<P>
Compiling a help project (HPJ) file with the Microsoft Windows Help
Compiler causes the system to hang, reboot, or cause a system integrity
violation.
<P>
 
<P><h3>BUG: OpenFile Function Fails on Novell Temp Drive</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q87347.htm">Q87347</A></B>
<P>
In the Microsoft Windows graphical environment, when an application uses
the OpenFile() function to open a file on a Novell network temporary drive,
the function returns the value HFILE_ERROR to indicate failure.
<P>
 
<P><h3>BUG: HPPCL Driver Reports SETABORTPROC Not Supported</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q87348.htm">Q87348</A></B>
<P>
When an application for the Microsoft Windows environment sends the
QUERYESCSUPPORT printer escape to the Hewlett-Packard (HP) LaserJet (HPPCL)
printer driver to determine whether the SETABORTPROC escape is supported,
the Escape function returns the value 0 (zero), indicating that the escape
is not supported. However, an application can successfully send the
SETABORTPROC escape to the HPPCL printer driver.
<P>
 
<P><h3>BUG: Color PostScript Drivers Report Incorrect Data</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q87349.htm">Q87349</A></B>
<P>
In the Microsoft Windows graphical environment, when an application creates
a printer device context (DC) for a QMS ColorScript 100 printer or for a
Seiko ColorPoint PS printer, and specifies the DC in a call to the
GetDeviceCaps() function, each driver reports the following information
about itself:
<P>
<PRE>   BITSPIXEL  = 1
   PLANES     = 1
   NUMCOLORS  = 8

</PRE>At least one of these numbers is incorrect in each case.
<P>
 
<P><h3>BUG: GetGlyphOutline Returns Partial Glyph</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q87350.htm">Q87350</A></B>
<P>
In the Microsoft Windows graphical environment, when an application calls
the GetGlyphOutline function to retrieve the bitmap for a rotated glyph
(the lpmat2 matrix points to a nonidentity rotation matrix) and the glyph
is larger than 75 pixels, the returned bitmap contains a partial,
nonrotated, glyph.
<P>
 
<P><h3>BUG: Scrolling DIB DC Fails</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q87351.htm">Q87351</A></B>
<P>
When an application developed for version 3.1 of the Microsoft Windows
graphical environment uses the BitBlt() or ScrollDC() functions to scroll a
device context created using the DIB (device-independent bitmap) driver,
the process fails with a variety of symptoms including a general protection
(GP) fault, a page fault, or random data appearing in the DIB.
<P>
 
<P><h3>BUG: Setup CreateProgmanItem Does Not Overwrite Item</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q87493.htm">Q87493</A></B>
<P>
In the Microsoft Setup Toolkit for Windows, when the setup script calls the
CreateProgmanItem() subroutine to replace an existing item in a Microsoft
Windows Program Manager group with cmo% set to cmoOverwrite and with
szOther$ set to a nonempty string, the setup driver does not replace the
existing item. Instead, it creates a new item.
<P>
 
<P><h3>BUG: BitBlt Bitmap on VGA Display Causes GP Fault</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q87494.htm">Q87494</A></B>
<P>
When an application for the Microsoft Windows environment calls the BitBlt
function to copy a large (640 x 480) bitmap to the VGA screen, the
application experiences a general protection (GP) fault.
<P>
 
<P><h3>BUG: HC Error 2050 from #include in Help Project File (.HPJ)</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q88126.htm">Q88126</A></B>
<P>
When you are building a Help file with the Microsoft Windows Help Compiler,
the process stops with the following error message:
<P>
<PRE>   Error 2050: line &lt;number&gt; of &lt;filename&gt;.HPJ : Invalid #include
   syntax

</PRE> 
<P><h3>BUG: No Dr. Watson Log File in Drive's Root Directory</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q88127.htm">Q88127</A></B>
<P>
In the Microsoft Windows operating system, when the Dr. Watson fault-
logging application is installed and an application execution error occurs,
the Dr. Watson's Clues dialog box does not appear. Opening the Dr. Watson
application reveals that an error exists in the &lt;logical
drive&gt;:\\DRWATSON.LOG file.
<P>
 
<P><h3>BUG: Minimized Windows Help Yields Incorrect Icon</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q88128.htm">Q88128</A></B>
<P>
In a Microsoft Windows Help file, when a topic is displayed in a secondary
window, the icon specified in the ICON statement in the [OPTIONS] section
of the Help project (.HPJ) file does not appear when the user minimizes the
Help application. This condition persists even after the user closes the
secondary window.
<P>
 
<P><h3>BUG: Complex Clipping Region Might Cause UAE/GP Fault</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q89641.htm">Q89641</A></B>
<P>
Drawing lines to a memory DC containing a complex clipping region causes an
unrecoverable application error (UAE) or general protection (GP) fault.
<P>
 
<P><h3>BUG: Cannot Map TT Font to Same Name PostScript Device Font</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q92411.htm">Q92411</A></B>
<P>
If a TrueType (TT) font and a PostScript (PS) printer font have the same
name, the TT font cannot be mapped to a different printer font. The mapping
works correctly for TT fonts whose names are different than the fonts on
the printer.
<P>
For example, the TrueType Symbol font can be mapped only to the Symbol font
resident on the PostScript printer.
<P>
 
<P><h3>BUG: CreatePatternBrush with Large Bitmap GP Fault</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q92531.htm">Q92531</A></B>
<P>
On a machine with an 8514/a video adapter running the Microsoft Windows
graphical environment with the standard 8514/a video driver, when an
application calls the CreatePatternBrush() function to create a brush based
on a bitmap larger than 8 pixels by 8 pixels, Windows terminates the
application with an application execution error.
<P>
 
<P><h3>BUG: Superclassed Scroll Bar's Parent Not Sent WM_CTLCOLOR Msg</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q95391.htm">Q95391</A></B>
<P>
Controls normally send WM_CTLCOLOR messages to their parents so
applications can modify the control background color. However,
under Windows 3.0 and 3.1, when a scroll bar is superclassed, its
parent is not sent WM_CTLCOLOR messages.
<P>
 
<P><h3>BUG: ProgMan DDE Reload() Command Does Not Work Properly</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q95981.htm">Q95981</A></B>
<P>
Attempting to use the Reload() command in Windows version 3.1 for a
particular GroupName causes that Program Manager group to
disappear. On the other hand, not specifying any GroupName, which
supposedly instructs the Program Manager to unload all groups and
reload the [Groups] section of PROGMAN.INI, causes all the groups
to disappear.
<P>
 
<P><h3>BUG: PostScript Handles lfItalic Field Incorrectly</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q96542.htm">Q96542</A></B>
<P>
In the Microsoft Windows environment, when the Windows version 3.1
PostScript printer driver is installed and an application specifies a
nonzero value in the lfItalic member of a LOGFONT data structure to create
an italic font, text prints in a normal (nonitalic) font.
<P>
 
<P><h3>BUG: Graphics Operations Consume GDI Memory</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q98058.htm">Q98058</A></B>
<P>
In the Microsoft Windows graphical operating environment, when a device
driver has rectangle capabilities (such as the 8514/a display driver) and
an application draws many large graphic objects, memory in the GDI data
segment is lost. Eventually, GDI runs out of memory and Windows crashes.
<P>
 
<P><h3>BUG: ETO_CLIPPED Does Not Clip Rotated Text</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q99110.htm">Q99110</A></B>
<P>
In Microsoft Windows version 3.1, text output with a rotated
TrueType font is not clipped when the ETO_CLIPPED flag and a
clipping rectangle are specified in ExtTextOut().
<P>
 
<P><h3>BUG: Application Errors From Long Text in the Dialog Editor</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q99134.htm">Q99134</A></B>
<P>
An attempt to use the Dialog Editor provided with version 3.1 of the
Microsoft Windows Software Development Kit (SDK) fails and an application
error occurs under either of the following circumstances:

<UL><LI>Choose Order/Group from the Arrange menu when the dialog box contains
   two or more controls, one control is a static text control, and the
   title of the text control is 256 characters long (the limit). (Setting
   a 256 character title may also generate a general protection [GP]
   fault.)

<LI>In test mode, enter more than 175 characters into a multiline edit
   control, then press BACKSPACE. A GP fault also occurs.
<P>
</UL> 
<P><h3>BUG: RC /fe Switch Does Not Work</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q99670.htm">Q99670</A></B>
<P>
Specifying the /fe filename does not create a new executable file with the
specified filename. The Resource Compiler (RC) doesn't return an error
message indicating there is a problem. For example, when you specify
GENERIC.EXE to be renamed to BLAND.EXE with the following command line
<P>
<PRE>   RC /fe BLAND.EXE GENERIC.RC GENERIC.EXE

</PRE>BLAND.EXE is not created. Furthermore, the Resource Compiler doesn't tell
you that it encountered any problems.
<P>
 
<P><h3>BUG: UngetCommChar Causes Character Loss or GP Faults</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q100183.htm">Q100183</A></B>
<P>
An application that uses the UngetCommChar() function in Microsoft Windows
version 3.1 loses characters or experiences general protection (GP) faults.
<P>
 
<P><h3>BUG: StretchDIBits() Prints Wrong Part of DIB with PSCRIPT.DRV</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q100354.htm">Q100354</A></B>
<P>
When using StretchDIBits() to print a section of a device-independent
bitmap (DIB) with the Windows version 3.1 PostScript printer driver,
in some cases the wrong part of the DIB is printed. When printing the
entire DIB, StretchDIBits() works correctly.
<P>
 
<P><h3>BUG: OpenFile Fails When UNC Server Name Longer than 11 Chars</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q101414.htm">Q101414</A></B>
<P>
OpenFile() successfully opens files with universal naming convention
(UNC) names when the server portion of the name is 11 characters or
shorter, but fails to open files when the server name is longer than
11 characters. Error code number 2, "File not found," is placed in the
nErrCode member of the OFSTRUCT structure passed to OpenFile.
<P>
 
<P><h3>BUG: Extra CN_RECEIVE/CN_TRANSMIT Events</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q101420.htm">Q101420</A></B>
<P>
Using EnableCommNotification() to enable WM_COMMNOTIFY messages for
CN_RECEIVE or CN_TRANSMIT events can cause spurious WM_COMMNOTIFY messages.
At higher baud rates, this problem can cause a system to crash and reboot.
<P>
WM_COMMNOTIFY messages are received with a 0 (zero) value for the
NotifyStatus parameter. The system crashes and reboots while receiving or
transmitting data.
<P>
 
<P><h3>BUG: DDESPY GP Faults Upon Return of CBR_BLOCK</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q102549.htm">Q102549</A></B>
<P>
DDESPY GP faults when a DDEML server application's dynamic data
exchange (DDE) callback function returns CBR_BLOCK from a transaction
of XCLASS_DATA class.
<P>
 
<P><h3>BUG: AddAtom Causes Divide by Zero Error</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q103036.htm">Q103036</A></B>
<P>
Calling the AddAtom function in the Windows 3.x environment with a
string that begins with the pound (#) character causes the system to
display the following error message in a system modal dialog:
<P>
<PRE>   Application Error

   integer divide by 0

</PRE>This error occurs if the first AddAtom call in the application passes
a string containing a # as the first character, and passes non-numeric
characters in the rest of the string. For example, the first call to
AddAtom with the string "#string" will cause the error to occur.
<P>
 
<P><h3>BUG: EV_RLSDS Event Does Not Indicate Current RLSD State</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q103636.htm">Q103636</A></B>
<P>
If SetCommEventMask() is used to enable the EV_RLSDS event, when
GetCommEventMask() is called, the EV_RLSDS bit will always be 0 (zero).
<P>
 
<P><h3>BUG: Iconic MDI Application Titles Do Not Update Properly</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q104137.htm">Q104137</A></B>
<P>
In a Windows 3.1 multiple document interface (MDI) application, the icon
title of the MDI frame window does not update when the SetWindowText
function is used to change the text of the icon title.
<P>
 
<P><h3>BUG: SetDIBitsToDevice Faults on 24-BPP PM-Style DIBs</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q104334.htm">Q104334</A></B>
<P>
SetDIBitsToDevice faults inside GDI when passed a 24-bpp Presentation
Manager (PM) style device-independent bitmap (DIB) on a device that
supports RC_DIBTODEV.
<P>
 
<P><h3>BUG: StretchDIBits Faults on 24-BPP PM-Style DIBs</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q104395.htm">Q104395</A></B>
<P>
StretchDIBits faults inside GDI when passed a 24-bpp Presentation Manager
(PM) style device-independent bitmap (DIB) on a device that supports
RC_STRETCHDIB.
<P>
 
<P><h3>BUG: PALETTEINDEX Not Working for Thin Lines on HP PaintJet</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q104962.htm">Q104962</A></B>
<P>
In a Windows 3.1 printing application, calling the PALETTEINDEX macro to
select a color when drawing lines 1 pixel wide results in the printer
drawing black lines no matter what color index was selected from the
logical palette.
<P>
 
<P><h3>BUG: SelectClipRgn Does Not Update Properly on Printer</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q104963.htm">Q104963</A></B>
<P>
In a Windows 3.1 printing application, calling SelectClipRgn with the
second parameter set to NULL to reset the clipping region to clip output to
the printer page does not reset the clipping region. Clipping on the
printer device context is still set to the clipping region specified in the
previous call to SelectClipRgn.
<P>
 
<P><h3>BUG: SetPixel Command Doesn't Work Properly on a PS Printer</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q106018.htm">Q106018</A></B>
<P>
In a Windows 3.1 printing application, calling the SetPixel() command on a
device context created for the Windows PostScript printer driver version
3.56 or earlier causes the pixel that is drawn to be larger than expected
if a line with a thickness greater than 1 was drawn previously.
<P>
 
<P><h3>BUG: System-Wide WH_DEBUG Hook Causes a GP Fault</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q106077.htm">Q106077</A></B>
<P>
Installing a system-wide hook of WH_DEBUG type causes a general protection
(GP) fault in the Windows SDK version 3.1.
<P>
 
<P><h3>BUG: Resolutions for DBWIN Utility Continuous Beeping</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q108364.htm">Q108364</A></B>
<P>
While running an application that has been compiled under debug mode, with
the DBWIN application running, the system may beep continuously causing the
computer to hang. This can happen when running the debug version of an
executable file in the debugger, or by just executing it.
<P>
 
<P><h3>BUG: Menu Bar Covered By Main Window Client Area</h3>
 
<P>
Article ID: <B><A HREF="../WIN32SDK/Q109539.htm">Q109539</A></B>
<P>
In an application, the lower half of the menu bar is covered by the client
area of the main window.
<P>
 
<P><h3>BUG: GP Fault in LoadLibrary() with C++ DLL</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q110180.htm">Q110180</A></B>
<P>
When loading a dynamic-link library (DLL) developed with Microsoft C/C++
7.0 or Visual C++ with a large number of exports not listed in the module
definition (.DEF) file, LoadLibrary() will cause a general protection (GP)
fault in Kernel with the message:
<P>
<PRE>   Application Error

   MYAPP caused a General Protection Fault in module KRNL386.EXE at
   0002:0E8D

</PRE> 
<P><h3>BUG: Problem with DrawText Statement</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q110487.htm">Q110487</A></B>
<P>
When the mapping mode is set to MM_LOMETRIC, DrawText does not properly
handle the "&amp;" (ampersand) prefix character. The underscore character that
should go beneath the character that follows the "&amp;" in the string is
appearing either elsewhere in the client area or not appearing at all.
<P>
 
<P><h3>BUG: Palettes Realized in a Memory DC May Corrupt Screen</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q110636.htm">Q110636</A></B>
<P>
On a 256-color display, when a palette is realized into a memory device
context (DC), its colors are entered into the system palette, which may
corrupt the current screen.
<P>
 
<P><h3>BUG: SystemParametersInfo() Does Not Modify WIN.INI</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q110662.htm">Q110662</A></B>
<P>
When a program uses the SystemParametersInfo() function with the
SPI_SETMOUSEBUTTONSWAP and SPIF_UPDATEINIFILE flags to reverse the mouse
buttons' orientation and modify WIN.INI, the appropiate changes to WIN.INI
are not made. The next time Windows starts, the buttons are back to the
default orientation.
<P>
 
<P><h3>BUG: DDEML Fails to Free Item Name HSZ on a LATEACK</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q110664.htm">Q110664</A></B>
<P>
On an advise loop started with the XTYPF_ACKREQ flag, the item name string
is mistakenly removed from the global atom table after a certain period
of time causing a subsequent call to DdePostAdvise() on that item name
string to fail.
<P>
 
<P><h3>BUG: Ampersand in Menu Item Is Not Converted</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q110713.htm">Q110713</A></B>
<P>
If a menu item has tabbed or right-justified text that contains a mnemonic
access character, an ampersand ("&amp;") will appear in front of the desired
access character and the character will not be underlined.
<P>
If the menu item has a cascading menu associated with it, the right-
justified text may partially overwrite the arrow that indicates the
presence of a submenu.
<P>
 
<P><h3>BUG: SetWindowPlacement and ptMin.x or ptMax.x = -1</h3>
 
<P>
Article ID: <B><A HREF="../WIN32SDK/Q110793.htm">Q110793</A></B>
<P>
Passing an X coordinate value of -1 to SetWindowPlacement causes the
parameter to be ignored. If ptMinPosition.x is set to -1,
SetWindowPlacement won't reset the minimized window coordinate; this is
also true for ptMaxPosition.x. This was undocumented in the Windows 3.1 SDK
documentation.
<P>
 
<P><h3>BUG: MDI Child Window's "Minimize" System Menu Disabled</h3>
 
<P>
Article ID: <B><A HREF="../WIN32SDK/Q110795.htm">Q110795</A></B>
<P>
After creating a new multiple document interface (MDI) child window in an
MDI application, the child window's Minimize System menu option will be
disabled after the following actions:

<OL><P><LI>The MDI child window is created and in the topmost z-order.

<P><LI>The user accesses the MDI child window's System menu through the
   shortcut keys: ALT+SPACE, RIGHT ARROW.
<P>
</OL>These actions will cause the child window's System menu to appear with the
Minimize menu option disabled. This behavior can be demonstrated with File
Manager. From File Manager's Window menu, choose New Window. Next, press
ALT+SPACE and then press the RIGHT ARROW key to bring up the new window's
System menu. The Minimize option will be disabled.
<P>
NOTE: The Minimize menu item is not disabled if the System menu is accessed
through the ALT+"-" (minus) shortcut key or the mouse. Also, the Minimize
menu item is not disabled if the window is moved.
<P>
 
<P><h3>BUG: MoveTo/LineTo Causes Divide by 0 Error</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111007.htm">Q111007</A></B>
<P>
Using MoveTo and LineTo with a delta X or delta Y greater than 16K to draw
within a complex clipping region, causes the system to display the
following error message in a system modal dialog box:
<P>
<PRE>   Application Error

   integer divide by 0

</PRE></OL> 
<P><h3>BUG: Gaps Between Wedges Drawn with The Pie Function</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111008.htm">Q111008</A></B>
<P>
Under certain circumstances, the Windows SDK Pie function will leave gaps
between pie wedges when there should be a solid line.
<P>
 
<P><h3>BUG: DDE Warning Message: Invalid Value: -32767</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111013.htm">Q111013</A></B>
<P>
When executing a call to DdeClientTransaction() from a Microsoft
Foundation Class (MFC) Library application in the debug version of Windows
3.1, the following warning message is displayed in the debug monitor:
<P>
<PRE>   wn  CLIENTAPP  CallNextHookEx + 2C: Invalid value: -32767"

</PRE> 
<P><h3>BUG: Nonscrolling Region in Help File Topic Does Scroll</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111095.htm">Q111095</A></B>
<P>
A Windows Help file topic that has been formatted to provide a nonscrolling
region does scroll.
<P>
 
<P><h3>BUG: Size of Owner-Draw Drop-Down Combo Box in Dialog Is Wrong</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111096.htm">Q111096</A></B>
<P>
When creating an owner-draw drop-down combo box in a dialog box, the size
of the static portion is not the same as a non-owner-draw combo box in the
same dialog box. WM_MEASUREITEM is not being processed, and therefore the
size of the owner-draw combo box and non-owner-draw combo box should be the
same.
<P>
 
<P><h3>BUG: SetWindowPos() on an Iconic Window and its Caption</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111335.htm">Q111335</A></B>
<P>
SetWindowPos() is called on a minimized window to either move or hide the
window. When moving, the window is moved but the caption is left behind.
When Hiding, the window is hidden but the caption is still visible.
<P>
 
<P><h3>BUG: R2_XORPEN Binary ROP Code Ignored for Wide Pens</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111336.htm">Q111336</A></B>
<P>
If a wide pen is selected in a device context and SetROP2() is called to
set the binary raster-operation (ROP) code to R2_XORPEN, the desired effect
is not achieved for ellipses, arcs, roundrects, or rectangles. The ROP is
basically ignored.
<P>
 
<P><h3>BUG: Pie() and Arc() Functions Fail with a Wide Pen</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111337.htm">Q111337</A></B>
<P>
When creating a wide (multiple pixel) pen and drawing a reasonably large
object, the drawing function returns 0 (zero) or does not draw anything.
Choosing a thin (single pixel) pen or choosing a pen smaller than X pixels
corrects the problem.
<P>
 
<P><h3>BUG: Vector Font Rotation Skewed with Non-Top-Left Alignment</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111338.htm">Q111338</A></B>
<P>
Vector fonts do not rotate properly with a text alignment set to other than
the top left.
<P>
To reproduce this problem, create a logical font for the Script vector
font. Call SetTextAlign() to set the text alignment to TA_BASELINE and
TA_CENTER. Rotate the font, perhaps in a whirl pattern as the FONTEST
sample does. Note that the rotation axis is skewed in the northwest-
southeast direction. This problem occurs in all mapping modes.
<P>
 
<P><h3>BUG: Text Truncated in Edit Control</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111341.htm">Q111341</A></B>
<P>
Copying and pasting a very large block of text in a multiline edit control
may result in part of the text being truncated or some of the text being
misaligned. This problem is more likely to happen when using a large size
font instead of the default font for the edit control.
<P>
 
<P><h3>BUG: LineTo() Endcaps Misaligned with Large Pen Width</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111576.htm">Q111576</A></B>
<P>
If LineTo() is used with a wide pen selected, the endcaps are misaligned
with the line; they are skewed at an angle relative to the line.
<P>
 
<P><h3>BUG: Rotated TrueType Font Repaints Many Times</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111579.htm">Q111579</A></B>
<P>
Drawing a rotated TrueType font into a nonrectangular clipping region
causes the font to be drawn many (perhaps a hundred) times.
<P>
 
<P><h3>BUG: Some ROP Codes Cause Inconsistent Polygon() Line Segments</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111580.htm">Q111580</A></B>
<P>
When a ROP (raster operation) such as R2_XORPEN or R2_NOT is used with the
Polygon() function, the line segments may be inconsistent; they may appear
highlighted or ragged when they should appear smooth. This may be more
apparent when the polygon is filled with a gray brush (80h).
<P>
 
<P><h3>BUG: Pie() Vertex Not Drawn Completely with Wide Pen</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111581.htm">Q111581</A></B>
<P>
When calling Pie() with a wide pen selected, the vertex of the pie slice is
not drawn correctly. The wide lines do not meet at the vertex.
<P>
 
<P><h3>BUG: Arc() Not Drawn Completely with a Wide Pen</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111582.htm">Q111582</A></B>
<P>
When calling Arc() with a wide pen selected, occasionally there will be an
unfilled line in the third quadrant of the arc.
<P>
 
<P><h3>BUG: Occasional Gap Between Adjacent Pie() Wedges</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111584.htm">Q111584</A></B>
<P>
If the Pie() function is used to draw two pie wedges with the same bounding
rectangle and the end point of the first wedge is equal to the start point
of the second wedge, there can be a gap between adjacent wedges. This gap
only occurs occasionally, and with certain pie sizes and start-and-end
points.
<P>
 
<P><h3>BUG: GetRasterizerCaps Returns Zero When TrueType Is Disabled</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111586.htm">Q111586</A></B>
<P>
When TrueType is disabled from the Control Panel, GetRasterizerCaps()
returns zero (failure) instead of clearing the TT_ENABLED flag in the
RASTERIZER_STATUS structure.
<P>
 
<P><h3>BUG: _lread() Functions Incorrectly When No Floppy in Drive</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111587.htm">Q111587</A></B>
<P>
Using the function _lread() to read a floppy disk when there is no disk in
the floppy drive results in the System error-message box "Cannot Read from
Drive..." with Retry and Cancel buttons. If the Cancel button is clicked,
_lread() returns, indicating incorrectly that it read the number of bytes
requested. Instead, it should return -1, indicating failure.
<P>
 
<P><h3>BUG: OpenFile() Doesn't Handle Forward Slash ("/") Character</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111588.htm">Q111588</A></B>
<P>
OpenFile() does not correctly handle paths beginning with a forward slash
character ("/") (for example, as in "x:/").
<P>
 
<P><h3>BUG: Brush Misaligned in PaintRgn()</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111589.htm">Q111589</A></B>
<P>
In a mapping mode other than MM_TEXT with the background mode set to
TRANSPARENT, when calling PaintRgn() to paint a nonrectangular region with
a hatched brush, the brush is misaligned.
<P>
 
<P><h3>BUG: Some TrueType Character Pairs Run Together on VGA</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111590.htm">Q111590</A></B>
<P>
On some displays such as the standard VGA display that ships with Windows
3.1, certain TrueType font character pairs do not have any space between
them and run together. For example, when using the Arial TrueType font at a
point size of 14 or greater, the characters "f7" don't have any space
between them.
<P>
 
<P><h3>BUG: IsBadStringPtr() Reports Bad String as Valid</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111591.htm">Q111591</A></B>
<P>
Under a particular condition, IsBadStringPtr() will report that a bad
string is valid. If the pointer passed to IsBadStringPtr() refers to a
block of memory of size 0xFFFF and is filled with all nonzero data,
IsBadStringPtr() returns 0.
<P>
 
<P><h3>BUG: DeleteObject() Generates Debug Errors in WEP</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111592.htm">Q111592</A></B>
<P>
Freeing GDI objects in the Windows Exit Procedure (WEP) of a dynamic-link
library (DLL) will generate errors from the debug version of Windows 3.1.
The errors are incorrectly generated if the application has an implicit
link to the DLL and the application is terminating.
<P>
 
<P><h3>BUG: DPMI Function 0203h Does Not Report Error</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111593.htm">Q111593</A></B>
<P>
Using the DOS Protected Mode Interface (DPMI) function 0203h (set processor
exception handler vector) to set an exception handler does not report an
error (carry flag set) if the selector:offset pair is invalid.
<P>
 
<P><h3>BUG: Dr. Watson Fails to Write Log File</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111596.htm">Q111596</A></B>
<P>
Assume that the drive for the Windows directory is substituted using the MS-
DOS SUBST command. For example:
<P>
<PRE>   subst w: c:\win31

</PRE>Under this condition, Dr. Watson fails to write to its log file, either the
default DRWATSON.LOG or any other changed log filename. In fact, when the
Dr. Watson icon is double-clicked, the message box that follows shows the
log filename as W:\\DRWATSON.LOG, which is incorrect.
<P>
 
<P><h3>BUG: Debug Kernel Ignores Fatal Exits When OutputTo=</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111597.htm">Q111597</A></B>
<P>
By default, the Windows debugging kernel sends its debug messages to the
AUX device (which maps to the COM1 port). When the debug output from the
Windows kernel is redirected by using OutputTo=NUL or OutputTo=&lt;filename&gt;
in the [DEBUG] section of the SYSTEM.INI file, Fatal Exit messages are
ignored automatically.
<P>
 
<P><h3>BUG: Opaque Rectangle Too Small on Rotated TrueType Fonts</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111598.htm">Q111598</A></B>
<P>
When a TrueType font is rotated, the text background is too small to
completely enclose the glyphs; the same text unrotated is enclosed.
<P>
 
<P><h3>BUG: Character Background Is Not Painted Correctly</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111599.htm">Q111599</A></B>
<P>
When text is displayed on a window with a background different than the
background of the DC (used to display the text), slivers will display
between the characters. The slivers seem to occur only between certain
character combinations, such as "Th".
<P>
This problem is only evident with some drivers, such as the standard VGA.
<P>
 
<P><h3>BUG: Polygons Drawn with Pens of Odd Width (&gt; 5) Misalign</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111600.htm">Q111600</A></B>
<P>
When drawing frames with Polygon(), if the pen width results in an odd
number of pixels (and therefore cannot be centered exactly on its
coordinates), the extra pixel of width goes up and/or to the left for
widths greater than 5 pixels, whereas it correctly goes down and to the
right for widths less than or equal to 5 pixels.
<P>
 
<P><h3>BUG: Misleading Default Pushbutton Painting</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111601.htm">Q111601</A></B>
<P>
Under some conditions in Windows 3.0 and Windows 3.1, more than one
pushbutton (or Command button)(style BS_PUSHBUTTON) may be painted with the
dark border used to designate a default pushbutton. A default pushbutton is
the pushbutton designated to be activated when the user presses the ENTER
key.
<P>
 
<P><h3>BUG: GetPrivateProfileInt() May Not Read Correct Value</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111602.htm">Q111602</A></B>
<P>
If GetPrivateProfileInt() is used to read a number that has preceding white
space, the value returned may be incorrect. For example, if the .INI file
entry is as follows, GetPrivateProfileInt() may return 0 (zero):
<P>
<PRE>   MyValue= 5

</PRE> 
<P><h3>BUG: GlobalCompact() May Return an Inaccurate Value</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111603.htm">Q111603</A></B>
<P>
GlobalCompact() may return a very inaccurate value when paging is enabled.
<P>
 
<P><h3>BUG: Explicitly Loaded Modules Not Removed from Memory</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111604.htm">Q111604</A></B>
<P>
Modules that are loaded via LoadModule() are not removed from memory when a
GP (general protection) fault causes the application that loaded it to
terminate. You must exit Windows to unload the module.
<P>
 
<P><h3>BUG: LoadResource() GP Faults When Passed an Invalid HRSRC</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111605.htm">Q111605</A></B>
<P>
Passing an invalid handle as the HRSRC parameter for LoadResource() may
result in a general protection (GP) fault.
<P>
 
<P><h3>BUG: ROP2 Code Applied Incorrectly in Pie() Function</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111606.htm">Q111606</A></B>
<P>
When calling the Windows SDK function Pie() using a ROP2 code other than
the default R2_COPYPEN, and using a pen with a width greater than 1 (one),
you may notice that the pie border is not drawn correctly.
<P>
 
<P><h3>BUG: LB_SETTOPINDEX Doesn't Conform to Documentation</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111647.htm">Q111647</A></B>
<P>
Code written to handle a return of LB_ERR does not function properly.
<P>
The online documentation for LB_SETTOPINDEX states that the result is
LB_ERR if an error occurs. However, when an error occurs, LB_SETTOPINDEX
returns with a value of 0 (zero) rather than LB_ERR.
<P>
 
<P><h3>BUG: EM_CANUNDO Returns Zero After EM_REPLACESEL</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111648.htm">Q111648</A></B>
<P>
EM_CANUNDO returns 0 (zero) after text in an edit control has been set or
replaced using EM_REPLACESEL. EM_CANUNDO should return nonzero, and EM_UNDO
should undo the change.
<P>
 
<P><h3>BUG: Left Part of Character Is Clipped with ExtTextOut/TextOut</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111649.htm">Q111649</A></B>
<P>
The left part of a TrueType character such as an italic "f" is clipped.
<P>
 
<P><h3>BUG: DrawFocusRect() Doesn't Work in MM_LOMETRIC Mode</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111650.htm">Q111650</A></B>
<P>
If DrawFocusRect() is called when the mapping mode is MM_LOMETRIC, no
rectangle is drawn.
<P>
DrawFocusRect() is documented to take logical units and works properly in
MM_TEXT mapping mode. However, if the mapping mode is changed to
MM_LOMETRIC, as in the following code fragment, DrawFocusRect() called with
an appropriate rectangle (logical units) does not work. Calling Rectangle()
with the same rectangle does work.
<P>
<PRE>   case WM_PAINT:
         hDC = BeginPaint(hWnd, &amp;ps);

            SetRect(&amp;rc, 0,0,100,100);
            DrawFocusRect(hDC, &amp;rc);      // Works as documented.

            SetMapMode(hDC, MM_LOMETRIC);
            SetRect(&amp;rc, 1,-200,100,-300);
            DrawFocusRect(hDC, &amp;rc);     // Doesn't do anything.
       Rectangle(hDC, rc.left, rc.top, rc.right, rc.bottom); // Works

            EndPaint(hWnd, &amp;ps);
            break;

</PRE> 
<P><h3>BUG: GetGlyphOutline() with GGO_BITMAP Fails with Large Scale</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111651.htm">Q111651</A></B>
<P>
Calling GetGlyphOutline() for a bitmap and passing a large X or Y scaling
factor in the transformation matrix causes the return value to not properly
track the bitmap size.
<P>
For example, Times New Roman Regular 72 point "1", with a scaling factor of
4.0 in eM11 of the transformation matrix, returns a black box of 100,64.
This requires a bitmap of at least 800 bytes but GetGlyphOutline() only
returns 256. The native buffer is returned with no problems.
<P>
 
<P><h3>BUG: Edit Controls and WS_CLIPCHILDREN Function Differently</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111652.htm">Q111652</A></B>
<P>
Unnecessary painting is done when an edit control window is created with
the WS_CLIPCHILDREN style bit set.
<P>
 
<P><h3>BUG: Printer Driver Receives "bigfonts" When Not Supported</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111653.htm">Q111653</A></B>
<P>
If the installed display driver of a Windows 3.1 installation supports
raster fonts that are greater than 64K, then any printer driver on the
system is expected to support the fonts, even if [GetDeviceCaps(hPrnDC,
RASTERCAPS) &amp; RC_BIGFONT] returns NULL for the printer driver.
<P>
 
<P><h3>BUG: StretchDIBits Not Correctly Stretching RLE DIBs w/ Jumps</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111654.htm">Q111654</A></B>
<P>
Calling StretchDIBits() to stretch an RLE device-independent bitmap (DIB)
with jumps in it results in random garbage being displayed.
<P>
 
<P><h3>BUG: StretchBlt() Does Not Perform Palette Translations</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111729.htm">Q111729</A></B>
<P>
Normally, the StretchBlt() function performs a palette translation when the
destination and source bitmaps do not contain the same color format or
palette. When the destination rectangle is the exact size of the source
rectangle (no stretching is performed), the palette translation is not
performed.
<P>
 
<P><h3>BUG: TabbedTextOut in Metric Mapping Mode Working Incorrectly</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111862.htm">Q111862</A></B>
<P>
When using TabbedTextOut() in one of the metric mapping modes, a rectangle
is displayed in the current background color above the text that is
displayed. This rectangle is the width and height of the line of text. The
text is displayed with a background that is the current background color.
However, the space between the text (where the tab is) is not displayed
with a background that is the current background color.
<P>
 
<P><h3>BUG: Driver vs. GDI-Simulated Styled Lines Don't Match</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111863.htm">Q111863</A></B>
<P>
Lines drawn using the same styled pen may appear slightly different. For
example, when drawing styled lines with the R2_XORPEN raster operation to
draw and remove lines quickly, some pixels may be left behind.
<P>
 
<P><h3>BUG: GP Fault When Drawing on a Memory-Based DC</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111864.htm">Q111864</A></B>
<P>
A general protection (GP) fault can occur on a memory-based device context
(DC) when a bitmap previously selected in the DC is selected out and
another is selected in. This is a common problem when using the SaveDC()
and RestoreDC() functions with a memory DC.
<P>
 
<P><h3>BUG: StretchBlt()/StretchDIBits() Fail with Very Large Stretch</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111865.htm">Q111865</A></B>
<P>
If the stretching factor is large, for example, when stretching from a very
small to a large height, StretchDIBits() and StretchBlt() may return 0
(zero) and display nothing. The same bitmap with a smaller stretch is
displayed correctly.
<P>
 
<P><h3>BUG: Outline of a Pie() Slice May Not Be Completely Smooth</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q111866.htm">Q111866</A></B>
<P>
The outline of a Pie() slice may not be completely smooth.
<P>
 
<P><h3>BUG: GetTimerResolution not in LIBW.LIB</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q112386.htm">Q112386</A></B>
<P>
When using the Windows Application Programming Interface (API)
GetTimerResolution() function, you may get unresolved externals from the
linker.
<P>
 
<P><h3>BUG: General Protection Fault When Accessing an HFONT</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q114013.htm">Q114013</A></B>
<P>
On rare occasions, in low memory situations or after calling the function
GlobalCompact(-1), a general protection fault (GPF) may occur when calling
SelectObject() to select a handle to a logical font (HFONT) into a device
context. This happens when the application caches the handle to the logical
font.
<P>
 
<P><h3>BUG: DDESPY and Ctrl Key Cause GP Fault in Windows NT</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q114530.htm">Q114530</A></B>
<P>
The 16-bit DDESpy utility, supplied with the Windows SDK version 3.1 and
Visual C++ for Windows version 1.5, can cause a general protection (GP)
fault in KRNL386.EXE when the CTRL key is pressed. This problem only occurs
when running DDESPY under Windows NT version 3.1.
<P>
 
<P><h3>BUG: Caching GDI Objects Causes Temporary GDI Resource Leak</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q118471.htm">Q118471</A></B>
<P>
The amount of free GDI resources decreases as an application prints,
especially over the course of several print jobs.
<P>
NOTE: The information in this article also applies to the screen; however,
this issue more often impacts applications when printing, and therefore
that is the specific subject of this article.
<P>
 
<P><h3>BUG: MCIWndClass Popup Window Palette Flashes</h3>
 
<P>
Article ID: <B><A HREF="../WIN16SDK/Q121330.htm">Q121330</A></B>
<P>
An MCIWndClass popup window realizes its logical palette in the foreground
instead of the background as requested in a call to MCIWndRealize() with
the fBkgnd flag set to TRUE. The foreground palette realization is seen as
a flash.
<P>
The following code demonstrates the setting that results in the flash. The
flash occurs when the popup window receives the input focus from another
application using a different logical palette.
<P>
<PRE>   hwndPanel = MCIWndCreate(hwndParent, hInst,
      MCIWNDF_NOAUTOSIZEMOVIE | MCIWNDF_NOMENU |
      WS_OVERLAPPED | WS_BORDER | WS_CAPTION |
      WS_SYSMENU | WS_POPUP, NULL);
   MCIWndOpen(hwndPanel, fname, 0);
   MCIWndRealize(hwndPanel, TRUE);
   SetWindowPos(hwndPanel, HWND_TOP, X, Y, 0, 0,
      SWP_NOSIZE | SWP_DRAWFRAME | SWP_SHOWWINDOW);
   MCIWndPlay(hwndPanel);
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : GenSDK kblist kbbuglist kbfile kbref kbtlc<BR>
Version             : 3.10<BR>
Platform            : WINDOWS<BR>
Issue type          : kbbug<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 9, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
