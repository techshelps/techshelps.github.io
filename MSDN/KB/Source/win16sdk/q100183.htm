

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: UngetCommChar() Causes Character Loss or GP Faults </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q100183">
<META NAME="KBModify" CONTENT="1995/01/05">
<META NAME="KBCreate" CONTENT="1993/06/16">
<META NAME="Keywords" CONTENT="kbprg kbbuglist">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  An application that uses the UngetCommChar() function in Microsoft Windows version 3.1 loses characters or experiences general protection (GP) faults.  CAUSE =====  The ReadComm() function does not correctly account for a character buffered by Unge...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWN,QDL9,QBWO,QAGI,QAU9,QAHT,QAYL,QAY5,QAY2,QAJH,QAWN,QAKE,QAKP,QA9N,QASB V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: UngetCommChar() Causes Character Loss or GP Faults</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 5, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q100183</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   version 3.1
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
An application that uses the UngetCommChar() function in Microsoft Windows
version 3.1 loses characters or experiences general protection (GP) faults.
<P>
<P><h2>CAUSE</h2>
 
<P>
The ReadComm() function does not correctly account for a character buffered
by UngetCommChar().
<P>
<P><h2>RESOLUTION</h2>
 
<P>
There are two methods to avoid this problem:

<UL><LI>Modify the application to provide its own implementation of the
   UngetCommChar() function.
<P>
   -or-

<LI>Use version 3.0 of the Windows communications (comm) driver. This method
   should be used only if an existing application cannot be modified to
   work around this problem in Microsoft Windows version 3.1.
<P>
</UL><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in Microsoft Windows version
3.1. We are researching this problem and will post new information here in
the Microsoft Knowledge Base as it becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The UngetCommChar() function places a character into a single character-
holding variable. When ReadComm() is subsequently called, the character is
copied from the holding variable to the application's buffer before any new
characters are read from the comm driver.
<P>
If version 3.0 of the comm driver is installed, ReadComm() transfers the
remaining characters from the comm driver one character at a time by
calling the comm driver exported function RECCOM. During this process, the
application buffer pointer and character count variables are correctly
incremented and decremented, respectively.
<P>
However, if version 3.1 of the comm driver is installed, ReadComm()
transfers the remaining characters from the comm driver by a single
call to the comm driver exported function READCOMMSTRING. During this
process, the application buffer pointer is correctly incremented after
copying the character from the UngetCommChar() holding variable, but
the character count is not correctly decremented. This results in one
extra character being copied from the comm driver into the
application's buffer. The extra character is "lost" because the
application is not aware that an extra character has been read. This
can also cause a GP fault if copying an extra character to the
application's buffer exceeds the buffer segment limit. This problem
occurs only on the first ReadComm call that follows an UngetCommChar()
call. This problem never occurs if UngetCommChar() is never called.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: buglist3.10 3.10 gpf gp-fault<BR>
KBCategory: kbprg kbbuglist<BR>
KBSubcategory: KrCommapi<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 5, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
