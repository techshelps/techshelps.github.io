

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SAMPLE: Implementing a Read-Only Edit Control In Windows </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q80946 ">
<META NAME="KBModify" CONTENT="1996/02/15">
<META NAME="KBCreate" CONTENT="1992/02/20">
<META NAME="Keywords" CONTENT="kbprg kbfile">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  In some situations, an application may contain text that is displayed for the user to read, which is undesirable for the user to modify. The application can use a static control to contain this text if the message is short. However, for larger amou...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAHP,QAB5,QA7O,QAOE,QAMN,QAUD,QAGX,QDL9,QBWO,QBWN,QATX,QAMB,QAGU,QAEF,QAH4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>SAMPLE: Implementing a Read-Only Edit Control In Windows</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 15, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q80946 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   versions 3.0 and 3.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In some situations, an application may contain text that is displayed for
the user to read, which is undesirable for the user to modify. The
application can use a static control to contain this text if the message is
short. However, for larger amounts of text, which require scrolling to
display all the text in the allotted area, something closer to an edit
control is required. This article, and its associated sample code, details
how to make an edit control "read- only."
<P>
ROEDIT is a file in the Microsoft Software Library that demonstrates the
techniques discussed in this article.
<P>
Download ROEDIT.EXE, a self-extracting file, from the Microsoft Software
Library (MSL) on the following services:

<UL><LI>Microsoft Download Service (MSDL)
<P><PRE>      Dial (206) 936-6735 to connect to MSDL
      Download <A HREF="http://support.microsoft.com/download/support/mslfiles/ROEDIT.EXE">ROEDIT.EXE</A> <I>(size: 23594 bytes)</I> 
</PRE>
<LI>Internet (anonymous FTP)
<P><PRE>      ftp ftp.microsoft.com
      Change to the \SOFTLIB\MSLFILES directory
      Get <A HREF="http://support.microsoft.com/download/support/mslfiles/ROEDIT.EXE">ROEDIT.EXE</A> <I>(size: 23594 bytes)</I> 
</PRE><P>
</UL><h2>MORE INFORMATION</h2>
 
<P>
An application can create a read-only edit control by subclassing or
superclassing a standard edit control. The subclass procedure filters out
messages that change the contents of the edit control. The following code
fragment demonstrates this process:
<P>
<PRE>   FARPROC gOldProc;

   LONG FAR PASCAL ROEditProc(HWND hWnd, WORD msg,
                              WORD wParam, LONG lParam)
   {
       switch (msg)
       {
           case WM_KEYUP:
           case WM_KEYDOWN:
           case WM_CHAR:
           case WM_CUT:
           case WM_COPY:
           case WM_PASTE:
           case WM_LBUTTONUP:
           case WM_LBUTTONDOWN:
           case WM_LBUTTONDBLCLK:
               return 1L;

           case WM_GETDLGCODE:
               return 0L;
       }

       return CallWindowProc(gOldProc, hWnd, msg, wParam, lParam);
   } //*** ROEditProc

</PRE>In the example above, the subclass procedure traps mouse clicks,
keystrokes, and the cut, copy, and paste commands. It also traps the
WM_GETDLGCODE message to prevent an edit control in a dialog box from
receiving the input focus.
<P>
The following example demonstrates superclassing an edit control to create
a new ROEDIT-class control that behaves similar to a read-only edit
control. A ROEDIT control implements the window procedure provided above.
It also changes the cursor to an arrow instead of an I-beam, which provides
an additional indication to the user that the contents of the control
cannot be changed. Using an ROEDIT control eliminates the necessity of
subclassing each control after it is created. When the application creates
a control from the ROEDIT class, the read-only behavior is provided
automatically.
<P>
The following code demonstrates superclassing an edit control as described
above:
<P>
<PRE>   FARPROC gOldProc;

   BOOL RegisterROEdit(HANDLE hInstance)
   {
       WNDCLASS wc;

       if (!GetClassInfo(NULL, "EDIT", &amp;wc))
           return FALSE;

       gOldProc = (FARPROC)wc.lpfnWndProc;

       wc.style        &amp;= ~CS_GLOBALCLASS;
       wc.lpfnWndProc   = ROEditProc;
       wc.hInstance     = hInstance;
       wc.hCursor       = LoadCursor(NULL, IDC_ARROW);
       wc.lpszClassName = "ROEDIT";

       return RegisterClass(&amp;wc);

   } //*** RegisterROEdit

</PRE>In Windows 3.1, there is a new style bit for the edit control (ES_READONLY)
that removes the editing capabilities of the edit control, leaving only the
viewing capabilities. This style is useful when the application shows the
user a body of static text that the user reads and does not modify.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10 softlib ROEDIT.EXE<BR>
KBCategory: kbprg kbfile<BR>
KBSubcategory: UsrCtl<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 15, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
