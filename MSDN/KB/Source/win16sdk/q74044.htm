

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Logical and Physical Coordinate Relationship </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q74044 ">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1991/07/11">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  Windows is designed to use a logical coordinate system when doing many of its graphics operations. Many of the Windows functions take logical units as parameters. Windows translates these units to physical device units based on the mapping mode of ...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWN,QDL9,QBWO,QABK,QAMV,QBWQ,QA5W,QAY5,QA3U,QAYV,QAB5,QAGQ,QBV8,QBCH,QAML V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Logical and Physical Coordinate Relationship</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q74044 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
3.00 3.10
WINDOWS
kbprg
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   versions 3.0 and 3.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Windows is designed to use a logical coordinate system when doing many of
its graphics operations. Many of the Windows functions take logical units
as parameters. Windows translates these units to physical device units
based on the mapping mode of the device, window origin, window extents,
viewport origin, and viewport extents.
<P>
This article discusses the relationship between logical and physical
coordinates.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The default mapping mode for a device context (DC) is the MM_TEXT mode. The
point (0,0) is the origin of the logical and physical coordinate systems in
this mode. It also has a 1 to 1 mapping ratio of logical to physical device
units.
<P>
The programmer can change the mapping mode of a DC by using the
SetMapMode() function.
<P>
The following six mapping modes have predefined logical to physical mapping
ratios:

<UL><LI>MM_TEXT
<LI>MM_LOENGLISH
<LI>MM_HIENGLISH
<LI>MM_LOMETRIC
<LI>MM_HIMETRIC
<LI>MM_TWIPS
<P>
</UL>The following two mapping modes can be set to have user defined ratios
of logical to physical units:

<UL><LI>MM_ANISOTROPIC
<LI>MM_ISOTROPIC
<P>
</UL>In the last two modes, coordinates are transformed from logical to physical
and vice versa based on the current window and viewport extents in the DC.
The functions SetWindowExt() and SetViewportExt() allow an application to
set the window and viewport extents. These functions should only be used in
the MM_ANISOTROPIC and MM_ISOTROPIC mapping modes because they are the only
ones in which the application can define the mapping ratio.
<P>
The formulae used to convert to and from the different coordinate systems
are documented in section 2.5.3, page 2-18, in the "Microsoft Windows
Software Development Kit Reference Volume 1" for version 3.0.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about the relationship between the logical and
physical planes, refer to the following:
<P>
"Microsoft Windows Software Development Kit Reference Volume 1"
version 3.0, section 2.5 "Mapping Functions," pages 2-15 through 2-20.
<P>
"Programming Windows," first edition, by Charles Petzold
<PRE>  Chapter 12, pages 520-540.

</PRE>"Programming Windows," second edition, by Charles Petzold
<PRE>  Chapter 11, pages 517-539.

</PRE>"Peter Norton's Windows 3.0 Power Programming Techniques," by Peter
<PRE>  Norton and Paul Yao, Chapter 20, c. 1990, Bantam Books.
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10<BR>
KBCategory: kbprg<BR>
KBSubcategory: GdiDc<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
