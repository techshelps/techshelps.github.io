

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>General Information About Windows WM_TIMER Messages </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q44740 ">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1989/05/23">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  Timers in the Windows environment are not synchronous; that is, when a timer  goes off,  Windows does not stop processing and send a WM_TIMER message or call the timer event procedure. Instead, Windows sets some bits internally, to ensure that the ...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QATK,QDL9,QBWO,QBWN,QBWQ,QAEV,QAGI,QACE,QBDT,QAL4,QAYC,QAG0,QA62,QAMA,QAHC V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>General Information About Windows WM_TIMER Messages</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q44740 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
3.00 3.10
WINDOWS
kbprg
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows,
   versions 3.0 and 3.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Timers in the Windows environment are not synchronous; that is, when a
timer "goes off," Windows does not stop processing and send a WM_TIMER
message or call the timer event procedure. Instead, Windows sets some
bits internally, to ensure that the task that "owns" the timer will
run (as soon as the current task does something to yield control).
When this task does eventually run and eventually calls GetMessage()
or PeekMessage(), and there are no other messages available for this
task, Windows will scan the timer list to see if any timers for this
task have "gone off." If they have, Windows returns a WM_TIMER message
or calls the timer event procedure. The following are two important
facts that must be considered:

<OL><P><LI>The WM_TIMER message and timer-event process ONLY happen when an
   application is sitting on a GetMessage() or PeekMessage(). They do
   not happen at timer interrupt time.

<P><LI>Only timers for the task that is currently active are scanned when
   looking for messages. A PARTICULAR TIMER IS OWNED BY THE TASK THAT
   WAS ACTIVE WHEN THE TIMER WAS CREATED.
<P>
</OL><h2>MORE INFORMATION</h2>
 
<P>
The following is an example of the incorrect use of timers:
<P>
An application sets a keyboard hook. Inside the keyboard hook, a timer
is set. It is important to realize that the keyboard hook is called
from within GetMessage() or PeekMessage() whenever a task is pulling
keys out of the system queue (the place where keyboard and mouse
events go at interrupt level). The task that is active at the time the
keyboard hook is called is completely random. Basically, it is the
task that owns the windows with the focus.
<P>
Because a timer is owned by the active task at the time it is created,
and any task may be the active task when the keyboard hook is called,
the timer created in this manner will be owned by some random task.
This, combined with the following facts, results in inconsistent,
random behavior for this timer.

<OL><P><LI>Timers are only scanned for the active task.

<P><LI>Timers are retrieved at message level.

<P><LI>All applications handle messages differently.
<P>
</OL>The basic rule is that a timer MUST NEVER be created from within a
hook such as a keyboard hook.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10<BR>
KBCategory: kbprg<BR>
KBSubcategory: UsrTim<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
