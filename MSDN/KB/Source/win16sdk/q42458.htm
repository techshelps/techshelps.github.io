

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FatalExit 0x0001 Possible If WM_CTLCOLOR Used Improperly </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q42458 ">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1989/03/15">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; win16sdk">
<META NAME="Description" CONTENT="  An application can change the colors of a dialog box by creating a brush of the desired color and processing the WM_CTLCOLOR message to return a handle to the brush. If the brush is not a stock object, the application should create the brush before...">
<META NAME="Product" CONTENT="Win16 SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAUD,QDL9,QBWO,QBWN,QA01,QAKJ,QAYL,QAG9,QAH4,QAEV,QAJH,QBWQ,QAAP,QAB9,QA7O V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FatalExit 0x0001 Possible If WM_CTLCOLOR Used Improperly</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q42458 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
3.00 3.10
WINDOWS
kbprg
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Windows Software Development Kit (SDK) for Windows
   versions 3.1 and 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
An application can change the colors of a dialog box by creating a
brush of the desired color and processing the WM_CTLCOLOR message to
return a handle to the brush. If the brush is not a stock object, the
application should create the brush before the dialog box is displayed
and store its handle in a global or static variable. Do not use the
following code in a dialog box procedure:
<P>
<PRE>   case WM_CTLCOLOR:  // Create green edit fields
      if (HIWORD(lParam) == CTLCOLOR_EDIT)
         return CreateSolidBrush(RGB(0, 255, 0));
      break;

</PRE>Windows sends a WM_CTLCOLOR message to the dialog box procedure each
time any changes are made to the dialog box (such as when the user
presses a button or moves the focus to a new control). In the code
above, each time the application processes a WM_CTLCOLOR message for
an edit control, the application creates a new brush which is stored
in the GDI data segment. If the GDI data segment fills completely,
Windows generates a FatalExit 0x0001 (insufficient memory for
allocation) error for each subsequent allocation.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To avoid this error, modify the application to call the
CreateSolidBrush function once, either outside the application's
message loop or during the processing of the WM_CREATE message. Store
the returned brush handle in a global or static variable. An advantage
of this method is that the brush can be used in any part of the
application without consuming any additional system resources.
<P>
The following code provides a skeleton for the WinMain procedure and
for the dialog procedure to implement this method:
<P>
<PRE>// WinMain
</PRE>HBRUSH  hBrushGreen; // Global variable
<P>
WinMain (...)
{
<PRE>   // Register window class and create window

   hBrushGreen = CreateSolidBrush(RGB(0, 255, 0));

   while (GetMessage(...))
     {
     TranslateMessage(...);
     DispatchMessage(...);
     }

   DeleteObject(hBrushGreen);
   return msg.wparam;
</PRE>}
<P>
<PRE>// Dialog box procedure
   case WM_CTLCOLOR: // Green edit fields
      if (HIWORD(lParam) == CTLCOLOR_EDIT)
         return hBrushGreen;
      break;
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10<BR>
KBCategory: kbprg<BR>
KBSubcategory: UsrDlgs<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
