

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INF: How to Use SQLSetPos in Updatable Joins w/ SQL Server </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q140532">
<META NAME="KBModify" CONTENT="1997/10/10">
<META NAME="KBCreate" CONTENT="1995/12/03">
<META NAME="Keywords" CONTENT="odbc kbcode kberrmsg kbhowto kbprg">
<META NAME="KBArea" CONTENT="Support; KB; odbc">
<META NAME="Description" CONTENT="  This article discusses how to use an updatable join using SQLSetPos and the SQL Server ODBC driver version 2.50.0121.  MORE INFORMATION  An updatable join is what you need when you intend to either update, insert, or delete data in the underlying t...">
<META NAME="Product" CONTENT="ODBC">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAXB,QBD2,QAC1,QAE1,QA9E,QBXS,QDMN,QAH4,QAH8,QABM,QAJQ,QAA5,QBVV,QA4Q,QAX6 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INF: How to Use SQLSetPos in Updatable Joins w/ SQL Server</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q140532</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
2.00 2.10 2.20 4.00 1.52
WINDOWS
kbprg kbhowto kbcode kberrmsg
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Open Database Connectivity, version 2.50
<LI>The Microsoft Foundation Classes (MFC) included with:
<LI>Microsoft Visual C++ for Windows, version 1.52
<LI>Microsoft Visual C++, 32-bit Edition, versions 2,0, 2.1, 2.2, 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article discusses how to use an updatable join using SQLSetPos and the
SQL Server ODBC driver version 2.50.0121.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
An updatable join is what you need when you intend to either update,
insert, or delete data in the underlying tables on which the join is based.
The most frequently encountered error with the SQL Server driver when you
use an updatable join is:
<P>
<PRE>   Invalid column name &lt;column-name&gt;

</PRE>This error occurs if the application does not set the pcbValue argument in
SQLBindCol to SQL_IGNORE for columns that will not be updated. For more
information on SQLSetPos and SQL_IGNORE, please refer to the Microsoft
"ODBC 2.0 Programmer's Reference and SDK Guide."
<P>
It is worth noting that you can only update one table of a join in any
single SQLSetPos operation. Consider a two-table updatable join: If you
want to update one or more columns in the first table, you must set
pcbValue for all the columns from the second table to SQL_IGNORE, and do
the same for any columns in the first table that you do not want to be
updated.
<P>
Similarly, if you want to update one or more columns in the second table,
you must set pcbValue for all the columns from the first table to
SQL_IGNORE, and do the same for any column in the second table that you
do not want to be updated. If you want to update columns in both tables,
you have to use SQLSetPos twice, wrapping in a transaction if needed.
<P>
The following C code illustrates how to use an updatable join:
<P>
<P><h3>Code Sample</h3>
 
<P>
<PRE>/* Before running the following code do this on SQL Server:
</PRE>Create table test1 (col1 int, col2 char(10))
Create table test2 (col1 int, col2 int, col3 char(10))*/
<P>
<PRE>void RunTest(void)
</PRE>{
<PRE>   HENV       henv;
   HDBC       hdbc1;
   HSTMT      hstmt1;
   RETCODE    retcode;
   extern HWND       hWnd;
   SWORD        swStrLen;
   UCHAR       Col2[50], Info[50], szConnStrOut[30];
   int       try1=0,try2=0,try3=0;
   SDWORD    cbCol11 = 4, cbCol12=10, cbCol21=4, cbCol22=4, cbCol23=10;
   UDWORD r=0;
   UWORD rgfRowStat;

// Allocate the ODBC Environment  handle
   retcode = SQLAllocEnv (&amp;henv);

// Allocate the Connection  handle
   retcode = SQLAllocConnect(henv, &amp;hdbc1);

// SQLDriverConnect that will generate a dialog prompt for the datasource
   retcode = SQLDriverConnect(hdbc1,hWnd,(UCHAR *)"",12,
      szConnStrOut,30, &amp;swStrLen,SQL_DRIVER_PROMPT);

// Allocate the statement handle
   retcode=SQLAllocStmt(hdbc1, &amp;hstmt1);

// Set the statement options
   retcode = SQLSetStmtOption(hstmt1, SQL_CONCURRENCY,
</PRE>SQL_CONCUR_VALUES);
<PRE>   retcode = SQLSetStmtOption(hstmt1,
</PRE>SQL_CURSOR_TYPE,SQL_CURSOR_KEYSET_DRIVEN);
<PRE>   retcode = SQLSetStmtOption(hstmt1, SQL_ROWSET_SIZE, 1);

// Perform the join and bind the columns in the result set
   retcode = SQLExecDirect(hstmt1,(UCHAR *)"select * from
</PRE>test1,test2 where test1.col1=test2.col1",SQL_NTS);
<PRE>   retcode = SQLBindCol(hstmt1, 1, SQL_C_LONG, &amp;try1,
</PRE>sizeof(try1), &amp;cbCol11);
<PRE>   retcode = SQLBindCol(hstmt1, 2, SQL_C_CHAR, Col2,
</PRE>sizeof(Col2),&amp;cbCol12);
<PRE>   retcode = SQLBindCol(hstmt1, 3, SQL_C_LONG, &amp;try2,
</PRE>sizeof(try2),&amp;cbCol21);
<PRE>   retcode = SQLBindCol(hstmt1, 4, SQL_C_LONG, &amp;try3,
</PRE>sizeof(try3),&amp;cbCol22);
<PRE>   retcode = SQLBindCol(hstmt1, 5, SQL_C_CHAR, Info,
</PRE>sizeof(Info),&amp;cbCol23);
<P>
<PRE>// Fetch the resultset and position the cursor
   retcode = SQLExtendedFetch(hstmt1, SQL_FETCH_FIRST, 1, &amp;r,
</PRE>&amp;rgfRowStat);
<P>
<PRE>// Set the pcbValues so that Col1 of Test1 can be updated.
// Notice that all the columns that won't be updated are set to
// SQL_IGNORE

   try1=600;
   cbCol12=SQL_IGNORE;
   cbCol21=SQL_IGNORE;
   cbCol22=SQL_IGNORE;
   cbCol23=SQL_IGNORE;

// Update the values
   retcode = SQLSetPos(hstmt1, 1, SQL_UPDATE, SQL_LOCK_NO_CHANGE);

// Free the handles
   retcode = SQLFreeStmt(hstmt1, SQL_DROP);
   retcode = SQLDisconnect(hdbc1);
   retcode = SQLFreeConnect (hdbc1);
   retcode = SQLFreeEnv(henv);
</PRE>}
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: MFC VC++ sql 6.00 2.00 2.10 2.20 4.00<BR>
KBCategory: kbprg kbhowto kbcode kberrmsg<BR>
KBSubcategory: odbc<BR>
Keywords          : odbc kbcode kberrmsg kbhowto kbprg<BR>
Technology        : kbMfc<BR>
Version           : 2.00 2.10 2.20 4.00 1.52<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
