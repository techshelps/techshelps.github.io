

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INF: Error Flushing by Driver Manager </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q110473">
<META NAME="KBModify" CONTENT="1996/09/18">
<META NAME="KBCreate" CONTENT="1994/01/23">
<META NAME="Keywords" CONTENT="kbusage">
<META NAME="KBArea" CONTENT="Support; KB; odbc">
<META NAME="Description" CONTENT="  This article discusses how the Driver Manager calls a driver s SQLError to flush the errors in the driver s error buffer. Chapter 16 of the ODBC SDK  Programmer s Reference  documents the ODBC convention for error text, return codes, and rules for ...">
<META NAME="Product" CONTENT="ODBC">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAU9,QAGI,QAB4,QAAP,QA9E,QAEF,QAIF,QAUD,QAH5,QAGU,QAY5,QAJX,QADR,QAD7,QAH7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INF: Error Flushing by Driver Manager</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 18, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q110473</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Open Database Connectivity, version 1.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article discusses how the Driver Manager calls a driver s
SQLError to flush the errors in the driver s error buffer. Chapter 16
of the ODBC SDK "Programmer s Reference" documents the ODBC convention
for error text, return codes, and rules for handling error conditions.
<P>
Under the Returning Error Messages section in chapter 16, it
reads:
<P>
<PRE>   Each time the application calls SQLError, the driver returns
   the next error message in the buffer. When the application calls a
   different function, the driver discards the current contents of the
   error message buffer.

</PRE>It is unclear from the last sentence whether the driver clears the current
error buffer on entry into the next function, or whether the Driver Manager
calls the driver to clear its error buffer before entry into the next
function.
<P>
This article explains how an application calls ODBC function B() after a
previous call to ODBC function A(), the Driver Manager actually calls the
driver's SQLError() first and then calls the driver's function B().
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The implication of the Driver Manager calling the Driver s SQLError()
is that on entry to function B() in the Driver, the Driver has
already cleared the error buffer. Developers need to note this when
debugging their drivers.
<P>
Also, when the Driver Manager calls the Driver s SQLError(), it passes the
appropriate ODBC handles, but for other arguments to SQLError() like
szSQLState, pfNativeError, it passes a NULL. The SQLError() function for
Drivers must be written, such that when passed NULL arguments for
everything except ODBC handles in SQLError(), the errors in the Driver s
error buffer are cleared.
<P>
The following is a diagram showing how this process is accomplished by the
Driver Manager.
<P>
<P>
<PRE>Application         Driver Manager                Driver
</PRE> 
<PRE>A()         ======&gt;    A()           ======&gt;     A() = SQL_ERROR
= SQL_ERROR &lt;======   &lt;======        &lt;======     Returns SQL_ERROR

//Application does not call SQLError()
B()         ======&gt;    B()
                       SQLError()     ======&gt;    SQLError()
                              Loop for clearing errors
                  &lt;=======
                       DM calls Driver s B()
                       ======&gt;        =======&gt;    B() = SQL_SUCCESS
=SQL_SUCCESS &lt;======   &lt;======        &lt;=======    Returns SQL_SUCCESS
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbusage<BR>
KBSubcategory:
<P>

Additional reference words: 1.00
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 18, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
