

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: SQLParamData Returns Incorrect Values Under Win32s </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q135715">
<META NAME="KBModify" CONTENT="1996/09/18">
<META NAME="KBCreate" CONTENT="1995/08/27">
<META NAME="Keywords" CONTENT="kbinterop kbbug2.10b kbcode">
<META NAME="KBArea" CONTENT="Support; KB; odbc">
<META NAME="Description" CONTENT=" BUG#: 3160 (ODBCSDK2 2.10b)   When you run a 32-bit ODBC application under Win32s, the SQLParamData function returns incorrect values for the prgbValue argument.  STATUS ======  Microsoft has confirmed this to be a problem in the Win32s ODBC thunkin...">
<META NAME="Product" CONTENT="ODBC">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAUD,QAKC,QAGI,QA9E,QAAP,QAKD,QBC6,QA01,QAJQ,QAHE,QAB4,QAI4,QAG8,QALW,QAKP V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: SQLParamData Returns Incorrect Values Under Win32s</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 18, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q135715</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Open Database Connectivity, version 2.10b
</UL> 
<P>
BUG#: 3160 (ODBCSDK2 2.10b)
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When you run a 32-bit ODBC application under Win32s, the SQLParamData
function returns incorrect values for the prgbValue argument.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in the Win32s ODBC
thunking components. We are researching this problem and will post
new information here in the Microsoft KnowledgeBase as it becomes
available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
SQLParamData is an ODBC API call that is used in conjunction with
SQLPutData to supply parameter data at statement execution time. This call
is made to retrieve the application-defined value specified in the rgbValue
argument of SQLBindParameter for the data-at-execution parameter to be
processed.
<P>
The following 32-bit Windows program demonstrates the problem. In this
program, the rgbValue buffer of SQLBindParameter contains a number
12345678. Ideally, when SQLParamData is called subsequently, the prgbValue
buffer should return the same number. However, a number such as 3a175678 is
returned.
<P>
If you create the appropriate data source and run the following
program under Windows NT, you will get two message boxes that each
contain the same number (12345678). If you create the appropriate
data source and run it under Win32s, you will get two message boxes
that contain different numbers (12345678 and something like
3a175678). The first number is the rgbValue parameter in the call to
SQLBindParameter().  The second number is the value returned through
the prgbValue parameter in the call to SQLParamData().
<P>
EXAMPLE PROGRAM:
<P>
<PRE>/*
  To run this program, create and Access ODBC data source named
</PRE>"BLOBTEST1".
<P>
<PRE>  The data source should contain a table named "Table1" that contains 2
  fields, a short field named "Field1" and a long binary field named
</PRE>"Field2"
.
<PRE>*/

#include &lt;windows.h&gt;
#include &lt;sql.h&gt;
#include &lt;sqlext.h&gt;
#include &lt;stdio.h&gt;

</PRE>HENV   henv;
HDBC   hdbc;
<PRE>HSTMT   hstmt;

long      id = 0x12345678;
PTR      ret_id;
SDWORD   length;
RETCODE   retcode;
char      buffer[200];

int PASCAL WinMain(HINSTANCE hinst,HINSTANCE pinst,LPSTR szCmd,int nShow)
</PRE>{
<PRE>  if (SQLAllocEnv(&amp;henv) != SQL_SUCCESS)
  {
    MessageBox(NULL,"SQLAllocEnv() failed","Error",MB_ICONSTOP);
    goto Out1;
  }

  if (SQLAllocConnect(henv,&amp;hdbc) != SQL_SUCCESS)
  {
    MessageBox(NULL,"SQLAllocConnect() failed","Error",MB_ICONSTOP);
    goto Out2;
  }

  if (SQLConnect(hdbc,"BLOBTEST1",SQL_NTS,"",SQL_NTS,"",SQL_NTS) !=
</PRE>SQL_SUCCESS)
<PRE>  {
    MessageBox(NULL,"SQLConnect() failed","Error",MB_ICONSTOP);
    goto Out3;
  }

  if (SQLAllocStmt(hdbc,&amp;hstmt) != SQL_SUCCESS)
  {
    MessageBox(NULL,"SQLAllocStmt() failed","Error",MB_ICONSTOP);
    goto Out4;
  }

  if (SQLPrepare(hstmt,"INSERT INTO Table1 (Field1,Field2) values
</PRE>(1,?)",SQL_NTS) != SQL_SUCCESS)
<PRE>  {
    MessageBox(NULL,"SQLPrepare() failed","Error",MB_ICONSTOP);
    goto Out5;
  }

  sprintf(buffer,"Calling SQLBindParameter, value = %x\n",id);
  MessageBox(NULL,buffer,"Info",MB_OK);
  if
</PRE>(SQLBindParameter(hstmt,1,SQL_PARAM_INPUT,SQL_C_BINARY,SQL_LONGVARBINA
Y,0,0,(PTR)id,0,&amp;length)
<PRE>   != SQL_SUCCESS)
  {
    MessageBox(NULL,"SQLBindParameter() failed","Error",MB_ICONSTOP);
    goto Out5;
  }

  length = SQL_LEN_DATA_AT_EXEC(0);
  retcode = SQLExecute(hstmt);
  while (retcode == SQL_NEED_DATA)
  {
    retcode = SQLParamData(hstmt,&amp;ret_id);
    if (retcode == SQL_NEED_DATA)
    {
      sprintf(buffer,"Returned value = %x\n",(long)ret_id);
      MessageBox(NULL,buffer,"Info",MB_OK);      //Expected
</PRE>display: 12345678. But, something like 3a175678 is displayed.
<PRE>      SQLPutData(hstmt,"1234567890",10);      // just send
</PRE>some data..
<PRE>    }
  }

</PRE>Out5:
<PRE>  SQLFreeStmt(hstmt,SQL_DROP);
</PRE>Out4:
<PRE>  SQLDisconnect(hdbc);
</PRE>Out3:
<PRE>  SQLFreeConnect(hdbc);
</PRE>Out2:
<PRE>  SQLFreeEnv(henv);
</PRE>Out1:
<PRE>  return 0;
</PRE>}
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: mfc desktop drivers sql server driver<BR>
KBCategory: kbinterop kbcode kbbug2.10b<BR>
KBSubcategory:
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 18, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
