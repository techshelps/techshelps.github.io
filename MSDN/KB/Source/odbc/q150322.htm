

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INF: ODBC Syntax for Multi-Table Outer Joins </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q150322">
<META NAME="KBModify" CONTENT="1996/09/09">
<META NAME="KBCreate" CONTENT="1996/04/25">
<META NAME="Keywords" CONTENT="kbprg kbusage">
<META NAME="KBArea" CONTENT="Support; KB; odbc">
<META NAME="Description" CONTENT="  This article describes the ODBC syntax for performing outer joins on multiple SQL Server and Microsoft Access tables.  MORE INFORMATION  Chapter 6 of the Microsoft ODBC 2.0  Programmer's Reference and SDK Guide  has a sub- section on 'Outer Joins' ...">
<META NAME="Product" CONTENT="ODBC">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBPJ,QDNB,QA9E,QAEB,QAE8,QAVX,QAVW,QAY2,QAWM,QA5V,QABM V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INF: ODBC Syntax for Multi-Table Outer Joins</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 9, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q150322</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Open Database Connectivity, versions 2.0x &amp; 3.0x
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article describes the ODBC syntax for performing outer joins on
multiple SQL Server and Microsoft Access tables.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Chapter 6 of the Microsoft ODBC 2.0 "Programmer's Reference and SDK Guide"
has a sub- section on 'Outer Joins' under the section 'Using ODBC
Extensions to SQL.' However, the example presented in that section only
illustrates a two-table outer join. Below you will find examples for nested
outer joins using the SQL Server and Access drivers.
<P>
ODBC supports the ANSI SQL-92 left outer join syntax. The shorthand syntax
for outer join is:
<P>
<PRE>   {oj outer-join}

</PRE>where outer-join is:
<P>
<PRE>   table-name LEFT OUTER JOIN {table-name | outer-join} ON search-condition

</PRE>where search-condition specifies the join condition between the table-names
and the ON clause determines which tables are involved in the outer join.
<P>
<P><h3>An example for the SQL Server driver:</h3>
 
<P>
Transact-SQL provides two outer join operators: *=, which includes all rows
from the first-named table, and =*, which includes all rows from the second-
named table. In Transact-SQL, a select statement for a three-table outer
join would look like:
<P>
<PRE>   Select * from A, B,C, where A.col1 *= B.col1 and A.col1 *= C.col1

</PRE>The equivalent ODBC OUTER JOIN syntax is:
<P>
<PRE>   Select * from  { oj  A LEFT OUTER JOIN B LEFT OUTER JOIN C
          ON A.col1= B.col1 ON A.col1 = C.col1 }

</PRE>You can use the above syntax to construct any valid outer-join statement
allowed by the SQL Server. For information on outer-join restrictions,
please refer to Chapter 4 of the SQL Server "Database Developer's
Companion."
<P>
Though the right outer join ( created using =* ) syntax does not exist in
ODBC SQL grammar, you can express a right outer join in terms of a left
outer join.
<P>
For example, consider this Transact SQL statement:
<P>
<PRE>   Select * from  A, B  where A.col1 =* B.col1  and C.col1=*B.col1

</PRE>This translates in ODBC syntax to:
<P>
<PRE>   Select  *  from { oj A LEFT OUTER JOIN B LEFT OUTER JOIN C  ON B.col1 =
                     A.col1 ON B.Col1=C.Col1 }

</PRE>You can set the 4032 SQL Server trace flag (using DBCC TRACEON command)
and check the SQL Server errorlog to see what the above ODBC syntax has
been translated to by the driver. This will enable you to verify whether
or not the ODBC syntax you have used conforms to the Transact-SQL that you
intended to use.
<P>
<P><h3>An example for the Access driver:</h3>
 
<P>
The Access-specific syntax for an outer-join is:
<P>
<PRE>   Select-list FROM table1 [ LEFT | RIGHT ] JOIN table2 ON table1.field1 =
   table2.field2

</PRE>Use a LEFT JOIN operation to create a left outer join. Left outer joins
include all of the records from the first (left-hand) of two tables, even
if there are no matching values for records in the second (right-hand)
table.
<P>
Use a RIGHT JOIN operation to create a right outer join. Right outer joins
include all of the records from the second (right-hand) of two tables, even
if there are no matching values for records in the first (left-hand) table.
Follow the same syntax, explained in the above section, for an equivalent
ODBC LEFT OUTER JOIN.
<P>
Using the ODBC syntax:
<P>
<PRE>   Select * from { oj  test LEFT OUTER JOIN test1 LEFT
   OUTER JOIN test2
               ON test.col1= test1.col1 ON test.col1 = test2.col1 }

</PRE>NOTE: When you use the Access 2.0 ODBC driver, you may need to list all the
tables referenced in JOIN in the FROM clause. For example:
<P>
<PRE>   Select * from test, test1, test2 { oj  test LEFT OUTER JOIN test1 LEFT
   OUTER JOIN test2 ON test.col1= test1.col1 ON test.col1 = test2.col1 }
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 6.00 sql6 6.50 2.00 3.00 join query mfc rdo sql<BR>
server access<BR>
KBCategory: kbinterop kbprg<BR>
KBSubcategory: ssrvprog odbc
<P>

<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 9, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
