

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: Summary List of ODBC 1.0 Bugs </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q114285">
<META NAME="KBModify" CONTENT="1997/12/08">
<META NAME="KBCreate" CONTENT="1994/04/28">
<META NAME="Keywords" CONTENT="kbbug kbbug1.00 kbref">
<META NAME="KBArea" CONTENT="Support; KB; odbc">
<META NAME="Description" CONTENT=" The following is a list of bugs confirmed in version 1.0 of Microsoft Open Database Connectivity. This is not a comprehensive list; this list is current as of March 1, 1994.  For more information on the bug listed, query in the Microsoft Knowledge B...">
<META NAME="Product" CONTENT="ODBC">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA9E,QA1S,QAU9,QBPJ,QAAP,QDIX,QAB4,QAKP,QDNB,QDN9,QAUD,QABM,QAE1,QAEF,QANY V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: Summary List of ODBC 1.0 Bugs</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 8, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q114285</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Microsoft Open Database Connectivity, version 1.0
</UL> 
<P>
The following is a list of bugs confirmed in version 1.0 of Microsoft
Open Database Connectivity. This is not a comprehensive list; this list
is current as of March 1, 1994.
<P>
For more information on the bug listed, query in the Microsoft Knowledge
Base on the article ID or the bug number.
<P>
 
<P><h2>BUG LISTING FOR VERSION 1.0</h2>
 

<UL><LI>BUG: Oracle Driver Errors on Delimited Column Names
<LI>BUG: Cannot Have a Pathname &gt; 29 Char for SYSTEM.MDA
<LI>BUG: Memory Leak in the ORACLE Driver
<LI>BUG: Memory Leak in Desktop Database Drivers
<LI>BUG: Access Driver Returns Incorrect pcbValue
<LI>BUG: SQL Server SQLSetParam Fails on the 252nd Parameter
<LI>BUG: Extra Block of 256 Bytes Used by Access ODBC Driver
<LI>BUG: SQL Server ODBC Driver Removes Entry From WIN.INI
<LI>BUG: Use of Certain Scalar Functions May Cause SQLFetch Errors
<P>
</UL> 
<P><h2>DESCRIPTION OF BUGS FOR VERSION 1.0</h2>
 
<P>
 
<P><h3>BUG: Oracle Driver Errors on Delimited Column Names</h3>
 
<P>
Article ID: <B><A HREF="../ODBC/Q104958.htm">Q104958</A></B>
BUG# ODBCORA: 572 (1.002816)
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The Oracle ODBC Driver gives an error on any SELECT statement that
contains an outer join (in the ODBC escape-clause syntax) on a
delimited column name that is greater than 17 characters. As a result,
when using Microsoft Access or Microsoft Visual Basic to connect to an
Oracle server, you cannot perform outer joins on columns whose names are
longer than 17 characters.
<P>
So, the following query:
<P>
<PRE>   SELECT * FROM {oj table1 LEFT OUTER JOIN table2 ON
   (table1.abcdefghijklmnopq = table2.col1)}

</PRE>works fine; note that the delimited column name (abcdefghijklmnopq)
is 17 chars long. However, the following query:
<P>
<PRE>   SELECT * FROM {oj table1 LEFT OUTER JOIN table2 ON
   (table1.abcdefghijklmnopqr = table2.col1)}

</PRE>gives the error:
<P>
<PRE>   MsgId: Unknown String Resource.

</PRE>The above error appears in a dialog box with an OK button. Choosing OK
will cause SQLExecDirect or SQLExecute to return SQL_ERROR. The SQL_ERROR
states:
<P>
<PRE>   szSqlState = "37000"
   [PageAhead][ODBC Oracle Driver]Syntax Error

</PRE>While working with an ODBC Data source, the Access Engine uses
delimited identifiers for all its queries; it also uses canonical
outer join syntax for performing outer joins. Thus, when an Access or
Visual Basic user does an outer join on Oracle tables, the above
mentioned error occurs if any of the columns participating in the
outer join have a name longer than 17 characters.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
Rename the column so that it has less than 17 characters.
<P>
 
<P><h3>BUG: Cannot Have a Pathname &gt; 29 Char for SYSTEM.MDA</h3>
 
<P>
Article ID: <B><A HREF="../ODBC/Q105795.htm">Q105795</A></B>
BUG# ODBCDBASE: 1852 (1.01.1928)
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The ODBC Access driver does not recognize a SYSTEM.MDA file for which the
path is longer than 29 characters.
<P>
The ODBC Access driver can be used to connect to secure Access databases.
To do this, the user should specify a SYSTEM.MDA file associated with
the Access database--by selecting the Options button in the Access
Datasource Setup dialog box, and specifying a complete path for the
SYSTEM.MDA file.
<P>
If this path is longer than 29 characters, the driver gives the following
error during SQLConnect or SQLDriverConnect:
<P>
<PRE>   szSqlState = '08004', *pfNativeError = -1023
   szErrorMsg="[Microsoft][ODBC Single-Tier Driver][ODBC File
   Library]Invalid path

</PRE>For example, the following path will work for SYSTEM.MDA (it is 29
characters long):
<P>
<PRE>   c:\temp\snuffy1\ok\system.mda

</PRE>while the following does not work (it is 30 characters long):
<P>
<PRE>   c:\temp\snuffy1\bad\system.mda

</PRE><h2>WORKAROUND</h2>
 
<P>
Move the SYSTEM.MDA file to a different directory so that the path is
less than 29 characters.
<P>
 
<P><h3>BUG: Memory Leak in Desktop Database Drivers</h3>
 
<P>
BUG# ODBCDBASE: 1850 (1.01.1928)
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The ODBC Desktop Database Drivers have a memory leak due to which, a
memory allocation error occurs when a program repeatedly allocates and
frees a statement handle with the SQL_CLOSE option.
<P>
Allocating and freeing a statement handle (with fOption = SQL_CLOSE)
repeatedly will cause a memory allocation error in the 248th iteration.
This problem exists in all the drivers shipping with the ODBC Desktop
Database Drivers (dBASE, FoxPro, Paradox, BTRIEVE, Access, Excel and
Text). The following code fragment illustrates the problem:
<P>
<PRE>   SQLAllocEnv(&amp;henv);
   SQLAllocConnect (henv, &amp;hdbc);
   SQLDriverConnect (hdbc, hwnd, "", 0, szConnStrOut, MAX_CONN_STR_SIZE,
    &amp;cbConnStrOut, SQL_DRIVER_PROMPT);
   for (i=1; i&lt;500; i++) {
      SQLAllocStmt(hdbc, &amp;hstmt);
      SQLFreeStmt (hstmt, SQL_CLOSE);
   }

</PRE>In the 248th iteration through the for loop, the following memory
allocation error occurs:
<P>
<PRE>   SQLAllocStmt returned SQL_ERROR
   SQLSTATE = S1001, pfNativeError = [Microsoft][ODBC Single-Tier
   Driver]Memory allocation error

</PRE><h2>WORKAROUND</h2>
 
<P>
Use the following statement:
<P>
<PRE>   fOption = SQL_DROP

</PRE>instead of using the following in the SQLFreeStmt command:
<P>
<PRE>   fOption = SQL_CLOSE

</PRE> 
<P><h3>BUG: Access Driver Returns Incorrect pcbValue</h3>
 
<P>
Article ID: <B><A HREF="../ODBC/Q106480.htm">Q106480</A></B>
BUG# ODBCDBASE: 1858 (1.01.1928)
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The ODBC Access driver returns incorrect pcbValue when a column
with the ODBC SQL type SQL_TIMESTAMP is converted to SQL_C_DATE
via SQLBindCol or SQLGetData.
<P>
The following assumes that there is a table called DATETEST in which
column number 2 is a column of type datetime:
<P>
<PRE>  - SQLExecDirect the statement:

       select * from DATETEST

  - Do a SQLBindCol on col #2 so that fCType is SQL_C_DATE.

  - Do a SQLFetch.

  - Examine the value of *pcbValue.

</PRE>It will be 10; while the expected =6.
<P>
The same (invalid) pcbValue is returned if, instead of SQLBindCol,
data is retrieved through SQLGetData with fCType = SQL_C_DATE.
<P>
Correct pcbValue is returned when fCType = SQL_C_TIME.
<P>
 
<P><h3>BUG: SQL Server SQLSetParam Fails on the 252nd Parameter</h3>
 
<P>
Article ID: <B><A HREF="../ODBC/Q111723.htm">Q111723</A></B>
BUG# ODBCSS: 2816 (1.01.2920)
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The ODBC SQL Server driver returns an error with SQLSTATE S1093 when
SQLSetParam is called for the 252nd time on a prepared statement with more
than 252 parameter markers in it.
<P>
Because of this, users of Microsoft Access version 1.1 may see an error,
<P>
<PRE>   ODBC Call Failed

</PRE>when they try and update an attached table with more than 125 columns.
<P>
 
<P><h3>BUG: Extra Block of 256 Bytes Used by Access ODBC Driver</h3>
 
<P>
Article ID: <B><A HREF="../ODBC/Q111724.htm">Q111724</A></B>
BUG# ODBCDBASE: 2048 (1.01.1928)
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The following sequence of calls,
<P>
<PRE>   SQLAllocEnv, SQLAllocConnect, SQLConnect (or SQLDriverConnect),
   SQLDisconnect, SQLFreeConnect, and SQLFreeEnv

</PRE>will cause an extra block of 256 bytes to be used by the application that
made the calls. This happens only with the Access ODBC Driver.
<P>
 
<P><h3>BUG: SQL Server ODBC Driver Removes Entry From WIN.INI</h3>
 
<P>
Article ID: <B><A HREF="../ODBC/Q112513.htm">Q112513</A></B>
BUG# ODBCSS: 2834 (1.01.22807)
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
If an existing data source is reconfigured in such a way that only its name
is changed using either ODBC Administrator or ODBC icon from Control Panel
for the SQL Server driver, the corresponding server entry in the WIN.INI
entry (for non-default network or network library) is removed.
<P>
For example, assume a data source called MYSOURCE is configured and maps to
a SQL Server machine called SQLNT1. Also it is using dbmsspx3 Network
Library (Net-Library). So in the ODBC.INI file, the server entry for
[MYSOURCE] would be SQLNT1 and the corresponding entry in WIN.INI for this
would be under SQL Server section as follows:
<P>
<PRE>   [SQL Server]
   SQLNT1=dbmsspx3,SQLNT1

</PRE>Now if the data source name is changed from MYSOURCE to NEWSRC using
ODBC Administrator or ODBC icon in the control panel, the above entry
for SQLNT1 will be removed. This happens even though the server entry
in ODBC.INI for the [NEWSRC] still points to SQLNT1.
<P>
NOTE: In case of default network and Net-Library, no entry in needed
in the WIN.INI.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
Remove the data source and the add it back again. That will add the
entry back in WIN.INI.
<P>
 
<P><h3>BUG: Use of Certain Scalar Functions May Cause SQLFetch Errors</h3>
 
<P>
Article ID: <B><A HREF="../ODBC/Q112689.htm">Q112689</A></B>
BUG# ODBCDBASE: 1857 (1.01.1928)
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Under certain circumstances, memory allocation errors may be returned from
drivers that ship with the ODBC Database Driver Pack. These errors occur
when fetching a results set from a certain kind of SQL Statement that uses
ODBC scalar functions.
<P>
The following SQL query uses scalar functions and causes errors, not on
SQLExecDirect or SQLExecute, but on SQLFetch after 1087 rows have been
retrieved.
<P>
<PRE>   select *
   from "test"
   where
   {fn CONVERT('19'+
        {fn LEFT("test"."col_DATE_Y" ,2) }        +   '-'      +
        {fn LEFT("test"."col_DATE_MD",2)}       +   '-'  +
        {fn RIGHT({ fn RTRIM("test"."col_DATE_MD") }  , 2  )  }
   ,SQL_DATE)}
   &gt;= '1992-01-01'

</PRE>Errors received on SQLFetch after 1087 rows have been fetched:
<P>
<PRE>   [Microsoft][ODBC Single-Tier Driver]Error in predicate:
   [Microsoft][ODBC Single-Tier Driver]Expression evaluation error
   [Microsoft][ODBC Single-Tier Driver]Memory allocation error.
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 1.00<BR>
Keywords          : kbbug kbbug1.00 kbref<BR>
Version           : 1.00<BR>
Platform          : WINDOWS<BR>
Issue type        : kbbug<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 8, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
