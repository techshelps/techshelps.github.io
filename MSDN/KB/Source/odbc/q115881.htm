

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Checking Version of Driver Manager from an Application </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q115881">
<META NAME="KBModify" CONTENT="1997/10/14">
<META NAME="KBCreate" CONTENT="1994/06/06">
<META NAME="Keywords" CONTENT="kbfile kbusage">
<META NAME="KBArea" CONTENT="Support; KB; odbc">
<META NAME="Description" CONTENT="  An ODBC version 2.0 application needs to have a version 2.0 ODBC driver manager (ODBC.DLL). One way to verify the version of the driver manager is to make a call to SQLGetInfo with fInfoType= SQL_ODBC_VER. An application must connect to a specific ...">
<META NAME="Product" CONTENT="ODBC">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA9E,QAGU,QAU9,QABI,QAH5,QAGI,QAUD,QABH,QDL9,QBWO,QBWN,QAC1,QAJH,QAJ4,QAGR V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Checking Version of Driver Manager from an Application</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 14, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q115881</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.50
WINDOWS
kbusage kbfile
<P>
 
The information in this article applies to:
<P>
<PRE>  - Microsoft Open Database Connectivity, version 1.5
  - Microsoft Open Database Connectivity, version 2.0
</PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
An ODBC version 2.0 application needs to have a version 2.0 ODBC driver
manager (ODBC.DLL). One way to verify the version of the driver manager is
to make a call to SQLGetInfo with fInfoType= SQL_ODBC_VER. An application
must connect to a specific driver before calling SQLGetInfo as that
function requires a valid connected hdbc (connection handle).
<P>
Note, for certain post-1.0 and pre-2.0 versions of ODBC.DLL (actual file
version 1.5.xxxx), the return value for the SQLGetInfo call with
InfoType=SQL_ODBC_VER, is "02.00.0000" or "02.00".
<P>
For example, the driver manager ODBC.DLL that shipped with Microsoft Word
version 6.0 for Windows returns "02.00" for the above call. Similarly, the
driver manager ODBC.DLL that shipped with Microsoft Visual C version 1.5
for Windows, returns the version as "02.00.0000". Therefore, a 2.0 ODBC
application which uses SQLGetInfo to confirm it is using a true 2.0 driver
manager may fail against one of these earlier versions.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
In order to correctly distinguish a true 2.0 driver manager from one
returning an incorrect version (referenced above), a version 2.0
application should incorporate one of the following checks to ensure that
an incorrect version of driver manager is not loaded:

<OL><P><LI>An easy way for an application to make sure the driver manager is at
   least the released version 2.0 is to call SQLGetFunctions(hdbc,72) to
   see if SQLBindParameter is available. Only the "real" 2.0 driver manager
   will return "TRUE" in this case. However, this workaround (like calling
   SQLGetInfo) requires a connected hdbc. This causes an application to
   lead the user through the steps of connecting and then potentially
   inform the user that they have an incompatible version. This is
   applicable to both SQLGetInfo and SQLGetFunctions calls in general.

<P><LI>A better option for an application is to use the following information
   to detect the 2.0 or later driver manager. Driver version 1.5 and
   later have a string character that specifies the cursor level. It is
   used by driver manager and the cursor library to make sure that they
   will work together. The final 2.0 release has a cursor level of "g".
   Therefore, any letter greater than or equal to "g" is a 2.0 or later
   driver manager. This string can be obtained by loading string id# 199
   from the ODBC.DLL module. The following code example demonstrates how
   to get this information.
<P>
<P><PRE>      char buf[2];
      HMODULE hmodule;
</PRE><P>
<P><PRE>      hmodule = GetModuleHandle ("odbc.dll");
      if (LoadString (hmodule, 199, buf, sizeof(buf)))
      {
<PRE></PRE>         if ((*buf | 0x20) &gt;= 'g')
         {
                     //        Release 2.0 DM or later
         }
         else
         {
                    //         Older Driver Manager
         }
      }
      else
      {
         //         Older Driver Manager
      }

</PRE><P><LI>A third option for an application is to directly check the version
   information in the ODBC.DLL prior to making use of any ODBC
   functionality. This can be done using Windows Version Functions.
<P>
   For a sample program that checks the file version using Windows Version
   Functions, please check the Microsoft Software Library (MSL).
<P>
</OL><h2>MORE INFORMATION</h2>
 
<P>
GETVER.EXE is a sample program that uses the version functions in Microsoft
Windows version 3.1 Software Development Kit (SDK) to get the file version
of ODBC driver manager (ODBC.DLL).
<P>
<PRE>You can find <A HREF="http://support.microsoft.com/download/support/mslfiles/GETVER.EXE">GETVER.EXE</A> <I>(size: 90348 bytes)</I> 
                       , a self-extracting file, on the following services:

</PRE><LI>Microsoft's World Wide Web Site on the Internet
<P><PRE>      On the www.microsoft.com home page, click the Support icon.
      Click Knowledge Base, and select the product area.
<PRE></PRE>      Enter kbfile <A HREF="http://support.microsoft.com/download/support/mslfiles/GETVER.EXE">GETVER.EXE</A> <I>(size: 90348 bytes)</I> 
                             , and click GO!
      Open the article, and click the button to download the file.

</PRE><LI>Internet (anonymous FTP)
<P><PRE>      ftp ftp.microsoft.com
      Change to the Softlib/Mslfiles folder.
      Get <A HREF="http://support.microsoft.com/download/support/mslfiles/GETVER.EXE">GETVER.EXE</A> <I>(size: 90348 bytes)</I> 
</PRE>
<LI>The Microsoft Network
<P><PRE>      On the Edit menu, click Go To, and then click Other Location.
      Type "mssupport" (without the quotation marks).
      Double-click the MS Software Library icon.
      Find the appropriate product area.
      Locate and Download GETVER.EXE.
</PRE>
<LI>Microsoft Download Service (MSDL)
<P><PRE>      Dial (425) 936-6735 to connect to MSDL
      Download <A HREF="http://support.microsoft.com/download/support/mslfiles/GETVER.EXE">GETVER.EXE</A> <I>(size: 90348 bytes)</I> 
</PRE><P>
</UL>For additional information about downloading, please see the following
article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../zMiscellaneous/Q119591.htm">Q119591</A></B>
   TITLE     : How to Obtain Microsoft Support Files from Online
               Services
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.50 2.00 C++ Excel Word Desktop Database DM<BR>
Access VB Basic MSVC<BR>
KBCategory: kbusage kbfile<BR>
KBSubcategory:<BR>
Keywords          : kbfile kbusage<BR>
Version           : 1.50<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 14, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
