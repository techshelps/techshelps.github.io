

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INF: ODBC Desktop Drivers and OLE in a Multithreaded App </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q148726">
<META NAME="KBModify" CONTENT="1996/09/18">
<META NAME="KBCreate" CONTENT="1996/03/20">
<META NAME="Keywords" CONTENT="kbinterop kbprb">
<META NAME="KBArea" CONTENT="Support; KB; odbc">
<META NAME="Description" CONTENT="  If an application makes a SQLConnect or SQLDriverConnect call to ODBC Desktop Drivers 3.x, and if the application is idling after connecting, any other application that broadcasts a DDE message (message broadcasters) may hang. Once the application ...">
<META NAME="Product" CONTENT="ODBC">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGI,QA9E,QA9Q,QBWP,QAJH,QAUQ,QAI5,QBG2,QAU9,QAEV,QAIF,QDL9,QBWQ,QBWO,QBWN V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INF: ODBC Desktop Drivers and OLE in a Multithreaded App</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 18, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q148726</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Open Database Connectivity Desktop Driver version 3.4
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
If an application makes a SQLConnect or SQLDriverConnect call to ODBC
Desktop Drivers 3.x, and if the application is idling after connecting, any
other application that broadcasts a DDE message (message broadcasters) may
hang. Once the application disconnects from the database, the hanging
application works normally.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
When SQLConnect or SQLDriverConnect is called, ODBC DeskTop Drivers
initialize OLE using threads that they create internally. As a result of
OLE initialization, three hidden windows--DDEServerWindow, OLEChannelWnd,
and OLEMainthreadwndname--are created.
<P>
If the thread that made the database connection is idle, then the hidden
windows will not respond to any broadcast DDE messages sent by other
applications. For example, if an application broadcasts a message such as
WM_DDE_INITIATE to all windows, the SendMessage hangs until all the top-
level windows have received the message. Because the thread that created
the hidden windows is idle and does not respond, the application hangs.
This is a known OLE issue in mutithreaded applications.
<P>
For more detailed information on OLE threads and sample code, please refer
to the following article in the Microsoft Knowledge Base:
<P>
<PRE>   Article-ID: <B><A HREF="../OLEPROG/Q136885.htm">Q136885</A></B>
   TITLE     : OLE Threads Must Dispatch Messages

</PRE>To work around this problem, MsgWaitForMultipleObjects (refer to Win32 API)
should be called by all the threads that call SQLConnect or
SQLDriverConnect. The following example gives an overview of how to
accomplish this:
<P>
<PRE>void doit()
</PRE>{
<PRE>RETCODE rc;             /* Return code for ODBC functions  */
HENV henv;              /* Environment handle              */
HDBC hdbc;              /* Connection handle               */
HSTMT hstmt;            /* Statement handle                */

//variables
</PRE>unsigned char connStrOut[256];
MSG msg;
HANDLE myhandle;
<P>
myhandle = GetCurrentThread();
<P>
<PRE>//Allocate ODBC handles and make the connection to the database
</PRE>SQLAllocEnv(&amp;henv);
rc = SQLAllocConnect(henv, &amp;hdbc);
rc = SQLDriverConnect(hdbc, 0,(unsigned char *)"DSN=hello", SQL_NTS,
connStrOut, 256, NULL,
<PRE>        SQL_DRIVER_NOPROMPT);

//Workaround to prevent other OLE applications from hanging
</PRE>MsgWaitForMultipleObjects( 1, &amp;myhandle, FALSE, INFINITE,QS_ALLINPUT);
<P>
<PRE>//Make the thread idle
</PRE>AfxMessageBox("type in something",MB_OK);
<P>
<PRE>//Disconnect and free the ODBC handles
</PRE>SQLDisconnect(hdbc);
SQLFreeConnect(hdbc);
SQLFreeEnv(henv);
ExitThread(0);
}
<P>
<P>
<PRE>void CTestMultiThread::OnTest()
</PRE>{
HANDLE hTestThread;
DWORD  dwThreadID ;
hTestThread = CreateThread((LPSECURITY_ATTRIBUTES)NULL,0,
<PRE>          (LPTHREAD_START_ROUTINE)doit,this,0,&amp;dwThreadID);
</PRE>return;
}
<P>
<P>
NOTE: With the ODBC Desktop Database Drivers 2.0 running on Windows NT 3.5,
only one thread can make a SQLConnect or SQLDriverConnect call. Other
threads in the same application cannot make the connection calls at any
time while the application is running. Once a connection is made on a
thread, the connection (hdbc) can be shared by other threads. This is
because OLE did not support multithreading in Windows NT 3.5.
<P>
In Windows NT 3.51, the above does not apply as OLE supports
multithreading. However, you need to ensure that the first thread that
calls SQLConnect or SQLDriverConnect is the last thread to call
SQLDisconnect.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.40 ole odbc Multithreaded Application<BR>
KBCategory:  kbinterop kbprb<BR>
KBSubcategory:
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 18, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
