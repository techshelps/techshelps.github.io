

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INF: Cursor Behavior in Autocommit Mode </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q94984 ">
<META NAME="KBModify" CONTENT="1996/09/09">
<META NAME="KBCreate" CONTENT="1993/01/28">
<META NAME="Keywords" CONTENT="kbusage">
<META NAME="KBArea" CONTENT="Support; KB; odbc">
<META NAME="Description" CONTENT="  This article discusses the behavior of cursors when autocommit mode is ON. Specifically, it discusses the limitations of using multiple statement handles in this mode.  MORE INFORMATION  ODBC drivers that are transaction-capable support two modes f...">
<META NAME="Product" CONTENT="ODBC">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ODBC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QAO2,QA5W,QAB9,QAXB,QAU9,QA9E,QAGB,QAY5,QAC1,QBXJ,QBD2,QAYZ,QAD2,QAH7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INF: Cursor Behavior in Autocommit Mode</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 9, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q94984 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Open Database Connectivity, version 1.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article discusses the behavior of cursors when autocommit mode
is ON. Specifically, it discusses the limitations of using multiple
statement handles in this mode.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
ODBC drivers that are transaction-capable support two modes for
transactions: manual commit and autocommit. In manual commit mode, the
driver begins a transaction when an application submits a SQL
statement and no transaction is open. It commits or rolls back the
transaction on a call to SQLTransact. In autocommit mode, each SQL
statement is a single, complete transaction; the driver commits one
transaction for each statement.
<P>
All the statement handles belonging to a connection handle share the
same transaction space. Thus, calling SQLTransact commits or rolls
back all the inserts, deletes, and updates that are in progress on all
statement handles associated with the connection. Every statement
handle corresponds to a cursor that is automatically opened when a
statement is executed. When a statement is committed or rolled back,
the open cursor may exhibit three types of behavior:

<OL><P><LI>The cursor may be closed and deleted; any prepared statements will
   be lost.

<P><LI>The cursor may be closed, but not deleted; the application can
   re-execute a prepared statement.

<P><LI>The cursor position is preserved; the application may continue to
   fetch from where it left off.
<P>
</OL>Suppose the driver is in autocommit mode. The current hdbc (connection
handle) has two open hstmt's (statement handles). hstmt1 has a select
statement executing on it that has returned 100 rows. The app has
fetched 20 of them. Now hstmt 2 executes an update statement that
finishes immediately, before any more rows are fetched in hstmt1.
Because of autocommit mode, the update is committed. If hstmt1 now
tries to fetch the 21st row and the cursor commit behavior is either
(1) or (2) above, then this fetch will result in SQLSTATE 24000 -
invalid cursor state - because the cursor has been closed as a result
of the update commit.
<P>
The above discussion applies only if the driver is transaction capable
(that is, the SQLGetInfo with fInfoType = SQL_TXN_CAPPABLE returns 1).
If the driver is not transaction capable (like a 1-tier ISAM driver),
then there is no concept of a transaction commit, so hstmt1 can
continue fetching.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbusage<BR>
KBSubcategory:
<P>

Additional reference words: 1.00
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 9, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
