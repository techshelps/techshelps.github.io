

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DDE Example Between Visual Basic and Word for Windows </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q74862 ">
<META NAME="KBModify" CONTENT="1995/06/21">
<META NAME="KBCreate" CONTENT="1991/07/31">
<META NAME="Keywords" CONTENT="kbinterop kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  This article outlines the steps necessary to initiate dynamic data exchange (DDE) between a Microsoft Visual Basic application and a Microsoft Word for Windows (WINWORD.EXE) document at run time.  This article demonstrates how to:   - Prepare a Wor...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAIH,QAZ2,QBJZ,QDL9,QBWQ,QBWO,QBWN,QAGI,QAMA,QAD2,QA5F,QAY2,QAK6,QAYV V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>DDE Example Between Visual Basic and Word for Windows</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 21, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q74862 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Standard and Professional Editions of Microsoft Visual Basic for
<PRE>  Windows, versions 2.0 and 3.0
</PRE>- Microsoft Visual Basic programming system for Windows, version 1.0
 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article outlines the steps necessary to initiate dynamic data exchange
(DDE) between a Microsoft Visual Basic application and a Microsoft Word for
Windows (WINWORD.EXE) document at run time.
<P>
This article demonstrates how to:

<UL><LI>Prepare a Word for Windows document for active DDE.
<LI>Initiate a manual DDE link (information updated upon request from
   the destination) between the Visual Basic application (the
   destination) and the document loaded into Word for Windows (the source).
<LI>Use LinkRequest to update information in the Visual Basic destination
   based on information contained in the Word for Windows source.
<LI>Initiate a automatic DDE link (information updated automatically from
   source to destination) between the Visual Basic destination and the
   Word for Windows source.
<LI>Use LinkPoke to send information from the Visual Basic destination to
   the Word for Windows source.
<LI>Change the LinkMode property between automatic and manual.
<P>
</UL><h2>MORE INFORMATION</h2>
 
<P>
This information is included with the Help file provided with Microsoft
Professional Toolkit for Visual Basic version 1.0, Microsoft Visual Basic
version 2.0, and Microsoft Visual Basic version 3.0.
<P>
A destination application sends commands through DDE to the source
application to establish a link. Through DDE, the source provides data
to the destination at the request of the destination or accepts information
at the request of the destination.
<P>
<P><h3>Example Showing How to Establish a DDE Conversation</h3>
 
<P>
The steps below give an example of how to establish a DDE conversation
between a Visual Basic application and a document loaded into Word for
Windows (WINWORD.EXE).
<P>
<P><h3>STEP ONE: Create the Source Document in Word for Windows</h3>
 

<OL><P><LI>Start Microsoft Word for Windows. Document1 is created by default.
<P>
   NOTE: The Tip of the Day option in Microsoft Word version 6.0 for
   Windows must be turned off in order for this to work.

<P><LI>From the Window menu, choose Arrange All. This removes maximization if
   the document was maximized. Note that the title at the top of the
   WINWORD.EXE main title bar is now:
<P>
<P><PRE>      Microsoft Word
</PRE><P>
   instead of:
<P>
<P><PRE>      Microsoft Word - Document1
</PRE>
<P><LI>Press CTRL+SHIFT+END to select to the end of the document.

<P><LI>From the Insert menu (or the Edit menu in Microsoft Word version 6.0),
   choose Bookmark. Under Bookmark Name, type:
<P>
<P><PRE>      DDE_Link
</PRE><P>
   Press the ENTER key. This sets a bookmark for the entire document. This
   bookmark functions as the LinkItem in the DDE conversation.

<P><LI>From the File menu, choose Save As, and save the document with the
   name SOURCE.DOC.
<P>
   NOTE: SOURCE.DOC must be saved to the working directory used by the
   Visual Basic application or the DDE won't work. Specifying the path in
   the SHELL statement in Visual Basic will not work.

<P><LI>Exit from Word for Windows. For this particular example to function
   correctly, WINWORD.EXE must not be loaded and running.
<P>
</OL><h3>STEP TWO: Create the Destination Application in Visual Basic</h3>
 

<OL><P><LI>Start Visual Basic. Form1 is created by default.

<P><LI>Create the following controls on Form1, giving the controls the
   properties shown in the table:
<P>
<PRE>   Default Name   Caption            Name
   ----------------------------------------------
   Text1          (Not applicable)   Text1
   Option1        Manual Link        ManualLink
   Option2        Automatic Link     AutomaticLink
   Command1       Poke               Poke
   Command2       Request            Request

</PRE><P><LI>Add the following code to the General Declaration section of Form1:
<P>
   Const AUTOMATIC = 1
   Const MANUAL = 2
   Const NONE = 0

<P><LI>Add the following code to the Load event procedure of Form1:
<P>
<PRE>   Sub Form_Load ()
      'This procedure starts WINWORD.EXE, loads the document that was
      'created earlier, and prepares for DDE by creating a bookmark to
      'the whole document. This bookmark is necessary because it
      'functions as the LinkItem for the source in the DDE conversation.

      z% = Shell("WinWord Source.Doc",1)

      z% = DoEvents ()  'Process Windows events to ensure that
                        'WINWORD.EXE is executed before any attempt is
                        'made to perform DDE with it.

      Text1.LinkMode = NONE              'Clears DDE link if it exists.
      Text1.LinkTopic = "WinWord|Source" 'Sets up link with WINWORD.EXE.
      Text1.LinkItem = "DDE_Link"        'Set link to bookmark on document.
      Text1.LinkMode = MANUAL            'Establish a manual DDE link.
      ManualLink.Value = TRUE
   End Sub

</PRE><P><LI>Add the following code to the Click event procedure of the Manual
   Link button:
<P>
<PRE>   Sub ManualLink_Click ()
      Request.Visible = TRUE  'Make request button valid.
      Text1.LinkMode = NONE   'Clear DDE Link.
      Text1.LinkMode = MANUAL 'Reestablish new LinkMode.
   End Sub

</PRE><P><LI>Add the following code to the Click event procedure of the Automatic
   Link button:
<P>
<PRE>   Sub AutomaticLink_Click ()
      Request.Visible = FALSE     'No need for button with automatic link.
      Text1.LinkMode = NONE       'Clear DDE Link.
      Text1.LinkMode = AUTOMATIC  'Reestablish new LinkMode.
   End Sub

</PRE><P><LI>Add the following code to the Click event procedure of the Request
   button:
<P>
<PRE>   Sub Request_Click ()
      'With a manual DDE link this button is visible. Clicking this button
      'requests an update of information from the source application to the
      'destination application.
      Text1.LinkRequest
   End Sub

</PRE><P><LI>Add the following code to the Click event procedure of the Poke button:
<P>
<PRE>   Sub Poke_Click ()
      'With any DDE link, this button is visible. Clicking this button
      'pokes information from the destination application into the source
      'application.
      Text1.LinkPoke
   End Sub

</PRE></OL><h3>STEP THREE: Try it out</h3>
 
<P>
Now, you have two choices. You can run the Visual Basic destination
application from the Visual Basic VB.EXE environment by skipping to step 4
below, or you can save the application, create an .EXE file, and run that
from Windows by beginning with step 1 below.

<OL><P><LI>From the File menu, choose Save, and save the form and project with
   the name DEST.

<P><LI>From the File menu, choose Make EXE File with the name DEST.EXE.

<P><LI>Exit from the Visual Basic environment (VB.EXE).

<P><LI>Run the application. Run an .EXE file from Windows, or if you're in the
   Visual Basic environment, from the Run menu, choose Start.
<P>
   Form1 of the Visual Basic destination application will be loaded, and
   Word for Windows will automatically start and load SOURCE.DOC.

<P><LI>Make sure the main title bar in WINWORD.EXE reads "Microsoft Word,"
   not "Microsoft Word - SOURCE.DOC." If the title bar is not correct,
   choose Arrange All from the Window menu.
<P>
</OL><h3>STEP FOUR: Experiment with DDE Between Visual Basic and Word for Windows</h3>
 

<OL><P><LI>Try typing some text into the document in Word for Windows. Then click
   the Request button. The text appears in the text box.

<P><LI>Click the Automatic Link button. Then type some more text into the
   document in Word for Windows. The text is automatically updated in the
   Visual Basic text box.

<P><LI>Type some text in the text box in the Visual Basic application. Then
   click the Poke button. The text goes to the Word for Windows document.
<P>
</OL>Note that if in the WINWORD.EXE document, you delete the total contents of
the bookmark, the bookmark is also deleted. Any attempt to perform DDE with
this WINWORD.EXE session after deleting the bookmark causes this error:
<P>
<PRE>   Foreign applications won't perform DDE method or operation.

</PRE></OL>If this happens, you must re-create the bookmark in the document in Word
for Windows before performing any further DDE operations.
<P>
In Visual Basic version 1.0, you need to add the following two global
constants to the form's general declarations section:
<P>
<PRE>   CONST TRUE = -1
   CONST FALSE = NOT TRUE
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 2.00 3.00 winword<BR>
KBCategory: kbinterop kbprg kbcode<BR>
KBSubcategory: IAPDDE<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 21, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
