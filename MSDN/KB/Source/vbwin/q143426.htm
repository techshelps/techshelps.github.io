

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: VB3: Pass an Array of Controls to a SUB or FUNCTION </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q143426">
<META NAME="KBModify" CONTENT="1997/03/24">
<META NAME="KBCreate" CONTENT="1996/02/01">
<META NAME="Keywords" CONTENT="vbwin kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  In Microsoft Visual Basic version 3.0 for Windows, it is not possible to pass a control array to a user defined SUB or FUNCTION. You can only pass elements of a control array.  WORKAROUND  In order to work around this limitation, you can create an ...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAD7,QAH7,QAH6,QBS0,QBV4,QAFF,QAH4,QAMN,QAHP,QA7O,QAOE,QAB5,QBT6,QBWS,QAB9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: VB3: Pass an Array of Controls to a SUB or FUNCTION</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 24, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q143426</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:
<P>
- Microsoft Visual Basic programming system for Windows, version 3.0
 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Visual Basic version 3.0 for Windows, it is not possible to
pass a control array to a user defined SUB or FUNCTION. You can only pass
elements of a control array.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
In order to work around this limitation, you can create an array of
specific objects and pass this array to a Sub or Function.
<P>
Step-by-Step example
 
<P>
The following example converts the content of all the Textboxes on a
form to upper-case characters when the user clicks on the Command Button.

<OL><P><LI>Start Visual Basic for Windows. If Visual Basic is already running,
   click New Project on the File menu (ALT+F+N). Form1 is created by
   default.

<P><LI>Add a Command Button named Command1 to the form.

<P><LI>Add 3 text boxes to the form named Text1.

<P><LI>Add the following code to the general declarations section of Form1:
<P>
<PRE>      Sub AllUcase(txt() As TextBox)
        Dim i As Integer
        For i = LBound(txt) To UBound(txt)
            txt(i) = UCase(txt(i))
        Next i
      End Sub

</PRE><P><LI>In the Command1_Click event of Form1, add the following code:
<P>
<PRE>      Sub Command1_Click()
        On Error Resume Next
        Dim i As Integer
        Dim Again As Integer
        ReDim Tabtxt(0) As TextBox

        i = 0
        Again = True
        While Again
          Text1(i).Tag = Text1(i).Tag
          If Err = 0 Then
            Redim Preserve TabTxt(0 To i)
            Set TabTxt(i) = Text1(i)
          Else
            Again = False
          End If
          i = i + 1
        Wend
        Call AllUcase(TabTxt())
      End Sub

</PRE><P><LI>Press ALT+F+V to save the project. Then press F5 to run the program.
   Click once on the form and exit the application.

<P><LI>Once the program is running, enter values in the different text boxes
   and click on the Command1 button.
<P>
</OL>In Visual Basic 4.0, a control array can be passed as an Object. The
following code passes a control array of TextBoxes, and adds another
TextBox to the control array. The call to the SUB would be as follows:
<P>
<PRE>      AddControlArrayElement Text1

</PRE></OL>The code in the procedure would be as follows:
<P>
<PRE>   Sub AddControlArrayElement (ControlArray as Object)
     NextElement% = ControlArray.Count
     Load ControlArray(NextElement%)
     ControlArray(NextElement%).Top = ControlArray(NextElement%-1).Top+100
     ControlArray(NextElement%).Visible=True
   End Sub
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : vbwin kbprg<BR>
Version             : 3.0<BR>
Platform            : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 24, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
