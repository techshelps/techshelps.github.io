

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Sort a ListView Control by Date </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q170884">
<META NAME="KBModify" CONTENT="1997/07/01">
<META NAME="KBCreate" CONTENT="1997/07/01">
<META NAME="Keywords" CONTENT="vb5all vb5howto VBKBAX VBKBComp VBKBCtrl kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  When using a Listview control, you can set the Sorted property for the control to sort the list alphabetically. However, the Listview control does not expose a property or method for sorting a list by date. This article presents a method that you c...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB5,QA7O,QAOE,QANF,QAMN,QATX,QAE1,QAB6,QACE,QBXS,QBBI,QAPN,QAFF,QACJ,QAMB V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Sort a ListView Control by Date</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 1, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q170884</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Control Creation, Learning, Professional, and
   Enterprise Editions for Windows, version 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
When using a Listview control, you can set the Sorted property for the
control to sort the list alphabetically. However, the Listview control does
not expose a property or method for sorting a list by date. This article
presents a method that you can use to sort a Listview control by date.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To sort data in a ListView control by date, it is necessary to provide a
comparison function to the control via AddressOf.
<P>
NOTE: Using this approach, you will sort the data in the control but not
the ListItems collection. Therefore, if you must read the data from the
list in sorted order, it is necessary to step through the actual list
rather than the ListItems collection.
<P>
<P><h3>Step-by-Step Example</h3>
 

<OL><P><LI>Start a new Visual Basic project. Form1 is created by default.

<P><LI>Click Components on the Project menu. Check "Microsoft Windows Common
   Controls 5.0" and click OK.

<P><LI>Add a Module to the project.

<P><LI>Draw a ListView control on Form1.

<P><LI>Add the following code to Form1:
<P>
<P><PRE>      Option Explicit
</PRE>   
<P><PRE>      Private Sub Form_Load()
</PRE>   
<PRE>        Dim clmAdd As ColumnHeader
        Dim itmAdd As ListItem
   
        'Add two Column Headers to the ListView control
        Set clmAdd = ListView1.ColumnHeaders.Add(Text:="Name")
        Set clmAdd = ListView1.ColumnHeaders.Add(Text:="Date")
   
        'Set the view property of the Listview control to Report view
        ListView1.View = lvwReport
   
        'Add data to the ListView control
        Set itmAdd = ListView1.ListItems.Add(Text:="Joe")
        itmAdd.SubItems(1) = "05/07/97"
   
        Set itmAdd = ListView1.ListItems.Add(Text:="Sally")
        itmAdd.SubItems(1) = "04/08/97"
   
        Set itmAdd = ListView1.ListItems.Add(Text:="Bill")
        itmAdd.SubItems(1) = "05/29/97"
   
        Set itmAdd = ListView1.ListItems.Add(Text:="Fred")
        itmAdd.SubItems(1) = "05/17/97"

        Set itmAdd = ListView1.ListItems.Add(Text:="Anne")
        itmAdd.SubItems(1) = "04/01/97"
   
      End Sub
   
      Private Sub ListView1_ColumnClick(ByVal ColumnHeader As _
              ComctlLib.ColumnHeader)
        Dim strName As String
        Dim dDate As Date
        Dim lngItem As Long
   
        'Handle User click on column header
        If ColumnHeader.Tag = "Name" Then  'User clicked on Name header
          ListView1.Sorted = True        'Use default sorting to sort the
          ListView1.SortKey = 0          'items in the list
        Else
          ListView1.Sorted = False       'User clicked on the Date header
                                         'Use our sort routine to sort
                                         'by date
          SendMessage ListView1.hWnd, _
                      LVM_SORTITEMS, _
                      ListView1.hWnd, _
                      AddressOf CompareDates
        End If
   
        'Refresh the ListView before writing the data
        ListView1.Refresh
   
        'Loop through the items in the List to print them out in
        'sorted order.
        'NOTE: You are looping through the ListView control because when _
        'sorting by date the ListItems collection won't be sorted.
   
        For lngItem = 0 To ListView1.ListItems.Count - 1
          ListView_GetListItem lngItem, ListView1.hWnd, strName, dDate
        Next
   
      End Sub

</PRE><P><LI>Add the following code to Module1:
<P>
<P><PRE>      Option Explicit
</PRE>   
<P><PRE>      'Structures
</PRE>   
<P><PRE>      Public Type POINT
<PRE></PRE>        x As Long
        y As Long
      End Type
   
      Public Type LV_FINDINFO
        flags As Long
        psz As String
        lParam As Long
        pt As POINT
        vkDirection As Long
      End Type
   
      Public Type LV_ITEM
        mask As Long
        iItem As Long
        iSubItem As Long
        State As Long
        stateMask As Long
        pszText As Long
        cchTextMax As Long
        iImage As Long
        lParam As Long
        iIndent As Long
      End Type
   
      'Constants
      Private Const LVFI_PARAM = 1
      Private Const LVIF_TEXT = &amp;H1
   
      Private Const LVM_FIRST = &amp;H1000
      Private Const LVM_FINDITEM = LVM_FIRST + 13
      Private Const LVM_GETITEMTEXT = LVM_FIRST + 45
      Public Const LVM_SORTITEMS = LVM_FIRST + 48

      'API declarations
      Declare Function SendMessage Lib "user32" Alias "SendMessageA" ( _
        ByVal hWnd As Long, _
        ByVal wMsg As Long, _
        ByVal wParam As Long, _
        ByVal lParam As Long) As Long

      'Module Functions and Procedures
   
      'CompareDates: This is the sorting routine that gets passed to the
      'ListView control to provide the comparison test for date values.
   
      Public Function CompareDates(ByVal lngParam1 As Long, _
                                   ByVal lngParam2 As Long, _
                                   ByVal hWnd As Long) As Long
   
        Dim strName1 As String
        Dim strName2 As String
        Dim dDate1 As Date
        Dim dDate2 As Date
   
        'Obtain the item names and dates corresponding to the
        'input parameters
   
        ListView_GetItemData lngParam1, hWnd, strName1, dDate1
        ListView_GetItemData lngParam2, hWnd, strName2, dDate2
   
        'Compare the dates
        'Return 0 ==&gt; Less Than
        '       1 ==&gt; Equal
        '       2 ==&gt; Greater Than
   
        If dDate1 &lt; dDate2 Then
          CompareDates = 0
        ElseIf dDate1 = dDate2 Then
          CompareDates = 1
        Else
          CompareDates = 2
        End If
   
      End Function

      'GetItemData - Given Retrieves
   
      Public Sub ListView_GetItemData(lngParam As Long, _
                                      hWnd As Long, _
                                      strName As String, _
                                      dDate As Date)
        Dim objFind As LV_FINDINFO
        Dim lngIndex As Long
        Dim objItem As LV_ITEM
        Dim baBuffer(32) As Byte
        Dim lngLength As Long
   
        '
        ' Convert the input parameter to an index in the list view
        '
        objFind.flags = LVFI_PARAM
        objFind.lParam = lngParam
        lngIndex = SendMessage(hWnd, LVM_FINDITEM, -1, VarPtr(objFind))
   
        '
        ' Obtain the name of the specified list view item
        '
        objItem.mask = LVIF_TEXT
        objItem.iSubItem = 0
        objItem.pszText = VarPtr(baBuffer(0))
        objItem.cchTextMax = UBound(baBuffer)
        lngLength = SendMessage(hWnd, LVM_GETITEMTEXT, lngIndex, _
                                VarPtr(objItem))
        strName = Left$(StrConv(baBuffer, vbUnicode), lngLength)
   
        '
        ' Obtain the modification date of the specified list view item
        '
        objItem.mask = LVIF_TEXT
        objItem.iSubItem = 1
        objItem.pszText = VarPtr(baBuffer(0))
        objItem.cchTextMax = UBound(baBuffer)
        lngLength = SendMessage(hWnd, LVM_GETITEMTEXT, lngIndex, _
                                VarPtr(objItem))
        If lngLength &gt; 0 Then
          dDate = CDate(Left$(StrConv(baBuffer, vbUnicode), lngLength))
        End If
   
      End Sub

      'GetListItem - This is a modified version of ListView_GetItemData
      ' It takes an index into the list as a parameter and returns
      ' the appropriate values in the strName and dDate parameters.
   
      Public Sub ListView_GetListItem(lngIndex As Long, _
                                      hWnd As Long, _
                                      strName As String, _
                                      dDate As Date)
        Dim objItem As LV_ITEM
        Dim baBuffer(32) As Byte
        Dim lngLength As Long
   
        '
        ' Obtain the name of the specified list view item
        '
        objItem.mask = LVIF_TEXT
        objItem.iSubItem = 0
        objItem.pszText = VarPtr(baBuffer(0))
        objItem.cchTextMax = UBound(baBuffer)
        lngLength = SendMessage(hWnd, LVM_GETITEMTEXT, lngIndex, _
                                VarPtr(objItem))
        strName = Left$(StrConv(baBuffer, vbUnicode), lngLength)
   
        '
        ' Obtain the modification date of the specified list view item
        '
        objItem.mask = LVIF_TEXT
        objItem.iSubItem = 1
        objItem.pszText = VarPtr(baBuffer(0))
        objItem.cchTextMax = UBound(baBuffer)
        lngLength = SendMessage(hWnd, LVM_GETITEMTEXT, lngIndex, _
                                VarPtr(objItem))
        If lngLength &gt; 0 Then
          dDate = CDate(Left$(StrConv(baBuffer, vbUnicode), lngLength))
        End If
   
      End Sub

</PRE><P><LI>Save your project.

<P><LI>Press the F5 key to run the application. Click on the Date column
   header to sort the items in the list by date.
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : vb5all vb5howto VBKBAX VBKBComp VBKBCtrl kbhowto<BR>
Version             : 5.0<BR>
Platform            : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 1, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
