

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Invoke MessageBeep API to Play System Alert .WAV Sounds </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q110103">
<META NAME="KBModify" CONTENT="1996/02/18">
<META NAME="KBCreate" CONTENT="1994/01/13">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  This article describes how to invoke the MessageBeep API function to play the waveform sound associated with a given Windows system alert level.  This is useful for playing a sound such as when you display a message box with the MsgBox statement.  ...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAHR,QAYS,QBS0,QAPN,QDL9,QBWO,QBWN,QA01,QAB4,QAO4,QBWQ,QAGB,QABA V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Invoke MessageBeep API to Play System Alert .WAV Sounds</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 18, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q110103</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Standard and Professional Editions of Microsoft Visual Basic for
   Windows, version 3.0
<LI>Microsoft Windows version 3.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article describes how to invoke the MessageBeep API function to play
the waveform sound associated with a given Windows system alert level.
<P>
This is useful for playing a sound such as when you display a message box
with the MsgBox statement.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The sound for each Windows alert level is identified by an entry in the
[sounds] section of the WIN.INI initialization file. You can use the
Windows Control Panel to change this [sounds] section.
<P>
The MessageBeep API function returns control to Visual Basic immediately
after queuing a sound. The Visual Basic program executes subsequent code
while the MessageBeep sound plays asynchronously.
<P>
The MessageBeep API function accepts one parameter, which can have one of
the following values:
<P>
<PRE>Parameter Value       Meaning
</PRE> 
<PRE>-1                    Produces a standard beep sound by using the computer
                      speaker.
MB_ICONASTERISK       Plays the sound identified by the SystemAsterisk
                      entry in the [sounds] section of WIN.INI.
MB_ICONEXCLAMATION    Plays the sound identified by the SystemExclamation
                      entry in the [sounds] section of WIN.INI.
MB_ICONHAND           Plays the sound identified by the SystemHand
                      entry in the [sounds] section of WIN.INI.
MB_ICONQUESTION       Plays the sound identified by the SystemQuestion
                      entry in the [sounds] section of WIN.INI.
MB_OK                 Plays the sound identified by the SystemDefault
                      entry in the [sounds] section of WIN.INI.

</PRE><h3>Example: How to Invoke MessageBeep API Function</h3>
 

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Double click Form1. Add the following to the Form Load event code:
<P>
<PRE>   Sub Form_Load ()
      Const MB_ICONQUESTION = 32     ' Warning query. See CONSTANTS.TXT.
      Const MB_ICONEXCLAMATION = 48  ' Warning message.
      Const MB_YESNO = 4             ' Yes and No buttons
      MessageBeep MB_ICONEXCLAMATION      ' Plays waveform sound.
      MsgBox "Wow!", MB_ICONEXCLAMATION   ' Displays message box.
      MessageBeep MB_ICONQUESTION
      MsgBox "Yes or No?", MB_ICONQUESTION + MB_YESNO
      End
   End Sub

   NOTE: The MB_ICONQUESTION and MB_ICONEXCLAMATION values are the same for
   both the MessageBeep API function and the MsgBox statement. See the
   "Parameters for MsgBox Statement" section below.

</PRE><P><LI>Choose (general) from the Object menu. Add the following Declare to the
   general declarations section:
<P>
<PRE>   Declare Sub MessageBeep Lib "User" (ByVal wType As Integer)

</PRE><P><LI>Start the program or press the F5 key. MessageBeep plays the appropriate
   sound waveform file as each message box displays.
<P>
</OL><h3>Windows Sound Events Are Not Standardized</h3>
 
<P>
Windows version 3.1 allows you to assign waveform audio sounds to certain
events through the Control Panel. These events are:
<P>
<PRE>   Default Beep
   Exclamation
   Windows Start
   Windows Exit
   Critical Stop
   Question
   Asterisk

</PRE></OL>System sounds are dependent upon the application in which they occur. To
produce a sound, an application needs to notify Windows that a sound is to
occur, and then tell Windows which system sound to play. The application
will specify one of the seven default system sounds or any sound event
that it has added to this list.
<P>
This means that you cannot add sound events to the default list and have an
application play that sound, unless the application has been specifically
written to call that sound event.
<P>
Additionally, applications for Windows have not standardized on when these
sound events should occur. Therefore, one application may play the Default
Beep sound when an error occurs while another application might play the
Critical Stop sound.
<P>
<P><h3>Parameters for MsgBox Statement</h3>
 
<P>
<PRE>Const MB_ICONSTOP = 16          ' Critical message; displays STOP icon.
Const MB_ICONQUESTION = 32      ' Warning query; displays ? icon.
Const MB_ICONEXCLAMATION = 48   ' Warning message; displays ! icon.
Const MB_ICONINFORMATION = 64   ' Information message; displays i icon.

Const MB_OK = 0                 ' OK button only
Const MB_OKCANCEL = 1           ' OK and Cancel buttons
Const MB_ABORTRETRYIGNORE = 2   ' Abort, Retry, and Ignore buttons
Const MB_YESNOCANCEL = 3        ' Yes, No, and Cancel buttons
Const MB_YESNO = 4              ' Yes and No buttons
Const MB_RETRYCANCEL = 5        ' Retry and Cancel buttons

Const MB_APPLMODAL = 0          ' Application Modal Message Box
Const MB_DEFBUTTON1 = 0         ' First button is default
Const MB_DEFBUTTON2 = 256       ' Second button is default
Const MB_DEFBUTTON3 = 512       ' Third button is default
Const MB_SYSTEMMODAL = 4096      'System Modal

</PRE>The above parameters for the MsgBox statement can also be found in any of
the following sources:

<UL><LI>Visual Basic's Help menu; search for the MsgBox statement.
<LI>The CONSTANTS.TXT file.
<LI>Page 384-387 of the "Language Reference."
<P></UL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: APrgOther<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 18, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
