

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Erase Won't Clear Contents of Huge Fixed Array as Variant </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q99457 ">
<META NAME="KBModify" CONTENT="1997/10/30">
<META NAME="KBCreate" CONTENT="1993/05/30">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  The Erase statement fails to erase huge static arrays of type Variant. This problem occurs with the Variant data type only.  The problem does not occur if the size of the array is less than 64K or if you use a huge dynamic array of type Variant.  C...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAEF,QAGB,QBS0,QAVX,QAJX,QADR,QAG1,QAR4,QAM1,QAKP,QAPN,QAO4,QAH4,QDL9,QBWQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Erase Won't Clear Contents of Huge Fixed Array as Variant</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 30, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q99457 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
2.00 3.00
WINDOWS
kbenv kbbuglist
<P>
 
The information in this article applies to:
<P>
- Standard and Professional Editions of Microsoft Visual Basic programming
<PRE>  system for Windows, versions 2.0 and 3.0
</PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The Erase statement fails to erase huge static arrays of type Variant. This
problem occurs with the Variant data type only.
<P>
The problem does not occur if the size of the array is less than 64K or if
you use a huge dynamic array of type Variant.
<P>
<P><h2>CAUSE</h2>
 
<P>
This problem occurs with huge static arrays of the variant data type. An
array is static when you dimension it with the Static keyword or if you
use the DIM keyword to dimension the array in the general-declaration
section of a form or module.
<P>
The problem occurs because the Erase statement corrupts the array
descriptor for a huge static array of variants. However, only the
references to the 64K data segments other than the first segment are
corrupted. Any elements in the first 64K segment of the array are always
erased properly. All elements stored in other segments are not erased.
<P>
The Erase statement is only effective the first time you erase the elements
of a huge static variant array.  Any additional attempt to Erase elements
of
the array will fail and the elements in the array in data segments other
than the first segment will not be erased.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
To work around the problem, clear each element of the array manually by
setting each element to Empty. Replace the "Erase a" statement in step 2
shown below with this code:
<P>
<PRE>   For i% = 0 to 5000
      a(i%) = Empty            '** Empty = 0
   Next i%

</PRE><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in Microsoft Visual Basic
version 2.0 for Windows. This problem was corrected in Microsoft Visual
Basic version 3.0 for Windows.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce Problem</h3>
 

<OL><P><LI>Start Visual Basic, or choose New Project from the File menu (ALT, F, N)
   if Visual Basic is already running. Form1 is created by default.

<P><LI>Enter the following procedure into the general section of Form1:
<P>
<PRE>   Sub test()

     Static a(5000) As Variant  'Huge static variant array

     a(1) = 1              '*element 1 is in the first segment
     a(100) = 2            '*element 100 is in the first segment
     a(5000) = 3           '*element 5000 is in the second segment

     Debug.Print "Before the Erase:"
     Debug.Print "a(1) = "; a(1)
     Debug.Print "a(100) = "; a(100)
     Debug.Print "a(5000) = "; a(5000)
     Debug.Print ""

     Erase a               '*erase the elements

     Debug.Print "After the Erase:"
     Debug.Print "a(1) = "; a(1)
     Debug.Print "a(100) = "; a(100)
     Debug.Print "a(5000) = "; a(5000)
     Debug.Print ""

   End Sub

</PRE><P><LI>Place the following code in the Form_Click event procedure for Form1:
<P>
   Form_Click ()
<P><PRE>      Call test
<PRE></PRE>   End Sub

</PRE><P><LI>Press F5 to run the example. Click Form1 to see the following results
   in the Debug Window:
<P>
   Before the Erase:
   a(1) =  1
   a(100) =  2
   a(5000) =  3
<P>
   After the Erase:
   a(1) =
   a(100) =
   a(5000) =
<P>
   But if you click again, you will see different results:
<P>
   Before the Erase
   a(1) =  1
   a(100) =  2
   a(5000) =  3
<P>
   After the Erase
   a(1) =
   a(100) =
   a(5000) =  3
<P>
</OL>This shows that the elements of the huge static Variant array were not
cleared, but the elements of a smaller Variant array were cleared.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: buglist2.00 fixlist3.00 1.00<BR>
KBCategory: kbenv kbbuglist<BR>
KBSubcategory: EnvtRun<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 30, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
