

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Create Rubber-Band Lines/Boxes in Visual Basic </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q71488 ">
<META NAME="KBModify" CONTENT="1996/05/16">
<META NAME="KBCreate" CONTENT="1991/04/19">
<META NAME="Keywords" CONTENT="kbgraphic kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Creating rubber bands within Visual Basic can be done using the DrawMode property. Rubber bands are lines that stretch as you move the mouse cursor from a specified point to a new location. This can be very useful in graphics programs and when defi...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAIB,QBXT,QA5V,QBS0,QAFF,QAMN,QACR,QA4Q,QAXQ,QAUR,QBQU,QBXS,QBE7,QBE6,QAGI V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Create Rubber-Band Lines/Boxes in Visual Basic</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  May 16, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q71488 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Standard and Professional Editions of Microsoft Visual Basic for
   Windows, versions 2.0 and 3.0
<LI>Microsoft Visual Basic programming system for Windows, version 1.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Creating rubber bands within Visual Basic can be done using the
DrawMode property. Rubber bands are lines that stretch as you move the
mouse cursor from a specified point to a new location. This can be
very useful in graphics programs and when defining sections of the
screen for clipping routines.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The theory of drawing a rubber-band box is as follows:

<OL><P><LI>Draw a line from the initial point to the location of the mouse
   cursor using:
<P>
<P><PRE>      [form].DrawMode = 6. {INVERT}
</PRE>
<P><LI>Move the mouse cursor.

<P><LI>Save the DrawMode.

<P><LI>Set the [form].DrawMode to 6. {INVERT}

<P><LI>Draw the same line that was drawn in step 1. This will restore the
   image underneath the line.

<P><LI>Set the [form].DrawMode back to the initial DrawMode saved in step 3.

<P><LI>Repeat the cycle again.
<P>
</OL>DrawMode equal to INVERT allows the line to be created using the
inverse of the background color. This allows the line to be always
displayed on all colors.
<P>
The sample below will demonstrate the rubber-band line and the
rubber-band box. Clicking the command buttons will allow the user
to select between rubber-band line or a rubber-band box. The user will
also be able to select a solid line or a dashed line.
<P>
Create and set the following controls and properties:
<P>
<PRE>   Control Name   Caption      Picture
   ------------------------------------------------
   Form1          Form1        c:\windows\chess.bmp
   Command1       RubberBand
   Command2       RubberBox
   Command3       Dotted
   Command4       Solid

</PRE></OL>In the general section of your code, define the following constants:
<P>
<PRE>Const INVERSE = 6       '*Characteristic of DrawMode property(XOR).
Const SOLID = 0         '*Characteristic of DrawStyle property.
Const DOT = 2           '*Characteristic of DrawStyle property.
</PRE>Const TRUE = -1
Const FALSE = 0
Dim DrawBox As Integer  '*Boolean-whether drawing Box or Line
Dim OldX, OldY, StartX, StartY As Single  '* Mouse locations
<P>
In the appropriate procedures, add the following code:
<P>
<PRE>Sub Form_MouseDown (Button As Integer, Shift As Integer, X As
                                       Single, Y As Single)
   '* Store the initial start of the line to draw.
   StartX = X
   StartY = Y

   '* Make the last location equal the starting location
   OldX = StartX
   OldY = StartY
End Sub

Sub Form_MouseMove (Button As Integer, Shift As Integer, X As
                      Single, Y As Single)
   '* If the button is depressed then...
   If Button Then
      '* Erase the previous line.
      Call DrawLine(StartX, StartY, OldX, OldY)

      '* Draw the new line.
      Call DrawLine(StartX, StartY, X, Y)

      '* Save the coordinates for the next call.
      OldX = X
      OldY = Y
   End If
End Sub

Sub DrawLine (X1, Y1, X2, Y2 As Single)
   '* Save the current mode so that you can reset it on
   '* exit from this sub routine. Not needed in the sample
   '* but would need it if you are not sure what the
   '* DrawMode was on entry to this procedure.
   SavedMode% = DrawMode

   '* Set to XOR
   DrawMode = INVERSE

   '*Draw a box or line
   If DrawBox Then
      Line (X1, Y1)-(X2, Y2), , B
   Else
      Line (X1, Y1)-(X2, Y2)
   End If

   '* Reset the DrawMode
   DrawMode = SavedMode%
End Sub

Sub Form_MouseUp (Button As Integer, Shift As Integer, X As Single,
                  Y As Single)
   '* Stop drawing lines/boxes.
   StartEvent = FALSE
End Sub

Sub Command2_Click ()
   '* Boolean value to determine whether to draw a line or box.
   DrawBox = TRUE
End Sub

Sub Command1_Click ()
   '* Boolean value to determine whether to draw a line or box.
   DrawBox = FALSE
End Sub

Sub Command3_Click ()
   '* Create a dotted line
   Form1.DrawStyle = DOT
End Sub

Sub Command4_Click ()
   '* Create a solid line.
   Form1.DrawStyle = SOLID
End Sub
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 2.00 3.00<BR>
KBCategory: kbgraphic kbprg kbcode<BR>
KBSubcategory: APrgGrap PrgCtrlsStd<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  May 16, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
