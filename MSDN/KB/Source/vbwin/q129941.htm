

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB:Unexpected Results When Raise Method Propogates OLE Errors </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q129941">
<META NAME="KBModify" CONTENT="1995/10/30">
<META NAME="KBCreate" CONTENT="1995/05/08">
<META NAME="Keywords" CONTENT="kbprg kbole kbcode kbprb">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  When creating OLE Servers, you often need to propagate errors specific to the OLE Server back to the client application by using the Raise method. The valid range of Error numbers is 0 - 65535, including those defined by Visual Basic. While there i...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB4,QAAP,QBS0,QAPN,QAH4,QA9Q,QANE,QAKC,QAKP,QBJZ,QAYV,QAKD,QABB,QBC6,QABA V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB:Unexpected Results When Raise Method Propogates OLE Errors</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 30, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q129941</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Standard, Professional, and Enterprise Editions of Microsoft
   Visual Basic, 16-bit and 32-bit, for Windows, version 4.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When creating OLE Servers, you often need to propagate errors specific to
the OLE Server back to the client application by using the Raise method.
The valid range of Error numbers is 0 - 65535, including those defined by
Visual Basic. While there is a constant (vbObjectError) from which all OLE
Server errors can start, unexpected results can occur when errors are
raised between vbObjectError and vbObjectError + 512.
<P>
<P><h2>CAUSE</h2>
 
<P>
Visual Basic remaps some error messages between vbObjectError and
vbObjectError + 512 to standard run-time errors, which can result in
unexpected behavior if user-defined error numbers are not greater then
vbObjectError + 512.
<P>
Because some error numbers are re-mapped by Visual Basic to standard OLE
Automation run-time errors, error trapping code that relies on values
between vbObjectError and vbObjectError + 512 are never be executed.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Below is sample OLE Server that correctly uses the Raise method to generate
a user-defined error &gt; vbObjectError + 512.
<P>
<P><h3>Step-by-Step Example</h3>
 

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Add a command button (Command1) to Form1.

<P><LI>Add the following code to the Command1_Click procedure:
<P>
<PRE>   Sub Command1_Click()
      On Error GoTo errhand

      Dim clsClass1 As New Class1
      clsClass1.Prop1 = -4        ' Set property to invalid value
      Exit Sub

   errhand:
      If Err.Number &gt; vbObjectError Then
         MsgBox prompt:="User Defined OLE Automation Error (" &amp; _
         CStr(Err.Number - vbObjectError) &amp; "):" &amp; _
         Chr$(13) &amp; Chr$(10) &amp; Err.Description, _
         Buttons:=vbExclamation, Title:=Err.Source
      Else
         MsgBox prompt:=Err.Description, Buttons:=vbExclamation
      End If
   End Sub

</PRE><P><LI>Insert a Class Module by choosing Class Module from the Insert Menu
   (ALT, I, C). Class1 is assigned to the Name property by default.

<P><LI>Add the following code to the Class1:
<P>
   Property Let Prop1(vntValue)
<P><PRE>      If vntValue &lt; 0 Then
<PRE></PRE>         ' Note the Error Number is &gt; the vbObjectError + 512
         Err.Raise Number:=vbObjectError + 1000, Source:="Class1", _
         Description:="Invalid Property Value (Valid Values are 0 - 65535)"
         ' Note "Invalid Property Value (Valid Values are 0 - 65535)" is a
         ' custom error message
      End If
   End Property

</PRE><P><LI>Change the Error Trapping option to Break on Unhandled Errors by
   choosing Options form the Tools menu and selecting the Advanced Tab.
<P>
   This allows the error to be trapped in code, instead of the debuger
   stopping on the Raise Method within the Property Procedure in Class1.

<P><LI>Press the F5 key to run the program.

<P><LI>Click the Command1 button. A Message Box appears indicating a
   user-defined OLE Automation error has occured.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 vb4win vb4all<BR>
KBCategory: kbprg kbole kbcode kbprb<BR>
KBSubcategory: IAPOLE PrgOther<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 30, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
