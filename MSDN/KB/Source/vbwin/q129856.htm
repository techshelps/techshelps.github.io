

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Use DAO GetRows Method to Fill Variant Arrays </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q129856">
<META NAME="KBModify" CONTENT="1997/10/10">
<META NAME="KBCreate" CONTENT="1995/05/08">
<META NAME="Keywords" CONTENT="APrgData kbcode kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  This article summarizes how to use the GetRows method in Visual Basic version 4.0.  The GetRows method was added to the RecordSet object to facilitate testing from Visual Basic of a lower-level C/C++ GetRows method that will be used by Visual C++ d...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QA5V,QAUD,QAPN,QALW,QAKC,QBC6,QAY4,QAG1,QBCF,QA7O,QA7N,QAH4,QAG8,QAGI V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Use DAO GetRows Method to Fill Variant Arrays</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q129856</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
4.00
WINDOWS
kbprg kbcode
<P>
 
The information in this article applies to:

<UL><LI>Professional and Enterprise Editions of Microsoft Visual Basic,
   16-bit and 32-bit, for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article summarizes how to use the GetRows method in Visual Basic
version 4.0.
<P>
The GetRows method was added to the RecordSet object to facilitate testing
from Visual Basic of a lower-level C/C++ GetRows method that will be used
by Visual C++ developers. It was later found to be generally useful in many
places. This function is not documented in the Visual Basic Help file or
the manuals, but can be found by using the Object Browser under the
RecordSet object. It is described in the ReadMe file included with Visual
Basic version 4.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The GetRows method retrieves multiple rows of a recordset into an array.
Here is the syntax:
<P>
<PRE>   variant = recordset.GetRows (numrows)

    - variant is the name of a variant to hold the returned data.
    - numrows is the number of rows to retrieve.

</PRE>GetRows returns the specified number of rows and all the fields (columns)
into a variant containing an array. Subsequent rows contain the data.
<P>
After a call to GetRows, the current record is positioned at the next
unread row. In other words, GetRows has the same positioning effect as Move
numrows.
<P>
If more rows are requested than are available, only the number available
are returned. Use Ubound to determine how many rows were actually fetched.
The array is sized to fit the number of rows returned.
<P>
For example, if you returned the results into a variant called a, you could
use the following code to determine how many rows were actually returned:
<P>
<PRE>   numreturned = Ubound(a,2) + 1

</PRE>The "+ 1" is used because the first data returned is in the zero (0)
element of the array.
<P>
The number of rows that can be fetched is constrained by available memory
and should be chosen to suit your application. Don't expect to use GetRows
to bring your whole table into an array.
<P>
Because all fields of the recordset are returned in the array, including
long memo and binary fields, you may want to use a query that restricts the
columns returned.
<P>
<P><h3>Code Sample</h3>
 
<P>
<PRE>' This example uses the GetRows method to bring two fields
' from the Orders table into memory.

</PRE>Dim db as Database
Dim rs as Recordset
Dim data as Variant
<P>
Set db = OpenDatabase("sales.mdb")
Set rs = db.OpenRecordset("Select OrderId, CustId from Orders")
<P>
While Not rs.eof
<PRE>   data = rs.GetRows(10)
   ' .... do something with the data
</PRE>Wend
<P>
rs.Close
db.Close
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 Excel vb4win vb4all<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: APrgData<BR>
Keywords          : APrgData kbcode kbprg<BR>
Version           : 4.00<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
