

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: OLE Control Updated Event Fired in Endless Loop </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q149034">
<META NAME="KBModify" CONTENT="1996/04/02">
<META NAME="KBCreate" CONTENT="1996/03/26">
<META NAME="Keywords" CONTENT="kbprg kbbuglist">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Interrupting normal execution in the Updated event of an OLE control can cause the Updated event to be fired repeatedly, in an endless loop. Displaying a modal form such as a dialog box causes this problem, as well as stepping through the code in d...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QAPN,QBWS,QAO4,QBS0,QBD2,QAXB,QAIJ,QAFF,QAVX,QA9Q,QA7O,QAVW,QAOE,QAMN V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: OLE Control Updated Event Fired in Endless Loop</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 2, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q149034</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Standard, Professional, and Enterprise Editions of Microsoft Visual
   Basic, 16-bit and 32-bit, for Windows, version 4.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Interrupting normal execution in the Updated event of an OLE control can
cause the Updated event to be fired repeatedly, in an endless loop.
Displaying a modal form such as a dialog box causes this problem, as well
as stepping through the code in debug mode. Execution does not happen in a
normal fashion in both of these cases.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
Although the code cannot be run in debug mode it does run correctly as a
compiled executable provided no modal forms are shown in the Updated event.
To show a modal form in response to an Updated event, you can enable a
timer control in the Updated event and then have the Timer's Timer event
show the form. For example:
<P>
<PRE>   Private Sub OLE1_Updated(Code As Integer)
      Timer1.Enabled = True
   End Sub

   Private Sub Timer1_Timer()
      Timer1.Enabled = False
      MyForm.Show vbModal
   End Sub

</PRE><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be an issue in the Microsoft products
listed at the beginning of this article. Microsoft is researching this
problem and will post new information here in the Microsoft Knowledge Base
as it becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps To Reproduce Issue</h3>
 

<OL><P><LI>Start Visual Basic 4.0. Form1 is created by default.

<P><LI>Add a single OLE control to the form. When prompted to insert an object
   choose a Microsoft Excel worksheet or Microsoft Word document. The
   problem can occur using other objects also.

<P><LI>Add this code to the form:
<P>
<P><PRE>      Private Sub Form_Click()
<PRE></PRE>          Dim i As Integer

          i = FreeFile
          Open "test.ole" For Binary As i
          OLE1.SaveToFile i
          Close i
      End Sub

</PRE><P><LI>Press F5 or click Start on the Run menu to run the application. Click
   once on the form to save the object to a file called Test.ole.

<P><LI>Start another instance of Visual Basic 4.0. Form1 is again created by
   default.

<P><LI>Add an OLE control to Form1. Click Cancel when prompted with the Insert
   Object dialog.

<P><LI>Add this code to the form:
<P>
<P><PRE>      Option Explicit
</PRE><P>
<P><PRE>      Private Sub Form_Click()
<PRE></PRE>          Dim i As Integer

          Open "test.ole" For Binary As i
          OLE1.ReadFromFile i
          Close i

          OLE1.DoVerb vbOLEShow
      End Sub

      Private Sub OLE1_Updated(Code As Integer)
          Debug.Print "Updated fired: " &amp; Code
      End Sub

</PRE><P><LI>Press F5 or click Start on the Run menu to run the application. Click
   once on the form and see that the program runs fine. Now stop the
   application and press F8 to start the program in step mode. Click once
   on the form and step through the code loading the OLE object and into
   the Updated event. Keep stepping through the code and notice that the
   Updated event is fired continually.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbbuglist kbprg<BR>
KBSubcategory: IAPOLE<BR>
Additional reference words: 4.00 vb4win vb4all buglist4.00
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 2, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
