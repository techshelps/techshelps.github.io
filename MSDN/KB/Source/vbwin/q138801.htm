

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Adjust FontSize at Run Time for Different Video Drivers </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q138801">
<META NAME="KBModify" CONTENT="1995/10/30">
<META NAME="KBCreate" CONTENT="1995/10/29">
<META NAME="Keywords" CONTENT="kbprg kbcode kbdisplay kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Text on controls and labels may have a different size or appearance at run time depending on the video device and driver. For example, many video drivers have a large-fonts option and a small-fonts option. This article describes how to automaticall...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAMB,QANO,QAC2,QBC9,QBC8,QADF,QAU4,QAVS,QBS0,QAU3,QAMR,QAII,QAPN,QAB5,QAPF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Adjust FontSize at Run Time for Different Video Drivers</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 30, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q138801</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Professional and Enterprise Editions of Microsoft Visual Basic,
   16-bit only, for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Text on controls and labels may have a different size or appearance at run
time depending on the video device and driver. For example, many video
drivers have a large-fonts option and a small-fonts option. This article
describes how to automatically adjust text at run time to fit the design-
time label size, independent of the video driver.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Predicting how fonts will appear on different display devices is not easy.
However, you can calibrate the appropriate FontSize to use at run time
by using the following example. This example adjusts the form's FontSize so
that a particular label caption fits best inside its width. The label's
width can be set at design time to adjust how big the fonts ought to appear
at run time. This example assumes a True Type FontName setting, which can
be set to almost any size needed.
<P>
<P><h3>Step-by-Step Example</h3>
 

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Place a label (Label1) on form1.

<P><LI>Add the following code to the form's Load event:
<P>
<PRE>   Private Sub Form_Load ()

      ' This procedure determines the appropriate FontSize to display
      ' text in a label that was sized at design time.

      Const SMALLESTFONTSIZE = 3  'Enter smallest available font size

      ' 1. Assign the FontName properties of the label to the Form:
      '    use Me (a reserved word describing the current form) instead of
      '    the name of the label control because you are comparing sizes
      '    using the TextWidth property. TextWidth returns the width as if
      '    it was printed directly on an object (the form). The TextWidth
      '    property does not apply to controls.
      Me.FontName = Label1.FontName
      Me.FontSize = Label1.FontSize

      ' 2. Increase FontSize until Caption is too wide too fit in label:
      i = Me.FontSize
      Do Until Me.TextWidth(Label1.Caption) &gt;= Label1.Width
         i = i + 1
         Me.FontSize = i
         'Debug.Print Me.FontSize
      Loop

      ' 3. Decrease FontSize until Caption fits width-wise in label.
      '    NOTE: If the fontsize becomes less than SMALLESTFONTSIZE below,
      '    the Caption is too big for the current label size, even with
      '    the smallest available fontsize.

      i = Me.FontSize
      Do Until Me.TextWidth(Label1.Caption) &lt;= Label1.Width
         i = i - 1
         If i &lt; SMALLESTFONTSIZE Then
            MsgBox "Caption width truncated to fit label - smallest font."
            Exit Sub
         End If
         Me.FontSize = i
         'Debug.Print "width:" &amp; i; Me.FontSize
      Loop

      ' 4. Decrease FontSize until Caption fits height-wise in label:
      i = Me.FontSize
      Do Until Me.TextHeight(Label1.Caption) &lt;= Label1.Height
         i = i - 1
         If i &lt; SMALLESTFONTSIZE Then
            MsgBox "Caption height truncated to fit label - smallest font."
            Exit Sub
         End If
         Me.FontSize = i
         'Debug.Print "height" &amp; i; Me.FontSize
      Loop

      ' 5. Assign Font properties from the Form back to the label:
      Label1.FontName = Me.FontName
      Label1.FontSize = Me.FontSize

   End Sub

</PRE></OL>If you need several different font sizes, set up a label to calibrate each
font size needed. The labels used to make this adjustment do not have to be
visible. Optionally, you can set the Visible property to False.
<P>
You can also have the program size label controls depending on the
Screen.Height and Screen.Width properties at run time. Once you determine
the correct size of the label, size the text inside the label.
<P>
<P><h3>Example of How Fonts May Differ on Different Hardware</h3>
 
<P>
You can call Windows API functions to obtain the enumerated FontSize list.
This is useful to know for fixed, non-TrueType fonts. Visual Basic also
offers font properties (Fonts, FontName, FontSize, and FontCount) to
determine font information.
<P>
The enumerated FontSize list for non-TrueType fonts may vary from one
screen resolution to another. This can happen because the number of
logical pixels per inch can vary between resolutions. This means that
the number of points per pixel can also vary. The point size of a font
is adjusted to the nearest pixel.
<P>
The point size on a screen is based on logical inches. Logical inches
are somewhat arbitrary because Windows has no way of really knowing
how big a pixel is on your screen. For example, you could be hooked up
to a projection TV or a tiny monitor. Usually the logical inch is
overly large; tiny text is often difficult to read on a video display.
<P>
Because the point size is based on the logical pixels per inch of a
device, not all point sizes can be represented. For example, on a
standard VGA, Windows will tell you that the device has 96 pixels per
logical inch (according to the Windows API GetDeviceCaps(hDC, LOGPIXELSY)
function). A 96-pixel tall glyph is 72 points because each point is about
1/72 of an inch. This means each pixel is 72/96 point or 0.75 point per
pixel. The system could theoretically represent fonts of the following
heights:
<P>
<PRE>   1 pixel = 0.75 point
   2 pixels = 1.50 point
   3 pixels = 2.25 point
   4 pixels = 3.00 point

</PRE>Rounding errors are unavoidable in this scheme. Even if the device
displayed exactly 96 dots per inch (DPI), it could not represent a font
that was exactly 2 points. The closest it could come would be 2.25 points.
Usually, this small difference is not noticeable. However, if two screen
drivers have different logical pixels-per-inch, you might see different
point sizes in the enumerated list in Windows.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 vb4win vb416<BR>
KBCategory: kbprg kbcode kbdisplay kbhowto<BR>
KBSubcategory: PrgCtrlsStd<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 30, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
