

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: DCOMCNFG Reports Multiple Copies of DCOM Server </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q180525">
<META NAME="KBModify" CONTENT="1998/02/05">
<META NAME="KBCreate" CONTENT="1998/02/04">
<META NAME="Keywords" CONTENT="vb5all">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  When running DCOMCNFG.EXE to configure your DCOM server, you find several copies of your server on the Applications tab that have been indexed using a number in parenthesis:     MyServer.MyClass(1)    MyServer.MyClass(2)    ...  Only one of these e...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAKD,QBWS,QA2Q,QA9N,QAY2,QAEF,QABI,QAGB,QAG2,QBS0,QBJZ,QASR,QAGC,QAJN,QABA V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: DCOMCNFG Reports Multiple Copies of DCOM Server</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 5, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q180525</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Control Creation, Learning, Professional, and
   Enterprise Editions for Windows, version 5.0
   on the following platforms: NT, Win95
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When running DCOMCNFG.EXE to configure your DCOM server, you find several
copies of your server on the Applications tab that have been indexed using
a number in parenthesis:
<P>
<PRE>   MyServer.MyClass(1)
   MyServer.MyClass(2)
   ...

</PRE>Only one of these entries will function correctly.
<P>
<P><h2>CAUSE</h2>
 
<P>
This is caused by an AppID registry key that is left over from a previous
build of the server project. This key did not get removed from the server
machines registry when the server was either unregistered using
REGSVR32.EXE and CLIREG32.EXE, or when a new build of the server was
created without having binary compatibility setup for the server project,
thus creating a new set of registry keys and leaving an extra copy of the
AppID key structure.
<P>
DCOMCNFG.EXE uses the AppID keys to determine if a registered class is
available as a remote component. If more than one AppID key is present for
the same server, then DCOMCNFG.EXE will display them all on the
Applications tab as available remote components. Only one of the listed
server entries will work correctly because the rest of the entries are
missing the key structure required for remote component creation.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
IMPORTANT: This article contains information about editing the registry.
Before you edit the registry, make sure you understand how to restore it if
a problem occurs. For information about how to do this, view the "Restoring
the Registry" Help topic in Regedit.exe or the "Restoring a Registry Key"
Help topic in Regedt32.exe.
<P>
<P><h3>To Resolve the Issue if the Problem Has Occurred</h3>
 
<P>
You will need to remove the extra AppID keys from the server machines
registry manually using Registry Editor (Regedit.exe).
<P>
WARNING: Using Registry Editor incorrectly can cause serious problems that
may require you to reinstall your operating system. Microsoft cannot
guarantee that problems resulting from the incorrect use of Registry Editor
can be solved. Use Registry Editor at your own risk.
<P>
For information about how to edit the registry, view the "Changing Keys And
Values" Help topic in Registry Editor (Regedit.exe) or the "Add and Delete
Information in the Registry" and "Edit Registry Data" Help topics in
Regedt32.exe. Note that you should back up the registry before you edit it.

<OL><P><LI>Start REGEDIT.EXE and locate the following key for your server:
<P>
<P><PRE>      HKEY_CLASSES_ROOT\AppID\&lt;YourServer.exe&gt;
</PRE>
<P><LI>Select the AppID value in the right-hand pane. It should resemble a
   standard class id (such as {1A113664-5B4D-11D1-A3F5-00AA00B7B36F}).

<P><LI>Right-click the AppID value, and then select "Modify" from the shortcut
   menu. The value should appear selected in an Edit String dialog box.

<P><LI>Press the key combination CTRL+C to copy this value to the clipboard.
   NOTE: Also record this value to another place for use in step 19.

<P><LI>Click the Cancel button in the Edit String dialog box.

<P><LI>Scroll the left pane in RegEdit back to the top and select
   HKEY_CLASSES_ROOT.

<P><LI>From the Edit menu, select Find (CTRL+F) to open the Find dialog box.

<P><LI>Press the key combination CTRL+V to paste the value from above into
   the Find dialog's text box.

<P><LI>Click the Find Next button.

<P><LI>You should now see this value selected as an open key under the AppID
   section of HKEY_CLASSES_ROOT. The default value for this key should
   be the name of your server's first class.
<P>
   NOTE: If you do not see this value in the AppID section of
   HKEY_CLASSES_ROOT, then close REDEDIT.EXE and proceed to the
   section titled "To Avoid This Issue in the Future" later in this
   article.
<P>
   The AppID selected is the valid AppID that you will want to keep. Make a
   note of the values listed in this key for a comparison with the invalid
   AppID keys you will find in the following steps. Typical entries for
   this key are AccessPermission, LaunchPermission, and RunAS.

<P><LI>Select the default value in the right-hand pane. It should be the
   name of the first class in your server.

<P><LI>Right-click the default value, and then select "Modify" from the
   shortcut menu. The value should appear selected in an Edit String dialog
   box.

<P><LI>Press the key combination CTRL+C to copy this value to the clipboard.

<P><LI>Click the Cancel button in the Edit String dialog box.

<P><LI>Scroll the left pane back to the top of the AppID section and click
   on AppID in the left pane (HKEY_CLASSES_ROOT\AppID).

<P><LI>From the Edit menu, select Find (CTRL+F) to open the Find dialog box.

<P><LI>Press the key combination CTRL+V to paste the value from step 13 into
   the Find dialog's text box.
<P>
   WARNING: This is where you need to be very careful. You are going to
   delete all occurrences of this value in the AppID section that do not
   match the AppID recorded in step 4. Make absolutely certain that any
   entries you delete containing this name are limited to the AppID section
   of HKEY_CLASSES_ROOT. As an extra precaution, you may want to Export
   each registry key before deleting. For more information on Exporting
   registry keys, see the Online documentation for RegEdit.Exe.

<P><LI>Click the Find Next button. If the search takes you out of the AppID
   section of HKEY_CLASSES_ROOT, then proceed to Step 21.

<P><LI>If you find an entry in the AppID section of HKEY_CLASSES_ROOT, whose
   default value is the name of your server's first class, and it does
   not match the AppID value recorded in step 4, then delete the key by
   selecting Delete from the Edit menu.
<P>
   NOTE: These invalid AppID keys are usually missing their RunAS value.

<P><LI>Repeat steps 18 and 19 until the only entry left in the AppID section,
   with a default value matching the value obtained in step 13, is the
   value obtained in step 4.

<P><LI>Close Registry Editor and run DCOMCNFG.EXE.

<P><LI>You should now see only one instance of your server on the
   Applications tab.
<P>
</OL><h3>To Avoid This Issue in the Future</h3>
 
<P>
Set up your server project to use binary compatibility.

<OL><P><LI>After you have built your server project the first time, immediately
   create a new folder in the project folder named "Compat" or something
   meaningful to you.

<P><LI>Copy the EXE that you just created to this new folder, leaving the
   original in the build folder.

<P><LI>Open the Projects Properties dialog and select the Component tab.

<P><LI>Check the binary compatibility option and browse to the new copy of
   the EXE in the Compat folder.

<P><LI>Make sure you compile all future builds to the project folder, not
   to the Compat folder which is storing the original .exe, to maintain
   binary compatibility.

<P><LI>If you must break binary compatibility (changing an existing interface)
   then Visual Basic will create a new GUID for the project, creating a new
   set of registry keys, thus leaving the old build showing in
   DCOMCNFG.EXE.

<P><LI>You should unregister the existing server BEFORE compiling the
   incompatible build. You can unregister the server .exe using the
   following commands at the Command Prompt or in the Windows Run dialog:
<P>
<P><PRE>      REGSVR32.exe /u &lt;yourDCOMserver.exe&gt;"
</PRE><P>
<P><PRE>      -and-
</PRE><P>
<P><PRE>      CLIREG32.exe /u &lt;yourDCOMserver.vbr&gt;"
</PRE><P>
   NOTE: You will still see the old server in DCOMCNFG.exe. Please refer to
   the above section for information regarding removing the old server from
   the list of applications in DCOMCNFG.EXE.
<P>
</OL><h2>STATUS</h2>
 
<P>
Microsoft is researching this problem and will post new information here in
the Microsoft Knowledge Base as it becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 

<OL><P><LI>Open an existing DCOM server project in Visual Basic 5.0.

<P><LI>From the Project menu, select the Projects Properties. On the
   Component tab, select "No compatibility."

<P><LI>Rebuild the server project into a new .exe.

<P><LI>Run DCOMCNFG.EXE. You will see a second copy of your server on the
   Applications tab with a number in parenthesis appended to the end of the
   class name. This entry will have only two tabs when you select its
   properties instead of the usual four tabs. These entries can be
   left here safely, just make sure that you configure the one with all
   four tabs.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information regarding project compatibility, see the following
article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../VBWIN/Q161137.htm">Q161137</A></B>
   TITLE     : HOWTO: Use Project and Binary Compatibility

</PRE></OL>(c) Microsoft Corporation 1998, All Rights Reserved.
Contributions by Randy Russell, Microsoft Corporation
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: DCOM95, DCOM, DCOMCNFG.EXE<BR>
Keywords          : vb5all<BR>
Technology        : dcom<BR>
Version           : WINDOWS:5.0<BR>
Platform          : NT Win95 WINDOWS<BR>
Issue type        : kbprb<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 5, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
