

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Get a Long Filename from a Short Filename </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q154822">
<META NAME="KBModify" CONTENT="1997/07/14">
<META NAME="KBCreate" CONTENT="1996/08/15">
<META NAME="Keywords" CONTENT="PrgOther vb432 vb4win kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  The Dir() function can be used to return a long filename but it does not include path information. By parsing a given short path/filename into its constituent directories, you can use the Dir() function to build a long path/filename. This article d...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QA2S,QAY5,QAIJ,QBS0,QAFI,QA6E,QAY2,QBV8,QAB9,QATX,QDIV,QBWS,QBFM,QAH6 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Get a Long Filename from a Short Filename</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 14, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q154822</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Standard, Professional, and Enterprise Editions of Microsoft
   Visual Basic, 32-bit only, for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The Dir() function can be used to return a long filename but it does not
include path information. By parsing a given short path/filename into its
constituent directories, you can use the Dir() function to build a long
path/filename. This article demonstrates how to accomplish this behavior.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following code example includes a function that will convert short
filenames into their long filename equivalents and also includes a simple
demonstration of the function's use.
<P>
<P><h3>Step-by-Step Example</h3>
 

<OL><P><LI>Start Visual Basic. Form1 is created by default.

<P><LI>Place a Command button onto Form1.

<P><LI>From the Insert menu, select Module to add a single code module to
   the project.

<P><LI>Add the following code to Module1:
<P>
   Public Function GetLongFilename _
<P><PRE>     (ByVal sShortName As String) _
     As String
</PRE><P>
<P><PRE>     Dim sLongName As String
     Dim sTemp As String
     Dim iSlashPos As Integer
</PRE><P>
<P><PRE>     'Add \ to short name to prevent Instr from failing
     sShortName = sShortName &amp; "\"
</PRE><P>
<P><PRE>     'Start from 4 to ignore the "[Drive Letter]:\" characters
     iSlashPos = InStr(4, sShortName, "\")
</PRE><P>
<P><PRE>     'Pull out each string between \ character for conversion
     While iSlashPos
       sTemp = Dir(Left$(sShortName, iSlashPos - 1), _
<PRE></PRE>         vbNormal + vbHidden +    vbSystem + vbDirectory)
       If sTemp = "" Then
         'Error 52 - Bad File Name or Number
         GetLongFilename = ""
         Exit Function
       End If
       sLongName = sLongName &amp; "\" &amp; sTemp
       iSlashPos = InStr(iSlashPos + 1, sShortName, "\")
     Wend

     'Prefix with the drive letter
     GetLongFilename = Left$(sShortName, 2) &amp; sLongName

   End Function

</PRE><P><LI>Add the following to the Command1_Click event:
<P>
<PRE>   Private Sub Command1_Click()

     'Assumes C:\Program Files\Common Files is a valid path
     Print GetLongFilename("C:\PROGRA~1\COMMON~1")

   End Sub

</PRE><P><LI>Choose Start from the Run menu, or press the F5 key to start.

<P><LI>Click the Command button.
<P>
</OL>If the path you have supplied is valid, the long equivalent will be
printed on the form. If it is not valid, nothing will print, in which case
you will need to supply a valid short filename in the Command1_Click event
code.
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : PrgOther vb432 vb4win kbhowto<BR>
Version             : 4.0<BR>
Platform            : NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 14, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
