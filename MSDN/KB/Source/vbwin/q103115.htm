

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB:Invalid picture Error Trying to Bind Picture Control in VB 3 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q103115">
<META NAME="KBModify" CONTENT="1995/07/19">
<META NAME="KBCreate" CONTENT="1993/08/18">
<META NAME="Keywords" CONTENT="kbprg kbcode kbprb">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  If you try to bind a picture control to a Microsoft Access database field that contains an OLE object such as a PaintBrush bitmap, you will correctly receive the error  Invalid picture.   CAUSE =====  This error occurs because the picture control c...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA7O,QAPN,QAMN,QA9Q,QBS0,QAYS,QAOE,QAB5,QA4Q,QA1S,QAW6,QANF,QA7N,QACJ,QAH4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB:Invalid picture Error Trying to Bind Picture Control in VB 3</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 19, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q103115</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Professional Edition of Microsoft Visual Basic for Windows, version 3.0
 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
If you try to bind a picture control to a Microsoft Access database field
that contains an OLE object such as a PaintBrush bitmap, you will
correctly receive the error "Invalid picture."
<P>
<P><h2>CAUSE</h2>
 
<P>
This error occurs because the picture control can only bind to a bitmap,
metafile, or icon stored in the database field -- not to an OLE object.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Using the method described below, you can simulate the binding of a picture
control to a PaintBrush OLE (or bitmap) object.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
If you use Microsoft Access to store a PaintBrush picture in an OLE
field, there is no way to bind any control provided with Visual Basic
version 3.0 to the OLE field. Ideally you could bind the MSOLE2
control to the data control, but no features were added to the MSOLE2
control to allow you to bind to a database field.
<P>
From Visual Basic, you can use a bound picture control to store and
retrieve bitmaps, metafiles, and icons directly in a long binary or OLE
database field. However, Microsoft Access will not be able to display
the bitmap, metafile, or icon that you've stored.
<P>
<P><h3>Step-by-Step Example</h3>
 
<P>
The following example demonstrate how you can create an application that
retrieves and displays a bitmap from an OLE field containing a PaintBrush
object. To get it to work, you need to have the NWIND.MDB sample database
provided with Microsoft Access.

<OL><P><LI>Start Visual Basic or from the File menu, choose New Project (ALT, F, N)
   if Visual Basic is already running. Form1 is created by default.

<P><LI>From the File menu, choose New Module (ALT, F, M). Module1 is created.

<P><LI>Add a picture control (Picture1) to Form1.

<P><LI>Add a data control (Data1) to Form1.

<P><LI>Set the Data1.Databasename property to NWIND.MDB and include the full
   path to this file. This file is a sample database that ships with
   Microsoft Access versions 1.0 and 1.1. Look for it in your Microsoft
   Access directory -- for example, C:\ACCESS.

<P><LI>Set the Data1.RecordSource property to Employees.

<P><LI>Add the following code to the Data1_Reposition event procedure in Form1:
<P>
<PRE>   '**********************************************************************
   '*  Title
   '*       Data1_Reposition ()
   '*
   '*  Description
   '*       Each time the data control is being repositioned to a new
   '*       record, the bitmap contained in the "Photo" is displayed
   '*       in Picture1. Therefore, it simulates binding the picture
   '*       control to an OLE field containing a Microsoft Paint Brush
   '*       picture object.
   '*
   '*       The code requires a field named Photo, and it requires that
   '*       the embedded OLE object be a Microsoft Paint Brush picture.
   '**********************************************************************
   Sub Data1_Reposition ()

      Screen.MousePointer = 11

      'Make sure this is the current record:
      If Not (Data1.Recordset.EOF And Data1.Recordset.BOF) Then

         'Change Photo to the name of the OLE field
         'for the record set you are using:
         DisplayOleBitmap Picture1, Data1.Recordset("Photo")

      End If

      Screen.MousePointer = 0

   End Sub

</PRE><P><LI>Add the following code to Module1:
<P>
<PRE>   '**********************************************************************
   '* OLEACCES.BAS
   '*
   '* general-declarations section
   '**********************************************************************
   Option Explicit

   Global Const LENGTH_FOR_SIZE = 4
   Global Const OBJECT_SIGNATURE = &amp;H1C15
   Global Const OBJECT_HEADER_SIZE = 20
   Global Const CHECKSUM_SIGNATURE = &amp;HFE05AD00
   Global Const CHECKSUM_STRING_SIZE = 4

   'PT : Window sizing information for object
   '     Used in OBJECTHEADER type
   Type PT
      Width As Integer
      Height As Integer
   End Type

   'OBJECTHEADER : Contains relevant information about object
   '
   Type OBJECTHEADER
      Signature As Integer         'Type signature (0x1c15)
      HeaderSize As Integer        'Size of header (sizeof(struct
                                   'OBJECTHEADER) + cchName +
                                   'cchClass)
      ObjectType As Long           'OLE Object type code (OT_STATIC,
                                   'OT_LINKED, OT_EMBEDDED)
      NameLen As Integer           'Count of characters in object
                                   'name (CchSz(szName) + 1)
      ClassLen As Integer          'Count of characters in class
                                   'name (CchSz(szClass) + 1)
      NameOffset As Integer        'Offset of object name in
                                   'structure (sizeof(OBJECTHEADER))
      ClassOffset As Integer       'Offset of class name in
                                   'structure (ibName + cchName)
      ObjectSize As PT             'Original size of object (see
                                   'code below for value)
      OleInfo As String * 256
   End Type

   Type OLEHEADER
      OleVersion As Long
      Format As Long
      OleInfo As String * 512
   End Type

   'Enter the following Declare statement as one, single line:
   Declare Function GetTempFileName Lib "Kernel" (ByVal cDriveLetter
      As Integer, ByVal lpPrefixString As String, ByVal wUnique As
      Integer, ByVal lpTempFileName As String) As Integer

   'Enter the following Declare statement as one, single line:
   Declare Sub hmemcpy Lib "Kernel" (dest As Any, source As Any,
      ByVal bytes As Long)

   '**********************************************************************
   '* Title
   '*      DisplayOleBitmap
   '*
   '* Description
   '*      Causes the OLE bitmap in the given data field to be
   '*      copied to a temporary file. The bitmap is then
   '*      displayed in the given picture.
   '*
   '* Parameters
   '*      ctlPict         Picture control in which to display the
   '*                      bitmap image
   '*      OleField        Database field containing the OLE
   '*                      embedded Microsoft Paint Brush bitmap
   '**********************************************************************
   Sub DisplayOleBitmap (ctlPict As Control, OleField As Field)

      Const DT_LONGBINARY = 11

      Dim r As Integer
      Dim Handle As Integer
      Dim OleFileName As String

      If OleField.Type = DT_LONGBINARY Then

         OleFileName = CopyOleBitmapToFile(OleField)

         If OleFileName &lt;&gt; "" Then

            'Display the bitmap:
            ctlPict.Picture = LoadPicture(OleFileName)

            'Delete the temporary file:
            Kill OleFileName

         End If

      End If

   End Sub

   '**********************************************************************
   '* Title
   '*      CopyOleBitmapToFile
   '*
   '* Description
   '*      Copies the bitmap contained in a OLE field to a file.
   '**********************************************************************
   Function CopyOleBitmapToFile (OleField As Field) As String

      Const BUFFER_SIZE = 8192

      Dim tempFileName As String
      Dim Handle As Integer
      Dim Buffer As String

      Dim BytesNeeded As Long

      Dim Buffers As Long
      Dim Remainder As Long

      Dim ObjHeader As OBJECTHEADER
      Dim sOleHeader As String

      Dim ObjectOffset As Long
      Dim BitmapOffset As Long
      Dim BitmapHeaderOffset As Integer

      Dim r As Integer
      Dim i As Long

      tempFileName = ""
      If OleField.FieldSize() &gt; OBJECT_HEADER_SIZE Then

         'Get the Microsoft Access OLE header:
         sOleHeader = OleField.GetChunk(0, OBJECT_HEADER_SIZE)
         hmemcpy ObjHeader, ByVal sOleHeader, OBJECT_HEADER_SIZE

         'Calculate the offset where the OLE object starts:
         ObjectOffset = ObjHeader.HeaderSize + 1

         'Get enough bytes after the OLE header so that we get the
         'bitmap header
         Buffer = OleField.GetChunk(ObjectOffset, 512)

         'Make sure the class of the object is a Paint Brush object
         If Mid(Buffer, 12, 6) = "PBrush" Then

            BitmapHeaderOffset = InStr(Buffer, "BM")

            If BitmapHeaderOffset &gt; 0 Then

               'Calculate the beginning of the bitmap:
               BitmapOffset = ObjectOffset + BitmapHeaderOffset -1

               'Calculate the size of the bitmap:
               'Enter the following BytesNeeded statement as a single line:
               BytesNeeded = OleField.FieldSize() - OBJECT_HEADER_SIZE -
                  BitmapHeaderOffset - CHECKSUM_STRING_SIZE + 1

               'Calculate the number of buffers needed to copy
               'the OLE object based on the bitmap size:
               Buffers = BytesNeeded \ BUFFER_SIZE
               Remainder = BytesNeeded Mod BUFFER_SIZE

               'Get a unique, temp filename:
               tempFileName = Space(255)
               r = GetTempFileName(0, "", -1, tempFileName)

               'Copy the bitmap to the temporary file chunk by chunk:
               Handle = FreeFile
               Open tempFileName For Binary As #Handle

               For i = 0 To Buffers - 1
                  'Enter the following Buffer statement as a single line:
                  Buffer = OleField.GetChunk(BitmapOffset + i *
                     BUFFER_SIZE, BUFFER_SIZE)
                  Put #Handle, , Buffer
               Next

               'Copy the remaining chunk of the bitmap to the file:
               'Enter the following Buffer statement as a single line:
               Buffer = OleField.GetChunk(BitmapOffset + Buffers *
                  BUFFER_SIZE, Remainder)
               Put #Handle, , Buffer

               Close #Handle

            End If

         End If

      End If

      CopyOleBitmapToFile = Trim(tempFileName)

   End Function

</PRE><P><LI>From the Run menu, choose Start (ALT, R, S) or press the F5 key to run
   the program.
<P>
</OL>You should see the photo of the first employee displayed in the picture
box. By clicking the directional arrows on the data control, you can view
the other employee photos.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00<BR>
KBCategory: kbprg kbcode kbprb<BR>
KBSubcategory: PrgCtrlsStd<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 19, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
