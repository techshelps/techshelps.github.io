

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Add and Remove Network Connections </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q173011">
<META NAME="KBModify" CONTENT="1997/08/23">
<META NAME="KBCreate" CONTENT="1997/08/22">
<META NAME="Keywords" CONTENT="vb432 VB4WIN vb5all kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  This article demonstrates how to programmatically create and remove network connections by using Windows API functions. The following example will add a connection to a network share and will disconnect from the same share.  MORE INFORMATION  NOTE:...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA0K,QAI5,QBG2,QATX,QAH4,QAVZ,QA3A,QAEF,QBS0,QA9N,QAAP,QAB4,QDL9,QBWQ,QBWO V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Add and Remove Network Connections</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 23, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q173011</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Control Creation, Learning, Professional, and
   Enterprise Editions for Windows, version 5.0
<LI>Microsoft Visual Basic Standard, Professional, and Enterprise Editions,
   32-bit only, for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article demonstrates how to programmatically create and remove network
connections by using Windows API functions. The following example will add
a connection to a network share and will disconnect from the same share.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
NOTE: This code only includes minimal error trapping. It only reports
success or failure of the API calls. Any production use of this code should
examine the values returned by the API functions and handle the errors
appropriately. The most common error constants are listed for this purpose.
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 

<OL><P><LI>Create a new Standard EXE project.

<P><LI>Add a module to the project.

<P><LI>Copy and paste the following Declares and Type into the module:
   (NOTE: If you add this to a Form module, make all entries Private.)
<P>
<P><PRE>      Declare Function WNetAddConnection2 Lib "mpr.dll" Alias _
      "WNetAddConnection2A" (lpNetResource As NETRESOURCE, _
      ByVal lpPassword As String, ByVal lpUserName As String, _
      ByVal dwFlags As Long) As Long
</PRE><P>
<P><PRE>      Declare Function WNetCancelConnection2 Lib "mpr.dll" Alias _
      "WNetCancelConnection2A" (ByVal lpName As String, _
      ByVal dwFlags As Long, ByVal fForce As Long) As Long
</PRE><P>
<P><PRE>      Type NETRESOURCE
<PRE></PRE>        dwScope As Long
        dwType As Long
        dwDisplayType As Long
        dwUsage As Long
        lpLocalName As String
        lpRemoteName As String
        lpComment As String
        lpProvider As String
      End Type

      Public Const NO_ERROR = 0
      Public Const CONNECT_UPDATE_PROFILE = &amp;H1
      ' The following includes all the constants defined for NETRESOURCE,
      ' not just the ones used in this example.
      Public Const RESOURCETYPE_DISK = &amp;H1
      Public Const RESOURCETYPE_PRINT = &amp;H2
      Public Const RESOURCETYPE_ANY = &amp;H0
      Public Const RESOURCE_CONNECTED = &amp;H1
      Public Const RESOURCE_REMEMBERED = &amp;H3
      Public Const RESOURCE_GLOBALNET = &amp;H2
      Public Const RESOURCEDISPLAYTYPE_DOMAIN = &amp;H1
      Public Const RESOURCEDISPLAYTYPE_GENERIC = &amp;H0
      Public Const RESOURCEDISPLAYTYPE_SERVER = &amp;H2
      Public Const RESOURCEDISPLAYTYPE_SHARE = &amp;H3
      Public Const RESOURCEUSAGE_CONNECTABLE = &amp;H1
      Public Const RESOURCEUSAGE_CONTAINER = &amp;H2
      ' Error Constants:
      Public Const ERROR_ACCESS_DENIED = 5&amp;
      Public Const ERROR_ALREADY_ASSIGNED = 85&amp;
      Public Const ERROR_BAD_DEV_TYPE = 66&amp;
      Public Const ERROR_BAD_DEVICE = 1200&amp;
      Public Const ERROR_BAD_NET_NAME = 67&amp;
      Public Const ERROR_BAD_PROFILE = 1206&amp;
      Public Const ERROR_BAD_PROVIDER = 1204&amp;
      Public Const ERROR_BUSY = 170&amp;
      Public Const ERROR_CANCELLED = 1223&amp;
      Public Const ERROR_CANNOT_OPEN_PROFILE = 1205&amp;
      Public Const ERROR_DEVICE_ALREADY_REMEMBERED = 1202&amp;
      Public Const ERROR_EXTENDED_ERROR = 1208&amp;
      Public Const ERROR_INVALID_PASSWORD = 86&amp;
      Public Const ERROR_NO_NET_OR_BAD_PATH = 1203&amp;

</PRE><P><LI>Add two CommandButtons to Form1. These will be Command1 and Command2
   by default.

<P><LI>Add the following code to Form1, substituting a valid share name for
   "\\ServerName\ShareName":
<P>
<P><PRE>      Option Explicit
</PRE><P>
<P><PRE>      Private Sub Command1_Click()
      Dim NetR As NETRESOURCE
      Dim ErrInfo As Long
      Dim MyPass, MyUser As String
</PRE><P>
<P><PRE>      NetR.dwScope = RESOURCE_GLOBALNET
      NetR.dwType = RESOURCETYPE_DISK
      NetR.dwDisplayType = RESOURCEDISPLAYTYPE_SHARE
      NetR.dwUsage = RESOURCEUSAGE_CONNECTABLE
      NetR.lpLocalName = "X:" ' If undefined, Connect with no device
<PRE></PRE>      NetR.lpRemoteName = "\\ServerName\ShareName"   ' Your valid share
      'NetR.lpComment = "Optional Comment"
      'NetR.lpProvider =    ' Leave this undefined

      ' If the UserName and Password arguments are NULL, the user context
      ' for the process provides the default user name.
      ErrInfo = WNetAddConnection2(NetR, MyPass, MyUser, _
      CONNECT_UPDATE_PROFILE)
      If ErrInfo = NO_ERROR Then
        MsgBox "Net Connection Successful!", vbInformation, _
        "Share Connected"
      Else
        MsgBox "ERROR: " &amp; ErrInfo &amp; " - Net Connection Failed!", _
        vbExclamation, "Share not Connected"
      End If
      End Sub

      Private Sub Command2_Click()
      Dim ErrInfo As Long
      Dim strLocalName As String

      ' You may specify either the lpRemoteName or lpLocalName
      'strLocalName = "\\ServerName\ShareName"
      strLocalName = "X:"
      ErrInfo = WNetCancelConnection2(strLocalName, _
      CONNECT_UPDATE_PROFILE, False)
      If ErrInfo = NO_ERROR Then
        MsgBox "Net Disconnection Successful!", vbInformation, _
        "Share Disconnected"
      Else
        MsgBox "ERROR: " &amp; ErrInfo &amp; " - Net Disconnection Failed!", _
        vbExclamation, "Share not Disconnected"
      End If
      End Sub

</PRE></OL>Run the project and click on Command1. You will get a Message dialog
indicating success or failure. If successful, you should be able to look in
Windows Explorer and see the new connection (unless you left lpLocalName
undefined, in which case the connection does not show in Explorer). Click
Command2 and go to Explorer, where you should see that the connection has
been removed.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information, please Search on the following topics in either the
Win32 Programmer's Reference or The Microsoft Developer Network Library
CD-ROM:

<UL><LI>WNetAddConnection2
<LI>WNetCancelConnection2
<LI>NETRESOURCE
</UL> 
<PRE>Keywords          : vb432 VB4WIN vb5all kbhowto
Version           : WINDOWS:4.0,5.0
Platform          : WINDOWS
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 23, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
