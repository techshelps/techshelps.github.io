

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Rotate a Bitmap in VB for Windows </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q80406 ">
<META NAME="KBModify" CONTENT="1995/06/21">
<META NAME="KBCreate" CONTENT="1992/01/28">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  This article contains a program example that uses Visual Basic for Windows statements and functions to rotate a bitmap.  MORE INFORMATION  Steps to Create Example Program   1. Run Visual Basic for Windows, or from the File menu, choose New     Proj...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QANF,QA4Q,QACI,QAYS,QAPN,QAE5,QAH4,QDL9,QBWQ,QBWO,QBWN,QBHU,QBHT,QAIV V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Rotate a Bitmap in VB for Windows</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 21, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q80406 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Microsoft Visual Basic Programming System for Windows,
<PRE>  versions 1.0, 2.0, and 3.0
</PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article contains a program example that uses Visual Basic for
Windows statements and functions to rotate a bitmap.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Create Example Program</h3>
 

<OL><P><LI>Run Visual Basic for Windows, or from the File menu, choose New
    Project (ALT, F, N) if Visual Basic for Windows is already running.
    Form1 will be created by default.

<P><LI>Place two picture boxes named Picture1 and Picture2 on Form1. Assign
    a bitmap to the Picture property of Picture1.

<P><LI>Set the ScaleMode property of both picture boxes to 3 - Pixel.

<P><LI>Set the AutoSize property of Picture1 to True (-1).

<P><LI>Set the AutoRedraw property of Picture1 and Picture2 to True (-1).

<P><LI>Place a command button named Command1 on Form1.

<P><LI>Enter the following code in the Command1_Click event procedure:
<P>
     ' Example of how to call bmp_rotate.
     Sub Command1_Click ()
<PRE>         Const Pi = 3.14159265359

         For angle = Pi / 6 To 2 * Pi Step Pi / 6
            picture2.Cls
            Call bmp_rotate(picture1, picture2, angle)
         Next
     End Sub

</PRE><P><LI>Enter the following code in the general Declarations section:
<P>
     ' bmp_rotate(pic1, pic2, theta)
     ' Rotate the image in a picture box.
<PRE>     '   pic1 is the picture box with the bitmap to rotate
     '   pic2 is the picture box to receive the rotated bitmap
     '   theta is the angle of rotation
     '
     Sub bmp_rotate (pic1 As Control, pic2 As Control, ByVal theta!)
       Const Pi = 3.14159265359
       Dim c1x As Integer  ' Center of pic1.
       Dim c1y As Integer  '   "
       Dim c2x As Integer  ' Center of pic2.
       Dim c2y As Integer  '   "
       Dim a As Single     ' Angle of c2 to p2.
       Dim r As Integer    ' Radius from c2 to p2.
       Dim p1x As Integer  ' Position on pic1.
       Dim p1y As Integer  '   "
       Dim p2x As Integer  ' Position on pic2.
       Dim p2y As Integer  '   "
       Dim n As Integer    ' Max width or height of pic2.

       ' Compute the centers.
       c1x = pic1.scalewidth / 2
       c1y = pic1.scaleheight / 2
       c2x = pic2.scalewidth / 2
       c2y = pic2.scaleheight / 2

       ' Compute the image size.
       n = pic2.scalewidth
       If n &lt; pic2.scaleheight Then n = pic2.scaleheight
       n = n / 2 - 1
       ' For each pixel position on pic2.
       For p2x = 0 To n
          For p2y = 0 To n
             ' Compute polar coordinate of p2.
             If p2x = 0 Then
               a = Pi / 2
             Else
               a = Atn(p2y / p2x)
             End If
             r = Sqr(1&amp; * p2x * p2x + 1&amp; * p2y * p2y)

             ' Compute rotated position of p1.
             p1x = r * Cos(a + theta)
             p1y = r * Sin(a + theta)

             ' Copy pixels, 4 quadrants at once.
             c0&amp; = pic1.Point(c1x + p1x, c1y + p1y)
             c1&amp; = pic1.Point(c1x - p1x, c1y - p1y)
             c2&amp; = pic1.Point(c1x + p1y, c1y - p1x)
             c3&amp; = pic1.Point(c1x - p1y, c1y + p1x)
             If c0&amp; &lt;&gt; -1 Then pic2.PSet (c2x + p2x, c2y + p2y),c0&amp;
             If c1&amp; &lt;&gt; -1 Then pic2.PSet (c2x - p2x, c2y - p2y),c1&amp;
             If c2&amp; &lt;&gt; -1 Then pic2.PSet (c2x + p2y, c2y - p2x),c2&amp;
             If c3&amp; &lt;&gt; -1 Then pic2.PSet (c2x - p2y, c2y + p2x),c3&amp;
          Next
          ' Allow pending Windows messages to be processed.
          t% = DoEvents()
       Next
     End Sub

</PRE><P><LI>Assign a bitmap image to the Picture1 Picture property.

<P><LI>To start the program, press F5, then click the Command1 button. The
    program rotates the image of Picture1 by 30 degrees and places the
    rotated image in Picture2. It continues to draw the image rotated
    at successive multiples of 30 degrees until it has rotated the
    picture by 360 degrees.
<P>
</OL>To save the new bitmap created in Picture2, you can use the following
statement:
<P>
<PRE>   SavePicture Picture2.Image, "filename.bmp"
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: PrgCtrlsStd<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 21, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
