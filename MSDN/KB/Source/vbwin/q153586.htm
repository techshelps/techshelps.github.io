

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Call C Functions That Use the _cdecl Calling Convention </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q153586">
<META NAME="KBModify" CONTENT="1996/07/16">
<META NAME="KBCreate" CONTENT="1996/07/11">
<META NAME="Keywords" CONTENT="kbusage kbprg kbhowto kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  It is not possible to directly call a C function in a DLL if that function uses the _cdecl calling convention. This is because Visual Basic uses the _stdcall calling convention for calling functions. This is a problem because if _cdecl is used, the...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAGI,QAY5,QAIF,QBV8,QAB9,QBC7,QA5F,QAMA,QAH4,QDL9,QBWQ,QBWO,QBWN,QA3P V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Call C Functions That Use the _cdecl Calling Convention</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 16, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q153586</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Standard, Professional, and Enterprise Editions of Microsoft Visual
   Basic for Windows, 32-bit only, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
It is not possible to directly call a C function in a DLL if that function
uses the _cdecl calling convention. This is because Visual Basic uses the
_stdcall calling convention for calling functions. This is a problem
because if _cdecl is used, the calling function is responsible for cleaning
up the stack. However, if _stdcall is used, the called function is
responsible for cleaning up the stack.
<P>
NOTE: An .EXE file created in Visual Basic 4.0 will allow you to call a DLL
function that has been declared with the _cdecl calling convention without
an error. It is only when you try to call such a function when running a
program from the Visual Basic IDE, that Visual Basic generates the run-time
error 49: "Bad DLL Calling Convention." The fact that the EXE version
allows you to call such functions has been confirmed to be a bug by
Microsoft. You should not rely on this behavior as this might change in
future versions of Visual Basic.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
If it is necessary to call functions that use the _cdecl calling convention
(such as the MSTEST DLLs), wrap the _cdecl call inside a _stdcall call that
is exposed or exported to Visual Basic. This is demonstrated in the
following step-by-step example.
<P>
<P><h3>Step-by-Step Example</h3>
 

<OL><P><LI>Create a 32-bit Windows C DLL with the following functions:
<P>
<P><PRE>      long _cdecl PassStr(LPSTR pStr)
      {
       MessageBox (NULL, pStr, "Test DLL", MB_OK);
       return 1;
      }
</PRE><P>
<P><PRE>      long _stdcall PassStrStdCall(LPSTR pStr)
      {
       return PassStr(pStr);
      }
</PRE><P>
   Export the functions in a .DEF file as follows:
<P>
<PRE>      LIBRARY   TESTDLL

      CODE      PRELOAD MOVEABLE DISCARDABLE
      DATA      PRELOAD SINGLE

      EXPORTS
      PassStr            @1
      PassStrStdCall     @2

   Name this DLL Testdll.dll, and save the file to the Windows\System
   directory in Windows 95 or the Windows\System32 directory in Windows NT.

</PRE><P><LI>From Visual Basic 4.0 32-bit, open a new project, and add the following
   code to the general declarations portion of Form1:
<P>
<PRE>   Private Declare Function PassStrStdCall Lib "testdll.dll" _
                                (ByVal s As _ String) As Long

   Private Sub Form_Click()
      ret&amp; = PassStrStdCall("hello")
      Print ret&amp;
   End Sub

</PRE><P><LI>Run the Visual Basic program, and click the form. A Msgbox will show the
   value of the passed string.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 vb4win vb432 cdecl<BR>
KBCategory: kbusage kbprg kbhowto kbcode<BR>
KBSubcategory: APrgOther
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 16, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
