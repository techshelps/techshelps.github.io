

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Hyperlink in UserDocuments </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q177238">
<META NAME="KBModify" CONTENT="1997/11/25">
<META NAME="KBCreate" CONTENT="1997/11/24">
<META NAME="Keywords" CONTENT="vb5all vb5howto">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  This article illustrates how to use the hyperlink object from a UserDocument (Visual Basic Active Document) to navigate to another document. It demonstrates the following:  1. How to use the Hyperlink.NavigateTo.  2. How to use Parent.LocationURL. ...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAUD,QAML,QAE2,QAVZ,QAHT,QAY2,QAH4,QBS0,QBV9,QBFY,QAPN,QBVX,QALW,QATA,QBRJ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Hyperlink in UserDocuments</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 25, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q177238</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Control Creation, Professional, and Enterprise
   Editions for Windows, version 5.0
<LI>Microsoft Internet Explorer (Programming), versions 3.02, 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article illustrates how to use the hyperlink object from a
UserDocument (Visual Basic Active Document) to navigate to another
document. It demonstrates the following:

<OL><P><LI>How to use the Hyperlink.NavigateTo.

<P><LI>How to use Parent.LocationURL.

<P><LI>How to construct an absolute URL.

<P><LI>Why Parent.LocationName and App.Path are not suitable for this purpose.
<P>
</OL><h2>MORE INFORMATION</h2>
 
<P>
From your UserDocument, you can jump to other UserDocuments that are in
your application (Internal Jumping) or you can jump to other Web locations
or documents (External Jumping). In both cases, you use the Hyperlink
object's NavigateTo method and supply an absolute URL to where you want to
jump. For example, you can do the following from your UserDocument code:
<P>
<PRE>   Hyperlink.NavigateTo "<B><A HREF="http://www.microsoft.com">http://www.microsoft.com</A></B>"

</PRE></OL>This will cause Internet Explorer to navigate to the specified location.
You can also use this method for jumping to other UserDocuments in your
application.
<P>
Because you have to specify an absolute URL, using this approach for other
UserDocuments on a Web site requires extra work. You need to know the full
URL from which the document (.vbd) was launched. You can get this
information using Parent.LocationURL from your UserDocument code. The
location can be either a Web URL or a UNC file location name.
<P>
NOTE: You should use the Parent.LocationURL property for retrieving the
location of the UserDocument. Parent.LocationURL, unlike
Parent.LocationName, works identically in both Internet Explorer 3 and
Internet Explorer 4. In Internet Explorer 3, LocationName returns the
complete path just as LocationURL does. In Internet Explorer 4,
LocationName does not always return a complete path.
<P>
You should not use App.Path because it returns the location where your EXE
or DLL exists locally, not the location from where the VBD was downloaded.
<P>
<P><h3>Constructing an Absolute URL</h3>
 
<P>
As mentioned before, you need an absolute URL for Hyperlink.NavigateTo
method. This can be tricky for jumping to other UserDocuments in your
application because the UserDocuments can reside on a local (or network)
file or on a Web server. The following function takes the value returned by
Parent.LocationURL, strips off the filename, and returns a path string. You
can then append the name of any UserDocument that resides at the same base
URL as the current document to the path string, and use the final result to
call NavigateTo:
<P>
<PRE>   Function PathFromURL(iURL As String) As String
   'Returns the path of the given URL. Works for both files and Web URLs
   'the final / or \ is also returned so you can append your own filename
   '
   '<B><A HREF="http://www.microsoft.com/default.asp">http://www.microsoft.com/default.asp</A></B> -&gt; <B><A HREF="http://www.microsoft.com/">http://www.microsoft.com/</A></B>
   'c:\demos\doc1.vbd -&gt; c:\demos\

       Dim I As Integer
       Dim Last As Integer
       Dim C As String * 1

       For I = Len(iURL) To 1 Step -1
           C = Mid$(iURL, I, 1)
           If C = "\" Or C = "/" Then
               Last = I
               Exit For
           End If
       Next

       If Last &gt; 0 Then
           PathFromURL = Left$(iURL, Last)
       Else
           PathFromURL = ""
       End If
   End Function

</PRE>As an example, suppose you have a Doc1.VBD and a Doc2.VBD stored on a
server at <B>http://demo/hyperlink,</B> but you do not want to hardcode the server
name in your code so that these VBD files can be moved easily from one
server location to another. To jump from Doc1.vbd to Doc2.vbd, you can use
the above function as follows:
<P>
<PRE>   Hyperlink.NavigateTo PathFromURL(Parent.LocationURL) + "doc2.vbd"

</PRE>Because PathFromURL can work on both URLs and UNC, this technique will work
in both cases without changing code. Also, note that PathFromURL returns
the final / or \, so you simply need to append your .vbd file name.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: LocationName, LocationURL, Hyperlink<BR>
Keywords          : vb5all vb5howto<BR>
Version           : WINDOWS:3.02,4.0,5.0<BR>
Platform          : WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 25, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
